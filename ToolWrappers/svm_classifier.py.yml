!Command
command:
- svm_classifier.py
positional: []
named:
- !Flag
  description: "DEGREE -c C -cv CROSS_VALIDATION\n[-c_lower_bound C_LOWER_BOUND]\n\
    [-c_upper_bound C_UPPER_BOUND] -a A -b B -oc\nOUTCLASSIFICATION -oca OUTCLASSIFICATIONACCURACY\
    \ -op\nOUTPREDICTION -opa OUTPREDICTIONACCURACY"
  synonyms:
  - -ted
  - -g
  - -id
  - -k
  - -d
  args: !SimpleFlagArg
    name: TEST_DESIGN
  optional: true
- !Flag
  description: wide part of the train dataset.
  synonyms:
  - -trw
  - --train_wide
  args: !SimpleFlagArg
    name: TRAIN_WIDE
  optional: true
- !Flag
  description: design part of the train dataset.
  synonyms:
  - -trd
  - --train_design
  args: !SimpleFlagArg
    name: TRAIN_DESIGN
  optional: true
- !Flag
  description: wide part of the test dataset.
  synonyms:
  - -tew
  - --test_wide
  args: !SimpleFlagArg
    name: TEST_WIDE
  optional: true
- !Flag
  description: design part of the test dataset.
  synonyms:
  - -ted
  - --test_design
  args: !SimpleFlagArg
    name: TEST_DESIGN
  optional: true
- !Flag
  description: "Name of column in design file with Group/treatment\ninformation."
  synonyms:
  - -g
  - --group
  args: !SimpleFlagArg
    name: GROUP
  optional: true
- !Flag
  description: Name of the column with unique identifiers.
  synonyms:
  - -id
  - --ID
  args: !SimpleFlagArg
    name: UNIQID
  optional: true
- !Flag
  description: 'choice of kernel function: rbf, linear, poly, sigmoid.'
  synonyms:
  - -k
  - --kernel
  args: !SimpleFlagArg
    name: KERNEL
  optional: true
- !Flag
  description: (integer) degree for the polynomial kernel, default 3.
  synonyms:
  - -d
  - --degree
  args: !SimpleFlagArg
    name: DEGREE
  optional: true
- !Flag
  description: "positive regularization parameter. This parameter is\nignored when\
    \ -cv is single or double"
  synonyms:
  - -c
  - --C
  args: !SimpleFlagArg
    name: C
  optional: true
- !Flag
  description: "Choice of cross-validation procedure for the\nregularization parameter\
    \ -c determinantion: none,\nsingle, double."
  synonyms:
  - -cv
  - --cross_validation
  args: !SimpleFlagArg
    name: CROSS_VALIDATION
  optional: true
- !Flag
  description: "positive regularization parameter lower bound. Ignored\nif -cv is\
    \ none and -c is specified."
  synonyms:
  - -c_lower_bound
  - --C_lower_bound
  args: !SimpleFlagArg
    name: C_LOWER_BOUND
  optional: true
- !Flag
  description: "positive regularization parameter upper bound. Ignored\nif -cv is\
    \ none and -c is specified."
  synonyms:
  - -c_upper_bound
  - --C_upper_bound
  args: !SimpleFlagArg
    name: C_UPPER_BOUND
  optional: true
- !Flag
  description: positive coefficient in kernel function.
  synonyms:
  - -a
  - --a
  args: !SimpleFlagArg
    name: A
  optional: true
- !Flag
  description: independent term coefficient in kernel function.
  synonyms:
  - -b
  - --b
  args: !SimpleFlagArg
    name: B
  optional: true
- !Flag
  description: "Name of the output file to store classification\nperformed on the\
    \ traing data set. TSV format."
  synonyms:
  - -oc
  - --outClassification
  args: !SimpleFlagArg
    name: OUTCLASSIFICATION
  optional: true
- !Flag
  description: "Output classification accuracy value on the training\ndata set."
  synonyms:
  - -oca
  - --outClassificationAccuracy
  args: !SimpleFlagArg
    name: OUTCLASSIFICATIONACCURACY
  optional: true
- !Flag
  description: "Name of the output file to store prediction performed\non the target\
    \ data set. TSV format."
  synonyms:
  - -op
  - --outPrediction
  args: !SimpleFlagArg
    name: OUTPREDICTION
  optional: true
- !Flag
  description: "Output prediction accuracy value on the target data\nset.\n"
  synonyms:
  - -opa
  - --outPredictionAccuracy
  args: !SimpleFlagArg
    name: OUTPREDICTIONACCURACY
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: svm_classifier.py [-h] -trw TRAIN_WIDE -trd TRAIN_DESIGN -tew TEST_WIDE\n\
  \                         -ted TEST_DESIGN -g GROUP -id UNIQID -k KERNEL -d\n  \
  \                       DEGREE -c C -cv CROSS_VALIDATION\n                     \
  \    [-c_lower_bound C_LOWER_BOUND]\n                         [-c_upper_bound C_UPPER_BOUND]\
  \ -a A -b B -oc\n                         OUTCLASSIFICATION -oca OUTCLASSIFICATIONACCURACY\
  \ -op\n                         OUTPREDICTION -opa OUTPREDICTIONACCURACY\n\noptional\
  \ arguments:\n  -h, --help            show this help message and exit\n\n  Standard\
  \ Input\n\n  -trw TRAIN_WIDE, --train_wide TRAIN_WIDE\n                        wide\
  \ part of the train dataset.\n  -trd TRAIN_DESIGN, --train_design TRAIN_DESIGN\n\
  \                        design part of the train dataset.\n  -tew TEST_WIDE, --test_wide\
  \ TEST_WIDE\n                        wide part of the test dataset.\n  -ted TEST_DESIGN,\
  \ --test_design TEST_DESIGN\n                        design part of the test dataset.\n\
  \  -g GROUP, --group GROUP\n                        Name of column in design file\
  \ with Group/treatment\n                        information.\n  -id UNIQID, --ID\
  \ UNIQID\n                        Name of the column with unique identifiers.\n\n\
  \  Tool Input\n\n  -k KERNEL, --kernel KERNEL\n                        choice of\
  \ kernel function: rbf, linear, poly, sigmoid.\n  -d DEGREE, --degree DEGREE\n \
  \                       (integer) degree for the polynomial kernel, default 3.\n\
  \  -c C, --C C           positive regularization parameter. This parameter is\n\
  \                        ignored when -cv is single or double\n  -cv CROSS_VALIDATION,\
  \ --cross_validation CROSS_VALIDATION\n                        Choice of cross-validation\
  \ procedure for the\n                        regularization parameter -c determinantion:\
  \ none,\n                        single, double.\n  -c_lower_bound C_LOWER_BOUND,\
  \ --C_lower_bound C_LOWER_BOUND\n                        positive regularization\
  \ parameter lower bound. Ignored\n                        if -cv is none and -c\
  \ is specified.\n  -c_upper_bound C_UPPER_BOUND, --C_upper_bound C_UPPER_BOUND\n\
  \                        positive regularization parameter upper bound. Ignored\n\
  \                        if -cv is none and -c is specified.\n  -a A, --a A    \
  \       positive coefficient in kernel function.\n  -b B, --b B           independent\
  \ term coefficient in kernel function.\n\n  Output Paths\n\n  -oc OUTCLASSIFICATION,\
  \ --outClassification OUTCLASSIFICATION\n                        Name of the output\
  \ file to store classification\n                        performed on the traing\
  \ data set. TSV format.\n  -oca OUTCLASSIFICATIONACCURACY, --outClassificationAccuracy\
  \ OUTCLASSIFICATIONACCURACY\n                        Output classification accuracy\
  \ value on the training\n                        data set.\n  -op OUTPREDICTION,\
  \ --outPrediction OUTPREDICTION\n                        Name of the output file\
  \ to store prediction performed\n                        on the target data set.\
  \ TSV format.\n  -opa OUTPREDICTIONACCURACY, --outPredictionAccuracy OUTPREDICTIONACCURACY\n\
  \                        Output prediction accuracy value on the target data\n \
  \                       set.\n"
generated_using:
- --help
