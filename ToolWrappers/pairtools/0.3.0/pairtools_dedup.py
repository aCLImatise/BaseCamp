from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, Boolean, String

Pairtools_Dedup_V0_1_0 = CommandToolBuilder(tool="pairtools_dedup", base_command=["pairtools", "dedup"], inputs=[ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="output file for pairs after duplicate\nremoval. If the path ends with .gz or .lz4,\nthe output is pbgzip-/lz4c-compressed. By\ndefault, the output is printed into stdout.")), ToolInput(tag="in_output_dups", input_type=File(optional=True), prefix="--output-dups", doc=InputDocumentation(doc="output file for duplicated pairs.  If the\npath ends with .gz or .lz4, the output is\npbgzip-/lz4c-compressed. If the path is the\nsame as in --output or -, output duplicates\ntogether  with deduped pairs. By default,\nduplicates are dropped.")), ToolInput(tag="in_output_unmapped", input_type=File(optional=True), prefix="--output-unmapped", doc=InputDocumentation(doc="output file for unmapped pairs. If the path\nends with .gz or .lz4, the output is\npbgzip-/lz4c-compressed. If the path is the\nsame as in --output or -, output unmapped\npairs together with deduped pairs. If the\npath is the same as --output-dups, output\nunmapped reads together with dups. By\ndefault, unmapped pairs are dropped.")), ToolInput(tag="in_output_stats", input_type=File(optional=True), prefix="--output-stats", doc=InputDocumentation(doc="output file for duplicate statistics.  If\nfile exists, it will be open in the append\nmode. If the path ends with .gz or .lz4, the\noutput is pbgzip-/lz4c-compressed. By\ndefault, statistics are not printed.")), ToolInput(tag="in_max_mismatch", input_type=Int(optional=True), prefix="--max-mismatch", doc=InputDocumentation(doc="Pairs with both sides mapped within this\ndistance (bp) from each other are considered\nduplicates.  [default: 3]")), ToolInput(tag="in_method", input_type=Boolean(optional=True), prefix="--method", doc=InputDocumentation(doc="[max|sum]              define the mismatch as either the max or the\nsum of the mismatches ofthe genomic\nlocations of the both sides of the two\ncompared molecules  [default: max]")), ToolInput(tag="in_sep", input_type=String(optional=True), prefix="--sep", doc=InputDocumentation(doc="Separator (\t, \v, etc. characters are\nsupported, pass them in quotes)")), ToolInput(tag="in_comment_char", input_type=String(optional=True), prefix="--comment-char", doc=InputDocumentation(doc="The first character of comment lines")), ToolInput(tag="in_send_header_to", input_type=Boolean(optional=True), prefix="--send-header-to", doc=InputDocumentation(doc="[dups|dedup|both|none]\nWhich of the outputs should receive header\nand comment lines")), ToolInput(tag="in_cone", input_type=Int(optional=True), prefix="--c1", doc=InputDocumentation(doc="Chrom 1 column; default 1")), ToolInput(tag="in_c_two", input_type=Int(optional=True), prefix="--c2", doc=InputDocumentation(doc="Chrom 2 column; default 3")), ToolInput(tag="in_p_one", input_type=Int(optional=True), prefix="--p1", doc=InputDocumentation(doc="Position 1 column; default 2")), ToolInput(tag="in_p_two", input_type=Int(optional=True), prefix="--p2", doc=InputDocumentation(doc="Position 2 column; default 4")), ToolInput(tag="in_s_one", input_type=Int(optional=True), prefix="--s1", doc=InputDocumentation(doc="Strand 1 column; default 5")), ToolInput(tag="in_s_two", input_type=Int(optional=True), prefix="--s2", doc=InputDocumentation(doc="Strand 2 column; default 6")), ToolInput(tag="in_unmapped_chrom", input_type=String(optional=True), prefix="--unmapped-chrom", doc=InputDocumentation(doc="Placeholder for a chromosome on an unmapped\nside; default !")), ToolInput(tag="in_mark_dups", input_type=Boolean(optional=True), prefix="--mark-dups", doc=InputDocumentation(doc="If specified, duplicate pairs are marked as\nDD in 'pair_type' and as a duplicate in the\nsam entries.")), ToolInput(tag="in_extra_col_pair", input_type=Int(optional=True), prefix="--extra-col-pair", doc=InputDocumentation(doc="Extra columns that also must match for two\npairs to be marked as duplicates. Can be\neither provided as 0-based column indices or\nas column names (requires the '#columns'\nheader field). The option can be provided\nmultiple times if multiple column pairs must\nmatch. Example: --extra-col-pair 'phase1'\n'phase2'")), ToolInput(tag="in_nproc_in", input_type=Int(optional=True), prefix="--nproc-in", doc=InputDocumentation(doc="Number of processes used by the auto-guessed\ninput decompressing command.  [default: 3]")), ToolInput(tag="in_nproc_out", input_type=Int(optional=True), prefix="--nproc-out", doc=InputDocumentation(doc="Number of processes used by the auto-guessed\noutput compressing command.  [default: 8]")), ToolInput(tag="in_cmd_in", input_type=File(optional=True), prefix="--cmd-in", doc=InputDocumentation(doc="A command to decompress the input file. If\nprovided, fully overrides the auto-guessed\ncommand. Does not work with stdin. Must read\ninput from stdin and print output into\nstdout. EXAMPLE: pbgzip -dc -n 3")), ToolInput(tag="in_cmd_out", input_type=File(optional=True), prefix="--cmd-out", doc=InputDocumentation(doc="A command to compress the output file. If\nprovided, fully overrides the auto-guessed\ncommand. Does not work with stdout. Must\nread input from stdin and print output into\nstdout. EXAMPLE: pbgzip -c -n 8")), ToolInput(tag="in_pairs_path", input_type=String(optional=True), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="output file for pairs after duplicate\nremoval. If the path ends with .gz or .lz4,\nthe output is pbgzip-/lz4c-compressed. By\ndefault, the output is printed into stdout.")), ToolOutput(tag="out_output_dups", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_dups", type_hint=File()), doc=OutputDocumentation(doc="output file for duplicated pairs.  If the\npath ends with .gz or .lz4, the output is\npbgzip-/lz4c-compressed. If the path is the\nsame as in --output or -, output duplicates\ntogether  with deduped pairs. By default,\nduplicates are dropped.")), ToolOutput(tag="out_output_unmapped", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_unmapped", type_hint=File()), doc=OutputDocumentation(doc="output file for unmapped pairs. If the path\nends with .gz or .lz4, the output is\npbgzip-/lz4c-compressed. If the path is the\nsame as in --output or -, output unmapped\npairs together with deduped pairs. If the\npath is the same as --output-dups, output\nunmapped reads together with dups. By\ndefault, unmapped pairs are dropped.")), ToolOutput(tag="out_output_stats", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_stats", type_hint=File()), doc=OutputDocumentation(doc="output file for duplicate statistics.  If\nfile exists, it will be open in the append\nmode. If the path ends with .gz or .lz4, the\noutput is pbgzip-/lz4c-compressed. By\ndefault, statistics are not printed."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Pairtools_Dedup_V0_1_0().translate("wdl", allow_empty_container=True)

