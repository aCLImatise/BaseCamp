from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Int, String

Samtools_Ampliconclip_V0_1_0 = CommandToolBuilder(tool="samtools_ampliconclip", base_command=["samtools", "ampliconclip"], inputs=[ToolInput(tag="in_file_bedfile_removed", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc="FILE            bedfile of amplicons to be removed.")), ToolInput(tag="in_file_output_file", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="FILE            output file name (default stdout).")), ToolInput(tag="in_file_write_stats", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc="FILE            write stats to file name (default stderr)")), ToolInput(tag="in_output_uncompressed_data", input_type=Boolean(optional=True), prefix="-u", doc=InputDocumentation(doc="Output uncompressed data")), ToolInput(tag="in_soft_clip", input_type=Boolean(optional=True), prefix="--soft-clip", doc=InputDocumentation(doc="soft clip amplicons from reads (default)")), ToolInput(tag="in_hard_clip", input_type=Boolean(optional=True), prefix="--hard-clip", doc=InputDocumentation(doc="hard clip amplicons from reads.")), ToolInput(tag="in_both_ends", input_type=Boolean(optional=True), prefix="--both-ends", doc=InputDocumentation(doc="clip on both ends.")), ToolInput(tag="in_strand", input_type=Boolean(optional=True), prefix="--strand", doc=InputDocumentation(doc="use strand data from bed file.")), ToolInput(tag="in_clipped", input_type=Boolean(optional=True), prefix="--clipped", doc=InputDocumentation(doc="only output clipped reads.")), ToolInput(tag="in_fail", input_type=Boolean(optional=True), prefix="--fail", doc=InputDocumentation(doc="mark unclipped, mapped reads as QCFAIL.")), ToolInput(tag="in_filter_len", input_type=Int(optional=True), prefix="--filter-len", doc=InputDocumentation(doc="do not output reads INT size or shorter.")), ToolInput(tag="in_fail_len", input_type=Boolean(optional=True), prefix="--fail-len", doc=InputDocumentation(doc="INT    mark as QCFAIL reads INT size or shorter.")), ToolInput(tag="in_no_excluded", input_type=Boolean(optional=True), prefix="--no-excluded", doc=InputDocumentation(doc="do not write excluded reads (unmapped or QCFAIL).")), ToolInput(tag="in_rejects_file", input_type=File(optional=True), prefix="--rejects-file", doc=InputDocumentation(doc="file to write filtered reads.")), ToolInput(tag="in_original", input_type=Boolean(optional=True), prefix="--original", doc=InputDocumentation(doc="for clipped entries add an OA tag with original data.")), ToolInput(tag="in_keep_tag", input_type=Boolean(optional=True), prefix="--keep-tag", doc=InputDocumentation(doc="for clipped entries keep the old NM and MD tags.")), ToolInput(tag="in_no_pg", input_type=Boolean(optional=True), prefix="--no-PG", doc=InputDocumentation(doc="do not add an @PG line.")), ToolInput(tag="in_input_fmt_option", input_type=File(optional=True), prefix="--input-fmt-option", doc=InputDocumentation(doc="[=VAL]\nSpecify a single input file format option in the form\nof OPTION or OPTION=VALUE")), ToolInput(tag="in_output_fmt", input_type=String(optional=True), prefix="--output-fmt", doc=InputDocumentation(doc="[,OPT[=VAL]]...\nSpecify output format (SAM, BAM, CRAM)")), ToolInput(tag="in_output_fmt_option", input_type=File(optional=True), prefix="--output-fmt-option", doc=InputDocumentation(doc="[=VAL]\nSpecify a single output file format option in the form\nof OPTION or OPTION=VALUE")), ToolInput(tag="in_reference", input_type=File(optional=True), prefix="--reference", doc=InputDocumentation(doc="Reference sequence FASTA FILE [null]")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of additional threads to use [0]")), ToolInput(tag="in_verbosity", input_type=Int(optional=True), prefix="--verbosity", doc=InputDocumentation(doc="Set level of verbosity\n"))], outputs=[ToolOutput(tag="out_file_output_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_file_output_file", type_hint=File()), doc=OutputDocumentation(doc="FILE            output file name (default stdout).")), ToolOutput(tag="out_output_fmt_option", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_fmt_option", type_hint=File()), doc=OutputDocumentation(doc="[=VAL]\nSpecify a single output file format option in the form\nof OPTION or OPTION=VALUE"))], container="quay.io/biocontainers/samtools:1.12--hd5e65b6_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Samtools_Ampliconclip_V0_1_0().translate("wdl")

