!Command
command:
- svtk
- annotate
positional:
- !Positional
  description: An SV is annotated with a new NONCODING INFO field containing all classes
    of
  position: 0
  name: site.
  optional: false
- !Positional
  description: Structural variants.
  position: 0
  name: vcf
  optional: false
- !Positional
  description: Annotated variants.
  position: 1
  name: annotated_vcf
  optional: false
named:
- !Flag
  description: Gencode gene annotations (GTF).
  synonyms:
  - --gencode
  args: !SimpleFlagArg
    name: GENCODE
  optional: true
- !Flag
  description: "Noncoding elements (bed). Columns =\nchr,start,end,element_class,element_name\n"
  synonyms:
  - --noncoding
  args: !SimpleFlagArg
    name: NONCODING
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: svtk [-h] [--gencode GENCODE] [--noncoding NONCODING] vcf annotated_vcf\n\
  \nAnnotate resolved SV with genic effects and noncoding hits.\n\nThis tool permits\
  \ the user to provide a GTF of Gencode gene annotations, a BED\nof noncoding elements,\
  \ or both. The BED of noncoding elements must contain four\ncolumns: (chrom, start,\
  \ end, element_class).\n\nThe following classes of genic effects are annotated as\
  \ new VCF INFO fields if\nthe SV meets the defined criteria:\n    1) LOF (and DUP_LOF)\
  \ - Loss of function.\n        * Deletions are annotated LOF if they overlap any\
  \ exon.\n        * Duplications are annotated DUP_LOF if they reside entirely within\n\
  \        a gene boundary and overlap any exon.\n        * Inversions are annotated\
  \ LOF if reside entirely within an exon, if\n        one breakpoint falls within\
  \ an exon, if they reside entirely within a\n        gene boundary and overlap an\
  \ exon, or if only one breakpoint falls\n        within a gene boundary.\n     \
  \   * Translocations are annotated LOF If they fall within a gene boundary.\n  \
  \  2) COPY_GAIN\n        * Duplications are annotated COPY_GAIN if they span the\
  \ entirety of a\n        gene boundary.\n    3) INTRONIC\n        * Deletions, duplications,\
  \ and inversions are annotated INTRONIC if\n        they are localized to an intron.\n\
  \    4) DUP_PARTIAL\n        * Duplications are annotated DUP_PARTIAL if they overlap\
  \ the start or\n        end of a gene boundary but not its entirety, such that a\
  \ whole copy of\n        the gene is preserved.\n    5) INV_SPAN\n        * Inversions\
  \ are annotated INV_SPAN if they overlap the entirety of a\n        gene boundary\
  \ without disrupting it.\n    6) NEAREST_TSS\n        * Intragenic events are annotated\
  \ with the nearest transcription start\n        site.\n\nAn SV is annotated with\
  \ a new NONCODING INFO field containing all classes of\nnoncoding elements which\
  \ the variant overlaps.\n\npositional arguments:\n  vcf                   Structural\
  \ variants.\n  annotated_vcf         Annotated variants.\n\noptional arguments:\n\
  \  -h, --help            show this help message and exit\n  --gencode GENCODE  \
  \   Gencode gene annotations (GTF).\n  --noncoding NONCODING\n                 \
  \       Noncoding elements (bed). Columns =\n                        chr,start,end,element_class,element_name\n"
generated_using:
- --help
