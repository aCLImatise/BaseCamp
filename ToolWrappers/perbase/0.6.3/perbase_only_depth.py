from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Int, String

Perbase_Only_Depth_V0_1_0 = CommandToolBuilder(tool="perbase_only_depth", base_command=["perbase", "only-depth"], inputs=[ToolInput(tag="in_fast_mode", input_type=Boolean(optional=True), prefix="--fast-mode", doc=InputDocumentation(doc="Calculate depth based only on read starts/stops, see docs for full details")), ToolInput(tag="in_mate_fix", input_type=Boolean(optional=True), prefix="--mate-fix", doc=InputDocumentation(doc="Fix overlapping mates counts, see docs for full details")), ToolInput(tag="in_no_merge", input_type=Boolean(optional=True), prefix="--no-merge", doc=InputDocumentation(doc="Skip merging adjacent bases that have the same depth")), ToolInput(tag="in_zero_base", input_type=Boolean(optional=True), prefix="--zero-base", doc=InputDocumentation(doc="Output positions as 0-based instead of 1-based")), ToolInput(tag="in_bcf_file", input_type=File(optional=True), prefix="--bcf-file", doc=InputDocumentation(doc="A BCF/VCF file containing positions of interest. If specified, only bases from the given positions will be\nreported on. Note that it may be more efficient to calculate depth over regions if your positions are\nclustered tightly together")), ToolInput(tag="in_bed_file", input_type=File(optional=True), prefix="--bed-file", doc=InputDocumentation(doc="A BED file containing regions of interest. If specified, only bases from the given regions will be reported\non")), ToolInput(tag="in_channel_size_modifier", input_type=Int(optional=True), prefix="--channel-size-modifier", doc=InputDocumentation(doc="The fraction of a gigabyte to allocate per thread for message passing, can be greater than 1.0 [default:\n0.001]")), ToolInput(tag="in_chunksize", input_type=Int(optional=True), prefix="--chunksize", doc=InputDocumentation(doc="The ideal number of basepairs each worker receives. Total bp in memory at one time is (threads - 2) *\nchunksize [default: 1000000]")), ToolInput(tag="in_exclude_flags", input_type=Int(optional=True), prefix="--exclude-flags", doc=InputDocumentation(doc="SAM flags to exclude, recommended 3848 [default: 0]")), ToolInput(tag="in_include_flags", input_type=Int(optional=True), prefix="--include-flags", doc=InputDocumentation(doc="SAM flags to include [default: 0]")), ToolInput(tag="in_min_mapq", input_type=Int(optional=True), prefix="--min-mapq", doc=InputDocumentation(doc="Minimum MAPQ for a read to count toward depth [default: 0]")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="Output path, defaults to stdout")), ToolInput(tag="in_ref_fast_a", input_type=String(optional=True), prefix="--ref-fasta", doc=InputDocumentation(doc="Indexed reference fasta, set if using CRAM")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="The number of threads to use [default: 8]")), ToolInput(tag="in_flags", input_type=String(optional=True), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="Output path, defaults to stdout"))], container="quay.io/biocontainers/perbase:0.6.3--h35a96ae_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Perbase_Only_Depth_V0_1_0().translate("wdl")

