from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Int, String

Glpsol_V0_1_0 = CommandToolBuilder(tool="glpsol", base_command=["glpsol"], inputs=[ToolInput(tag="in_mps", input_type=Boolean(optional=True), prefix="--mps", doc=InputDocumentation(doc="read LP/MIP problem in fixed MPS format")), ToolInput(tag="in_free_mps", input_type=Boolean(optional=True), prefix="--freemps", doc=InputDocumentation(doc="read LP/MIP problem in free MPS format (default)")), ToolInput(tag="in_lp", input_type=Boolean(optional=True), prefix="--lp", doc=InputDocumentation(doc="read LP/MIP problem in CPLEX LP format")), ToolInput(tag="in_glp", input_type=Boolean(optional=True), prefix="--glp", doc=InputDocumentation(doc="read LP/MIP problem in GLPK format")), ToolInput(tag="in_math", input_type=Boolean(optional=True), prefix="--math", doc=InputDocumentation(doc="read LP/MIP model written in GNU MathProg modeling")), ToolInput(tag="in_data", input_type=File(optional=True), prefix="--data", doc=InputDocumentation(doc="read data section from filename (for --math only);\nif model file also has data section, it is ignored")), ToolInput(tag="in_display", input_type=File(optional=True), prefix="--display", doc=InputDocumentation(doc="send display output to filename (for --math only);\nby default the output is sent to terminal")), ToolInput(tag="in_seed", input_type=Int(optional=True), prefix="--seed", doc=InputDocumentation(doc="initialize pseudo-random number generator used in\nMathProg model with specified seed (any integer);\nif seed value is ?, some random seed will be used")), ToolInput(tag="in_min_cost", input_type=Boolean(optional=True), prefix="--mincost", doc=InputDocumentation(doc="read min-cost flow problem in DIMACS format")), ToolInput(tag="in_max_flow", input_type=Boolean(optional=True), prefix="--maxflow", doc=InputDocumentation(doc="read maximum flow problem in DIMACS format")), ToolInput(tag="in_cnf", input_type=Boolean(optional=True), prefix="--cnf", doc=InputDocumentation(doc="read CNF-SAT problem in DIMACS format")), ToolInput(tag="in_simplex", input_type=Boolean(optional=True), prefix="--simplex", doc=InputDocumentation(doc="use simplex method (default)")), ToolInput(tag="in_interior", input_type=Boolean(optional=True), prefix="--interior", doc=InputDocumentation(doc="use interior point method (LP only)")), ToolInput(tag="in_read", input_type=File(optional=True), prefix="--read", doc=InputDocumentation(doc="read solution from filename rather to find it with\nthe solver")), ToolInput(tag="in_min", input_type=Boolean(optional=True), prefix="--min", doc=InputDocumentation(doc="minimization")), ToolInput(tag="in_max", input_type=Boolean(optional=True), prefix="--max", doc=InputDocumentation(doc="maximization")), ToolInput(tag="in_scale", input_type=Boolean(optional=True), prefix="--scale", doc=InputDocumentation(doc="scale problem (default)")), ToolInput(tag="in_no_scale", input_type=Boolean(optional=True), prefix="--noscale", doc=InputDocumentation(doc="do not scale problem")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="write solution to filename in printable format")), ToolInput(tag="in_write", input_type=File(optional=True), prefix="--write", doc=InputDocumentation(doc="write solution to filename in plain text format")), ToolInput(tag="in_ranges", input_type=File(optional=True), prefix="--ranges", doc=InputDocumentation(doc="write sensitivity analysis report to filename in\nprintable format (simplex only)")), ToolInput(tag="in_tm_lim", input_type=String(optional=True), prefix="--tmlim", doc=InputDocumentation(doc="limit solution time to nnn seconds")), ToolInput(tag="in_mem_lim", input_type=String(optional=True), prefix="--memlim", doc=InputDocumentation(doc="limit available memory to nnn megabytes")), ToolInput(tag="in_check", input_type=Boolean(optional=True), prefix="--check", doc=InputDocumentation(doc="do not solve problem, check input data only")), ToolInput(tag="in_name", input_type=String(optional=True), prefix="--name", doc=InputDocumentation(doc="change problem name to probname")), ToolInput(tag="in_w_mps", input_type=File(optional=True), prefix="--wmps", doc=InputDocumentation(doc="write problem to filename in fixed MPS format")), ToolInput(tag="in_w_free_mps", input_type=File(optional=True), prefix="--wfreemps", doc=InputDocumentation(doc="write problem to filename in free MPS format")), ToolInput(tag="in_wlp", input_type=File(optional=True), prefix="--wlp", doc=InputDocumentation(doc="write problem to filename in CPLEX LP format")), ToolInput(tag="in_w_glp", input_type=File(optional=True), prefix="--wglp", doc=InputDocumentation(doc="write problem to filename in GLPK format")), ToolInput(tag="in_w_cnf", input_type=File(optional=True), prefix="--wcnf", doc=InputDocumentation(doc="write problem to filename in DIMACS CNF-SAT format")), ToolInput(tag="in_log", input_type=File(optional=True), prefix="--log", doc=InputDocumentation(doc="write copy of terminal output to filename")), ToolInput(tag="in_luf", input_type=Boolean(optional=True), prefix="--luf", doc=InputDocumentation(doc="plain LU-factorization (default)")), ToolInput(tag="in_btf", input_type=Boolean(optional=True), prefix="--btf", doc=InputDocumentation(doc="block triangular LU-factorization")), ToolInput(tag="in_ft", input_type=Boolean(optional=True), prefix="--ft", doc=InputDocumentation(doc="Forrest-Tomlin update (requires --luf; default)")), ToolInput(tag="in_cbg", input_type=Boolean(optional=True), prefix="--cbg", doc=InputDocumentation(doc="Schur complement + Bartels-Golub update")), ToolInput(tag="in_cgr", input_type=Boolean(optional=True), prefix="--cgr", doc=InputDocumentation(doc="Schur complement + Givens rotation update")), ToolInput(tag="in_primal", input_type=Boolean(optional=True), prefix="--primal", doc=InputDocumentation(doc="use primal simplex (default)")), ToolInput(tag="in_dual", input_type=Boolean(optional=True), prefix="--dual", doc=InputDocumentation(doc="use dual simplex")), ToolInput(tag="in_std", input_type=Boolean(optional=True), prefix="--std", doc=InputDocumentation(doc="use standard initial basis of all slacks")), ToolInput(tag="in_adv", input_type=Boolean(optional=True), prefix="--adv", doc=InputDocumentation(doc="use advanced initial basis (default)")), ToolInput(tag="in_bib", input_type=Boolean(optional=True), prefix="--bib", doc=InputDocumentation(doc="use Bixby's initial basis")), ToolInput(tag="in_ini", input_type=File(optional=True), prefix="--ini", doc=InputDocumentation(doc="use as initial basis previously saved with -w\n(disables LP presolver)")), ToolInput(tag="in_steep", input_type=Boolean(optional=True), prefix="--steep", doc=InputDocumentation(doc="use steepest edge technique (default)")), ToolInput(tag="in_no_steep", input_type=Boolean(optional=True), prefix="--nosteep", doc=InputDocumentation(doc="use standard 'textbook' pricing")), ToolInput(tag="in_relax", input_type=Boolean(optional=True), prefix="--relax", doc=InputDocumentation(doc="use Harris' two-pass ratio test (default)")), ToolInput(tag="in_no_relax", input_type=Boolean(optional=True), prefix="--norelax", doc=InputDocumentation(doc="use standard 'textbook' ratio test")), ToolInput(tag="in_presol", input_type=Boolean(optional=True), prefix="--presol", doc=InputDocumentation(doc="use presolver (default; assumes --scale and --adv)")), ToolInput(tag="in_no_presol", input_type=Boolean(optional=True), prefix="--nopresol", doc=InputDocumentation(doc="do not use presolver")), ToolInput(tag="in_exact", input_type=Boolean(optional=True), prefix="--exact", doc=InputDocumentation(doc="use simplex method based on exact arithmetic")), ToolInput(tag="in_x_check", input_type=Boolean(optional=True), prefix="--xcheck", doc=InputDocumentation(doc="check final basis using exact arithmetic")), ToolInput(tag="in_nord", input_type=Boolean(optional=True), prefix="--nord", doc=InputDocumentation(doc="use natural (original) ordering")), ToolInput(tag="in_qmd", input_type=Boolean(optional=True), prefix="--qmd", doc=InputDocumentation(doc="use quotient minimum degree ordering")), ToolInput(tag="in_amd", input_type=Boolean(optional=True), prefix="--amd", doc=InputDocumentation(doc="use approximate minimum degree ordering (default)")), ToolInput(tag="in_sym_amd", input_type=Boolean(optional=True), prefix="--symamd", doc=InputDocumentation(doc="use approximate minimum degree ordering")), ToolInput(tag="in_no_mip", input_type=Boolean(optional=True), prefix="--nomip", doc=InputDocumentation(doc="consider all integer variables as continuous\n(allows solving MIP as pure LP)")), ToolInput(tag="in_first", input_type=Boolean(optional=True), prefix="--first", doc=InputDocumentation(doc="branch on first integer variable")), ToolInput(tag="in_last", input_type=Boolean(optional=True), prefix="--last", doc=InputDocumentation(doc="branch on last integer variable")), ToolInput(tag="in_most_f", input_type=Boolean(optional=True), prefix="--mostf", doc=InputDocumentation(doc="branch on most fractional variable")), ToolInput(tag="in_dr_tom", input_type=Boolean(optional=True), prefix="--drtom", doc=InputDocumentation(doc="branch using heuristic by Driebeck and Tomlin\n(default)")), ToolInput(tag="in_p_cost", input_type=Boolean(optional=True), prefix="--pcost", doc=InputDocumentation(doc="branch using hybrid pseudocost heuristic (may be\nuseful for hard instances)")), ToolInput(tag="in_dfs", input_type=Boolean(optional=True), prefix="--dfs", doc=InputDocumentation(doc="backtrack using depth first search")), ToolInput(tag="in_bfs", input_type=Boolean(optional=True), prefix="--bfs", doc=InputDocumentation(doc="backtrack using breadth first search")), ToolInput(tag="in_best_p", input_type=Boolean(optional=True), prefix="--bestp", doc=InputDocumentation(doc="backtrack using the best projection heuristic")), ToolInput(tag="in_best_b", input_type=Boolean(optional=True), prefix="--bestb", doc=InputDocumentation(doc="backtrack using node with best local bound\n(default)")), ToolInput(tag="in_into_pt", input_type=Boolean(optional=True), prefix="--intopt", doc=InputDocumentation(doc="use MIP presolver (default)")), ToolInput(tag="in_no_into_pt", input_type=Boolean(optional=True), prefix="--nointopt", doc=InputDocumentation(doc="do not use MIP presolver")), ToolInput(tag="in_bin_a_rize", input_type=Boolean(optional=True), prefix="--binarize", doc=InputDocumentation(doc="replace general integer variables by binary ones\n(assumes --intopt)")), ToolInput(tag="in_f_pump", input_type=Boolean(optional=True), prefix="--fpump", doc=InputDocumentation(doc="apply feasibility pump heuristic")), ToolInput(tag="in_proxy", input_type=Boolean(optional=True), prefix="--proxy", doc=InputDocumentation(doc="[nnn]     apply proximity search heuristic (nnn is time limit\nin seconds; default is 60)")), ToolInput(tag="in_gomory", input_type=Boolean(optional=True), prefix="--gomory", doc=InputDocumentation(doc="generate Gomory's mixed integer cuts")), ToolInput(tag="in_mir", input_type=Boolean(optional=True), prefix="--mir", doc=InputDocumentation(doc="generate MIR (mixed integer rounding) cuts")), ToolInput(tag="in_cover", input_type=Boolean(optional=True), prefix="--cover", doc=InputDocumentation(doc="generate mixed cover cuts")), ToolInput(tag="in_clique", input_type=Boolean(optional=True), prefix="--clique", doc=InputDocumentation(doc="generate clique cuts")), ToolInput(tag="in_cuts", input_type=Boolean(optional=True), prefix="--cuts", doc=InputDocumentation(doc="generate all cuts above")), ToolInput(tag="in_mip_gap", input_type=String(optional=True), prefix="--mipgap", doc=InputDocumentation(doc="set relative mip gap tolerance to tol")), ToolInput(tag="in_minisat", input_type=Boolean(optional=True), prefix="--minisat", doc=InputDocumentation(doc="translate integer feasibility problem to CNF-SAT\nand solve it with MiniSat solver")), ToolInput(tag="in_obj_bnd", input_type=Int(optional=True), prefix="--objbnd", doc=InputDocumentation(doc="add inequality obj <= bound (minimization) or\nobj >= bound (maximization) to integer feasibility\nproblem (assumes --minisat)")), ToolInput(tag="in_language", input_type=String(), position=0, doc=InputDocumentation(doc="-m filename, --model filename"))], outputs=[ToolOutput(tag="out_display", output_type=File(optional=True), selector=InputSelector(input_to_select="in_display", type_hint=File()), doc=OutputDocumentation(doc="send display output to filename (for --math only);\nby default the output is sent to terminal")), ToolOutput(tag="out_log", output_type=File(optional=True), selector=InputSelector(input_to_select="in_log", type_hint=File()), doc=OutputDocumentation(doc="write copy of terminal output to filename"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Glpsol_V0_1_0().translate("wdl", allow_empty_container=True)

