from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, Boolean, String

Agat_Sp_Manage_Attributes_Pl_V0_1_0 = CommandToolBuilder(tool="agat_sp_manage_attributes.pl", base_command=["agat_sp_manage_attributes.pl"], inputs=[ToolInput(tag="in_gff", input_type=File(optional=True), prefix="--gff", doc=InputDocumentation(doc="Input GTF/GFF file.")), ToolInput(tag="in_type", input_type=Int(optional=True), prefix="--type", doc=InputDocumentation(doc="primary tag option, case insensitive, list. Allow to specied the\nfeature types that will be handled. You can specified a specific\nfeature by given its primary tag name (column 3) as: cds, Gene,\nMrNa You can specify directly all the feature of a particular\nlevel: level2=mRNA,ncRNA,tRNA,etc level3=CDS,exon,UTR,etc By\ndefault all feature are taking in account. fill the option by\nthe value 'all' will have the same behaviour.")), ToolInput(tag="in_tag", input_type=Boolean(optional=True), prefix="--tag", doc=InputDocumentation(doc="Attributes with the tag specified will be removed from the\nfeature type specified by the option p (primary tag). List of\ntag must be coma separated. /!\\ You must use '' if name\ncontains spaces. Instead to remove an attribute, you can replace\nits Tag by a new Tag using this formulation tagName/newTagName.\nTo remove all attributes non mandatory (only ID and Parent are\nmandatory) you can use the option with <all_attributes>\nparameter.")), ToolInput(tag="in_add", input_type=Boolean(optional=True), prefix="--add", doc=InputDocumentation(doc="Attribute specified will be added if doesn't exist. The value\nwill be 'empty'.")), ToolInput(tag="in_cp", input_type=Boolean(optional=True), prefix="--cp", doc=InputDocumentation(doc="When attributes specied are with this form: tagName/newTagName.\nBy using this <cp> parameter, the tag will not be modified but\nduplicated with the new tagName.")), ToolInput(tag="in_outfile", input_type=File(optional=True), prefix="--outfile", doc=InputDocumentation(doc="Output GFF file. If no output file is specified, the output will\nbe written to STDOUT.")), ToolInput(tag="in_agat_sp_manage_attributes_do_tpl", input_type=String(), position=0, doc=InputDocumentation(doc="Description:"))], outputs=[ToolOutput(tag="out_outfile", output_type=File(optional=True), selector=InputSelector(input_to_select="in_outfile", type_hint=File()), doc=OutputDocumentation(doc="Output GFF file. If no output file is specified, the output will\nbe written to STDOUT."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Agat_Sp_Manage_Attributes_Pl_V0_1_0().translate("wdl", allow_empty_container=True)

