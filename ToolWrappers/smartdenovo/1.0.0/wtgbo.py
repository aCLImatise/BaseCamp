from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, File, String, Float, Boolean

Wtgbo_V0_1_0 = CommandToolBuilder(tool="wtgbo", base_command=["wtgbo"], inputs=[ToolInput(tag="in_number_of_threads", input_type=Int(optional=True), prefix="-t", doc=InputDocumentation(doc="Number of threads, [1]")), ToolInput(tag="in_long_reads_files", input_type=File(optional=True), prefix="-i", doc=InputDocumentation(doc="Long reads sequences file(s), + *")), ToolInput(tag="in_long_reads_region", input_type=String(optional=True), prefix="-b", doc=InputDocumentation(doc="Long reads retained region, often from wtobt, +\nFormat: read_name\toffset\tlength\toriginal_len")), ToolInput(tag="in_overlap_files_readsttlentbegtendtreadsttlentbegtendtscore", input_type=File(optional=True), prefix="-j", doc=InputDocumentation(doc="Overlap file(s), + *\nFormat: reads1\t+/-\tlen1\tbeg1\tend1\treads2\t+/-\tlen2\tbeg2\tend2\tscore")), ToolInput(tag="in_load_pairs_read", input_type=File(optional=True), prefix="-L", doc=InputDocumentation(doc="Load pairs of read name from file, will avoid to calculate overlap them again, + [NULL]")), ToolInput(tag="in_minimum_alignment_score", input_type=Int(optional=True), prefix="-s", doc=InputDocumentation(doc="Minimum alignment score, [200]")), ToolInput(tag="in_minimum_alignment_identity", input_type=Float(optional=True), prefix="-m", doc=InputDocumentation(doc="Minimum alignment identity, [0.6]")), ToolInput(tag="in_maximum_margin_alignment", input_type=Int(optional=True), prefix="-u", doc=InputDocumentation(doc="Maximum margin of alignment, [100]")), ToolInput(tag="in_output_file_new", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="Output file of new overlaps, *")), ToolInput(tag="in_record_pairs_sequences", input_type=Int(optional=True), prefix="-9", doc=InputDocumentation(doc="Record pairs of sequences have beed aligned regardless of successful, including pairs from '-L'\nFormat: read1\tread2")), ToolInput(tag="in_force_overwrite_output", input_type=File(optional=True), prefix="-f", doc=InputDocumentation(doc="Force overwrite output file")), ToolInput(tag="in_minimum_estimated_coverage", input_type=Int(optional=True), prefix="-c", doc=InputDocumentation(doc="Minimum estimated coverage of edge to be trusted, [1]\nedge coverage is calculated by counting overlaps that can replace this edge")), ToolInput(tag="in_use_number_matches", input_type=Boolean(optional=True), prefix="-Q", doc=InputDocumentation(doc="Use number of matches as alignment score")), ToolInput(tag="in_best_score_cutoff", input_type=Float(optional=True), prefix="-q", doc=InputDocumentation(doc="Best score cutoff, say best overlap MUST have alignment score >= <-r> * read's best score [0.95]")), ToolInput(tag="in_turn_homopolymer_compression", input_type=Boolean(optional=True), prefix="-H", doc=InputDocumentation(doc="Turn off homopolymer compression")), ToolInput(tag="in_filter_high_frequency", input_type=Int(optional=True), prefix="-Z", doc=InputDocumentation(doc="Filter high frequency z-mers, maybe repetitive, [100]")), ToolInput(tag="in_zmer_window", input_type=Int(optional=True), prefix="-y", doc=InputDocumentation(doc="Zmer window, [800]")), ToolInput(tag="in_minimum_size_seeding", input_type=Int(optional=True), prefix="-R", doc=InputDocumentation(doc="Minimum size of seeding region within zmer window, [200]")), ToolInput(tag="in_minimum_size_total", input_type=Int(optional=True), prefix="-r", doc=InputDocumentation(doc="Minimum size of total seeding region for zmer windows, [300]")), ToolInput(tag="in_maximum_variant_uncompressed", input_type=Int(optional=True), prefix="-l", doc=InputDocumentation(doc="Maximum variant of uncompressed sizes between two matched hz-kmer, [2]")), ToolInput(tag="in_alignment_penalty_match", input_type=Int(optional=True), prefix="-M", doc=InputDocumentation(doc="Alignment penalty: match, [2]")), ToolInput(tag="in_alignment_penalty_mismatch", input_type=Int(optional=True), prefix="-X", doc=InputDocumentation(doc="Alignment penalty: mismatch, [-5]")), ToolInput(tag="in_alignment_penalty_insertion", input_type=Int(optional=True), prefix="-O", doc=InputDocumentation(doc="Alignment penalty: insertion or deletion, [-3]")), ToolInput(tag="in_alignment_penalty_gap", input_type=Int(optional=True), prefix="-E", doc=InputDocumentation(doc="Alignment penalty: gap extension, [-1]")), ToolInput(tag="in_alignment_penalty_read", input_type=Int(optional=True), prefix="-T", doc=InputDocumentation(doc="Alignment penalty: read end clipping, 0: distable HSP extension, otherwise set to -50 or other [-50]")), ToolInput(tag="in_minimum_bandwidth_iteratively", input_type=Int(optional=True), prefix="-w", doc=InputDocumentation(doc="Minimum bandwidth, iteratively doubled to maximum [50]")), ToolInput(tag="in_maximum_bandwidth", input_type=Int(optional=True), prefix="-W", doc=InputDocumentation(doc="Maximum bandwidth, [3200]")), ToolInput(tag="in_refine_the_alignment", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="Refine the alignment")), ToolInput(tag="in_max_turns_iteration", input_type=Int(optional=True), prefix="-N", doc=InputDocumentation(doc="Max turns of iteration, [5]"))], outputs=[ToolOutput(tag="out_output_file_new", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_file_new", type_hint=File()), doc=OutputDocumentation(doc="Output file of new overlaps, *")), ToolOutput(tag="out_force_overwrite_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_force_overwrite_output", type_hint=File()), doc=OutputDocumentation(doc="Force overwrite output file"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Wtgbo_V0_1_0().translate("wdl", allow_empty_container=True)

