!Command
command:
- wtmsa
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -P
  description: Total parallel jobs, [1]
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - -p
  description: "Index of current job (0-based), [0]\nSuppose to run wtmsa for the\
    \ same layout file parallelly in 60 cpu. For cpu1, -P 60 -p 0; cpu2, -P 60 -p\
    \ 1, ..."
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - -i
  description: Input file, layout from wtlay, +, *
  args: !SimpleFlagArg
    name: string
- !Flag
  optional: true
  synonyms:
  - -o
  description: Output file, consensus sequences, *
  args: !SimpleFlagArg
    name: string
- !Flag
  optional: true
  synonyms:
  - -B
  description: Print backbone sequences on file for debug [NULL]
  args: !SimpleFlagArg
    name: string
- !Flag
  optional: true
  synonyms:
  - -G
  description: Print dot graph on file, H U G E, be careful, [NULL]
  args: !SimpleFlagArg
    name: stirng
- !Flag
  optional: true
  synonyms:
  - -f
  description: Force overwrite
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -H
  description: Trun off homopolymer compression
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -y
  description: Zmer window, [800]
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - -R
  description: Minimum size of seeding region within zmer window, [200]
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - -l
  description: Maximum variant of uncompressed sizes between two matched zmer, [2]
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - -M
  description: 'Alignment penalty: match, [2]'
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - -X
  description: 'Alignment penalty: mismatch, [-5]'
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - -I
  description: 'Alignment penalty: insertion, [-2]'
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - -D
  description: 'Alignment penalty: deletion, [-3]'
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - -V
  description: turn on homopolymer merge penalty
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - -E
  description: 'Alignment penalty: gap extension, [-1]'
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - -T
  description: 'Alignment penalty: read end clipping [-10]'
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - -F
  description: Disable PhreadQV in refine-alignment
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -w
  description: Minimum bandwidth of pairwise alignment, iteratively doubled to maximum
    [50]
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - -W
  description: Maximum bandwidth of pairwise alignment, [3200]
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - -e
  description: Maximum bandwidth at graph alignment and ending extension, [800]
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - -g
  description: Basic bandwidth in graph alignment, [100]
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - -m
  description: Minimum alignment identity, [0.5]
  args: !SimpleFlagArg
    name: float
- !Flag
  optional: true
  synonyms:
  - -n
  description: Number of iterations for consensus calling, the more, the accurater,
    the slower [2]
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - -v
  description: Verbose, +
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "WTMSA: Consensus caller using POA\nSMARTdenovo: Ultra-fast de novo assembler\
  \ for high noisy long reads\nAuthor: Jue Ruan <ruanjue@gmail.com>\nVersion: 1.0\n\
  Usage: wtmsa [options]\nOptions:\n -P <int>    Total parallel jobs, [1]\n -p <int>\
  \    Index of current job (0-based), [0]\n             Suppose to run wtmsa for\
  \ the same layout file parallelly in 60 cpu. For cpu1, -P 60 -p 0; cpu2, -P 60 -p\
  \ 1, ...\n -i <string> Input file, layout from wtlay, +, *\n -o <string> Output\
  \ file, consensus sequences, *\n -B <string> Print backbone sequences on file for\
  \ debug [NULL]\n -G <stirng> Print dot graph on file, H U G E, be careful, [NULL]\n\
  \ -f          Force overwrite\n -H          Trun off homopolymer compression\n -z\
  \ <int>    Zmer size, 5 <= <-z> <= 16, [10]\n -y <int>    Zmer window, [800]\n -R\
  \ <int>    Minimum size of seeding region within zmer window, [200]\n -l <int> \
  \   Maximum variant of uncompressed sizes between two matched zmer, [2]\n -M <int>\
  \    Alignment penalty: match, [2]\n -X <int>    Alignment penalty: mismatch, [-5]\n\
  \ -I <int>    Alignment penalty: insertion, [-2]\n -D <int>    Alignment penalty:\
  \ deletion, [-3]\n -V <int>    turn on homopolymer merge penalty\n -E <int>    Alignment\
  \ penalty: gap extension, [-1]\n -T <int>    Alignment penalty: read end clipping\
  \ [-10]\n -F          Disable PhreadQV in refine-alignment\n -w <int>    Minimum\
  \ bandwidth of pairwise alignment, iteratively doubled to maximum [50]\n -W <int>\
  \    Maximum bandwidth of pairwise alignment, [3200]\n -e <int>    Maximum bandwidth\
  \ at graph alignment and ending extension, [800]\n -g <int>    Basic bandwidth in\
  \ graph alignment, [100]\n -m <float>  Minimum alignment identity, [0.5]\n -n <int>\
  \    Number of iterations for consensus calling, the more, the accurater, the slower\
  \ [2]\n -v          Verbose, +\n\nExample: \n$> wtmsa -i wt.lay -o wt.lay.cns.fa\
  \ 2>log.msa\n\n"
generated_using:
- --help
docker_image:
