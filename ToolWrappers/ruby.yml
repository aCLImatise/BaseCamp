!Command
command:
- ruby
positional:
- !Positional
  description: 'rubygems (default: enabled)'
  position: 0
  name: gems
  optional: false
- !Positional
  description: 'RUBYOPT environment variable (default: enabled)'
  position: 1
  name: rubyopt
  optional: false
named:
- !Flag
  description: '[octal]       specify record separator (\0, if no argument)'
  synonyms:
  - '-0'
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: autosplit mode with -n or -p (splits $_ into $F)
  synonyms:
  - -a
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: check syntax only
  synonyms:
  - -c
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: cd to directory before executing your script
  synonyms:
  - -Cdirectory
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: set debugging flags (set $DEBUG to true)
  synonyms:
  - -d
  - --debug
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "'command'    one line of script. Several -e's allowed. Omit [programfile]"
  synonyms:
  - -e
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "[:in], --encoding=ex[:in]\nspecify the default external and internal\
    \ character encodings"
  synonyms:
  - -Eex
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: split() pattern for autosplit (-a)
  synonyms:
  - -Fpattern
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '[extension]   edit ARGV files in place (make backup if extension supplied)'
  synonyms:
  - -i
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: specify $LOAD_PATH directory (may be used more than once)
  synonyms:
  - -Idirectory
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: enable line ending processing
  synonyms:
  - -l
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: assume 'while gets(); ... end' loop around your script
  synonyms:
  - -n
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: assume loop like -n but print line also like sed
  synonyms:
  - -p
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: require the library before executing your script
  synonyms:
  - -rlibrary
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: enable some switch parsing for switches after script name
  synonyms:
  - -s
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: look for the script using PATH environment variable
  synonyms:
  - -S
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '[level=1]     turn on tainting checks'
  synonyms:
  - -T
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: print version number, then turn on verbose mode
  synonyms:
  - -v
  - --verbose
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: turn warnings on for your script
  synonyms:
  - -w
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '[level=2]     set warning level; 0=silence, 1=medium, 2=verbose'
  synonyms:
  - -W
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '[directory]   strip off text before #!ruby line and perhaps cd to
    directory'
  synonyms:
  - -x
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: print the copyright
  synonyms:
  - --copyright
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "[,...], --disable=feature[,...]\nenable or disable features"
  synonyms:
  - --enable
  args: !SimpleFlagArg
    name: feature
  optional: true
- !Flag
  description: specify the default external or internal character encoding
  synonyms:
  - --external-encoding
  - --internal-encoding
  args: !SimpleFlagArg
    name: encoding
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: show this message, -h for short message
  synonyms:
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: print the version
  synonyms:
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "Usage: ruby [switches] [--] [programfile] [arguments]\n  -0[octal]   \
  \    specify record separator (\\0, if no argument)\n  -a              autosplit\
  \ mode with -n or -p (splits $_ into $F)\n  -c              check syntax only\n\
  \  -Cdirectory     cd to directory before executing your script\n  -d, --debug \
  \    set debugging flags (set $DEBUG to true)\n  -e 'command'    one line of script.\
  \ Several -e's allowed. Omit [programfile]\n  -Eex[:in], --encoding=ex[:in]\n  \
  \                specify the default external and internal character encodings\n\
  \  -Fpattern       split() pattern for autosplit (-a)\n  -i[extension]   edit ARGV\
  \ files in place (make backup if extension supplied)\n  -Idirectory     specify\
  \ $LOAD_PATH directory (may be used more than once)\n  -l              enable line\
  \ ending processing\n  -n              assume 'while gets(); ... end' loop around\
  \ your script\n  -p              assume loop like -n but print line also like sed\n\
  \  -rlibrary       require the library before executing your script\n  -s      \
  \        enable some switch parsing for switches after script name\n  -S       \
  \       look for the script using PATH environment variable\n  -T[level=1]     turn\
  \ on tainting checks\n  -v, --verbose   print version number, then turn on verbose\
  \ mode\n  -w              turn warnings on for your script\n  -W[level=2]     set\
  \ warning level; 0=silence, 1=medium, 2=verbose\n  -x[directory]   strip off text\
  \ before #!ruby line and perhaps cd to directory\n  --copyright     print the copyright\n\
  \  --enable=feature[,...], --disable=feature[,...]\n                  enable or\
  \ disable features\n  --external-encoding=encoding, --internal-encoding=encoding\n\
  \                  specify the default external or internal character encoding\n\
  \  --version       print the version\n  --help          show this message, -h for\
  \ short message\nFeatures:\n  gems            rubygems (default: enabled)\n  rubyopt\
  \         RUBYOPT environment variable (default: enabled)\n"
generated_using:
- --help
