from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Nucmer_Multi_Pl_V0_1_0 = CommandToolBuilder(tool="nucmer_multi.pl", base_command=["nucmer_multi.pl"], inputs=[ToolInput(tag="in_input_fasta_file", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc="input fasta file")), ToolInput(tag="in_separate_groups_records", input_type=Boolean(optional=True), prefix="-g", doc=InputDocumentation(doc="separate by groups. Fasta records with headers prefixed by '#group_name#'\nwhere 'group_name' is the name of different strains, for example, will be\nseparated. Records without headers in this format will be run individually.")), ToolInput(tag="in_path_nucmer_application", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="path to nucmer application (including nucmer). If not given, will try\nto find nucmer in your PATH")), ToolInput(tag="in_additional_arguments_pass", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="Additional arguments to pass to nucmer, surrounded by quotes,\ni.e. '--maxmatch -b 200'.")), ToolInput(tag="in_number_threads_use", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="Number of threads to use (Default: 15)")), ToolInput(tag="in_output_prefix_default", input_type=Boolean(optional=True), prefix="-o", doc=InputDocumentation(doc="Output prefix (default: 'out')")), ToolInput(tag="in_include_selfvsself_alignments", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="Include self-vs-self alignments (default: self-vs-self alignments are\nnot done when -g is given)")), ToolInput(tag="in_include_backalignments_ie", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc="Include back-alignments, i.e. will align genome A vs genome B and also\nalign genome B vs genome A\n(default: each potential alignment will only be included once)")), ToolInput(tag="in_uppercase_version_number", input_type=Boolean(optional=True), prefix="-V", doc=InputDocumentation(doc="(uppercase) output version number and quit")), ToolInput(tag="in_more_options", input_type=Boolean(optional=True), prefix="-MORE_OPTIONS", doc=InputDocumentation(doc="")), ToolInput(tag="in_options", input_type=Boolean(optional=True), prefix="-OPTIONS", doc=InputDocumentation(doc="")), ToolInput(tag="in_or", input_type=String(), position=0, doc=InputDocumentation(doc="-d    maximum number of fasta records to run nucmer on at one time.\nWARNING: If this number is too small, may result in intense slowdown or\ncrashing, too big and you may exceed nucmer's internal limits.\n(default: 1)"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Nucmer_Multi_Pl_V0_1_0().translate("wdl", allow_empty_container=True)

