from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Array, String, Directory, Int, Float, Boolean

Neptune_V0_1_0 = CommandToolBuilder(tool="neptune", base_command=["neptune"], inputs=[ToolInput(tag="in_inclusion", input_type=Array(t=String(), optional=True), prefix="--inclusion", doc=InputDocumentation(doc="The inclusion targets in FASTA format.")), ToolInput(tag="in_exclusion", input_type=Array(t=String(), optional=True), prefix="--exclusion", doc=InputDocumentation(doc="The exclusion targets in FASTA format.")), ToolInput(tag="in_output", input_type=Directory(optional=True), prefix="--output", doc=InputDocumentation(doc="The directory to place all output.")), ToolInput(tag="in_km_er", input_type=Int(optional=True), prefix="--kmer", doc=InputDocumentation(doc="The size of the k-mers.")), ToolInput(tag="in_organization", input_type=Int(optional=True), prefix="--organization", doc=InputDocumentation(doc="The degree of k-mer organization in the output files.\nThis exploits the four-character alphabet of\nnucleotides to produce several k-mer output files,\nwith all k-mers in a file beginning with the same\nshort sequence of nucleotides. This parameter\ndetermines the number of nucleotides to use and will\nproduce 4^X output files, where X is the number of\nnucleotides specified by this parameter. The number of\noutput files directly corresponds to the amount of\nparallelization in the k-mer aggregation process.")), ToolInput(tag="in_filter_percent", input_type=Int(optional=True), prefix="--filter-percent", doc=InputDocumentation(doc="The maximum percent identity of a candidate signature\nwith an exclusion hit before discarding the signature.\nWhen both the filtered percent and filtered length\nlimits are exceed, the signature is discarded.")), ToolInput(tag="in_filter_length", input_type=Int(optional=True), prefix="--filter-length", doc=InputDocumentation(doc="The maximum shared fractional length of an exclusion\ntarget alignment with a candidate signature before\ndiscarding the signature. When both the filtered\npercent and filtered length limits are exceed, the\nsignature is discarded.")), ToolInput(tag="in_seed_size", input_type=Int(optional=True), prefix="--seed-size", doc=InputDocumentation(doc="The seed size used during alignment.")), ToolInput(tag="in_reference", input_type=Array(t=String(), optional=True), prefix="--reference", doc=InputDocumentation(doc="The FASTA reference from which to extract signatures.")), ToolInput(tag="in_reference_size", input_type=Int(optional=True), prefix="--reference-size", doc=InputDocumentation(doc="The estimated total size in nucleotides of the\nreference. This will be calculated if not specified.")), ToolInput(tag="in_rate", input_type=Float(optional=True), prefix="--rate", doc=InputDocumentation(doc="The probability of a mutation or error at an arbitrary\nposition. The default value is 0.01.")), ToolInput(tag="in_in_hits", input_type=Int(optional=True), prefix="--inhits", doc=InputDocumentation(doc="The minimum number of inclusion targets that must\ncontain a k-mer observed in the reference to begin or\ncontinue building candidate signatures. This will be\ncalculated if not specified.")), ToolInput(tag="in_ex_hits", input_type=Int(optional=True), prefix="--exhits", doc=InputDocumentation(doc="The maximum allowable number of exclusion targets that\nmay contain a k-mer observed in the reference before\nterminating the construction of a candidate signature.\nThis will be calculated if not specified.")), ToolInput(tag="in_gap", input_type=Int(optional=True), prefix="--gap", doc=InputDocumentation(doc="The maximum number of consecutive k-mers observed in\nthe reference during signature candidate construction\nthat fail to have enough inclusion hits before\nterminating the construction of a candidate signature.\nThis will be calculated if not specified and is\ndetermined from the size of k and the rate.")), ToolInput(tag="in_size", input_type=Int(optional=True), prefix="--size", doc=InputDocumentation(doc="The minimum size of all reported candidate signatures.\nIdentified candidate signatures shorter than this\nvalue will be discard.")), ToolInput(tag="in_gc_content", input_type=String(optional=True), prefix="--gc-content", doc=InputDocumentation(doc="The average GC-content of all inclusion and exclusion\ntargets. This will be calculated from inclusion and\nexclusion targets if not specified.")), ToolInput(tag="in_confidence", input_type=String(optional=True), prefix="--confidence", doc=InputDocumentation(doc="The statistical confidence level in decision making\ninvolving probabilities when producing candidate\nsignatures.")), ToolInput(tag="in_parallelization", input_type=Int(optional=True), prefix="--parallelization", doc=InputDocumentation(doc="The number of processes to run simultaneously. Note\nthat this is only applicable when running Neptune in\nnon-DRMAA mode (default).")), ToolInput(tag="in_drmaa", input_type=Boolean(optional=True), prefix="--drmaa", doc=InputDocumentation(doc="Whether or not to run Neptune in DRMAA-mode and\nattempt to schedule jobs through DRMAA. This will\nrequire setting up DRMAA in advance.")), ToolInput(tag="in_default_specification", input_type=String(optional=True), prefix="--default-specification", doc=InputDocumentation(doc="The default DRMAA parameters.")), ToolInput(tag="in_count_specification", input_type=String(optional=True), prefix="--count-specification", doc=InputDocumentation(doc="The DRMAA parameters specific to k-mer counting.")), ToolInput(tag="in_aggregate_specification", input_type=String(optional=True), prefix="--aggregate-specification", doc=InputDocumentation(doc="The DRMAA specific parameters specific to k-mer\naggregation.")), ToolInput(tag="in_extract_specification", input_type=String(optional=True), prefix="--extract-specification", doc=InputDocumentation(doc="The DRMAA parameters specific to candidate signature\nextraction.")), ToolInput(tag="in_database_specification", input_type=String(optional=True), prefix="--database-specification", doc=InputDocumentation(doc="The DRMAA parameters specific to database construction\nand querying.")), ToolInput(tag="in_filter_specification", input_type=String(optional=True), prefix="--filter-specification", doc=InputDocumentation(doc="The DRMAA parameters specific to candidate signature\nfiltering.")), ToolInput(tag="in_consolidate_specification", input_type=String(optional=True), prefix="--consolidate-specification", doc=InputDocumentation(doc="The DRMAA parameters specific to filtered signature\nconsolidation.\n")), ToolInput(tag="in_neptune_cond_a", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="The directory to place all output."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Neptune_V0_1_0().translate("wdl", allow_empty_container=True)

