from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String

Prodigal_Sm_V0_1_0 = CommandToolBuilder(tool="prodigal_sm", base_command=["prodigal_sm"], inputs=[ToolInput(tag="in_write_protein_translations", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc=":  Write protein translations to the selected file.")), ToolInput(tag="in_closed_ends_allow", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc=":  Closed ends.  Do not allow genes to run off edges.")), ToolInput(tag="in_write_nucleotide_sequences", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc=":  Write nucleotide sequences of genes to the selected file.")), ToolInput(tag="in_select_output_format", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc=":  Select output format (gbk, gff, or sco).  Default is gbk.")), ToolInput(tag="in_specify_translation_table", input_type=Boolean(optional=True), prefix="-g", doc=InputDocumentation(doc=":  Specify a translation table to use (default 11).")), ToolInput(tag="in_specify_fastagenbank_input", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc=":  Specify FASTA/Genbank input file (default reads from stdin).")), ToolInput(tag="in_treat_runs_n", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc=":  Treat runs of N as masked sequence; don't build genes across them.")), ToolInput(tag="in_bypass_shinedalgarno_trainer", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc=":  Bypass Shine-Dalgarno trainer and force a full motif scan.")), ToolInput(tag="in_specify_file_default", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc=":  Specify output file (default writes to stdout).")), ToolInput(tag="in_select_procedure_single", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc=":  Select procedure (single or meta).  Default is single.")), ToolInput(tag="in_run_quietly_suppress", input_type=Boolean(optional=True), prefix="-q", doc=InputDocumentation(doc=":  Run quietly (suppress normal stderr output).")), ToolInput(tag="in_write_potential_genes", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc=":  Write all potential genes (with scores) to the selected file.")), ToolInput(tag="in_write_training_file", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc=":  Write a training file (if none exists); otherwise, read and use\nthe specified training file.")), ToolInput(tag="in_print_version_number", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc=":  Print version number and exit.")), ToolInput(tag="in_prodigal", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_specify_file_default", output_type=File(optional=True), selector=InputSelector(input_to_select="in_specify_file_default", type_hint=File()), doc=OutputDocumentation(doc=":  Specify output file (default writes to stdout)."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Prodigal_Sm_V0_1_0().translate("wdl", allow_empty_container=True)

