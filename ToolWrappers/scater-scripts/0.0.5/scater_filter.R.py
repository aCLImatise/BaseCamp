from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String

Scater_Filter_R_V0_1_0 = CommandToolBuilder(tool="scater_filter.R", base_command=["scater-filter.R"], inputs=[ToolInput(tag="in_input_object_file", input_type=File(optional=True), prefix="--input-object-file", doc=InputDocumentation(doc="A serialized SingleCellExperiment object file in RDS format.")), ToolInput(tag="in_subset_cell_variables", input_type=String(optional=True), prefix="--subset-cell-variables", doc=InputDocumentation(doc="Comma-separated parameters to subset on. Any variable available in the colData of the supplied object.")), ToolInput(tag="in_low_cell_thresholds", input_type=String(optional=True), prefix="--low-cell-thresholds", doc=InputDocumentation(doc="Comma-separated low cutoffs for the parameters (default is -Inf).")), ToolInput(tag="in_high_cell_thresholds", input_type=String(optional=True), prefix="--high-cell-thresholds", doc=InputDocumentation(doc="Comma-separated high cutoffs for the parameters (default is Inf).")), ToolInput(tag="in_cells_use", input_type=File(optional=True), prefix="--cells-use", doc=InputDocumentation(doc="Comma-separated list of cell names to use as a subset. Alternatively, text file with one cell per line providing cell names to use as a subset.")), ToolInput(tag="in_cells_discard", input_type=File(optional=True), prefix="--cells-discard", doc=InputDocumentation(doc="Comma-separated list of cell names to discard as a subset. Alternatively, text file with one cell per line providing cell names to discard as a subset.")), ToolInput(tag="in_subset_feature_variables", input_type=String(optional=True), prefix="--subset-feature-variables", doc=InputDocumentation(doc="Comma-separated parameters to subset on. Any variable available in the colData of the supplied object.")), ToolInput(tag="in_low_feature_thresholds", input_type=String(optional=True), prefix="--low-feature-thresholds", doc=InputDocumentation(doc="Comma-separated low cutoffs for the parameters (default is -Inf).")), ToolInput(tag="in_high_feature_thresholds", input_type=String(optional=True), prefix="--high-feature-thresholds", doc=InputDocumentation(doc="Comma-separated high cutoffs for the parameters (default is Inf).")), ToolInput(tag="in_features_use", input_type=File(optional=True), prefix="--features-use", doc=InputDocumentation(doc="Comma-separated list of feature names to use as a subset. Alternatively, text file with one feature per line providing feature names to use as a subset.")), ToolInput(tag="in_output_object_file", input_type=File(optional=True), prefix="--output-object-file", doc=InputDocumentation(doc="File name in which to store serialized R object of type 'Seurat'.'")), ToolInput(tag="in_output_cell_select_file", input_type=File(optional=True), prefix="--output-cellselect-file", doc=InputDocumentation(doc="File name in which to store a matrix showing results of applying individual cell selection criteria.")), ToolInput(tag="in_output_feature_select_file", input_type=File(optional=True), prefix="--output-featureselect-file", doc=InputDocumentation(doc="File name in which to store a matrix showing results of applying individual feature selection criteria."))], outputs=[ToolOutput(tag="out_output_object_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_object_file", type_hint=File()), doc=OutputDocumentation(doc="File name in which to store serialized R object of type 'Seurat'.'")), ToolOutput(tag="out_output_cell_select_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_cell_select_file", type_hint=File()), doc=OutputDocumentation(doc="File name in which to store a matrix showing results of applying individual cell selection criteria.")), ToolOutput(tag="out_output_feature_select_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_feature_select_file", type_hint=File()), doc=OutputDocumentation(doc="File name in which to store a matrix showing results of applying individual feature selection criteria."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Scater_Filter_R_V0_1_0().translate("wdl", allow_empty_container=True)

