from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File

Principal_Component_Analysis_Py_V0_1_0 = CommandToolBuilder(tool="principal_component_analysis.py", base_command=["principal_component_analysis.py"], inputs=[ToolInput(tag="in_input", input_type=String(optional=True), prefix="--input", doc=InputDocumentation(doc="Input dataset in wide format.")), ToolInput(tag="in_design", input_type=File(optional=True), prefix="--design", doc=InputDocumentation(doc="Design file.")), ToolInput(tag="in_id", input_type=String(optional=True), prefix="--ID", doc=InputDocumentation(doc="Name of the column with unique identifiers.")), ToolInput(tag="in_group", input_type=String(optional=True), prefix="--group", doc=InputDocumentation(doc="Name of the column with groups.")), ToolInput(tag="in_levels", input_type=String(optional=True), prefix="--levels", doc=InputDocumentation(doc="Different groups to sort by separeted by commas.")), ToolInput(tag="in_load_out", input_type=File(optional=True), prefix="--load_out", doc=InputDocumentation(doc="Name of output file to store loadings. TSV format.")), ToolInput(tag="in_score_out", input_type=File(optional=True), prefix="--score_out", doc=InputDocumentation(doc="Name of output file to store scores. TSV format.")), ToolInput(tag="in_summary_out", input_type=File(optional=True), prefix="--summary_out", doc=InputDocumentation(doc="Name of output file to store summaries of the\ncomponents. TSV format.")), ToolInput(tag="in_figure", input_type=File(optional=True), prefix="--figure", doc=InputDocumentation(doc="Name of output file to storescatter plots for 3\nprincipal components.")), ToolInput(tag="in_palette", input_type=String(optional=True), prefix="--palette", doc=InputDocumentation(doc="Name of the palette to use.")), ToolInput(tag="in_color", input_type=String(optional=True), prefix="--color", doc=InputDocumentation(doc="Name of a valid color scheme on the selected palette\n"))], outputs=[ToolOutput(tag="out_load_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_load_out", type_hint=File()), doc=OutputDocumentation(doc="Name of output file to store loadings. TSV format.")), ToolOutput(tag="out_score_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_score_out", type_hint=File()), doc=OutputDocumentation(doc="Name of output file to store scores. TSV format.")), ToolOutput(tag="out_summary_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_summary_out", type_hint=File()), doc=OutputDocumentation(doc="Name of output file to store summaries of the\ncomponents. TSV format.")), ToolOutput(tag="out_figure", output_type=File(optional=True), selector=InputSelector(input_to_select="in_figure", type_hint=File()), doc=OutputDocumentation(doc="Name of output file to storescatter plots for 3\nprincipal components."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Principal_Component_Analysis_Py_V0_1_0().translate("wdl", allow_empty_container=True)

