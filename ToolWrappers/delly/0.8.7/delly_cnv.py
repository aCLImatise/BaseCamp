from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String

Delly_Cnv_V0_1_0 = CommandToolBuilder(tool="delly_cnv", base_command=["delly", "cnv"], inputs=[ToolInput(tag="in_arg_genome_file", input_type=Boolean(optional=True), prefix="-g", doc=InputDocumentation(doc="[ --genome ] arg                   genome file")), ToolInput(tag="in_arg_min_mapping", input_type=Boolean(optional=True), prefix="-q", doc=InputDocumentation(doc="[ --quality ] arg (=10)            min. mapping quality")), ToolInput(tag="in_arg_input_mappability", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="[ --mappability ] arg              input mappability map")), ToolInput(tag="in_arg_baseline_ploidy", input_type=Boolean(optional=True), prefix="-y", doc=InputDocumentation(doc="[ --ploidy ] arg (=2)              baseline ploidy")), ToolInput(tag="in_arg_output_file", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="[ --outfile ] arg (='cnv.bcf')     output CNV file")), ToolInput(tag="in_arg_output_coverage", input_type=File(optional=True), prefix="-c", doc=InputDocumentation(doc="[ --covfile ] arg (='cov.gz')      output coverage file")), ToolInput(tag="in_arg_min_sd", input_type=Boolean(optional=True), prefix="-x", doc=InputDocumentation(doc="[ --sdrd ] arg (=2)                min. SD read-depth shift")), ToolInput(tag="in_arg_min_cn", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="[ --cn-offset ] arg (=0.100000001) min. CN offset")), ToolInput(tag="in_arg_min_size", input_type=Boolean(optional=True), prefix="-z", doc=InputDocumentation(doc="[ --cnv-size ] arg (=1000)         min. CNV size")), ToolInput(tag="in_arg_delly_sv", input_type=Boolean(optional=True), prefix="-l", doc=InputDocumentation(doc="[ --svfile ] arg                   delly SV file for breakpoint refinement")), ToolInput(tag="in_arg_input_file", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="[ --vcffile ] arg                  input VCF/BCF file for re-genotyping")), ToolInput(tag="in__copynumber_segmentation", input_type=Boolean(optional=True), prefix="-u", doc=InputDocumentation(doc="[ --segmentation ]                 copy-number segmentation")), ToolInput(tag="in_arg_window_size", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="[ --window-size ] arg (=10000)     window size")), ToolInput(tag="in_arg_window_offset", input_type=Boolean(optional=True), prefix="-j", doc=InputDocumentation(doc="[ --window-offset ] arg (=10000)   window offset")), ToolInput(tag="in_arg_input_bed", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc="[ --bed-intervals ] arg            input BED file")), ToolInput(tag="in_k", input_type=Boolean(optional=True), prefix="-k", doc=InputDocumentation(doc="[ --fraction-window ] arg (=0.25)  min. callable window fraction [0,1]")), ToolInput(tag="in_use_mappable_bases", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="[ --adaptive-windowing ]           use mappable bases for window size")), ToolInput(tag="in_arg_scanning_size", input_type=Boolean(optional=True), prefix="-w", doc=InputDocumentation(doc="[ --scan-window ] arg (=10000)     scanning window size")), ToolInput(tag="in_arg_uniqueness_filter", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc="[ --fraction-unique ] arg (=0.800000012)\nuniqueness filter for scan windows\n[0,1]")), ToolInput(tag="in_arg_scanning_regions", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="[ --scan-regions ] arg             scanning regions in BED format")), ToolInput(tag="in_arg_median_mad", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc="[ --mad-cutoff ] arg (=3)          median + 3 * mad count cutoff")), ToolInput(tag="in_arg_extreme_fraction", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="[ --percentile ] arg (=0.000500000024)\nexcl. extreme GC fraction")), ToolInput(tag="in_scan_window_selection", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="[ --no-window-selection ]          no scan window selection")), ToolInput(tag="in_aligned_dot_bam", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_arg_output_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_arg_output_file", type_hint=File()), doc=OutputDocumentation(doc="[ --outfile ] arg (='cnv.bcf')     output CNV file")), ToolOutput(tag="out_arg_output_coverage", output_type=File(optional=True), selector=InputSelector(input_to_select="in_arg_output_coverage", type_hint=File()), doc=OutputDocumentation(doc="[ --covfile ] arg (='cov.gz')      output coverage file"))], container="quay.io/biocontainers/delly:0.8.7--hf3ca161_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Delly_Cnv_V0_1_0().translate("wdl")

