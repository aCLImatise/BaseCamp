from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Array, String, Int, Boolean, Float, File

Epic_V0_1_0 = CommandToolBuilder(tool="epic", base_command=["epic"], inputs=[ToolInput(tag="in_treatment", input_type=Array(t=String(), optional=True), prefix="--treatment", doc=InputDocumentation(doc="Treatment (pull-down) file(s) in (b/gzipped) bed/bedpe\nformat.")), ToolInput(tag="in_control", input_type=Array(t=String(), optional=True), prefix="--control", doc=InputDocumentation(doc="Control (input) file(s) in (b/gzipped) bed/bedpe\nformat.")), ToolInput(tag="in_number_cores", input_type=Int(optional=True), prefix="--number-cores", doc=InputDocumentation(doc="Number of cpus to use. Can use at most one per\nchromosome. Default: 1.")), ToolInput(tag="in_genome", input_type=Int(optional=True), prefix="--genome", doc=InputDocumentation(doc="Which genome to analyze. Default: hg19. If\n--chromsizes flag is given, --genome is not required.")), ToolInput(tag="in_keep_duplicates", input_type=Boolean(optional=True), prefix="--keep-duplicates", doc=InputDocumentation(doc="Keep reads mapping to the same position on the same\nstrand within a library. Default is to remove all but\nthe first duplicate.")), ToolInput(tag="in_window_size", input_type=Int(optional=True), prefix="--window-size", doc=InputDocumentation(doc="Size of the windows to scan the genome. WINDOW_SIZE is\nthe smallest possible island. Default 200.")), ToolInput(tag="in_gaps_allowed", input_type=Int(optional=True), prefix="--gaps-allowed", doc=InputDocumentation(doc="This number is multiplied by the window size to\ndetermine the gap size. Must be an integer. Default:\n3.")), ToolInput(tag="in_fragment_size", input_type=Int(optional=True), prefix="--fragment-size", doc=InputDocumentation(doc="(Single end reads only) Size of the sequenced\nfragment. The center of the the fragment will be taken\nas half the fragment size. Default 150.")), ToolInput(tag="in_false_discovery_rate_cut_off", input_type=Float(optional=True), prefix="--false-discovery-rate-cutoff", doc=InputDocumentation(doc="Remove all islands with an FDR below cutoff. Default\n0.05.")), ToolInput(tag="in_effective_genome_fraction", input_type=Int(optional=True), prefix="--effective-genome-fraction", doc=InputDocumentation(doc="Use a different effective genome fraction than the one\nincluded in epic. The default value depends on the\ngenome and readlength, but is a number between 0 and\n1.")), ToolInput(tag="in_chrom_sizes", input_type=File(optional=True), prefix="--chromsizes", doc=InputDocumentation(doc="Set the chromosome lengths yourself in a file with two\ncolumns: chromosome names and sizes. Useful to analyze\ncustom genomes, assemblies or simulated data. Only\nchromosomes included in the file will be analyzed.")), ToolInput(tag="in_store_matrix", input_type=File(optional=True), prefix="--store-matrix", doc=InputDocumentation(doc="Store the matrix of counts per bin for ChIP and input\nto gzipped file <STORE_MATRIX>.")), ToolInput(tag="in_bigwig", input_type=File(optional=True), prefix="--bigwig", doc=InputDocumentation(doc="For each file, store a bigwig of both enriched and\nnon-enriched regions to folder <BIGWIG>. Requires\ndifferent basenames for each file.")), ToolInput(tag="in_individual_log_two_fc_bigwigs", input_type=Int(optional=True), prefix="--individual-log2fc-bigwigs", doc=InputDocumentation(doc="For each file, store a bigwig of the log2fc of\nChIP/(Sum Input) to folder <INDIVIDUAL-LOG2FC-\nBIGWIGS>. Requires different basenames for each file.")), ToolInput(tag="in_chip_bigwig", input_type=File(optional=True), prefix="--chip-bigwig", doc=InputDocumentation(doc="Store an RPKM-normalized summed bigwig for all ChIP\nfiles in file <CHIP-BIGWIG>.")), ToolInput(tag="in_input_bigwig", input_type=File(optional=True), prefix="--input-bigwig", doc=InputDocumentation(doc="Store an RPKM-normalized summed bigwig for all Input\nfiles in file <INPUT-BIGWIG>.")), ToolInput(tag="in_log_two_fc_bigwig", input_type=Int(optional=True), prefix="--log2fc-bigwig", doc=InputDocumentation(doc="Store an log2(ChIP/Input) bigwig in file <LOG2FC-\nBIGWIG>. (Both ChIP and Input are RPKM-normalized\nbefore dividing.)")), ToolInput(tag="in_bed", input_type=File(optional=True), prefix="--bed", doc=InputDocumentation(doc="A summary bed file of all regions for display in the\nUCSC genome browser or downstream analyses with e.g.\nbedtools. The score field is log2(#ChIP/#Input) * 100\ncapped at a 1000.")), ToolInput(tag="in_log", input_type=File(optional=True), prefix="--log", doc=InputDocumentation(doc="File to write log messages to.")), ToolInput(tag="in_outfile", input_type=File(optional=True), prefix="--outfile", doc=InputDocumentation(doc="File to write results to. By default sent to stdout."))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Epic_V0_1_0().translate("wdl", allow_empty_container=True)

