from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, File, String

Bcftools_Gtcheck_V0_1_0 = CommandToolBuilder(tool="bcftools_gtcheck", base_command=["bcftools", "gtcheck"], inputs=[ToolInput(tag="in_distinctive_sites", input_type=Boolean(optional=True), prefix="--distinctive-sites", doc=InputDocumentation(doc="Find sites that can distinguish between at least NUM sample pairs.\nNUM[,MEM[,TMP]]          If the number is smaller or equal to 1, it is interpreted as the fraction of pairs.\nThe optional MEM string sets the maximum memory used for in-memory sorting [500M]\nand TMP is a prefix of temporary files used by external sorting [/tmp/bcftools-gtcheck]")), ToolInput(tag="in_dry_run", input_type=Boolean(optional=True), prefix="--dry-run", doc=InputDocumentation(doc="Stop after first record to estimate required time")), ToolInput(tag="in_error_probability", input_type=Int(optional=True), prefix="--error-probability", doc=InputDocumentation(doc="Phred-scaled probability of genotyping error, 0 for faster but less accurate results [40]")), ToolInput(tag="in_genotypes", input_type=File(optional=True), prefix="--genotypes", doc=InputDocumentation(doc="Genotypes to compare against")), ToolInput(tag="in_homs_only", input_type=Boolean(optional=True), prefix="--homs-only", doc=InputDocumentation(doc="Homozygous genotypes only, useful with low coverage data (requires -g)")), ToolInput(tag="in_n_matches", input_type=Int(optional=True), prefix="--n-matches", doc=InputDocumentation(doc="Print only top INT matches for each sample (sorted by average score), 0 for unlimited.\nUse negative value to sort by HWE probability rather than by discordance [0]")), ToolInput(tag="in_no_h_we_prob", input_type=Boolean(optional=True), prefix="--no-HWE-prob", doc=InputDocumentation(doc="Disable calculation of HWE probability")), ToolInput(tag="in_pairs", input_type=String(optional=True), prefix="--pairs", doc=InputDocumentation(doc="Comma-separated sample pairs to compare (qry,gt[,qry,gt..] with -g or qry,qry[,qry,qry..] w/o)")), ToolInput(tag="in_pairs_file", input_type=File(optional=True), prefix="--pairs-file", doc=InputDocumentation(doc="File with tab-delimited sample pairs to compare (qry,gt with -g or qry,qry w/o)")), ToolInput(tag="in_regions", input_type=String(optional=True), prefix="--regions", doc=InputDocumentation(doc="Restrict to comma-separated list of regions")), ToolInput(tag="in_regions_file", input_type=File(optional=True), prefix="--regions-file", doc=InputDocumentation(doc="Restrict to regions listed in a file")), ToolInput(tag="in_samples", input_type=Boolean(optional=True), prefix="--samples", doc=InputDocumentation(doc="[qry|gt]:LIST        List of query or -g samples, '-' to select all samples (by default all samples are compared)")), ToolInput(tag="in_samples_file", input_type=Boolean(optional=True), prefix="--samples-file", doc=InputDocumentation(doc="[qry|gt]:FILE   File with the query or -g samples to compare")), ToolInput(tag="in_targets", input_type=String(optional=True), prefix="--targets", doc=InputDocumentation(doc="Similar to -r but streams rather than index-jumps")), ToolInput(tag="in_targets_file", input_type=File(optional=True), prefix="--targets-file", doc=InputDocumentation(doc="Similar to -R but streams rather than index-jumps")), ToolInput(tag="in_use", input_type=Int(), prefix="--use", doc=InputDocumentation(doc="Which tag to use in the query file (TAG1) and the -g file (TAG2) [PL,GT]")), ToolInput(tag="in_query_dot_vcf_do_tgz", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[], container="quay.io/biocontainers/bcftools:1.12--h3f113a9_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bcftools_Gtcheck_V0_1_0().translate("wdl")

