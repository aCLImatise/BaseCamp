from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Boolean, Float, Int

Bcftools_Cnv_V0_1_0 = CommandToolBuilder(tool="bcftools_cnv", base_command=["bcftools", "cnv"], inputs=[ToolInput(tag="in_control_sample", input_type=String(optional=True), prefix="--control-sample", doc=InputDocumentation(doc="optional control sample name to highlight differences")), ToolInput(tag="in_af_file", input_type=File(optional=True), prefix="--AF-file", doc=InputDocumentation(doc="read allele frequencies from file (CHR\tPOS\tREF,ALT\tAF)")), ToolInput(tag="in_plot_threshold", input_type=File(optional=True), prefix="--plot-threshold", doc=InputDocumentation(doc="plot aberrant chromosomes with quality at least 'float'")), ToolInput(tag="in_regions", input_type=String(optional=True), prefix="--regions", doc=InputDocumentation(doc="restrict to comma-separated list of regions")), ToolInput(tag="in_regions_file", input_type=File(optional=True), prefix="--regions-file", doc=InputDocumentation(doc="restrict to regions listed in a file")), ToolInput(tag="in_query_sample", input_type=String(optional=True), prefix="--query-sample", doc=InputDocumentation(doc="query samply name")), ToolInput(tag="in_targets", input_type=String(optional=True), prefix="--targets", doc=InputDocumentation(doc="similar to -r but streams rather than index-jumps")), ToolInput(tag="in_targets_file", input_type=File(optional=True), prefix="--targets-file", doc=InputDocumentation(doc="similar to -R but streams rather than index-jumps")), ToolInput(tag="in_aberrant", input_type=Boolean(optional=True), prefix="--aberrant", doc=InputDocumentation(doc="<float[,float]>     fraction of aberrant cells in query and control [1.0,1.0]")), ToolInput(tag="in_baf_weight", input_type=Float(optional=True), prefix="--BAF-weight", doc=InputDocumentation(doc="relative contribution from BAF [1]")), ToolInput(tag="in_baf_dev", input_type=Boolean(optional=True), prefix="--BAF-dev", doc=InputDocumentation(doc="<float[,float]>      expected BAF deviation in query and control [0.04,0.04]")), ToolInput(tag="in_err_prob", input_type=Float(optional=True), prefix="--err-prob", doc=InputDocumentation(doc="uniform error probability [1e-4]")), ToolInput(tag="in_lrr_dev", input_type=Boolean(optional=True), prefix="--LRR-dev", doc=InputDocumentation(doc="<float[,float]>      expected LRR deviation [0.2,0.2]")), ToolInput(tag="in_lrr_weight", input_type=Float(optional=True), prefix="--LRR-weight", doc=InputDocumentation(doc="relative contribution from LRR [0.2]")), ToolInput(tag="in_lrr_smooth_win", input_type=Int(optional=True), prefix="--LRR-smooth-win", doc=InputDocumentation(doc="window of LRR moving average smoothing [10]")), ToolInput(tag="in_optimize", input_type=Float(optional=True), prefix="--optimize", doc=InputDocumentation(doc="estimate fraction of aberrant cells down to <float> [1.0]")), ToolInput(tag="in_same_prob", input_type=Float(optional=True), prefix="--same-prob", doc=InputDocumentation(doc="prior probability of -s/-c being the same [0.5]")), ToolInput(tag="in_xy_prob", input_type=Float(optional=True), prefix="--xy-prob", doc=InputDocumentation(doc="P(x|y) transition probability [1e-9]")), ToolInput(tag="in_file_dot_vcf", input_type=File(), position=0, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bcftools_Cnv_V0_1_0().translate("wdl", allow_empty_container=True)

