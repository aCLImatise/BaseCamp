from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Float, String, File, Boolean, Int

Bcftools_Roh_V0_1_0 = CommandToolBuilder(tool="bcftools_roh", base_command=["bcftools", "roh"], inputs=[ToolInput(tag="in_af_dflt", input_type=Float(optional=True), prefix="--AF-dflt", doc=InputDocumentation(doc="if AF is not known, use this allele frequency [skip]")), ToolInput(tag="in_af_tag", input_type=String(optional=True), prefix="--AF-tag", doc=InputDocumentation(doc="use TAG for allele frequency")), ToolInput(tag="in_af_file", input_type=File(optional=True), prefix="--AF-file", doc=InputDocumentation(doc="read allele frequencies from file (CHR\tPOS\tREF\tALT\tAF)")), ToolInput(tag="in_buffer_size", input_type=Boolean(optional=True), prefix="--buffer-size", doc=InputDocumentation(doc="<int[,int]>      buffer size and the number of overlapping sites, 0 for unlimited [0]\nIf the first number is negative, it is interpreted as the maximum memory to\nuse, in MB. The default overlap is set to roughly 1% of the buffer size.")), ToolInput(tag="in_estimate_af", input_type=Boolean(optional=True), prefix="--estimate-AF", doc=InputDocumentation(doc="[TAG],<file>     estimate AF from FORMAT/TAG (GT or PL) of all samples ('-') or samples listed\nin <file>. If TAG is not given, the frequency is estimated from GT by default")), ToolInput(tag="in_exclude", input_type=String(optional=True), prefix="--exclude", doc=InputDocumentation(doc="exclude sites for which the expression is true")), ToolInput(tag="in_gts_only", input_type=Float(optional=True), prefix="--GTs-only", doc=InputDocumentation(doc="use GTs and ignore PLs, instead using <float> for PL of the two least likely genotypes.\nSafe value to use is 30 to account for GT errors.")), ToolInput(tag="in_include", input_type=String(optional=True), prefix="--include", doc=InputDocumentation(doc="select sites for which the expression is true")), ToolInput(tag="in_ignore_hom_ref", input_type=Boolean(optional=True), prefix="--ignore-homref", doc=InputDocumentation(doc="skip hom-ref genotypes (0/0)")), ToolInput(tag="in_skip_indels", input_type=Boolean(optional=True), prefix="--skip-indels", doc=InputDocumentation(doc="skip indels as their genotypes are enriched for errors")), ToolInput(tag="in_genetic_map", input_type=File(optional=True), prefix="--genetic-map", doc=InputDocumentation(doc="genetic map in IMPUTE2 format, single file or mask, where string '{CHROM}'\nis replaced with chromosome name")), ToolInput(tag="in_rec_rate", input_type=Float(optional=True), prefix="--rec-rate", doc=InputDocumentation(doc="constant recombination rate per bp")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="write output to a file [standard output]")), ToolInput(tag="in_output_type", input_type=Boolean(optional=True), prefix="--output-type", doc=InputDocumentation(doc="[srz]            output s:per-site, r:regions, z:compressed [sr]")), ToolInput(tag="in_regions", input_type=String(optional=True), prefix="--regions", doc=InputDocumentation(doc="restrict to comma-separated list of regions")), ToolInput(tag="in_regions_file", input_type=File(optional=True), prefix="--regions-file", doc=InputDocumentation(doc="restrict to regions listed in a file")), ToolInput(tag="in_samples", input_type=String(optional=True), prefix="--samples", doc=InputDocumentation(doc="list of samples to analyze [all samples]")), ToolInput(tag="in_samples_file", input_type=File(optional=True), prefix="--samples-file", doc=InputDocumentation(doc="file of samples to analyze [all samples]")), ToolInput(tag="in_targets", input_type=String(optional=True), prefix="--targets", doc=InputDocumentation(doc="similar to -r but streams rather than index-jumps")), ToolInput(tag="in_targets_file", input_type=File(optional=True), prefix="--targets-file", doc=InputDocumentation(doc="similar to -R but streams rather than index-jumps")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="use multithreading with <int> worker threads [0]")), ToolInput(tag="in_hw_to_az", input_type=Float(optional=True), prefix="--hw-to-az", doc=InputDocumentation(doc="P(AZ|HW) transition probability from HW (Hardy-Weinberg) to AZ (autozygous) state [6.7e-8]")), ToolInput(tag="in_az_to_hw", input_type=Float(optional=True), prefix="--az-to-hw", doc=InputDocumentation(doc="P(HW|AZ) transition probability from AZ to HW state [5e-9]")), ToolInput(tag="in_viterbi_training", input_type=Float(optional=True), prefix="--viterbi-training", doc=InputDocumentation(doc="estimate HMM parameters, <float> is the convergence threshold, e.g. 1e-10 (experimental)")), ToolInput(tag="in_in_dot_vcf_do_tgz", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="write output to a file [standard output]"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bcftools_Roh_V0_1_0().translate("wdl", allow_empty_container=True)

