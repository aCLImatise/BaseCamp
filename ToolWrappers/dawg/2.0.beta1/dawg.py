from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Int, String

Dawg_V0_1_0 = CommandToolBuilder(tool="dawg", base_command=["dawg"], inputs=[ToolInput(tag="in_help_trick", input_type=Boolean(optional=True), prefix="--help-trick", doc=InputDocumentation(doc="display description of common control variables")), ToolInput(tag="in_arg_output_file", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="[ --output ] arg          output to this file")), ToolInput(tag="in_seed", input_type=Int(optional=True), prefix="--seed", doc=InputDocumentation(doc="(=0)              PRNG seed")), ToolInput(tag="in_reps", input_type=Int(optional=True), prefix="--reps", doc=InputDocumentation(doc="(=0)              the number of alignments to generate")), ToolInput(tag="in_split", input_type=Boolean(optional=True), prefix="--split", doc=InputDocumentation(doc="[=arg(=on)] (=null)  split output into separate files")), ToolInput(tag="in_append", input_type=File(optional=True), prefix="--append", doc=InputDocumentation(doc="[=arg(=on)] (=null) append output to file")), ToolInput(tag="in_label", input_type=Boolean(optional=True), prefix="--label", doc=InputDocumentation(doc="[=arg(=on)] (=null)  label each simulation with a unique id")), ToolInput(tag="in_arg_file", input_type=File(optional=True), prefix="--arg-file", doc=InputDocumentation(doc="read arguments from file")), ToolInput(tag="in_var_8", input_type=Boolean(optional=True), prefix="--output", doc=InputDocumentation(doc="")), ToolInput(tag="in_allowed", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_arg", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_display", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_read", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_arguments", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_description", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_help", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_var_16", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_version", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_from", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_of", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_to", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_common", input_type=String(), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_this", input_type=String(), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_control", input_type=String(), position=4, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_arg_output_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_arg_output_file", type_hint=File()), doc=OutputDocumentation(doc="[ --output ] arg          output to this file")), ToolOutput(tag="out_append", output_type=File(optional=True), selector=InputSelector(input_to_select="in_append", type_hint=File()), doc=OutputDocumentation(doc="[=arg(=on)] (=null) append output to file"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Dawg_V0_1_0().translate("wdl", allow_empty_container=True)

