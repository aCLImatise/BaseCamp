from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Directory, File, String, Int

Phyluce_Assembly_Match_Contigs_To_Probes_V0_1_0 = CommandToolBuilder(tool="phyluce_assembly_match_contigs_to_probes", base_command=["phyluce_assembly_match_contigs_to_probes"], inputs=[ToolInput(tag="in_contigs", input_type=Directory(optional=True), prefix="--contigs", doc=InputDocumentation(doc="The directory containing the assembled contigs in\nwhich you are searching for UCE loci.")), ToolInput(tag="in_probes", input_type=File(optional=True), prefix="--probes", doc=InputDocumentation(doc="The bait/probe file in FASTA format.")), ToolInput(tag="in_directory_store_sqldatabase", input_type=Directory(optional=True), prefix="--output", doc=InputDocumentation(doc="The directory in which to store the resulting SQL\ndatabase and LASTZ files.")), ToolInput(tag="in_verbosity", input_type=String(optional=True), prefix="--verbosity", doc=InputDocumentation(doc="The logging level to use.")), ToolInput(tag="in_log_path", input_type=File(optional=True), prefix="--log-path", doc=InputDocumentation(doc="The path to a directory to hold logs.")), ToolInput(tag="in_min_coverage", input_type=Int(optional=True), prefix="--min-coverage", doc=InputDocumentation(doc="The minimum percent coverage required for a match\n[default=80].")), ToolInput(tag="in_min_identity", input_type=Int(optional=True), prefix="--min-identity", doc=InputDocumentation(doc="The minimum percent identity required for a match\n[default=80].")), ToolInput(tag="in_dupe_file", input_type=File(optional=True), prefix="--dupefile", doc=InputDocumentation(doc="Path to self-to-self lastz results for baits to remove\npotential duplicate probes.")), ToolInput(tag="in_regex", input_type=String(optional=True), prefix="--regex", doc=InputDocumentation(doc="A regular expression to apply to the probe names for\nreplacement [default='^(uce-\d+)(?:_p\d+.*)'].")), ToolInput(tag="in_keep_duplicates", input_type=File(optional=True), prefix="--keep-duplicates", doc=InputDocumentation(doc="A optional output file in which to store those loci\nthat appear to be duplicates.\n")), ToolInput(tag="in_var_10", input_type=String(), position=0, doc=InputDocumentation(doc="[--verbosity {INFO,WARN,CRITICAL}]"))], outputs=[ToolOutput(tag="out_keep_duplicates", output_type=File(optional=True), selector=InputSelector(input_to_select="in_keep_duplicates", type_hint=File()), doc=OutputDocumentation(doc="A optional output file in which to store those loci\nthat appear to be duplicates.\n"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Phyluce_Assembly_Match_Contigs_To_Probes_V0_1_0().translate("wdl", allow_empty_container=True)

