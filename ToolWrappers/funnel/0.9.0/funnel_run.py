from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String

Funnel_Run_V0_1_0 = CommandToolBuilder(tool="funnel_run", base_command=["funnel", "run"], inputs=[ToolInput(tag="in_server", input_type=Boolean(optional=True), prefix="--server", doc=InputDocumentation(doc="Address of Funnel server. Default: http://localhost:8000")), ToolInput(tag="in_container", input_type=Boolean(optional=True), prefix="--container", doc=InputDocumentation(doc="Containter the command runs in. Default: alpine")), ToolInput(tag="in_sh", input_type=Boolean(optional=True), prefix="--sh", doc=InputDocumentation(doc="Command to be run. This command will be run with the shell: 'sh -c '<sh>''.\nThis is the default execution mode for commands passed as args.")), ToolInput(tag="in_exec", input_type=Boolean(optional=True), prefix="--exec", doc=InputDocumentation(doc="Command to be run. This command will not be evaulated by 'sh'.")), ToolInput(tag="in_print", input_type=Boolean(optional=True), prefix="--print", doc=InputDocumentation(doc="Print the task without running it.")), ToolInput(tag="in_scatter", input_type=Boolean(optional=True), prefix="--scatter", doc=InputDocumentation(doc="Scatter multiple tasks, one per row of the given file.")), ToolInput(tag="in_wait", input_type=Boolean(optional=True), prefix="--wait", doc=InputDocumentation(doc="Wait for the task to finish before exiting.")), ToolInput(tag="in_wait_for", input_type=Boolean(optional=True), prefix="--wait-for", doc=InputDocumentation(doc="Wait for the given task IDs before running the task.")), ToolInput(tag="in_in", input_type=Boolean(optional=True), prefix="--in", doc=InputDocumentation(doc="Input file e.g. varname=/path/to/input.txt")), ToolInput(tag="in_in_dir", input_type=Boolean(optional=True), prefix="--in-dir", doc=InputDocumentation(doc="Input directory e.g. varname=/path/to/dir")), ToolInput(tag="in_out", input_type=File(optional=True), prefix="--out", doc=InputDocumentation(doc="Output file e.g. varname=/path/to/output.txt")), ToolInput(tag="in_out_dir", input_type=File(optional=True), prefix="--out-dir", doc=InputDocumentation(doc="Output directory e.g. varname=/path/to/dir")), ToolInput(tag="in_content", input_type=Boolean(optional=True), prefix="--content", doc=InputDocumentation(doc="Include input file content from a file e.g. varname=/path/to/in.txt")), ToolInput(tag="in_stdin", input_type=Boolean(optional=True), prefix="--stdin", doc=InputDocumentation(doc="File to write to stdin to the command.")), ToolInput(tag="in_stdout", input_type=Boolean(optional=True), prefix="--stdout", doc=InputDocumentation(doc="File to write to stdout of the command.")), ToolInput(tag="in_stderr", input_type=Boolean(optional=True), prefix="--stderr", doc=InputDocumentation(doc="File to write to stderr of the command.")), ToolInput(tag="in_cpu", input_type=Boolean(optional=True), prefix="--cpu", doc=InputDocumentation(doc="Number of CPUs to request.")), ToolInput(tag="in_ram", input_type=Boolean(optional=True), prefix="--ram", doc=InputDocumentation(doc="Amount of RAM to request, in GB.")), ToolInput(tag="in_disk", input_type=Boolean(optional=True), prefix="--disk", doc=InputDocumentation(doc="Amount of disk space to request, in GB.")), ToolInput(tag="in_zone", input_type=Boolean(optional=True), prefix="--zone", doc=InputDocumentation(doc="Require task be scheduled in certain zones.")), ToolInput(tag="in_preemptible", input_type=String(optional=True), prefix="--preemptible", doc=InputDocumentation(doc="task to be scheduled on preemptible workers.")), ToolInput(tag="in_name", input_type=Boolean(optional=True), prefix="--name", doc=InputDocumentation(doc="Task name.")), ToolInput(tag="in_description", input_type=Boolean(optional=True), prefix="--description", doc=InputDocumentation(doc="Task description.")), ToolInput(tag="in_tag", input_type=Boolean(optional=True), prefix="--tag", doc=InputDocumentation(doc="Arbitrary key-value tags, e.g. tagname=tagvalue")), ToolInput(tag="in_env", input_type=Boolean(optional=True), prefix="--env", doc=InputDocumentation(doc="Environment variables, e.g. envvar=foo")), ToolInput(tag="in_workdir", input_type=Boolean(optional=True), prefix="--workdir", doc=InputDocumentation(doc="Containter working directory.")), ToolInput(tag="in_vol", input_type=Boolean(optional=True), prefix="--vol", doc=InputDocumentation(doc="Define a volume on the container."))], outputs=[ToolOutput(tag="out_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out", type_hint=File()), doc=OutputDocumentation(doc="Output file e.g. varname=/path/to/output.txt")), ToolOutput(tag="out_out_dir", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_dir", type_hint=File()), doc=OutputDocumentation(doc="Output directory e.g. varname=/path/to/dir"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Funnel_Run_V0_1_0().translate("wdl", allow_empty_container=True)

