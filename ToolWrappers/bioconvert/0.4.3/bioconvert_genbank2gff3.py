from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, Int, Array

Bioconvert_Genbank2Gff3_V0_1_0 = CommandToolBuilder(tool="bioconvert_genbank2gff3", base_command=["bioconvert", "genbank2gff3"], inputs=[ToolInput(tag="in_force", input_type=Boolean(optional=True), prefix="--force", doc=InputDocumentation(doc="if outfile exists, it is overwritten with this option\n(default: False)")), ToolInput(tag="in_verbosity", input_type=String(optional=True), prefix="--verbosity", doc=InputDocumentation(doc="Set the outpout verbosity. (default: ERROR)")), ToolInput(tag="in_raise_exception", input_type=Boolean(optional=True), prefix="--raise-exception", doc=InputDocumentation(doc="Let exception ending the execution be raised and\ndisplayed (default: False)")), ToolInput(tag="in_batch", input_type=Boolean(optional=True), prefix="--batch", doc=InputDocumentation(doc="Allow conversion of a set of files using wildcards.\nYou must use quotes to escape the wildcards. For\ninstance: --batch 'test*fastq' (default: False)")), ToolInput(tag="in_benchmark", input_type=Boolean(optional=True), prefix="--benchmark", doc=InputDocumentation(doc="Running all available methods (default: False)")), ToolInput(tag="in_benchmark_n", input_type=Int(optional=True), prefix="--benchmark-N", doc=InputDocumentation(doc="Number of trials for each methods (default: 5)")), ToolInput(tag="in_benchmark_methods", input_type=Array(t=String(), optional=True), prefix="--benchmark-methods", doc=InputDocumentation(doc="Methods to include (default: all)")), ToolInput(tag="in_allow_indirect_conversion", input_type=Boolean(optional=True), prefix="--allow-indirect-conversion", doc=InputDocumentation(doc="Allow to chain converter when direct conversion is\nabsent (default: False)")), ToolInput(tag="in_extra_arguments", input_type=String(optional=True), prefix="--extra-arguments", doc=InputDocumentation(doc="Any arguments accepted by the method's tool (default:\n)")), ToolInput(tag="in_method_use_do", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="[{biocode}], --method [{biocode}]\nThe method to use to do the conversion. (default:\nbiocode)")), ToolInput(tag="in_show_methods", input_type=Boolean(optional=True), prefix="--show-methods", doc=InputDocumentation(doc="A converter may have several methods (default: False)")), ToolInput(tag="in_input_file", input_type=String(), position=0, doc=InputDocumentation(doc="The path to the file to convert. (default: None)")), ToolInput(tag="in_output_file", input_type=String(), position=1, doc=InputDocumentation(doc="The path where the result will be stored. (default:\nNone)"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bioconvert_Genbank2Gff3_V0_1_0().translate("wdl", allow_empty_container=True)

