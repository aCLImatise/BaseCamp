from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Int, String, Directory

Treerecs_V0_1_0 = CommandToolBuilder(tool="treerecs", base_command=["treerecs"], inputs=[ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="verbose mode. Causes Treerecs to print messages about its progress.")), ToolInput(tag="in_super_verbose", input_type=Boolean(optional=True), prefix="--superverbose", doc=InputDocumentation(doc="super-verbose mode. Print even more messages than in verbose mode.")), ToolInput(tag="in_gene_tree", input_type=File(optional=True), prefix="--genetree", doc=InputDocumentation(doc="input gene tree(s) (supported formats: Newick, NHX or PhyloXML).")), ToolInput(tag="in_species_tree", input_type=File(optional=True), prefix="--speciestree", doc=InputDocumentation(doc="input species tree (supported formats: Newick, NHX or PhyloXML).")), ToolInput(tag="in_alignments", input_type=File(optional=True), prefix="--alignments", doc=InputDocumentation(doc="input alignment file. Must contain:\n* the pll substitution model to use\n* the paths to the multiple alignments (one per gene-tree)")), ToolInput(tag="in_s_map", input_type=File(optional=True), prefix="--smap", doc=InputDocumentation(doc="input gene-to-species mapping file.")), ToolInput(tag="in_re_root", input_type=Boolean(optional=True), prefix="--reroot", doc=InputDocumentation(doc="find the best root according to the reconciliation cost.")), ToolInput(tag="in_dup_cost", input_type=Int(optional=True), prefix="--dupcost", doc=InputDocumentation(doc="specify gene duplication cost (default value = 2).")), ToolInput(tag="in_loss_cost", input_type=Int(optional=True), prefix="--losscost", doc=InputDocumentation(doc="specify gene loss cost (default value = 1).")), ToolInput(tag="in_threshold", input_type=String(optional=True), prefix="--threshold", doc=InputDocumentation(doc="| quantiles[N]\nspecify branch support thresholds to use while contracting gene trees.\n* EXPRESSION can be any colon-separated combination of the following:\nnone: no contraction\nall: contract all branches. The tree collapses into a single polytomy\nVALUE: contract branches with support strictly lower than VALUE\nVALUE+epsilon (short VALUE+e): contract branches with support equal to\nor lower than VALUE\n* quantiles[N]: use several threshold values: none, all, and the\nquantiles dividing the branch supports into N groups")), ToolInput(tag="in_sample_size", input_type=Int(optional=True), prefix="--sample-size", doc=InputDocumentation(doc="size of the tree sampling (default value = 1).")), ToolInput(tag="in_tree_index", input_type=File(optional=True), prefix="--tree-index", doc=InputDocumentation(doc="only consider the VALUE-th gene tree in the gene tree file.")), ToolInput(tag="in_outdir", input_type=Directory(optional=True), prefix="--outdir", doc=InputDocumentation(doc="output directory (default: treerecs_output).")), ToolInput(tag="in_output_format", input_type=String(optional=True), prefix="--output-format", doc=InputDocumentation(doc="output format(s): newick(default), nhx, phyloxml, recphyloxml or svg.\nrepeat option or use a colon-separated list of formats to get multiple\noutput")), ToolInput(tag="in_force", input_type=Boolean(optional=True), prefix="--force", doc=InputDocumentation(doc="force possible overwrite of existing files.")), ToolInput(tag="in_sep", input_type=String(optional=True), prefix="--sep", doc=InputDocumentation(doc="specify separator character for species names embedded in gene names\n(default = '_').")), ToolInput(tag="in_prefix", input_type=String(optional=True), prefix="--prefix", doc=InputDocumentation(doc="/N\nspecify whether the species_name is a prefix of gene_name\ndefault = N).")), ToolInput(tag="in_parallelize", input_type=Boolean(optional=True), prefix="--parallelize", doc=InputDocumentation(doc="run in parallel if possible.")), ToolInput(tag="in_save_map", input_type=Boolean(optional=True), prefix="--save-map", doc=InputDocumentation(doc="save map(s) used during execution.")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="silent mode (no print, no progression bar).")), ToolInput(tag="in_costs_estimation", input_type=Boolean(optional=True), prefix="--costs-estimation", doc=InputDocumentation(doc="estimate duplication and loss costs.")), ToolInput(tag="in_info", input_type=Boolean(optional=True), prefix="--info", doc=InputDocumentation(doc="print informations about genetree(s) with a branch support diagram.")), ToolInput(tag="in_case_sensitive", input_type=Boolean(optional=True), prefix="--case-sensitive", doc=InputDocumentation(doc="use case sensitive mapping.")), ToolInput(tag="in_ale_evaluation", input_type=Boolean(optional=True), prefix="--ale-evaluation", doc=InputDocumentation(doc="compute ALE log likelihood for each solution.")), ToolInput(tag="in_output_without_description", input_type=Boolean(optional=True), prefix="--output-without-description", doc=InputDocumentation(doc="strip output from gene tree descriptions.")), ToolInput(tag="in_f_event", input_type=Boolean(optional=True), prefix="--fevent", doc=InputDocumentation(doc="create a file that summarizes orthology/paralogy relationships."))], outputs=[ToolOutput(tag="out_outdir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_outdir", type_hint=File()), doc=OutputDocumentation(doc="output directory (default: treerecs_output)."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Treerecs_V0_1_0().translate("wdl", allow_empty_container=True)

