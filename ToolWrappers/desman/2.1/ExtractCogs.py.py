from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, Float, File

Extractcogs_Py_V0_1_0 = CommandToolBuilder(tool="ExtractCogs.py", base_command=["ExtractCogs.py"], inputs=[ToolInput(tag="in_blast_outfile", input_type=Int(optional=True), prefix="--blastoutfile", doc=InputDocumentation(doc="Output of rpsblast run, assumed to be in tabular\nformat whith columns: qseqid sseqid evalue pident\nscore qstart qend sstart send length slen. The contigs\nids are assumed to be recoverable by removing the last\nunderscore and the characters following it from the\nqseqid column.")), ToolInput(tag="in_sco_vs_threshold", input_type=Float(optional=True), prefix="--scovs-threshold", doc=InputDocumentation(doc="Threshold covered in percent, default=50.0")), ToolInput(tag="in_p_ident_threshold", input_type=Float(optional=True), prefix="--pident-threshold", doc=InputDocumentation(doc="Threshold identity in percent, default=0.0")), ToolInput(tag="in_cdd_cog_file", input_type=File(optional=True), prefix="--cdd_cog_file", doc=InputDocumentation(doc="Supply a cdd to cog mapping file in a tsv format to\ntake precedence over eutils fetching of name. Useful\nif running this script in parallel, since NCBI eutils\nhas a limit on the number of requests per time unit\nyou can make.")), ToolInput(tag="in_gff_file", input_type=File(optional=True), prefix="--gfffile", doc=InputDocumentation(doc="GFF file generated by e.g. prodigal only needed if the\ncontig names are not recoverable from the blast output\nfile.\n"))], outputs=[ToolOutput(tag="out_gff_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_gff_file", type_hint=File()), doc=OutputDocumentation(doc="GFF file generated by e.g. prodigal only needed if the\ncontig names are not recoverable from the blast output\nfile.\n"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Extractcogs_Py_V0_1_0().translate("wdl", allow_empty_container=True)

