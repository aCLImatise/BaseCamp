version 1.0

task ExtractCogspy {
  input {
    Int? blast_outfile
    Float? sco_vs_threshold
    Float? p_ident_threshold
    File? cdd_cog_file
    File? gff_file
  }
  command <<<
    ExtractCogs_py \
      ~{if defined(blast_outfile) then ("--blastoutfile " +  '"' + blast_outfile + '"') else ""} \
      ~{if defined(sco_vs_threshold) then ("--scovs-threshold " +  '"' + sco_vs_threshold + '"') else ""} \
      ~{if defined(p_ident_threshold) then ("--pident-threshold " +  '"' + p_ident_threshold + '"') else ""} \
      ~{if defined(cdd_cog_file) then ("--cdd_cog_file " +  '"' + cdd_cog_file + '"') else ""} \
      ~{if defined(gff_file) then ("--gfffile " +  '"' + gff_file + '"') else ""}
  >>>
  runtime {
    docker: "None"
  }
  parameter_meta {
    blast_outfile: "Output of rpsblast run, assumed to be in tabular\\nformat whith columns: qseqid sseqid evalue pident\\nscore qstart qend sstart send length slen. The contigs\\nids are assumed to be recoverable by removing the last\\nunderscore and the characters following it from the\\nqseqid column."
    sco_vs_threshold: "Threshold covered in percent, default=50.0"
    p_ident_threshold: "Threshold identity in percent, default=0.0"
    cdd_cog_file: "Supply a cdd to cog mapping file in a tsv format to\\ntake precedence over eutils fetching of name. Useful\\nif running this script in parallel, since NCBI eutils\\nhas a limit on the number of requests per time unit\\nyou can make."
    gff_file: "GFF file generated by e.g. prodigal only needed if the\\ncontig names are not recoverable from the blast output\\nfile.\\n"
  }
  output {
    File out_stdout = stdout()
    File out_gff_file = "${in_gff_file}"
  }
}