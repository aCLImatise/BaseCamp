!Command
command:
- msa_diff
positional:
- !Positional
  description: ''
  position: 0
  name: alignment1.fa
  optional: false
- !Positional
  description: ''
  position: 1
  name: alignment2.fa
  optional: false
named:
- !Flag
  description: "|SS|PHYLIP|MPM|MAF\nFormat of first alignment (default is to guess\
    \ format from file contents)."
  synonyms:
  - --format1
  - -i
  args: !SimpleFlagArg
    name: FASTA
  optional: true
- !Flag
  description: "|SS|PHYLIP|MPM|MAF\nFormat of second alignment (default is to guess\
    \ format from file contents)."
  synonyms:
  - --format2
  - -j
  args: !SimpleFlagArg
    name: FASTA
  optional: true
- !Flag
  description: "Use given string for alphabet.  Can be used to accommodate\nnonstandard\
    \ characters (e.g., 'b' for any base or '^' for insertion\ngaps, '.' for deletion\
    \ gaps)."
  synonyms:
  - --alphabet
  - -a
  args: !SimpleFlagArg
    name: alphabet_string
  optional: true
- !Flag
  description: "Ignore identity of bases; consider all alphabetical characters\nequivalent\
    \ (e.g., A, C, G, T, N, X, b)."
  synonyms:
  - --ignore-base-id
  - -b
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Ignore type of gap; consider '-', '^', and '.' all equivalent.
  synonyms:
  - --ignore-gap-type
  - -g
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: "Display this help message and exit.\n"
  synonyms:
  - --help
  - -h
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "\nPROGRAM: msa_diff\n\nUSAGE: msa_diff [OPTIONS] alignment1.fa alignment2.fa\
  \ > diffs.out\n\nDESCRIPTION: Compare two multiple alignments and report differences.\n\
  \nOPTIONS:\n    --format1, -i FASTA|SS|PHYLIP|MPM|MAF\n        Format of first alignment\
  \ (default is to guess format from file contents).\n\n    --format2, -j FASTA|SS|PHYLIP|MPM|MAF\n\
  \        Format of second alignment (default is to guess format from file contents).\n\
  \n    --alphabet, -a <alphabet_string>\n        Use given string for alphabet. \
  \ Can be used to accommodate\n        nonstandard characters (e.g., 'b' for any\
  \ base or '^' for insertion\n        gaps, '.' for deletion gaps).  \n\n    --ignore-base-id,\
  \ -b\n        Ignore identity of bases; consider all alphabetical characters\n \
  \       equivalent (e.g., A, C, G, T, N, X, b).\n\n    --ignore-gap-type, -g\n \
  \       Ignore type of gap; consider '-', '^', and '.' all equivalent.\n\n    --help,\
  \ -h\n        Display this help message and exit.\n"
generated_using:
- --help
