from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, String

Last_Train_V0_1_0 = CommandToolBuilder(tool="last_train", base_command=["last-train"], inputs=[ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="show more details of intermediate steps")), ToolInput(tag="in_rev_sym", input_type=Boolean(optional=True), prefix="--revsym", doc=InputDocumentation(doc="force reverse-complement symmetry")), ToolInput(tag="in_mat_sym", input_type=Boolean(optional=True), prefix="--matsym", doc=InputDocumentation(doc="force symmetric substitution matrix")), ToolInput(tag="in_gap_sym", input_type=Boolean(optional=True), prefix="--gapsym", doc=InputDocumentation(doc="force insertion/deletion symmetry")), ToolInput(tag="in_pid", input_type=Int(optional=True), prefix="--pid", doc=InputDocumentation(doc="skip alignments with > PID% identity (default: 100)")), ToolInput(tag="in_post_mask", input_type=Int(optional=True), prefix="--postmask", doc=InputDocumentation(doc="skip mostly-lowercase alignments (default=1)")), ToolInput(tag="in_sample_number", input_type=Int(optional=True), prefix="--sample-number", doc=InputDocumentation(doc="number of random sequence samples (default: 500)")), ToolInput(tag="in_sample_length", input_type=Int(optional=True), prefix="--sample-length", doc=InputDocumentation(doc="length of each sample (default: 2000)")), ToolInput(tag="in_match_score_default", input_type=Int(optional=True), prefix="-r", doc=InputDocumentation(doc="match score (default: 6 if Q>0, else 5)")), ToolInput(tag="in_mismatch_cost_default", input_type=Int(optional=True), prefix="-q", doc=InputDocumentation(doc="mismatch cost (default: 18 if Q>0, else 5)")), ToolInput(tag="in_matchmismatch_score_matrix", input_type=String(optional=True), prefix="-p", doc=InputDocumentation(doc="match/mismatch score matrix")), ToolInput(tag="in_gap_existence_cost", input_type=Int(optional=True), prefix="-a", doc=InputDocumentation(doc="gap existence cost (default: 21 if Q>0, else 15)")), ToolInput(tag="in_gap_extension_cost", input_type=Int(optional=True), prefix="-b", doc=InputDocumentation(doc="gap extension cost (default: 9 if Q>0, else 3)")), ToolInput(tag="in_insertion_existence_cost", input_type=String(optional=True), prefix="-A", doc=InputDocumentation(doc="insertion existence cost")), ToolInput(tag="in_insertion_extension_cost", input_type=String(optional=True), prefix="-B", doc=InputDocumentation(doc="insertion extension cost")), ToolInput(tag="in_query_letters_e", input_type=Int(optional=True), prefix="-D", doc=InputDocumentation(doc="query letters per random alignment (default: 1e6)")), ToolInput(tag="in_maximum_expected_alignments", input_type=Int(optional=True), prefix="-E", doc=InputDocumentation(doc="maximum expected alignments per square giga")), ToolInput(tag="in_reverse_forward_default", input_type=Int(optional=True), prefix="-s", doc=InputDocumentation(doc="0=reverse, 1=forward, 2=both (default: 2 if DNA, else\n1)")), ToolInput(tag="in_score_matrix_applies", input_type=Int(optional=True), prefix="-S", doc=InputDocumentation(doc="score matrix applies to forward strand of: 0=reference,\n1=query (default: 1)")), ToolInput(tag="in_omit_gapless_alignments", input_type=String(optional=True), prefix="-C", doc=InputDocumentation(doc="omit gapless alignments in COUNT others with > score-")), ToolInput(tag="in_maximum_initial_matches", input_type=Int(optional=True), prefix="-m", doc=InputDocumentation(doc="maximum initial matches per query position (default:\n10)")), ToolInput(tag="in_use_initial_matches", input_type=Int(optional=True), prefix="-k", doc=InputDocumentation(doc="use initial matches starting at every STEP-th position\nin each query (default: 1)")), ToolInput(tag="in_number_parallel_threads", input_type=Int(optional=True), prefix="-P", doc=InputDocumentation(doc="number of parallel threads")), ToolInput(tag="in_nx_ambiguous_sequence", input_type=Int(optional=True), prefix="-X", doc=InputDocumentation(doc="N/X is ambiguous in: 0=neither sequence, 1=reference,\n2=query, 3=both (default=0)")), ToolInput(tag="in_input_format_fasta", input_type=Int(optional=True), prefix="-Q", doc=InputDocumentation(doc="input format: 0=fasta or fastq-ignore, 1=fastq-sanger\n(default=fasta)\n")), ToolInput(tag="in_per_length", input_type=Int(), position=0, doc=InputDocumentation(doc="-T NUMBER          type of alignment: 0=local, 1=overlap (default: 0)"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Last_Train_V0_1_0().translate("wdl", allow_empty_container=True)

