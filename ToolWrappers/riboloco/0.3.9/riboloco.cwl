class: CommandLineTool
id: riboloco.cwl
inputs:
- id: in_samples
  doc: "In reference generation mode this may either be a .csv\nfile of samples (you\
    \ MUST ensure that the file is of\n'.csv' otherwise it will not be recognised)\
    \ or a\nsingle bed file. In conversion mode it must be a\nsingle bed file. Bed\
    \ files should be transcriptome-\naligned; only reads in the + strand are used.\
    \ Bed\nfiles should be 6 column, with transcript_id, start,\nend, and strand in\
    \ columns 1, 2, 3 and 6 respectively\n(the default output from bedtools' 'bamtobed').\
    \ Bed\nfiles can be in .gzip format if desired."
  type: File?
  inputBinding:
    prefix: --samples
- id: in_info
  doc: "Info file on transcripts. This should be a tab\nseparated file with details\
    \ on the CDS within each\ntranscript. It should contain the columns\n'transcript_id',\
    \ 'cds_start' and 'cds_stop'. The\ncoordinates MUST be 1-based!"
  type: File?
  inputBinding:
    prefix: --info
- id: in_transcript_fast_a
  doc: Fasta file of transcripts
  type: File?
  inputBinding:
    prefix: --transcript_fasta
- id: in_output
  doc: Output file
  type: File?
  inputBinding:
    prefix: --output
- id: in_orf_file
  doc: "An orf csv generated with riboloco_find_orfs.\nSupplying this will activate\
    \ more intensive searching\nfor out of frame ribosomes."
  type: File?
  inputBinding:
    prefix: --orf_file
- id: in_min_abundance
  doc: "Minimum abundance of read length/frame to be included\nin final output. Default\
    \ is 0.01. Set to zero to\ndisable. This can me lower than --min_abundance_ref,\n\
    the rationale being that you want to use abundant read\nlengths to build the reference,\
    \ but any read length\nthat matches the reference well should be included in\n\
    the final file."
  type: long?
  inputBinding:
    prefix: --min_abundance
- id: in_min_abundance_ref
  doc: "Minimum fraction of total reads that a read type must\nrepresent for calculation\
    \ of a reference offset (using\nstart and stop codon enrichment) to be attempted.\n\
    Default=0.1 (10pc). Warning - using low values may\npromote inclusion of reads\
    \ which are primarily out of\nframe. Recommended to keep above 0.05. Read fractions\n\
    are calculated for reads within the annotated CDS -\nUTRs are ignored."
  type: long?
  inputBinding:
    prefix: --min_abundance_ref
- id: in_read_type
  doc: "Set the read type for which the reference is\ncalculated in reference generation\
    \ mode.Additionally,\nyou can specify the offset with a colon, eg 28_0:-12."
  type: string[]
  inputBinding:
    prefix: --read_type
- id: in_plot_graphs
  doc: "When selected, dislocate plots various graphs and\nheatmaps which may be useful\
    \ for downstream analysis,\nor to verify accuracy of offset assignments."
  type: boolean?
  inputBinding:
    prefix: --plot_graphs
- id: in_min_score
  doc: "The minimum correlation between the reference and the\nRUST ratios for the\
    \ assigned offset for the file to be\nwritten. Default = 0.7"
  type: long?
  inputBinding:
    prefix: --min_score
- id: in_generate_reference
  doc: "Activates reference generation mode - use this mode to\nmake a reference before\
    \ converting bed files to single\nnucleotide resolution"
  type: boolean?
  inputBinding:
    prefix: --generate_reference
- id: in_reference
  doc: "Pre-computed reference file csv, generated by\ndislocate in 'generate reference'\
    \ mode. Multiple\nreferences can be specified by adding a colon between\nfiles.\
    \ Optional when running in conversion mode."
  type: File?
  inputBinding:
    prefix: --reference
- id: in_allow_out_of_frame
  doc: Allow out of frame offsets to be assigned
  type: boolean?
  inputBinding:
    prefix: --allow_out_of_frame
- id: in_conversion_types_list
  doc: "Types to output. Can specify an offset with colon, eg\n28_0:-12. Using this\
    \ command will cause other types to\nbe ignored, unless you also use --keep_all_valid"
  type: string[]
  inputBinding:
    prefix: --conversion_types_list
- id: in_keep_all_valid
  doc: "This option (only applicable during conversion mode)\nkeeps all valid read\
    \ types (i.e. all those that pass\nperiodicity and abundance filters) even when\
    \ specific\nread lengths and offsets are set."
  type: boolean?
  inputBinding:
    prefix: --keep_all_valid
- id: in_reference_use_kl
  doc: "Use KL divergence to find best offset during reference\ngeneration"
  type: boolean?
  inputBinding:
    prefix: --reference_use_KL
- id: in_use_kl
  doc: "Use KL divergence to determine best A site offset\nduring assignment"
  type: boolean?
  inputBinding:
    prefix: --use_KL
- id: in_periodicity
  doc: "Periodicity filter - the minimum ratio of reads in the\nmajor frame to the\
    \ minor frame for a given read length\nto pass filtering. Default is 2; higher\
    \ numbers are\nmore stringent. Set to 1 to remove filtering"
  type: long?
  inputBinding:
    prefix: --periodicity
- id: in_kl_length
  doc: "The number of codons to use for KL-based determination\nof offsets. By default\
    \ = 2 i.e. the P and A sites."
  type: long?
  inputBinding:
    prefix: --kl_length
- id: in_use_stop
  doc: "If argument is used, riboloco will attempt to assign\noffsets based on stop\
    \ codon as well as the start\ncodon. Riboloco will use this value during reference\n\
    generation if either it is consistent with the start\ncodon determined offset,\
    \ or if no start codon-based\noffset could be determined (e.g. with disomes)"
  type: boolean?
  inputBinding:
    prefix: --use_stop
- id: in_min_a_offset
  doc: "The miniumum offset length from the 3' end of the E\nsite. (Not the A site)\
    \ Length is measured in nt.\nDefault = 3"
  type: long?
  inputBinding:
    prefix: --min_A_offset
- id: in_max_a_offset
  doc: "The maximum offset length from the 3' end of the E\nsite (not the A site).\
    \ Length is measured in nt.\nDefault = -22"
  type: long?
  inputBinding:
    prefix: --max_A_offset
- id: in_min_offset
  doc: "The miniumum which is analysed when plotting Length is\nmeasured in nt. Default\
    \ = 10"
  type: long?
  inputBinding:
    prefix: --min_offset
- id: in_max_offset
  doc: "The maximum offset which is analysed when plotting.\nLength is measured in\
    \ nt. Default = -40"
  type: long?
  inputBinding:
    prefix: --max_offset
- id: in_ignore
  doc: "Read types to ignore. Can add multiple with a colon\nseparator. Eg -ig 27_2:23_1."
  type: long?
  inputBinding:
    prefix: --ignore
- id: in_write_individual_files
  doc: "When selected, dislocate also writes individual\nbedgraph files for each read\
    \ length/frame. This could\nbe useful for downstream analysis."
  type: boolean?
  inputBinding:
    prefix: --write_individual_files
- id: in_keep_read_types_distinct
  doc: "Write out a single bedgraph, but keep the read types\ndistinct (useful for\
    \ downstreamanalysis). Default =\nFalse"
  type: boolean?
  inputBinding:
    prefix: --keep_read_types_distinct
- id: in_save_stats
  doc: Save a csv of the r values for each type, read and
  type: boolean?
  inputBinding:
    prefix: --save_stats
- id: in_min_ratio_start
  doc: "The minimum ratio of the start codon counts of a given\nread type versus the\
    \ previous position for an offset\nbased on the start codon to be confidently\
    \ assigned.\nDefault=4"
  type: long?
  inputBinding:
    prefix: --min_ratio_start
- id: in_min_counts_stop
  doc: "The minimum number of counts of a given read type at\nthe stop codon for a\
    \ read's offset to be confidently\nassigned. Default=25. To block stop offsets\
    \ being\nused, set to large number eg 100000"
  type: long?
  inputBinding:
    prefix: --min_counts_stop
- id: in_min_ratio_stop
  doc: "The minimum ratio of the stop codon counts of a given\nread type versus the\
    \ next position for an offset based\non the stop codon to be confidently assigned.\n\
    Default=4"
  type: long?
  inputBinding:
    prefix: --min_ratio_stop
- id: in_max_distance
  doc: "Maximum distance in nucleotides around start and stop\ncodons for which offsets\
    \ are attempted to be\ncalculated. Default is 20. Twenty is plenty."
  type: long?
  inputBinding:
    prefix: --max_distance
- id: in_frame_ness_ratio
  doc: "The level of enrichment near the start codon versus\ndownstream for a read\
    \ type to be reported as\npotentially having strong bias towards out of frame\n\
    ribosomes. Default = 1.2 i.e. 20percent"
  type: double?
  inputBinding:
    prefix: --frameness_ratio
- id: in_mismatches
  doc: "Whether to consider first nt mismatches. Only\navailable when a bam file is\
    \ provided"
  type: boolean?
  inputBinding:
    prefix: --mismatches
- id: in_ambiguity
  doc: "Much much better the best r value must be compared to\nthe second best for\
    \ an offset to be confidently\nassigned. Default = 0.8, i.e. the r value of second\n\
    best offset must be less than 0.8x the value of the\nbest offset. Lower values\
    \ are more stringent. Should\nbe less than 1, and more than 0"
  type: double?
  inputBinding:
    prefix: --ambiguity
- id: in_o_of_plot_start
  doc: "How far downstream of the annotated start to look for\nout of frame reads.\
    \ Default=0. Set to negative values\nto search for uORFs"
  type: long?
  inputBinding:
    prefix: --oof_plot_start
- id: in_o_of_plot_end
  doc: "How far downstream of the annotated start to look for\nout of frame reads.\
    \ Default=2000."
  type: long?
  inputBinding:
    prefix: --oof_plot_end
- id: in_o_of_plot_stride
  doc: "How wide each of the windows in the oof heatmap should\nbe in nucleotides.\
    \ Default=50nt"
  type: long?
  inputBinding:
    prefix: --oof_plot_stride
- id: in_no_iterative_improvement
  doc: "By default, when using RUST ratio correlations to\ndetermine offsets, when\
    \ new matches are found they are\nadded to the reference. This option stops this\n\
    behaviour"
  type: boolean?
  inputBinding:
    prefix: --no_iterative_improvement
- id: in_o_of_smooth_window
  doc: Rolling average smoothing for oof heatmap
  type: string?
  inputBinding:
    prefix: --oof_smooth_window
- id: in_sample_dir
  doc: "Directory of the input files. This optional argument\ncan be useful when passing\
    \ a csv of filenames to -s in\nreference generation mode."
  type: Directory?
  inputBinding:
    prefix: --sample_dir
- id: in_output_directory
  doc: The directory to save outputs.
  type: Directory?
  inputBinding:
    prefix: --output_directory
- id: in_mono_some_priority
  doc: "During reference generation mode, and if a .csv of\nsample files is passed\
    \ to the function, this option\nensures that only monosome files, i.e. those with\n\
    'Mon' in the sample name(!), are used for reference\ngeneration."
  type: boolean?
  inputBinding:
    prefix: --monosome_priority
- id: in_four_column_bed
  doc: "select if using a four column bed with the strand in\nthe 4th column"
  type: boolean?
  inputBinding:
    prefix: --four_column_bed
- id: in_write_full_data
  doc: "Write out the raw bed/bam file reads with read type\nand info\n"
  type: File?
  inputBinding:
    prefix: --write_full_data
- id: in_offset_dot
  doc: --min_counts_start MIN_COUNTS_START
  type: string
  inputBinding:
    position: 0
outputs:
- id: out_stdout
  doc: Standard output stream
  type: stdout
- id: out_samples
  doc: "In reference generation mode this may either be a .csv\nfile of samples (you\
    \ MUST ensure that the file is of\n'.csv' otherwise it will not be recognised)\
    \ or a\nsingle bed file. In conversion mode it must be a\nsingle bed file. Bed\
    \ files should be transcriptome-\naligned; only reads in the + strand are used.\
    \ Bed\nfiles should be 6 column, with transcript_id, start,\nend, and strand in\
    \ columns 1, 2, 3 and 6 respectively\n(the default output from bedtools' 'bamtobed').\
    \ Bed\nfiles can be in .gzip format if desired."
  type: File?
  outputBinding:
    glob: $(inputs.in_samples)
- id: out_output
  doc: Output file
  type: File?
  outputBinding:
    glob: $(inputs.in_output)
- id: out_output_directory
  doc: The directory to save outputs.
  type: Directory?
  outputBinding:
    glob: $(inputs.in_output_directory)
- id: out_write_full_data
  doc: "Write out the raw bed/bam file reads with read type\nand info\n"
  type: File?
  outputBinding:
    glob: $(inputs.in_write_full_data)
hints:
- class: DockerRequirement
  dockerPull: quay.io/biocontainers/riboloco:0.3.9--pyh5e36f6f_0
cwlVersion: v1.1
baseCommand:
- riboloco
