!Command
command:
- after.py
positional:
- !Positional
  optional: false
  position: 0
  name: Automatic
  description: ''
- !Positional
  optional: false
  position: 1
  name: Filtering
  description: ''
named:
- !Flag
  optional: true
  synonyms:
  - '-1'
  - --read1_file
  description: "file name of read1, required. If input_dir is\nspecified, then this\
    \ arg is ignored."
  args: !SimpleFlagArg
    name: READ1_FILE
- !Flag
  optional: true
  synonyms:
  - '-2'
  - --read2_file
  description: "file name of read2, if paired. If input_dir is\nspecified, then this\
    \ arg is ignored."
  args: !SimpleFlagArg
    name: READ2_FILE
- !Flag
  optional: true
  synonyms:
  - '-7'
  - --index1_file
  description: "file name of 7' index. If input_dir is specified, then\nthis arg is\
    \ ignored."
  args: !SimpleFlagArg
    name: INDEX1_FILE
- !Flag
  optional: true
  synonyms:
  - '-5'
  - --index2_file
  description: "file name of 5' index. If input_dir is specified, then\nthis arg is\
    \ ignored."
  args: !SimpleFlagArg
    name: INDEX2_FILE
- !Flag
  optional: true
  synonyms:
  - -d
  - --input_dir
  description: "the input dir to process automatically. If read1_file\nare input_dir\
    \ are not specified, then current dir (.)\nis specified to input_dir"
  args: !SimpleFlagArg
    name: INPUT_DIR
- !Flag
  optional: true
  synonyms:
  - -g
  - --good_output_folder
  description: "the folder to store good reads, by default it is named\n'good', in\
    \ the current directory"
  args: !SimpleFlagArg
    name: GOOD_OUTPUT_FOLDER
- !Flag
  optional: true
  synonyms:
  - -b
  - --bad_output_folder
  description: "the folder to store bad reads, by default it is named\n'bad', in the\
    \ same folder as good_output_folder"
  args: !SimpleFlagArg
    name: BAD_OUTPUT_FOLDER
- !Flag
  optional: true
  synonyms:
  - -r
  - --report_output_folder
  description: "the folder to store QC reports, by default it is named\n'QC', in the\
    \ same folder as good_output_folder"
  args: !SimpleFlagArg
    name: REPORT_OUTPUT_FOLDER
- !Flag
  optional: true
  synonyms:
  - --read1_flag
  description: "specify the name flag of read1, default is R1, which\nmeans a file\
    \ with name *R1* is read1 file"
  args: !SimpleFlagArg
    name: READ1_FLAG
- !Flag
  optional: true
  synonyms:
  - --read2_flag
  description: "specify the name flag of read2, default is R2, which\nmeans a file\
    \ with name *R2* is read2 file"
  args: !SimpleFlagArg
    name: READ2_FLAG
- !Flag
  optional: true
  synonyms:
  - --index1_flag
  description: "specify the name flag of index1, default is I1, which\nmeans a file\
    \ with name *I1* is index2 file"
  args: !SimpleFlagArg
    name: INDEX1_FLAG
- !Flag
  optional: true
  synonyms:
  - --index2_flag
  description: "specify the name flag of index2, default is I2, which\nmeans a file\
    \ with name *I2* is index2 file"
  args: !SimpleFlagArg
    name: INDEX2_FLAG
- !Flag
  optional: true
  synonyms:
  - -f
  - --trim_front
  description: "number of bases to be trimmed in the head of read. -1\nmeans auto\
    \ detect"
  args: !SimpleFlagArg
    name: TRIM_FRONT
- !Flag
  optional: true
  synonyms:
  - -t
  - --trim_tail
  description: "number of bases to be trimmed in the tail of read. -1\nmeans auto\
    \ detect"
  args: !SimpleFlagArg
    name: TRIM_TAIL
- !Flag
  optional: true
  synonyms:
  - --trim_pair_same
  description: "use same trimming configuration for read1 and read2 to\nkeep their\
    \ sequence length identical, default is true"
  args: !SimpleFlagArg
    name: TRIM_PAIR_SAME
- !Flag
  optional: true
  synonyms:
  - -q
  - --qualified_quality_phred
  description: "the quality value that a base is qualifyed. Default 15\nmeans phred\
    \ base quality >=Q15 is qualified."
  args: !SimpleFlagArg
    name: QUALIFIED_QUALITY_PHRED
- !Flag
  optional: true
  synonyms:
  - -u
  - --unqualified_base_limit
  description: "if exists more than unqualified_base_limit bases that\nquality is\
    \ lower than qualified quality, then this\nread/pair is bad. Default is 60"
  args: !SimpleFlagArg
    name: UNQUALIFIED_BASE_LIMIT
- !Flag
  optional: true
  synonyms:
  - -p
  - --poly_size_limit
  description: "if exists one polyX(polyG means GGGGGGGGG...), and its\nlength is\
    \ >= poly_size_limit, then this read/pair is\nbad. Default is 35"
  args: !SimpleFlagArg
    name: POLY_SIZE_LIMIT
- !Flag
  optional: true
  synonyms:
  - -a
  - --allow_mismatch_in_poly
  description: "the count of allowed mismatches when detection polyX.\nDefault 2 means\
    \ allow 2 mismatches for polyX detection"
  args: !SimpleFlagArg
    name: ALLOW_MISMATCH_IN_POLY
- !Flag
  optional: true
  synonyms:
  - -n
  - --n_base_limit
  description: "if exists more than maxn bases have N, then this\nread/pair is bad.\
    \ Default is 5"
  args: !SimpleFlagArg
    name: N_BASE_LIMIT
- !Flag
  optional: true
  synonyms:
  - -s
  - --seq_len_req
  description: "if the trimmed read is shorter than seq_len_req, then\nthis read/pair\
    \ is bad. Default is 35"
  args: !SimpleFlagArg
    name: SEQ_LEN_REQ
- !Flag
  optional: true
  synonyms:
  - --debubble
  description: "specify whether apply debubble algorithm to remove the\nreads in the\
    \ bubbles. Default is False"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --debubble_dir
  description: "specify the folder to store output of debubble\nalgorithm, default\
    \ is debubble"
  args: !SimpleFlagArg
    name: DEBUBBLE_DIR
- !Flag
  optional: true
  synonyms:
  - --draw
  description: "specify whether draw the pictures or not, when use\ndebubble or QC.\
    \ Default is on"
  args: !SimpleFlagArg
    name: DRAW
- !Flag
  optional: true
  synonyms:
  - --barcode
  description: "specify whether deal with barcode sequencing files,\ndefault is on,\
    \ which means all files with barcode_flag\nin filename will be treated as barcode\
    \ sequencing\nfiles"
  args: !SimpleFlagArg
    name: BARCODE
- !Flag
  optional: true
  synonyms:
  - --barcode_length
  description: specify the designed length of barcode
  args: !SimpleFlagArg
    name: BARCODE_LENGTH
- !Flag
  optional: true
  synonyms:
  - --barcode_flag
  description: "specify the name flag of a barcoded file, default is\nbarcode, which\
    \ means a file with name *barcode* is a\nbarcoded file"
  args: !SimpleFlagArg
    name: BARCODE_FLAG
- !Flag
  optional: true
  synonyms:
  - --barcode_verify
  description: "specify the verify sequence of a barcode which is\nadjunct to the\
    \ barcode"
  args: !SimpleFlagArg
    name: BARCODE_VERIFY
- !Flag
  optional: true
  synonyms:
  - --store_overlap
  description: "specify whether store only overlapped bases of the\ngood reads"
  args: !SimpleFlagArg
    name: STORE_OVERLAP
- !Flag
  optional: true
  synonyms:
  - --overlap_output_folder
  description: "the folder to store only overlapped bases of the good\nreads"
  args: !SimpleFlagArg
    name: OVERLAP_OUTPUT_FOLDER
- !Flag
  optional: true
  synonyms:
  - --qc_only
  description: "if qconly is true, only QC result will be output, this\ncan be much\
    \ fast"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --qc_sample
  description: "sample up to qc_sample reads when do QC, 0 means\nsample all reads.\
    \ Default is 200,000"
  args: !SimpleFlagArg
    name: QC_SAMPLE
- !Flag
  optional: true
  synonyms:
  - --qc_kmer
  description: "specify the kmer length for KMER statistics for QC,\ndefault is 8"
  args: !SimpleFlagArg
    name: QC_KMER
- !Flag
  optional: true
  synonyms:
  - --no_correction
  description: "disable base correction for mismatched base pairs in\noverlapped areas"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --mask_mismatch
  description: "set the qual num to 0 for mismatched base pairs in\noverlapped areas\
    \ to mask them out"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --no_overlap
  description: "disable overlap analysis (usually much faster with\nthis option)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -z
  - --gzip
  description: "force gzip compression for output, even the input is\nnot gzip compressed"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --compression
  description: "set compression level (0~9) for gzip output, default\nis 2 (0 = best\
    \ speed, 9 = best compression).\n"
  args: !SimpleFlagArg
    name: COMPRESSION
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - --version
  description: show program's version number and exit
  args: !EmptyFlagArg {}
help_text: "Usage: Automatic Filtering, Trimming, Error Removing and Quality Control\
  \ for Illumina fastq data \n\nSimplest usage:\ncd to the folder containing your\
  \ fastq data, run <python after.py>\n\nOptions:\n  --version             show program's\
  \ version number and exit\n  -h, --help            show this help message and exit\n\
  \  -1 READ1_FILE, --read1_file=READ1_FILE\n                        file name of\
  \ read1, required. If input_dir is\n                        specified, then this\
  \ arg is ignored.\n  -2 READ2_FILE, --read2_file=READ2_FILE\n                  \
  \      file name of read2, if paired. If input_dir is\n                        specified,\
  \ then this arg is ignored.\n  -7 INDEX1_FILE, --index1_file=INDEX1_FILE\n     \
  \                   file name of 7' index. If input_dir is specified, then\n   \
  \                     this arg is ignored.\n  -5 INDEX2_FILE, --index2_file=INDEX2_FILE\n\
  \                        file name of 5' index. If input_dir is specified, then\n\
  \                        this arg is ignored.\n  -d INPUT_DIR, --input_dir=INPUT_DIR\n\
  \                        the input dir to process automatically. If read1_file\n\
  \                        are input_dir are not specified, then current dir (.)\n\
  \                        is specified to input_dir\n  -g GOOD_OUTPUT_FOLDER, --good_output_folder=GOOD_OUTPUT_FOLDER\n\
  \                        the folder to store good reads, by default it is named\n\
  \                        'good', in the current directory\n  -b BAD_OUTPUT_FOLDER,\
  \ --bad_output_folder=BAD_OUTPUT_FOLDER\n                        the folder to store\
  \ bad reads, by default it is named\n                        'bad', in the same\
  \ folder as good_output_folder\n  -r REPORT_OUTPUT_FOLDER, --report_output_folder=REPORT_OUTPUT_FOLDER\n\
  \                        the folder to store QC reports, by default it is named\n\
  \                        'QC', in the same folder as good_output_folder\n  --read1_flag=READ1_FLAG\n\
  \                        specify the name flag of read1, default is R1, which\n\
  \                        means a file with name *R1* is read1 file\n  --read2_flag=READ2_FLAG\n\
  \                        specify the name flag of read2, default is R2, which\n\
  \                        means a file with name *R2* is read2 file\n  --index1_flag=INDEX1_FLAG\n\
  \                        specify the name flag of index1, default is I1, which\n\
  \                        means a file with name *I1* is index2 file\n  --index2_flag=INDEX2_FLAG\n\
  \                        specify the name flag of index2, default is I2, which\n\
  \                        means a file with name *I2* is index2 file\n  -f TRIM_FRONT,\
  \ --trim_front=TRIM_FRONT\n                        number of bases to be trimmed\
  \ in the head of read. -1\n                        means auto detect\n  -t TRIM_TAIL,\
  \ --trim_tail=TRIM_TAIL\n                        number of bases to be trimmed in\
  \ the tail of read. -1\n                        means auto detect\n  --trim_pair_same=TRIM_PAIR_SAME\n\
  \                        use same trimming configuration for read1 and read2 to\n\
  \                        keep their sequence length identical, default is true\n\
  \  -q QUALIFIED_QUALITY_PHRED, --qualified_quality_phred=QUALIFIED_QUALITY_PHRED\n\
  \                        the quality value that a base is qualifyed. Default 15\n\
  \                        means phred base quality >=Q15 is qualified.\n  -u UNQUALIFIED_BASE_LIMIT,\
  \ --unqualified_base_limit=UNQUALIFIED_BASE_LIMIT\n                        if exists\
  \ more than unqualified_base_limit bases that\n                        quality is\
  \ lower than qualified quality, then this\n                        read/pair is\
  \ bad. Default is 60\n  -p POLY_SIZE_LIMIT, --poly_size_limit=POLY_SIZE_LIMIT\n\
  \                        if exists one polyX(polyG means GGGGGGGGG...), and its\n\
  \                        length is >= poly_size_limit, then this read/pair is\n\
  \                        bad. Default is 35\n  -a ALLOW_MISMATCH_IN_POLY, --allow_mismatch_in_poly=ALLOW_MISMATCH_IN_POLY\n\
  \                        the count of allowed mismatches when detection polyX.\n\
  \                        Default 2 means allow 2 mismatches for polyX detection\n\
  \  -n N_BASE_LIMIT, --n_base_limit=N_BASE_LIMIT\n                        if exists\
  \ more than maxn bases have N, then this\n                        read/pair is bad.\
  \ Default is 5\n  -s SEQ_LEN_REQ, --seq_len_req=SEQ_LEN_REQ\n                  \
  \      if the trimmed read is shorter than seq_len_req, then\n                 \
  \       this read/pair is bad. Default is 35\n  --debubble            specify whether\
  \ apply debubble algorithm to remove the\n                        reads in the bubbles.\
  \ Default is False\n  --debubble_dir=DEBUBBLE_DIR\n                        specify\
  \ the folder to store output of debubble\n                        algorithm, default\
  \ is debubble\n  --draw=DRAW           specify whether draw the pictures or not,\
  \ when use\n                        debubble or QC. Default is on\n  --barcode=BARCODE\
  \     specify whether deal with barcode sequencing files,\n                    \
  \    default is on, which means all files with barcode_flag\n                  \
  \      in filename will be treated as barcode sequencing\n                     \
  \   files\n  --barcode_length=BARCODE_LENGTH\n                        specify the\
  \ designed length of barcode\n  --barcode_flag=BARCODE_FLAG\n                  \
  \      specify the name flag of a barcoded file, default is\n                  \
  \      barcode, which means a file with name *barcode* is a\n                  \
  \      barcoded file\n  --barcode_verify=BARCODE_VERIFY\n                      \
  \  specify the verify sequence of a barcode which is\n                        adjunct\
  \ to the barcode\n  --store_overlap=STORE_OVERLAP\n                        specify\
  \ whether store only overlapped bases of the\n                        good reads\n\
  \  --overlap_output_folder=OVERLAP_OUTPUT_FOLDER\n                        the folder\
  \ to store only overlapped bases of the good\n                        reads\n  --qc_only\
  \             if qconly is true, only QC result will be output, this\n         \
  \               can be much fast\n  --qc_sample=QC_SAMPLE\n                    \
  \    sample up to qc_sample reads when do QC, 0 means\n                        sample\
  \ all reads. Default is 200,000\n  --qc_kmer=QC_KMER     specify the kmer length\
  \ for KMER statistics for QC,\n                        default is 8\n  --no_correction\
  \       disable base correction for mismatched base pairs in\n                 \
  \       overlapped areas\n  --mask_mismatch       set the qual num to 0 for mismatched\
  \ base pairs in\n                        overlapped areas to mask them out\n  --no_overlap\
  \          disable overlap analysis (usually much faster with\n                \
  \        this option)\n  -z, --gzip            force gzip compression for output,\
  \ even the input is\n                        not gzip compressed\n  --compression=COMPRESSION\n\
  \                        set compression level (0~9) for gzip output, default\n\
  \                        is 2 (0 = best speed, 9 = best compression).\n"
generated_using:
- --help
docker_image:
