from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String, Int

Osra_V0_1_0 = CommandToolBuilder(tool="osra", base_command=["osra"], inputs=[ToolInput(tag="in_learn", input_type=Boolean(optional=True), prefix="--learn", doc=InputDocumentation(doc="Print out all structure guesses with confidence parameters")), ToolInput(tag="in_write", input_type=File(optional=True), prefix="--write", doc=InputDocumentation(doc="Write recognized structures to text file")), ToolInput(tag="in_preview", input_type=File(optional=True), prefix="--preview", doc=InputDocumentation(doc="Preview Image")), ToolInput(tag="in_dimensions_size_dimensions", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="<dimensions, 300x400>,  --size <dimensions, 300x400>\nResize image on output")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="Write recognized structures to image files with given prefix")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Be verbose and print the program flow")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="Print out debug information on spelling corrections")), ToolInput(tag="in_super_atom", input_type=File(optional=True), prefix="--superatom", doc=InputDocumentation(doc="Superatom label map to SMILES")), ToolInput(tag="in_spelling", input_type=File(optional=True), prefix="--spelling", doc=InputDocumentation(doc="Spelling correction dictionary")), ToolInput(tag="in_bond", input_type=Boolean(optional=True), prefix="--bond", doc=InputDocumentation(doc="Show average bond length in pixels (only for SDF/SMI/CAN output\nformat)")), ToolInput(tag="in_coordinates", input_type=Boolean(optional=True), prefix="--coordinates", doc=InputDocumentation(doc="Show surrounding box coordinates (only for SDF/SMI/CAN output format)")), ToolInput(tag="in_page", input_type=Boolean(optional=True), prefix="--page", doc=InputDocumentation(doc="Show page number for PDF/PS/TIFF documents (only for SDF/SMI/CAN\noutput format)")), ToolInput(tag="in_guess", input_type=Boolean(optional=True), prefix="--guess", doc=InputDocumentation(doc="Print out resolution guess")), ToolInput(tag="in_print", input_type=Boolean(optional=True), prefix="--print", doc=InputDocumentation(doc="Print out confidence estimate")), ToolInput(tag="in_embedded_format", input_type=String(optional=True), prefix="--embedded-format", doc=InputDocumentation(doc="Embedded format")), ToolInput(tag="in_format", input_type=String(optional=True), prefix="--format", doc=InputDocumentation(doc="Output format")), ToolInput(tag="in_adaptive", input_type=Boolean(optional=True), prefix="--adaptive", doc=InputDocumentation(doc="Adaptive thresholding pre-processing, useful for low light/low\ncontrast images")), ToolInput(tag="in_jaggy", input_type=Boolean(optional=True), prefix="--jaggy", doc=InputDocumentation(doc="Additional thinning/scaling down of low quality documents")), ToolInput(tag="in_default_rounds_default", input_type=Boolean(optional=True), prefix="-u", doc=InputDocumentation(doc="<default: 0 rounds>,  --unpaper <default: 0 rounds>\nPre-process image with unpaper algorithm, rounds")), ToolInput(tag="in_threshold", input_type=Int(optional=True), prefix="--threshold", doc=InputDocumentation(doc="Gray level threshold")), ToolInput(tag="in_default_auto_", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="<default: auto>,  --resolution <default: auto>\nResolution in dots per inch")), ToolInput(tag="in_negate", input_type=Boolean(optional=True), prefix="--negate", doc=InputDocumentation(doc="Invert color (white on black)")), ToolInput(tag="in_rotate", input_type=Int(optional=True), prefix="--rotate", doc=InputDocumentation(doc="Rotate image clockwise by specified number of degrees")), ToolInput(tag="in_three_zero_zero_x_four_zero_zero", input_type=Int(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_config_file", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_inch_i_slash_smi_slash_can", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_rounds", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Osra_V0_1_0().translate("wdl", allow_empty_container=True)

