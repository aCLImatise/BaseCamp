from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Int, Float

Predicthaplo_V0_1_0 = CommandToolBuilder(tool="predicthaplo", base_command=["predicthaplo"], inputs=[ToolInput(tag="in_sam", input_type=File(optional=True), prefix="--sam", doc=InputDocumentation(doc="Filename of the aligned reads (sam format).")), ToolInput(tag="in_reference", input_type=File(optional=True), prefix="--reference", doc=InputDocumentation(doc="Filename of reference sequence (FASTA).")), ToolInput(tag="in_prefix", input_type=String(optional=True), prefix="--prefix", doc=InputDocumentation(doc="Prefix of output files.")), ToolInput(tag="in_visualization_level", input_type=Int(optional=True), prefix="--visualization_level", doc=InputDocumentation(doc="do_visualize (1 = true, 0 = false).")), ToolInput(tag="in_have_true_haplotypes", input_type=Int(optional=True), prefix="--have_true_haplotypes", doc=InputDocumentation(doc="have_true_haplotypes (1 = true, 0 = false).")), ToolInput(tag="in_true_haplotypes", input_type=File(optional=True), prefix="--true_haplotypes", doc=InputDocumentation(doc="Filename of the true haplotypes (MSA in FASTA format) (fill in any dummy filename if there is no 'true' haplotypes).")), ToolInput(tag="in_do_local_analysis", input_type=Int(optional=True), prefix="--do_local_Analysis", doc=InputDocumentation(doc="do_local_analysis (1 = true, 0 = false) (must be 1 in the first run).")), ToolInput(tag="in_max_gap_fraction", input_type=Float(optional=True), prefix="--max_gap_fraction", doc=InputDocumentation(doc="Relative to alignment length.")), ToolInput(tag="in_min_align_score_fraction", input_type=Float(optional=True), prefix="--min_align_score_fraction", doc=InputDocumentation(doc="Relative to read length.")), ToolInput(tag="in_alpha_mn_local", input_type=Float(optional=True), prefix="--alpha_MN_local", doc=InputDocumentation(doc="Prior parameter for multinomial tables over the nucleotides.")), ToolInput(tag="in_min_overlap_factor", input_type=Float(optional=True), prefix="--min_overlap_factor", doc=InputDocumentation(doc="Reads must have an overlap with the local reconstruction window of at least this factor times the window size.")), ToolInput(tag="in_local_window_size_factor", input_type=Float(optional=True), prefix="--local_window_size_factor", doc=InputDocumentation(doc="Size of  local reconstruction window relative to the median of the read lengths.")), ToolInput(tag="in_cluster_number", input_type=Int(optional=True), prefix="--cluster_number", doc=InputDocumentation(doc="Max number of clusters (in the truncated Dirichlet process).")), ToolInput(tag="in_n_sample", input_type=Int(optional=True), prefix="--nSample", doc=InputDocumentation(doc="MCMC iterations.")), ToolInput(tag="in_include_deletions", input_type=Int(optional=True), prefix="--include_deletions", doc=InputDocumentation(doc="Include deletions (0 = no, 1 = yes)."))], outputs=[], container="quay.io/biocontainers/predicthaplo:2.1.4--h8f7e1a0_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Predicthaplo_V0_1_0().translate("wdl")

