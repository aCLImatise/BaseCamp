version 1.0

task MimoddMap {
  input {
    File? ofile
    Boolean? quiet
    Array[Int] bin_sizes
    File? mapping_sample
    String? related_parent
    String? unrelated_parent
    Boolean? infer_missing
    File? contrast_sample
    File? text_file
    File? seq_info
    Boolean? cloud_map
    File? plot_file
    Boolean? fit_width
    Boolean? no_scatter
    Float? loess_span
    Float? ylim_scatter
    Array[String] points_colors
    Array[String] loess_colors
    Boolean? no_hist
    Boolean? no_kde
    Array[String] hist_colors
    String analysis_mode
    String input_file
    String plots
  }
  command <<<
    mimodd map \
      ~{analysis_mode} \
      ~{input_file} \
      ~{plots} \
      ~{if defined(ofile) then ("--ofile " +  '"' + ofile + '"') else ""} \
      ~{if (quiet) then "--quiet" else ""} \
      ~{if defined(bin_sizes) then ("--bin-sizes " +  '"' + bin_sizes + '"') else ""} \
      ~{if defined(mapping_sample) then ("--mapping-sample " +  '"' + mapping_sample + '"') else ""} \
      ~{if defined(related_parent) then ("--related-parent " +  '"' + related_parent + '"') else ""} \
      ~{if defined(unrelated_parent) then ("--unrelated-parent " +  '"' + unrelated_parent + '"') else ""} \
      ~{if (infer_missing) then "--infer-missing" else ""} \
      ~{if defined(contrast_sample) then ("--contrast-sample " +  '"' + contrast_sample + '"') else ""} \
      ~{if defined(text_file) then ("--text-file " +  '"' + text_file + '"') else ""} \
      ~{if defined(seq_info) then ("--seqinfo " +  '"' + seq_info + '"') else ""} \
      ~{if (cloud_map) then "--cloudmap" else ""} \
      ~{if defined(plot_file) then ("--plot-file " +  '"' + plot_file + '"') else ""} \
      ~{if (fit_width) then "--fit-width" else ""} \
      ~{if (no_scatter) then "--no-scatter" else ""} \
      ~{if defined(loess_span) then ("--loess-span " +  '"' + loess_span + '"') else ""} \
      ~{if defined(ylim_scatter) then ("--ylim-scatter " +  '"' + ylim_scatter + '"') else ""} \
      ~{if defined(points_colors) then ("--points-colors " +  '"' + points_colors + '"') else ""} \
      ~{if defined(loess_colors) then ("--loess-colors " +  '"' + loess_colors + '"') else ""} \
      ~{if (no_hist) then "--no-hist" else ""} \
      ~{if (no_kde) then "--no-kde" else ""} \
      ~{if defined(hist_colors) then ("--hist-colors " +  '"' + hist_colors + '"') else ""}
  >>>
  runtime {
    docker: "None"
  }
  parameter_meta {
    ofile: "redirect the binned variant counts to this file\\n(default: stdout)."
    quiet: "suppress warning messages about plotting problems."
    bin_sizes: "list of bin sizes to be used for histogram plots and\\nlinkage reports (default: 1Mb and 500Kb)"
    mapping_sample: "name of the sample (as appearing in the input vcf\\nfile) for which variants should be mapped (cannot be\\nused in SVD mode)"
    related_parent: "name of the sample to provide related parent strain\\n(mutagenesis strain) variants for the analysis in\\nVariant Allele Frequency (VAF) mode."
    unrelated_parent: "name of the sample to provide unrelated parent strain\\n(mapping strain) variants for the analysis in Variant\\nAllele Frequency (VAF) mode."
    infer_missing: "if variant data for either the related or the\\nunrelated parent strain is not provided, the tool can\\ntry to infer the alleles present in that parent from\\nthe allele spectrum found in the mapping sample. Use\\nwith caution on carefully filtered variant lists only!"
    contrast_sample: "name of the sample (as appearing in the input vcf\\nfile) that provides the contrast for the mapping\\nsample"
    text_file: "generate text-based output for every variant position\\nand save it to the specified file. This file can be\\nused as input during later runs of the tool, which\\nwill speed up replotting."
    seq_info: "if an input file does not specify required contig\\ninformation (chromosome names and sizes), extract this\\ninformation from SEQINFO_FILE. This file can be a\\nreference genome file in fasta format or a CloudMap-\\nstyle sequence dictionary file. This option is never\\nnecessary with MiModD-generated input, but can be\\nuseful with input files generated by third-party tools\\nthat do not record contig information in their output."
    cloud_map: "generate valid input for the original CloudMap Mapping\\ntools and save it to the text output file specified by\\nthe \\\"-t\\\" option. This option can only be used in \\\"SVD\\\"\\nor \\\"VAF\\\" mode, which have an equivalent in CloudMap."
    plot_file: "generate graphical output and store it in the given\\nfile (default: no graphical output)"
    fit_width: "do not autoscale x-axes to size of largest contig"
    no_scatter: "do not produce scatter plots of observed segregation\\nrates; just plot histograms"
    loess_span: "span parameter for the Loess regression line through\\nthe linkage data (default: 0.1, specify 0 to skip\\ncalculation)"
    ylim_scatter: "upper limit for scatter plot y-axis (default: 1)"
    points_colors: "color(s) for scatter plot data points"
    loess_colors: "color(s) for regression line(s) through scatter plot\\ndata"
    no_hist: "do not produce linkage histogram plots; only generate\\nscatter plots"
    no_kde: "do not add kernel density estimate lines to histogram"
    hist_colors: "list of colors to be used for plotting histogram bars\\nof different width (default: darkgrey and red)\\n"
    analysis_mode: "specify \\\"SVD\\\" for Simple Variant Density analysis,\\n\\\"VAF\\\" for Variant Allele Frequency analysis or \\\"VAC\\\"\\nfor Variant Allele Contrast analysis."
    input_file: "valid input files are VCF files or per-variant report\\nfiles (as generated by this tool with the \\\"-t\\\" option\\nor by the CloudMap Hawaiian Variant Density Mapping\\ntool)."
    plots: "--ylim-hist FLOAT     upper limit for histogram plot y-axis (default: auto)"
  }
  output {
    File out_stdout = stdout()
    File out_plot_file = "${in_plot_file}"
  }
}