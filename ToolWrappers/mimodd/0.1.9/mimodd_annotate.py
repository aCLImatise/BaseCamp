from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Array, String, Boolean, Int

Mimodd_Annotate_V0_1_0 = CommandToolBuilder(tool="mimodd_annotate", base_command=["mimodd", "annotate"], inputs=[ToolInput(tag="in_ofile", input_type=File(optional=True), prefix="--ofile", doc=InputDocumentation(doc="redirect the output to the specified file (default:\nstdout)")), ToolInput(tag="in_codon_tables", input_type=Array(t=String(), optional=True), prefix="--codon-tables", doc=InputDocumentation(doc="specify custom codon tables to be used in assessing\nvariant effects at the protein level; if a codon table\nshould be used for only a specific chromosome, use the\nformat CHROM:TABLE_NAME. Use TABLE_NAME alone to\nspecify a codon table to be used for all chromosomes,\nfor which no chromosome-specific table is provided.\nValid TABLE_NAMEs are those defined in the Codon\ntables section of the SnpEff config file. NOTE: It is\nalso possible to associate chromosomes with a codon\ntable permanently by editing the SnpEff config file.")), ToolInput(tag="in_stats", input_type=File(optional=True), prefix="--stats", doc=InputDocumentation(doc="generate a results summary file of the specified name")), ToolInput(tag="in_no_downstream", input_type=Boolean(optional=True), prefix="--no-downstream", doc=InputDocumentation(doc="do not include downstream effects in the output")), ToolInput(tag="in_no_upstream", input_type=Boolean(optional=True), prefix="--no-upstream", doc=InputDocumentation(doc="do not include upstream effects in the output")), ToolInput(tag="in_no_intron", input_type=Boolean(optional=True), prefix="--no-intron", doc=InputDocumentation(doc="do not include intron effects in the output")), ToolInput(tag="in_no_intergenic", input_type=Boolean(optional=True), prefix="--no-intergenic", doc=InputDocumentation(doc="do not include intergenic effects in the output")), ToolInput(tag="in_no_utr", input_type=Boolean(optional=True), prefix="--no-utr", doc=InputDocumentation(doc="do not include UTR effects in the output")), ToolInput(tag="in_ud", input_type=Int(optional=True), prefix="--ud", doc=InputDocumentation(doc="specify the upstream/downstream interval length, i.e.,\nvariants more than DISTANCE nts from the next\nannotated gene are considered to be intergenic")), ToolInput(tag="in_config", input_type=File(optional=True), prefix="--config", doc=InputDocumentation(doc="location of the SnpEff installation directory. Will\noverride MiModD SNPEFF_PATH config setting if\nprovided.")), ToolInput(tag="in_memory", input_type=String(optional=True), prefix="--memory", doc=InputDocumentation(doc="maximal memory to use in GB (overrides config setting)")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="suppress original messages from SnpEff")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="verbose output (independent of SnpEff)")), ToolInput(tag="in_input_file", input_type=String(), position=0, doc=InputDocumentation(doc="a vcf input file")), ToolInput(tag="in_annotation_source", input_type=String(), position=1, doc=InputDocumentation(doc="the name of an installed SnpEff genome annotation file\n(the snpeff-genomes tool can be used to get a list of\nall such names)"))], outputs=[ToolOutput(tag="out_ofile", output_type=File(optional=True), selector=InputSelector(input_to_select="in_ofile", type_hint=File()), doc=OutputDocumentation(doc="redirect the output to the specified file (default:\nstdout)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Mimodd_Annotate_V0_1_0().translate("wdl", allow_empty_container=True)

