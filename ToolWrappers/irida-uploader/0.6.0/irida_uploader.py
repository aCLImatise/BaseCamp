from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Directory, File, Boolean, Int

Irida_Uploader_V0_1_0 = CommandToolBuilder(tool="irida_uploader", base_command=["irida-uploader"], inputs=[ToolInput(tag="in_directory", input_type=Directory(optional=True), prefix="--directory", doc=InputDocumentation(doc="Location of sequencing run to upload.\nDirectory must be writable.")), ToolInput(tag="in_config", input_type=File(optional=True), prefix="--config", doc=InputDocumentation(doc="Path to an alternative configuration file. This\noverrides the default config file in the config\ndirectory")), ToolInput(tag="in_force", input_type=Boolean(optional=True), prefix="--force", doc=InputDocumentation(doc="Uploader will ignore the status file, and try to\nupload even when a run is in non new status.")), ToolInput(tag="in_continue_partial", input_type=Boolean(optional=True), prefix="--continue_partial", doc=InputDocumentation(doc="Uploader will continue an existing upload run when\nupload status is partial.")), ToolInput(tag="in_batch", input_type=Boolean(optional=True), prefix="--batch", doc=InputDocumentation(doc="Uploader will expect a directory containing a\nsequencing run directories, and upload in batch. The\nlist of runs is generated at start time (Runs added to\ndirectory mid upload will not be uploaded).")), ToolInput(tag="in_upload_mode", input_type=Int(optional=True), prefix="--upload_mode", doc=InputDocumentation(doc="Choose which upload mode to use. Supported modes:\n['default', 'assemblies', 'fast5']")), ToolInput(tag="in_ci", input_type=Boolean(optional=True), prefix="-ci", doc=InputDocumentation(doc="[CONFIG_CLIENT_ID], --config_client_id [CONFIG_CLIENT_ID]\nOverride the 'client_id' field in config file. This is\nfor the uploader client created in IRIDA, used to\nhandle the data upload")), ToolInput(tag="in_cs", input_type=Boolean(optional=True), prefix="-cs", doc=InputDocumentation(doc="[CONFIG_CLIENT_SECRET], --config_client_secret [CONFIG_CLIENT_SECRET]\nOverride 'client_secret' in config file. This is for\nthe uploader client created in IRIDA, used to handle\nthe data upload")), ToolInput(tag="in_cu", input_type=Boolean(optional=True), prefix="-cu", doc=InputDocumentation(doc="[CONFIG_USERNAME], --config_username [CONFIG_USERNAME]\nOverride 'username' in config file. This is your IRIDA\naccount username.")), ToolInput(tag="in_cp", input_type=Boolean(optional=True), prefix="-cp", doc=InputDocumentation(doc="[CONFIG_PASSWORD], --config_password [CONFIG_PASSWORD]\nOverride 'password' in config file. This corresponds\nto your IRIDA account.")), ToolInput(tag="in_cb", input_type=Boolean(optional=True), prefix="-cb", doc=InputDocumentation(doc="[CONFIG_BASE_URL], --config_base_url [CONFIG_BASE_URL]\nOverride 'base_url' in config file. The api url for\nyour irida instance (example:\nhttps://my.irida.server/api/)")), ToolInput(tag="in_cr", input_type=Boolean(optional=True), prefix="-cr", doc=InputDocumentation(doc="[CONFIG_PARSER], --config_parser [CONFIG_PARSER]\nOverride 'parser' in config file. Choose the type of\nsequencer data that is being uploaded. Supported\nparsers: ['miseq', 'miseq_v26', 'miseq_v31',\n'miniseq', 'nextseq', 'nextseq2k_nml', 'iseq',\n'directory', 'nanopore_assemblies']")), ToolInput(tag="in_readonly", input_type=Boolean(optional=True), prefix="--readonly", doc=InputDocumentation(doc="Upload in Read Only mode, does not write status or log\nfile to run directory.")), ToolInput(tag="in_cd", input_type=Boolean(optional=True), prefix="-cd", doc=InputDocumentation(doc="[DELAY], --delay [DELAY]\nAccepts an Integer for minutes to delay. When set, new\nruns will have their status set to delayed. When\nuploading a run with the delayed status, the run will\nonly upload if the given amount of minutes has passes\nsince it was set to delayed. Default = 0: When set to\n0, runs will not be given delayed status.")), ToolInput(tag="in_ct", input_type=Boolean(optional=True), prefix="-ct", doc=InputDocumentation(doc="[CONFIG_TIMEOUT], --config_timeout [CONFIG_TIMEOUT]\nAccepts an Integer for the expected transfer time in\nseconds per MB. Default is 10 second for every MB of\ndata to transfer (100kb/s). Increasing this number can\nreduce timeout errors when your transfer speed is very\nslow."))], outputs=[], container="quay.io/biocontainers/irida-uploader:0.6.0--py36_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Irida_Uploader_V0_1_0().translate("wdl")

