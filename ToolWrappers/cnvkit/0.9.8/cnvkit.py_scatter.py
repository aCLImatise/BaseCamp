from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, String, Boolean

Cnvkit_Py_Scatter_V0_1_0 = CommandToolBuilder(tool="cnvkit.py_scatter", base_command=["cnvkit.py", "scatter"], inputs=[ToolInput(tag="in_segment", input_type=File(optional=True), prefix="--segment", doc=InputDocumentation(doc="Segmentation calls (.cns), the output of the 'segment'\ncommand.")), ToolInput(tag="in_chromosome", input_type=Int(optional=True), prefix="--chromosome", doc=InputDocumentation(doc="Chromosome or chromosomal range, e.g. 'chr1' or\n'chr1:2333000-2444000', to display. If a range is\ngiven, all targeted genes in this range will be shown,\nunless -g/--gene is also given.")), ToolInput(tag="in_gene", input_type=String(optional=True), prefix="--gene", doc=InputDocumentation(doc="Name of gene or genes (comma-separated) to display.")), ToolInput(tag="in_range_list", input_type=File(optional=True), prefix="--range-list", doc=InputDocumentation(doc="File listing the chromosomal ranges to display, as\nBED, interval list or 'chr:start-end' text. Creates\nfocal plots similar to -c/--chromosome for each listed\nregion, combined into a multi-page PDF. The output\nfilename must also be specified (-o/--output).")), ToolInput(tag="in_width", input_type=Int(optional=True), prefix="--width", doc=InputDocumentation(doc="Width of margin to show around the selected gene(s)\n(-g/--gene) or small chromosomal region\n(-c/--chromosome). [Default: 1000000]")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="Output PDF file name.")), ToolInput(tag="in_anti_target_marker", input_type=String(optional=True), prefix="--antitarget-marker", doc=InputDocumentation(doc="Plot antitargets using this symbol when plotting in a\nselected chromosomal region (-g/--gene or\n-c/--chromosome). [Default: same as targets]")), ToolInput(tag="in_by_bin", input_type=Boolean(optional=True), prefix="--by-bin", doc=InputDocumentation(doc="Plot data x-coordinates by bin indices instead of\ngenomic coordinates. All bins will be shown with equal\nwidth, no blank regions will be shown, and x-axis\nvalues indicate bin number (within chromosome) instead\nof genomic position.")), ToolInput(tag="in_segment_color", input_type=String(optional=True), prefix="--segment-color", doc=InputDocumentation(doc="Plot segment lines in this color. Value can be any\nstring accepted by matplotlib, e.g. 'red' or\n'#CC0000'.")), ToolInput(tag="in_title", input_type=File(optional=True), prefix="--title", doc=InputDocumentation(doc="Plot title. [Default: sample ID, from filename or -i]")), ToolInput(tag="in_trend", input_type=Boolean(optional=True), prefix="--trend", doc=InputDocumentation(doc="Draw a smoothed local trendline on the scatter plot.")), ToolInput(tag="in_y_max", input_type=Int(optional=True), prefix="--y-max", doc=InputDocumentation(doc="y-axis upper limit.")), ToolInput(tag="in_y_min", input_type=Int(optional=True), prefix="--y-min", doc=InputDocumentation(doc="y-axis lower limit.")), ToolInput(tag="in_vcf", input_type=File(optional=True), prefix="--vcf", doc=InputDocumentation(doc="VCF file name containing variants to plot for SNV\nb-allele frequencies.")), ToolInput(tag="in_sample_id", input_type=String(optional=True), prefix="--sample-id", doc=InputDocumentation(doc="Name of the sample in the VCF to use for b-allele\nfrequency extraction and as the default plot title.")), ToolInput(tag="in_normal_id", input_type=String(optional=True), prefix="--normal-id", doc=InputDocumentation(doc="Corresponding normal sample ID in the input VCF. This\nsample is used to select only germline SNVs to plot.")), ToolInput(tag="in_min_variant_depth", input_type=Int(optional=True), prefix="--min-variant-depth", doc=InputDocumentation(doc="Minimum read depth for a SNV to be used in the\nb-allele frequency calculation. [Default: 20]")), ToolInput(tag="in_ignore_vcfs_genotypes", input_type=Boolean(optional=True), prefix="-z", doc=InputDocumentation(doc="[ALT_FREQ], --zygosity-freq [ALT_FREQ]\nIgnore VCF's genotypes (GT field) and instead infer\nzygosity from allele frequencies. [Default if used\nwithout a number: 0.25]\n")), ToolInput(tag="in_filename", input_type=File(), position=0, doc=InputDocumentation(doc="Processed bin-level copy ratios (*.cnr), the output of\nthe 'fix' sub-command."))], outputs=[ToolOutput(tag="out_range_list", output_type=File(optional=True), selector=InputSelector(input_to_select="in_range_list", type_hint=File()), doc=OutputDocumentation(doc="File listing the chromosomal ranges to display, as\nBED, interval list or 'chr:start-end' text. Creates\nfocal plots similar to -c/--chromosome for each listed\nregion, combined into a multi-page PDF. The output\nfilename must also be specified (-o/--output).")), ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="Output PDF file name."))], container="quay.io/biocontainers/cnvkit:0.9.8--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Cnvkit_Py_Scatter_V0_1_0().translate("wdl")

