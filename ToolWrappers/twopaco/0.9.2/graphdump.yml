!Command
command:
- graphdump
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -k
  - --kvalue
  description: (required)  Value of k
  args: !SimpleFlagArg
    name: integer
- !Flag
  optional: true
  synonyms:
  - -s
  description: "<>,  --seqfile <>  (accepted multiple times)\nsequences file name"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -f
  - --format
  description: "<seq|group|dot|gfa1|gfa2\n|fasta>\n(required)  Output format"
  args: !SimpleFlagArg
    name: seq|group|dot|gfa1|gfa2|fasta
- !Flag
  optional: true
  synonyms:
  - --prefix
  description: "Add a prefix to segments in GFA (in case if you have genomes with\n\
    identical FASTA headers)"
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: Displays usage information and exits.
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - --version
  description: Displays version information and exits.
  args: !EmptyFlagArg {}
help_text: "\nUSAGE: \n\n   graphdump  -k <integer> [-s <>] ...  -f <seq|group|dot|gfa1|gfa2|fasta>\n\
  \              [--prefix] [--] [--version] [-h] <file name>\n\n\nWhere: \n\n   -k\
  \ <integer>,  --kvalue <integer>\n     (required)  Value of k\n\n   -s <>,  --seqfile\
  \ <>  (accepted multiple times)\n     sequences file name\n\n   -f <seq|group|dot|gfa1|gfa2|fasta>,\
  \  --format <seq|group|dot|gfa1|gfa2\n      |fasta>\n     (required)  Output format\n\
  \n   --prefix\n     Add a prefix to segments in GFA (in case if you have genomes\
  \ with\n     identical FASTA headers)\n\n   --,  --ignore_rest\n     Ignores the\
  \ rest of the labeled arguments following this flag.\n\n   --version\n     Displays\
  \ version information and exits.\n\n   -h,  --help\n     Displays usage information\
  \ and exits.\n\n   <file name>\n     (required)  input file name\n\n\n   This utility\
  \ converts the binary output of TwoPaCo to another format\n\n"
generated_using:
- --help
docker_image:
