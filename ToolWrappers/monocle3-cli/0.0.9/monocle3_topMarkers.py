from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, String, Boolean, Float, File

Monocle3_Topmarkers_V0_1_0 = CommandToolBuilder(tool="monocle3_topMarkers", base_command=["monocle3", "topMarkers"], inputs=[ToolInput(tag="in_input_object_format", input_type=Int(optional=True), prefix="--input-object-format", doc=InputDocumentation(doc="Format of input object. [Default: cds3]")), ToolInput(tag="in_output_table_format", input_type=String(optional=True), prefix="--output-table-format", doc=InputDocumentation(doc="Format of output table, choose from {tsv, csv}. [Default: tsv]")), ToolInput(tag="in_introspective", input_type=Boolean(optional=True), prefix="--introspective", doc=InputDocumentation(doc="Print introspective information of the output table.")), ToolInput(tag="in_group_cells_by", input_type=String(optional=True), prefix="--group-cells-by", doc=InputDocumentation(doc="Cell groups, choose from 'cluster', 'partition', or any categorical variable in `colData(cds)`}. [Default: cluster]")), ToolInput(tag="in_genes_to_test_per_group", input_type=Int(optional=True), prefix="--genes-to-test-per-group", doc=InputDocumentation(doc="Numeric, how many genes of the top ranked specific genes by Jenson-Shannon to do the more expensive regression test on. [Default: 25]")), ToolInput(tag="in_marker_sig_test", input_type=Boolean(optional=True), prefix="--marker-sig-test", doc=InputDocumentation(doc="A flag indicating whether to assess the discriminative power of each marker through logistic regression. Can be slow, consider disabling to speed up top_markers(). [Default: FALSE]")), ToolInput(tag="in_reference_cells", input_type=Int(optional=True), prefix="--reference-cells", doc=InputDocumentation(doc="If provided, top_markers will perform the marker significance test against a 'reference set' of cells. Must be either a list of cell ids from colnames(cds) (comma separated), or a positive integer. If the latter, top_markers() will randomly select the specified number of reference cells. Accelerates the marker significance test at some cost in sensitivity.")), ToolInput(tag="in_cores", input_type=Int(optional=True), prefix="--cores", doc=InputDocumentation(doc="The number of cores to be used for marker testing. [Default: 1]")), ToolInput(tag="in_filter_fraction_expression", input_type=Float(optional=True), prefix="--filter-fraction-expression", doc=InputDocumentation(doc="Filters the markers test result by this fraction of expression [Default: 0.1]")), ToolInput(tag="in_top_n_markers", input_type=Int(optional=True), prefix="--top-n-markers", doc=InputDocumentation(doc="The number of top marker genes to report in plots and in top markers list. [Default: 5]")), ToolInput(tag="in_plot_top_markers", input_type=File(optional=True), prefix="--plot-top-markers", doc=InputDocumentation(doc="Save top marker by cell group plot to a file specified by this option.")), ToolInput(tag="in_save_full_markers", input_type=File(optional=True), prefix="--save-full-markers", doc=InputDocumentation(doc="Save full marker table to a file specified by this option.")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Emit verbose output.")), ToolInput(tag="in_input_object", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_output_table", input_type=String(), position=1, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Monocle3_Topmarkers_V0_1_0().translate("wdl", allow_empty_container=True)

