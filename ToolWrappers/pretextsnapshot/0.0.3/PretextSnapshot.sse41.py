from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Int, Boolean

Pretextsnapshot_Sse41_V0_1_0 = CommandToolBuilder(tool="PretextSnapshot.sse41", base_command=["PretextSnapshot.sse41"], inputs=[ToolInput(tag="in_map", input_type=File(optional=True), prefix="--map", doc=InputDocumentation(doc=":           Path to a pretext map.\nThis option is required, except when using:\n--help,\n--sequenceHelp,\n--printColourMapNames,\n--version,\n--licence,\n--thirdParty")), ToolInput(tag="in_format", input_type=String(optional=True), prefix="--format", doc=InputDocumentation(doc=":        Image format, one of 'png'(default) 'bmp' or 'jpeg'.")), ToolInput(tag="in_resolution", input_type=Int(optional=True), prefix="--resolution", doc=InputDocumentation(doc=":    Image resolution, a positive integer, default 1080.\nFor non-square images this will be the resolution\nof the longest dimension.")), ToolInput(tag="in_colour_map", input_type=Int(optional=True), prefix="--colourMap", doc=InputDocumentation(doc=":    Either, a non-negative integer, indexing the colour map to use.\nOr, the name of the colour map to use.\nDefaults to 'Three Wave Blue-Green-Yellow' i.e. '5'.")), ToolInput(tag="in_print_colour_map_names", input_type=Boolean(optional=True), prefix="--printColourMapNames", doc=InputDocumentation(doc=":  Prints a list of the available colour maps.\nCannot be used with any other option.")), ToolInput(tag="in_jpegquality", input_type=Int(optional=True), prefix="--jpegQuality", doc=InputDocumentation(doc=":     JPEG quality factor, an integer between 1 and 100, default 80.\nLarger values result in increased image quality and file size.\nOnly applicable to JPEG images.")), ToolInput(tag="in_folder", input_type=File(optional=True), prefix="--folder", doc=InputDocumentation(doc=":       Output folder path, will be created if it doesn't exist.\nDefaults to the name of the pretext map.")), ToolInput(tag="in_prefix", input_type=String(optional=True), prefix="--prefix", doc=InputDocumentation(doc=":           Prefix name for all image files.\nDefaults to the name of the pretext map + '_'.")), ToolInput(tag="in_sequences", input_type=String(optional=True), prefix="--sequences", doc=InputDocumentation(doc=":      Sequence specification string. Each entry, except for '=all', corresponds to one output image.\nDefaults to '=full, =all'.")), ToolInput(tag="in_sequence_help", input_type=Boolean(optional=True), prefix="--sequenceHelp", doc=InputDocumentation(doc=":         Sequence specification string format documentation.\nCannot be used with any other option.")), ToolInput(tag="in_min_texels", input_type=Int(optional=True), prefix="--minTexels", doc=InputDocumentation(doc=":       Minimum map texels per image (along a single dimension), a positive integer, default 64.\nOutput images over too small a range that violate this minimum will not be created.")), ToolInput(tag="in_grid_size", input_type=Int(optional=True), prefix="--gridSize", doc=InputDocumentation(doc=":       Width in pixels of the sequence separation grid, a non-negative integer, default 1.\nSet to 0 to not overlay a grid.")), ToolInput(tag="in_grid_colour", input_type=Int(optional=True), prefix="--gridColour", doc=InputDocumentation(doc=":       Colour of the sequence separation grid.\nEither, one of: 'black'(default), 'white', 'red', 'green', 'blue', 'yellow', 'cyan' or 'magenta'.\nOr, a sRGBA 32-bit hex code in RRGGBBAA format, e.g. 'ff00ff80' (magenta at half-occupancy).")), ToolInput(tag="in_print_sequence_names", input_type=Boolean(optional=True), prefix="--printSequenceNames", doc=InputDocumentation(doc=":   Prints a list of the individual sequence names in the map, in order of appearance.\nCan only be used with the -m/--map option.")), ToolInput(tag="in_verbose", input_type=Int(optional=True), prefix="--verbose", doc=InputDocumentation(doc=":         Verbosity level, one of: '3'(default) for error, warning and status messages.\n'2' for error and warning messages.\n'1' for error messages.\n'0' for no messages.\nWarning and status messages are printed to stdout, error messages to stderr.")), ToolInput(tag="in_licence", input_type=Boolean(optional=True), prefix="--licence", doc=InputDocumentation(doc=":              Prints the software licence.\nCannot be used with any other option.")), ToolInput(tag="in_third_party", input_type=Boolean(optional=True), prefix="--thirdParty", doc=InputDocumentation(doc=":           Prints a list of the third-party libraries used, along with their respective licences.\nCannot be used with any other option.\n"))], outputs=[ToolOutput(tag="out_folder", output_type=File(optional=True), selector=InputSelector(input_to_select="in_folder", type_hint=File()), doc=OutputDocumentation(doc=":       Output folder path, will be created if it doesn't exist.\nDefaults to the name of the pretext map."))], container="quay.io/biocontainers/pretextsnapshot:0.0.3--hc9558a2_1", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Pretextsnapshot_Sse41_V0_1_0().translate("wdl")

