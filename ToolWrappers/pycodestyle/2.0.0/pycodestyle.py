from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, File, Int

Pycodestyle_V0_1_0 = CommandToolBuilder(tool="pycodestyle", base_command=["pycodestyle"], inputs=[ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="print status messages, or debug with -vv")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="report only file names, or nothing with -qq")), ToolInput(tag="in_repeat", input_type=Boolean(optional=True), prefix="--repeat", doc=InputDocumentation(doc="(obsolete) show all occurrences of the same error")), ToolInput(tag="in_first", input_type=Boolean(optional=True), prefix="--first", doc=InputDocumentation(doc="show first occurrence of each error")), ToolInput(tag="in_exclude", input_type=String(optional=True), prefix="--exclude", doc=InputDocumentation(doc="exclude files or directories which match these comma\nseparated patterns (default:\n.svn,CVS,.bzr,.hg,.git,__pycache__,.tox)")), ToolInput(tag="in_filename", input_type=File(optional=True), prefix="--filename", doc=InputDocumentation(doc="when parsing directories, only check filenames matching\nthese comma separated patterns (default: *.py)")), ToolInput(tag="in_select", input_type=Int(optional=True), prefix="--select", doc=InputDocumentation(doc="select errors and warnings (e.g. E,W6)")), ToolInput(tag="in_ignore", input_type=Int(optional=True), prefix="--ignore", doc=InputDocumentation(doc="skip errors and warnings (e.g. E4,W) (default:\nE121,E123,E126,E226,E24,E704,W503)")), ToolInput(tag="in_show_source", input_type=Boolean(optional=True), prefix="--show-source", doc=InputDocumentation(doc="show source code for each error")), ToolInput(tag="in_show_pep_eight", input_type=Boolean(optional=True), prefix="--show-pep8", doc=InputDocumentation(doc="show text of PEP 8 for each error (implies --first)")), ToolInput(tag="in_statistics", input_type=Boolean(optional=True), prefix="--statistics", doc=InputDocumentation(doc="count errors and warnings")), ToolInput(tag="in_count", input_type=Boolean(optional=True), prefix="--count", doc=InputDocumentation(doc="print total number of errors and warnings to standard\nerror and set exit code to 1 if total is not null")), ToolInput(tag="in_max_line_length", input_type=Int(optional=True), prefix="--max-line-length", doc=InputDocumentation(doc="set maximum allowed line length (default: 79)")), ToolInput(tag="in_hang_closing", input_type=Boolean(optional=True), prefix="--hang-closing", doc=InputDocumentation(doc="hang closing bracket instead of matching indentation of\nopening bracket's line")), ToolInput(tag="in_format", input_type=String(optional=True), prefix="--format", doc=InputDocumentation(doc="set the error format [default|pylint|<custom>]")), ToolInput(tag="in_diff", input_type=Boolean(optional=True), prefix="--diff", doc=InputDocumentation(doc="report changes only within line number ranges in the\nunified diff received on STDIN")), ToolInput(tag="in_benchmark", input_type=Boolean(optional=True), prefix="--benchmark", doc=InputDocumentation(doc="measure processing speed")), ToolInput(tag="in_config", input_type=File(optional=True), prefix="--config", doc=InputDocumentation(doc="user config file location")), ToolInput(tag="in_pep_eight", input_type=Int(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_input", input_type=String(), position=1, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Pycodestyle_V0_1_0().translate("wdl", allow_empty_container=True)

