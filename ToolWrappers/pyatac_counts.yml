!Command
command:
- pyatac
- counts
positional: []
named:
- !Flag
  description: Aligned reads
  synonyms:
  - --bam
  args: !SimpleFlagArg
    name: bam_file
  optional: true
- !Flag
  description: Windows in which to compute counts
  synonyms:
  - --bed
  args: !SimpleFlagArg
    name: bed_file
  optional: true
- !Flag
  description: Basename for output
  synonyms:
  - --out
  args: !SimpleFlagArg
    name: output_basename
  optional: true
- !Flag
  description: Don't use atac offsets
  synonyms:
  - --not_atac
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: lower limit on insert size. Default is 0
  synonyms:
  - --lower
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: upper limit on insert size. Default is 500
  synonyms:
  - --upper
  args: !SimpleFlagArg
    name: int
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "Command run:  /usr/local/bin/pyatac counts --help\npyatac version 0.3.4\n\
  start run at: 2020-09-09 22:17\nusage: pyatac counts [-h] --bam bam_file --bed bed_file\n\
  \                     [--out output_basename] [--not_atac] [--lower int]\n     \
  \                [--upper int]\n\noptional arguments:\n  -h, --help            show\
  \ this help message and exit\n\nRequired:\n  Necessary arguments\n\n  --bam bam_file\
  \        Aligned reads\n  --bed bed_file        Windows in which to compute counts\n\
  \nOptions:\n  Optional settings\n\n  --out output_basename\n                   \
  \     Basename for output\n  --not_atac            Don't use atac offsets\n\nFragment\
  \ size bounds option:\n  Upper and lower limits\n\n  --lower int           lower\
  \ limit on insert size. Default is 0\n  --upper int           upper limit on insert\
  \ size. Default is 500\n"
generated_using:
- --help
