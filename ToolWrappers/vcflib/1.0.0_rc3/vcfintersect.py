from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, Boolean, String

Vcfintersect_V0_1_0 = CommandToolBuilder(tool="vcfintersect", base_command=["vcfintersect"], inputs=[ToolInput(tag="in_bed", input_type=File(optional=True), prefix="--bed", doc=InputDocumentation(doc="use intervals provided by this BED file")), ToolInput(tag="in_region", input_type=Int(optional=True), prefix="--region", doc=InputDocumentation(doc="use 1-based tabix-style region (e.g. chrZ:10-20), multiples allowed")), ToolInput(tag="in_start_only", input_type=Boolean(optional=True), prefix="--start-only", doc=InputDocumentation(doc="don't use the reference length information in the record to determine\noverlap status, just use the start posiion")), ToolInput(tag="in_invert", input_type=Boolean(optional=True), prefix="--invert", doc=InputDocumentation(doc="invert the selection, printing only records which would\nnot have been printed out")), ToolInput(tag="in_intersect_vcf", input_type=File(optional=True), prefix="--intersect-vcf", doc=InputDocumentation(doc="use this VCF for set intersection generation")), ToolInput(tag="in_union_vcf", input_type=File(optional=True), prefix="--union-vcf", doc=InputDocumentation(doc="use this VCF for set union generation")), ToolInput(tag="in_window_size", input_type=Int(optional=True), prefix="--window-size", doc=InputDocumentation(doc="compare records up to this many bp away (default 30)")), ToolInput(tag="in_reference", input_type=File(optional=True), prefix="--reference", doc=InputDocumentation(doc="FASTA reference file, required with -i and -u")), ToolInput(tag="in_loci", input_type=Boolean(optional=True), prefix="--loci", doc=InputDocumentation(doc="output whole loci when one alternate allele matches")), ToolInput(tag="in_ref_match", input_type=Boolean(optional=True), prefix="--ref-match", doc=InputDocumentation(doc="intersect on the basis of record REF string")), ToolInput(tag="in_tag", input_type=String(optional=True), prefix="--tag", doc=InputDocumentation(doc="attach TAG to each record's info field if it would intersect")), ToolInput(tag="in_tag_value", input_type=String(optional=True), prefix="--tag-value", doc=InputDocumentation(doc="use this value to indicate that the allele is passing\n'.' will be used otherwise.  default: 'PASS'")), ToolInput(tag="in_merge_from", input_type=File(optional=True), prefix="--merge-from", doc=InputDocumentation(doc="TO-TAG   merge from FROM-TAG used in the -i file, setting TO-TAG\nin the current file.")), ToolInput(tag="in_vcf_file", input_type=File(optional=True), position=0, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Vcfintersect_V0_1_0().translate("wdl", allow_empty_container=True)

