from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, File

Fgap_V0_1_0 = CommandToolBuilder(tool="FGAP", base_command=["FGAP"], inputs=[ToolInput(tag="in_draft_file", input_type=Boolean(optional=True), prefix="--draft-file", doc=InputDocumentation(doc="Draft genome file [fasta format - Ex: 'draft.fasta']")), ToolInput(tag="in_datasets_files", input_type=Boolean(optional=True), prefix="--datasets-files", doc=InputDocumentation(doc="List of datasets files to close gaps [fasta format - Ex: 'dataset1.fasta,dataset2.fasta']")), ToolInput(tag="in_min_score", input_type=Boolean(optional=True), prefix="--min-score", doc=InputDocumentation(doc="Min Score (raw) to return results from BLAST (integer) - Default: 25")), ToolInput(tag="in_max_evalue", input_type=Boolean(optional=True), prefix="--max-evalue", doc=InputDocumentation(doc="Max E-Value to return results from BLAST (float) - Default: 1e-7")), ToolInput(tag="in_min_identity", input_type=Boolean(optional=True), prefix="--min-identity", doc=InputDocumentation(doc="Min identity (%) to return results from BLAST (integer [0-100]) - Default: 70")), ToolInput(tag="in_contig_end_length", input_type=Int(optional=True), prefix="--contig-end-length", doc=InputDocumentation(doc="(bp) of contig ends to perform BLAST alignment (integer) - Default: 300")), ToolInput(tag="in_edge_trim_length", input_type=Boolean(optional=True), prefix="--edge-trim-length", doc=InputDocumentation(doc="Length of ignored bases (bp) upstream and downstrem of the gap (integer) - Default: 0")), ToolInput(tag="in_max_remove_length", input_type=Int(optional=True), prefix="--max-remove-length", doc=InputDocumentation(doc="number of bases (bp) that can be removed (integer) - Default: 500")), ToolInput(tag="in_max_insert_length", input_type=Int(optional=True), prefix="--max-insert-length", doc=InputDocumentation(doc="number of bases (bp) that can be inserted (integer) - Default: 500")), ToolInput(tag="in_positive_gap", input_type=Boolean(optional=True), prefix="--positive-gap", doc=InputDocumentation(doc="Enable closing of positive gaps (with insertion) (integer [0-1]) - Default: 1")), ToolInput(tag="in_zero_gap", input_type=Boolean(optional=True), prefix="--zero-gap", doc=InputDocumentation(doc="Enable closing of zero gaps (without insert any base) (integer [0-1]) - Default: 0")), ToolInput(tag="in_negative_gap", input_type=Boolean(optional=True), prefix="--negative-gap", doc=InputDocumentation(doc="Enable closing of negative gaps (overlapping contig ends) (integer [0-1]) - Default: 0")), ToolInput(tag="in_gap_char", input_type=Boolean(optional=True), prefix="--gap-char", doc=InputDocumentation(doc="Base that represents the gap (char) - Default: 'N'")), ToolInput(tag="in_blast_path", input_type=Boolean(optional=True), prefix="--blast-path", doc=InputDocumentation(doc="Blast+ package path (only makeblastdb and blastn are needed, version 2.2.28+ or higher) - Default: ''")), ToolInput(tag="in_blast_alignment_parameters", input_type=Boolean(optional=True), prefix="--blast-alignment-parameters", doc=InputDocumentation(doc="BLAST alignment parameters (opengap,extendgap,match,mismatch,wordsize) - Default: '1,1,1,-3,15'")), ToolInput(tag="in_blast_max_results", input_type=Boolean(optional=True), prefix="--blast-max-results", doc=InputDocumentation(doc="Max results from BLAST for each query (integer) - Default: 200")), ToolInput(tag="in_threads", input_type=Boolean(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of threads (integer) - Default: 1")), ToolInput(tag="in_more_output", input_type=Boolean(optional=True), prefix="--more-output", doc=InputDocumentation(doc="More output files with gap regions after and before gap closing (integer [0-1]) - Default: 0")), ToolInput(tag="in_output_prefix", input_type=File(optional=True), prefix="--output-prefix", doc=InputDocumentation(doc="Output prefix [File or folder - Ex: 'out' or 'out_folder/out' ] - Default: 'output_fgap'"))], outputs=[ToolOutput(tag="out_output_prefix", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_prefix", type_hint=File()), doc=OutputDocumentation(doc="Output prefix [File or folder - Ex: 'out' or 'out_folder/out' ] - Default: 'output_fgap'"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Fgap_V0_1_0().translate("wdl", allow_empty_container=True)

