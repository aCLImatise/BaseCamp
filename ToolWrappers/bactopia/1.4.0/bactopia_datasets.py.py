from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean, Int, String, Float

Bactopia_Datasets_Py_V0_1_0 = CommandToolBuilder(tool="bactopia_datasets.py", base_command=["bactopia-datasets.py"], inputs=[ToolInput(tag="in_ariba", input_type=File(optional=True), prefix="--ariba", doc=InputDocumentation(doc="Setup Ariba datasets for a given reference or a list of\nreferences in a text file. (Default: card,vfdb_core)")), ToolInput(tag="in_species", input_type=File(optional=True), prefix="--species", doc=InputDocumentation(doc="Download available MLST schemas and completed genomes for\na given species or a list of species in a text file.")), ToolInput(tag="in_skip_pro_kk_a", input_type=Boolean(optional=True), prefix="--skip_prokka", doc=InputDocumentation(doc="Skip creation of a Prokka formatted fasta for each species")), ToolInput(tag="in_include_genus", input_type=Boolean(optional=True), prefix="--include_genus", doc=InputDocumentation(doc="Include all genus members in the Prokka proteins FASTA")), ToolInput(tag="in_limit", input_type=Int(optional=True), prefix="--limit", doc=InputDocumentation(doc="If available completed genomes exceeds a given limit, a\nrandom subsample will be taken.")), ToolInput(tag="in_accessions", input_type=String(optional=True), prefix="--accessions", doc=InputDocumentation(doc="A list of RefSeq accessions to download.")), ToolInput(tag="in_identity", input_type=Float(optional=True), prefix="--identity", doc=InputDocumentation(doc="CD-HIT (-c) sequence identity threshold. (Default: 0.9)")), ToolInput(tag="in_overlap", input_type=Float(optional=True), prefix="--overlap", doc=InputDocumentation(doc="CD-HIT (-s) length difference cutoff. (Default: 0.8)")), ToolInput(tag="in_max_memory", input_type=Int(optional=True), prefix="--max_memory", doc=InputDocumentation(doc="CD-HIT (-M) memory limit (in MB). (Default: unlimited")), ToolInput(tag="in_fast_cluster", input_type=Boolean(optional=True), prefix="--fast_cluster", doc=InputDocumentation(doc="Use CD-HIT's (-g 0) fast clustering algorithm, instead of\nthe accurate but slow algorithm.")), ToolInput(tag="in_skip_min_mer", input_type=Boolean(optional=True), prefix="--skip_minmer", doc=InputDocumentation(doc="Skip download of pre-computed minmer datasets (mash,\nsourmash)")), ToolInput(tag="in_skip_pls_db", input_type=Boolean(optional=True), prefix="--skip_plsdb", doc=InputDocumentation(doc="Skip download of pre-computed PLSDB datbases (blast, mash)")), ToolInput(tag="in_cpus", input_type=Int(optional=True), prefix="--cpus", doc=InputDocumentation(doc="Number of cpus to use. (Default: 1)")), ToolInput(tag="in_clear_cache", input_type=Boolean(optional=True), prefix="--clear_cache", doc=InputDocumentation(doc="Remove any existing cache.")), ToolInput(tag="in_force", input_type=Boolean(optional=True), prefix="--force", doc=InputDocumentation(doc="Forcibly overwrite existing datasets.")), ToolInput(tag="in_force_ariba", input_type=Boolean(optional=True), prefix="--force_ariba", doc=InputDocumentation(doc="Forcibly overwrite existing Ariba datasets.")), ToolInput(tag="in_force_mlst", input_type=Boolean(optional=True), prefix="--force_mlst", doc=InputDocumentation(doc="Forcibly overwrite existing MLST datasets.")), ToolInput(tag="in_force_pro_kk_a", input_type=Boolean(optional=True), prefix="--force_prokka", doc=InputDocumentation(doc="Forcibly overwrite existing Prokka datasets.")), ToolInput(tag="in_force_min_mer", input_type=Boolean(optional=True), prefix="--force_minmer", doc=InputDocumentation(doc="Forcibly overwrite existing minmer datasets.")), ToolInput(tag="in_force_pls_db", input_type=Boolean(optional=True), prefix="--force_plsdb", doc=InputDocumentation(doc="Forcibly overwrite existing PLSDB datasets.")), ToolInput(tag="in_keep_files", input_type=Boolean(optional=True), prefix="--keep_files", doc=InputDocumentation(doc="Keep all downloaded and intermediate files.")), ToolInput(tag="in_list_datasets", input_type=Boolean(optional=True), prefix="--list_datasets", doc=InputDocumentation(doc="List Ariba reference datasets and MLST schemas available\nfor setup.")), ToolInput(tag="in_depends", input_type=Boolean(optional=True), prefix="--depends", doc=InputDocumentation(doc="Verify dependencies are installed.")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Print debug related text.")), ToolInput(tag="in_silent", input_type=Boolean(optional=True), prefix="--silent", doc=InputDocumentation(doc="Only critical errors will be printed.")), ToolInput(tag="in_pub_mlst", input_type=String(), position=0, doc=InputDocumentation(doc="Bactopia config file with PubMLST schema mappings for")), ToolInput(tag="in_ariba_dot", input_type=String(), position=1, doc=InputDocumentation(doc="OUTPUT_DIRECTORY  Directory to write output."))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bactopia_Datasets_Py_V0_1_0().translate("wdl", allow_empty_container=True)

