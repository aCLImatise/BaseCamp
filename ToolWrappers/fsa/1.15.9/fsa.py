from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Boolean, Int, Float

Fsa_V0_1_0 = CommandToolBuilder(tool="fsa", base_command=["fsa"], inputs=[ToolInput(tag="in_log", input_type=String(optional=True), prefix="--log", doc=InputDocumentation(doc="turn on diagnostic logging (-loghelp shows syntax)")), ToolInput(tag="in_log_file", input_type=File(optional=True), prefix="--logfile", doc=InputDocumentation(doc="log to file")), ToolInput(tag="in_log_copy", input_type=File(optional=True), prefix="--logcopy", doc=InputDocumentation(doc="log to file and standard error")), ToolInput(tag="in_log_time", input_type=Boolean(optional=True), prefix="--logtime", doc=InputDocumentation(doc="timestamp standard error (logfile stamped automatically)")), ToolInput(tag="in_log_xml", input_type=Boolean(optional=True), prefix="--logxml", doc=InputDocumentation(doc="(default) add XML timestamps (--nologxml to disable)")), ToolInput(tag="in_log_err", input_type=Boolean(optional=True), prefix="--logerr", doc=InputDocumentation(doc="log on standard error (default)")), ToolInput(tag="in_stockholm", input_type=Boolean(optional=True), prefix="--stockholm", doc=InputDocumentation(doc="output Stockholm alignments (default is multi-FASTA format)")), ToolInput(tag="in_gui", input_type=Boolean(optional=True), prefix="--gui", doc=InputDocumentation(doc="record alignment & statistical model for interactive Java GUI")), ToolInput(tag="in_write_params", input_type=Boolean(optional=True), prefix="--write-params", doc=InputDocumentation(doc="write learned emission distributions (substitution matrices) to disk")), ToolInput(tag="in_write_posteriors", input_type=Boolean(optional=True), prefix="--write-posteriors", doc=InputDocumentation(doc="write learned pairwise posterior alignment probability matrices to disk")), ToolInput(tag="in_nuc_prot", input_type=Boolean(optional=True), prefix="--nucprot", doc=InputDocumentation(doc="align input nucleotide sequences (must all be nucleotide) in protein space")), ToolInput(tag="in_in_del_two", input_type=Boolean(optional=True), prefix="--indel2", doc=InputDocumentation(doc="(default) use two sets of indel states in Pair HMM (use --noindel2 to use 1 set only)")), ToolInput(tag="in_gap_open_one", input_type=Int(optional=True), prefix="--gapopen1", doc=InputDocumentation(doc="initial gap-open probability (for set 1 of indel states)")), ToolInput(tag="in_gap_extend_one", input_type=Int(optional=True), prefix="--gapextend1", doc=InputDocumentation(doc="initial gap-extend probability (for set 1 of indel states)")), ToolInput(tag="in_gap_open_two", input_type=Int(optional=True), prefix="--gapopen2", doc=InputDocumentation(doc="initial gap-open probability (for set 2 of indel states)")), ToolInput(tag="in_gap_extend_two", input_type=Int(optional=True), prefix="--gapextend2", doc=InputDocumentation(doc="initial gap-extend probability (for set 2 of indel states)")), ToolInput(tag="in_model", input_type=Int(optional=True), prefix="--model", doc=InputDocumentation(doc="initial substitution model: 0 = Jukes-Cantor, 1 = Tamura-Nei / BLOSUM62-like (proteins) (default is 1)")), ToolInput(tag="in_time", input_type=Float(optional=True), prefix="--time", doc=InputDocumentation(doc="Jukes-Cantor/Tamura-Nei evolutionary time parameter (default is 0.4)")), ToolInput(tag="in_alpha_r", input_type=Float(optional=True), prefix="--alphar", doc=InputDocumentation(doc="Tamura-Nei rate alpha_R (transition: purine) (default is 1.3)")), ToolInput(tag="in_alpha_y", input_type=Float(optional=True), prefix="--alphay", doc=InputDocumentation(doc="Tamura-Nei rate alpha_Y (transition: pyrimidine) (default is 1.3)")), ToolInput(tag="in_beta", input_type=Int(optional=True), prefix="--beta", doc=InputDocumentation(doc="Tamura-Nei rate beta (transversion) (default is 1)")), ToolInput(tag="in_load_probs", input_type=File(optional=True), prefix="--load-probs", doc=InputDocumentation(doc="load pairwise posterior probabilities from a file rather than performing inference with Pair HMM")), ToolInput(tag="in_learn_gap", input_type=Boolean(optional=True), prefix="--learngap", doc=InputDocumentation(doc="estimate indel probabilities for each pair of sequences (--nolearngap to disable)")), ToolInput(tag="in_learn_emit_by_pair", input_type=Boolean(optional=True), prefix="--learnemit-bypair", doc=InputDocumentation(doc="(default for DNA and RNA) estimate emission probabilities for each pair of sequences (--nolearnemit-bypair to disable)")), ToolInput(tag="in_learn_emit_all", input_type=Boolean(optional=True), prefix="--learnemit-all", doc=InputDocumentation(doc="(default for proteins) estimate emission probabilities averaged over all sequences (--nolearnemit-all to disable)")), ToolInput(tag="in_no_learn", input_type=Boolean(optional=True), prefix="--nolearn", doc=InputDocumentation(doc="disable ALL parameter learning (use ProbCons defaults)")), ToolInput(tag="in_regularize", input_type=Boolean(optional=True), prefix="--regularize", doc=InputDocumentation(doc="(default) regularize learned emission and gap probabilities with Dirichlet prior (--noregularize to disable)")), ToolInput(tag="in_regularization_gap_scale", input_type=String(optional=True), prefix="--regularization-gapscale", doc=InputDocumentation(doc="scaling factor for transition prior")), ToolInput(tag="in_regularization_emit_scale", input_type=String(optional=True), prefix="--regularization-emitscale", doc=InputDocumentation(doc="scaling factor for emission Dirichlet prior")), ToolInput(tag="in_min_inc", input_type=Float(optional=True), prefix="--mininc", doc=InputDocumentation(doc="minimum fractional increase in log-likelihood per round of EM (default is 0.1)")), ToolInput(tag="in_max_rounds", input_type=Int(optional=True), prefix="--maxrounds", doc=InputDocumentation(doc="maximum number of iterations of EM (default is 3)")), ToolInput(tag="in_min_gap_data", input_type=Int(optional=True), prefix="--mingapdata", doc=InputDocumentation(doc="minimum amount of sequence data (# of aligned pairs of characters) for training gap probs")), ToolInput(tag="in_mine_mit_data", input_type=Int(optional=True), prefix="--minemitdata", doc=InputDocumentation(doc="minimum amount of sequence data (# of aligned pairs of characters) for training emission probs")), ToolInput(tag="in_refinement", input_type=Int(optional=True), prefix="--refinement", doc=InputDocumentation(doc="number of iterative refinement steps (default is unlimited; 0 for none)")), ToolInput(tag="in_max_sn", input_type=Boolean(optional=True), prefix="--maxsn", doc=InputDocumentation(doc="maximum sensitivity (instead of highest accuracy)")), ToolInput(tag="in_gap_factor", input_type=Float(optional=True), prefix="--gapfactor", doc=InputDocumentation(doc="gap factor; 0 for highest sensitivity (the internal effective minimum is 0.01); >1 for higher specificity (default is 1)")), ToolInput(tag="in_dynamic_weights", input_type=Boolean(optional=True), prefix="--dynamicweights", doc=InputDocumentation(doc="(default) enable dynamic edge re-weighting (--nodynamicweights to disable)")), ToolInput(tag="in_tree_weights", input_type=String(optional=True), prefix="--treeweights", doc=InputDocumentation(doc="weights for sequence pairs based on a tree")), ToolInput(tag="in_require_homology", input_type=Boolean(optional=True), prefix="--require-homology", doc=InputDocumentation(doc="require that there be some detectable homology between all input sequences")), ToolInput(tag="in_fast", input_type=Boolean(optional=True), prefix="--fast", doc=InputDocumentation(doc="fast alignment: use 5 * Erdos-Renyi threshold percent of sequence pairs for alignment and 2 * for learning")), ToolInput(tag="in_re_falign", input_type=Boolean(optional=True), prefix="--refalign", doc=InputDocumentation(doc="alignment to a reference sequence only (reference must be first sequence in file)")), ToolInput(tag="in_mst_min", input_type=Int(optional=True), prefix="--mst-min", doc=InputDocumentation(doc="build --mst-min minimum spanning trees on input sequences for pairwise comparisons (default is 3)")), ToolInput(tag="in_mst_max", input_type=Int(optional=True), prefix="--mst-max", doc=InputDocumentation(doc="build --mst-max maximum spanning trees on input sequences for pairwise comparisons (default is 0)")), ToolInput(tag="in_mst_palm", input_type=Int(optional=True), prefix="--mst-palm", doc=InputDocumentation(doc="build --mst-palm minimum spanning palm trees on input sequences for pairwise comparisons (default is 0)")), ToolInput(tag="in_degree", input_type=Int(optional=True), prefix="--degree", doc=InputDocumentation(doc="use --degree number of pairwise comparisons between closest sequences (default is 0)")), ToolInput(tag="in_km_er", input_type=Int(optional=True), prefix="--kmer", doc=InputDocumentation(doc="length of k-mers to use when determining sequence similarity")), ToolInput(tag="in_alignment_fraction", input_type=Int(optional=True), prefix="--alignment-fraction", doc=InputDocumentation(doc="randomized fraction of all (n choose 2) pairs of sequences to consider during alignment inference (default is 1)")), ToolInput(tag="in_alignment_number", input_type=Int(optional=True), prefix="--alignment-number", doc=InputDocumentation(doc="total number of (randomized) pairs of sequences to consider during alignment inference")), ToolInput(tag="in_mercator", input_type=String(optional=True), prefix="--mercator", doc=InputDocumentation(doc="input Mercator constraints")), ToolInput(tag="in_max_ram", input_type=Int(optional=True), prefix="--maxram", doc=InputDocumentation(doc="maximum RAM to use (in megabytes) (default is 12809)")), ToolInput(tag="in_bandwidth", input_type=Int(optional=True), prefix="--bandwidth", doc=InputDocumentation(doc="banding (default is no banding)")), ToolInput(tag="in_min_prob", input_type=Float(optional=True), prefix="--minprob", doc=InputDocumentation(doc="minimum posterior probability to store (default is 0.01)"))], outputs=[], container="quay.io/biocontainers/fsa:1.15.9--h8b12597_1", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Fsa_V0_1_0().translate("wdl")

