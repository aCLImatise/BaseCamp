from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Int, Boolean

Whatshap_Polyphase_V0_1_0 = CommandToolBuilder(tool="whatshap_polyphase", base_command=["whatshap", "polyphase"], inputs=[ToolInput(tag="in_ploidy", input_type=String(optional=True), prefix="--ploidy", doc=InputDocumentation(doc="The ploidy of the sample(s). Argument is required.")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="Output VCF file. Add .gz to the file name to get\ncompressed output. If omitted, use standard output.")), ToolInput(tag="in_reference", input_type=File(optional=True), prefix="--reference", doc=InputDocumentation(doc="Reference file. Provide this to detect alleles through\nre-alignment. If no index (.fai) exists, it will be\ncreated")), ToolInput(tag="in_tag", input_type=String(optional=True), prefix="--tag", doc=InputDocumentation(doc="Store phasing information with PS tag (standardized)\nor HP tag (used by GATK ReadBackedPhasing) (default:\nPS)")), ToolInput(tag="in_output_read_list", input_type=File(optional=True), prefix="--output-read-list", doc=InputDocumentation(doc="Write reads that have been used for phasing to FILE.")), ToolInput(tag="in_mapping_quality", input_type=Int(optional=True), prefix="--mapping-quality", doc=InputDocumentation(doc="Minimum mapping quality (default: 20)")), ToolInput(tag="in_indels", input_type=Boolean(optional=True), prefix="--indels", doc=InputDocumentation(doc="Also phase indels (default: do not phase indels)")), ToolInput(tag="in_ignore_read_groups", input_type=Boolean(optional=True), prefix="--ignore-read-groups", doc=InputDocumentation(doc="Ignore read groups in BAM/CRAM header and assume all\nreads come from the same sample.")), ToolInput(tag="in_sample", input_type=String(optional=True), prefix="--sample", doc=InputDocumentation(doc="Name of a sample to phase. If not given, all samples\nin the input VCF are phased. Can be used multiple\ntimes.")), ToolInput(tag="in_chromosome", input_type=String(optional=True), prefix="--chromosome", doc=InputDocumentation(doc="Name of chromosome to phase. If not given, all\nchromosomes in the input VCF are phased. Can be used\nmultiple times.")), ToolInput(tag="in_verify_genotypes", input_type=Boolean(optional=True), prefix="--verify-genotypes", doc=InputDocumentation(doc="Verify input genotypes by re-typing them using the\ngiven reads.")), ToolInput(tag="in_min_overlap", input_type=Int(optional=True), prefix="--min-overlap", doc=InputDocumentation(doc="Minimum required read overlap for internal read\nclustering stage (default: 2).")), ToolInput(tag="in_ce_refinements", input_type=Int(optional=True), prefix="--ce-refinements", doc=InputDocumentation(doc="Maximum number of refinement steps for internal read\nclustering stage (default: 1).")), ToolInput(tag="in_block_cut_sensitivity", input_type=Int(optional=True), prefix="--block-cut-sensitivity", doc=InputDocumentation(doc="Strategy to determine block borders. 0 yields the\nlongest blocks with more switch errors, 5 has the\nshortest blocks with lowest switch error rate\n(default: 4).\n")), ToolInput(tag="in_vcf", input_type=String(), position=0, doc=InputDocumentation(doc="VCF file with variants to be phased (can be gzip-\ncompressed)")), ToolInput(tag="in_phase_input", input_type=String(), position=1, doc=InputDocumentation(doc="BAM or CRAM with sequencing reads."))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="Output VCF file. Add .gz to the file name to get\ncompressed output. If omitted, use standard output."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Whatshap_Polyphase_V0_1_0().translate("wdl", allow_empty_container=True)

