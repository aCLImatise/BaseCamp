!Command
command:
- cut.pl
positional:
- !Positional
  optional: false
  position: 0
  name: input.
  description: 'OPTIONS are:'
named:
- !Flag
  optional: true
  synonyms:
  - -q
  description: ': Quiet mode: turn verbosity off (default verbose)'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -h
  description: ': Set the number of row headers to NUM (default 0).'
  args: !SimpleFlagArg
    name: NUM
- !Flag
  optional: true
  synonyms:
  - -d
  description: ': Change the input and output delimiter to DELIM (default <tab>).'
  args: !SimpleFlagArg
    name: DELIM
- !Flag
  optional: true
  synonyms:
  - -di
  description: ': Change the input delimiter to DELIM (default <tab>).'
  args: !SimpleFlagArg
    name: DELIM
- !Flag
  optional: true
  synonyms:
  - -do
  description: ': Change the output delimiter to DELIM (default <tab>).'
  args: !SimpleFlagArg
    name: DELIM
- !Flag
  optional: true
  synonyms:
  - -s
  description: ':        Suppress blanks'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -i
  description: ':        Invert. Use the complement of the fields specified in -f.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -t
  description: ":        Tight.  Tell the script to expect different number of columns\
    \ in\neach row so that it needs to recompute the column boundaries for\neach row.\
    \  Note this option slows the script down somewhat."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -f
  description: ": specify column ranges to include.  RANGES are comma-\nseperated\
    \ lists of single columns or a range of columns\nfor example:\n5-6,2,1-3\nwould\
    \ select columns 1 through 6 except column 4.  Note\nthat 2 is redundantly specified\
    \ by no error results."
  args: !SimpleFlagArg
    name: RANGES
- !Flag
  optional: true
  synonyms:
  - -n
  description: ":  specify columns by names (instead of by numbers with -f). Assumes\n\
    the first line is a header, and translates column names in <str>\ninto their respective\
    \ column numbers in the header. Supports\nmultiple ranges. Column names are assumed\
    \ to be unique and not to\ncontain any commas."
  args: !SimpleFlagArg
    name: str
- !Flag
  optional: true
  synonyms:
  - -file
  description: ": get column names (as in -n) from specified file. each column name\n\
    should appear on a separate line."
  args: !SimpleFlagArg
    name: str
- !Flag
  optional: true
  synonyms:
  - '-0'
  description: ':        zero-based column numbers.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -e
  description: ':        preserve empty values.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -sk
  description: ':       number of header columns (default 0)'
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "\nsyntax: EXE_BASE_DIR/lib/cut.pl [OPTIONS] TAB_FILE\n\nTAB_FILE is any\
  \ tab-delim_inited file.  Can also be passed into standard\n   input.\n\nOPTIONS\
  \ are:\n\n-q: Quiet mode: turn verbosity off (default verbose)\n-h NUM: Set the\
  \ number of row headers to NUM (default 0).\n-d DELIM: Change the input and output\
  \ delimiter to DELIM (default <tab>).\n-di DELIM: Change the input delimiter to\
  \ DELIM (default <tab>).\n-do DELIM: Change the output delimiter to DELIM (default\
  \ <tab>).\n-s:        Suppress blanks\n-i:        Invert. Use the complement of\
  \ the fields specified in -f.\n-t:        Tight.  Tell the script to expect different\
  \ number of columns in\n           each row so that it needs to recompute the column\
  \ boundaries for\n           each row.  Note this option slows the script down somewhat.\n\
  -f RANGES: specify column ranges to include.  RANGES are comma-\n           seperated\
  \ lists of single columns or a range of columns\n           for example:\n\n   \
  \                5-6,2,1-3\n\n           would select columns 1 through 6 except\
  \ column 4.  Note\n           that 2 is redundantly specified by no error results.\n\
  -n <str>:  specify columns by names (instead of by numbers with -f). Assumes\n \
  \          the first line is a header, and translates column names in <str>\n  \
  \         into their respective column numbers in the header. Supports\n       \
  \    multiple ranges. Column names are assumed to be unique and not to\n\t   contain\
  \ any commas.\n-file <str>: get column names (as in -n) from specified file. each\
  \ column name\n           should appear on a separate line.\n-0:        zero-based\
  \ column numbers.\n-e:        preserve empty values.\n-sk:       number of header\
  \ columns (default 0)\n\n"
generated_using:
- --help
docker_image:
