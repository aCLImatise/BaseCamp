from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, Boolean, String

Bind_Pl_V0_1_0 = CommandToolBuilder(tool="bind.pl", base_command=["bind.pl"], inputs=[ToolInput(tag="in_def", input_type=File(optional=True), prefix="-def", doc=InputDocumentation(doc=": Unbound variables in the template will be filled in by the values in\nthe default file DEFAULT_FILE.")), ToolInput(tag="in_depth", input_type=Int(optional=True), prefix="-depth", doc=InputDocumentation(doc=": Set the maximum recursion depth to DEPTH (default is infinite).  Setting to -1\ntells the script to perform infinite-depth recursion.\n** -detect not implemented yet **")), ToolInput(tag="in_detect", input_type=Boolean(optional=True), prefix="-detect", doc=InputDocumentation(doc=": Tell the script to 'detect' variables in the template file.")), ToolInput(tag="in_exe", input_type=File(optional=True), prefix="-exe", doc=InputDocumentation(doc=": Execute the command COMMAND on the resulting bound file.  When this\noption is used a temporary file is created and the file is passed\ninto the COMMAND as one of its arguments.  The default prints the\nresulting bound file to standard output.  Multiple -exe options can\nbe supplied.  The commands are executed in the order given.")), ToolInput(tag="in_fill", input_type=String(optional=True), prefix="-fill", doc=InputDocumentation(doc=": If any variables are unbound in the final document then set them all to FILLER.")), ToolInput(tag="in_no_def", input_type=Boolean(optional=True), prefix="-nodef", doc=InputDocumentation(doc=": Tell the script to ignore variable assignments in any default file.\nUse this option when a default file for the template exists and you do not wish to\nfill in the default values.")), ToolInput(tag="in_no_env", input_type=Boolean(optional=True), prefix="-noenv", doc=InputDocumentation(doc=": Ignore environment variables (default uses them).")), ToolInput(tag="in_no_exe", input_type=Boolean(optional=True), prefix="-noexe", doc=InputDocumentation(doc=": Removes any previous -exe and -pipe option(s).")), ToolInput(tag="in_nr", input_type=Boolean(optional=True), prefix="-nr", doc=InputDocumentation(doc=": Non-recursive (default is recursive).  Do not expand values of attributes that are also\nattribute names.")), ToolInput(tag="in_pipe", input_type=File(optional=True), prefix="-pipe", doc=InputDocumentation(doc=": Same as the -exe option only the resulting file with bound variables is\npassed to the commands standard input.")), ToolInput(tag="in_print", input_type=Boolean(optional=True), prefix="-print", doc=InputDocumentation(doc=": Print the resulting template to standard output even if -exe or -pipe was\nsupplied.")), ToolInput(tag="in_quiet_mode_suppress", input_type=Boolean(optional=True), prefix="-q", doc=InputDocumentation(doc=": Quiet mode (suppress warnings and information).")), ToolInput(tag="in_use_casesensitive_matching", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc=": Use case-sensitive matching on variable names (default is case-insensitive).")), ToolInput(tag="in_recursively_apply_default", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc=": Recursively apply bindings (default).  I.e. if variable names are the result of one\napplication of the values then it will be replaced by the value assigned to a variable\nof that name in the next round of substitution.  For example if the variable $($(FOO))\nexists in the template file and FOO=BAR and BAR=10 then the result of recursive binding\nwill replace $($(FOO)) with 10 while non-recursive would yield $(BAR).")), ToolInput(tag="in_xml", input_type=Boolean(optional=True), prefix="-xml", doc=InputDocumentation(doc=": Tell the script the document is XML so can print more pretty output."))], outputs=[ToolOutput(tag="out_exe", output_type=File(optional=True), selector=InputSelector(input_to_select="in_exe", type_hint=File()), doc=OutputDocumentation(doc=": Execute the command COMMAND on the resulting bound file.  When this\noption is used a temporary file is created and the file is passed\ninto the COMMAND as one of its arguments.  The default prints the\nresulting bound file to standard output.  Multiple -exe options can\nbe supplied.  The commands are executed in the order given."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bind_Pl_V0_1_0().translate("wdl", allow_empty_container=True)

