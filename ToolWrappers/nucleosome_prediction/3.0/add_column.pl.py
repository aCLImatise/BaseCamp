from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, String, File

Add_Column_Pl_V0_1_0 = CommandToolBuilder(tool="add_column.pl", base_command=["add_column.pl"], inputs=[ToolInput(tag="in_add_column_add", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc=":                 add the column as the first in the file (default: add at the end)")), ToolInput(tag="in_add_column_num", input_type=Int(optional=True), prefix="-c", doc=InputDocumentation(doc=":           add the column before column number <num>")), ToolInput(tag="in_add_column_counter", input_type=Int(optional=True), prefix="-n", doc=InputDocumentation(doc="add a column counter, starting at num.")), ToolInput(tag="in_add_column_specified_string", input_type=String(optional=True), prefix="-s", doc=InputDocumentation(doc="add a column with the specified string")), ToolInput(tag="in_d", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc="<c1,c2>          add a column which is the value of column1 / column2")), ToolInput(tag="in_u", input_type=Boolean(optional=True), prefix="-u", doc=InputDocumentation(doc="<c1,c2>          add a column which is the value of column1 - column2")), ToolInput(tag="in_m", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="<c1,c2,..,ck>    add a column which is the value of column1 * column2 *..* columnk")), ToolInput(tag="in_a", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="<c1,c2,..,ck>    add a column which is the value of column1 + column2 +..+ columnk")), ToolInput(tag="in_min", input_type=Boolean(optional=True), prefix="-min", doc=InputDocumentation(doc="<c1,c2,..,ck>  add a column which is the value of min(column1,column2,..,columnk)")), ToolInput(tag="in_max", input_type=Boolean(optional=True), prefix="-max", doc=InputDocumentation(doc="<c1,c2,..,ck>  add a column which is the value of max(column1,column2,..,columnk)")), ToolInput(tag="in_count", input_type=Boolean(optional=True), prefix="-count", doc=InputDocumentation(doc="<c1,c2,..,ck>add a column which is the count of non empty entries over column1,column2,..,columnk.")), ToolInput(tag="in_ave", input_type=Boolean(optional=True), prefix="-ave", doc=InputDocumentation(doc="<c1,c2,..,ck>  add a column which is the value of average(column1,column2,..,columnk) !!")), ToolInput(tag="in_quant", input_type=Boolean(optional=True), prefix="-quant", doc=InputDocumentation(doc="<low,high>   the quantile range of values on which to perform the operation (default: 0,1)\n!! currently works only with -ave !!\ne.g., to compute a trimmed mean in quantiles range 0.1 to 0.8 use: -ave c1,..,ck -quant 0.1,0.8")), ToolInput(tag="in_add_column_specified_file", input_type=File(optional=True), prefix="-f", doc=InputDocumentation(doc=":          add the column from the specified file")), ToolInput(tag="in_sn", input_type=Int(optional=True), prefix="-sn", doc=InputDocumentation(doc=":           The significant numbers to print (default: 2)."))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Add_Column_Pl_V0_1_0().translate("wdl", allow_empty_container=True)

