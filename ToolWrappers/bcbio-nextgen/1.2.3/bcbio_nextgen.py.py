from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, String, Boolean, Directory

Bcbio_Nextgen_Py_V0_1_0 = CommandToolBuilder(tool="bcbio_nextgen.py", base_command=["bcbio_nextgen.py"], inputs=[ToolInput(tag="in_num_cores", input_type=Int(optional=True), prefix="--numcores", doc=InputDocumentation(doc="Total cores to use for processing")), ToolInput(tag="in_parallel_type", input_type=String(optional=True), prefix="--paralleltype", doc=InputDocumentation(doc="Approach to parallelization")), ToolInput(tag="in_scheduler", input_type=String(optional=True), prefix="--scheduler", doc=InputDocumentation(doc="Scheduler to use for ipython parallel")), ToolInput(tag="in_local_controller", input_type=Boolean(optional=True), prefix="--local_controller", doc=InputDocumentation(doc="run controller locally")), ToolInput(tag="in_queue", input_type=String(optional=True), prefix="--queue", doc=InputDocumentation(doc="Scheduler queue to run jobs on, for ipython parallel")), ToolInput(tag="in_resources", input_type=String(optional=True), prefix="--resources", doc=InputDocumentation(doc="Cluster specific resources specifications. Can be\nspecified multiple times. Supports SGE, Torque, LSF\nand SLURM parameters.")), ToolInput(tag="in_timeout", input_type=Int(optional=True), prefix="--timeout", doc=InputDocumentation(doc="Number of minutes before cluster startup times out.\nDefaults to 15")), ToolInput(tag="in_retries", input_type=Int(optional=True), prefix="--retries", doc=InputDocumentation(doc="Number of retries of failed tasks during distributed\nprocessing. Default 0 (no retries)")), ToolInput(tag="in_tag", input_type=String(optional=True), prefix="--tag", doc=InputDocumentation(doc="Tag name to label jobs on the cluster")), ToolInput(tag="in_workflow", input_type=String(optional=True), prefix="--workflow", doc=InputDocumentation(doc="Run a workflow with the given commandline arguments")), ToolInput(tag="in_workdir", input_type=Directory(optional=True), prefix="--workdir", doc=InputDocumentation(doc="Directory to process in. Defaults to current working")), ToolInput(tag="in_force_single", input_type=Boolean(optional=True), prefix="--force-single", doc=InputDocumentation(doc="Treat all files as single reads")), ToolInput(tag="in_separators", input_type=String(optional=True), prefix="--separators", doc=InputDocumentation(doc="comma separated list of separators that indicates\npaired files.\n")), ToolInput(tag="in_global_config", input_type=String(), position=0, doc=InputDocumentation(doc="Global YAML configuration file specifying details\nabout the system (optional, defaults to installed\nbcbio_system.yaml)")), ToolInput(tag="in_fc_dir", input_type=String(), position=1, doc=InputDocumentation(doc="A directory of Illumina output or fastq files to\nprocess (optional)")), ToolInput(tag="in_run_config", input_type=String(), position=2, doc=InputDocumentation(doc="YAML file with details about samples to process\n(required, unless using Galaxy LIMS as input)")), ToolInput(tag="in_directory", input_type=Directory(), position=0, doc=InputDocumentation(doc="-v, --version         Print current version"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bcbio_Nextgen_Py_V0_1_0().translate("wdl", allow_empty_container=True)

