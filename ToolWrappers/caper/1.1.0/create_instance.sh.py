from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean

Create_Instance_Sh_V0_1_0 = CommandToolBuilder(tool="create_instance.sh", base_command=["create_instance.sh"], inputs=[ToolInput(tag="in_gcp_loc_dir", input_type=Boolean(optional=True), prefix="--gcp-loc-dir", doc=InputDocumentation(doc=": gs:// bucket dir path for localization.")), ToolInput(tag="in_gcp_region", input_type=Boolean(optional=True), prefix="--gcp-region", doc=InputDocumentation(doc=": Region for Google Life Sciences API. us-central1 by default. CHECK SUPPORTED REGIONS. This is different from --zone, which is used for instance creation only. us-central1 by default.")), ToolInput(tag="in_postgresql_db_ip", input_type=Boolean(optional=True), prefix="--postgresql-db-ip", doc=InputDocumentation(doc=": localhost by default.")), ToolInput(tag="in_postgresql_db_port", input_type=Boolean(optional=True), prefix="--postgresql-db-port", doc=InputDocumentation(doc=": 5432 by default.")), ToolInput(tag="in_postgresql_db_user", input_type=Boolean(optional=True), prefix="--postgresql-db-user", doc=InputDocumentation(doc=": cromwell by default.")), ToolInput(tag="in_postgresql_db_password", input_type=Boolean(optional=True), prefix="--postgresql-db-password", doc=InputDocumentation(doc=": cromwell by default.")), ToolInput(tag="in_postgresql_db_name", input_type=Boolean(optional=True), prefix="--postgresql-db-name", doc=InputDocumentation(doc=": cromwell by default.")), ToolInput(tag="in_zone", input_type=Boolean(optional=True), prefix="--zone", doc=InputDocumentation(doc=": Zone. Check available zones: gcloud compute zones list. us-central1-a by default.")), ToolInput(tag="in_machine_type", input_type=Boolean(optional=True), prefix="--machine-type", doc=InputDocumentation(doc=": Machine type. Check available machine-types: gcloud compute machine-types list. n1-standard-4 by default.")), ToolInput(tag="in_boot_disk_size", input_type=Boolean(optional=True), prefix="--boot-disk-size", doc=InputDocumentation(doc=": Boot disk size. Use a suffix for unit. e.g. GB and MB. 100GB by default.")), ToolInput(tag="in_boot_disk_type", input_type=Boolean(optional=True), prefix="--boot-disk-type", doc=InputDocumentation(doc=": Boot disk type. pd-standard (Standard persistent disk) by default.")), ToolInput(tag="in_image", input_type=Boolean(optional=True), prefix="--image", doc=InputDocumentation(doc=": Image. Check available images: gcloud compute images list. ubuntu-1804-bionic-v20200716 by default.")), ToolInput(tag="in_image_project", input_type=Boolean(optional=True), prefix="--image-project", doc=InputDocumentation(doc=": Image project. ubuntu-os-cloud by default.")), ToolInput(tag="in_startup_script", input_type=Boolean(optional=True), prefix="--startup-script", doc=InputDocumentation(doc=": Startup script CONTENTS (NOT A FILE). These command lines should sudo-install Java, PostgreSQL, Python3 and pip3. DO NOT INSTALL CAPER HERE. some apt-get command lines by default."))], outputs=[], container="quay.io/biocontainers/caper:1.1.0--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Create_Instance_Sh_V0_1_0().translate("wdl")

