!Command
command:
- defiant
positional: []
named: []
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "\n    ____  ___________________    _   ________\n   / __ \\/ ____/ ____/\
  \  _/   |  / | / /_  __/\n  / / / / __/ / /_   / // /| | /  |/ / / /   \n / /_/\
  \ / /___/ __/ _/ // ___ |/ /|  / / /    \n/_____/_____/_/   /___/_/  |_/_/ |_/ /_/\n\
  \nDifferential methylation: Easy, Fast, Identification and ANnoTation\n\n by David\
  \ E. Condon, University of Pennsylvania, 2015-2019.\n\n\n\"--help\" isn't a recognized\
  \ option.\nHelp for DEFIANT\n\n\e[1mSynopsis\e[0m\n./defiant [OPTIONS]... [FILES]...\n\
  \nwhere [FILES] is a list of files with spaces separating groups and commas separating\
  \ replicates within groups. Options are like \"-a refFlat.gtf\" etc. (cf. Options).\n\
  \nMinimal example: ./defiant -i control1,control2 case1,case2\n\nAll files in should\
  \ be specified after \"-i\", where commas separate replicates in the same group.\n\
  \n\e[1mOptions\e[0m\n\n\e[1m-a\e[0m\tSpecify annotation file, e.g. \"-a mm10.gtf\"\
  \n\n\e[1m-b\e[0m\tOutput DMRs in bed file. This option does not take an argument.\n\
  \n\e[1m-c\e[0m\tminimum coverage, e.g. \"-c 10\".  This option accepts positive\
  \ integers and can be parallelized to test multiple options.\n\n\e[1m-CpN\e[0m\t\
  minimum CpN/CpG/CH/CHH in a DMR, e.g. \"-CpN 10\".  This option accepts positive\
  \ integers and can parallelized.  \"CpN\" is case insensitive.\n\n\e[1m-cpu\e[0m\t\
  Set number of CPU when running multiple options, e.g. \"-cpu 4\". \"CPU\" is case\
  \ insensitive and accepts integers > 0.\n\n\e[1m-d\e[0m\tMinimum differential nucleotide\
  \ count in a DMR, e.g. \"-d 3\".  This option can be parallelized.\n\n\e[1m-D\e\
  [0m\tMaximum non-default options in a parallel run, e.g. \"-D 4\"\n\n\e[1m-debug\e\
  [0m\tTurn on debugging mode.  This slows down the execution significantly, but can\
  \ help diagnose problems if they arise.  This option does not accept any arguments.\n\
  \n\e[1m-E\e[0m\tprint statistics for every CpN. This option does not take an argument.\
  \ This slows Defiant down significantly.\n\n\e[1m-f\e[0m\tmake EPS figures for each\
  \ DMR. Warning: requires R installation. This option does not take an argument,\
  \ and will slow defiant's execution.\n\n\e[1m-fdr\e[0m\tCalculate FDR-adjusted q-value\
  \ for each CpN.  'FDR' is case insensitive.  This option can take case-insensitive\
  \ arguments 'fdr' or 'bh' for Benjamini-Hothberg method, 'Bonferroni', 'Hochberg',\
  \ 'Hommel', 'Holm', or 'BY' for Benjamini & Yekutieli.  If no argument is given,\
  \ 'Holm' is assumed.  This function is a translation of R's 'p.adjust'.  I recommend\
  \ against using this option as for genome-scale CpG measurements, almost everything\
  \ will be q = 1 and no DMRs will be obtained in any case.  This option will substantially\
  \ increase RAM use and slow execution.  'Hommel' is so slow I strongly recommend\
  \ against it.\n\n\e[1m-G\e[0m\tMaximum allowed gap between CpN, e.g. \"-G 1000\"\
  \n\n\e[1m-h\e[0m\tPrint this help menu; \"-h\" is case insensitive. This option\
  \ does not take an argument, and defiant exits after this option is read.\n\n\e\
  [1m-heatmap\e[0m\tMake heatmap.  Requires R be available from command line, and\
  \ that `library(gplots)` will work.\n\n\e[1m-i\e[0m\tStart reading input files.\
  \  This is the only required argument.  All further entries to the command line\
  \ are assumed to be files.\n\n\e[1m-l\e[0m\tSet output file(s) label, e.g. \"-l\
  \ new\"\n\n\e[1m-L\e[0m\tgive labels for each set in a comma-delimited string, e.g.\
  \ \"-L case,control\"\n\n\e[1m-N\e[0m\tlist CpG Nucleotides in the DMR in output\
  \ file. This option does not take an argument.\n\n\e[1m-p\e[0m\tMaximum p-value,\
  \ which is 0<=p<=1.  This option can be parallelized to test multiple options. \
  \ Default 0.05.\n\n\e[1m-P\e[0m\tMinimum Percent methylation difference (0 <= P\
  \ <= 100). This option can be parallelized to test multiple options (default 10%).\n\
  \n\e[1m-q\e[0m\tPromoter cutoff for gene assignment of intergenic DMRs (default\
  \ 10,000 nucleotides).  This option accepts positive integers, e.g. \"-q 15000\"\
  .\n\n\e[1m-r\e[0m\tMinimum nucleotide range, which accepts a non-negative integer.\
  \  Default range is 1 nucleotide.\n\n\e[1m-R\e[0m\tinclude \"Random\" chromosomes.\
  \  This option does not accept an argument.\n\n\e[1m-s\e[0m\tMaximum allowed consecutive\
  \ similar CpN, default is 5 CpN.  This accepts non-negative integers, e.g. \"-s\
  \ 3\".\n\n\e[1m-S\e[0m\tAllow some number of consecutive skips of low coverage,\
  \ default is 0.  This accepts positive integers, e.g. \"-S 1\".\n\n\e[1m-U\e[0m\t\
  Include \"Un\" chromosomes (default is to ignore them).  This option does not accept\
  \ an argument.\n\n\e[1m-v\e[0m\tPrint a p-value & FDR-adjusted p-value for each\
  \ DMR. This option accepts the same arguments that the '-FDR' option does.\n\n\e\
  [1m-version\e[0m\tPrint Defiant's version.\n\n\e[1m-x\e[0m\tThis option accepts\
  \ a string which will become the x-axis in figures.  \"-x\" activates \"-f\" option\
  \ and requires an R installation.\n\n\e[1mParallelization\e[0m\n\nAs each experiment\
  \ is different, a different set of parameters may be appropriate for each experiment.\
  \ You may not know these parameters ahead of time. Thus, defiant has been set to\
  \ easily test multiple parameters in parallel via a shared-memory model. Parameters\
  \ underlined and bold faced in Table 1, e.g. p, can be written like a C-style for\
  \ loop and delimited with commas: ./defiant -p < min >, < max >, < step > which\
  \ would increment the p-value from min to max in steps of step.\nFor example, \n\
  \n./defiant -c 5,15,5\n\nwhich would run minimum coverage from 5 to 15 in steps\
  \ of 5.\nIf you only wish to run two parameters, you can simply write a comma in\
  \ between the two parameters you wish to vary, e.g. \n\n./defiant -p 0.01,0.05\n\
  \nwill run p = 0.01 and then p = 0.05.\n\nThe data is read off of the hard drive\
  \ and into memory, which will then be shared among all the CPU. This is done to\
  \ make 3D graphs, i.e. x vs. y with the 3rd dimension in color. However, the -D\
  \ option can be used to vary all parameters as a nested for loop. I strongly recommend\
  \ not to use the \"-f\" or \"-x\" options with multiple runs. One of defiantâ€™s advantages\
  \ is speed and low resource use, using both \"-f\" and \"-x\" options will make\
  \ the runs take much much longer and potentially create a lot of files which will\
  \ make I/O on your computer very slow. All DMR counts are then saved to a table,\
  \ which will end in something like dmr_count.tsv\n\n\n\e[1mInput Formats\e[0m\n\
  Defiant is set up to automatically identify and read the following input formats:\n\
  \n\n\e[1mInput Type 1\e[0m\n\e[1mExample\e[0m:\tchr1\t762\t763\t0.1764\t37\nColumn1:\t\
  chromosome, which is a string.\nColumn2:\tnucleotide, an unsigned integer in [0,4294967295]\n\
  Column3:\tignored.\nColumn4:\tmethylation percent, a floating point in [0,1]\nColumn5:\t\
  coverage, an unsigned integer, an unsigned integer in [0,4294967295]\n\n\e[1mInput\
  \ Type 2\e[0m\tknown for MethylKit input\n\e[1mExample\e[0m:\tchr1.762\tchr1\t762\t\
  R\t100\t17.64\t82.36\nColumn1:\tunique name, this is ignored.\nColumn2:\tchromosome,\
  \ which is a string.\nColumn3:\tnucleotide, an unsigned integer [0,4294967295]\n\
  Column4:\tsense, this is ignored.\nColumn5:\tcoverage, an unsigned integer in [0,4294967295]\n\
  Column6:\tmethylation percent, a floating point in [0,100].\nColumn7:\tcytosine\
  \ percent, a floating point in [0,100].\n\n\e[1mInput Type 3\e[0m\n\e[1mExample\e\
  [0m:\tchr1\t762\t763\t0.1764\nColumn1:\tchromosome, which is a string.\nColumn2:\t\
  nucleotide, an unsigned integer [0,4294967295]\nColumn3:\tignored.\nColumn4:\tmethylation\
  \ percent, a floating point in [0,1].\n\n\e[1mInput Type 4\e[0m\n\e[1mExample\e\
  [0m:\tchr1\t762\t6\t14\nColumn1:\tchromosome, which is a string.\nColumn2:\tnucleotide,\
  \ an unsigned integer in [0,4294967295]\nColumn3:\tmethylated C count, an unsigned\
  \ integer in [0,4294967295]\nColumn4:\tcount unmethylated, an unsigned integer [0,4294967295]\n\
  \n\e[1mInput Type 5\e[0m\tBismark bismark2bedGraph format:\n<chromosome> <position>\
  \ <strand> <count methylated> <count unmethylated> <C-context> <trinucleotide context>//Bismark\
  \ coverage2cytosine format (https://rawgit.com/FelixKrueger/Bismark/master/Docs/Bismark_User_Guide.html)\n\
  \e[1mExample\e[0m:\tchr1\t762\t763\t+\t17\t64\tCG\tCGA\nColumn1:\tchromosome, which\
  \ is a string.\nColumn2:\tnucleotide/start position, an unsigned integer [0,4294967295]\n\
  Column3:\tnucleotide/end position, ignored.\nColumn4:\tstrand\nColumn5:\tmethylated\
  \ C count, an unsigned integer in [0,4294967295]\nColumn6:\tcount unmethylated,\
  \ an unsigned integer in [0,4294967295]\nColumn7:\tC-context, e.g. CG, CH, CHH.\n\
  Column8:\tC-context, e.g. CGA, CGT, etc.\n\n\e[1mInput Type 6\e[0m\tBismark coverage2cytosine\
  \ format:\n<chromosome> <start position> <end position> <methylation percentage>\
  \ <count methylated> <count unmethylated>\n\e[1mExample\e[0m:\tchr1\t762\t763\t\
  0.223684\t17\t76\nColumn1:\tchromosome, which is a string\nColumn2:\tnucleotide/start\
  \ position, an unsigned integer in [0,4294967295]\nColumn3:\tnucleotide/end position,\
  \ an unsigned integer in [0,4294967295]\nColumn4:\tmethylation percentage in [0,1]\n\
  Column5:\tmethylated C count, an unsigned integer in [0,4294967295]\nColumn6:\t\
  count unmethylated, an unsigned integer in [0,4294967295]\n\n\e[1mInput Type 7\e\
  [0m\tHELP-Tag data.  This can have a header.\n\e[1mExample\e[0m:\t1 chr1\t762\t\
  763\t0.2656\t0.1776\nColumn1:\tignored\nColumn2:\tchromosome, a string\nColumn3:\t\
  position, an unsigned integer in [0,4294967295]\nColumn4:\tmethylation percent:\
  \ a floating point number in [0,1]\nColumn5:\tConf. ignored.\n\n\e[1mInput Type\
  \ 8\e[0m\t(EPP)Epigenome Processing Pipeline\n\e[1mExample\e[0m:\tchr1\t762\t763\t\
  '17/76'\t999\t+\nColumn1:\tchromosome, which is a string.\nColumn2:\tstart nucleotide,\
  \ an unsigned integer in [0,4294967295]\nColumn3:\tend nucleotide, an unsigned integer\
  \ in [0,4294967295]\nColumn4:\tmethylation percent as a fraction, two unsigned integers.\
  \  Coverage is given as the denominator. Everything after column 4 is ignored.\n\
  \n\e[1mInput Type 9\e[0m\tBsmooth Input\n\e[1mExample\e[0m:\tX\t762\t+\tCG\t17\t\
  76\nColumn1:\tchromosome, which is a string.\nColumn2:\tNucleotide, an unsigned\
  \ integer in [0,4294967295]\nColumn3:\tstrand sense, ignored\nColumn4:\tcontext,\
  \ ignored\nColumn5:\tmethylated C count, an unsigned integer in [0,4294967295]\n\
  Column6:\tnon-methylated C count, an unsigned integer in [0,4294967295]\n\n\e[1mInput\
  \ Type 10\e[0m\tBisSNP (found in RnBeads)\n\e[1mExample\e[0m:\tX\t762\t763\t10.96\t\
  1918\t762\t763\t180,60,0\t0\t0\nColumn1:\tchromosome, which is a string.\nColumn2:\t\
  Nucleotide start, an unsigned integer in [0,4294967295]\nColumn3:\tNucleotide end,\
  \ an unsigned integer in [0,4294967295]\nColumn4:\tmethylation value in [0:100].\n\
  Column5:\tCoverage, an unsigned integer in [0,4294967295]. Everything after this\
  \ column is ignored.\n\n\e[1mInput Type 11\e[0m\t BSSeeker https://github.com/BSSeeker/BSseeker2\n\
  \e[1mExample\e[0m:\tchr1\tC\t3001631\tCG\tCG\t1.0\t5\t5\nColumn1:\tchromosome, which\
  \ is a string.\nColumn2:\tnucleotide on Watson (+) strand (ignored)\nColumn3:\t\
  Nucleotide end, an unsigned integer in [0,4294967295]\nColumn4:\tcontext (CG/CHG/CHH)\
  \ (ignored)\nColumn5:\tdinucleotide-context (CA/CC/CG/CT) (ignored)\nColumn6:\t\
  methylation-level = #_of_C / (#_of_C + #_of_T)  (ignored)\nColumn7:\t#_of_C (methylated\
  \ C, the count of reads showing C here), an unsigned integer in [0,4294967295]\n\
  Column8:\t#_of_C + #_of_T (all Cytosines, the count of reads showing C or T here),\
  \ an unsigned integer in [0,4294967295]\n\n\e[1mOutput\e[0m\n\nThe file names are\
  \ formatted according to the options set at the command line. For example, consider\
  \ the output file:\n\ncontrol_vs_case_c10_CpN5_d1_p0.01_P10.tsv\n\nâ€¢ the start of\
  \ the filename indicates that the \"control\" group was compared against the \"\
  case\" group, as indicated by the \"-L\" option on the command line\nâ€¢ minimum coverage\
  \ of 10,\nâ€¢ minimum CpN count = 5,\nâ€¢ minimum differentially methylated CpN = 1,\n\
  â€¢ a maximum p-value of 0.01\nâ€¢ a minimum Percent difference of 10%.\nâ€¢ If the Gap,\
  \ \"-G\" option, is altered, -G<gap> will be in the output. If there are any allowed\
  \ consecutive skips, this will be\nindicated in the filename by \" S2\" if there\
  \ are 2 allowed skips, for example.\n\n\e[1mRunning Defiant\e[0m\n\nSimplest possible\
  \ case:\n1. ./defiant -i control1.txt,control2.txt case1.txt,case2.txt,case3.txt\n\
  \nLabel each sample.\n2. ./defiant -L control,case -l my_name -i control1.txt,control2.txt\
  \ case1.txt,case2.txt,case3.txt\n\n3. Annotation:\n./defiant -a refFlat.txt -L control,case\
  \ -l my Ì‡name -i control1.txt,control2.txt case1.txt,case2.txt,case3.txt\n\n4. Generate\
  \ figures with \"CpG\" key (requires an installation of the R programming language.)\n\
  ./defiant -x CpG -a refFlat.txt  -L control,case -l my Ì‡name -i control1.txt,control2.txt\
  \ case1.txt,case2.txt,case3.txt\n\n"
generated_using:
- --help
