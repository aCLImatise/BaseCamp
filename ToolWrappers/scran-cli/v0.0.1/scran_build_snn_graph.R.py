from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Int

Scran_Build_Snn_Graph_R_V0_1_0 = CommandToolBuilder(tool="scran_build_snn_graph.R", base_command=["scran-build-snn-graph.R"], inputs=[ToolInput(tag="in_input_sce_object", input_type=File(optional=True), prefix="--input-sce-object", doc=InputDocumentation(doc="Path to the input SCE object in rds format.")), ToolInput(tag="in_shared", input_type=String(optional=True), prefix="--shared", doc=InputDocumentation(doc="Logical specifying wether to compute a Shared NN Graph (if shared=TRUE) or a kNN Graph(if shared=FALSE).")), ToolInput(tag="in_k_value", input_type=Int(optional=True), prefix="--k-value", doc=InputDocumentation(doc="An integer scalar specifying the number of nearest neighbors to consider during graph construction.")), ToolInput(tag="in_d_value", input_type=Int(optional=True), prefix="--d-value", doc=InputDocumentation(doc="An integer scalar specifying the number of dimensions to use for the search.")), ToolInput(tag="in_type", input_type=String(optional=True), prefix="--type", doc=InputDocumentation(doc="A string specifying the type of weighting scheme to use for shared neighbors.")), ToolInput(tag="in_transposed", input_type=String(optional=True), prefix="--transposed", doc=InputDocumentation(doc="A logical scalar indicating whether x is transposed (i.e., rows are cells).")), ToolInput(tag="in_subset_row", input_type=Int(optional=True), prefix="--subset_row", doc=InputDocumentation(doc="Logical, integer or character vector specifying the rows for which to model the variance. Defaults to all genes in x.")), ToolInput(tag="in_assay_type", input_type=String(optional=True), prefix="--assay-type", doc=InputDocumentation(doc="A string specifying which assay values to use. Default: logcounts.")), ToolInput(tag="in_get_spikes", input_type=String(optional=True), prefix="--get-spikes", doc=InputDocumentation(doc="Logical specifying wether to perform spike-ins filtering(FALSE) or not (TRUE).")), ToolInput(tag="in_use_dim_red", input_type=String(optional=True), prefix="--use-dimred", doc=InputDocumentation(doc="A string specifying whether existing values in reducedDims(x) should be used.")), ToolInput(tag="in_output_i_graph_object", input_type=File(optional=True), prefix="--output-igraph-object", doc=InputDocumentation(doc="Path to the output igraph object in RDS format."))], outputs=[ToolOutput(tag="out_output_i_graph_object", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_i_graph_object", type_hint=File()), doc=OutputDocumentation(doc="Path to the output igraph object in RDS format."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Scran_Build_Snn_Graph_R_V0_1_0().translate("wdl", allow_empty_container=True)

