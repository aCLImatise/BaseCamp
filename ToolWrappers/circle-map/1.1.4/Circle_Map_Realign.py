from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String

Circle_Map_Realign_V0_1_0 = CommandToolBuilder(tool="Circle_Map_Realign", base_command=["Circle-Map", "Realign"], inputs=[ToolInput(tag="in_input_bam_file", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="Input: bam file containing the reads extracted by")), ToolInput(tag="in_sb_am", input_type=Boolean(optional=True), prefix="-sbam", doc=InputDocumentation(doc="Input: coordinate sorted bam file")), ToolInput(tag="in_fast_a", input_type=Boolean(optional=True), prefix="-fasta", doc=InputDocumentation(doc="Input: Reference genome fasta file")), ToolInput(tag="in_output_filename", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="Output filename")), ToolInput(tag="in_n_hits", input_type=Boolean(optional=True), prefix="--nhits", doc=InputDocumentation(doc="Number of realignment attempts. Default: 10")), ToolInput(tag="in_cut_off", input_type=Boolean(optional=True), prefix="--cut_off", doc=InputDocumentation(doc="Probability cut-off for considering a soft-clipped as\nrealigned: Default: 0.99")), ToolInput(tag="in_min_sc", input_type=Boolean(optional=True), prefix="--min_sc", doc=InputDocumentation(doc="Minimum soft-clipped length to attempt the\nrealignment. Default: 8")), ToolInput(tag="in_gap_open", input_type=Boolean(optional=True), prefix="--gap_open", doc=InputDocumentation(doc="Gap open penalty in the position specific scoring\nmatrix. Default: 5")), ToolInput(tag="in_gap_ext", input_type=Boolean(optional=True), prefix="--gap_ext", doc=InputDocumentation(doc="Gap extension penalty in the position specific scoring\nmatrix. Default: 1")), ToolInput(tag="in_mapq", input_type=Boolean(optional=True), prefix="--mapq", doc=InputDocumentation(doc="Minimum mapping quality allowed in the supplementary\nalignments. Default: 20")), ToolInput(tag="in_edit_distance_fraction", input_type=Boolean(optional=True), prefix="--edit_distance-fraction", doc=InputDocumentation(doc="Maximum edit distance fraction allowed in the first\nrealignment. Default (0.05)")), ToolInput(tag="in_split_quality", input_type=Boolean(optional=True), prefix="--split_quality", doc=InputDocumentation(doc="Minium split score to output an interval. Default\n(0.0)")), ToolInput(tag="in_remap_splits", input_type=Boolean(optional=True), prefix="--remap_splits", doc=InputDocumentation(doc="Remap probabilistacally bwa-mem split reads")), ToolInput(tag="in_split", input_type=Boolean(optional=True), prefix="--split", doc=InputDocumentation(doc="Number of required split reads to output a eccDNA.\nDefault: 0")), ToolInput(tag="in_number_of_discordant_s", input_type=Boolean(optional=True), prefix="--number_of_discordants", doc=InputDocumentation(doc="Number of required discordant reads for intervals with\nonly discordants. Default: 3")), ToolInput(tag="in_ratio", input_type=Boolean(optional=True), prefix="--ratio", doc=InputDocumentation(doc="Minimum in/out required coverage ratio. Default: 0.0")), ToolInput(tag="in_insert_mapq", input_type=Boolean(optional=True), prefix="--insert_mapq", doc=InputDocumentation(doc="Mapq cutoff for stimating the insert size\ndistribution. Default 60")), ToolInput(tag="in_std", input_type=Boolean(optional=True), prefix="--std", doc=InputDocumentation(doc="Standard deviations of the insert size to extend the\nintervals. Default 5")), ToolInput(tag="in_sample_size", input_type=Boolean(optional=True), prefix="--sample_size", doc=InputDocumentation(doc="Number of concordant reads (R2F1) to use for\nestimating the insert size distribution. Default\n100000")), ToolInput(tag="in_merge_fraction", input_type=Boolean(optional=True), prefix="--merge_fraction", doc=InputDocumentation(doc="Merge intervals reciprocally overlapping by a\nfraction. Default 0.99")), ToolInput(tag="in_interval_probability", input_type=Boolean(optional=True), prefix="--interval_probability", doc=InputDocumentation(doc="Skip edges of the graph with a probability below the\nthreshold. Default: 0.01")), ToolInput(tag="in_clustering_dist", input_type=Boolean(optional=True), prefix="--clustering_dist", doc=InputDocumentation(doc="Cluster reads that are K nucleotides appart in the\nsame node. Default: 500")), ToolInput(tag="in_only_discordant_s", input_type=Boolean(optional=True), prefix="--only_discordants", doc=InputDocumentation(doc="Use only discordant reads to build the graph")), ToolInput(tag="in_allele_frequency", input_type=Boolean(optional=True), prefix="--allele_frequency", doc=InputDocumentation(doc="Minimum allele frequency required to report the circle\ninterval. Default (0.1)")), ToolInput(tag="in_no_coverage", input_type=Boolean(optional=True), prefix="--no_coverage", doc=InputDocumentation(doc="Don't compute coverage statistics")), ToolInput(tag="in_bases", input_type=Boolean(optional=True), prefix="--bases", doc=InputDocumentation(doc="Number of bases to extend for computing the coverage\nratio. Default: 200")), ToolInput(tag="in_cmap_q", input_type=Boolean(optional=True), prefix="--cmapq", doc=InputDocumentation(doc="Minimum mapping quality treshold for coverage\ncomputation. Default: 0")), ToolInput(tag="in_extension", input_type=Boolean(optional=True), prefix="--extension", doc=InputDocumentation(doc="Number of bases inside the eccDNA breakpoint\ncoordinates to compute the ratio. Default: 100")), ToolInput(tag="in_threads", input_type=Boolean(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of threads to use.Default 1")), ToolInput(tag="in_directory", input_type=Boolean(optional=True), prefix="--directory", doc=InputDocumentation(doc="Working directory, default is the working directory")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Verbose level, 1=error,2=warning, 3=message")), ToolInput(tag="in_read_extractor", input_type=String(), position=0, doc=InputDocumentation(doc="-qbam                 Input: query name sorted bam file"))], outputs=[ToolOutput(tag="out_output_filename", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_filename", type_hint=File()), doc=OutputDocumentation(doc="Output filename"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Circle_Map_Realign_V0_1_0().translate("wdl", allow_empty_container=True)

