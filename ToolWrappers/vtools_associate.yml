!Command
command:
- vtools
- associate
positional:
- !Positional
  description: Table of variants to be tested.
  position: 0
  name: variants
  optional: false
- !Positional
  description: "A list of phenotypes that will be passed to the\nassociation statistics\
    \ calculator. Currently only a\nsingle phenotype is allowed."
  position: 1
  name: phenotypes
  optional: false
named:
- !Flag
  description: Number of processes to carry out association tests.
  synonyms:
  - -j
  - --jobs
  args: !SimpleFlagArg
    name: N
  optional: true
- !Flag
  description: "Submit vtools association job to cluster, please check\nbash script."
  synonyms:
  - -mpi
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Output error and warning (0), info (1), debug (2) and\ntrace (3) information\
    \ to standard output (default to\n1)."
  synonyms:
  - -v
  - --verbosity
  args: !ChoiceFlagArg
    choices: !!set
      '0':
      '2':
      '1':
      '3':
  optional: true
- !Flag
  description: "[COVARIATES [COVARIATES ...]]\nOptional phenotypes that will be passed\
    \ to statistical\ntests as covariates. Values of these phenotypes should\nbe integer\
    \ or float."
  synonyms:
  - --covariates
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "[VAR_INFO [VAR_INFO ...]], --var-info [VAR_INFO [VAR_INFO ...]]\n\
    Optional variant information fields (e.g. minor allele\nfrequency from 1000 genomes\
    \ project) that will be\npassed to statistical tests. The fields could be any\n\
    annotation fields of with integer or float values,\nincluding those from used\
    \ annotation databases (use\n\"vtools show fields\" to see a list of usable fields)."
  synonyms:
  - --var_info
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "[GENO_INFO [GENO_INFO ...]], --geno-info [GENO_INFO [GENO_INFO ...]]\n\
    Optional genotype fields (e.g. quality score of\ngenotype calls, cf. \"vtools\
    \ show genotypes\") that will\nbe passed to statistical tests. Note that the fields\n\
    should exist for all samples that are tested."
  synonyms:
  - --geno_info
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Field name of genotype, default to 'GT'. If another\nfield name is\
    \ specified, for example if imputation\nscores are available as 'DS' (dosage),\
    \ then the given\nfield 'DS' will be used as genotype data for\nassociation analysis."
  synonyms:
  - --geno_name
  - --geno-name
  args: !SimpleFlagArg
    name: GENO_NAME
  optional: true
- !Flag
  description: "Method of one or more association tests. Parameters\nfor each method\
    \ should be specified together as a\nquoted long argument (e.g. --methods \"m\
    \ --alternative\n2\" \"m1 --permute 1000\"), although the common method\nparameters\
    \ can be specified separately, as long as\nthey do not conflict with command arguments.\
    \ (e.g.\n--methods m1 m2 -p 1000 is equivalent to --methods \"m1\n-p 1000\" \"\
    m2 -p 1000\".). You can use command 'vtools\nshow tests' for a list of association\
    \ tests, and\n'vtools show test TST' for details about a test.\nCustomized association\
    \ tests can be specified as\nmod_name.test_name where mod_name should be a Python\n\
    module (system wide or in the current directory), and\ntest_name should be a subclass\
    \ of NullTest."
  synonyms:
  - -m
  - --methods
  args: !RepeatFlagArg
    name: METHODS
  optional: true
- !Flag
  description: "[GROUP_BY [GROUP_BY ...]], --group_by [GROUP_BY [GROUP_BY ...]], --group-by\
    \ [GROUP_BY [GROUP_BY ...]]\nGroup variants by fields. If specified, variants\
    \ will\nbe separated into groups and are tested one by one."
  synonyms:
  - -g
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "[COND [COND ...]], --samples [COND [COND ...]]\nLimiting variants\
    \ from samples that match conditions\nthat use columns shown in command 'vtools\
    \ show sample'\n(e.g. 'aff=1', 'filename like \"MG%\"'). Each line of\nthe sample\
    \ table (vtools show samples) is considered\nas samples. If genotype of a physical\
    \ sample is\nscattered into multiple samples (e.g. imported\nchromosome by chromosome),\
    \ they should be merged using\ncommand vtools admin."
  synonyms:
  - -s
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "[COND [COND ...]]\nLimiting genotypes to those matching conditions\
    \ that\nuse columns shown in command 'vtools show genotypes'\n(e.g. 'GQ>15').\
    \ Genotypes failing such conditions will\nbe regarded as missing genotypes."
  synonyms:
  - --genotypes
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "[EXPR [EXPR ...]], --discard-samples [EXPR [EXPR ...]]\nDiscard samples\
    \ that match specified conditions within\neach test group (defined by parameter\
    \ --group_by).\nCurrently only expressions in the form of \"%(NA)>p\" is\nprovidedted\
    \ to remove samples that have more 100*p\npercent of missing values."
  synonyms:
  - --discard_samples
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "[EXPR [EXPR ...]], --discard-variants [EXPR [EXPR ...]]\nDiscard variant\
    \ sites based on specified conditions\nwithin each test group. Currently only\
    \ expressions in\nthe form of '%(NA)>p' is provided to remove variant\nsites that\
    \ have more than 100*p percent of missing\ngenotypes. Note that this filter will\
    \ be applied after\n\"--discard_samples\" is applied, if the latter also is\n\
    specified."
  synonyms:
  - --discard_variants
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Name of a database to which results from association\ntests will be\
    \ written. Groups with existing results in\nthe database will be ignored unless\
    \ parameter --force\nis used."
  synonyms:
  - --to_db
  - --to-db
  args: !SimpleFlagArg
    name: annoDB
  optional: true
- !Flag
  description: "Delimiter use to separate columns of output. The\ndefault output uses\
    \ multiple spaces to align columns\nof output. Use '-d,' for csv output, or -d'\\\
    t' for\ntab-delimited output."
  synonyms:
  - -d
  - --delimiter
  args: !SimpleFlagArg
    name: DELIMITER
  optional: true
- !Flag
  description: "Analyze all groups including those that have recorded\nresults in\
    \ the result database.\n"
  synonyms:
  - -f
  - --force
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: vtools associate [-h] [--covariates [COVARIATES [COVARIATES ...]]]\n\
  \                        [--var_info [VAR_INFO [VAR_INFO ...]]]\n              \
  \          [--geno_info [GENO_INFO [GENO_INFO ...]]]\n                        [--geno_name\
  \ GENO_NAME] [-m METHODS [METHODS ...]]\n                        [-g [GROUP_BY [GROUP_BY\
  \ ...]]] [-s [COND [COND ...]]]\n                        [--genotypes [COND [COND\
  \ ...]]]\n                        [--discard_samples [EXPR [EXPR ...]]]\n      \
  \                  [--discard_variants [EXPR [EXPR ...]]]\n                    \
  \    [--to_db annoDB] [-d DELIMITER] [-f] [-j N] [-mpi]\n                      \
  \  [-v {0,1,2,3}]\n                        variants phenotypes\n\nCall one or more\
  \ statistical association tests and return test results as\nfields to variants tested.\n\
  \noptional arguments:\n  -h, --help            show this help message and exit\n\
  \  -j N, --jobs N        Number of processes to carry out association tests.\n \
  \ -mpi                  Submit vtools association job to cluster, please check\n\
  \                        bash script.\n  -v {0,1,2,3}, --verbosity {0,1,2,3}\n \
  \                       Output error and warning (0), info (1), debug (2) and\n\
  \                        trace (3) information to standard output (default to\n\
  \                        1).\n\nGenotype, phenotype, and covariates:\n  variants\
  \              Table of variants to be tested.\n  phenotypes            A list of\
  \ phenotypes that will be passed to the\n                        association statistics\
  \ calculator. Currently only a\n                        single phenotype is allowed.\n\
  \  --covariates [COVARIATES [COVARIATES ...]]\n                        Optional\
  \ phenotypes that will be passed to statistical\n                        tests as\
  \ covariates. Values of these phenotypes should\n                        be integer\
  \ or float.\n  --var_info [VAR_INFO [VAR_INFO ...]], --var-info [VAR_INFO [VAR_INFO\
  \ ...]]\n                        Optional variant information fields (e.g. minor\
  \ allele\n                        frequency from 1000 genomes project) that will\
  \ be\n                        passed to statistical tests. The fields could be any\n\
  \                        annotation fields of with integer or float values,\n  \
  \                      including those from used annotation databases (use\n   \
  \                     \"vtools show fields\" to see a list of usable fields).\n\
  \  --geno_info [GENO_INFO [GENO_INFO ...]], --geno-info [GENO_INFO [GENO_INFO ...]]\n\
  \                        Optional genotype fields (e.g. quality score of\n     \
  \                   genotype calls, cf. \"vtools show genotypes\") that will\n \
  \                       be passed to statistical tests. Note that the fields\n \
  \                       should exist for all samples that are tested.\n  --geno_name\
  \ GENO_NAME, --geno-name GENO_NAME\n                        Field name of genotype,\
  \ default to 'GT'. If another\n                        field name is specified,\
  \ for example if imputation\n                        scores are available as 'DS'\
  \ (dosage), then the given\n                        field 'DS' will be used as genotype\
  \ data for\n                        association analysis.\n\nAssociation tests:\n\
  \  -m METHODS [METHODS ...], --methods METHODS [METHODS ...]\n                 \
  \       Method of one or more association tests. Parameters\n                  \
  \      for each method should be specified together as a\n                     \
  \   quoted long argument (e.g. --methods \"m --alternative\n                   \
  \     2\" \"m1 --permute 1000\"), although the common method\n                 \
  \       parameters can be specified separately, as long as\n                   \
  \     they do not conflict with command arguments. (e.g.\n                     \
  \   --methods m1 m2 -p 1000 is equivalent to --methods \"m1\n                  \
  \      -p 1000\" \"m2 -p 1000\".). You can use command 'vtools\n               \
  \         show tests' for a list of association tests, and\n                   \
  \     'vtools show test TST' for details about a test.\n                       \
  \ Customized association tests can be specified as\n                        mod_name.test_name\
  \ where mod_name should be a Python\n                        module (system wide\
  \ or in the current directory), and\n                        test_name should be\
  \ a subclass of NullTest.\n  -g [GROUP_BY [GROUP_BY ...]], --group_by [GROUP_BY\
  \ [GROUP_BY ...]], --group-by [GROUP_BY [GROUP_BY ...]]\n                      \
  \  Group variants by fields. If specified, variants will\n                     \
  \   be separated into groups and are tested one by one.\n\nSelect and filter samples\
  \ and genotypes:\n  -s [COND [COND ...]], --samples [COND [COND ...]]\n        \
  \                Limiting variants from samples that match conditions\n        \
  \                that use columns shown in command 'vtools show sample'\n      \
  \                  (e.g. 'aff=1', 'filename like \"MG%\"'). Each line of\n     \
  \                   the sample table (vtools show samples) is considered\n     \
  \                   as samples. If genotype of a physical sample is\n          \
  \              scattered into multiple samples (e.g. imported\n                \
  \        chromosome by chromosome), they should be merged using\n              \
  \          command vtools admin.\n  --genotypes [COND [COND ...]]\n            \
  \            Limiting genotypes to those matching conditions that\n            \
  \            use columns shown in command 'vtools show genotypes'\n            \
  \            (e.g. 'GQ>15'). Genotypes failing such conditions will\n          \
  \              be regarded as missing genotypes.\n  --discard_samples [EXPR [EXPR\
  \ ...]], --discard-samples [EXPR [EXPR ...]]\n                        Discard samples\
  \ that match specified conditions within\n                        each test group\
  \ (defined by parameter --group_by).\n                        Currently only expressions\
  \ in the form of \"%(NA)>p\" is\n                        providedted to remove samples\
  \ that have more 100*p\n                        percent of missing values.\n  --discard_variants\
  \ [EXPR [EXPR ...]], --discard-variants [EXPR [EXPR ...]]\n                    \
  \    Discard variant sites based on specified conditions\n                     \
  \   within each test group. Currently only expressions in\n                    \
  \    the form of '%(NA)>p' is provided to remove variant\n                     \
  \   sites that have more than 100*p percent of missing\n                       \
  \ genotypes. Note that this filter will be applied after\n                     \
  \   \"--discard_samples\" is applied, if the latter also is\n                  \
  \      specified.\n\nOutput of test statistics:\n  --to_db annoDB, --to-db annoDB\n\
  \                        Name of a database to which results from association\n\
  \                        tests will be written. Groups with existing results in\n\
  \                        the database will be ignored unless parameter --force\n\
  \                        is used.\n  -d DELIMITER, --delimiter DELIMITER\n     \
  \                   Delimiter use to separate columns of output. The\n         \
  \               default output uses multiple spaces to align columns\n         \
  \               of output. Use '-d,' for csv output, or -d'\\t' for\n          \
  \              tab-delimited output.\n  -f, --force           Analyze all groups\
  \ including those that have recorded\n                        results in the result\
  \ database.\n"
generated_using:
- --help
