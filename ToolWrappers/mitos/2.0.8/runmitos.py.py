from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Directory, Boolean, Int

Runmitos_Py_V0_1_0 = CommandToolBuilder(tool="runmitos.py", base_command=["runmitos.py"], inputs=[ToolInput(tag="in_input", input_type=File(optional=True), prefix="--input", doc=InputDocumentation(doc="the input file")), ToolInput(tag="in_fast_a", input_type=String(optional=True), prefix="--fasta", doc=InputDocumentation(doc="input fasta sequence")), ToolInput(tag="in_code", input_type=String(optional=True), prefix="--code", doc=InputDocumentation(doc="the genetic code")), ToolInput(tag="in_outdir", input_type=Directory(optional=True), prefix="--outdir", doc=InputDocumentation(doc="the directory where the output is written")), ToolInput(tag="in_linear", input_type=Boolean(optional=True), prefix="--linear", doc=InputDocumentation(doc="treat sequence as linear")), ToolInput(tag="in_refseq_ver", input_type=Directory(optional=True), prefix="--refseqver", doc=InputDocumentation(doc="directory containing the reference data (relative to\n--refdir)")), ToolInput(tag="in_ref_dir", input_type=Directory(optional=True), prefix="--refdir", doc=InputDocumentation(doc="base directory containing the reference data")), ToolInput(tag="in_prot", input_type=Int(optional=True), prefix="--prot", doc=InputDocumentation(doc="position of protein prediction in 1st round (0: skip)")), ToolInput(tag="in_trna", input_type=Int(optional=True), prefix="--trna", doc=InputDocumentation(doc="position of tRNA prediction in 1st round (0: skip)")), ToolInput(tag="in_rrna", input_type=Int(optional=True), prefix="--rrna", doc=InputDocumentation(doc="position of rRNA prediction in 1st round (0: skip)")), ToolInput(tag="in_intron", input_type=Int(optional=True), prefix="--intron", doc=InputDocumentation(doc="position of intron prediction in 1st round (0: skip)")), ToolInput(tag="in_or_il", input_type=Int(optional=True), prefix="--oril", doc=InputDocumentation(doc="position of OL prediction in 1st round (0: skip)")), ToolInput(tag="in_or_ih", input_type=Int(optional=True), prefix="--orih", doc=InputDocumentation(doc="position of OH prediction in 1st round (0: skip)")), ToolInput(tag="in_fi_nov_l", input_type=String(optional=True), prefix="--finovl", doc=InputDocumentation(doc="final overlap <= NRNT nucleotides")), ToolInput(tag="in_circ_rot", input_type=Int(optional=True), prefix="--circrot", doc=InputDocumentation(doc="cir circular: rotate mitogenome by DEG and DEG+180")), ToolInput(tag="in_best", input_type=Boolean(optional=True), prefix="--best", doc=InputDocumentation(doc="annotate only the best copy of each feature")), ToolInput(tag="in_frag_fac", input_type=Int(optional=True), prefix="--fragfac", doc=InputDocumentation(doc="allow fragments to differ in quality/evalue by at most\na factor FACTOR. Ignored if <= 0.")), ToolInput(tag="in_frag_ovl", input_type=String(optional=True), prefix="--fragovl", doc=InputDocumentation(doc="allow query range overlaps up for FRACTION for")), ToolInput(tag="in_evalue", input_type=Int(optional=True), prefix="--evalue", doc=InputDocumentation(doc="discard BLAST hits with -1*log(e-value)<EVL (EVL < 1\nhas no effect)")), ToolInput(tag="in_cut_off", input_type=Int(optional=True), prefix="--cutoff", doc=InputDocumentation(doc="discard positions with quality <.5 of max")), ToolInput(tag="in_clip_fac", input_type=String(optional=True), prefix="--clipfac", doc=InputDocumentation(doc="overlapping features of the same name differing by at\nmost a factor of FACTOR are clipped")), ToolInput(tag="in_ncbi_code", input_type=Boolean(optional=True), prefix="--ncbicode", doc=InputDocumentation(doc="use start/stop codons as in NCBI (default: learned\nstart/stop codons)")), ToolInput(tag="in_al_arab", input_type=Boolean(optional=True), prefix="--alarab", doc=InputDocumentation(doc="Use the hmmer based method of Al Arab et al. 2016.\nThis will consider the evalue, ncbicode, fragovl,\nfragfac")), ToolInput(tag="in_old_stst", input_type=Boolean(optional=True), prefix="--oldstst", doc=InputDocumentation(doc="Use the old start/stop prediction method of MITOS1")), ToolInput(tag="in_loc_and_glo_c", input_type=Boolean(optional=True), prefix="--locandgloc", doc=InputDocumentation(doc="run mitfi in glocal and local mode (default: local\nonly)")), ToolInput(tag="in_nc_ev", input_type=String(optional=True), prefix="--ncev", doc=InputDocumentation(doc="evalue to use for inferal fast mode")), ToolInput(tag="in_sensitive", input_type=Boolean(optional=True), prefix="--sensitive", doc=InputDocumentation(doc="use infernals sensitive mode only")), ToolInput(tag="in_max_trna_ovl", input_type=String(optional=True), prefix="--maxtrnaovl", doc=InputDocumentation(doc="allow tRNA overlap of up to X nt for mitfi")), ToolInput(tag="in_max_rrna_ovl", input_type=String(optional=True), prefix="--maxrrnaovl", doc=InputDocumentation(doc="allow rRNA overlap of up to X nt for mitfi")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="print debug output")), ToolInput(tag="in_json", input_type=File(optional=True), prefix="--json", doc=InputDocumentation(doc="a JSON file with parameters. then outdir is the only\nother argument needed.")), ToolInput(tag="in_fragments", input_type=String(), position=0, doc=InputDocumentation(doc="--noplots             do not create the plots."))], outputs=[ToolOutput(tag="out_outdir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_outdir", type_hint=File()), doc=OutputDocumentation(doc="the directory where the output is written"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Runmitos_Py_V0_1_0().translate("wdl", allow_empty_container=True)

