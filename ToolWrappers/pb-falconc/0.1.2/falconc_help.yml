!Command
command:
- falconc
- help
positional:
- !Positional
  description: -F=, --Flags-exclude=  string  "0"       Integer (0x ok) of flags to
  position: 0
  name: basepairs
  optional: false
- !Positional
  description: -v, --verbose          bool    false     Show each skipped alignment,
    and
  position: 0
  name: filters
  optional: false
- !Positional
  description: 'Options(opt-arg sep :|=|spc):'
  position: 0
  name: output.
  optional: false
- !Positional
  description: -o=, --output-fn=  string  REQUIRED  fasta (or fastq) file output
  position: 1
  name: sequences
  optional: false
- !Positional
  description: -k=, --kmersize=    int     21        Kmer size
  position: 0
  name: read
  optional: false
- !Positional
  description: -m=, --min-len=          int     6000      Minimum read length, reads
  position: 0
  name: filter
  optional: false
- !Positional
  description: --min-cov=               int     2         Minimum number of overlaps
    on
  position: 0
  name: discarded
  optional: false
- !Positional
  description: -f=, --filter-log-fn=    string  REQUIRED  Write read filter stats
    to this
  position: 0
  name: locally
  optional: false
- !Positional
  description: -o=, --out-fn=           string  REQUIRED  Final m4 overlap file
  position: 1
  name: file
  optional: false
- !Positional
  description: '--help-syntax                                     advanced:'
  position: 0
  name: help
  optional: false
- !Positional
  description: -o=, --out-fn=           string  REQUIRED         Final m4 overlap
    file
  position: 0
  name: file
  optional: false
- !Positional
  description: -i=, --idt-stage1=       float   90.0      Stage one percent identity
  position: 0
  name: ipa/raptor
  optional: false
- !Positional
  description: --idt-stage2=            float   90.0      Stage two percent identify
  position: 0
  name: skipped
  optional: false
- !Positional
  description: -m=, --min-len=          int     6000      Minimum read length, reads
  position: 1
  name: filter
  optional: false
- !Positional
  description: --min-cov=               int     2         Minimum number of overlaps
    on
  position: 0
  name: discarded
  optional: false
- !Positional
  description: -f=, --filter-log-fn=    string  REQUIRED  Write read filter stats
    to this
  position: 0
  name: locally
  optional: false
- !Positional
  description: --outputFn=              string  REQUIRED  Final m4 overlap file
  position: 1
  name: file
  optional: false
- !Positional
  description: help
  position: 0
  name: cligen-erated
  optional: false
- !Positional
  description: -r=, --read-to-contig-map=  string  "./4-quiver/read_maps/read_to_contig_map"                       setread_to_cont
  position: 1
  name: phased_read_file
  optional: false
- !Positional
  description: --rawread-ids=              string  "./2-asm-falcon/read_maps/dump_rawread_ids/rawread_ids"         set
    rawread_ids
  position: 2
  name: ig_map
  optional: false
- !Positional
  description: help
  position: 0
  name: cligen-erated
  optional: false
- !Positional
  description: -p=, --partials-fn=         string  "./4-quiver/track-reads/partials.json"       set
    partials_fn
  position: 1
  name: ig_map
  optional: false
- !Positional
  description: --rawread-ids=              string  ""                                           set
    rawread_ids
  position: 2
  name: phased_read_file
  optional: false
named:
- !Flag
  description: 'advanced: prepend,plurals,..'
  synonyms:
  - --help-syntax
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: =, --int-dummy=     int     42       set int_dummy
  synonyms:
  - -d
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: =, --string-dummy=  string  "hello"  set string_dummy
  synonyms:
  - -s
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: =, --float_req=  float  REQUIRED  special help message
  synonyms:
  - -f
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: =, --bams-fofn=             string  REQUIRED  set bams_fofn
  synonyms:
  - -b
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: =, --all-subread-names-fn=  string  ""        set all_subread_names_fn
  synonyms:
  - -a
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: =, --min-len=               int     -1        set min_len
  synonyms:
  - -m
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: =                   float   0.7       set min_frac
  synonyms:
  - --min-frac
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "=, --output-fn=  string  REQUIRED  Bam or Sam filename (based on its\n\
    extension)"
  synonyms:
  - -o
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "=, --input-fn=   string  REQUIRED  Bam or Sam filename (based on its\n\
    extension), or '-'"
  synonyms:
  - -i
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: =, --end-margin=     int     25        Maximum margin on contig ends,
    in
  synonyms:
  - -e
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "bool    false     Also enrich the tags. (See\nbam-tags-enrich.)"
  synonyms:
  - -t
  - --tags-enrich
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: =, --rdb-fn=       string  "rawreads.db"  set rdb_fn
  synonyms:
  - -r
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: =, --genome-size=  int64   4600000        set genome_size
  synonyms:
  - -g
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: =, --coverage=     float   30.0           set coverage
  synonyms:
  - -c
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "bool    false          Exit non-zero if the input\ncoverage was insufficient\
    \ to\nsatisfy the requirement."
  synonyms:
  - -f
  - --fail-low-cov
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "=, --wl-fn=      string  \"\"        white list of sequences to rotate,\n\
    one per line, no spaces, no trailing\nspaces"
  synonyms:
  - -w
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: =          int     500       window size to caculate gc-skew
  synonyms:
  - --window
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "bool    false     print skew data to files\n('SEQ.gc_skew.txt'), one\
    \ per sequence"
  synonyms:
  - -p
  - --print
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: =          int     200       set maxCov
  synonyms:
  - --maxCov
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: =          int     2         set minCov
  synonyms:
  - --minCov
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: =          int     6000      set minLen
  synonyms:
  - --minLen
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: =          float   95.0      set minIdt
  synonyms:
  - --minIdt
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: bool    false     set gapFilt
  synonyms:
  - -g
  - --gapFilt
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: =        int     2         set minDepth
  synonyms:
  - --minDepth
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: =          string  REQUIRED  set blacklistIn
  synonyms:
  - --blacklistIn
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: =            float   90.0      Stage two percent identify
  synonyms:
  - --idt-stage2
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "=               int     200       Maximum number of overlaps on\n\
    either side of a read"
  synonyms:
  - --max-cov
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "=              int     100       Reads are skipped is abs(5p-3p)\n\
    overlap counts > maxDiff"
  synonyms:
  - --max-diff
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "=             int     2         Depths lower than minDepth are\nconsidered\
    \ gaps"
  synonyms:
  - --min-depth
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "bool    false     Run depth filter, takes a\nlittle more time"
  synonyms:
  - -g
  - --gap-filt
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: bool    false     set keepIntermediates
  synonyms:
  - -k
  - --keepIntermediates
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: =, --n-proc=           int     24        Number of processes to run
  synonyms:
  - -n
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "=, --las-json-fn=      string  REQUIRED         List of las files\
    \ from\nfalcon, e.g../1-preads_\novl/las-merge-combine/la\ns_fofn.json"
  synonyms:
  - -l
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "=               int     2                Minimum number of\noverlaps\
    \ on either side\nof a read"
  synonyms:
  - --min-cov
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: =          string  "LA4Falcon.log"  Write stderr to this
  synonyms:
  - --debug-log-fn
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "bool    false     IGNORED (used in\novlp_to_graph)"
  synonyms:
  - --lfc
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "bool    false     IGNORED (used in\novlp_to_graph)"
  synonyms:
  - --disable_chimer_bridge_removal
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "=                    string  \"\"        IGNORED (used in\novlp_to_graph)"
  synonyms:
  - --ctg_prefix
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "=                       int     400       Minimum read length;\nreads\
    \ shorter than\nminLen will be\ndiscarded"
  synonyms:
  - --min-len
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "=                   float   96.0      Minimum overlap\nidentity; worse\n\
    overlaps will be\ndiscarded"
  synonyms:
  - --min-idt-pct
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: =, --verbose=  int     1                         set verbose
  synonyms:
  - -v
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: bool    false                     set dry_run
  synonyms:
  - -n
  - --dry-run
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: bool    false                                                           set
    test
  synonyms:
  - -t
  - --test
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: bool    false                                                           set
    stream
  synonyms:
  - -s
  - --stream
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: bool    false                                                           set
    debug
  synonyms:
  - -d
  - --debug
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: bool    false                                                           set
    silent
  synonyms:
  - --silent
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: =         string  ""                                           set
  synonyms:
  - --phased-read-file
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: print this
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "This is a multiple-dispatch command.  Top-level --help/--help-syntax\n\
  is also available.  Usage is like:\n    falconc {SUBCMD} [subcommand-opts & args]\n\
  where subcommand syntaxes are as follows:\n\n  version [optional-params] \n  Options(opt-arg\
  \ sep :|=|spc):\n      -h, --help         print this cligen-erated help\n      --help-syntax\
  \      advanced: prepend,plurals,..\n\n  dataset [optional-params] [extras: string...]\n\
  \  Options(opt-arg sep :|=|spc):\n      -h, --help         print this cligen-erated\
  \ help\n      --help-syntax      advanced: prepend,plurals,..\n\n  kmers [optional-params]\
  \ \n  Options(opt-arg sep :|=|spc):\n      -h, --help                          \
  \   print this cligen-erated help\n      --help-syntax                         \
  \ advanced: prepend,plurals,..\n      -d=, --int-dummy=     int     42       set\
  \ int_dummy\n      -s=, --string-dummy=  string  \"hello\"  set string_dummy\n\n\
  \  utils [required&optional-params] [extras: string...]\n  Options(opt-arg sep :|=|spc):\n\
  \      -h, --help                          print this cligen-erated help\n     \
  \ --help-syntax                       advanced: prepend,plurals,..\n      -f=, --float_req=\
  \  float  REQUIRED  special help message\n\n  bam-filter-ipa [required&optional-params]\
  \ \n    Print subreads which have decent alignments in any of the bam inputs.\n\
  \  Options(opt-arg sep :|=|spc):\n      -h, --help                             \
  \         print this cligen-erated\n                                           \
  \           help\n      --help-syntax                                   advanced:\n\
  \                                                      prepend,plurals,..\n    \
  \  -b=, --bams-fofn=             string  REQUIRED  set bams_fofn\n      -a=, --all-subread-names-fn=\
  \  string  \"\"        set all_subread_names_fn\n      -m=, --min-len=         \
  \      int     -1        set min_len\n      --min-frac=                   float\
  \   0.7       set min_frac\n\n  align-filter [required&optional-params] \n    alias\
  \ for bam-filter-ipa\n  Options(opt-arg sep :|=|spc):\n      -h, --help        \
  \                              print this cligen-erated\n                      \
  \                                help\n      --help-syntax                     \
  \              advanced:\n                                                     \
  \ prepend,plurals,..\n      -b=, --bams-fofn=             string  REQUIRED  set\
  \ bams_fofn\n      -a=, --all-subread-names-fn=  string  \"\"        set all_subread_names_fn\n\
  \      -m=, --min-len=               int     -1        set min_len\n      --min-frac=\
  \                   float   0.7       set min_frac\n\n  bam-tags-enrich [required&optional-params]\
  \ \n    Add XB/XE/XP/XR/XQ: beg/end/%idt/aln-ref-len/qry-len\n  Options(opt-arg\
  \ sep :|=|spc):\n      -h, --help                           print this cligen-erated\
  \ help\n      --help-syntax                        advanced: prepend,plurals,..\n\
  \      -o=, --output-fn=  string  REQUIRED  Bam or Sam filename (based on its\n\
  \                                           extension)\n      -i=, --input-fn= \
  \  string  REQUIRED  Bam or Sam filename (based on its\n                       \
  \                    extension), or '-'\n\n  bam-filter-clipped [required&optional-params]\
  \ \n    Filter alignments with significant clipping. To skip an alignment, both\n\
  \    max_clipping and end_margin must be exceeded on at least 1 end.\n  Options(opt-arg\
  \ sep :|=|spc):\n      -h, --help                               print this cligen-erated\
  \ help\n      --help-syntax                            advanced: prepend,plurals,..\n\
  \      -o=, --output-fn=      string  REQUIRED  Bam or Sam filename (based on its\n\
  \                                               extension)\n      -i=, --input-fn=\
  \       string  REQUIRED  Bam or Sam filename (based on its\n                  \
  \                             extension), or '-'\n      -m=, --max-clipping=   int\
  \     100       Maximum clipping on left or right\n                            \
  \                   of query, in basepairs\n      -e=, --end-margin=     int   \
  \  25        Maximum margin on contig ends, in\n                               \
  \                basepairs\n      -F=, --Flags-exclude=  string  \"0\"       Integer\
  \ (0x ok) of flags to\n                                               exclude, independent\
  \ of other\n                                               filters\n      -v, --verbose\
  \          bool    false     Show each skipped alignment, and\n                \
  \                               a count.\n      -t, --tags-enrich      bool    false\
  \     Also enrich the tags. (See\n                                             \
  \  bam-tags-enrich.)\n\n  raptor-db-filter [optional-params] \n    Read/write raptor-db\
  \ to/from stdin/stdout. Exclude zmws in blacklist.\n  Options(opt-arg sep :|=|spc):\n\
  \      -h, --help                        print this cligen-erated help\n      --help-syntax\
  \                     advanced: prepend,plurals,..\n      -b=, --blacklist-fn= \
  \ string  \"\"  set blacklist_fn\n\n  raptor-db-calc-length-cutoff [optional-params]\
  \ \n    Perform a linear pass on an overlap file, and determine rough clipping\n\
  \    coordinates to 'correct' reads. Write integer to stdout.\n  Options(opt-arg\
  \ sep :|=|spc):\n      -h, --help                                  print this cligen-erated\
  \ help\n      --help-syntax                               advanced: prepend,plurals,..\n\
  \      -r=, --rdb-fn=       string  \"rawreads.db\"  set rdb_fn\n      -g=, --genome-size=\
  \  int64   4600000        set genome_size\n      -c=, --coverage=     float   30.0\
  \           set coverage\n      -f, --fail-low-cov   bool    false          Exit\
  \ non-zero if the input\n                                                  coverage\
  \ was insufficient to\n                                                  satisfy\
  \ the requirement.\n      -a=, --alarms-fn=    string  \"\"             Optional\
  \ JSON file to write\n                                                  SMRT Link\
  \ alarms. (typically\n                                                  used w/\
  \ -f)\n\n  circ-orient [required&optional-params] \n    reorients circular sequences\
  \ based on gc-skew distribution and writes to\n    output.\n  Options(opt-arg sep\
  \ :|=|spc):\n      -h, --help                           print this cligen-erated\
  \ help\n      --help-syntax                        advanced: prepend,plurals,..\n\
  \      -i=, --input-fn=   string  REQUIRED  fasta (or fastq) file of circular\n\
  \                                           sequences\n      -o=, --output-fn= \
  \ string  REQUIRED  fasta (or fastq) file output\n      -w=, --wl-fn=      string\
  \  \"\"        white list of sequences to rotate,\n                            \
  \               one per line, no spaces, no trailing\n                         \
  \                  spaces\n      --window=          int     500       window size\
  \ to caculate gc-skew\n      -s=, --step=       int     200       window step\n\
  \      -p, --print        bool    false     print skew data to files\n         \
  \                                  ('SEQ.gc_skew.txt'), one per sequence\n\n  circ-randomize\
  \ [required&optional-params] \n    randomly rotates left rotates the sequence and\
  \ writes to the output file.\n  Options(opt-arg sep :|=|spc):\n      -h, --help\
  \                        print this cligen-erated help\n      --help-syntax    \
  \                 advanced: prepend,plurals,..\n      -i=, --input=   string  REQUIRED\
  \  fasta file of circular sequences\n      -o=, --output=  string  REQUIRED  fasta\
  \ file output\n      -s=, --seed=    int64   0         set seed, if non-zero\n\n\
  \  phasr [required&optional-params] \n    Phase PacBio CCS/HIFI reads.\n  Options(opt-arg\
  \ sep :|=|spc):\n      -h, --help                            print this cligen-erated\
  \ help\n      --help-syntax                         advanced: prepend,plurals,..\n\
  \      -a=, --aln-fn=      string  REQUIRED  BAM alignment, sorted on\n        \
  \                                    'coordinate'\n      -r=, --ref-fn=      string\
  \  REQUIRED  FASTA reference\n      -o=, --out-fn=      string  REQUIRED  Output\
  \ file name\n      -i=, --iterations=  int     1000      Number of phasing iterations\
  \ per\n                                            read\n      -k=, --kmersize=\
  \    int     21        Kmer size\n      -d=, --delta=       float   0.75      Frequency\
  \ cut\n\n  m4filt-merge-blacklist [required&optional-params] \n  Options(opt-arg\
  \ sep :|=|spc):\n      -h, --help                           print this cligen-erated\
  \ help\n      --help-syntax                        advanced: prepend,plurals,..\n\
  \      -b=, --blistFofn=  string  REQUIRED  set blistFofn\n      -o=, --outFn= \
  \     string  REQUIRED  set outFn\n\n  m4filt-stage1 [required&optional-params]\
  \ \n  Options(opt-arg sep :|=|spc):\n      -h, --help                          \
  \ print this cligen-erated help\n      --help-syntax                        advanced:\
  \ prepend,plurals,..\n      -m=, --maxDiff=    int     100       set maxDiff\n \
  \     --maxCov=          int     200       set maxCov\n      --minCov=         \
  \ int     2         set minCov\n      --minLen=          int     6000      set minLen\n\
  \      --minIdt=          float   95.0      set minIdt\n      -g, --gapFilt    \
  \  bool    false     set gapFilt\n      --minDepth=        int     2         set\
  \ minDepth\n      -b=, --blacklist=  string  REQUIRED  set blacklist\n\n  m4filt-stage2\
  \ [required&optional-params] \n  Options(opt-arg sep :|=|spc):\n      -h, --help\
  \                                print this cligen-erated help\n      --help-syntax\
  \                             advanced: prepend,plurals,..\n      -m=, --minIdt=\
  \          float   90.0      set minIdt\n      -b=, --bestN=           int     10\
  \        set bestN\n      --blacklistIn=          string  REQUIRED  set blacklistIn\n\
  \      -f=, --filteredOutput=  string  REQUIRED  set filteredOutput\n\n  m4filt-dump-blacklist\
  \ [required&optional-params] \n  Options(opt-arg sep :|=|spc):\n      -h, --help\
  \                           print this cligen-erated help\n      --help-syntax \
  \                       advanced: prepend,plurals,..\n      -b=, --blacklist=  string\
  \  REQUIRED  set blacklist\n\n  m4filt [required&optional-params] \n    Run the\
  \ multi-stage m4 overlap filter. Read the m4 filenames from stdin. In\n    stage\
  \ one, reads that trigger a filter are marked including containment,\n    gaps in\
  \ coverage along the A-read, and repeat reads. In stage two the\n    filters are\
  \ applied and the N-best overlaps are kept for the 5prime and\n    3prime of each\
  \ read.\n  Options(opt-arg sep :|=|spc):\n      -h, --help                     \
  \            print this cligen-erated help\n      --help-syntax                \
  \              advanced: prepend,plurals,..\n      -i=, --idt-stage1=       float\
  \   90.0      Stage one percent identity\n                                     \
  \            filter, formatted as\n                                            \
  \     percentage, overlaps < %idt are\n                                        \
  \         skipped\n      --idt-stage2=            float   90.0      Stage two percent\
  \ identify\n                                                 filter\n      -m=,\
  \ --min-len=          int     6000      Minimum read length, reads\n           \
  \                                      shorter than minLen will be\n           \
  \                                      discarded\n      --min-cov=             \
  \  int     2         Minimum number of overlaps on\n                           \
  \                      either side of a read\n      --max-cov=               int\
  \     200       Maximum number of overlaps on\n                                \
  \                 either side of a read\n      --max-diff=              int    \
  \ 100       Reads are skipped is abs(5p-3p)\n                                  \
  \               overlap counts > maxDiff\n      -b=, --bestn=            int   \
  \  10        Keep N best overlaps at 5prime\n                                  \
  \               AND 3prime of a read\n      --min-depth=             int     2 \
  \        Depths lower than minDepth are\n                                      \
  \           considered gaps\n      -g, --gap-filt           bool    false     Run\
  \ depth filter, takes a\n                                                 little\
  \ more time\n      -k, --keepIntermediates  bool    false     set keepIntermediates\n\
  \      -n=, --n-proc=           int     24        Number of processes to run\n \
  \                                                locally\n      -f=, --filter-log-fn=\
  \    string  REQUIRED  Write read filter stats to this\n                       \
  \                          file\n      -o=, --out-fn=           string  REQUIRED\
  \  Final m4 overlap file\n\n  m4filt-falconRunner [required&optional-params] \n\
  \    Runs the multi-stage m4 overlap filter for falcon. In stage one, reads that\n\
  \    trigger a filter are marked including containment, gaps in coverage along\n\
  \    the A-read, and repeat reads. In stage two the filters are applied and the\n\
  \    N-best overlaps are kept for the 5prime and 3prime of each read.\n  Options(opt-arg\
  \ sep :|=|spc):\n      -h, --help                                        print this\
  \ cligen-erated\n                                                        help\n\
  \      --help-syntax                                     advanced:\n           \
  \                                             prepend,plurals,..\n      -d=, --db=\
  \               string  REQUIRED         set db\n      -l=, --las-json-fn=     \
  \ string  REQUIRED         List of las files from\n                            \
  \                            falcon, e.g../1-preads_\n                         \
  \                               ovl/las-merge-combine/la\n                     \
  \                                   s_fofn.json\n      -i=, --idt-stage1=      \
  \ float   90.0             Stage one percent\n                                 \
  \                       identity filter,\n                                     \
  \                   formatted as percentage,\n                                 \
  \                       overlaps < %idt are\n                                  \
  \                      skipped\n      --idt-stage2=            float   90.0    \
  \         Stage two percent\n                                                  \
  \      identify filter\n      -m=, --min-len=          int     6000            \
  \ Minimum read length,\n                                                       \
  \ reads shorter than\n                                                        minLen\
  \ will be discarded\n      --min-cov=               int     2                Minimum\
  \ number of\n                                                        overlaps on\
  \ either side\n                                                        of a read\n\
  \      --max-cov=               int     200              Maximum number of\n   \
  \                                                     overlaps on either side\n\
  \                                                        of a read\n      --max-diff=\
  \              int     100              Reads are skipped is\n                 \
  \                                       abs(5p-3p) overlap\n                   \
  \                                     counts > maxDiff\n      -b=, --bestn=    \
  \        int     10               Keep N best overlaps at\n                    \
  \                                    5prime AND 3prime of a\n                  \
  \                                      read\n      --min-depth=             int\
  \     2                Depths lower than\n                                     \
  \                   minDepth are considered\n                                  \
  \                      gaps\n      -g, --gap-filt           bool    false      \
  \      Run depth filter, takes\n                                               \
  \         a little more time\n      -k, --keepIntermediates  bool    false     \
  \       set keepIntermediates\n      -n=, --n-proc=           int     24       \
  \        Number of processes to\n                                              \
  \          run locally\n      -f=, --filter-log-fn=    string  REQUIRED        \
  \ Write read filter stats\n                                                    \
  \    to this file\n      --debug-log-fn=          string  \"LA4Falcon.log\"  Write\
  \ stderr to this\n                                                        file\n\
  \      -o=, --out-fn=           string  REQUIRED         Final m4 overlap file\n\
  \n  m4filt-ipaRunner [required&optional-params] \n    Runs the multi-stage m4 overlap\
  \ filter for IPA. In stage one, reads that\n    trigger a filter are marked including\
  \ containment, gaps in coverage along\n    the A-read, and repeat reads. In stage\
  \ two the filters are applied and the\n    N-best overlaps are kept for the 5prime\
  \ and 3prime of each read.\n  Options(opt-arg sep :|=|spc):\n      -h, --help  \
  \                               print this cligen-erated help\n      --help-syntax\
  \                              advanced: prepend,plurals,..\n      -o=, --ovls-fofn-fn=\
  \     string  REQUIRED  List of m4 files from\n                                \
  \                 ipa/raptor\n      -i=, --idt-stage1=       float   90.0      Stage\
  \ one percent identity\n                                                 filter,\
  \ formatted as\n                                                 percentage, overlaps\
  \ < %idt are\n                                                 skipped\n      --idt-stage2=\
  \            float   90.0      Stage two percent identify\n                    \
  \                             filter\n      -m=, --min-len=          int     6000\
  \      Minimum read length, reads\n                                            \
  \     shorter than minLen will be\n                                            \
  \     discarded\n      --min-cov=               int     2         Minimum number\
  \ of overlaps on\n                                                 either side of\
  \ a read\n      --max-cov=               int     200       Maximum number of overlaps\
  \ on\n                                                 either side of a read\n \
  \     --max-diff=              int     100       Reads are skipped is abs(5p-3p)\n\
  \                                                 overlap counts > maxDiff\n   \
  \   -b=, --bestn=            int     10        Keep N best overlaps at 5prime\n\
  \                                                 AND 3prime of a read\n      --min-depth=\
  \             int     2         Depths lower than minDepth are\n               \
  \                                  considered gaps\n      -g, --gap-filt       \
  \    bool    false     Run depth filter, takes a\n                             \
  \                    little more time\n      -k, --keepIntermediates  bool    false\
  \     set keepIntermediates\n      -n=, --n-proc=           int     24        Number\
  \ of processes to run\n                                                 locally\n\
  \      -f=, --filter-log-fn=    string  REQUIRED  Write read filter stats to this\n\
  \                                                 file\n      --outputFn=      \
  \        string  REQUIRED  Final m4 overlap file\n\n  m4filt-contained [required&optional-params]\
  \ \n    Parse .m4 file.\n    Write only the overlaps which pass the filters.\n \
  \   (no overlaps involving contained reads;\n     no overlaps involving short reads;\n\
  \     no overlaps with low identity)\n  Options(opt-arg sep :|=|spc):\n      -h,\
  \ --help                                         print this\n                  \
  \                                       cligen-erated help\n      --help-syntax\
  \                                      advanced:\n                             \
  \                            prepend,plurals,..\n      -i=, --in-fn=           \
  \         string  REQUIRED  Input m4 overlap file\n      -o=, --out-fn=        \
  \           string  REQUIRED  Output m4 overlap file\n      --lfc              \
  \              bool    false     IGNORED (used in\n                            \
  \                             ovlp_to_graph)\n      --disable_chimer_bridge_removal\
  \  bool    false     IGNORED (used in\n                                        \
  \                 ovlp_to_graph)\n      --ctg_prefix=                    string\
  \  \"\"        IGNORED (used in\n                                              \
  \           ovlp_to_graph)\n      --min-len=                       int     400 \
  \      Minimum read length;\n                                                  \
  \       reads shorter than\n                                                   \
  \      minLen will be\n                                                        \
  \ discarded\n      --min-idt-pct=                   float   96.0      Minimum overlap\n\
  \                                                         identity; worse\n    \
  \                                                     overlaps will be\n       \
  \                                                  discarded\n\n  pbcromwell-rm-las\
  \ [optional-params] \n    Remove all .las files except final stage of merge. (Unzip\
  \ is still\n    possible.) Filepaths come from the provided command as a subprocess,\
  \ or from\n    stdin if command==\"-\", (Someday, we will add a flag to delete the\
  \ final\n    stage too, optionally.)\n  Options(opt-arg sep :|=|spc):\n      -h,\
  \ --help                                         print this\n                  \
  \                                       cligen-erated help\n      --help-syntax\
  \                                      advanced:\n                             \
  \                            prepend,plurals,..\n      -c=, --command=  string \
  \ \"find . -name \\'*.las\\'\"  set command\n      -v=, --verbose=  int     1  \
  \                       set verbose\n      -n, --dry-run    bool    false      \
  \               set dry_run\n\n  pbreports-circ [required&optional-params] \n  \
  \  Given FASTA of all ctgs and text-list of circular ctgs, print a report\n    (pbreports\
  \ format).\n  Options(opt-arg sep :|=|spc):\n      -h, --help                  \
  \        print this cligen-erated help\n      --help-syntax                    \
  \   advanced: prepend,plurals,..\n      -f=, --fasta-fn=  string  REQUIRED  FASTA\
  \ filename, preferably indexed\n                                          (with\
  \ .fai)\n      -c=, --circ-fn=   string  REQUIRED  Text list of circular contigs\n\
  \                                          (newline-delimited)\n\n  stats-assembly\
  \ [required&optional-params] \n  Options(opt-arg sep :|=|spc):\n      -h, --help\
  \                          print this cligen-erated help\n      --help-syntax  \
  \                     advanced: prepend,plurals,..\n      -f=, --fasta-fn=  string\
  \  REQUIRED  FASTA filename, preferably indexed\n                              \
  \            (with .fai)\n\n  rr-hctg-track1 [optional-params] \n  Options(opt-arg\
  \ sep :|=|spc):\n      -h, --help                                              \
  \                                            print this\n                      \
  \                                                                              \
  \      cligen-erated\n                                                         \
  \                                                 help\n      --help-syntax    \
  \                                                                              \
  \     advanced:prepen\n                                                        \
  \                                                  d,plurals,..\n      -t, --test\
  \                  bool    false                                               \
  \            set test\n      -p=, --phased-read-file=    string  \"./3-unzip/all_phased_reads\"\
  \                                    set\n                                     \
  \                                                                     phased_read_file\n\
  \      -r=, --read-to-contig-map=  string  \"./4-quiver/read_maps/read_to_contig_map\"\
  \                       setread_to_cont\n                                      \
  \                                                                    ig_map\n  \
  \    --rawread-ids=              string  \"./2-asm-falcon/read_maps/dump_rawread_ids/rawread_ids\"\
  \         set rawread_ids\n      -b=, --bestn=               int     40        \
  \                                                      set bestn\n      -n=, --n-core=\
  \              int     0                                                       \
  \        set n_core\n      -m=, --min-len=             int     2500            \
  \                                                set min_len\n      -o=, --output=\
  \              string  \"./2-asm-falcon/read_maps/dump_rawread_ids/rawread_to_contigs\"\
  \  set output\n      -s, --stream                bool    false                 \
  \                                          set stream\n      -d, --debug       \
  \          bool    false                                                       \
  \    set debug\n      --silent                    bool    false                \
  \                                           set silent\n\n  rr-hctg-track2 [optional-params]\
  \ \n    Stage 2 of rr_hctg_track\n  Options(opt-arg sep :|=|spc):\n      -h, --help\
  \                                                                       print this\n\
  \                                                                              \
  \         cligen-erated\n                                                      \
  \                                 help\n      --help-syntax                    \
  \                                                advanced:prepen\n             \
  \                                                                          d,plurals,..\n\
  \      -t, --test                  bool    false                               \
  \         set test\n      -r=, --read-to-contig-map=  string  \"./4-quiver/track_reads/read_to_contig_map\"\
  \  setread_to_cont\n                                                           \
  \                            ig_map\n      -p=, --partials-fn=         string  \"\
  ./4-quiver/track-reads/partials.json\"       set partials_fn\n      -o=, --output=\
  \              string  \"./4-quiver/track-reads/rawread_to_contigs\"  set output\n\
  \      -b=, --bestn=               int     40                                  \
  \         set bestn\n      -n=, --n-core=              int     0               \
  \                             set n_core\n      --phased-read-file=         string\
  \  \"\"                                           set\n                        \
  \                                                               phased_read_file\n\
  \      --rawread-ids=              string  \"\"                                \
  \           set rawread_ids\n      -m=, --min-len=             int     2500    \
  \                                     set min_len\n      -s, --stream          \
  \      bool    false                                        set stream\n      -d,\
  \ --debug                 bool    false                                        set\
  \ debug\n      --silent                    bool    false                       \
  \                 set silent\n"
generated_using: []
