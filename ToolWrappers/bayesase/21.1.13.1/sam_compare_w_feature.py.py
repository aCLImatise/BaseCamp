from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, File, Boolean

Sam_Compare_W_Feature_Py_V0_1_0 = CommandToolBuilder(tool="sam_compare_w_feature.py", base_command=["sam_compare_w_feature.py"], inputs=[ToolInput(tag="in_length", input_type=Int(optional=True), prefix="--length", doc=InputDocumentation(doc="Read length")), ToolInput(tag="in_fast_q", input_type=File(optional=True), prefix="--fastq", doc=InputDocumentation(doc="Source FastQ data file name")), ToolInput(tag="in_sama", input_type=File(optional=True), prefix="--sama", doc=InputDocumentation(doc="First SAM file (A)")), ToolInput(tag="in_samb", input_type=File(optional=True), prefix="--samb", doc=InputDocumentation(doc="Second SAM file (B)")), ToolInput(tag="in_feature", input_type=File(optional=True), prefix="--feature", doc=InputDocumentation(doc="Fusion file name, TSV or BED")), ToolInput(tag="in_counts", input_type=File(optional=True), prefix="--counts", doc=InputDocumentation(doc="Output file name for the counts - CSV file. Defaults\nto counts_username_date_time_rand.csv. To output to\nconsole, set to -o stdout")), ToolInput(tag="in_totals", input_type=File(optional=True), prefix="--totals", doc=InputDocumentation(doc="Output file name for the totals - text file. Defaults\nto totals_username_date_time_randint.txt. To output to\nconsole, set to -t stdout")), ToolInput(tag="in_no_fq_ids", input_type=Boolean(optional=True), prefix="--nofqids", doc=InputDocumentation(doc="Do not check SAM reads QNAME against the fastq\nsequence ids. Saves time if already known to be good.\nMust still set -q op ion.")), ToolInput(tag="in_log", input_type=File(optional=True), prefix="--log", doc=InputDocumentation(doc="Log file name. Defaults to\nsamcompare_username_date_time_rand.log. To output to\nconsole, set to -g stdout. There is normally no stdout\nunless specifically requested via options.")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="Debugging mode (verbose). Includes elapsed time\ndisplay for performance tracking."))], outputs=[ToolOutput(tag="out_counts", output_type=File(optional=True), selector=InputSelector(input_to_select="in_counts", type_hint=File()), doc=OutputDocumentation(doc="Output file name for the counts - CSV file. Defaults\nto counts_username_date_time_rand.csv. To output to\nconsole, set to -o stdout")), ToolOutput(tag="out_totals", output_type=File(optional=True), selector=InputSelector(input_to_select="in_totals", type_hint=File()), doc=OutputDocumentation(doc="Output file name for the totals - text file. Defaults\nto totals_username_date_time_randint.txt. To output to\nconsole, set to -t stdout")), ToolOutput(tag="out_log", output_type=File(optional=True), selector=InputSelector(input_to_select="in_log", type_hint=File()), doc=OutputDocumentation(doc="Log file name. Defaults to\nsamcompare_username_date_time_rand.log. To output to\nconsole, set to -g stdout. There is normally no stdout\nunless specifically requested via options."))], container="quay.io/biocontainers/bayesase:21.1.13.1--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Sam_Compare_W_Feature_Py_V0_1_0().translate("wdl")

