from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Boolean, Int

Pheniqs_Mux_V0_1_0 = CommandToolBuilder(tool="pheniqs_mux", base_command=["pheniqs", "mux"], inputs=[ToolInput(tag="in_input", input_type=File(optional=True), prefix="--input", doc=InputDocumentation(doc="Path to an input file. May be repeated.")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="Path to an output file. May be repeated.")), ToolInput(tag="in_config", input_type=File(optional=True), prefix="--config", doc=InputDocumentation(doc="Path to configuration file")), ToolInput(tag="in_report", input_type=File(optional=True), prefix="--report", doc=InputDocumentation(doc="Path to report file")), ToolInput(tag="in_base_input", input_type=String(optional=True), prefix="--base-input", doc=InputDocumentation(doc="Base input url")), ToolInput(tag="in_base_output", input_type=String(optional=True), prefix="--base-output", doc=InputDocumentation(doc="Base output url")), ToolInput(tag="in_sense_input", input_type=Boolean(optional=True), prefix="--sense-input", doc=InputDocumentation(doc="Sense input segment layout")), ToolInput(tag="in_filtered", input_type=Boolean(optional=True), prefix="--filtered", doc=InputDocumentation(doc="Include reads not passing vendor QC in output")), ToolInput(tag="in_leading", input_type=Int(optional=True), prefix="--leading", doc=InputDocumentation(doc="Leading read segment index")), ToolInput(tag="in_format", input_type=String(optional=True), prefix="--format", doc=InputDocumentation(doc="Defult output format")), ToolInput(tag="in_compression", input_type=String(optional=True), prefix="--compression", doc=InputDocumentation(doc="Defult output compression")), ToolInput(tag="in_token", input_type=String(optional=True), prefix="--token", doc=InputDocumentation(doc=":START:END    Output read token")), ToolInput(tag="in_platform", input_type=String(optional=True), prefix="--platform", doc=InputDocumentation(doc="Sequencing platform")), ToolInput(tag="in_quality", input_type=Boolean(optional=True), prefix="--quality", doc=InputDocumentation(doc="Enable quality control")), ToolInput(tag="in_validate", input_type=Boolean(optional=True), prefix="--validate", doc=InputDocumentation(doc="Validate configuration file and emit a report")), ToolInput(tag="in_distance", input_type=Boolean(optional=True), prefix="--distance", doc=InputDocumentation(doc="Display pairwise barcode distance during validation")), ToolInput(tag="in_compile", input_type=Boolean(optional=True), prefix="--compile", doc=InputDocumentation(doc="Compiled JSON configuration file")), ToolInput(tag="in_static", input_type=Boolean(optional=True), prefix="--static", doc=InputDocumentation(doc="Static configuration JSON file")), ToolInput(tag="in_job", input_type=Boolean(optional=True), prefix="--job", doc=InputDocumentation(doc="Include a copy of the compiled job in the report")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Thread pool size")), ToolInput(tag="in_buffer", input_type=Int(optional=True), prefix="--buffer", doc=InputDocumentation(doc="Feed buffer capacity")), ToolInput(tag="in_precision", input_type=Int(optional=True), prefix="--precision", doc=InputDocumentation(doc="Output floating point precision"))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="Path to an output file. May be repeated."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Pheniqs_Mux_V0_1_0().translate("wdl", allow_empty_container=True)

