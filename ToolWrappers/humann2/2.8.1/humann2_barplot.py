from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, String, Boolean, File

Humann2_Barplot_V0_1_0 = CommandToolBuilder(tool="humann2_barplot", base_command=["humann2_barplot"], inputs=[ToolInput(tag="in_input", input_type=Int(optional=True), prefix="--input", doc=InputDocumentation(doc="HUMAnN2 table with optional metadata")), ToolInput(tag="in_focal_feature", input_type=String(optional=True), prefix="--focal-feature", doc=InputDocumentation(doc="Feature ID of interest (give ID not full name)")), ToolInput(tag="in_top_strata", input_type=Int(optional=True), prefix="--top-strata", doc=InputDocumentation(doc="Number of top stratifications to highlight (top = highest grand means)")), ToolInput(tag="in_sample_sorting_methods", input_type=String(optional=True), prefix="-s", doc=InputDocumentation(doc="[<sorting methods> ...], --sort <sorting methods> [<sorting methods> ...]\nSample sorting methods (can use more than one; will evaluate in order)\nnone        : Default\nsum         : Sum of stratified values\ndominant    : Value of the most dominant stratification\nsimilarity  : Bray-Curtis agreement of relative stratifications\nusimilarity : Bray-Curtis agreement of raw stratifications\nmetadata    : Given metadata label")), ToolInput(tag="in_last_meta_datum", input_type=String(optional=True), prefix="--last-metadatum", doc=InputDocumentation(doc="Indicate end of metadata rows")), ToolInput(tag="in_focal_meta_datum", input_type=String(optional=True), prefix="--focal-metadatum", doc=InputDocumentation(doc="Indicate metadatum to highlight / group by")), ToolInput(tag="in_colormap", input_type=String(optional=True), prefix="--colormap", doc=InputDocumentation(doc="Color space for stratifications")), ToolInput(tag="in_meta_colormap", input_type=String(optional=True), prefix="--meta-colormap", doc=InputDocumentation(doc="Color space for metadata levels")), ToolInput(tag="in_exclude_unclassified", input_type=Boolean(optional=True), prefix="--exclude-unclassified", doc=InputDocumentation(doc="Do not include the 'unclassified' stratum")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="Where to save the figure")), ToolInput(tag="in_scaling", input_type=Int(optional=True), prefix="--scaling", doc=InputDocumentation(doc="Scaling options for total bar heights (strata are always proportional to height)\nnone        : Default\npseudolog   : Total bar heights log-scaled (strata are NOT log scaled)\nnormalize   : Bars all have height=1 (highlighting relative attribution)")), ToolInput(tag="in_as_genera", input_type=Boolean(optional=True), prefix="--as-genera", doc=InputDocumentation(doc="Collapse species to genera")), ToolInput(tag="in_grid", input_type=Boolean(optional=True), prefix="--grid", doc=InputDocumentation(doc="Add y-axis grid")), ToolInput(tag="in_remove_zeroes", input_type=Boolean(optional=True), prefix="--remove-zeroes", doc=InputDocumentation(doc="Do not plot samples with zero sum for this feature")), ToolInput(tag="in_width", input_type=Int(optional=True), prefix="--width", doc=InputDocumentation(doc="Relative width of the plot vs. legend (default: 5)")), ToolInput(tag="in_size__dimensions", input_type=Int(optional=True), prefix="-d", doc=InputDocumentation(doc="<size>, --dimensions <size> <size>\nImage height and width in inches (default: 8 4)")), ToolInput(tag="in_limit_ylims_limit", input_type=String(optional=True), prefix="-y", doc=InputDocumentation(doc="<limit>, --ylims <limit> <limit>\nFix limits for y-axis")), ToolInput(tag="in_legend_stretch", input_type=Boolean(optional=True), prefix="--legend-stretch", doc=InputDocumentation(doc="Stretch/compress legend elements\n"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Humann2_Barplot_V0_1_0().translate("wdl", allow_empty_container=True)

