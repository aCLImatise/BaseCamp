!Command
command:
- fastSimBac
positional:
- !Positional
  optional: false
  position: 0
  name: samplesize
  description: ''
- !Positional
  optional: false
  position: 1
  name: region in base pairs
  description: ''
named:
- !Flag
  optional: true
  synonyms:
  - -s
  - -d
  description: debugging messages
  args: !SimpleFlagArg
    name: random seed
- !Flag
  optional: true
  synonyms:
  - -i
  - -t
  description: (mutation rate per site per 2N generations)
  args: !SimpleFlagArg
    name: iterations
- !Flag
  optional: true
  synonyms:
  - -C
  description: (the input clonal frame to fix simulations on, sample names must be
    integers from 0 on)
  args: !SimpleFlagArg
    name: clonalFrame
- !Flag
  optional: true
  synonyms:
  - -b
  description: '(burn in: sequence length in base pairs to be used to initialize the
    recombination process)'
  args: !SimpleFlagArg
    name: b
- !Flag
  optional: true
  synonyms:
  - -r
  description: <lambda> (r = recombination (gene conversion) initiation rate per-individual,
    per-base pair, per-2N generations; lambda = mean length of recombination tract
    in base pairs)
  args: !SimpleFlagArg
    name: r
- !Flag
  optional: true
  synonyms:
  - -x
  description: <lambda2> (r2 = between-species recombination (gene conversion) initiation
    rate per-individual, per-base pair, per-2N generations; lambda2 = mean length
    of between-species recombination tract in base pairs)
  args: !SimpleFlagArg
    name: r2
- !Flag
  optional: true
  synonyms:
  - -T
  description: (Print each local tree in Newick format to standard out)
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -R
  description: (Tab delimited file where first two columns indicate range of base
    pair positions scaled to the unit interval and last column is ratio with respect
    to base line recombination rate)
  args: !SimpleFlagArg
    name: inputfilename
- !Flag
  optional: true
  synonyms:
  - -F
  description: '[0|1] (Tab delimited frequency distribution file where first column
    indicate range of SNP allele frequencies from previous row to current row and
    last column is desired bin frequency. Second parameter is 1 if SNPs with derived
    allele freq > 1.0 should have alleles flipped, 0 otherwise)'
  args: !SimpleFlagArg
    name: inputfilename
- !Flag
  optional: true
  synonyms:
  - -G
  description: (Assign growth rate alpha across populations where alpha=-log(Np/Nr)
    )
  args: !SimpleFlagArg
    name: alpha
- !Flag
  optional: true
  synonyms:
  - -I
  description: <n1> <n2> .. <mig_rate> (Assign all elements of the migration matrix
    for n populations.  Values in matrix set to mig_rate/(n-1) )
  args: !SimpleFlagArg
    name: n
- !Flag
  optional: true
  synonyms:
  - -m
  description: <j> <m>  (Assign i,j-th element of migration matrix to m)
  args: !SimpleFlagArg
    name: i
- !Flag
  optional: true
  synonyms:
  - -ma
  description: ..<m_12>..<m_nn> (Assign values to all elements of migration matrix
    for n populations)
  args: !SimpleFlagArg
    name: m_11
- !Flag
  optional: true
  synonyms:
  - -n
  description: <size>   (Pop i has size set to size*N_0)
  args: !SimpleFlagArg
    name: i
- !Flag
  optional: true
  synonyms:
  - -g
  description: <alpha>  (If used must appear after -M option)
  args: !SimpleFlagArg
    name: i
- !Flag
  optional: true
  synonyms:
  - -eG
  description: <alpha>  (Assign growth rate for all pops at time t)
  args: !SimpleFlagArg
    name: t
- !Flag
  optional: true
  synonyms:
  - -eg
  description: <i> <alpha>  (Assign growth rate alpha of pop i at time t)
  args: !SimpleFlagArg
    name: t
- !Flag
  optional: true
  synonyms:
  - -eM
  description: <m> (Assign migrate rate m for all elements of migration matrix at
    time t)
  args: !SimpleFlagArg
    name: t
- !Flag
  optional: true
  synonyms:
  - -em
  description: <i> <j> <m_ij> (Assign migration rate for i,j-th element of migration
    matrix at time t)
  args: !SimpleFlagArg
    name: t
- !Flag
  optional: true
  synonyms:
  - -ema
  description: <n> <m_11>..<m_12>..<m_nn> (Assign migration rates  within the migration
    matrix for n populations at time t)
  args: !SimpleFlagArg
    name: t
- !Flag
  optional: true
  synonyms:
  - -eN
  description: <size> (New pop sizes at time t for all pops where new sizes = size*N_0)
  args: !SimpleFlagArg
    name: t
- !Flag
  optional: true
  synonyms:
  - -en
  description: <i> <size_i> (New pop size of pop i will be set to (size_i*N_0) at
    time t)
  args: !SimpleFlagArg
    name: t
- !Flag
  optional: true
  synonyms:
  - -es
  description: <i> <p> (Split two populations.  At time t, a proportion p of chromosomes
    from pop i will migrate to a population i+1)
  args: !SimpleFlagArg
    name: t
- !Flag
  optional: true
  synonyms:
  - -ej
  description: <i> <j> (Join two populations.  At time t all chromosomes migrate from
    pop i to pop j)
  args: !SimpleFlagArg
    name: t
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "Usage: <samplesize> <region in base pairs> [options]\nOptions: \n-s <random\
  \ seed>\n-d enable debugging messages\n-i <iterations>\n-t <mu> (mutation rate per\
  \ site per 2N generations)\n-C <clonalFrame> (the input clonal frame to fix simulations\
  \ on, sample names must be integers from 0 on)\n-b <b> (burn in: sequence length\
  \ in base pairs to be used to initialize the recombination process)\n-r <r> <lambda>\
  \ (r = recombination (gene conversion) initiation rate per-individual, per-base\
  \ pair, per-2N generations; lambda = mean length of recombination tract in base\
  \ pairs)\n-x <r2> <lambda2> (r2 = between-species recombination (gene conversion)\
  \ initiation rate per-individual, per-base pair, per-2N generations; lambda2 = mean\
  \ length of between-species recombination tract in base pairs)\n-T (Print each local\
  \ tree in Newick format to standard out)\n-R <inputfilename> (Tab delimited file\
  \ where first two columns indicate range of base pair positions scaled to the unit\
  \ interval and last column is ratio with respect to base line recombination rate)\n\
  -F <inputfilename> [0|1] (Tab delimited frequency distribution file where first\
  \ column indicate range of SNP allele frequencies from previous row to current row\
  \ and last column is desired bin frequency. Second parameter is 1 if SNPs with derived\
  \ allele freq > 1.0 should have alleles flipped, 0 otherwise)\n-G <alpha> (Assign\
  \ growth rate alpha across populations where alpha=-log(Np/Nr) )\n-I <n> <n1> <n2>\
  \ .. <mig_rate> (Assign all elements of the migration matrix for n populations.\
  \  Values in matrix set to mig_rate/(n-1) )\n-m <i> <j> <m>  (Assign i,j-th element\
  \ of migration matrix to m)\n-ma <m_11>..<m_12>..<m_nn> (Assign values to all elements\
  \ of migration matrix for n populations)\n-n <i> <size>   (Pop i has size set to\
  \ size*N_0) \n-g <i> <alpha>  (If used must appear after -M option)\nThe following\
  \ options modify parameters at time t.\n-eG <t> <alpha>  (Assign growth rate for\
  \ all pops at time t)\n-eg <t> <i> <alpha>  (Assign growth rate alpha of pop i at\
  \ time t)\n-eM <t> <m> (Assign migrate rate m for all elements of migration matrix\
  \ at time t)\n-em <t> <i> <j> <m_ij> (Assign migration rate for i,j-th element of\
  \ migration matrix at time t)\n-ema <t> <n> <m_11>..<m_12>..<m_nn> (Assign migration\
  \ rates  within the migration matrix for n populations at time t)\n-eN <t> <size>\
  \ (New pop sizes at time t for all pops where new sizes = size*N_0)\n-en <t> <i>\
  \ <size_i> (New pop size of pop i will be set to (size_i*N_0) at time t)\n-es <t>\
  \ <i> <p> (Split two populations.  At time t, a proportion p of chromosomes from\
  \ pop i will migrate to a population i+1)\n-ej <t> <i> <j> (Join two populations.\
  \  At time t all chromosomes migrate from pop i to pop j)\n"
generated_using:
- --help
docker_image: quay.io/biocontainers/fastsimbac:1.0.1_bd3ad13d8f79--h17a57d0_1
