!Command
command:
- read_GC.py
positional: []
named:
- !Flag
  description: Alignment file in BAM or SAM format.
  synonyms:
  - -i
  - --input-file
  args: !SimpleFlagArg
    name: INPUT_FILE
  optional: true
- !Flag
  description: Prefix of output files(s).
  synonyms:
  - -o
  - --out-prefix
  args: !SimpleFlagArg
    name: OUTPUT_PREFIX
  optional: true
- !Flag
  description: "Minimum mapping quality (phred scaled) for an\nalignment to be called\
    \ \"uniquely mapped\". default=30\n"
  synonyms:
  - -q
  - --mapq
  args: !SimpleFlagArg
    name: MAP_QUAL
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: show program's version number and exit
  synonyms:
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "Usage: read_GC.py [options]\n-------------------------------------------------------------------------------------------------\n\
  Calculate distribution of reads' GC content\n-------------------------------------------------------------------------------------------------\n\
  \n\nOptions:\n  --version             show program's version number and exit\n \
  \ -h, --help            show this help message and exit\n  -i INPUT_FILE, --input-file=INPUT_FILE\n\
  \                        Alignment file in BAM or SAM format.\n  -o OUTPUT_PREFIX,\
  \ --out-prefix=OUTPUT_PREFIX\n                        Prefix of output files(s).\n\
  \  -q MAP_QUAL, --mapq=MAP_QUAL\n                        Minimum mapping quality\
  \ (phred scaled) for an\n                        alignment to be called \"uniquely\
  \ mapped\". default=30\n"
generated_using:
- --help
