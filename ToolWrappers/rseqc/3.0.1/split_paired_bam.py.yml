!Command
command:
- split_paired_bam.py
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -i
  - --input-file
  description: "Alignment file in BAM or SAM format. BAM file should\nbe sorted and\
    \ indexed"
  args: !SimpleFlagArg
    name: INPUT_FILE
- !Flag
  optional: true
  synonyms:
  - -o
  - --out-prefix
  description: "Prefix of output BAM files. \"prefix.R1.bam\" file\ncontains the 1st\
    \ read, \"prefix.R2.bam\" file contains\nthe 2nd read\n"
  args: !SimpleFlagArg
    name: OUTPUT_PREFIX
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - --version
  description: show program's version number and exit
  args: !EmptyFlagArg {}
help_text: "Usage: split_paired_bam.py [options]\n-------------------------------------------------------------------------------------------------\n\
  Split bam file (pair-end) into 2 single-end bam file\n-------------------------------------------------------------------------------------------------\n\
  \n\nOptions:\n  --version             show program's version number and exit\n \
  \ -h, --help            show this help message and exit\n  -i INPUT_FILE, --input-file=INPUT_FILE\n\
  \                        Alignment file in BAM or SAM format. BAM file should\n\
  \                        be sorted and indexed\n  -o OUTPUT_PREFIX, --out-prefix=OUTPUT_PREFIX\n\
  \                        Prefix of output BAM files. \"prefix.R1.bam\" file\n  \
  \                      contains the 1st read, \"prefix.R2.bam\" file contains\n\
  \                        the 2nd read\n"
generated_using:
- --help
docker_image:
