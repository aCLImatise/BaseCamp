from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean

Ahmm_S_V0_1_0 = CommandToolBuilder(tool="ahmm_s", base_command=["ahmm-s"], inputs=[ToolInput(tag="in_input_file_name", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="[string]\ninput file name")), ToolInput(tag="in_sample_i_d", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="[string]\nsample id and ploidy file")), ToolInput(tag="in_ancestry_pulse_format", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="[int] [int] [float]\nancestry pulse with format, ancestral population, time,\nand proportion of final ancestry from this pulse")), ToolInput(tag="in_ne", input_type=Boolean(optional=True), prefix="--ne", doc=InputDocumentation(doc="[int]\neffective population size of the admixed population")), ToolInput(tag="in_gss", input_type=Boolean(optional=True), prefix="--gss", doc=InputDocumentation(doc="[int] [int] [int] [float] [float]\ngolden section search for optimal selection coeffient at each site.\nparameters: chromosomal position start, stop, step, selection coefficient start, stop")), ToolInput(tag="in_grid", input_type=Boolean(optional=True), prefix="--grid", doc=InputDocumentation(doc="[int] [int] [int] [float] [float] [float]\ncalculate likelihood ratios in a grid.\nparameters: chromosomal position start, stop, step, selection coefficient start, stop, step.")), ToolInput(tag="in_site", input_type=Boolean(optional=True), prefix="--site", doc=InputDocumentation(doc="[int] [float]\ncalculate likelihood ratios for a single value of s at a single site.\nparameters: chromosomal position, selective coeffient")), ToolInput(tag="in_samples_specified_read", input_type=Boolean(optional=True), prefix="-g", doc=InputDocumentation(doc="samples are specified with genotypes rather than read counts")), ToolInput(tag="in_chr", input_type=Boolean(optional=True), prefix="--chr", doc=InputDocumentation(doc="[string]\nspecify chromosome that will be analyzed\n(only necessary when there are multiple chromosomes in input file)")), ToolInput(tag="in_chr_win", input_type=Boolean(optional=True), prefix="--chr_win", doc=InputDocumentation(doc="[int] [int]\nlimit region on chromosome that will be analyzed")), ToolInput(tag="in_gss_precision", input_type=Boolean(optional=True), prefix="--gss_precision", doc=InputDocumentation(doc="[float]\nspecify precision in finding optimal value of s using golden section search. default: 1e-5")), ToolInput(tag="in_unit_coords", input_type=Boolean(optional=True), prefix="--unit_coords", doc=InputDocumentation(doc="unit for start and stop position in grid and gss search can be defined as chromosome\ncoordinates rather than as line number in input file. default off")), ToolInput(tag="in_window", input_type=Boolean(optional=True), prefix="--window", doc=InputDocumentation(doc="[string] [float]\nspecify size of Markov chain in percent or Morgans.\n'p 10' extends the markov chain 10% of chromosome length on each side of selected site.\n'm 0.1' extends the windows 0.1 Morgan on each side of the selected site.\ndefault: 'p 100'")), ToolInput(tag="in_t_raj", input_type=Boolean(optional=True), prefix="--traj", doc=InputDocumentation(doc="[int]\nchange algorithm for generating selection trajectories.\n4: 4-point approximation, 3: 3-point approximation (legacy option, not recommended).\ndefault: forward iteration.")), ToolInput(tag="in_stochastic", input_type=Boolean(optional=True), prefix="--stochastic", doc=InputDocumentation(doc="enables the stochastic method for generation selection trajectory.\n(Experimental. Slow. Use for small values of s.)")), ToolInput(tag="in_stochastic_reps", input_type=Boolean(optional=True), prefix="--stochastic_reps", doc=InputDocumentation(doc="[int]\nspecifies number of simulations for the stochastic trajectory algorithm.\ndefault: 10000")), ToolInput(tag="in_full_selection_space", input_type=Boolean(optional=True), prefix="--full_selection_space", doc=InputDocumentation(doc="turns off optimization of the selection coeffient search space. (Experimental)\n"))], outputs=[], container="quay.io/biocontainers/ancestry_hmm-s:0.9.0.2--hc9558a2_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Ahmm_S_V0_1_0().translate("wdl")

