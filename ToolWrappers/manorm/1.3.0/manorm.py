from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Int, String, Float, Directory

Manorm_V0_1_0 = CommandToolBuilder(tool="manorm", base_command=["manorm"], inputs=[ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Enable verbose log messages.")), ToolInput(tag="in_peak_one", input_type=File(optional=True), prefix="--peak1", doc=InputDocumentation(doc="Peak file of sample 1.")), ToolInput(tag="in_peak_two", input_type=File(optional=True), prefix="--peak2", doc=InputDocumentation(doc="Peak file of sample 2.")), ToolInput(tag="in_peak_format", input_type=Int(optional=True), prefix="--peak-format", doc=InputDocumentation(doc="Format of the peak files. Support ['bed',\n'bed3-summit', 'macs', 'macs2', 'narrowpeak',\n'broadpeak']. Default: bed")), ToolInput(tag="in_read_one", input_type=File(optional=True), prefix="--read1", doc=InputDocumentation(doc="Read file of sample 1.")), ToolInput(tag="in_read_two", input_type=File(optional=True), prefix="--read2", doc=InputDocumentation(doc="Read file of sample 2.")), ToolInput(tag="in_read_format", input_type=String(optional=True), prefix="--read-format", doc=InputDocumentation(doc="Format of the read files. Support ['bed', 'bedpe',\n'sam', 'bam']. Default: bed")), ToolInput(tag="in_name_one", input_type=Int(optional=True), prefix="--name1", doc=InputDocumentation(doc="Name of sample 1. If not specified, the peak file name\nwill be used.")), ToolInput(tag="in_name_two", input_type=Int(optional=True), prefix="--name2", doc=InputDocumentation(doc="Name of sample 2. If not specified, the peak file name\nwill be used.")), ToolInput(tag="in_shift_size_one", input_type=Int(optional=True), prefix="--shiftsize1", doc=InputDocumentation(doc="Single-end reads shift size for sample 1. Reads are\nshifted by `N` bp towards 3' direction and the 5' end\nof each shifted read is used to represent the genomic\nlocus of the DNA fragment. Set to 0.5 * fragment size\nof the ChIP-seq library. Default: 100")), ToolInput(tag="in_shift_size_two", input_type=Int(optional=True), prefix="--shiftsize2", doc=InputDocumentation(doc="Single-end reads shift size for sample 2. Default: 100")), ToolInput(tag="in_paired_end", input_type=Boolean(optional=True), prefix="--paired-end", doc=InputDocumentation(doc="Paired-end mode. The middle point of each read pair is\nused to represent the genomic locus of the DNA\nfragment. If specified, `--s1` and `--s2` will be\nignored.")), ToolInput(tag="in_window_size", input_type=Int(optional=True), prefix="--window-size", doc=InputDocumentation(doc="Window size to count reads and calculate read\ndensities. Set to 2000 is recommended for sharp\nhistone marks like H3K4me3 or H3K27ac and 1000 for TFs\nor DNase-seq. Default: 2000")), ToolInput(tag="in_summit_dis", input_type=Int(optional=True), prefix="--summit-dis", doc=InputDocumentation(doc="Summit-to-summit distance cutoff for overlapping\ncommon peaks. Common peaks with summit distance beyond\nthe cutoff are excluded in model fitting. Default:\n`window size` / 4")), ToolInput(tag="in_n_random", input_type=Int(optional=True), prefix="--n-random", doc=InputDocumentation(doc="Number of random simulations to test the enrichment of\npeak overlap between the specified samples. Set to 0\nto disable the testing. Default: 10")), ToolInput(tag="in_m_cut_off", input_type=Float(optional=True), prefix="--m-cutoff", doc=InputDocumentation(doc="Absolute M-value (log2-ratio) cutoff to define the\nbiased (differential binding) peaks. Default: 1.0")), ToolInput(tag="in_p_cut_off", input_type=Float(optional=True), prefix="--p-cutoff", doc=InputDocumentation(doc="P-value cutoff to define the biased peaks. Default:\n0.01")), ToolInput(tag="in_output_dir", input_type=Directory(optional=True), prefix="--output-dir", doc=InputDocumentation(doc="Output directory. Default: Current working directory")), ToolInput(tag="in_write_all", input_type=Boolean(optional=True), prefix="--write-all", doc=InputDocumentation(doc="Write two extra output files containing the results of\nthe original (unmerged) peaks.")), ToolInput(tag="in_v", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output_dir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output_dir", type_hint=File()), doc=OutputDocumentation(doc="Output directory. Default: Current working directory"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Manorm_V0_1_0().translate("wdl", allow_empty_container=True)

