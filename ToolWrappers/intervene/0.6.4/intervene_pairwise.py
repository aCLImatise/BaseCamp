from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, Float, File, Int

Intervene_Pairwise_V0_1_0 = CommandToolBuilder(tool="intervene_pairwise", base_command=["intervene", "pairwise"], inputs=[ToolInput(tag="in_input_genomic_regions", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="[INPUT [INPUT ...]], --input [INPUT [INPUT ...]]\nInput genomic regions in (BED/GTF/GFF) format.\nFor files in a directory use *.<extension>. e.g. *.bed")), ToolInput(tag="in_type", input_type=String(optional=True), prefix="--type", doc=InputDocumentation(doc="Type of input sets. Genomic regions or lists of genes/SNPs sets. Default is 'genomic'.")), ToolInput(tag="in_compute", input_type=String(optional=True), prefix="--compute", doc=InputDocumentation(doc="Compute count/fraction of overlaps or other statistical relationships.\ncount: calculates the number of overlaps.\nfrac: calculates the fraction of overlap. (Default)\njaccard: calculate the Jaccard statistic.\nreldist: calculate the distribution of relative distances.\nfisher: calculate Fisher`s statistic.\nNote: For jaccard and reldist regions should be pre-shorted or set --sort.")), ToolInput(tag="in_bed_tools_options", input_type=Float(optional=True), prefix="--bedtools-options", doc=InputDocumentation(doc="List any of the arguments available for bedtools subcommands: interset, jaccard, fisher, reldist.\nType bedtools <subcommand> --help to view all the options.\nFor example: --bedtools-options f=0.8,r,etc")), ToolInput(tag="in_corr", input_type=Boolean(optional=True), prefix="--corr", doc=InputDocumentation(doc="Compute the correlation.\nDefault is 'False'.")), ToolInput(tag="in_corr_type", input_type=String(optional=True), prefix="--corrtype", doc=InputDocumentation(doc="Select the type of correlation.\npearson: computes the Pearson correlation. (Default)\nkendall: computes the Kendall correlation.\nspearman: computes the Spearman correlation.\nNote: This only works if --corr is set.")), ToolInput(tag="in_h_type", input_type=String(optional=True), prefix="--htype", doc=InputDocumentation(doc="Heatmap plot type. Default is 'tribar'.")), ToolInput(tag="in_triangle", input_type=String(optional=True), prefix="--triangle", doc=InputDocumentation(doc="Show lower/upper triangle of the matrix as heatmap if --htype=tribar. Default is 'lower'.")), ToolInput(tag="in_diagonal", input_type=Boolean(optional=True), prefix="--diagonal", doc=InputDocumentation(doc="Show the diagonal values in the heatmap.\nDefault is 'False'.")), ToolInput(tag="in_names", input_type=File(optional=True), prefix="--names", doc=InputDocumentation(doc="Comma-separated list of names as labels for input files.\nIf it is not set file names will be used as labels.\nFor example: --names=A,B,C,D,E,F")), ToolInput(tag="in_filenames", input_type=Boolean(optional=True), prefix="--filenames", doc=InputDocumentation(doc="Use file names as labels instead.\nDefault is 'False'.")), ToolInput(tag="in_sort", input_type=Boolean(optional=True), prefix="--sort", doc=InputDocumentation(doc="Set this only if your files are not sorted.\nDefault is 'False'.")), ToolInput(tag="in_genome", input_type=String(optional=True), prefix="--genome", doc=InputDocumentation(doc="Required argument if --compute=fisher.\nNeeds to be a string assembly name like 'mm10' or 'hg38'")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="Output folder path where results will be stored.\nDefault is current working directory.")), ToolInput(tag="in_project", input_type=String(optional=True), prefix="--project", doc=InputDocumentation(doc="Project name for the output. Default is: 'Intervene'")), ToolInput(tag="in_bar_label", input_type=Int(optional=True), prefix="--barlabel", doc=InputDocumentation(doc="x-axis label of boxplot if --htype=tribar. Default is 'Set size'")), ToolInput(tag="in_bar_color", input_type=Int(optional=True), prefix="--barcolor", doc=InputDocumentation(doc="Boxplot color (hex vlaue or name, e.g. blue). Default is '#53cfff'.")), ToolInput(tag="in_font_size", input_type=Int(optional=True), prefix="--fontsize", doc=InputDocumentation(doc="Label font size. Default is '8'.")), ToolInput(tag="in_title", input_type=String(optional=True), prefix="--title", doc=InputDocumentation(doc="Heatmap main title. Default is 'Pairwise intersection'.")), ToolInput(tag="in_space", input_type=Float(optional=True), prefix="--space", doc=InputDocumentation(doc="White space between barplt and heatmap, if --htype=tribar. Default is '1.3'.")), ToolInput(tag="in_fig_type", input_type=String(optional=True), prefix="--figtype", doc=InputDocumentation(doc="Figure type for the plot. e.g. --figtype svg. Default is 'pdf'")), ToolInput(tag="in_fig_size", input_type=Int(optional=True), prefix="--figsize", doc=InputDocumentation(doc="FIGSIZE\nFigure size for the output plot (width,height). e.g.  --figsize 8 8")), ToolInput(tag="in_dpi", input_type=Int(optional=True), prefix="--dpi", doc=InputDocumentation(doc="Dots-per-inch (DPI) for the output. Default is: '300'.")), ToolInput(tag="in_script_only", input_type=Boolean(optional=True), prefix="--scriptonly", doc=InputDocumentation(doc="Set to generate Rscript only, if R/Corrplot package are not installed. Default is 'False'.")), ToolInput(tag="in_test", input_type=Boolean(optional=True), prefix="--test", doc=InputDocumentation(doc="This will run the program on test data."))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="Output folder path where results will be stored.\nDefault is current working directory."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Intervene_Pairwise_V0_1_0().translate("wdl", allow_empty_container=True)

