from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Int, Boolean, Float

Peptide_Prophet_Rb_V0_1_0 = CommandToolBuilder(tool="peptide_prophet.rb", base_command=["peptide_prophet.rb"], inputs=[ToolInput(tag="in_output_prefix", input_type=String(optional=True), prefix="--output-prefix", doc=InputDocumentation(doc="A string to prepend to the name of output files")), ToolInput(tag="in_replace_output", input_type=File(optional=True), prefix="--replace-output", doc=InputDocumentation(doc="Dont skip analyses for which the output file already exists [false]")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="An explicitly named output file.")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of processing threads to use. Set to 0 to autodetect an appropriate value [1]")), ToolInput(tag="in_database", input_type=File(optional=True), prefix="--database", doc=InputDocumentation(doc="Specify the database to use for this search. Can be a named protk database or the path to a fasta file [sphuman]")), ToolInput(tag="in_glyco", input_type=Boolean(optional=True), prefix="--glyco", doc=InputDocumentation(doc="Expect N-Glycosylation modifications as variable mod in a search or as a parameter when building statistical models [false]")), ToolInput(tag="in_maldi", input_type=Boolean(optional=True), prefix="--maldi", doc=InputDocumentation(doc="Run a search on MALDI data [false]")), ToolInput(tag="in_p_thresh", input_type=Float(optional=True), prefix="--p-thresh", doc=InputDocumentation(doc="Probability threshold below which PSMs are discarded [0.05]")), ToolInput(tag="in_use_i_cat", input_type=Boolean(optional=True), prefix="--useicat", doc=InputDocumentation(doc="Use icat information [false]")), ToolInput(tag="in_phospho", input_type=Boolean(optional=True), prefix="--phospho", doc=InputDocumentation(doc="Use phospho information [false]")), ToolInput(tag="in_use_pi", input_type=Boolean(optional=True), prefix="--usepi", doc=InputDocumentation(doc="Use pI information [false]")), ToolInput(tag="in_user_t", input_type=Boolean(optional=True), prefix="--usert", doc=InputDocumentation(doc="Use hydrophobicity / RT information [false]")), ToolInput(tag="in_accurate_mass", input_type=Boolean(optional=True), prefix="--accurate-mass", doc=InputDocumentation(doc="Use accurate mass binning [false]")), ToolInput(tag="in_no_ntt", input_type=Boolean(optional=True), prefix="--no-ntt", doc=InputDocumentation(doc="Don't use NTT model [false]")), ToolInput(tag="in_no_nmc", input_type=Boolean(optional=True), prefix="--no-nmc", doc=InputDocumentation(doc="Don't use NMC model [false]")), ToolInput(tag="in_use_gamma", input_type=Boolean(optional=True), prefix="--usegamma", doc=InputDocumentation(doc="Use Gamma distribution to model the negatives [false]")), ToolInput(tag="in_use_only_expect", input_type=Boolean(optional=True), prefix="--use-only-expect", doc=InputDocumentation(doc="Only use Expect Score as the discriminant [false]")), ToolInput(tag="in_force_fit", input_type=Boolean(optional=True), prefix="--force-fit", doc=InputDocumentation(doc="Force fitting of mixture model and bypass checks [false]")), ToolInput(tag="in_allow_alt_instruments", input_type=Boolean(optional=True), prefix="--allow-alt-instruments", doc=InputDocumentation(doc="Warning instead of exit with error if instrument types between runs is different [false]")), ToolInput(tag="in_one_at_a_time", input_type=File(optional=True), prefix="--one-ata-time", doc=InputDocumentation(doc="Create a separate pproph output file for each analysis [false]")), ToolInput(tag="in_decoy_prefix", input_type=String(optional=True), prefix="--decoy-prefix", doc=InputDocumentation(doc="Prefix for decoy sequences [decoy]")), ToolInput(tag="in_use_non_parametric_model", input_type=Boolean(optional=True), prefix="--use-non-parametric-model", doc=InputDocumentation(doc="Use Non-parametric model, can only be used with decoy option [false]")), ToolInput(tag="in_no_decoy", input_type=Boolean(optional=True), prefix="--no-decoy", doc=InputDocumentation(doc="Don't use decoy sequences to pin down the negative distribution [false]")), ToolInput(tag="in_experiment_label", input_type=String(optional=True), prefix="--experiment-label", doc=InputDocumentation(doc="used to commonly label all spectra belonging to one experiment (required by iProphet)")), ToolInput(tag="in_file_two_dot_pep_dot_xml", input_type=Int(), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_replace_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_replace_output", type_hint=File()), doc=OutputDocumentation(doc="Dont skip analyses for which the output file already exists [false]")), ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="An explicitly named output file.")), ToolOutput(tag="out_one_at_a_time", output_type=File(optional=True), selector=InputSelector(input_to_select="in_one_at_a_time", type_hint=File()), doc=OutputDocumentation(doc="Create a separate pproph output file for each analysis [false]"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Peptide_Prophet_Rb_V0_1_0().translate("wdl", allow_empty_container=True)

