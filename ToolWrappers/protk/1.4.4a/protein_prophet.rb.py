from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Boolean, Float, Int

Protein_Prophet_Rb_V0_1_0 = CommandToolBuilder(tool="protein_prophet.rb", base_command=["protein_prophet.rb"], inputs=[ToolInput(tag="in_output_prefix", input_type=String(optional=True), prefix="--output-prefix", doc=InputDocumentation(doc="A string to prepend to the name of output files")), ToolInput(tag="in_replace_output", input_type=File(optional=True), prefix="--replace-output", doc=InputDocumentation(doc="Dont skip analyses for which the output file already exists [false]")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="An explicitly named output file.")), ToolInput(tag="in_glyco", input_type=Boolean(optional=True), prefix="--glyco", doc=InputDocumentation(doc="Expect N-Glycosylation modifications as variable mod in a search or as a parameter when building statistical models [false]")), ToolInput(tag="in_i_prophet_input", input_type=Boolean(optional=True), prefix="--iprophet-input", doc=InputDocumentation(doc="Inputs are from iProphet [false]")), ToolInput(tag="in_no_occam", input_type=Boolean(optional=True), prefix="--no-occam", doc=InputDocumentation(doc="Do not attempt to derive the simplest protein list explaining observed peptides [false]")), ToolInput(tag="in_group_wts", input_type=Boolean(optional=True), prefix="--group-wts", doc=InputDocumentation(doc="Check peptide's total weight (rather than actual weight) in the Protein Group against the threshold [false]")), ToolInput(tag="in_norm_prot_len", input_type=Boolean(optional=True), prefix="--norm-protlen", doc=InputDocumentation(doc="Normalize NSP using Protein Length [false]")), ToolInput(tag="in_log_prob", input_type=Boolean(optional=True), prefix="--log-prob", doc=InputDocumentation(doc="Use the log of probability in the confidence calculations [false]")), ToolInput(tag="in_conf_em", input_type=Boolean(optional=True), prefix="--confem", doc=InputDocumentation(doc="Use the EM to compute probability given the confidence [false]")), ToolInput(tag="in_all_peps", input_type=Boolean(optional=True), prefix="--allpeps", doc=InputDocumentation(doc="Consider all possible peptides in the database in the confidence model [false]")), ToolInput(tag="in_unmapped", input_type=Boolean(optional=True), prefix="--unmapped", doc=InputDocumentation(doc="Report results for unmapped proteins [false]")), ToolInput(tag="in_instances", input_type=Boolean(optional=True), prefix="--instances", doc=InputDocumentation(doc="Use Expected Number of Ion Instances to adjust the peptide probabilities prior to NSP adjustment [false]")), ToolInput(tag="in_delude", input_type=Boolean(optional=True), prefix="--delude", doc=InputDocumentation(doc="Do NOT use peptide degeneracy information when assessing proteins [false]")), ToolInput(tag="in_min_prob", input_type=Float(optional=True), prefix="--minprob", doc=InputDocumentation(doc="Minimum peptide prophet probability for peptides to be considered [0.05]")), ToolInput(tag="in_min_indep", input_type=Int(optional=True), prefix="--minindep", doc=InputDocumentation(doc="Minimum percentage of independent peptides required for a protein [0]")), ToolInput(tag="in_file_two_dot_pep_dot_xml", input_type=Int(), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_replace_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_replace_output", type_hint=File()), doc=OutputDocumentation(doc="Dont skip analyses for which the output file already exists [false]")), ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="An explicitly named output file."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Protein_Prophet_Rb_V0_1_0().translate("wdl", allow_empty_container=True)

