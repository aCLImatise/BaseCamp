from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean

Rappas_V0_1_0 = CommandToolBuilder(tool="rappas", base_command=["rappas"], inputs=[ToolInput(tag="in_xms", input_type=Boolean(optional=True), prefix="-Xms", doc=InputDocumentation(doc="-> memory allocated at startup. (m=MegaByte, g=GigaByte)")), ToolInput(tag="in_x_mx", input_type=Boolean(optional=True), prefix="-Xmx", doc=InputDocumentation(doc="-> maximum memory allocated to the process.")), ToolInput(tag="in_arbinary_binary_marginal", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc="(--arbinary)   [file] Binary for marginal AR, currently 'phyml' and\n'baseml' (from PAML) are supported. (b phase)")), ToolInput(tag="in_database_database_phase", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc="(--database)   [file] The database of ancestral kmers. (b|p phase)")), ToolInput(tag="in__phase_one", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="(--phase)      [b|p] One of 'b' for 'Build' or 'p' for 'Place'\nb: Build DB of phylo-kmers (done 1 time).\np: Phylogenetic placement itself (done n times)\nrequires the DB generated during 'build' phase.")), ToolInput(tag="in__refalign_reference", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="(--refalign)   [file] Reference alignment in fasta format.\nIt must be the multiple alignment from which was\nbuilt the reference tree loaded with -t. (b phase)")), ToolInput(tag="in__states_used", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="(--states)     ['nucl'|'amino'] States used in analysis. (b|p phase)")), ToolInput(tag="in__reftree_tree", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="(--reftree)    [file] Reference tree, in newick format.")), ToolInput(tag="in_queries_fasta_queries", input_type=Boolean(optional=True), prefix="-q", doc=InputDocumentation(doc="(--queries)    [file[,file,...]] Fasta queries to place on the tree.\nCan be a list of files separated by ','. (b|p phase)")), ToolInput(tag="in_verbosity_verbosity_level", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="(--verbosity)  [0] Verbosity level: -1=none ; 0=default ; 1=high")), ToolInput(tag="in__workdir_directory", input_type=Boolean(optional=True), prefix="-w", doc=InputDocumentation(doc="(--workdir)    [path] Working directory for temp files. (b|p phase)")), ToolInput(tag="in_keep_at_most", input_type=Boolean(optional=True), prefix="--keep-at-most", doc=InputDocumentation(doc="[7] Max number of placement per query kept in\nthe jplace output. (p phase)")), ToolInput(tag="in_keep_factor", input_type=Boolean(optional=True), prefix="--keep-factor", doc=InputDocumentation(doc="[0.01] Report placement with likelihood_ratio higher\nthan (factor x best_likelihood_ratio). (p phase)")), ToolInput(tag="in_write_reduction", input_type=Boolean(optional=True), prefix="--write-reduction", doc=InputDocumentation(doc="[file] Write reduced alignment to file. (b phase)")), ToolInput(tag="in_guppy_compat", input_type=Boolean(optional=True), prefix="--guppy-compat", doc=InputDocumentation(doc="[] Ensures output is Guppy compatible. (p phase)")), ToolInput(tag="in_db_filename", input_type=Boolean(optional=True), prefix="--dbfilename", doc=InputDocumentation(doc="[string] Set DB filename. (b phase)")), ToolInput(tag="in__alpha_gammma", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="(--alpha)      [1.0] Gammma shape parameter used in AR . (b phase)")), ToolInput(tag="in_categories_categories_used", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="(--categories) [4] # categories used in AR . (b phase)")), ToolInput(tag="in__ghosts_injected", input_type=Boolean(optional=True), prefix="-g", doc=InputDocumentation(doc="(--ghosts)     [1] # ghost nodes injected per branches. (b phase)")), ToolInput(tag="in__kmer_length", input_type=Boolean(optional=True), prefix="-k", doc=InputDocumentation(doc="(--k)          [8] k-mer length used at DB build. (b mode)")), ToolInput(tag="in__model_used", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="(--model)      [GTR|LG] Model used in AR, one of the following:\nnucl  : JC69, HKY85, K80, F81, TN93, GTR\namino : LG, WAG, JTT, Dayhoff, DCMut, CpREV,\nmMtREV, MtMam, MtArt")), ToolInput(tag="in_ar_parameters", input_type=Boolean(optional=True), prefix="--arparameters", doc=InputDocumentation(doc="[string] Parameters passed to the software used for\nanc. seq. reconstuct. Overrides -a,-c,-m options.\nValue must be quoted by ' or '. Do not set options\n-i,-u,--ancestral (managed by RAPPAS). (b phase)\nPhyML example: '-m HIVw -c 10 -f m -v 0.0 --r_seed 1'")), ToolInput(tag="in_convert_uo", input_type=Boolean(optional=True), prefix="--convertUO", doc=InputDocumentation(doc="[] U,O amino acids are converted to C,L. (b|p phase)")), ToolInput(tag="in_force_root", input_type=Boolean(optional=True), prefix="--force-root", doc=InputDocumentation(doc="[] Root input tree (if unrooted) by adding a root\nnode on righmost branch of the trifurcation.(b phase)")), ToolInput(tag="in_gap_jump_thresh", input_type=Boolean(optional=True), prefix="--gap-jump-thresh", doc=InputDocumentation(doc="[0.3] Gap ratio above which gap jumps are activated.")), ToolInput(tag="in_no_reduction", input_type=Boolean(optional=True), prefix="--no-reduction", doc=InputDocumentation(doc="[] Do not operate alignment reduction. This will\nkeep all sites of input reference alignment and\nmay produce erroneous ancestral k-mers. (b phase)")), ToolInput(tag="in_ratio_reduction", input_type=Boolean(optional=True), prefix="--ratio-reduction", doc=InputDocumentation(doc="[0.99] Ratio for alignment reduction, e.g. sites\nholding >99% gaps are ignored. (b phase)")), ToolInput(tag="in_omega", input_type=Boolean(optional=True), prefix="--omega", doc=InputDocumentation(doc="[1.0] Modifier levelling the threshold used during\nphylo-kmer filtering, T=(omega/#states)^k .(b phase)")), ToolInput(tag="in_use_unrooted", input_type=Boolean(optional=True), prefix="--use_unrooted", doc=InputDocumentation(doc="[] Confirms you accept to use an unrooted reference\ntree (option -t). The trifurcation described by the\nnewick file will be considered as root. Be aware that\nmeaningless roots may impact accuracy. (b phase)")), ToolInput(tag="in_amb_with_max", input_type=Boolean(optional=True), prefix="--ambwithmax", doc=InputDocumentation(doc="[] Treat ambiguities with max, not mean. (p phase)")), ToolInput(tag="in_ar_dir", input_type=Boolean(optional=True), prefix="--ardir", doc=InputDocumentation(doc="[dir] Skip ancestral sequence reconstruction, and\nuses outputs from the specified directory. (b phase)")), ToolInput(tag="in_ar_input_only", input_type=Boolean(optional=True), prefix="--arinputonly", doc=InputDocumentation(doc="[] Generate only AR inputs. (b phase)")), ToolInput(tag="in_ar_only", input_type=Boolean(optional=True), prefix="--aronly", doc=InputDocumentation(doc="[] Launch AR, but not DB build. (b phase)")), ToolInput(tag="in_db_in_ram", input_type=Boolean(optional=True), prefix="--dbinram", doc=InputDocumentation(doc="[] Build DB, do not save it to a file, but directly\nplace queries given via -q instead.")), ToolInput(tag="in_do_n_jumps", input_type=Boolean(optional=True), prefix="--do-n-jumps", doc=InputDocumentation(doc="[] Shifts from 1 to n jumps. (b phase)")), ToolInput(tag="in_force_gap_jump", input_type=Boolean(optional=True), prefix="--force-gap-jump", doc=InputDocumentation(doc="[] Forces gap jump even if %gap<thresh. (b phase)")), ToolInput(tag="in_json_db", input_type=Boolean(optional=True), prefix="--jsondb", doc=InputDocumentation(doc="[] DB written as json. (careful, huge file outputs!)")), ToolInput(tag="in_no_amb", input_type=Boolean(optional=True), prefix="--noamb", doc=InputDocumentation(doc="[] Do not treat ambiguous states. (p phase)")), ToolInput(tag="in_threads", input_type=Boolean(optional=True), prefix="--threads", doc=InputDocumentation(doc="[4] #threads used in AR (if raxml-ng). (b phase)"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Rappas_V0_1_0().translate("wdl", allow_empty_container=True)

