from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Dsr2Html_V0_1_0 = CommandToolBuilder(tool="dsr2html", base_command=["dsr2html"], inputs=[ToolInput(tag="in_arguments", input_type=Boolean(optional=True), prefix="--arguments", doc=InputDocumentation(doc="print expanded command line arguments")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="quiet mode, print no warnings and errors")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="verbose mode, print processing details")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="debug mode, print debug information")), ToolInput(tag="in_log_level", input_type=Boolean(optional=True), prefix="--log-level", doc=InputDocumentation(doc="[l]evel: string constant\n(fatal, error, warn, info, debug, trace)\nuse level l for the logger")), ToolInput(tag="in_log_config", input_type=Boolean(optional=True), prefix="--log-config", doc=InputDocumentation(doc="[f]ilename: string\nuse config file f for the logger")), ToolInput(tag="in_read_dataset", input_type=Boolean(optional=True), prefix="--read-dataset", doc=InputDocumentation(doc="read data set without file meta information")), ToolInput(tag="in__readxferauto_use", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="=  --read-xfer-auto        use TS recognition (default)")), ToolInput(tag="in_read_xfer_detect", input_type=Boolean(optional=True), prefix="--read-xfer-detect", doc=InputDocumentation(doc="ignore TS specified in the file meta header")), ToolInput(tag="in_read_xfer_little", input_type=Boolean(optional=True), prefix="--read-xfer-little", doc=InputDocumentation(doc="read with explicit VR little endian TS")), ToolInput(tag="in_read_xfer_big", input_type=Boolean(optional=True), prefix="--read-xfer-big", doc=InputDocumentation(doc="read with explicit VR big endian TS")), ToolInput(tag="in_read_xfer_implicit", input_type=Boolean(optional=True), prefix="--read-xfer-implicit", doc=InputDocumentation(doc="read with implicit VR little endian TS")), ToolInput(tag="in_processing_details", input_type=Boolean(optional=True), prefix="--processing-details", doc=InputDocumentation(doc="show currently processed content item")), ToolInput(tag="in_unknown_relationship", input_type=Boolean(optional=True), prefix="--unknown-relationship", doc=InputDocumentation(doc="accept unknown/missing relationship type")), ToolInput(tag="in_invalid_item_value", input_type=Boolean(optional=True), prefix="--invalid-item-value", doc=InputDocumentation(doc="accept invalid content item value\n(e.g. violation of VR or VM definition)")), ToolInput(tag="in_ignore_constraints", input_type=Boolean(optional=True), prefix="--ignore-constraints", doc=InputDocumentation(doc="ignore relationship content constraints")), ToolInput(tag="in_ignore_item_errors", input_type=Boolean(optional=True), prefix="--ignore-item-errors", doc=InputDocumentation(doc="do not abort on content item errors, just warn\n(e.g. missing value type specific attributes)")), ToolInput(tag="in_skip_invalid_items", input_type=Boolean(optional=True), prefix="--skip-invalid-items", doc=InputDocumentation(doc="skip invalid content items (incl. sub-tree)")), ToolInput(tag="in_disable_vr_checker", input_type=Boolean(optional=True), prefix="--disable-vr-checker", doc=InputDocumentation(doc="disable check for VR-conformant string values")), ToolInput(tag="in_charset_check_all", input_type=Boolean(optional=True), prefix="--charset-check-all", doc=InputDocumentation(doc="check all data elements with string values\n(default: only PN, LO, LT, SH, ST, UC and UT)")), ToolInput(tag="in_never_expand_inline", input_type=Boolean(optional=True), prefix="--never-expand-inline", doc=InputDocumentation(doc="never expand content items inline")), ToolInput(tag="in_no_document_header", input_type=Boolean(optional=True), prefix="--no-document-header", doc=InputDocumentation(doc="do not render general document information")), ToolInput(tag="in_dsr_file_in", input_type=String(), position=0, doc=InputDocumentation(doc="DICOM SR input filename to be rendered")), ToolInput(tag="in_html_file_out", input_type=String(), position=1, doc=InputDocumentation(doc="HTML/XHTML output filename (default: stdout)")), ToolInput(tag="in_string", input_type=String(), position=0, doc=InputDocumentation(doc="assume charset c if no extended charset declared"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Dsr2Html_V0_1_0().translate("wdl", allow_empty_container=True)

