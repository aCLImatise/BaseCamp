from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Img2Dcm_V0_1_0 = CommandToolBuilder(tool="img2dcm", base_command=["img2dcm"], inputs=[ToolInput(tag="in_arguments", input_type=Boolean(optional=True), prefix="--arguments", doc=InputDocumentation(doc="print expanded command line arguments")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="quiet mode, print no warnings and errors")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="verbose mode, print processing details")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="debug mode, print debug information")), ToolInput(tag="in_log_level", input_type=Boolean(optional=True), prefix="--log-level", doc=InputDocumentation(doc="[l]evel: string constant\n(fatal, error, warn, info, debug, trace)\nuse level l for the logger")), ToolInput(tag="in_log_config", input_type=Boolean(optional=True), prefix="--log-config", doc=InputDocumentation(doc="[f]ilename: string\nuse config file f for the logger")), ToolInput(tag="in_input_format", input_type=Boolean(optional=True), prefix="--input-format", doc=InputDocumentation(doc="[i]nput file format: string\nsupported formats: JPEG (default), BMP")), ToolInput(tag="in_dataset_from", input_type=Boolean(optional=True), prefix="--dataset-from", doc=InputDocumentation(doc="[f]ilename: string\nuse dataset from DICOM file f")), ToolInput(tag="in_study_from", input_type=Boolean(optional=True), prefix="--study-from", doc=InputDocumentation(doc="[f]ilename: string\nread patient/study from DICOM file f")), ToolInput(tag="in_series_from", input_type=Boolean(optional=True), prefix="--series-from", doc=InputDocumentation(doc="[f]ilename: string\nread patient/study/series from DICOM file f")), ToolInput(tag="in_instance_inc", input_type=Boolean(optional=True), prefix="--instance-inc", doc=InputDocumentation(doc="increase instance number read from DICOM file")), ToolInput(tag="in_disable_progr", input_type=Boolean(optional=True), prefix="--disable-progr", doc=InputDocumentation(doc="disable support for progressive JPEG")), ToolInput(tag="in_disable_ext", input_type=Boolean(optional=True), prefix="--disable-ext", doc=InputDocumentation(doc="disable support for extended sequential JPEG")), ToolInput(tag="in_insist_on_jfif", input_type=Boolean(optional=True), prefix="--insist-on-jfif", doc=InputDocumentation(doc="insist on JFIF header")), ToolInput(tag="in_keep_appn", input_type=Boolean(optional=True), prefix="--keep-appn", doc=InputDocumentation(doc="keep APPn sections (except JFIF)")), ToolInput(tag="in_do_checks", input_type=Boolean(optional=True), prefix="--do-checks", doc=InputDocumentation(doc="enable attribute validity checking (default)")), ToolInput(tag="in_no_checks", input_type=Boolean(optional=True), prefix="--no-checks", doc=InputDocumentation(doc="disable attribute validity checking")), ToolInput(tag="in_no_type_two_insert", input_type=Boolean(optional=True), prefix="--no-type2-insert", doc=InputDocumentation(doc="do not insert missing type 2 attributes\n(only with --do-checks)")), ToolInput(tag="in_no_type_one_invent", input_type=Boolean(optional=True), prefix="--no-type1-invent", doc=InputDocumentation(doc="do not invent missing type 1 attributes\n(only with --do-checks)")), ToolInput(tag="in_no_latin_one", input_type=Boolean(optional=True), prefix="--no-latin1", doc=InputDocumentation(doc="keep 7-bit ASCII as standard character set")), ToolInput(tag="in_key", input_type=Boolean(optional=True), prefix="--key", doc=InputDocumentation(doc="[k]ey: gggg,eeee='str', path or dict. name='str'\nadd further attribute")), ToolInput(tag="in_sec_capture", input_type=Boolean(optional=True), prefix="--sec-capture", doc=InputDocumentation(doc="write Secondary Capture SOP class (default)")), ToolInput(tag="in_new_sc", input_type=Boolean(optional=True), prefix="--new-sc", doc=InputDocumentation(doc="write new Secondary Capture SOP classes")), ToolInput(tag="in_vl_photo", input_type=Boolean(optional=True), prefix="--vl-photo", doc=InputDocumentation(doc="write Visible Light Photographic SOP class")), ToolInput(tag="in_write_dataset", input_type=Boolean(optional=True), prefix="--write-dataset", doc=InputDocumentation(doc="write data set without file meta information")), ToolInput(tag="in_group_length_remove", input_type=Boolean(optional=True), prefix="--group-length-remove", doc=InputDocumentation(doc="always write without group length elements")), ToolInput(tag="in_length_undefined", input_type=Boolean(optional=True), prefix="--length-undefined", doc=InputDocumentation(doc="write with undefined lengths")), ToolInput(tag="in_padding_off", input_type=Boolean(optional=True), prefix="--padding-off", doc=InputDocumentation(doc="no padding (implicit if --write-dataset)")), ToolInput(tag="in_img_file_in", input_type=String(), position=0, doc=InputDocumentation(doc="image input filename")), ToolInput(tag="in_dcm_file_out", input_type=String(), position=1, doc=InputDocumentation(doc="DICOM output filename"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Img2Dcm_V0_1_0().translate("wdl", allow_empty_container=True)

