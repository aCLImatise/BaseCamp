from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Dcmconv_V0_1_0 = CommandToolBuilder(tool="dcmconv", base_command=["dcmconv"], inputs=[ToolInput(tag="in_arguments", input_type=Boolean(optional=True), prefix="--arguments", doc=InputDocumentation(doc="print expanded command line arguments")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="quiet mode, print no warnings and errors")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="verbose mode, print processing details")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="debug mode, print debug information")), ToolInput(tag="in_log_level", input_type=Boolean(optional=True), prefix="--log-level", doc=InputDocumentation(doc="[l]evel: string constant\n(fatal, error, warn, info, debug, trace)\nuse level l for the logger")), ToolInput(tag="in_log_config", input_type=Boolean(optional=True), prefix="--log-config", doc=InputDocumentation(doc="[f]ilename: string\nuse config file f for the logger")), ToolInput(tag="in_read_dataset", input_type=Boolean(optional=True), prefix="--read-dataset", doc=InputDocumentation(doc="read data set without file meta information")), ToolInput(tag="in__readxferauto_use", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="=  --read-xfer-auto       use TS recognition (default)")), ToolInput(tag="in_read_xfer_detect", input_type=Boolean(optional=True), prefix="--read-xfer-detect", doc=InputDocumentation(doc="ignore TS specified in the file meta header")), ToolInput(tag="in_read_xfer_little", input_type=Boolean(optional=True), prefix="--read-xfer-little", doc=InputDocumentation(doc="read with explicit VR little endian TS")), ToolInput(tag="in_read_xfer_big", input_type=Boolean(optional=True), prefix="--read-xfer-big", doc=InputDocumentation(doc="read with explicit VR big endian TS")), ToolInput(tag="in_read_xfer_implicit", input_type=Boolean(optional=True), prefix="--read-xfer-implicit", doc=InputDocumentation(doc="read with implicit VR little endian TS")), ToolInput(tag="in_ignore_meta_length", input_type=Boolean(optional=True), prefix="--ignore-meta-length", doc=InputDocumentation(doc="ignore file meta information group length")), ToolInput(tag="in_ignore_explicit_vr", input_type=Boolean(optional=True), prefix="--ignore-explicit-vr", doc=InputDocumentation(doc="ignore explicit VR (prefer data dictionary)")), ToolInput(tag="in_assume_implicit", input_type=Boolean(optional=True), prefix="--assume-implicit", doc=InputDocumentation(doc="try to read with implicit VR little endian TS")), ToolInput(tag="in_disable_cp_two_four_six", input_type=Boolean(optional=True), prefix="--disable-cp246", doc=InputDocumentation(doc="read undefined len UN as explicit VR")), ToolInput(tag="in_retain_un", input_type=Boolean(optional=True), prefix="--retain-un", doc=InputDocumentation(doc="retain elements as UN (default)")), ToolInput(tag="in_maxlength_dict", input_type=Boolean(optional=True), prefix="--maxlength-dict", doc=InputDocumentation(doc="read as defined in dictionary (default)")), ToolInput(tag="in_use_delim_items", input_type=Boolean(optional=True), prefix="--use-delim-items", doc=InputDocumentation(doc="use delimitation items from dataset (default)")), ToolInput(tag="in_handle_parse_errors", input_type=Boolean(optional=True), prefix="--handle-parse-errors", doc=InputDocumentation(doc="handle parse errors and stop parsing (default)")), ToolInput(tag="in_disable_correction", input_type=Boolean(optional=True), prefix="--disable-correction", doc=InputDocumentation(doc="disable automatic data correction")), ToolInput(tag="in_transliterate", input_type=Boolean(optional=True), prefix="--transliterate", doc=InputDocumentation(doc="try to approximate characters that cannot be\nrepresented through similar looking characters")), ToolInput(tag="in_discard_illegal", input_type=Boolean(optional=True), prefix="--discard-illegal", doc=InputDocumentation(doc="discard characters that cannot be represented\nin destination character set")), ToolInput(tag="in_no_invalid_groups", input_type=Boolean(optional=True), prefix="--no-invalid-groups", doc=InputDocumentation(doc="remove elements with invalid group number")), ToolInput(tag="in_write_dataset", input_type=Boolean(optional=True), prefix="--write-dataset", doc=InputDocumentation(doc="write data set without file meta information")), ToolInput(tag="in_disable_new_vr", input_type=Boolean(optional=True), prefix="--disable-new-vr", doc=InputDocumentation(doc="disable support for new VRs, convert to OB")), ToolInput(tag="in_group_length_remove", input_type=Boolean(optional=True), prefix="--group-length-remove", doc=InputDocumentation(doc="always write without group length elements")), ToolInput(tag="in_length_undefined", input_type=Boolean(optional=True), prefix="--length-undefined", doc=InputDocumentation(doc="write with undefined lengths")), ToolInput(tag="in_abort_oversized", input_type=Boolean(optional=True), prefix="--abort-oversized", doc=InputDocumentation(doc="abort on oversized explicit sequences/items")), ToolInput(tag="in__paddingretain_change", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="=  --padding-retain       do not change padding\n(default if not --write-dataset)")), ToolInput(tag="in_padding_off", input_type=Boolean(optional=True), prefix="--padding-off", doc=InputDocumentation(doc="no padding (implicit if --write-dataset)")), ToolInput(tag="in_dcm_file_in", input_type=String(), position=0, doc=InputDocumentation(doc="DICOM input filename to be converted")), ToolInput(tag="in_dcm_file_out", input_type=String(), position=1, doc=InputDocumentation(doc="DICOM output filename"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Dcmconv_V0_1_0().translate("wdl", allow_empty_container=True)

