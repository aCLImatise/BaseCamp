class: CommandLineTool
id: augur_filter.cwl
inputs:
- id: in_metadata
  doc: 'sequence metadata, as CSV or TSV (default: None)'
  type: File?
  inputBinding:
    prefix: --metadata
- id: in_sequences
  doc: 'sequences in FASTA or VCF format (default: None)'
  type: string?
  inputBinding:
    prefix: --sequences
- id: in_sequence_index
  doc: "sequence composition report generated by augur index.\nIf not provided, an\
    \ index will be created on the fly.\n(default: None)"
  type: string?
  inputBinding:
    prefix: --sequence-index
- id: in_query
  doc: "Filter samples by attribute. Uses Pandas Dataframe\nquerying, see https://pandas.pydata.org/pandas-\n\
    docs/stable/user_guide/indexing.html#indexing-query\nfor syntax. (e.g., --query\
    \ \"country == 'Colombia'\" or\n--query \"(country == 'USA' & (division ==\n'Washington'))\"\
    ) (default: None)"
  type: string?
  inputBinding:
    prefix: --query
- id: in_min_date
  doc: "minimal cutoff for date; may be specified as an Augur-\nstyle numeric date\
    \ (with the year as the integer part)\nor YYYY-MM-DD (default: None)"
  type: long?
  inputBinding:
    prefix: --min-date
- id: in_max_date
  doc: "maximal cutoff for date; may be specified as an Augur-\nstyle numeric date\
    \ (with the year as the integer part)\nor YYYY-MM-DD (default: None)"
  type: long?
  inputBinding:
    prefix: --max-date
- id: in_exclude_ambiguous_dates_by
  doc: "Exclude ambiguous dates by day (e.g., 2020-09-XX),\nmonth (e.g., 2020-XX-XX),\
    \ year (e.g., 200X-10-01), or\nany date fields. An ambiguous year makes the\n\
    corresponding month and day ambiguous, too, even if\nthose fields have unambiguous\
    \ values (e.g.,\n\"201X-10-01\"). Similarly, an ambiguous month makes the\ncorresponding\
    \ day ambiguous (e.g., \"2010-XX-01\").\n(default: None)"
  type: string?
  inputBinding:
    prefix: --exclude-ambiguous-dates-by
- id: in_exclude
  doc: "file(s) with list of strains to exclude (default:\nNone)"
  type: string[]
  inputBinding:
    prefix: --exclude
- id: in_exclude_where
  doc: "Exclude samples matching these conditions. Ex:\n\"host=rat\" or \"host!=rat\"\
    . Multiple values are\nprocessed as OR (matching any of those specified will\n\
    be excluded), not AND (default: None)"
  type: string[]
  inputBinding:
    prefix: --exclude-where
- id: in_exclude_all
  doc: "exclude all strains by default. Use this with the\ninclude arguments to select\
    \ a specific subset of\nstrains. (default: False)"
  type: boolean?
  inputBinding:
    prefix: --exclude-all
- id: in_include
  doc: "file(s) with list of strains to include regardless of\npriorities or subsampling\
    \ (default: None)"
  type: string[]
  inputBinding:
    prefix: --include
- id: in_include_where
  doc: "Include samples with these values. ex: host=rat.\nMultiple values are processed\
    \ as OR (having any of\nthose specified will be included), not AND. This rule\n\
    is applied last and ensures any sequences matching\nthese rules will be included.\
    \ (default: None)"
  type: string[]
  inputBinding:
    prefix: --include-where
- id: in_priority
  doc: "file with list of priority scores for strains (strain\npriority) (default:\
    \ None)"
  type: File?
  inputBinding:
    prefix: --priority
- id: in_min_length
  doc: 'minimal length of the sequences (default: None)'
  type: long?
  inputBinding:
    prefix: --min-length
- id: in_non_nucleotide
  doc: "exclude sequences that contain illegal characters\n(default: False)"
  type: boolean?
  inputBinding:
    prefix: --non-nucleotide
- id: in_group_by
  doc: "categories with respect to subsample; two virtual\nfields, \"month\" and \"\
    year\", are supported if they\ndon't already exist as real fields but a \"date\"\
    \ field\ndoes exist (default: None)"
  type: string[]
  inputBinding:
    prefix: --group-by
- id: in_sequences_per_group
  doc: "subsample to no more than this number of sequences per\ncategory (default:\
    \ None)"
  type: long?
  inputBinding:
    prefix: --sequences-per-group
- id: in_subsample_max_sequences
  doc: "subsample to no more than this number of sequences\n(default: None)"
  type: long?
  inputBinding:
    prefix: --subsample-max-sequences
- id: in_probabilistic_sampling
  doc: "Enable probabilistic sampling during subsampling. This\nis useful when there\
    \ are more groups than requested\nsequences. This option only applies when `--subsample-\n\
    max-sequences` is provided. (default: True)"
  type: boolean?
  inputBinding:
    prefix: --probabilistic-sampling
- id: in_no_probabilistic_sampling
  doc: "random number generator seed to allow reproducible\nsub-sampling (with same\
    \ input data). Can be number or\nstring. (default: None)"
  type: long?
  inputBinding:
    prefix: --no-probabilistic-sampling
- id: in_output_sequences
  doc: 'filtered sequences in FASTA format (default: None)'
  type: string?
  inputBinding:
    prefix: --output-sequences
- id: in_output_metadata
  doc: "metadata for strains that passed filters (default:\nNone)"
  type: string?
  inputBinding:
    prefix: --output-metadata
- id: in_output_strains
  doc: "list of strains that passed filters (no header)\n(default: None)\n"
  type: string?
  inputBinding:
    prefix: --output-strains
outputs:
- id: out_stdout
  doc: Standard output stream
  type: stdout
hints:
- class: DockerRequirement
  dockerPull: quay.io/biocontainers/augur:11.2.0--py_0
cwlVersion: v1.1
baseCommand:
- augur
- filter
