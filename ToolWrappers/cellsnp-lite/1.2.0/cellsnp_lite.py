from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Directory, String, Boolean, Int, Float

Cellsnp_Lite_V0_1_0 = CommandToolBuilder(tool="cellsnp_lite", base_command=["cellsnp-lite"], inputs=[ToolInput(tag="in_sam_file", input_type=File(optional=True), prefix="--samFile", doc=InputDocumentation(doc="Indexed sam/bam file(s), comma separated multiple samples.\nMode 1&2: one sam/bam file with single cell.\nMode 3: one or multiple bulk sam/bam files,\nno barcodes needed, but sample ids and regionsVCF.")), ToolInput(tag="in_sam_file_list", input_type=File(optional=True), prefix="--samFileList", doc=InputDocumentation(doc="A list file containing bam files, each per line, for Mode 3.")), ToolInput(tag="in_outdir", input_type=Directory(optional=True), prefix="--outDir", doc=InputDocumentation(doc="Output directory for VCF and sparse matrices.")), ToolInput(tag="in_regions_vcf", input_type=File(optional=True), prefix="--regionsVCF", doc=InputDocumentation(doc="A vcf file listing all candidate SNPs, for fetch each variants.\nIf None, pileup the genome. Needed for bulk samples.")), ToolInput(tag="in_targets_vcf", input_type=File(optional=True), prefix="--targetsVCF", doc=InputDocumentation(doc="Similar as -R, but the next position is accessed by streaming rather\nthan indexing/jumping (like -T in samtools/bcftools mpileup).")), ToolInput(tag="in_barcode_file", input_type=File(optional=True), prefix="--barcodeFile", doc=InputDocumentation(doc="A plain file listing all effective cell barcode.")), ToolInput(tag="in_sample_list", input_type=File(optional=True), prefix="--sampleList", doc=InputDocumentation(doc="A list file containing sample IDs, each per line.")), ToolInput(tag="in_sample_ids", input_type=String(optional=True), prefix="--sampleIDs", doc=InputDocumentation(doc="Comma separated sample ids.")), ToolInput(tag="in_genotype", input_type=Boolean(optional=True), prefix="--genotype", doc=InputDocumentation(doc="If use, do genotyping in addition to counting.")), ToolInput(tag="in_gzip", input_type=Boolean(optional=True), prefix="--gzip", doc=InputDocumentation(doc="If use, the output files will be zipped into BGZF format.")), ToolInput(tag="in_print_skip_snps", input_type=Boolean(optional=True), prefix="--printSkipSNPs", doc=InputDocumentation(doc="If use, the SNPs skipped when loading VCF will be printed.")), ToolInput(tag="in_nproc", input_type=Int(optional=True), prefix="--nproc", doc=InputDocumentation(doc="Number of subprocesses [1]")), ToolInput(tag="in_chrom", input_type=Int(optional=True), prefix="--chrom", doc=InputDocumentation(doc="The chromosomes to use, comma separated [1 to 22]")), ToolInput(tag="in_cell_tag", input_type=String(optional=True), prefix="--cellTAG", doc=InputDocumentation(doc="Tag for cell barcodes, turn off with None [CB]")), ToolInput(tag="in_umi_tag", input_type=String(optional=True), prefix="--UMItag", doc=InputDocumentation(doc="Tag for UMI: UR, Auto, None. For Auto mode, use UR if barcodes is inputted,\notherwise use None. None mode means no UMI but read counts [Auto]")), ToolInput(tag="in_min_count", input_type=Int(optional=True), prefix="--minCOUNT", doc=InputDocumentation(doc="Minimum aggragated count [20]")), ToolInput(tag="in_min_maf", input_type=Float(optional=True), prefix="--minMAF", doc=InputDocumentation(doc="Minimum minor allele frequency [0.00]")), ToolInput(tag="in_double_tgl", input_type=Boolean(optional=True), prefix="--doubletGL", doc=InputDocumentation(doc="If use, keep doublet GT likelihood, i.e., GT=0.5 and GT=1.5.")), ToolInput(tag="in_incl_flag", input_type=Int(optional=True), prefix="--inclFLAG", doc=InputDocumentation(doc="|INT   Required flags: skip reads with all mask bits unset []")), ToolInput(tag="in_excl_flag", input_type=Int(optional=True), prefix="--exclFLAG", doc=InputDocumentation(doc="|INT   Filter flags: skip reads with any mask bits set [UNMAP,SECONDARY,QCFAIL\n(when use UMI) or UNMAP,SECONDARY,QCFAIL,DUP (otherwise)]")), ToolInput(tag="in_min_len", input_type=Int(optional=True), prefix="--minLEN", doc=InputDocumentation(doc="Minimum mapped length for read filtering [30]")), ToolInput(tag="in_min_mapq", input_type=Int(optional=True), prefix="--minMAPQ", doc=InputDocumentation(doc="Minimum MAPQ for read filtering [20]")), ToolInput(tag="in_count_orphan", input_type=Boolean(optional=True), prefix="--countORPHAN", doc=InputDocumentation(doc="If use, do not skip anomalous read pairs."))], outputs=[ToolOutput(tag="out_outdir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_outdir", type_hint=File()), doc=OutputDocumentation(doc="Output directory for VCF and sparse matrices."))], container="quay.io/biocontainers/cellsnp-lite:1.2.0--hee625c5_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Cellsnp_Lite_V0_1_0().translate("wdl")

