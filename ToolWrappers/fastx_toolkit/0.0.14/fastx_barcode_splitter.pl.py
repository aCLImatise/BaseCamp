from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean, Int, String

Fastx_Barcode_Splitter_Pl_V0_1_0 = CommandToolBuilder(tool="fastx_barcode_splitter.pl", base_command=["fastx_barcode_splitter.pl"], inputs=[ToolInput(tag="in_bc_file", input_type=File(optional=True), prefix="--bcfile", doc=InputDocumentation(doc="- Barcodes file name. (see explanation below.)")), ToolInput(tag="in_prefix", input_type=File(optional=True), prefix="--prefix", doc=InputDocumentation(doc="- File prefix. will be added to the output files. Can be used\nto specify output directories.")), ToolInput(tag="in_suffix", input_type=File(optional=True), prefix="--suffix", doc=InputDocumentation(doc="- File suffix (optional). Can be used to specify file\nextensions.")), ToolInput(tag="in_bol", input_type=Boolean(optional=True), prefix="--bol", doc=InputDocumentation(doc="- Try to match barcodes at the BEGINNING of sequences.\n(What biologists would call the 5' end, and programmers\nwould call index 0.)")), ToolInput(tag="in_eol", input_type=Boolean(optional=True), prefix="--eol", doc=InputDocumentation(doc="- Try to match barcodes at the END of sequences.\n(What biologists would call the 3' end, and programmers\nwould call the end of the string.)\nNOTE: one of --bol, --eol must be specified, but not both.")), ToolInput(tag="in_mismatches", input_type=Int(optional=True), prefix="--mismatches", doc=InputDocumentation(doc="- Max. number of mismatches allowed. default is 1.")), ToolInput(tag="in_exact", input_type=Boolean(optional=True), prefix="--exact", doc=InputDocumentation(doc="- Same as '--mismatches 0'. If both --exact and --mismatches\nare specified, '--exact' takes precedence.")), ToolInput(tag="in_partial", input_type=String(optional=True), prefix="--partial", doc=InputDocumentation(doc="- Allow partial overlap of barcodes. (see explanation below.)\n(Default is not partial matching)")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="- Don't print counts and summary at the end of the run.\n(Default is to print.)")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="- Print lots of useless debug information to STDERR.")), ToolInput(tag="in_attt_act_at_gta_aagatagaaggaataaggtgaag", input_type=String(), position=0, doc=InputDocumentation(doc="GATCT (4 mismatches)"))], outputs=[ToolOutput(tag="out_prefix", output_type=File(optional=True), selector=InputSelector(input_to_select="in_prefix", type_hint=File()), doc=OutputDocumentation(doc="- File prefix. will be added to the output files. Can be used\nto specify output directories."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Fastx_Barcode_Splitter_Pl_V0_1_0().translate("wdl", allow_empty_container=True)

