!Command
command:
- mixcr
- assemble
positional:
- !Positional
  description: ''
  position: 0
  name: scr
  optional: false
- !Positional
  description: ''
  position: 1
  name: assemble
  optional: false
- !Positional
  description: ''
  position: 2
  name: assemblerParametersName
  optional: true
named:
- !Flag
  description: "Overwrite output file if it is corrupted or if it was generated from\n\
    different input file or with different parameters. -f / --force-overwrite\noverrides\
    \ this option."
  synonyms:
  - --overwrite-if-required
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Verbose warning messages.
  synonyms:
  - --verbose
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "If this option is specified, output file will be written in \"Clones\
    \ &\nAlignments\" format (*.clna), containing clones and all corresponding\nalignments.\
    \ This file then can be used to build wider contigs for clonal\nsequence and extract\
    \ original reads for each clone (if\n-OsaveOriginalReads=true was use on 'align'\
    \ stage)."
  synonyms:
  - -a
  - --write-alignments
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Force overwrite of output file(s).
  synonyms:
  - -f
  - --force-overwrite
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: JSON formatted report file
  synonyms:
  - -j
  - --json-report
  args: !SimpleFlagArg
    name: jsonReport
  optional: true
- !Flag
  description: Suppress all warning messages.
  synonyms:
  - -nw
  - --no-warnings
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: <String=String>       Overrides default parameter values.
  synonyms:
  - -O
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Clone assembling parameters
  synonyms:
  - -p
  - --parameters
  args: !SimpleFlagArg
    name: assemblerParametersName
  optional: true
- !Flag
  description: "Report file (human readable version, see -j / --json-report for machine\n\
    readable report)"
  synonyms:
  - -r
  - --report
  args: !SimpleFlagArg
    name: reportFile
  optional: true
- !Flag
  description: Processing threads
  synonyms:
  - -t
  - --threads
  args: !SimpleFlagArg
    name: threads
  optional: true
- !Flag
  description: ''
  synonyms:
  - -af
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "ERROR: -h / --help is not supported: use `mixcr help [command]` for command\
  \ usage.\nUsage: scr assemble [-af] [--overwrite-if-required] [--verbose] [-nw]\
  \ [-j <jsonReport>] [-p\n                    <assemblerParametersName>] [-r <reportFile>]\
  \ [-t <threads>] [-O\n                    <String=String>]... <in> <out>\nAssemble\
  \ clones.\n      <in>                  input file\n      <out>                 output\
  \ file\n      --overwrite-if-required\n                            Overwrite output\
  \ file if it is corrupted or if it was generated from\n                        \
  \      different input file or with different parameters. -f / --force-overwrite\n\
  \                              overrides this option.\n      --verbose         \
  \    Verbose warning messages.\n  -a, --write-alignments    If this option is specified,\
  \ output file will be written in \"Clones &\n                              Alignments\"\
  \ format (*.clna), containing clones and all corresponding\n                   \
  \           alignments. This file then can be used to build wider contigs for clonal\n\
  \                              sequence and extract original reads for each clone\
  \ (if\n                              -OsaveOriginalReads=true was use on 'align'\
  \ stage).\n  -f, --force-overwrite     Force overwrite of output file(s).\n  -j,\
  \ --json-report <jsonReport>\n                            JSON formatted report\
  \ file\n      -nw, --no-warnings    Suppress all warning messages.\n  -O  <String=String>\
  \       Overrides default parameter values.\n  -p, --parameters <assemblerParametersName>\n\
  \                            Clone assembling parameters\n  -r, --report <reportFile>\
  \ Report file (human readable version, see -j / --json-report for machine\n    \
  \                          readable report)\n  -t, --threads <threads>   Processing\
  \ threads\n"
generated_using:
- --help
