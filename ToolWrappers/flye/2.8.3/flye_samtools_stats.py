from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, Boolean, Float, String, File

Flye_Samtools_Stats_V0_1_0 = CommandToolBuilder(tool="flye_samtools_stats", base_command=["flye-samtools", "stats"], inputs=[ToolInput(tag="in_coverage", input_type=Int(optional=True), prefix="--coverage", doc=InputDocumentation(doc=",<int>,<int>    Coverage distribution min,max,step [1,1000,1]")), ToolInput(tag="in_remove_dups", input_type=Boolean(optional=True), prefix="--remove-dups", doc=InputDocumentation(doc="Exclude from statistics reads marked as duplicates")), ToolInput(tag="in_required_flag", input_type=Boolean(optional=True), prefix="--required-flag", doc=InputDocumentation(doc="<str|int>      Required flag, 0 for unset. See also `samtools flags` [0]")), ToolInput(tag="in_filtering_flag", input_type=Int(optional=True), prefix="--filtering-flag", doc=InputDocumentation(doc="Filtering flag, 0 for unset. See also `samtools flags` [0]")), ToolInput(tag="in_gc_depth", input_type=Float(optional=True), prefix="--GC-depth", doc=InputDocumentation(doc="the size of GC-depth bins (decreasing bin size increases memory requirement) [2e4]")), ToolInput(tag="in_insert_size", input_type=Int(optional=True), prefix="--insert-size", doc=InputDocumentation(doc="Maximum insert size [8000]")), ToolInput(tag="in_id", input_type=String(optional=True), prefix="--id", doc=InputDocumentation(doc="Include only listed read group or sample name")), ToolInput(tag="in_read_length", input_type=Int(optional=True), prefix="--read-length", doc=InputDocumentation(doc="Include in the statistics only reads with the given read length []")), ToolInput(tag="in_most_inserts", input_type=Float(optional=True), prefix="--most-inserts", doc=InputDocumentation(doc="Report only the main part of inserts [0.99]")), ToolInput(tag="in_split_prefix", input_type=File(optional=True), prefix="--split-prefix", doc=InputDocumentation(doc="Path or string prefix for filepaths output by -S (default is input filename)")), ToolInput(tag="in_trim_quality", input_type=Int(optional=True), prefix="--trim-quality", doc=InputDocumentation(doc="The BWA trimming parameter [0]")), ToolInput(tag="in_ref_seq", input_type=File(optional=True), prefix="--ref-seq", doc=InputDocumentation(doc="Reference sequence (required for GC-depth and mismatches-per-cycle calculation).")), ToolInput(tag="in_sam", input_type=Boolean(optional=True), prefix="--sam", doc=InputDocumentation(doc="Ignored (input format is auto-detected).")), ToolInput(tag="in_split", input_type=String(optional=True), prefix="--split", doc=InputDocumentation(doc="Also write statistics to separate files split by tagged field.")), ToolInput(tag="in_target_regions", input_type=File(optional=True), prefix="--target-regions", doc=InputDocumentation(doc="Do stats in these regions only. Tab-delimited file chr,from,to, 1-based, inclusive.")), ToolInput(tag="in_sparse", input_type=Boolean(optional=True), prefix="--sparse", doc=InputDocumentation(doc="Suppress outputting IS rows where there are no insertions.")), ToolInput(tag="in_remove_overlaps", input_type=Boolean(optional=True), prefix="--remove-overlaps", doc=InputDocumentation(doc="Remove overlaps of paired-end reads from coverage and base count computations.")), ToolInput(tag="in_cov_threshold", input_type=Boolean(optional=True), prefix="--cov-threshold", doc=InputDocumentation(doc="Only bases with coverage above this value will be included in the target percentage computation.")), ToolInput(tag="in_input_fmt_option", input_type=File(optional=True), prefix="--input-fmt-option", doc=InputDocumentation(doc="[=VAL]\nSpecify a single input file format option in the form\nof OPTION or OPTION=VALUE")), ToolInput(tag="in_reference", input_type=File(optional=True), prefix="--reference", doc=InputDocumentation(doc="Reference sequence FASTA FILE [null]")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of additional threads to use [0]\n")), ToolInput(tag="in_sam_tools", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_stats", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_file_dot_bam", input_type=File(), position=2, doc=InputDocumentation(doc=""))], outputs=[], container="quay.io/biocontainers/flye:2.8.3--py38h1c8e9b9_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Flye_Samtools_Stats_V0_1_0().translate("wdl")

