!Command
command:
- flye-samtools
- quickcheck
positional:
- !Positional
  optional: false
  position: 0
  name: status.
  description: One way to use quickcheck might be as a check that all BAM files in
named:
- !Flag
  optional: true
  synonyms:
  - -v
  description: verbose output (repeat for more verbosity)
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -q
  description: suppress warning messages
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "quickcheck: invalid option -- '-'\nUsage: samtools quickcheck [options]\
  \ <input> [...]\nOptions:\n  -v              verbose output (repeat for more verbosity)\n\
  \  -q              suppress warning messages\n\nNotes:\n\n1. By default quickcheck\
  \ will emit a warning message if and only if a file\n   fails the checks, in which\
  \ case the exit status is non-zero.  Under normal\n   behaviour with valid data\
  \ it will be silent and has a zero exit status.\n   The warning messages are purely\
  \ for manual inspection and should not be \n   parsed by scripts.\n\n2. In order\
  \ to use this command programmatically, you should check its exit\n   status.  One\
  \ way to use quickcheck might be as a check that all BAM files in\n   a directory\
  \ are okay:\n\n\tsamtools quickcheck *.bam && echo 'all ok' \\\n\t   || echo 'fail!'\n\
  \n   The first level of verbosity lists only files that fail to stdout.\n   To obtain\
  \ a parsable list of files that have failed, use this option:\n\n\tsamtools quickcheck\
  \ -qv *.bam > bad_bams.fofn \\\n\t   && echo 'all ok' \\\n\t   || echo 'some files\
  \ failed check, see bad_bams.fofn'\n"
generated_using:
- --help
docker_image: quay.io/biocontainers/flye:2.8.3--py38h1c8e9b9_0
