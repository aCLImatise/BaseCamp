from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, String, Boolean, Float, Directory, File

Igdiscover_Discover_V0_1_0 = CommandToolBuilder(tool="igdiscover_discover", base_command=["igdiscover", "discover"], inputs=[ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of threads. Default: no. of available CPUs, but\nat most 4")), ToolInput(tag="in_seed", input_type=String(optional=True), prefix="--seed", doc=InputDocumentation(doc="Seed value for random numbers for reproducible runs.")), ToolInput(tag="in_consensus_threshold", input_type=Int(optional=True), prefix="--consensus-threshold", doc=InputDocumentation(doc="Threshold for consensus computation. Default: 60%")), ToolInput(tag="in_gene", input_type=String(optional=True), prefix="--gene", doc=InputDocumentation(doc="Compute consensus for this gene. Can be given multiple\ntimes. Default: Compute for all genes.")), ToolInput(tag="in_limit", input_type=String(optional=True), prefix="--limit", doc=InputDocumentation(doc="Skip remaining genes as soon as at least N candidates\nwere generated. Default: No limit")), ToolInput(tag="in_left", input_type=Int(optional=True), prefix="--left", doc=InputDocumentation(doc="For consensus, include only sequences that have at\nleast this error rate (in percent). Default: 0")), ToolInput(tag="in_right", input_type=Int(optional=True), prefix="--right", doc=InputDocumentation(doc="For consensus, include only sequences that have at\nmost this error rate (in percent). Default: 100")), ToolInput(tag="in_window_width", input_type=Int(optional=True), prefix="--window-width", doc=InputDocumentation(doc="Compute consensus for all PERCENT-wide windows. Set to\n0 to disable. Default: 2")), ToolInput(tag="in_no_cluster", input_type=Boolean(optional=True), prefix="--no-cluster", doc=InputDocumentation(doc="Do not run linkage cluster analysis.")), ToolInput(tag="in_cluster_exact", input_type=String(optional=True), prefix="--cluster-exact", doc=InputDocumentation(doc="Treat N exact occurrences of a sequence as a cluster.\nDefault: Do not cluster exact occurrences")), ToolInput(tag="in_max_n_bases", input_type=Int(optional=True), prefix="--max-n-bases", doc=InputDocumentation(doc="Remove rows that have more than MAXN 'N' nucleotides.\nIf >0, an N_bases column is added. Default: 0")), ToolInput(tag="in_subsample", input_type=Int(optional=True), prefix="--subsample", doc=InputDocumentation(doc="When clustering, use N randomly chosen sequences.\nDefault: 1000")), ToolInput(tag="in_ignore_j", input_type=Boolean(optional=True), prefix="--ignore-J", doc=InputDocumentation(doc="Include also rows without J assignment or J%SHM>0.")), ToolInput(tag="in_exact_copies", input_type=Int(optional=True), prefix="--exact-copies", doc=InputDocumentation(doc="When subsampling, first pick rows whose V gene\nsequenceshave at least N exact copies in the input.\nDefault: 1")), ToolInput(tag="in_d_evalue", input_type=Float(optional=True), prefix="--d-evalue", doc=InputDocumentation(doc="For Ds_exact, require D matches with an E-value of at\nmost EVALUE. Default: 0.0001")), ToolInput(tag="in_d_coverage", input_type=Int(optional=True), prefix="--d-coverage", doc=InputDocumentation(doc="For Ds_exact, require D matches with a minimum D\ncoverage of COVERAGE (in percent). Default: 70)")), ToolInput(tag="in_clo_no_type_diff", input_type=Int(optional=True), prefix="--clonotype-diff", doc=InputDocumentation(doc="When clustering CDR3s to computer the no. of\nclonotypes, allow DIFFERENCES between\n(nucleotide-)sequences. Default: 6")), ToolInput(tag="in_table_output", input_type=Directory(optional=True), prefix="--table-output", doc=InputDocumentation(doc="Output tables for all analyzed genes to DIRECTORY.\nFiles will be named <GENE>.tab.")), ToolInput(tag="in_database", input_type=File(optional=True), prefix="--database", doc=InputDocumentation(doc="FASTA file with V genes. If provided, differences\nbetween consensus and database will be computed.")), ToolInput(tag="in_read_names", input_type=File(optional=True), prefix="--read-names", doc=InputDocumentation(doc="Write names of reads with exact matches used in\ndiscovering each candidate to FILE\n"))], outputs=[ToolOutput(tag="out_table_output", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_table_output", type_hint=File()), doc=OutputDocumentation(doc="Output tables for all analyzed genes to DIRECTORY.\nFiles will be named <GENE>.tab."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Igdiscover_Discover_V0_1_0().translate("wdl", allow_empty_container=True)

