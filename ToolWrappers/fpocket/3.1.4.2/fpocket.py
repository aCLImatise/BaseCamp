from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean

Fpocket_V0_1_0 = CommandToolBuilder(tool="fpocket", base_command=["fpocket"], inputs=[ToolInput(tag="in_calculate_interaction_grids", input_type=Boolean(optional=True), prefix="--calculate_interaction_grids", doc=InputDocumentation(doc=": Specify this flag if you want fpocket to\ncalculate VdW and Coulomb grids for each pocket")), ToolInput(tag="in_pocket_descr_stdout", input_type=Boolean(optional=True), prefix="--pocket_descr_stdout", doc=InputDocumentation(doc=": Put this flag if you want to write fpocket\ndescriptors to the standard output")), ToolInput(tag="in_model_number", input_type=Boolean(optional=True), prefix="--model_number", doc=InputDocumentation(doc="(int)                 : Number of Model to analyze.")), ToolInput(tag="in_topology_file", input_type=Boolean(optional=True), prefix="--topology_file", doc=InputDocumentation(doc="(string)             : File name of a topology file (Amber prmtop).")), ToolInput(tag="in_custom_ligand", input_type=Boolean(optional=True), prefix="--custom_ligand", doc=InputDocumentation(doc="(string)             : String specifying a ligand like: residuenumber:residuename:chain_code (ie. 1224:PU8:A).")), ToolInput(tag="in_min_alpha_size", input_type=Boolean(optional=True), prefix="--min_alpha_size", doc=InputDocumentation(doc="(float)             : Minimum radius of an alpha-sphere.    (6.2)")), ToolInput(tag="in_max_alpha_size", input_type=Boolean(optional=True), prefix="--max_alpha_size", doc=InputDocumentation(doc="(float)             : Maximum radius of an alpha-sphere.    (3.4)")), ToolInput(tag="in_clustering_distance", input_type=Boolean(optional=True), prefix="--clustering_distance", doc=InputDocumentation(doc="(float)        : Distance threshold for clustering algorithm   (2.4)")), ToolInput(tag="in_clustering_method", input_type=Boolean(optional=True), prefix="--clustering_method", doc=InputDocumentation(doc="(char)           : Specify the clustering method wanted for\ngrouping voronoi vertices together (s)\ns : single linkage clustering\nm : complete linkage clustering\na : average linkage clustering\nc : centroid linkage clustering")), ToolInput(tag="in_clustering_measure", input_type=Boolean(optional=True), prefix="--clustering_measure", doc=InputDocumentation(doc="(char)          : Specify the distance measure for clustering   (e)\ne : euclidean distance\nb : Manhattan distance")), ToolInput(tag="in_min_spheres_per_pocket", input_type=Boolean(optional=True), prefix="--min_spheres_per_pocket", doc=InputDocumentation(doc="(int)       : Minimum number of a-sphere per pocket.        (15)")), ToolInput(tag="in_ratio_apol_spheres_pocket", input_type=Boolean(optional=True), prefix="--ratio_apol_spheres_pocket", doc=InputDocumentation(doc="(float)  : Minimum proportion of apolar sphere in\na pocket (remove otherwise) (0.0)")), ToolInput(tag="in_number_apol_asph_pocket", input_type=Boolean(optional=True), prefix="--number_apol_asph_pocket", doc=InputDocumentation(doc="(int)      : Minimum number of apolar neighbor for\nan a-sphere to be considered as apolar.   (3)")), ToolInput(tag="in_iterations_volume_mc", input_type=Boolean(optional=True), prefix="--iterations_volume_mc", doc=InputDocumentation(doc="(integer)     : Number of Monte-Carlo iteration for the\ncalculation of each pocket volume.(300)"))], outputs=[], container="quay.io/biocontainers/fpocket:3.1.4.2", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Fpocket_V0_1_0().translate("wdl")

