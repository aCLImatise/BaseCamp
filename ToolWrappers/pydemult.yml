!Command
command:
- pydemult
positional: []
named:
- !Flag
  description: ''
  synonyms:
  - --samplesheet
  args: !SimpleFlagArg
    name: samplesheet.txt
  optional: true
- !Flag
  description: ''
  synonyms:
  - --fastq
  args: !SimpleFlagArg
    name: input.fastq.gz
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: "show this help message and exit\n--fastq input.fastq.gz, -f input.fastq.gz\n\
    FASTQ file for demultiplexing.\n--samplesheet samplesheet.txt, -s samplesheet.txt\n\
    Samplesheet containing barcodes and samplenames\n--column-separator COLUMN_SEPARATOR\n\
    Separator that is used in samplesheet\n--barcode-column Barcode\nName of the column\
    \ containing barcodes\n--sample-column Sample\nName of the column containing sample\
    \ names\n--barcode-regex BARCODE_REGEX, -b BARCODE_REGEX\nRegular expression to\
    \ parse cell barcode (CB) and UMIs\n(UMI) from read names\n--edit-distance 1 \
    \    Maximum allowed edit distance for barcodes\n--edit-alphabet ACGTN\nThe alphabet\
    \ that is used to created edited barcodes\n--buffer-size 4000000\nBuffer size\
    \ for the FASTQ reader (in Bytes). Must be\nlarge enough to contain the largest\
    \ entry.\n--output fastq, -o fastq\nOutput directory to write individual fastq\
    \ files to.\n--output-file-suffix .fastq.gz\nA suffix to append to individual\
    \ fastq files.\n--write-unmatched     Write reads with unmatched barcodes into\n\
    unmatched.fastq.gz\n--keep-empty          Keep empty sequences in demultiplexed\
    \ output files.\n--threads 1, -t 1     Number of threads to use for multiprocessing.\n\
    --writer-threads 2, -w 2\nNumber of threads to use for writing\n-v, --version\
    \         show program's version number and exit\n--debug\n"
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: pydemult [-h] --fastq input.fastq.gz --samplesheet samplesheet.txt\n\
  \                [--column-separator COLUMN_SEPARATOR]\n                [--barcode-column\
  \ Barcode] [--sample-column Sample]\n                [--barcode-regex BARCODE_REGEX]\
  \ [--edit-distance 1]\n                [--edit-alphabet ACGTN] [--buffer-size 4000000]\n\
  \                [--output fastq] [--output-file-suffix .fastq.gz]\n           \
  \     [--write-unmatched] [--keep-empty] [--threads 1]\n                [--writer-threads\
  \ 2] [-v] [--debug]\n\nDemultiplexing of fastq files\n\noptional arguments:\n  -h,\
  \ --help            show this help message and exit\n  --fastq input.fastq.gz, -f\
  \ input.fastq.gz\n                        FASTQ file for demultiplexing.\n  --samplesheet\
  \ samplesheet.txt, -s samplesheet.txt\n                        Samplesheet containing\
  \ barcodes and samplenames\n  --column-separator COLUMN_SEPARATOR\n            \
  \            Separator that is used in samplesheet\n  --barcode-column Barcode\n\
  \                        Name of the column containing barcodes\n  --sample-column\
  \ Sample\n                        Name of the column containing sample names\n \
  \ --barcode-regex BARCODE_REGEX, -b BARCODE_REGEX\n                        Regular\
  \ expression to parse cell barcode (CB) and UMIs\n                        (UMI)\
  \ from read names\n  --edit-distance 1     Maximum allowed edit distance for barcodes\n\
  \  --edit-alphabet ACGTN\n                        The alphabet that is used to created\
  \ edited barcodes\n  --buffer-size 4000000\n                        Buffer size\
  \ for the FASTQ reader (in Bytes). Must be\n                        large enough\
  \ to contain the largest entry.\n  --output fastq, -o fastq\n                  \
  \      Output directory to write individual fastq files to.\n  --output-file-suffix\
  \ .fastq.gz\n                        A suffix to append to individual fastq files.\n\
  \  --write-unmatched     Write reads with unmatched barcodes into\n            \
  \            unmatched.fastq.gz\n  --keep-empty          Keep empty sequences in\
  \ demultiplexed output files.\n  --threads 1, -t 1     Number of threads to use\
  \ for multiprocessing.\n  --writer-threads 2, -w 2\n                        Number\
  \ of threads to use for writing\n  -v, --version         show program's version\
  \ number and exit\n  --debug\n"
generated_using:
- --help
