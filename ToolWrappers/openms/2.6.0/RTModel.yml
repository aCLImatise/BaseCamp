!Command
command:
- RTModel
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -in
  description: "This is the name of the input file (RT prediction). It is assumed\
    \ that the file type is idXML. Alternatively you can provide a .txt file having\
    \ a sequence and the corresponding rt per line.\n(valid formats: 'idXML', 'txt')"
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -in_positive
  description: "Input file with positive examples (peptide separation prediction)\n\
    (valid formats: 'idXML')"
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -in_negative
  description: "Input file with negative examples (peptide separation prediction)\n\
    (valid formats: 'idXML')"
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -out
  description: "*                    Output file: the model in libsvm format (valid\
    \ formats: 'txt')"
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -out_oligo_params
  description: "Output file with additional model parameters when using the OLIGO\
    \ kernel (valid formats: 'paramXML')"
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -out_oligo_trainset
  description: "Output file with the used training dataset when using the OLIGO kernel\
    \ (valid formats: 'txt')"
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -svm_type
  description: "The type of the svm (NU_SVR or EPSILON_SVR for RT prediction, automatically\
    \ set\nto C_SVC for separation prediction)\n(default: 'NU_SVR' valid: 'NU_SVR',\
    \ 'NU_SVC', 'EPSILON_SVR', 'C_SVC')"
  args: !SimpleFlagArg
    name: type
- !Flag
  optional: true
  synonyms:
  - -nu
  description: "The nu parameter [0..1] of the svm (for nu-SVR) (default: '0.5' min:\
    \ '0.0' max: '1.0')"
  args: !SimpleFlagArg
    name: float
- !Flag
  optional: true
  synonyms:
  - -p
  description: "The epsilon parameter of the svm (for epsilon-SVR) (default: '0.1')"
  args: !SimpleFlagArg
    name: float
- !Flag
  optional: true
  synonyms:
  - -c
  description: "The penalty parameter of the svm (default: '1.0')"
  args: !SimpleFlagArg
    name: float
- !Flag
  optional: true
  synonyms:
  - -kernel_type
  description: "The kernel type of the svm (default: 'OLIGO' valid: 'LINEAR', 'RBF',\
    \ 'POLY', 'OLIGO')"
  args: !SimpleFlagArg
    name: type
- !Flag
  optional: true
  synonyms:
  - -degree
  description: "The degree parameter of the kernel function of the svm (POLY kernel)\n\
    (default: '1' min: '1')"
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - -border_length
  description: "Length of the POBK (default: '22' min: '1')"
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - -max_std
  description: "Max standard deviation for a peptide to be included (if there are\
    \ several ones for one peptide string)(median is taken) (default: '10.0' min:\
    \ '0.0')"
  args: !SimpleFlagArg
    name: float
- !Flag
  optional: true
  synonyms:
  - -k_mer_length
  description: "K_mer length of the POBK (default: '1' min: '1')"
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - -sigma
  description: "Sigma of the POBK (default: '5.0')"
  args: !SimpleFlagArg
    name: float
- !Flag
  optional: true
  synonyms:
  - -total_gradient_time
  description: "The time (in seconds) of the gradient (only for RT prediction) (default:\
    \ '1.0' min: '1.0e-05')"
  args: !SimpleFlagArg
    name: time
- !Flag
  optional: true
  synonyms:
  - -first_dim_rt
  description: If set the model will be built for first_dim_rt
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -additive_cv
  description: "If the step sizes should be interpreted additively (otherwise the\
    \ actual value is multiplied\nwith the step size to get the new value"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -ini
  description: Use the given TOPP INI file
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -threads
  description: "Sets the number of threads allowed to be used by the TOPP tool (default:\
    \ '1')"
  args: !SimpleFlagArg
    name: n
- !Flag
  optional: true
  synonyms:
  - -write_ini
  description: Writes the default configuration file
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - --helphelp
  description: Shows all options (including advanced)
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - --help
  description: Shows options
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "\nstty: standard input: Inappropriate ioctl for device\nRTModel -- Trains\
  \ a model for the retention time prediction of peptides from a training set.\nFull\
  \ documentation: http://www.openms.de/documentation/TOPP_RTModel.html\nVersion:\
  \ 2.6.0-pre-exported-20201001 Oct  1 2020, 01:37:06\nTo cite OpenMS:\n  Rost HL,\
  \ Sachsenberg T, Aiche S, Bielow C et al.. OpenMS: a flexible open-source software\
  \ platform for mass spectrometry data analysis. Nat Meth. 2016; 13, 9: 741-748.\
  \ doi:10.1038/nmeth.3959.\n\nUsage:\n  RTModel <options>\n\nOptions (mandatory options\
  \ marked with '*'):\n  -in <file>                      This is the name of the input\
  \ file (RT prediction). It is assumed that the file type is idXML. Alternatively\
  \ you can provide a .txt file having a sequence and the corresponding rt per line.\n\
  \                                  (valid formats: 'idXML', 'txt')\n  -in_positive\
  \ <file>             Input file with positive examples (peptide separation prediction)\n\
  \                                  (valid formats: 'idXML')\n  -in_negative <file>\
  \             Input file with negative examples (peptide separation prediction)\n\
  \                                  (valid formats: 'idXML')\n  -out <file>*    \
  \                Output file: the model in libsvm format (valid formats: 'txt')\n\
  \  -out_oligo_params <file>        Output file with additional model parameters\
  \ when using the OLIGO kernel (valid formats: 'paramXML')\n  -out_oligo_trainset\
  \ <file>      Output file with the used training dataset when using the OLIGO kernel\
  \ (valid formats: 'txt')\n  -svm_type <type>                The type of the svm\
  \ (NU_SVR or EPSILON_SVR for RT prediction, automatically set\n                \
  \                  to C_SVC for separation prediction)\n                       \
  \           (default: 'NU_SVR' valid: 'NU_SVR', 'NU_SVC', 'EPSILON_SVR', 'C_SVC')\n\
  \  -nu <float>                     The nu parameter [0..1] of the svm (for nu-SVR)\
  \ (default: '0.5' min: '0.0' max: '1.0')\n  -p <float>                      The\
  \ epsilon parameter of the svm (for epsilon-SVR) (default: '0.1')\n  -c <float>\
  \                      The penalty parameter of the svm (default: '1.0')\n  -kernel_type\
  \ <type>             The kernel type of the svm (default: 'OLIGO' valid: 'LINEAR',\
  \ 'RBF', 'POLY', 'OLIGO')\n  -degree <int>                   The degree parameter\
  \ of the kernel function of the svm (POLY kernel)\n                            \
  \      (default: '1' min: '1')\n  -border_length <int>            Length of the\
  \ POBK (default: '22' min: '1')\n  -max_std <float>                Max standard\
  \ deviation for a peptide to be included (if there are several ones for one peptide\
  \ string)(median is taken) (default: '10.0' min: '0.0')\n  -k_mer_length <int> \
  \            K_mer length of the POBK (default: '1' min: '1')\n  -sigma <float>\
  \                  Sigma of the POBK (default: '5.0')\n  -total_gradient_time <time>\
  \     The time (in seconds) of the gradient (only for RT prediction) (default: '1.0'\
  \ min: '1.0e-05')\n  -first_dim_rt                   If set the model will be built\
  \ for first_dim_rt\n  -additive_cv                    If the step sizes should be\
  \ interpreted additively (otherwise the actual value is multiplied\n           \
  \                       with the step size to get the new value\n              \
  \                    \n\nParameters for the grid search / cross validation::\n \
  \ -cv:skip_cv                     Set to enable Cross-Validation or set to true\
  \ if the model should just be trained with 1 set of specified parameters.\n  -cv:number_of_runs\
  \ <int>        Number of runs for the CV (each run creates a new random partition\
  \ of the data) (default: '1' min: '1')\n  -cv:number_of_partitions <int>  Number\
  \ of CV partitions (default: '10' min: '2')\n  -cv:degree_start <int>          Starting\
  \ point of degree (default: '1' min: '1')\n  -cv:degree_step_size <int>      Step\
  \ size point of degree (default: '2')\n  -cv:degree_stop <int>           Stopping\
  \ point of degree (default: '4')\n  -cv:p_start <float>             Starting point\
  \ of p (default: '1.0')\n  -cv:p_step_size <float>         Step size point of p\
  \ (default: '10.0')\n  -cv:p_stop <float>              Stopping point of p (default:\
  \ '1000.0')\n  -cv:c_start <float>             Starting point of c (default: '1.0')\n\
  \  -cv:c_step_size <float>         Step size of c (default: '10.0')\n  -cv:c_stop\
  \ <float>              Stopping point of c (default: '1000.0')\n  -cv:nu_start <float>\
  \            Starting point of nu (default: '0.3' min: '0.0' max: '1.0')\n  -cv:nu_step_size\
  \ <float>        Step size of nu (default: '1.2')\n  -cv:nu_stop <float>       \
  \      Stopping point of nu (default: '0.7' min: '0.0' max: '1.0')\n  -cv:sigma_start\
  \ <float>         Starting point of sigma (default: '1.0')\n  -cv:sigma_step_size\
  \ <float>     Step size of sigma (default: '1.3')\n  -cv:sigma_stop <float>    \
  \      Stopping point of sigma (default: '15.0')\n\n                           \
  \       \nCommon TOPP options:\n  -ini <file>                     Use the given\
  \ TOPP INI file\n  -threads <n>                    Sets the number of threads allowed\
  \ to be used by the TOPP tool (default: '1')\n  -write_ini <file>              \
  \ Writes the default configuration file\n  --help                          Shows\
  \ options\n  --helphelp                      Shows all options (including advanced)\n\
  \n"
generated_using:
- --help
docker_image: quay.io/biocontainers/openms:2.6.0--h4afb90d_0
