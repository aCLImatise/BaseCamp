from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean, String, Int

Idscoreswitcher_V0_1_0 = CommandToolBuilder(tool="IDScoreSwitcher", base_command=["IDScoreSwitcher"], inputs=[ToolInput(tag="in_in", input_type=File(optional=True), prefix="-in", doc=InputDocumentation(doc="*                      Input file (valid formats: 'idXML')")), ToolInput(tag="in_out", input_type=File(optional=True), prefix="-out", doc=InputDocumentation(doc="*                     Output file (valid formats: 'idXML')")), ToolInput(tag="in_proteins", input_type=Boolean(optional=True), prefix="-proteins", doc=InputDocumentation(doc="Apply to protein scores instead of PSM scores")), ToolInput(tag="in_new_score", input_type=String(optional=True), prefix="-new_score", doc=InputDocumentation(doc="Name of the meta value to use as the new score")), ToolInput(tag="in_new_score_orientation", input_type=String(optional=True), prefix="-new_score_orientation", doc=InputDocumentation(doc="Orientation of the new score (are higher or lower values better?) (valid: 'lower_better', 'higher_better')")), ToolInput(tag="in_new_score_type", input_type=String(optional=True), prefix="-new_score_type", doc=InputDocumentation(doc="Name to use as the type of the new score (default: same as 'new_score')")), ToolInput(tag="in_old_score", input_type=String(optional=True), prefix="-old_score", doc=InputDocumentation(doc="Name to use for the meta value storing the old score (default: old score type)")), ToolInput(tag="in_ini", input_type=File(optional=True), prefix="-ini", doc=InputDocumentation(doc="Use the given TOPP INI file")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="-threads", doc=InputDocumentation(doc="Sets the number of threads allowed to be used by the TOPP tool (default: '1')")), ToolInput(tag="in_write_ini", input_type=File(optional=True), prefix="-write_ini", doc=InputDocumentation(doc="Writes the default configuration file")), ToolInput(tag="in_helphelp", input_type=Boolean(optional=True), prefix="--helphelp", doc=InputDocumentation(doc="Shows all options (including advanced)"))], outputs=[ToolOutput(tag="out_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out", type_hint=File()), doc=OutputDocumentation(doc="*                     Output file (valid formats: 'idXML')"))], container="quay.io/biocontainers/openms:2.6.0--h4afb90d_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Idscoreswitcher_V0_1_0().translate("wdl")

