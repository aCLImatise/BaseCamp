from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String, Int

Decoydatabase_V0_1_0 = CommandToolBuilder(tool="DecoyDatabase", base_command=["DecoyDatabase"], inputs=[ToolInput(tag="in_in", input_type=Boolean(optional=True), prefix="-in", doc=InputDocumentation(doc="<file(s)>*                   Input FASTA file(s), each containing a database. It is recommended to include a contaminant database as well. (valid formats: 'fasta')")), ToolInput(tag="in_out", input_type=File(optional=True), prefix="-out", doc=InputDocumentation(doc="*                     Output FASTA file where the decoy database will be written to. (valid formats: 'fasta')")), ToolInput(tag="in_decoy_string", input_type=String(optional=True), prefix="-decoy_string", doc=InputDocumentation(doc="String that is combined with the accession of the protein identifier to indicate a decoy protein. (default: 'DECOY_')")), ToolInput(tag="in_decoy_string_position", input_type=String(optional=True), prefix="-decoy_string_position", doc=InputDocumentation(doc="Should the 'decoy_string' be prepended (prefix) or appended (suffix) to the protein accession? (default: 'prefix' valid: 'prefix', 'suffix')")), ToolInput(tag="in_only_decoy", input_type=Boolean(optional=True), prefix="-only_decoy", doc=InputDocumentation(doc="Write only decoy proteins to the output database instead of a combined database.")), ToolInput(tag="in_type", input_type=String(optional=True), prefix="-type", doc=InputDocumentation(doc="Type of sequence. RNA sequences may contain modification codes, which will be handled correctly if this is set to 'RNA'. (default: 'protein' valid: 'protein', 'RNA')")), ToolInput(tag="in_method", input_type=String(optional=True), prefix="-method", doc=InputDocumentation(doc="Method by which decoy sequences are generated from target sequences. Note that all sequences are shuffled using the same random seed, ensuring that identical sequences produce the same shuffled decoy sequences. Shuffled sequences that produce highly similar output sequences are shuffled again (see shuffle_sequence_identity_threshold). (default: 'reverse' valid: 'reverse', 'shuffle')")), ToolInput(tag="in_enzyme", input_type=Int(optional=True), prefix="-enzyme", doc=InputDocumentation(doc="Enzyme used for the digestion of the sample. Only applicable if parameter 'type' is 'protein'. (default: 'Trypsin' valid: '2-iodobenzoate', 'iodosobenzoate', 'Formic_acid', 'Lys-C', 'Chymotrypsin/P', 'CNBr', 'Asp-N_ambic', 'Chymotrypsin', 'Lys-C/P', 'PepsinA', 'cyanogen-bromide', 'Clostripain/P', 'elastase-trypsin-chymotrypsin', 'no cleavage', 'unspecific cleavage', 'TrypChymo', 'Trypsin/P', 'Arg-C', 'Arg-C/P', 'V8-DE', 'V8-E', 'leukocyte elastase', 'proline endopeptidase', 'glutamyl endopeptidase', 'Alpha-lytic protease', 'Asp-N', 'Asp-N/B', 'staphylococcal protease/D', 'proline-endopeptidase/HKR', 'Glu-C+P', 'PepsinA + P', 'Trypsin', 'Lys-N')")), ToolInput(tag="in_ini", input_type=File(optional=True), prefix="-ini", doc=InputDocumentation(doc="Use the given TOPP INI file")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="-threads", doc=InputDocumentation(doc="Sets the number of threads allowed to be used by the TOPP tool (default: '1')")), ToolInput(tag="in_write_ini", input_type=File(optional=True), prefix="-write_ini", doc=InputDocumentation(doc="Writes the default configuration file")), ToolInput(tag="in_helphelp", input_type=Boolean(optional=True), prefix="--helphelp", doc=InputDocumentation(doc="Shows all options (including advanced)"))], outputs=[ToolOutput(tag="out_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out", type_hint=File()), doc=OutputDocumentation(doc="*                     Output FASTA file where the decoy database will be written to. (valid formats: 'fasta')"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Decoydatabase_V0_1_0().translate("wdl", allow_empty_container=True)

