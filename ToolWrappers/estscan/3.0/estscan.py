from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Float, Int, File

Estscan_V0_1_0 = CommandToolBuilder(tool="estscan", base_command=["estscan"], inputs=[ToolInput(tag="in_all_one_sequence", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="All in one sequence output")), ToolInput(tag="in_only_results_have", input_type=Float(optional=True), prefix="-b", doc=InputDocumentation(doc="only results are shown, which have scores higher than this\nfraction of the best score [1.000000].")), ToolInput(tag="in_deletion_penalty", input_type=Int(optional=True), prefix="-d", doc=InputDocumentation(doc="deletion penalty [-50]")), ToolInput(tag="in_insertion_penalty", input_type=Int(optional=True), prefix="-i", doc=InputDocumentation(doc="insertion penalty [-50]")), ToolInput(tag="in_only_results_longer", input_type=Int(optional=True), prefix="-l", doc=InputDocumentation(doc="only results longer than this length are shown [0]")), ToolInput(tag="in_score_matrices_file", input_type=File(optional=True), prefix="-M", doc=InputDocumentation(doc="score matrices file ($ESTSCANDIR/Hs.smat)\n[/usr/molbio/share/ESTScan/Hs.smat]")), ToolInput(tag="in_min_value_matrix", input_type=Int(optional=True), prefix="-m", doc=InputDocumentation(doc="min value in matrix [-100]")), ToolInput(tag="in_how_compute_score", input_type=Int(optional=True), prefix="-N", doc=InputDocumentation(doc="how to compute the score of N [0]")), ToolInput(tag="in_remove_deleted_nucleotides", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="remove deleted nucleotides from the output")), ToolInput(tag="in_report_header_information", input_type=Boolean(optional=True), prefix="-O", doc=InputDocumentation(doc="report header information for best match only")), ToolInput(tag="in_send_output_file", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="send output to file.  - means stdout.  If both -t and -o specify\nstdout, only proteins will be written.")), ToolInput(tag="in_gc_select_correction", input_type=Float(optional=True), prefix="-p", doc=InputDocumentation(doc="GC select correction for score matrices [4.000000]")), ToolInput(tag="in_only_analyze_strand", input_type=Boolean(optional=True), prefix="-S", doc=InputDocumentation(doc="only analyze positive strand")), ToolInput(tag="in_skip_sequences_shorter", input_type=Int(optional=True), prefix="-s", doc=InputDocumentation(doc="Skip sequences shorter than length [1]")), ToolInput(tag="in_int_integers_used", input_type=Boolean(optional=True), prefix="-T", doc=InputDocumentation(doc="<int*>   8 integers used as log-probabilities for transitions,\nstart->5'UTR, start->CDS, start->3'UTR, 5'UTR->CDS,\n5'UTR->end, CDS->3'UTR, CDS->end, 3'UTR->end\n[-10, -10, -5, -80, -40, -80, -40, -20]")), ToolInput(tag="in_translate_protein_means", input_type=File(optional=True), prefix="-t", doc=InputDocumentation(doc="Translate to protein.  - means stdout.\nwill go to the file and the nucleotides will still go to stdout.")), ToolInput(tag="in_version_information", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="version information")), ToolInput(tag="in_width_fasta_sequence", input_type=Int(optional=True), prefix="-w", doc=InputDocumentation(doc="width of the FASTA sequence output [60]"))], outputs=[ToolOutput(tag="out_send_output_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_send_output_file", type_hint=File()), doc=OutputDocumentation(doc="send output to file.  - means stdout.  If both -t and -o specify\nstdout, only proteins will be written."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Estscan_V0_1_0().translate("wdl", allow_empty_container=True)

