from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, File, Int

Maskrc_Svg_Py_V0_1_0 = CommandToolBuilder(tool="maskrc_svg.py", base_command=["maskrc-svg.py"], inputs=[ToolInput(tag="in_gubbins", input_type=Boolean(optional=True), prefix="--gubbins", doc=InputDocumentation(doc="parse as Gubbins instead of ClonalFrameML")), ToolInput(tag="in_aln", input_type=String(optional=True), prefix="--aln", doc=InputDocumentation(doc="multiFASTA alignment used as input for CFML (required)")), ToolInput(tag="in_out", input_type=File(optional=True), prefix="--out", doc=InputDocumentation(doc="output file for masked alignment (default='maskrc.aln')")), ToolInput(tag="in_symbol", input_type=String(optional=True), prefix="--symbol", doc=InputDocumentation(doc="symbol to use for masking (default='?')")), ToolInput(tag="in_regions", input_type=File(optional=True), prefix="--regions", doc=InputDocumentation(doc="output recombinant regions to file")), ToolInput(tag="in_svg", input_type=File(optional=True), prefix="--svg", doc=InputDocumentation(doc="draw SVG output of recombinant regions and save as specified file")), ToolInput(tag="in_svg_size", input_type=Int(optional=True), prefix="--svgsize", doc=InputDocumentation(doc="specify width and height of SVG in pixels (default='800x600')")), ToolInput(tag="in_svg_order", input_type=File(optional=True), prefix="--svgorder", doc=InputDocumentation(doc="specify file containing list of taxa (1 per line) in desired order")), ToolInput(tag="in_svg_colour", input_type=String(optional=True), prefix="--svgcolour", doc=InputDocumentation(doc="specify colour of recombination regions in HEX format (default=black)")), ToolInput(tag="in_consensus", input_type=Boolean(optional=True), prefix="--consensus", doc=InputDocumentation(doc="add consensus row of recombination hotspots")), ToolInput(tag="in_prefix", input_type=String(), position=0, doc=InputDocumentation(doc="prefix used for CFML/Gubbins input files (required)"))], outputs=[ToolOutput(tag="out_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out", type_hint=File()), doc=OutputDocumentation(doc="output file for masked alignment (default='maskrc.aln')")), ToolOutput(tag="out_regions", output_type=File(optional=True), selector=InputSelector(input_to_select="in_regions", type_hint=File()), doc=OutputDocumentation(doc="output recombinant regions to file")), ToolOutput(tag="out_svg", output_type=File(optional=True), selector=InputSelector(input_to_select="in_svg", type_hint=File()), doc=OutputDocumentation(doc="draw SVG output of recombinant regions and save as specified file"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Maskrc_Svg_Py_V0_1_0().translate("wdl", allow_empty_container=True)

