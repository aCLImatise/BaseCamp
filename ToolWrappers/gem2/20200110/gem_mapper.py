from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean, String, Int

Gem_Mapper_V0_1_0 = CommandToolBuilder(tool="gem_mapper", base_command=["gem-mapper"], inputs=[ToolInput(tag="in_mandatory", input_type=File(optional=True), prefix="-I", doc=InputDocumentation(doc="(mandatory)")), ToolInput(tag="in_emulate_complement", input_type=Boolean(optional=True), prefix="--emulate-complement", doc=InputDocumentation(doc="(for indices lacking it)")), ToolInput(tag="in_fasta_fastq_map", input_type=String(optional=True), prefix="-i", doc=InputDocumentation(doc="(FASTA, FASTQ or MAP, default=stdin)")), ToolInput(tag="in_granularity", input_type=Int(optional=True), prefix="--granularity", doc=InputDocumentation(doc="(default=10000 lines from stdin,\n2500000 bytes from file)")), ToolInput(tag="in_defaultstdout", input_type=String(optional=True), prefix="-o", doc=InputDocumentation(doc="(default=stdout)")), ToolInput(tag="in_quality_format", input_type=Boolean(optional=True), prefix="--quality-format", doc=InputDocumentation(doc="'ignore'|'offset-33'|'offset-64'\n(mandatory with FASTQ input)")), ToolInput(tag="in_gem_quality_threshold", input_type=Int(optional=True), prefix="--gem-quality-threshold", doc=InputDocumentation(doc="(default=26, that is e<=2e-3)")), ToolInput(tag="in_mismatch_alphabet", input_type=String(optional=True), prefix="--mismatch-alphabet", doc=InputDocumentation(doc="(default='ACGT')")), ToolInput(tag="in_mismatches__default", input_type=Int(optional=True), prefix="-m", doc=InputDocumentation(doc="|<%_mismatches>       (default=0.04)")), ToolInput(tag="in_var_9", input_type=Int(optional=True), prefix="-e", doc=InputDocumentation(doc="|<%_differences>   (default=0.04)")), ToolInput(tag="in_min_matched_bases", input_type=Int(optional=True), prefix="--min-matched-bases", doc=InputDocumentation(doc="|<%>         (default=0.80)")), ToolInput(tag="in_max_big_in_del_length", input_type=Int(optional=True), prefix="--max-big-indel-length", doc=InputDocumentation(doc="(default=15)")), ToolInput(tag="in_strata_after_best", input_type=Int(optional=True), prefix="--strata-after-best", doc=InputDocumentation(doc="(default=0)")), ToolInput(tag="in_fast_mapping", input_type=Int(optional=True), prefix="--fast-mapping", doc=InputDocumentation(doc="|'adaptive'       (default=false)")), ToolInput(tag="in_unique_mapping", input_type=Boolean(optional=True), prefix="--unique-mapping", doc=InputDocumentation(doc="(default=false)")), ToolInput(tag="in_max_decoded_matches", input_type=Int(optional=True), prefix="--max-decoded-matches", doc=InputDocumentation(doc="|'all'  (default=20)")), ToolInput(tag="in_min_decoded_strata", input_type=Int(optional=True), prefix="--min-decoded-strata", doc=InputDocumentation(doc="(default=1)")), ToolInput(tag="in_paired_end_alignment", input_type=Boolean(optional=True), prefix="--paired-end-alignment", doc=InputDocumentation(doc="(default=false)")), ToolInput(tag="in_map_both_ends", input_type=Boolean(optional=True), prefix="--map-both-ends", doc=InputDocumentation(doc="(default=false)")), ToolInput(tag="in_min_insert_size", input_type=Int(optional=True), prefix="--min-insert-size", doc=InputDocumentation(doc="(default=0)")), ToolInput(tag="in_var_20", input_type=Int(optional=True), prefix="-E", doc=InputDocumentation(doc="|<%_differences>   (default=0.30)")), ToolInput(tag="in_max_extendable_matches", input_type=Int(optional=True), prefix="--max-extendable-matches", doc=InputDocumentation(doc="|'all'  (default=20)")), ToolInput(tag="in_max_extensions_per_match", input_type=Int(optional=True), prefix="--max-extensions-per-match", doc=InputDocumentation(doc="(default=1)")), ToolInput(tag="in_unique_pairing", input_type=Boolean(optional=True), prefix="--unique-pairing", doc=InputDocumentation(doc="(default=false)")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="(default=1)")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="(default=false)")), ToolInput(tag="in_show_license", input_type=Boolean(optional=True), prefix="--show-license", doc=InputDocumentation(doc="(print license)")), ToolInput(tag="in_gem_mapper", input_type=String(), position=0, doc=InputDocumentation(doc="[File input/output]"))], outputs=[], container="quay.io/biocontainers/gem2:20200110--0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Gem_Mapper_V0_1_0().translate("wdl")

