from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Directory, Int, String

Debarcer_Collapse_V0_1_0 = CommandToolBuilder(tool="debarcer_collapse", base_command=["debarcer", "collapse"], inputs=[ToolInput(tag="in_config", input_type=File(optional=True), prefix="--Config", doc=InputDocumentation(doc="Path to the config file")), ToolInput(tag="in_outdir", input_type=Directory(optional=True), prefix="--Outdir", doc=InputDocumentation(doc="Output directory where subdirectories are created")), ToolInput(tag="in_bam_file", input_type=File(optional=True), prefix="--Bamfile", doc=InputDocumentation(doc="Path to the BAM file")), ToolInput(tag="in_reference", input_type=File(optional=True), prefix="--Reference", doc=InputDocumentation(doc="Path to the refeence genome")), ToolInput(tag="in_region", input_type=Int(optional=True), prefix="--Region", doc=InputDocumentation(doc="Region coordinates to search for UMIs. chrN:posA-posB.\nposA and posB are 1-based included")), ToolInput(tag="in_umi", input_type=File(optional=True), prefix="--Umi", doc=InputDocumentation(doc="Path to the .umis file")), ToolInput(tag="in_fam_size", input_type=Int(optional=True), prefix="--Famsize", doc=InputDocumentation(doc="Comma-separated list of minimum umi family size to\ncollapase on")), ToolInput(tag="in_count_threshold", input_type=String(optional=True), prefix="--CountThreshold", doc=InputDocumentation(doc="Base count threshold in pileup column")), ToolInput(tag="in_percent_threshold", input_type=String(optional=True), prefix="--PercentThreshold", doc=InputDocumentation(doc="Majority rule consensus threshold in pileup column")), ToolInput(tag="in_position", input_type=String(optional=True), prefix="--Position", doc=InputDocumentation(doc="Umi position threshold for grouping umis together")), ToolInput(tag="in_maxdepth", input_type=Int(optional=True), prefix="--MaxDepth", doc=InputDocumentation(doc="Maximum read depth. Default is 1000000")), ToolInput(tag="in_truncate", input_type=String(optional=True), prefix="--Truncate", doc=InputDocumentation(doc="If truncate is True and a region is given, only pileup\ncolumns in the exact region specificied are returned.\nDefault is False")), ToolInput(tag="in_ignore_orphans", input_type=String(optional=True), prefix="--IgnoreOrphans", doc=InputDocumentation(doc="Ignore orphans (paired reads that are not in a proper\npair). Default is False")), ToolInput(tag="in_stepper", input_type=String(optional=True), prefix="--Stepper", doc=InputDocumentation(doc="Filter or include reads in the pileup. Options all:\nskip reads with BAM_FUNMAP, BAM_FSECONDARY,\nBAM_FQCFAIL, BAM_FDUP flags, nofilter: uses every\nsingle read turning off any filtering")), ToolInput(tag="in_separator", input_type=String(optional=True), prefix="--Separator", doc=InputDocumentation(doc="String separating the UMI from the remaining of the\nread name")), ToolInput(tag="in_quality", input_type=Int(optional=True), prefix="--Quality", doc=InputDocumentation(doc="Base quality score threshold. Bases with quality\nscores below the threshold are not used in the\nconsensus. Default is 25\n"))], outputs=[ToolOutput(tag="out_outdir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_outdir", type_hint=File()), doc=OutputDocumentation(doc="Output directory where subdirectories are created"))], container="quay.io/biocontainers/debarcer:2.1.3--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Debarcer_Collapse_V0_1_0().translate("wdl")

