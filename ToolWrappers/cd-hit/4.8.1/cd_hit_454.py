from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Int

Cd_Hit_454_V0_1_0 = CommandToolBuilder(tool="cd_hit_454", base_command=["cd-hit-454"], inputs=[ToolInput(tag="in_input_filename_fasta", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="input filename in fasta format, required, can be in .gz format")), ToolInput(tag="in_output_filename_required", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="output filename, required")), ToolInput(tag="in_sequence_identity_threshold", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="sequence identity threshold, default 0.98\nthis is a 'global sequence identity' calculated as :\nnumber of identical amino acids or bases in alignment\ndivided by the full length of the shorter sequence + gaps")), ToolInput(tag="in_bandwidth_alignment_default", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc="band_width of alignment, default 10")), ToolInput(tag="in_memory_limit_mb", input_type=Boolean(optional=True), prefix="-M", doc=InputDocumentation(doc="memory limit (in MB) for the program, default 800; 0 for unlimitted;")), ToolInput(tag="in_number_threads_default", input_type=Boolean(optional=True), prefix="-T", doc=InputDocumentation(doc="number of threads, default 1; with 0, all CPUs will be used")), ToolInput(tag="in_wordlength_default_see", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="word_length, default 10, see user's guide for choosing it")), ToolInput(tag="in_alignment_coverage_longer", input_type=Boolean(optional=True), prefix="-aL", doc=InputDocumentation(doc="alignment coverage for the longer sequence, default 0.0\nif set to 0.9, the alignment must covers 90% of the sequence")), ToolInput(tag="in_var_8", input_type=Boolean(optional=True), prefix="-AL", doc=InputDocumentation(doc="alignment coverage control for the longer sequence, default 99999999\nif set to 60, and the length of the sequence is 400,\nthen the alignment must be >= 340 (400-60) residues")), ToolInput(tag="in_alignment_coverage_shorter", input_type=Boolean(optional=True), prefix="-aS", doc=InputDocumentation(doc="alignment coverage for the shorter sequence, default 0.0\nif set to 0.9, the alignment must covers 90% of the sequence")), ToolInput(tag="in_var_10", input_type=Boolean(optional=True), prefix="-AS", doc=InputDocumentation(doc="alignment coverage control for the shorter sequence, default 99999999\nif set to 60, and the length of the sequence is 400,\nthen the alignment must be >= 340 (400-60) residues")), ToolInput(tag="in_default_default_sequences", input_type=Boolean(optional=True), prefix="-B", doc=InputDocumentation(doc="1 or 0, default 0, by default, sequences are stored in RAM\nif set to 1, sequence are stored on hard drive\n!! No longer supported !!")), ToolInput(tag="in_default_cdhits_default", input_type=Boolean(optional=True), prefix="-g", doc=InputDocumentation(doc="1 or 0, default 0\nby cd-hit's default algorithm, a sequence is clustered to the first\ncluster that meet the threshold (fast cluster). If set to 1, the program\nwill cluster it into the most similar cluster that meet the threshold\n(accurate but slow mode)\nbut either 1 or 0 won't change the representatives of final clusters")), ToolInput(tag="in_max_size_indel", input_type=Boolean(optional=True), prefix="-D", doc=InputDocumentation(doc="max size per indel, default 1")), ToolInput(tag="in_match", input_type=Boolean(optional=True), prefix="-match", doc=InputDocumentation(doc="matching score, default 2")), ToolInput(tag="in_mismatch", input_type=Boolean(optional=True), prefix="-mismatch", doc=InputDocumentation(doc="mismatching score, default -1")), ToolInput(tag="in_gap", input_type=Int(optional=True), prefix="-gap", doc=InputDocumentation(doc="opening score, default -3")), ToolInput(tag="in_gap_ext", input_type=Boolean(optional=True), prefix="-gap-ext", doc=InputDocumentation(doc="gap extension score, default -1")), ToolInput(tag="in_bak", input_type=File(optional=True), prefix="-bak", doc=InputDocumentation(doc="backup cluster file (1 or 0, default 0)"))], outputs=[ToolOutput(tag="out_output_filename_required", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_filename_required", type_hint=File()), doc=OutputDocumentation(doc="output filename, required"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Cd_Hit_454_V0_1_0().translate("wdl", allow_empty_container=True)

