from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean

Rad_Haplotyper_Pl_V0_1_0 = CommandToolBuilder(tool="rad_haplotyper.pl", base_command=["rad_haplotyper.pl"], inputs=[ToolInput(tag="in_input_vcf_file", input_type=File(optional=True), prefix="-v", doc=InputDocumentation(doc="input vcf file")), ToolInput(tag="in_bed_file_containing", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc="[bedfile]               BED file containing regions to be haplotyped")), ToolInput(tag="in_optionally_specify_sample", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="[samples]               optionally specify an individual sample to be haplotyped")), ToolInput(tag="in__reference_genome", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="[reference]             reference genome")), ToolInput(tag="in_remove_loci_more", input_type=Boolean(optional=True), prefix="-u", doc=InputDocumentation(doc="[snp_cutoff]            remove loci with more than a specified number of SNPs")), ToolInput(tag="in_cutoff_proportion_included", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="[miss_cutoff]           cutoff for proportion of missing data for loci to be included in the output")), ToolInput(tag="in_mp", input_type=Boolean(optional=True), prefix="-mp", doc=InputDocumentation(doc="[max_paralog_inds]              cutoff for excluding possible paralogs")), ToolInput(tag="in_ml", input_type=Boolean(optional=True), prefix="-ml", doc=InputDocumentation(doc="[max_low_cov_inds]              cutoff for excluding loci with low coverage or genotyping errors")), ToolInput(tag="in_sampling_depth_used", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc="[depth]                 sampling depth used by the algorithm to build haplotypes")), ToolInput(tag="in_controls_haplotype_logic", input_type=Boolean(optional=True), prefix="-z", doc=InputDocumentation(doc="[hap_rescue]                 controls haplotype rescue logic")), ToolInput(tag="in_handling_complex_loci", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="[complex]               handling of complex loci")), ToolInput(tag="in_genepop_file_population", input_type=File(optional=True), prefix="-g", doc=InputDocumentation(doc="[genepop]               genepop file for population output")), ToolInput(tag="in_vcf_file_output", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="[vcfout]                vcf file output")), ToolInput(tag="in_population_map_organizing", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="[popmap]                population map for organizing Genepop file")), ToolInput(tag="in_tsv_file_linkage", input_type=File(optional=True), prefix="-t", doc=InputDocumentation(doc="[tsvfile]               tsv file for linkage map output")), ToolInput(tag="in_ima_file_output", input_type=File(optional=True), prefix="-a", doc=InputDocumentation(doc="[imafile]               IMa file output")), ToolInput(tag="in_p_one", input_type=Boolean(optional=True), prefix="-p1", doc=InputDocumentation(doc="[parent1]               first parent in the mapping cross")), ToolInput(tag="in_p_two", input_type=Boolean(optional=True), prefix="-p2", doc=InputDocumentation(doc="[parent2]               second parent in the mapping cross")), ToolInput(tag="in_number_threads_use", input_type=Boolean(optional=True), prefix="-x", doc=InputDocumentation(doc="[threads]               number of threads to use for the analysis")), ToolInput(tag="in_use_indels", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="use indels")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc="debug")), ToolInput(tag="in_vcf_file", input_type=Boolean(optional=True), prefix="--vcffile", doc=InputDocumentation(doc="VCF input file")), ToolInput(tag="in_reference", input_type=Boolean(optional=True), prefix="--reference", doc=InputDocumentation(doc="Reference genome (FASTA format) - required if IMa output is\nrequired")), ToolInput(tag="in_bed_file", input_type=Boolean(optional=True), prefix="--bedfile", doc=InputDocumentation(doc="BED file that specifies the intervals of the reference genome\nthat should be haplotyped. This is required if the reference\ngenome does not contain discrete RAD loci as separate contigs")), ToolInput(tag="in_genomic_ref", input_type=Boolean(optional=True), prefix="--genomic_ref", doc=InputDocumentation(doc="Run the program with a reference genome that does not contain\ndiscrete RAD loci")), ToolInput(tag="in_samples", input_type=Boolean(optional=True), prefix="--samples", doc=InputDocumentation(doc="Individual samples to use in the analysis - can be used multiple\ntimes for multiple individuals [Default: All]")), ToolInput(tag="in_cut_off", input_type=Boolean(optional=True), prefix="--cutoff", doc=InputDocumentation(doc="Excludes loci with more than the specified number of SNPs\n[Default: No filter]")), ToolInput(tag="in_threads", input_type=Boolean(optional=True), prefix="--threads", doc=InputDocumentation(doc="Run in parallel across individuals with a specified number of\nthreads")), ToolInput(tag="in_keep_single_indels", input_type=Boolean(optional=True), prefix="--keep_single_indels", doc=InputDocumentation(doc="Includes indels that are the only polymorphism at the locus\n(contig)")), ToolInput(tag="in_complex", input_type=Boolean(optional=True), prefix="--complex", doc=InputDocumentation(doc="Specify how to treat complex polymorphisms in the VCF file\n(indels, muliallelic SNPs, or complex polymorphims). The two\nsupported options are 'skip', which ignores them, keeping other\nsites at that contig for haplotyping, or 'remove', which removes\nentire contigs that contain complex polymorphisms [Default:\nskip]")), ToolInput(tag="in_depth", input_type=Boolean(optional=True), prefix="--depth", doc=InputDocumentation(doc="Specify a depth of sampling reads for building haplotypes\n[Default: 20]")), ToolInput(tag="in_hap_rescue", input_type=Boolean(optional=True), prefix="--hap_rescue", doc=InputDocumentation(doc="Specify a rescue parameter that controls the behavior of the\nscript when dealing with loci that have more observed haplotypes\nthan are possible given the genotypes. A value less than one\nwill indicate remove observed haplotypes from consideration if\nthey are observed less than the specified proportion of the\ntotal number of reads. A value of one or greater indicates that\na haplotype should be removed from consideration if the\nhaplotype is observed in fewer reads than the number specified.\nExample: If the parameter is set to 3, the script will eliminate\nhaplotypes observed in less than 3 reads before determining\nwhether there is an approriate number of haplotypes observed; if\nthe parameter is set to 0.05, the script will eliminate\nhaplotypes obseerved from less than 5 percent of the total\nnumber of reads at that locus in that individual before\ndetermining whether the correct number of haplotypes is present.\n[Default: 0.05].")), ToolInput(tag="in_miss_cut_off", input_type=Boolean(optional=True), prefix="--miss_cutoff", doc=InputDocumentation(doc="Proportion of missing data cutoff for removing loci from the\nfinal output. For example, to keep only loci with successful\nhaplotype builds in 95% of individuals, enter 0.95. [Default:\n0.9]")), ToolInput(tag="in_max_paralog_inds", input_type=Boolean(optional=True), prefix="--max_paralog_inds", doc=InputDocumentation(doc="Count cutoff for removing loci that are possible paralogs from\nthe final output. The value is the maximum allowable number of\nindividuals with more than the expected number of haplotypes\n[Default: No filter]")), ToolInput(tag="in_max_low_cov_inds", input_type=Boolean(optional=True), prefix="--max_low_cov_inds", doc=InputDocumentation(doc="Count cutoff for removing loci with low coverage or genotyping\nerrors from the final output. The value is the maximum allowable\nnumber of individuals with less than the expected number of\nhaplotypes [Default: No filter]")), ToolInput(tag="in_gene_pop", input_type=Boolean(optional=True), prefix="--genepop", doc=InputDocumentation(doc="Writes a genepop file using haplotypes. Must provide the name of\nthe genepop file.")), ToolInput(tag="in_vcf_out", input_type=Boolean(optional=True), prefix="--vcfout", doc=InputDocumentation(doc="Writes a VCF file that contains SNPs (unhaplotyped) and\ngenotypes that were successfully built into haplotypes. Must\nprovide the name of the VCF file.")), ToolInput(tag="in_ima", input_type=Boolean(optional=True), prefix="--ima", doc=InputDocumentation(doc="Writes a IMa file using haplotypes. Must provide the name of the\nIMa file.")), ToolInput(tag="in_pop_map", input_type=File(optional=True), prefix="--popmap", doc=InputDocumentation(doc="Tab-separated file of individuals and their population\ndesignation, one per line (required for Genepop output)")), ToolInput(tag="in_tsv_file", input_type=Boolean(optional=True), prefix="--tsvfile", doc=InputDocumentation(doc="Writes a tsv file using haplotypes - for mapping crosses only.\nMust provide the name of the tsv file.")), ToolInput(tag="in_parent_one", input_type=Boolean(optional=True), prefix="--parent1", doc=InputDocumentation(doc="Parent 1 of the mapping cross (must be specified if writing a\ntsv file)")), ToolInput(tag="in_parent_two", input_type=Boolean(optional=True), prefix="--parent2", doc=InputDocumentation(doc="Parent 2 of the mapping cross (must be specified if writing a\ntsv file)")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="Output extra logs for debugging purposes\n"))], outputs=[ToolOutput(tag="out_genepop_file_population", output_type=File(optional=True), selector=InputSelector(input_to_select="in_genepop_file_population", type_hint=File()), doc=OutputDocumentation(doc="[genepop]               genepop file for population output")), ToolOutput(tag="out_vcf_file_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_vcf_file_output", type_hint=File()), doc=OutputDocumentation(doc="[vcfout]                vcf file output")), ToolOutput(tag="out_tsv_file_linkage", output_type=File(optional=True), selector=InputSelector(input_to_select="in_tsv_file_linkage", type_hint=File()), doc=OutputDocumentation(doc="[tsvfile]               tsv file for linkage map output")), ToolOutput(tag="out_ima_file_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_ima_file_output", type_hint=File()), doc=OutputDocumentation(doc="[imafile]               IMa file output")), ToolOutput(tag="out_pop_map", output_type=File(optional=True), selector=InputSelector(input_to_select="in_pop_map", type_hint=File()), doc=OutputDocumentation(doc="Tab-separated file of individuals and their population\ndesignation, one per line (required for Genepop output)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Rad_Haplotyper_Pl_V0_1_0().translate("wdl", allow_empty_container=True)

