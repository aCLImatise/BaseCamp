from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Int, Boolean, File

Minialign_V0_1_0 = CommandToolBuilder(tool="minialign", base_command=["minialign"], inputs=[ToolInput(tag="in_load_preset_params", input_type=String(optional=True), prefix="-x", doc=InputDocumentation(doc="load preset params {pacbio,ont,ava} [ont]")), ToolInput(tag="in_number_of_threads", input_type=Int(optional=True), prefix="-t", doc=InputDocumentation(doc="number of threads [1]")), ToolInput(tag="in_switch_allversusall_mode", input_type=Boolean(optional=True), prefix="-X", doc=InputDocumentation(doc="switch to all-versus-all alignment mode")), ToolInput(tag="in_show_version_number", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="show version number [0.5.2-unknown]")), ToolInput(tag="in_kmer_size", input_type=Int(optional=True), prefix="-k", doc=InputDocumentation(doc="k-mer size [15]")), ToolInput(tag="in_minimizer_window_size", input_type=Int(optional=True), prefix="-w", doc=InputDocumentation(doc="minimizer window size [{-k}*2/3]")), ToolInput(tag="in_dump_index_file", input_type=File(optional=True), prefix="-d", doc=InputDocumentation(doc="dump index to FILE []")), ToolInput(tag="in_load_index_file", input_type=File(optional=True), prefix="-l", doc=InputDocumentation(doc="load index from FILE [] (overriding -k and -w)")), ToolInput(tag="in_match_award", input_type=Int(optional=True), prefix="-a", doc=InputDocumentation(doc="match award [1]")), ToolInput(tag="in_mismatch_penalty", input_type=Int(optional=True), prefix="-b", doc=InputDocumentation(doc="mismatch penalty [1]")), ToolInput(tag="in_gap_open_penalty", input_type=Int(optional=True), prefix="-p", doc=InputDocumentation(doc="gap open penalty [1]")), ToolInput(tag="in_gap_extension_penalty", input_type=Int(optional=True), prefix="-q", doc=InputDocumentation(doc="gap extension penalty [1]")), ToolInput(tag="in_minimum_alignment_score", input_type=Int(optional=True), prefix="-s", doc=InputDocumentation(doc="minimum alignment score [50]")), ToolInput(tag="in_minimum_alignment_score_ratio", input_type=Int(optional=True), prefix="-m", doc=InputDocumentation(doc="minimum alignment score ratio [0.30]")), ToolInput(tag="in_output_format_", input_type=Int(optional=True), prefix="-O", doc=InputDocumentation(doc="output format {sam,maf,blast6,blasr1,blasr4,paf,mhap,falcon} [sam]")), ToolInput(tag="in_include_quality_string", input_type=Boolean(optional=True), prefix="-Q", doc=InputDocumentation(doc="include quality string")), ToolInput(tag="in_read_group_line", input_type=Int(optional=True), prefix="-R", doc=InputDocumentation(doc="read group header line, like '@RG\tID:1' []")), ToolInput(tag="in_list_optional_rg", input_type=String(optional=True), prefix="-T", doc=InputDocumentation(doc=",...   list of optional tags: {RG,AS,XS,NM,NH,IH,SA,MD} []\nRG is also inferred from -R\nsupp. records are omitted when SA tag is enabled")), ToolInput(tag="in_first", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_trial", input_type=String(), position=1, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Minialign_V0_1_0().translate("wdl", allow_empty_container=True)

