from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File

Mmseqs_Linclust_V0_1_0 = CommandToolBuilder(tool="mmseqs_linclust", base_command=["mmseqs", "linclust"], inputs=[ToolInput(tag="in_comp_bias_corr", input_type=Boolean(optional=True), prefix="--comp-bias-corr", doc=InputDocumentation(doc="1               correct for locally biased amino acid composition [0,1]")), ToolInput(tag="in_add_self_matches", input_type=Boolean(optional=True), prefix="--add-self-matches", doc=InputDocumentation(doc="false           artificially add entries of queries with themselves (for clustering)")), ToolInput(tag="in_alph_size", input_type=Boolean(optional=True), prefix="--alph-size", doc=InputDocumentation(doc="21              alphabet size [2,21]")), ToolInput(tag="in_mask", input_type=Boolean(optional=True), prefix="--mask", doc=InputDocumentation(doc="0               0: w/o low complexity masking, 1: with low complexity masking")), ToolInput(tag="in_kmer_size_range", input_type=Boolean(optional=True), prefix="-k", doc=InputDocumentation(doc="0               k-mer size in the range [6,7] (0: set automatically to optimum)")), ToolInput(tag="in_split_memory_limit", input_type=Boolean(optional=True), prefix="--split-memory-limit", doc=InputDocumentation(doc="0               Maximum system memory in megabyte that one split may use. Defaults (0) to all available system memory.")), ToolInput(tag="in_false_add_convert", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="false           add backtrace string (convert to alignments with mmseqs convertalis utility)")), ToolInput(tag="in_alignment_mode", input_type=Boolean(optional=True), prefix="--alignment-mode", doc=InputDocumentation(doc="2               How to compute the alignment: 0: automatic; 1: only score and end_pos; 2: also start_pos and cov; 3: also seq.id; 4: only ungapped alignment")), ToolInput(tag="in_list_matches_evalue", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc="0.001           list matches below this E-value [0.0, inf]")), ToolInput(tag="in_min_seq_id", input_type=Boolean(optional=True), prefix="--min-seq-id", doc=InputDocumentation(doc="0.900           list matches above this sequence identity (for clustering) [0.0,1.0]")), ToolInput(tag="in_seq_id_mode", input_type=Boolean(optional=True), prefix="--seq-id-mode", doc=InputDocumentation(doc="0               0: alignment length 1: shorter, 2: longer sequence")), ToolInput(tag="in_alt_ali", input_type=Boolean(optional=True), prefix="--alt-ali", doc=InputDocumentation(doc="0               Show up to this many alternative alignments")), ToolInput(tag="in_list_matches_fraction", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="0.800           list matches above this fraction of aligned (covered) residues (see --cov-mode)")), ToolInput(tag="in_cov_mode", input_type=Boolean(optional=True), prefix="--cov-mode", doc=InputDocumentation(doc="0               0: coverage of query and target, 1: coverage of target, 2: coverage of query 3: target seq. length needs be at least x% of query length")), ToolInput(tag="in_realign", input_type=Boolean(optional=True), prefix="--realign", doc=InputDocumentation(doc="false           compute more conservative, shorter alignments (scores and E-values not changed)")), ToolInput(tag="in_max_rejected", input_type=Boolean(optional=True), prefix="--max-rejected", doc=InputDocumentation(doc="2147483647      maximum rejected alignments before alignment calculation for a query is aborted")), ToolInput(tag="in_max_accept", input_type=Boolean(optional=True), prefix="--max-accept", doc=InputDocumentation(doc="2147483647      maximum accepted alignments before alignment calculation for a query is stopped")), ToolInput(tag="in_score_bias", input_type=Boolean(optional=True), prefix="--score-bias", doc=InputDocumentation(doc="0.000           Score bias when computing the SW alignment (in bits)")), ToolInput(tag="in_cluster_mode", input_type=Boolean(optional=True), prefix="--cluster-mode", doc=InputDocumentation(doc="0               0: Setcover, 1: connected component, 2: Greedy clustering by sequence length  3: Greedy clustering by sequence length (low mem)")), ToolInput(tag="in_max_iterations", input_type=Boolean(optional=True), prefix="--max-iterations", doc=InputDocumentation(doc="1000            maximum depth of breadth first search in connected component")), ToolInput(tag="in_similarity_type", input_type=Boolean(optional=True), prefix="--similarity-type", doc=InputDocumentation(doc="2               type of score used for clustering [1:2]. 1=alignment score. 2=sequence identity")), ToolInput(tag="in_km_er_per_seq", input_type=Boolean(optional=True), prefix="--kmer-per-seq", doc=InputDocumentation(doc="21              kmer per sequence")), ToolInput(tag="in_hash_shift", input_type=Boolean(optional=True), prefix="--hash-shift", doc=InputDocumentation(doc="5               Shift k-mer hash")), ToolInput(tag="in_include_only_extendable", input_type=Boolean(optional=True), prefix="--include-only-extendable", doc=InputDocumentation(doc="false           Include only extendable")), ToolInput(tag="in_skip_n_repeat_km_er", input_type=Boolean(optional=True), prefix="--skip-n-repeat-kmer", doc=InputDocumentation(doc="0               Skip sequence with >= n exact repeating k-mers")), ToolInput(tag="in_pc_a", input_type=Boolean(optional=True), prefix="--pca", doc=InputDocumentation(doc="1.000           pseudo count admixture strength")), ToolInput(tag="in_pcb", input_type=Boolean(optional=True), prefix="--pcb", doc=InputDocumentation(doc="1.500           pseudo counts: Neff at half of maximum admixture (0.0,infinity)")), ToolInput(tag="in_no_preload", input_type=Boolean(optional=True), prefix="--no-preload", doc=InputDocumentation(doc="false           Do not preload database")), ToolInput(tag="in_re_score_mode", input_type=Boolean(optional=True), prefix="--rescore-mode", doc=InputDocumentation(doc="0               Rescore diagonal with: 0: Hamming distance, 1: local alignment (score only) or 2: local alignment")), ToolInput(tag="in_threads", input_type=Boolean(optional=True), prefix="--threads", doc=InputDocumentation(doc="8               number of cores used for the computation (uses all cores by default)")), ToolInput(tag="in_verbosity_level_nothing", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="3               verbosity level: 0=nothing, 1: +errors, 2: +warnings, 3: +info")), ToolInput(tag="in_sub_mat", input_type=File(optional=True), prefix="--sub-mat", doc=InputDocumentation(doc="blosum62.out    amino acid substitution matrix file")), ToolInput(tag="in_max_seq_len", input_type=Boolean(optional=True), prefix="--max-seq-len", doc=InputDocumentation(doc="65535           Maximum sequence length [1,32768]")), ToolInput(tag="in_max_seqs", input_type=Boolean(optional=True), prefix="--max-seqs", doc=InputDocumentation(doc="300             maximum result sequences per query (this parameter affects the sensitivity)"))], outputs=[ToolOutput(tag="out_sub_mat", output_type=File(optional=True), selector=InputSelector(input_to_select="in_sub_mat", type_hint=File()), doc=OutputDocumentation(doc="blosum62.out    amino acid substitution matrix file"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Mmseqs_Linclust_V0_1_0().translate("wdl", allow_empty_container=True)

