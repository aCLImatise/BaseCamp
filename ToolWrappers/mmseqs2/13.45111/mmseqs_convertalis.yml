!Command
command:
- mmseqs
- convertalis
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - --gap-open
  description: Gap open cost [nucl:5,aa:11]
  args: !SimpleFlagArg
    name: TWIN
- !Flag
  optional: true
  synonyms:
  - --gap-extend
  description: Gap extension cost [nucl:2,aa:1]
  args: !SimpleFlagArg
    name: TWIN
- !Flag
  optional: true
  synonyms:
  - --format-mode
  description: 'Output format: 0: BLAST-TAB, 1: SAM, 2: BLAST-TAB + query/db length,
    3: Pretty HTML [0]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --format-output
  description: "Choose comma separated list of output columns from: query,target,evalue,gapopen,pident,fident,nident,qstart,qend,qlen\n\
    tstart,tend,tlen,alnlen,raw,bits,cigar,qseq,tseq,qheader,theader,qaln,taln,qframe,tframe,mismatch,qcov,tcov\n\
    qset,qsetid,tset,tsetid,taxid,taxname,taxlineage,qorfstart,qorfend,torfstart,torfend\
    \ [query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits]"
  args: !SimpleFlagArg
    name: STR
- !Flag
  optional: true
  synonyms:
  - --translation-table
  description: "1) CANONICAL, 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4) MOLD_MITOCHONDRIAL,\
    \ 5) INVERT_MITOCHONDRIAL, 6) CILIATE\n9) FLATWORM_MITOCHONDRIAL, 10) EUPLOTID,\
    \ 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14) ALT_FLATWORM_MITOCHONDRIAL\n\
    15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL, 21) TREMATODE_MITOCHONDRIAL,\
    \ 22) SCENEDESMUS_MITOCHONDRIAL\n23) THRAUSTOCHYTRIUM_MITOCHONDRIAL, 24) PTEROBRANCHIA_MITOCHONDRIAL,\
    \ 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27) KARYORELICT, 28) CONDYLOSTOMA\n29)\
    \ MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA [1]"
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --search-type
  description: 'Search type 0: auto 1: amino acid, 2: translated, 3: nucleotide, 4:
    translated nucleotide alignment [0]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --sub-mat
  description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
  args: !SimpleFlagArg
    name: TWIN
- !Flag
  optional: true
  synonyms:
  - --db-load-mode
  description: 'Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch [0]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --threads
  description: Number of CPU-cores used (all by default) [2]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --compressed
  description: Write compressed output [0]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - -v
  description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --db-output
  description: Return a result DB instead of a text file [0]
  args: !SimpleFlagArg
    name: BOOL
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "usage: mmseqs convertalis <i:queryDb> <i:targetDb> <i:alignmentDB> <o:alignmentFile>\
  \ [options]\n By Martin Steinegger <martin.steinegger@snu.ac.kr>\noptions: align:\
  \                   \n --gap-open TWIN           Gap open cost [nucl:5,aa:11]\n\
  \ --gap-extend TWIN         Gap extension cost [nucl:2,aa:1]\nmisc:            \
  \        \n --format-mode INT         Output format: 0: BLAST-TAB, 1: SAM, 2: BLAST-TAB\
  \ + query/db length, 3: Pretty HTML [0]\n --format-output STR       Choose comma\
  \ separated list of output columns from: query,target,evalue,gapopen,pident,fident,nident,qstart,qend,qlen\n\
  \                           tstart,tend,tlen,alnlen,raw,bits,cigar,qseq,tseq,qheader,theader,qaln,taln,qframe,tframe,mismatch,qcov,tcov\n\
  \                           qset,qsetid,tset,tsetid,taxid,taxname,taxlineage,qorfstart,qorfend,torfstart,torfend\
  \ [query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits]\n\
  \ --translation-table INT   1) CANONICAL, 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL,\
  \ 4) MOLD_MITOCHONDRIAL, 5) INVERT_MITOCHONDRIAL, 6) CILIATE\n                 \
  \          9) FLATWORM_MITOCHONDRIAL, 10) EUPLOTID, 11) PROKARYOTE, 12) ALT_YEAST,\
  \ 13) ASCIDIAN_MITOCHONDRIAL, 14) ALT_FLATWORM_MITOCHONDRIAL\n                 \
  \          15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL, 21) TREMATODE_MITOCHONDRIAL,\
  \ 22) SCENEDESMUS_MITOCHONDRIAL\n                           23) THRAUSTOCHYTRIUM_MITOCHONDRIAL,\
  \ 24) PTEROBRANCHIA_MITOCHONDRIAL, 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27) KARYORELICT,\
  \ 28) CONDYLOSTOMA\n                            29) MESODINIUM, 30) PERTRICH, 31)\
  \ BLASTOCRITHIDIA [1]\n --search-type INT         Search type 0: auto 1: amino acid,\
  \ 2: translated, 3: nucleotide, 4: translated nucleotide alignment [0]\ncommon:\
  \                  \n --sub-mat TWIN            Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]\n\
  \ --db-load-mode INT        Database preload mode 0: auto, 1: fread, 2: mmap, 3:\
  \ mmap+touch [0]\n --threads INT             Number of CPU-cores used (all by default)\
  \ [2]\n --compressed INT          Write compressed output [0]\n -v INT         \
  \           Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\n\
  expert:                  \n --db-output BOOL          Return a result DB instead\
  \ of a text file [0]\n\nexamples:\n # Create output in BLAST M8 format (12 columns):\n\
  \ #  (1,2) identifiers for query and target sequences/profiles,\n #  (3) sequence\
  \ identity, (4) alignment length, (5) number of mismatches,\n #  (6) number of gap\
  \ openings, (7-8, 9-10) alignment start and end-position in query and in target,\n\
  \ #  (11) E-value, and (12) bit score\n mmseqs convertalis queryDB targetDB result.m8\n\
  \ \n # Create a TSV containing pairwise alignments\n mmseqs convertalis queryDB\
  \ targetDB result.tsv --format-output query,target,qaln,taln\n \n # Annotate a alignment\
  \ result with taxonomy information from targetDB\n mmseqs convertalis queryDB targetDB\
  \ result.tsv --format-output query,target,taxid,taxname,taxlineage\n \n  Create\
  \ SAM output\n mmseqs convertalis queryDB targetDB result.sam --format-mode 1\n\
  \ \n # Create a TSV containing which query file a result comes from\n mmseqs createdb\
  \ euk_queries.fasta bac_queries.fasta queryDB\n mmseqs convertalis queryDB targetDB\
  \ result.tsv --format-output qset,query,target\n \nreferences:\n - Steinegger M,\
  \ Soding J: MMseqs2 enables sensitive protein sequence searching for the analysis\
  \ of massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n"
generated_using:
- --help
docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
