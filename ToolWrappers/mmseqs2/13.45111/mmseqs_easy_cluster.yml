!Command
command:
- mmseqs
- easy-cluster
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - --seed-sub-mat
  description: Substitution matrix file for k-mer generation [nucl:nucleotide.out,aa:VTML80.out]
  args: !SimpleFlagArg
    name: TWIN
- !Flag
  optional: true
  synonyms:
  - -s
  description: 'Sensitivity: 1.0 faster; 4.0 fast; 7.5 sensitive [4.000]'
  args: !SimpleFlagArg
    name: FLOAT
- !Flag
  optional: true
  synonyms:
  - -k
  description: 'k-mer length (0: automatically set to optimum) [0]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --k-score
  description: k-mer threshold for generating similar k-mer lists [2147483647]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --alph-size
  description: Alphabet size (range 2-21) [nucl:5,aa:21]
  args: !SimpleFlagArg
    name: TWIN
- !Flag
  optional: true
  synonyms:
  - --max-seqs
  description: Maximum results per query sequence allowed to pass the prefilter (affects
    sensitivity) [20]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --split
  description: 'Split input into N equally distributed chunks. 0: set the best split
    automatically [0]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --split-mode
  description: '0: split target db; 1: split query db; 2: auto, depending on main
    memory [2]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --split-memory-limit
  description: Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to all
    available system memory [0]
  args: !SimpleFlagArg
    name: BYTE
- !Flag
  optional: true
  synonyms:
  - --comp-bias-corr
  description: Correct for locally biased amino acid composition (range 0-1) [1]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --diag-score
  description: Use ungapped diagonal scoring during prefilter [1]
  args: !SimpleFlagArg
    name: BOOL
- !Flag
  optional: true
  synonyms:
  - --exact-kmer-matching
  description: Extract only exact k-mers for matching (range 0-1) [0]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --mask
  description: 'Mask sequences in k-mer stage: 0: w/o low complexity masking, 1: with
    low complexity masking [1]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --mask-lower-case
  description: 'Lowercase letters will be excluded from k-mer search 0: include region,
    1: exclude region [0]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --min-ungapped-score
  description: Accept only matches with ungapped alignment score above threshold [15]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --add-self-matches
  description: Artificially add entries of queries with themselves (for clustering)
    [0]
  args: !SimpleFlagArg
    name: BOOL
- !Flag
  optional: true
  synonyms:
  - --spaced-kmer-mode
  description: '0: use consecutive positions in k-mers; 1: use spaced k-mers [1]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --spaced-kmer-pattern
  description: User-specified spaced k-mer pattern []
  args: !SimpleFlagArg
    name: STR
- !Flag
  optional: true
  synonyms:
  - --local-tmp
  description: Path where some of the temporary files will be created []
  args: !SimpleFlagArg
    name: STR
- !Flag
  optional: true
  synonyms:
  - -c
  description: List matches above this fraction of aligned (covered) residues (see
    --cov-mode) [0.800]
  args: !SimpleFlagArg
    name: FLOAT
- !Flag
  optional: true
  synonyms:
  - --cov-mode
  description: "0: coverage of query and target\n1: coverage of target\n2: coverage\
    \ of query\n3: target seq. length has to be at least x% of query length\n4: query\
    \ seq. length has to be at least x% of target length\n5: short seq. needs to be\
    \ at least x% of the other seq. length [0]"
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - -a
  description: Add backtrace string (convert to alignments with mmseqs convertalis
    module) [0]
  args: !SimpleFlagArg
    name: BOOL
- !Flag
  optional: true
  synonyms:
  - --alignment-mode
  description: "How to compute the alignment:\n0: automatic\n1: only score and end_pos\n\
    2: also start_pos and cov\n3: also seq.id\n4: only ungapped alignment [3]"
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --alignment-output-mode
  description: "How to compute the alignment:\n0: automatic\n1: only score and end_pos\n\
    2: also start_pos and cov\n3: also seq.id\n4: only ungapped alignment\n5: score\
    \ only (output) cluster format [0]"
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --wrapped-scoring
  description: Double the (nucleotide) query sequence during the scoring process to
    allow wrapped diagonal scoring around end and start [0]
  args: !SimpleFlagArg
    name: BOOL
- !Flag
  optional: true
  synonyms:
  - -e
  description: List matches below this E-value (range 0.0-inf) [1.000E-03]
  args: !SimpleFlagArg
    name: DOUBLE
- !Flag
  optional: true
  synonyms:
  - --min-seq-id
  description: List matches above this sequence identity (for clustering) (range 0.0-1.0)
    [0.000]
  args: !SimpleFlagArg
    name: FLOAT
- !Flag
  optional: true
  synonyms:
  - --min-aln-len
  description: Minimum alignment length (range 0-INT_MAX) [0]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --seq-id-mode
  description: '0: alignment length 1: shorter, 2: longer sequence [0]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --alt-ali
  description: Show up to this many alternative alignments [0]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --max-rejected
  description: Maximum rejected alignments before alignment calculation for a query
    is stopped [2147483647]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --max-accept
  description: Maximum accepted alignments before alignment calculation for a query
    is stopped [2147483647]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --score-bias
  description: Score bias when computing SW alignment (in bits) [0.000]
  args: !SimpleFlagArg
    name: FLOAT
- !Flag
  optional: true
  synonyms:
  - --realign
  description: Compute more conservative, shorter alignments (scores and E-values
    not changed) [0]
  args: !SimpleFlagArg
    name: BOOL
- !Flag
  optional: true
  synonyms:
  - --realign-score-bias
  description: Additional bias when computing realignment [-0.200]
  args: !SimpleFlagArg
    name: FLOAT
- !Flag
  optional: true
  synonyms:
  - --realign-max-seqs
  description: Maximum number of results to return in realignment [2147483647]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --gap-open
  description: Gap open cost [nucl:5,aa:11]
  args: !SimpleFlagArg
    name: TWIN
- !Flag
  optional: true
  synonyms:
  - --gap-extend
  description: Gap extension cost [nucl:2,aa:1]
  args: !SimpleFlagArg
    name: TWIN
- !Flag
  optional: true
  synonyms:
  - --zdrop
  description: Maximal allowed difference between score values before alignment is
    truncated  (nucleotide alignment only) [40]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --cluster-mode
  description: "0: Set-Cover (greedy)\n1: Connected component (BLASTclust)\n2,3: Greedy\
    \ clustering by sequence length (CDHIT) [0]"
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --max-iterations
  description: Maximum depth of breadth first search in connected component clustering
    [1000]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --similarity-type
  description: 'Type of score used for clustering. 1: alignment score 2: sequence
    identity [2]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --single-step-clustering
  description: Switch from cascaded to simple clustering workflow [0]
  args: !SimpleFlagArg
    name: BOOL
- !Flag
  optional: true
  synonyms:
  - --cluster-steps
  description: Cascaded clustering steps from 1 to -s [3]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --cluster-reassign
  description: "Cascaded clustering can cluster sequence that do not fulfill the clustering\
    \ criteria.\nCluster reassignment corrects these errors [0]"
  args: !SimpleFlagArg
    name: BOOL
- !Flag
  optional: true
  synonyms:
  - --kmer-per-seq
  description: k-mers per sequence [21]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --kmer-per-seq-scale
  description: Scale k-mer per sequence based on sequence length as kmer-per-seq val
    + scale x seqlen [nucl:0.200,aa:0.000]
  args: !SimpleFlagArg
    name: TWIN
- !Flag
  optional: true
  synonyms:
  - --adjust-kmer-len
  description: Adjust k-mer length based on specificity (only for nucleotides) [0]
  args: !SimpleFlagArg
    name: BOOL
- !Flag
  optional: true
  synonyms:
  - --hash-shift
  description: Shift k-mer hash initialization [67]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --include-only-extendable
  description: Include only extendable [0]
  args: !SimpleFlagArg
    name: BOOL
- !Flag
  optional: true
  synonyms:
  - --ignore-multi-kmer
  description: Skip k-mers occurring multiple times (>=2) [0]
  args: !SimpleFlagArg
    name: BOOL
- !Flag
  optional: true
  synonyms:
  - --pca
  description: Pseudo count admixture strength [1.000]
  args: !SimpleFlagArg
    name: FLOAT
- !Flag
  optional: true
  synonyms:
  - --pcb
  description: 'Pseudo counts: Neff at half of maximum admixture (range 0.0-inf) [1.500]'
  args: !SimpleFlagArg
    name: FLOAT
- !Flag
  optional: true
  synonyms:
  - --rescore-mode
  description: "Rescore diagonals with:\n0: Hamming distance\n1: local alignment (score\
    \ only)\n2: local alignment\n3: global alignment\n4: longest alignment fulfilling\
    \ window quality criterion [0]"
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --dbtype
  description: 'Database type 0: auto, 1: amino acid 2: nucleotides [0]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --shuffle
  description: Shuffle input database [1]
  args: !SimpleFlagArg
    name: BOOL
- !Flag
  optional: true
  synonyms:
  - --createdb-mode
  description: 'Createdb mode 0: copy data, 1: soft link data and write new index
    (works only with single line fasta/q) [1]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --id-offset
  description: Numeric ids in index file are offset by this value [0]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --sub-mat
  description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
  args: !SimpleFlagArg
    name: TWIN
- !Flag
  optional: true
  synonyms:
  - --max-seq-len
  description: Maximum sequence length [65535]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --db-load-mode
  description: 'Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch [0]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --threads
  description: Number of CPU-cores used (all by default) [2]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --compressed
  description: Write compressed output [0]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - -v
  description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --remove-tmp-files
  description: Delete temporary files [1]
  args: !SimpleFlagArg
    name: BOOL
- !Flag
  optional: true
  synonyms:
  - --force-reuse
  description: Reuse tmp filse in tmp/latest folder ignoring parameters and version
    changes [0]
  args: !SimpleFlagArg
    name: BOOL
- !Flag
  optional: true
  synonyms:
  - --mpi-runner
  description: Use MPI on compute cluster with this MPI command (e.g. "mpirun -np
    42") []
  args: !SimpleFlagArg
    name: STR
- !Flag
  optional: true
  synonyms:
  - --filter-hits
  description: Filter hits by seq.id. and coverage [0]
  args: !SimpleFlagArg
    name: BOOL
- !Flag
  optional: true
  synonyms:
  - --sort-results
  description: 'Sort results: 0: no sorting, 1: sort by E-value (Alignment) or seq.id.
    (Hamming) [0]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --write-lookup
  description: write .lookup file containing mapping from internal id, fasta id and
    file number [0]
  args: !SimpleFlagArg
    name: INT
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "usage: mmseqs easy-cluster <i:fastaFile1[.gz|.bz2]> ... <i:fastaFileN[.gz|.bz2]>\
  \ <o:clusterPrefix> <tmpDir> [options]\n By Martin Steinegger <martin.steinegger@snu.ac.kr>\n\
  options: prefilter:                     \n --seed-sub-mat TWIN             Substitution\
  \ matrix file for k-mer generation [nucl:nucleotide.out,aa:VTML80.out]\n -s FLOAT\
  \                        Sensitivity: 1.0 faster; 4.0 fast; 7.5 sensitive [4.000]\n\
  \ -k INT                          k-mer length (0: automatically set to optimum)\
  \ [0]\n --k-score INT                   k-mer threshold for generating similar k-mer\
  \ lists [2147483647]\n --alph-size TWIN                Alphabet size (range 2-21)\
  \ [nucl:5,aa:21]\n --max-seqs INT                  Maximum results per query sequence\
  \ allowed to pass the prefilter (affects sensitivity) [20]\n --split INT       \
  \              Split input into N equally distributed chunks. 0: set the best split\
  \ automatically [0]\n --split-mode INT                0: split target db; 1: split\
  \ query db; 2: auto, depending on main memory [2]\n --split-memory-limit BYTE  \
  \     Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to all available\
  \ system memory [0]\n --comp-bias-corr INT            Correct for locally biased\
  \ amino acid composition (range 0-1) [1]\n --diag-score BOOL               Use ungapped\
  \ diagonal scoring during prefilter [1]\n --exact-kmer-matching INT       Extract\
  \ only exact k-mers for matching (range 0-1) [0]\n --mask INT                  \
  \    Mask sequences in k-mer stage: 0: w/o low complexity masking, 1: with low complexity\
  \ masking [1]\n --mask-lower-case INT           Lowercase letters will be excluded\
  \ from k-mer search 0: include region, 1: exclude region [0]\n --min-ungapped-score\
  \ INT        Accept only matches with ungapped alignment score above threshold [15]\n\
  \ --add-self-matches BOOL         Artificially add entries of queries with themselves\
  \ (for clustering) [0]\n --spaced-kmer-mode INT          0: use consecutive positions\
  \ in k-mers; 1: use spaced k-mers [1]\n --spaced-kmer-pattern STR       User-specified\
  \ spaced k-mer pattern []\n --local-tmp STR                 Path where some of the\
  \ temporary files will be created []\nalign:                         \n -c FLOAT\
  \                        List matches above this fraction of aligned (covered) residues\
  \ (see --cov-mode) [0.800]\n --cov-mode INT                  0: coverage of query\
  \ and target\n                                 1: coverage of target\n         \
  \                        2: coverage of query\n                                \
  \ 3: target seq. length has to be at least x% of query length\n                \
  \                 4: query seq. length has to be at least x% of target length\n\
  \                                 5: short seq. needs to be at least x% of the other\
  \ seq. length [0]\n -a BOOL                         Add backtrace string (convert\
  \ to alignments with mmseqs convertalis module) [0]\n --alignment-mode INT     \
  \       How to compute the alignment:\n                                 0: automatic\n\
  \                                 1: only score and end_pos\n                  \
  \               2: also start_pos and cov\n                                 3: also\
  \ seq.id\n                                 4: only ungapped alignment [3]\n --alignment-output-mode\
  \ INT     How to compute the alignment:\n                                 0: automatic\n\
  \                                 1: only score and end_pos\n                  \
  \               2: also start_pos and cov\n                                 3: also\
  \ seq.id\n                                 4: only ungapped alignment\n        \
  \                         5: score only (output) cluster format [0]\n --wrapped-scoring\
  \ BOOL          Double the (nucleotide) query sequence during the scoring process\
  \ to allow wrapped diagonal scoring around end and start [0]\n -e DOUBLE       \
  \                List matches below this E-value (range 0.0-inf) [1.000E-03]\n --min-seq-id\
  \ FLOAT              List matches above this sequence identity (for clustering)\
  \ (range 0.0-1.0) [0.000]\n --min-aln-len INT               Minimum alignment length\
  \ (range 0-INT_MAX) [0]\n --seq-id-mode INT               0: alignment length 1:\
  \ shorter, 2: longer sequence [0]\n --alt-ali INT                   Show up to this\
  \ many alternative alignments [0]\n --max-rejected INT              Maximum rejected\
  \ alignments before alignment calculation for a query is stopped [2147483647]\n\
  \ --max-accept INT                Maximum accepted alignments before alignment calculation\
  \ for a query is stopped [2147483647]\n --score-bias FLOAT              Score bias\
  \ when computing SW alignment (in bits) [0.000]\n --realign BOOL               \
  \   Compute more conservative, shorter alignments (scores and E-values not changed)\
  \ [0]\n --realign-score-bias FLOAT      Additional bias when computing realignment\
  \ [-0.200]\n --realign-max-seqs INT          Maximum number of results to return\
  \ in realignment [2147483647]\n --gap-open TWIN                 Gap open cost [nucl:5,aa:11]\n\
  \ --gap-extend TWIN               Gap extension cost [nucl:2,aa:1]\n --zdrop INT\
  \                     Maximal allowed difference between score values before alignment\
  \ is truncated  (nucleotide alignment only) [40]\nclust:                       \
  \  \n --cluster-mode INT              0: Set-Cover (greedy)\n                  \
  \               1: Connected component (BLASTclust)\n                          \
  \       2,3: Greedy clustering by sequence length (CDHIT) [0]\n --max-iterations\
  \ INT            Maximum depth of breadth first search in connected component clustering\
  \ [1000]\n --similarity-type INT           Type of score used for clustering. 1:\
  \ alignment score 2: sequence identity [2]\n --single-step-clustering BOOL   Switch\
  \ from cascaded to simple clustering workflow [0]\n --cluster-steps INT        \
  \     Cascaded clustering steps from 1 to -s [3]\n --cluster-reassign BOOL     \
  \    Cascaded clustering can cluster sequence that do not fulfill the clustering\
  \ criteria.\n                                 Cluster reassignment corrects these\
  \ errors [0]\nkmermatcher:                   \n --kmer-per-seq INT             \
  \ k-mers per sequence [21]\n --kmer-per-seq-scale TWIN       Scale k-mer per sequence\
  \ based on sequence length as kmer-per-seq val + scale x seqlen [nucl:0.200,aa:0.000]\n\
  \ --adjust-kmer-len BOOL          Adjust k-mer length based on specificity (only\
  \ for nucleotides) [0]\n --hash-shift INT                Shift k-mer hash initialization\
  \ [67]\n --include-only-extendable BOOL  Include only extendable [0]\n --ignore-multi-kmer\
  \ BOOL        Skip k-mers occurring multiple times (>=2) [0]\nprofile:         \
  \              \n --pca FLOAT                     Pseudo count admixture strength\
  \ [1.000]\n --pcb FLOAT                     Pseudo counts: Neff at half of maximum\
  \ admixture (range 0.0-inf) [1.500]\nmisc:                          \n --rescore-mode\
  \ INT              Rescore diagonals with:\n                                 0:\
  \ Hamming distance\n                                 1: local alignment (score only)\n\
  \                                 2: local alignment\n                         \
  \        3: global alignment\n                                 4: longest alignment\
  \ fulfilling window quality criterion [0]\n --dbtype INT                    Database\
  \ type 0: auto, 1: amino acid 2: nucleotides [0]\n --shuffle BOOL              \
  \    Shuffle input database [1]\n --createdb-mode INT             Createdb mode\
  \ 0: copy data, 1: soft link data and write new index (works only with single line\
  \ fasta/q) [1]\n --id-offset INT                 Numeric ids in index file are offset\
  \ by this value [0]\ncommon:                        \n --sub-mat TWIN          \
  \        Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]\n --max-seq-len\
  \ INT               Maximum sequence length [65535]\n --db-load-mode INT       \
  \       Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch [0]\n --threads\
  \ INT                   Number of CPU-cores used (all by default) [2]\n --compressed\
  \ INT                Write compressed output [0]\n -v INT                      \
  \    Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\n --remove-tmp-files\
  \ BOOL         Delete temporary files [1]\n --force-reuse BOOL              Reuse\
  \ tmp filse in tmp/latest folder ignoring parameters and version changes [0]\n --mpi-runner\
  \ STR                Use MPI on compute cluster with this MPI command (e.g. \"mpirun\
  \ -np 42\") []\nexpert:                        \n --filter-hits BOOL           \
  \   Filter hits by seq.id. and coverage [0]\n --sort-results INT              Sort\
  \ results: 0: no sorting, 1: sort by E-value (Alignment) or seq.id. (Hamming) [0]\n\
  \ --write-lookup INT              write .lookup file containing mapping from internal\
  \ id, fasta id and file number [0]\n\nexamples:\n mmseqs easy-cluster examples/DB.fasta\
  \ result tmp\n # Cluster output\n #  - result_rep_seq.fasta: Representatives\n #\
  \  - result_all_seq.fasta: FASTA-like per cluster\n #  - result_cluster.tsv:   Adjacency\
  \ list\n \n # Important parameter: --min-seq-id, --cov-mode and -c \n #        \
  \          --cov-mode \n #                  0    1    2\n # Q: MAVGTACRPA  60% \
  \ IGN  60%\n # T: -AVGTAC---  60% 100%  IGN\n #        -c 0.7    -    +    -\n #\
  \        -c 0.6    +    +    +\n \n # Cascaded clustering with reassignment\n #\
  \ - Corrects criteria-violoations of cascaded merging\n # - Produces more clusters\
  \ and is a bit slower\n mmseqs easy-cluster examples/DB.fasta result tmp --cluster-reassign\n\
  \ \nreferences:\n - Steinegger M, Soding J: MMseqs2 enables sensitive protein sequence\
  \ searching for the analysis of massive data sets. Nature Biotechnology, 35(11),\
  \ 1026-1028 (2017)\n - Steinegger M, Soding J: Clustering huge protein sequence\
  \ sets in linear time. Nature Communications, 9(1), 2542 (2018)\n"
generated_using:
- --help
docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
