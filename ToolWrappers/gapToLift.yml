!Command
command:
- gapToLift
positional:
- !Positional
  description: ''
  position: 0
  name: db
  optional: false
- !Positional
  description: ''
  position: 1
  name: liftFile.lft
  optional: false
named:
- !Flag
  description: '- work only on given chrom'
  synonyms:
  - -chr
  args: !SimpleFlagArg
    name: chrN
  optional: true
- !Flag
  description: '- examine gaps only >= than M'
  synonyms:
  - -minGap
  args: !SimpleFlagArg
    name: M
  optional: true
- !Flag
  description: '- do *not* perform coordinate sanity checks on gaps'
  synonyms:
  - -insane
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '- output segments to fileName.bed'
  synonyms:
  - -bedFile
  args: !SimpleFlagArg
    name: fileName.bed
  optional: true
- !Flag
  description: '- consider any type of gap not just the non-bridged gaps'
  synonyms:
  - -allowBridged
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '- N > 1 see more information about procedure'
  synonyms:
  - -verbose
  args: !SimpleFlagArg
    name: N
  optional: true
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "gapToLift - create lift file from gap table(s)\nusage:\n   gapToLift [options]\
  \ db liftFile.lft\n       uses gap table(s) from specified db.  Writes to liftFile.lft\n\
  \       generates lift file segements separated by non-bridged gaps.\noptions:\n\
  \   -chr=chrN - work only on given chrom\n   -minGap=M - examine gaps only >= than\
  \ M\n   -insane - do *not* perform coordinate sanity checks on gaps\n   -bedFile=fileName.bed\
  \ - output segments to fileName.bed\n   -allowBridged - consider any type of gap\
  \ not just the non-bridged gaps\n   -verbose=N - N > 1 see more information about\
  \ procedure\n"
generated_using: []
