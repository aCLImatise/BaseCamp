from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Pbaa_Cluster_V0_1_0 = CommandToolBuilder(tool="pbaa_cluster", base_command=["pbaa", "cluster"], inputs=[ToolInput(tag="in_filter", input_type=Boolean(optional=True), prefix="--filter", doc=InputDocumentation(doc="INT    Low coverage kmer count cutoff. Automatically adjusted by min-var-frequency. [3]")), ToolInput(tag="in_trim_ends", input_type=Boolean(optional=True), prefix="--trim-ends", doc=InputDocumentation(doc="INT    Number of bases to trim from both sides of reads during graph construction. [20]")), ToolInput(tag="in_min_var_frequency", input_type=Boolean(optional=True), prefix="--min-var-frequency", doc=InputDocumentation(doc="FLOAT  Minimum variant frequency. [0.05]")), ToolInput(tag="in_fixed_cluster_count", input_type=Boolean(optional=True), prefix="--fixed-cluster-count", doc=InputDocumentation(doc="INT    Maximum number of clusters per locus/guide-group. [10]")), ToolInput(tag="in_em_iterations", input_type=Boolean(optional=True), prefix="--em-iterations", doc=InputDocumentation(doc="INT    Number of iterations to run expectation maximization. [300]")), ToolInput(tag="in_no_cluster_by_length", input_type=Boolean(optional=True), prefix="--no-cluster-by-length", doc=InputDocumentation(doc="Disable fallback length clustering if no variants were discovered.")), ToolInput(tag="in_min_cluster_frequency", input_type=Boolean(optional=True), prefix="--min-cluster-frequency", doc=InputDocumentation(doc="FLOAT  Low frequency cluster cutoff. [0.1]")), ToolInput(tag="in_min_cluster_read_count", input_type=Boolean(optional=True), prefix="--min-cluster-read-count", doc=InputDocumentation(doc="INT    Low read count cluster cutoff. [5]")), ToolInput(tag="in_max_consensus_reads", input_type=Boolean(optional=True), prefix="--max-consensus-reads", doc=InputDocumentation(doc="INT    Maximum number of reads to use per cluster consensus. [100]")), ToolInput(tag="in_off_target_groups", input_type=Boolean(optional=True), prefix="--off-target-groups", doc=InputDocumentation(doc="STR    Group names to exclude, i.e. these loci are off-target (not amplified).")), ToolInput(tag="in_max_amplicon_size", input_type=Boolean(optional=True), prefix="--max-amplicon-size", doc=InputDocumentation(doc="INT    Upper read length cutoff, longer reads will be skipped. [15000]")), ToolInput(tag="in_min_read_qv", input_type=Boolean(optional=True), prefix="--min-read-qv", doc=InputDocumentation(doc="FLOAT  Low read QV cutoff. [20]")), ToolInput(tag="in_num_threads", input_type=Boolean(optional=True), prefix="--num-threads", doc=InputDocumentation(doc="INT    Number of threads to use, 0 means autodetection. [0]")), ToolInput(tag="in_log_level", input_type=Boolean(optional=True), prefix="--log-level", doc=InputDocumentation(doc="STR    Set log level. Valid choices: (TRACE, DEBUG, INFO, WARN, FATAL). [WARN]")), ToolInput(tag="in_log_file", input_type=Boolean(optional=True), prefix="--log-file", doc=InputDocumentation(doc="FILE   Log to a file, instead of stderr.")), ToolInput(tag="in_prefix", input_type=String(), position=0, doc=InputDocumentation(doc="STR    Output prefix for run."))], outputs=[], container="quay.io/biocontainers/pbaa:0.1.4--0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Pbaa_Cluster_V0_1_0().translate("wdl")

