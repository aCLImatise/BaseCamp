from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, File, String

Snp_Pileup_V0_1_0 = CommandToolBuilder(tool="snp_pileup", base_command=["snp-pileup"], inputs=[ToolInput(tag="in_count_orphans", input_type=Boolean(optional=True), prefix="--count-orphans", doc=InputDocumentation(doc="Do not discard anomalous read pairs.")), ToolInput(tag="in_max_depth", input_type=Int(optional=True), prefix="--max-depth", doc=InputDocumentation(doc="Sets the maximum depth. Default is 4000.")), ToolInput(tag="in_gzip", input_type=File(optional=True), prefix="--gzip", doc=InputDocumentation(doc="Compresses the output file with BGZF.")), ToolInput(tag="in_progress", input_type=Boolean(optional=True), prefix="--progress", doc=InputDocumentation(doc="Show a progress bar. WARNING: requires additional\ntime to calculate number of SNPs, and will take\nlonger than normal.")), ToolInput(tag="in_pseudo_snps", input_type=String(optional=True), prefix="--pseudo-snps", doc=InputDocumentation(doc="Every MULTIPLE positions, if there is no SNP,\ninsert a blank record with the total count at the\nposition.")), ToolInput(tag="in_min_map_quality", input_type=Int(optional=True), prefix="--min-map-quality", doc=InputDocumentation(doc="Sets the minimum threshold for mapping\nquality. Default is 0.")), ToolInput(tag="in_min_base_quality", input_type=Int(optional=True), prefix="--min-base-quality", doc=InputDocumentation(doc="Sets the minimum threshold for base quality.\nDefault is 0.")), ToolInput(tag="in_min_read_counts", input_type=Int(optional=True), prefix="--min-read-counts", doc=InputDocumentation(doc="Comma separated list of minimum read counts for\na position to be output. Default is 0.")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Show detailed messages.")), ToolInput(tag="in_ignore_overlaps", input_type=Boolean(optional=True), prefix="--ignore-overlaps", doc=InputDocumentation(doc="Disable read-pair overlap detection.")), ToolInput(tag="in_option_dot_dot_dot", input_type=String(optional=True), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_vcf_file", input_type=File(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_output_file", input_type=File(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_sequence_files_dot_dot_dot", input_type=String(), position=3, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_gzip", output_type=File(optional=True), selector=InputSelector(input_to_select="in_gzip", type_hint=File()), doc=OutputDocumentation(doc="Compresses the output file with BGZF.")), ToolOutput(tag="out_output_file", output_type=File(), selector=InputSelector(input_to_select="in_output_file", type_hint=File()), doc=OutputDocumentation(doc=""))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Snp_Pileup_V0_1_0().translate("wdl", allow_empty_container=True)

