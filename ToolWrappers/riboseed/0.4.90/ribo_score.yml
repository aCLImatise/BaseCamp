!Command
command:
- ribo
- score
positional: []
named:
- !Flag
  description: directory in which to place the output files
  synonyms:
  - -o
  - --output
  args: !SimpleFlagArg
    name: OUTPUT
  optional: true
- !Flag
  description: 'length of flanking regions, in bp; default: 1000'
  synonyms:
  - -l
  - --flanking_length
  args: !SimpleFlagArg
    name: FLANKING
  optional: true
- !Flag
  description: minimum percent identity
  synonyms:
  - -p
  - --min_percent
  args: !SimpleFlagArg
    name: MIN_PERCENT
  optional: true
- !Flag
  description: extenssion of reference, usually fasta
  synonyms:
  - -f
  - --assembly_ext
  args: !SimpleFlagArg
    name: ASSEMBLY_EXT
  optional: true
- !Flag
  description: extension of reference, usually .gb
  synonyms:
  - -g
  - --ref_ext
  args: !SimpleFlagArg
    name: REF_EXT
  optional: true
- !Flag
  description: "if true, blast full sequences along with just the\nflanking. Interpretation\
    \ is not implemented currently\nas false positives cant be detected this way"
  synonyms:
  - -F
  - --blast_Full
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Logger writes debug to file in output dir; this sets\nverbosity level\
    \ sent to stderr. 1 = debug(), 2 =\ninfo(), 3 = warning(), 4 = error() and 5 =\
    \ critical();\ndefault: 2\n"
  synonyms:
  - -v
  - --verbosity
  args: !ChoiceFlagArg
    choices: !!set
      '4':
      '2':
      '5':
      '3':
      '1':
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: ribo score [-h] [-o OUTPUT] [-l FLANKING] [-p MIN_PERCENT]\n  \
  \                [-f ASSEMBLY_EXT] [-g REF_EXT] [-F] [-v {1,2,3,4,5}]\n        \
  \          indir\n\nThis does some simple blasting to detect correctness of riboSeed\
  \ results\n\npositional arguments:\n  indir                 dir containing a genbank\
  \ file, assembly filesas\n                        fastas. Usually the 'mauve' dir\
  \ in the riboSeed\n                        results\n\noptional arguments:\n  -h,\
  \ --help            show this help message and exit\n  -o OUTPUT, --output OUTPUT\n\
  \                        directory in which to place the output files\n  -l FLANKING,\
  \ --flanking_length FLANKING\n                        length of flanking regions,\
  \ in bp; default: 1000\n  -p MIN_PERCENT, --min_percent MIN_PERCENT\n          \
  \              minimum percent identity\n  -f ASSEMBLY_EXT, --assembly_ext ASSEMBLY_EXT\n\
  \                        extenssion of reference, usually fasta\n  -g REF_EXT, --ref_ext\
  \ REF_EXT\n                        extension of reference, usually .gb\n  -F, --blast_Full\
  \      if true, blast full sequences along with just the\n                     \
  \   flanking. Interpretation is not implemented currently\n                    \
  \    as false positives cant be detected this way\n  -v {1,2,3,4,5}, --verbosity\
  \ {1,2,3,4,5}\n                        Logger writes debug to file in output dir;\
  \ this sets\n                        verbosity level sent to stderr. 1 = debug(),\
  \ 2 =\n                        info(), 3 = warning(), 4 = error() and 5 = critical();\n\
  \                        default: 2\n"
generated_using:
- --help
