class: CommandLineTool
id: ribo_seed.cwl
inputs:
- id: in_reference_genbank
  doc: "genbank reference, used to estimate insert sizes, and\ncompare with QUAST"
  type: string?
  inputBinding:
    prefix: --reference_genbank
- id: in_output
  doc: 'output directory; default: /'
  type: Directory?
  inputBinding:
    prefix: --output
- id: in_fast_q_one
  doc: forward fastq reads, can be compressed
  type: long?
  inputBinding:
    prefix: --fastq1
- id: in_fast_q_two
  doc: reverse fastq reads, can be compressed
  type: long?
  inputBinding:
    prefix: --fastq2
- id: in_fast_qs_one
  doc: single fastq reads
  type: long?
  inputBinding:
    prefix: --fastqS1
- id: in_flanking_length
  doc: 'length of flanking regions, in bp; default: 1000'
  type: long?
  inputBinding:
    prefix: --flanking_length
- id: in_just_seed
  doc: "Don't do an assembly, just generate the long read\n'seeds'; default: False"
  type: boolean?
  inputBinding:
    prefix: --just_seed
- id: in_experiment_name
  doc: 'prefix for results files; default: riboSeed'
  type: string?
  inputBinding:
    prefix: --experiment_name
- id: in_mapper
  doc: 'available mappers: smalt and bwa; default: bwa'
  type: string?
  inputBinding:
    prefix: --mapper
- id: in_km_ers
  doc: "kmers used for final assembly, separated by commas\nsuch as21,33,55,77,99,127\
    \ . Can be set to 'auto',\nwhere SPAdes chooses. We ensure kmers are not too big\n\
    or too close to read length; default:\n21,33,55,77,99,127"
  type: long?
  inputBinding:
    prefix: --kmers
- id: in_pre_km_ers
  doc: "kmers used during seeding assemblies, separated bt\ncommas; default: 21,33,55,77,99"
  type: long?
  inputBinding:
    prefix: --pre_kmers
- id: in_force_km_ers
  doc: "skip checking to see if kmerchoice is appropriate to\nread length. Sometimes\
    \ kmers longer than reads can\nhelp in the final assembly, as the long reads\n\
    generated by riboSeed contain kmers longer than the\nread length"
  type: boolean?
  inputBinding:
    prefix: --force_kmers
- id: in_score_min
  doc: "If using smalt, this sets the '-m' param; default with\nsmalt is inferred\
    \ from read length. If using BWA,\nreads mapping with ASscore lower than this\
    \ will be\nrejected; default with BWA is half of read length"
  type: long?
  inputBinding:
    prefix: --score_min
- id: in_min_assembly_len
  doc: "if initial SPAdes assembly largest contig is not at\nleast as long as --min_assembly_len,\
    \ reject. Set this\nto the length of the seed sequence; if it is not\nachieved,\
    \ seeding across regions will likely fail;\ndefault: 6000"
  type: long?
  inputBinding:
    prefix: --min_assembly_len
- id: in_include_shorts
  doc: if assembled contig is smaller than
  type: boolean?
  inputBinding:
    prefix: --include_shorts
- id: in_subtract
  doc: "if --subtract reads already used in previousround of\nsubassembly will not\
    \ be included in subsequent rounds.\nThis can lead to problems with multiple mapping\
    \ and\ninflated coverage."
  type: boolean?
  inputBinding:
    prefix: --subtract
- id: in_linear
  doc: "if genome is known to not be circular and a region of\ninterest (including\
    \ flanking bits) extends past\nchromosome end, this extends the seqence past\n\
    chromosome origin forward by --padding; default: False"
  type: boolean?
  inputBinding:
    prefix: --linear
- id: in_min_flank_depth
  doc: "a subassembly will not be performed if this minimum\ndepth is not achieved\
    \ on both the 3' and5' end of the\npseudocontig. default: 0"
  type: long?
  inputBinding:
    prefix: --min_flank_depth
- id: in_sub_assembler
  doc: "assembler to use for subassembly scheme. SPAdes is\nused by default, but Skesa\
    \ is a new addition that\nseems to work for subassembly and is faster"
  type: string?
  inputBinding:
    prefix: --subassembler
- id: in_ref_as_contig
  doc: "ignore: reference will not be used in subassembly.\ntrusted: SPAdes will use\
    \ the seed sequences as a\n--trusted-contig; untrusted: SPAdes will treat as\n\
    --untrusted-contig. infer: if mapping percentage over\n80%, 'trusted'; else 'untrusted'.\
    \ See SPAdes docs for\ndetails. default: infer"
  type: string?
  inputBinding:
    prefix: --ref_as_contig
- id: in_additional_libs
  doc: "include this string (usually additional library, but\ncould be other SPAdes\
    \ args) these libraries in final\nassembly in addition to the reads supplied as\
    \ -F and\n-R. They must be supplied according to SPAdes arg\nnaming scheme. Use\
    \ at own risk.default: None"
  type: string?
  inputBinding:
    prefix: --additional_libs
- id: in_clean_temps
  doc: "if --clean_temps, mapping files will be removed once\nthey are no no longer\
    \ needed during the mapping\niterations to save space; default: False"
  type: boolean?
  inputBinding:
    prefix: --clean_temps
- id: in_enable_spades_error_core_ction
  doc: "Default behaviour should be to skip read error\ncorrection: http://cab.spbu.ru/benchmarking-tools-for-\n\
    de-novo-microbial-assembly/ . This re-enables\nitdefault: False"
  type: boolean?
  inputBinding:
    prefix: --enable-spades-error-corection
- id: in_skip_control
  doc: "if --skip_control, no de novo assembly will be done;\ndefault: False"
  type: boolean?
  inputBinding:
    prefix: --skip_control
- id: in_iterations
  doc: "if iterations>1, multiple seedings will occur after\nsubassembly of seed regions;\
    \ if setting --target_len,\nseedings will continue until --iterations are\ncompleted\
    \ or --target_len is matched or exceeded;\ndefault: 3"
  type: long?
  inputBinding:
    prefix: --iterations
- id: in_verbosity
  doc: "Logger writes debug to file in output dir; this sets\nverbosity level sent\
    \ to stderr. 1 = debug(), 2 =\ninfo(), 3 = warning(), 4 = error() and 5 = critical();\n\
    default: 2"
  type: File?
  inputBinding:
    prefix: --verbosity
- id: in_target_len
  doc: "if set, iterations will continue until contigs reach\nthis length, or max\
    \ iterations (set by --iterations)\nhave been completed. Set as fraction of original\
    \ seed\nlength by giving a decimal between 0 and 5, or set as\nan absolute number\
    \ of base pairs by giving an integer\ngreater than 50. Not used by default"
  type: double?
  inputBinding:
    prefix: --target_len
- id: in_serialize
  doc: "if --serialize, runs seeding and assembly without\nmultiprocessing. This is\
    \ recommended for machines with\nless than 8GB RAM: False"
  type: boolean?
  inputBinding:
    prefix: --serialize
- id: in_consensus
  doc: "if --initial_consensus, generate a mpileup-based\nconsesnsus instead of doing\
    \ a proper spades\nsubassembly"
  type: boolean?
  inputBinding:
    prefix: --consensus
- id: in_s_malt_scoring
  doc: "if mapping with SMALT, submit custom smalt scoring via\nsmalt -S scorespec\
    \ option; default:\nmatch=1,subst=-4,gapopen=-4,gapext=-3"
  type: long?
  inputBinding:
    prefix: --smalt_scoring
- id: in_mapper_args
  doc: "submit custom parameters to mapper. And by mapper, I\nmean bwa, cause we dont\
    \ support this option for SMALT,\nsorry. This requires knowledge of your chosen\
    \ mapper's\noptional arguments. Proceed with caution! default: -L\n0,0 -U 0 -a"
  type: long?
  inputBinding:
    prefix: --mapper_args
- id: in_spades_exe
  doc: 'Path to SPAdes executable; default: spades.py'
  type: File?
  inputBinding:
    prefix: --spades_exe
- id: in_sam_tools_exe
  doc: 'Path to samtools executable; default: samtools'
  type: File?
  inputBinding:
    prefix: --samtools_exe
- id: in_skes_a_exe
  doc: 'Path to skesa executable; default: skesa'
  type: File?
  inputBinding:
    prefix: --skesa_exe
- id: in_s_malt_exe
  doc: 'Path to smalt executable; default: smalt'
  type: File?
  inputBinding:
    prefix: --smalt_exe
- id: in_bwa_exe
  doc: 'Path to BWA executable; default: bwa'
  type: File?
  inputBinding:
    prefix: --bwa_exe
- id: in_quast_exe
  doc: 'Path to quast executable; default: quast'
  type: File?
  inputBinding:
    prefix: --quast_exe
- id: in_bcf_tools_exe
  doc: 'Path to bcftools executable; default: bcftools'
  type: File?
  inputBinding:
    prefix: --bcftools_exe
- id: in_cores
  doc: 'cores to be used; default: None'
  type: string?
  inputBinding:
    prefix: --cores
- id: in_threads
  doc: "if your cores are hyperthreaded, set number threads to\nthe number of threads\
    \ per processer.If unsure, see\n'cat /proc/cpuinfo' under 'cpu cores', or 'lscpu'\n\
    under 'Thread(s) per core'.: 1"
  type: string?
  inputBinding:
    prefix: --threads
- id: in_memory
  doc: 'system memory available; default: 8'
  type: long?
  inputBinding:
    prefix: --memory
- id: in_inferred
  doc: --damn_the_torpedos   Ignore certain errors, full speed ahead!
  type: string
  inputBinding:
    position: 0
outputs:
- id: out_stdout
  doc: Standard output stream
  type: stdout
- id: out_output
  doc: 'output directory; default: /'
  type: Directory?
  outputBinding:
    glob: $(inputs.in_output)
- id: out_verbosity
  doc: "Logger writes debug to file in output dir; this sets\nverbosity level sent\
    \ to stderr. 1 = debug(), 2 =\ninfo(), 3 = warning(), 4 = error() and 5 = critical();\n\
    default: 2"
  type: File?
  outputBinding:
    glob: $(inputs.in_verbosity)
hints: []
cwlVersion: v1.1
baseCommand:
- ribo
- seed
