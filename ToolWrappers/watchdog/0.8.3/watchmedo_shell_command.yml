!Command
command:
- watchmedo
- shell-command
positional:
- !Positional
  optional: false
  position: 0
  name: directories
  description: "directories to watch (default: '.')"
named:
- !Flag
  optional: true
  synonyms:
  - -c
  - --command
  description: "shell command executed in response to matching events.\nThese interpolation\
    \ variables are available to your\ncommand string:: ${watch_src_path} - event\
    \ source\npath; ${watch_dest_path} - event destination path (for\nmoved events);\
    \ ${watch_event_type} - event type;\n${watch_object} - ``file`` or ``directory``\
    \ Note::\nPlease ensure you do not use double quotes (\") to\nquote your command\
    \ string. That will force your shell\nto interpolate before the command is processed\
    \ by this\nsubcommand. Example option usage:: --command='echo\n\"${watch_src_path}\"\
    ' (default: -)"
  args: !SimpleFlagArg
    name: COMMAND
- !Flag
  optional: true
  synonyms:
  - -p
  - --pattern
  - --patterns
  description: "matches event paths with these patterns (separated by\n;). (default:\
    \ '*')"
  args: !SimpleFlagArg
    name: PATTERNS
- !Flag
  optional: true
  synonyms:
  - -i
  - --ignore-pattern
  - --ignore-patterns
  description: "ignores event paths with these patterns (separated by\n;). (default:\
    \ '')"
  args: !SimpleFlagArg
    name: IGNORE_PATTERNS
- !Flag
  optional: true
  synonyms:
  - -D
  - --ignore-directories
  description: 'ignores events for directories (default: False)'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -R
  - --recursive
  description: 'monitors the directories recursively (default: False)'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --interval
  - --timeout
  description: "use this as the polling interval/blocking timeout\n(default: 1.0)"
  args: !SimpleFlagArg
    name: TIMEOUT
- !Flag
  optional: true
  synonyms:
  - -w
  - --wait
  description: "wait for process to finish to avoid multiple\nsimultaneous instances\
    \ (default: False)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -W
  - --drop
  description: "Ignore events that occur while command is still being\nexecuted to\
    \ avoid multiple simultaneous instances\n(default: False)\n"
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "usage: watchmedo shell-command [-h] [-c COMMAND] [-p PATTERNS]\n     \
  \                          [-i IGNORE_PATTERNS] [-D] [-R]\n                    \
  \           [--interval TIMEOUT] [-w] [-W]\n                               [directories\
  \ [directories ...]]\n\n    Subcommand to execute shell commands in response to\
  \ file system events.\n\n    :param args:\n        Command line argument options.\n\
  \    \n\npositional arguments:\n  directories           directories to watch (default:\
  \ '.')\n\noptional arguments:\n  -h, --help            show this help message and\
  \ exit\n  -c COMMAND, --command COMMAND\n                        shell command executed\
  \ in response to matching events.\n                        These interpolation variables\
  \ are available to your\n                        command string:: ${watch_src_path}\
  \ - event source\n                        path; ${watch_dest_path} - event destination\
  \ path (for\n                        moved events); ${watch_event_type} - event\
  \ type;\n                        ${watch_object} - ``file`` or ``directory`` Note::\n\
  \                        Please ensure you do not use double quotes (\") to\n  \
  \                      quote your command string. That will force your shell\n \
  \                       to interpolate before the command is processed by this\n\
  \                        subcommand. Example option usage:: --command='echo\n  \
  \                      \"${watch_src_path}\"' (default: -)\n  -p PATTERNS, --pattern\
  \ PATTERNS, --patterns PATTERNS\n                        matches event paths with\
  \ these patterns (separated by\n                        ;). (default: '*')\n  -i\
  \ IGNORE_PATTERNS, --ignore-pattern IGNORE_PATTERNS, --ignore-patterns IGNORE_PATTERNS\n\
  \                        ignores event paths with these patterns (separated by\n\
  \                        ;). (default: '')\n  -D, --ignore-directories\n       \
  \                 ignores events for directories (default: False)\n  -R, --recursive\
  \       monitors the directories recursively (default: False)\n  --interval TIMEOUT,\
  \ --timeout TIMEOUT\n                        use this as the polling interval/blocking\
  \ timeout\n                        (default: 1.0)\n  -w, --wait            wait\
  \ for process to finish to avoid multiple\n                        simultaneous\
  \ instances (default: False)\n  -W, --drop            Ignore events that occur while\
  \ command is still being\n                        executed to avoid multiple simultaneous\
  \ instances\n                        (default: False)\n"
generated_using:
- --help
docker_image:
