from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Metagraph_Protein_Assemble_V0_1_0 = CommandToolBuilder(tool="metagraph_Protein_assemble", base_command=["metagraph_Protein", "assemble"], inputs=[ToolInput(tag="in_prune_tips", input_type=Boolean(optional=True), prefix="--prune-tips", doc=InputDocumentation(doc="[INT]   prune all dead ends of this length and shorter [0]")), ToolInput(tag="in_unit_igs", input_type=Boolean(optional=True), prefix="--unitigs", doc=InputDocumentation(doc="extract unitigs [off]")), ToolInput(tag="in_enumerate", input_type=Boolean(optional=True), prefix="--enumerate", doc=InputDocumentation(doc="enumerate sequences assembled and dumped to FASTA [off]")), ToolInput(tag="in_to_gfa", input_type=Boolean(optional=True), prefix="--to-gfa", doc=InputDocumentation(doc="dump graph layout to GFA [off]")), ToolInput(tag="in_compacted", input_type=Boolean(optional=True), prefix="--compacted", doc=InputDocumentation(doc="dump compacted de Bruijn graph to GFA [off]")), ToolInput(tag="in_header", input_type=Boolean(optional=True), prefix="--header", doc=InputDocumentation(doc="[STR]       header for sequences in FASTA output []")), ToolInput(tag="in_parallel", input_type=Boolean(optional=True), prefix="--parallel", doc=InputDocumentation(doc="[INT]     use multiple threads for computation [1]")), ToolInput(tag="in_annotator", input_type=Boolean(optional=True), prefix="--annotator", doc=InputDocumentation(doc="[STR]                    annotator to load []")), ToolInput(tag="in_label_mask_in", input_type=Boolean(optional=True), prefix="--label-mask-in", doc=InputDocumentation(doc="[STR]                label to include in masked graph")), ToolInput(tag="in_label_mask_out", input_type=Boolean(optional=True), prefix="--label-mask-out", doc=InputDocumentation(doc="[STR]               label to exclude from masked graph")), ToolInput(tag="in_label_mask_in_fraction", input_type=Boolean(optional=True), prefix="--label-mask-in-fraction", doc=InputDocumentation(doc="[FLOAT]     minimum fraction of mask-in labels among the set of masked labels [1.0]")), ToolInput(tag="in_label_mask_out_fraction", input_type=Boolean(optional=True), prefix="--label-mask-out-fraction", doc=InputDocumentation(doc="[FLOAT]    maximum fraction of mask-out labels among the set of masked labels [0.0]")), ToolInput(tag="in_label_other_fraction", input_type=Boolean(optional=True), prefix="--label-other-fraction", doc=InputDocumentation(doc="[FLOAT]       maximum fraction of other labels allowed [1.0]")), ToolInput(tag="in_filter_by_km_er", input_type=Boolean(optional=True), prefix="--filter-by-kmer", doc=InputDocumentation(doc="mask out graph k-mers individually [off]")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="switch on verbose output [off]")), ToolInput(tag="in_o", input_type=String(optional=True), prefix="-o", doc=InputDocumentation(doc="")), ToolInput(tag="in_graph", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[], container="quay.io/biocontainers/metagraph:0.2.0--h74b8f77_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Metagraph_Protein_Assemble_V0_1_0().translate("wdl")

