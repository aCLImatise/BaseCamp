!Command
command:
- regtools
- cis-splice-effects
- associate
positional:
- !Positional
  optional: false
  position: 0
  name: variants.vcf
  description: ''
- !Positional
  optional: false
  position: 1
  name: junctions.bed
  description: ''
- !Positional
  optional: false
  position: 2
  name: ref.fa
  description: ''
- !Positional
  optional: false
  position: 3
  name: annotations.gtf
  description: ''
named:
- !Flag
  optional: true
  synonyms:
  - -o
  description: Output file containing the aberrant splice junctions with annotations.
    [STDOUT]
  args: !SimpleFlagArg
    name: STR
- !Flag
  optional: true
  synonyms:
  - -v
  description: Output file containing variants annotated as splice relevant (VCF format).
  args: !SimpleFlagArg
    name: STR
- !Flag
  optional: true
  synonyms:
  - -j
  description: Output file containing the aberrant junctions in BED12 format.
  args: !SimpleFlagArg
    name: STR
- !Flag
  optional: true
  synonyms:
  - -a
  description: "Minimum anchor length. Junctions which satisfy a minimum\nanchor length\
    \ on both sides are reported. [8]"
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - -m
  description: Minimum intron length. [70]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - -M
  description: Maximum intron length. [500000]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - -w
  description: "Window size in b.p to identify splicing events in.\nThe tool identifies\
    \ events in variant.start +/- w basepairs.\nDefault behaviour is to look at the\
    \ window between previous and next exons."
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - -e
  description: "Maximum distance from the start/end of an exon\nto annotate a variant\
    \ as relevant to splicing, the variant\nis in exonic space, i.e a coding variant.\
    \ [3]"
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - -i
  description: "Maximum distance from the start/end of an exon\nto annotate a variant\
    \ as relevant to splicing, the variant\nis in intronic space. [2]"
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - -I
  description: Annotate variants in intronic space within a transcript(not to be used
    with -i).
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -E
  description: Annotate variants in exonic space within a transcript(not to be used
    with -e).
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -S
  description: Don't skip single exon transcripts.
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "\nProgram:\tregtools\nVersion:\t0.5.2\nassociate: invalid option -- '-'\n\
  Usage:\t\tregtools cis-splice-effects associate [options] variants.vcf junctions.bed\
  \ ref.fa annotations.gtf\nOptions:\n\t\t-o STR\tOutput file containing the aberrant\
  \ splice junctions with annotations. [STDOUT]\n\t\t-v STR\tOutput file containing\
  \ variants annotated as splice relevant (VCF format).\n\t\t-j STR\tOutput file containing\
  \ the aberrant junctions in BED12 format.\n\t\t-a INT\tMinimum anchor length. Junctions\
  \ which satisfy a minimum \n\t\t\t anchor length on both sides are reported. [8]\n\
  \t\t-m INT\tMinimum intron length. [70]\n\t\t-M INT\tMaximum intron length. [500000]\n\
  \t\t-w INT\tWindow size in b.p to identify splicing events in.\n\t\t\t The tool\
  \ identifies events in variant.start +/- w basepairs.\n\t\t\t Default behaviour\
  \ is to look at the window between previous and next exons.\n\t\t-e INT\tMaximum\
  \ distance from the start/end of an exon \n\t\t\t to annotate a variant as relevant\
  \ to splicing, the variant \n\t\t\t is in exonic space, i.e a coding variant. [3]\n\
  \t\t-i INT\tMaximum distance from the start/end of an exon \n\t\t\t to annotate\
  \ a variant as relevant to splicing, the variant \n\t\t\t is in intronic space.\
  \ [2]\n\t\t-I\tAnnotate variants in intronic space within a transcript(not to be\
  \ used with -i).\n\t\t-E\tAnnotate variants in exonic space within a transcript(not\
  \ to be used with -e).\n\t\t-S\tDon't skip single exon transcripts.\n\nError parsing\
  \ inputs!(1)\n\n\n"
generated_using:
- --help
docker_image:
