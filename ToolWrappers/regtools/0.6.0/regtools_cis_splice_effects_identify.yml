!Command
command:
- regtools
- cis-splice-effects
- identify
positional:
- !Positional
  description: ''
  position: 0
  name: variants.vcf
  optional: false
- !Positional
  description: ''
  position: 1
  name: alignments.bam
  optional: false
- !Positional
  description: ''
  position: 2
  name: ref.fa
  optional: false
- !Positional
  description: ''
  position: 3
  name: annotations.gtf
  optional: false
named:
- !Flag
  description: Output file containing the aberrant splice junctions with annotations.
    [STDOUT]
  synonyms:
  - -o
  args: !SimpleFlagArg
    name: STR
  optional: true
- !Flag
  description: Output file containing variants annotated as splice relevant (VCF format).
  synonyms:
  - -v
  args: !SimpleFlagArg
    name: STR
  optional: true
- !Flag
  description: Output file containing the aberrant junctions in BED12 format.
  synonyms:
  - -j
  args: !SimpleFlagArg
    name: STR
  optional: true
- !Flag
  description: "Strand specificity of RNA library preparation\n(0 = unstranded, 1\
    \ = first-strand/RF, 2, = second-strand/FR). REQUIRED"
  synonyms:
  - -s
  args: !SimpleFlagArg
    name: INT
  optional: true
- !Flag
  description: Tag used in bam to label strand. [XS]
  synonyms:
  - -t
  args: !SimpleFlagArg
    name: STR
  optional: true
- !Flag
  description: "Minimum anchor length. Junctions which satisfy a minimum\nanchor length\
    \ on both sides are reported. [8]"
  synonyms:
  - -a
  args: !SimpleFlagArg
    name: INT
  optional: true
- !Flag
  description: Minimum intron length. [70]
  synonyms:
  - -m
  args: !SimpleFlagArg
    name: INT
  optional: true
- !Flag
  description: Maximum intron length. [500000]
  synonyms:
  - -M
  args: !SimpleFlagArg
    name: INT
  optional: true
- !Flag
  description: "Window size in b.p to identify splicing events in.\nThe tool identifies\
    \ events in variant.start +/- w basepairs.\nDefault behaviour is to look at the\
    \ window between previous and next exons."
  synonyms:
  - -w
  args: !SimpleFlagArg
    name: INT
  optional: true
- !Flag
  description: "Maximum distance from the start/end of an exon\nto annotate a variant\
    \ as relevant to splicing, the variant\nis in exonic space, i.e a coding variant.\
    \ [3]"
  synonyms:
  - -e
  args: !SimpleFlagArg
    name: INT
  optional: true
- !Flag
  description: "Maximum distance from the start/end of an exon\nto annotate a variant\
    \ as relevant to splicing, the variant\nis in intronic space. [2]"
  synonyms:
  - -i
  args: !SimpleFlagArg
    name: INT
  optional: true
- !Flag
  description: Annotate variants in intronic space within a transcript(not to be used
    with -i).
  synonyms:
  - -I
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Annotate variants in exonic space within a transcript(not to be used
    with -e).
  synonyms:
  - -E
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Don't skip single exon transcripts.
  synonyms:
  - -S
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "\nProgram:\tregtools\nVersion:\t0.5.2\nidentify: invalid option -- '-'\n\
  Usage:\t\tregtools cis-splice-effects identify [options] variants.vcf alignments.bam\
  \ ref.fa annotations.gtf\nOptions:\n\t\t-o STR\tOutput file containing the aberrant\
  \ splice junctions with annotations. [STDOUT]\n\t\t-v STR\tOutput file containing\
  \ variants annotated as splice relevant (VCF format).\n\t\t-j STR\tOutput file containing\
  \ the aberrant junctions in BED12 format.\n\t\t-s INT\tStrand specificity of RNA\
  \ library preparation \n\t\t\t (0 = unstranded, 1 = first-strand/RF, 2, = second-strand/FR).\
  \ REQUIRED\n\t\t-t STR\tTag used in bam to label strand. [XS]\n\t\t-a INT\tMinimum\
  \ anchor length. Junctions which satisfy a minimum \n\t\t\t anchor length on both\
  \ sides are reported. [8]\n\t\t-m INT\tMinimum intron length. [70]\n\t\t-M INT\t\
  Maximum intron length. [500000]\n\t\t-w INT\tWindow size in b.p to identify splicing\
  \ events in.\n\t\t\t The tool identifies events in variant.start +/- w basepairs.\n\
  \t\t\t Default behaviour is to look at the window between previous and next exons.\n\
  \t\t-e INT\tMaximum distance from the start/end of an exon \n\t\t\t to annotate\
  \ a variant as relevant to splicing, the variant \n\t\t\t is in exonic space, i.e\
  \ a coding variant. [3]\n\t\t-i INT\tMaximum distance from the start/end of an exon\
  \ \n\t\t\t to annotate a variant as relevant to splicing, the variant \n\t\t\t is\
  \ in intronic space. [2]\n\t\t-I\tAnnotate variants in intronic space within a transcript(not\
  \ to be used with -i).\n\t\t-E\tAnnotate variants in exonic space within a transcript(not\
  \ to be used with -e).\n\t\t-S\tDon't skip single exon transcripts.\n\nError parsing\
  \ inputs!(1)\n\n\n"
generated_using:
- --help
