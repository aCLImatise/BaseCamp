from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean

_Cirdna_V0_1_0 = CommandToolBuilder(tool="_cirdna", base_command=["_cirdna"], inputs=[ToolInput(tag="in_blocktype", input_type=Boolean(optional=True), prefix="-blocktype", doc=InputDocumentation(doc="menu       [Filled] Type of blocks (Values: Open (Open\nblocks); Filled (Filled blocks); Outline\n(Black border))")), ToolInput(tag="in_po_sticks", input_type=Boolean(optional=True), prefix="-posticks", doc=InputDocumentation(doc="selection  [Out] Ticks inside or outside the circle")), ToolInput(tag="in_pos_blocks", input_type=Boolean(optional=True), prefix="-posblocks", doc=InputDocumentation(doc="selection  [In] Text inside or outside the blocks")), ToolInput(tag="in_graph_out", input_type=Boolean(optional=True), prefix="-graphout", doc=InputDocumentation(doc="graph      [$EMBOSS_GRAPHICS value, or png] Graph type\n(ps, hpgl, hp7470, hp7580, meta, cps, tek,\ntekt, none, data, png, gif, svg)")), ToolInput(tag="in_max_groups", input_type=Boolean(optional=True), prefix="-maxgroups", doc=InputDocumentation(doc="integer    [20] Maximum number of groups (Integer 1 or\nmore)")), ToolInput(tag="in_max_labels", input_type=Boolean(optional=True), prefix="-maxlabels", doc=InputDocumentation(doc="integer    [10000] Maximum number of labels (Integer 1\nor more)")), ToolInput(tag="in_origin_angle", input_type=Boolean(optional=True), prefix="-originangle", doc=InputDocumentation(doc="float      [90] Position in degrees of the molecule's\norigin on the circle (Number from 0.000 to\n360.000)")), ToolInput(tag="in_inter_colour", input_type=Boolean(optional=True), prefix="-intercolour", doc=InputDocumentation(doc="integer    [1] Colour of junctions between blocks\n(enter a colour number) (Integer from 0 to\n15)")), ToolInput(tag="in_inter_ticks", input_type=Boolean(optional=True), prefix="-interticks", doc=InputDocumentation(doc="boolean    [N] Horizontal junctions between ticks")), ToolInput(tag="in_gap_size", input_type=Boolean(optional=True), prefix="-gapsize", doc=InputDocumentation(doc="integer    [500] Interval between ticks in the ruler\n(Integer 0 or more)")), ToolInput(tag="in_tick_lines", input_type=Boolean(optional=True), prefix="-ticklines", doc=InputDocumentation(doc="boolean    [N] Vertical lines at the ruler's ticks")), ToolInput(tag="in_textheight", input_type=Boolean(optional=True), prefix="-textheight", doc=InputDocumentation(doc="float      [1.0] Height of text. Enter a number <1.0 or\n>1.0 to decrease or increase the size,\nrespectively (Number 0.000 or more)")), ToolInput(tag="in_text_length", input_type=Boolean(optional=True), prefix="-textlength", doc=InputDocumentation(doc="float      [1.0] Length of text. Enter a number <1.0 or\n>1.0 to decrease or increase the size,\nrespectively (Number 0.000 or more)")), ToolInput(tag="in_tick_height", input_type=Boolean(optional=True), prefix="-tickheight", doc=InputDocumentation(doc="float      [1.0] Height of ticks. Enter a number <1.0\nor >1.0 to decrease or increase the size,\nrespectively (Number 0.000 or more)")), ToolInput(tag="in_block_height", input_type=Boolean(optional=True), prefix="-blockheight", doc=InputDocumentation(doc="float      [1.0] Height of blocks. Enter a number <1.0\nor >1.0 to decrease or increase the size,\nrespectively (Number 0.000 or more)")), ToolInput(tag="in_range_height", input_type=Boolean(optional=True), prefix="-rangeheight", doc=InputDocumentation(doc="float      [1.0] Height of range ends. Enter a number\n<1.0 or >1.0 to decrease or increase the\nsize, respectively (Number 0.000 or more)")), ToolInput(tag="in_gap_group", input_type=Boolean(optional=True), prefix="-gapgroup", doc=InputDocumentation(doc="float      [1.0] Space between groups. Enter a number\n<1.0 or >1.0 to decrease or increase the\nsize, respectively (Number 0.000 or more)")), ToolInput(tag="in_post_ext", input_type=Boolean(optional=True), prefix="-postext", doc=InputDocumentation(doc="float      [1.0] Space between text and ticks, blocks,\nand ranges. Enter a number <1.0 or >1.0 to\ndecrease or increase the size, respectively\n(Number 0.000 or more)"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    _Cirdna_V0_1_0().translate("wdl", allow_empty_container=True)

