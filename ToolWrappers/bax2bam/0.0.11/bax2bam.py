from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Boolean

Bax2Bam_V0_1_0 = CommandToolBuilder(tool="bax2bam", base_command=["bax2bam"], inputs=[ToolInput(tag="in_xml", input_type=File(optional=True), prefix="--xml", doc=InputDocumentation(doc="DataSet XML file containing a list of movie names")), ToolInput(tag="in_fof_n", input_type=File(optional=True), prefix="--fofn", doc=InputDocumentation(doc="File-of-file-names containing a list of input files")), ToolInput(tag="in_prefix_output_filenames", input_type=String(optional=True), prefix="-o", doc=InputDocumentation(doc="Prefix of output filenames. Movie name will be used if\nno prefix provided")), ToolInput(tag="in_output_xml", input_type=File(optional=True), prefix="--output-xml", doc=InputDocumentation(doc="Explicit output XML name. If none provided via this arg,\nbax2bam will use -o prefix (<prefix>.dataset.xml). If\nthat is not specified either, the output XML filename\nwill be <moviename>.dataset.xml")), ToolInput(tag="in_sub_read", input_type=Boolean(optional=True), prefix="--subread", doc=InputDocumentation(doc="Output subreads (default)")), ToolInput(tag="in_hq_region", input_type=Boolean(optional=True), prefix="--hqregion", doc=InputDocumentation(doc="Output HQ regions")), ToolInput(tag="in_polymerase_read", input_type=Boolean(optional=True), prefix="--polymeraseread", doc=InputDocumentation(doc="Output full polymerase read")), ToolInput(tag="in_ccs", input_type=Boolean(optional=True), prefix="--ccs", doc=InputDocumentation(doc="Output CCS sequences (requires ccs.h5 input)")), ToolInput(tag="in_pulse_features", input_type=String(optional=True), prefix="--pulsefeatures", doc=InputDocumentation(doc="Comma-separated list of desired pulse features, using\nthe names listed above.")), ToolInput(tag="in_lossless_frames", input_type=Boolean(optional=True), prefix="--losslessframes", doc=InputDocumentation(doc="Store full, 16-bit IPD/PulseWidth data, instead of\n(default) downsampled, 8-bit encoding.")), ToolInput(tag="in_internal", input_type=File(optional=True), prefix="--internal", doc=InputDocumentation(doc="Output BAMs in internal mode. Currently this indicates\nthat non-sequencing ZMWs should be included in the\noutput scraps BAM file, if applicable.")), ToolInput(tag="in_allow_unrecognized_chemistry_triple", input_type=Boolean(optional=True), prefix="--allowUnrecognizedChemistryTriple", doc=InputDocumentation(doc="By default, bax2bam only allows the conversion of files\nwith chemistries that are supported in SMRT Analysis 3.\nSet this flag to disable the strict check and allow\ngeneration of BAM files containing legacy chemistries.\n")), ToolInput(tag="in_deletion_qv", input_type=String(), position=0, doc=InputDocumentation(doc="dq        Y")), ToolInput(tag="in_deletion_tag", input_type=String(), position=1, doc=InputDocumentation(doc="dt        Y")), ToolInput(tag="in_insertion_qv", input_type=String(), position=2, doc=InputDocumentation(doc="iq        Y")), ToolInput(tag="in_ipd", input_type=String(), position=3, doc=InputDocumentation(doc="ip        Y")), ToolInput(tag="in_pulse_width", input_type=String(), position=4, doc=InputDocumentation(doc="pw        Y*")), ToolInput(tag="in_merge_qv", input_type=String(), position=5, doc=InputDocumentation(doc="mq        Y")), ToolInput(tag="in_substitution_qv", input_type=String(), position=6, doc=InputDocumentation(doc="sq        Y")), ToolInput(tag="in_substitution_tag", input_type=String(), position=7, doc=InputDocumentation(doc="st        N"))], outputs=[ToolOutput(tag="out_output_xml", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_xml", type_hint=File()), doc=OutputDocumentation(doc="Explicit output XML name. If none provided via this arg,\nbax2bam will use -o prefix (<prefix>.dataset.xml). If\nthat is not specified either, the output XML filename\nwill be <moviename>.dataset.xml")), ToolOutput(tag="out_internal", output_type=File(optional=True), selector=InputSelector(input_to_select="in_internal", type_hint=File()), doc=OutputDocumentation(doc="Output BAMs in internal mode. Currently this indicates\nthat non-sequencing ZMWs should be included in the\noutput scraps BAM file, if applicable."))], container="quay.io/biocontainers/bax2bam:0.0.11--0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bax2Bam_V0_1_0().translate("wdl")

