!Command
command:
- ssu-cmscore
positional:
- !Positional
  optional: false
  position: 0
  name: cmfile
  description: ''
named:
- !Flag
  optional: true
  synonyms:
  - -n
  description: ': generate <n> sequences  [10]'
  args: !SimpleFlagArg
    name: n
- !Flag
  optional: true
  synonyms:
  - -l
  description: ': align locally w.r.t. the model'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -s
  description: ': set RNG seed to <n> (if 0: one-time arbitrary seed)  [181]'
  args: !SimpleFlagArg
    name: n
- !Flag
  optional: true
  synonyms:
  - -a
  description: ': print individual timings & scores, not just a summary'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --sub
  description: ': build sub CM for columns b/t HMM predicted start/end points'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --mxsize
  description: ': set maximum allowable DP matrix size to <x> Mb  [2048.0]'
  args: !SimpleFlagArg
    name: x
- !Flag
  optional: true
  synonyms:
  - --devhelp
  description: ': show list of undocumented developer options'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --emit
  description: ': emit <n> sequences from each CM  [default]'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --random
  description: ': emit <n> random seq from cm->null model'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --infile
  description: ': read sequences to align from file <s>'
  args: !SimpleFlagArg
    name: f
- !Flag
  optional: true
  synonyms:
  - --outfile
  description: ': save seqs to file <s> in FASTA format'
  args: !SimpleFlagArg
    name: f
- !Flag
  optional: true
  synonyms:
  - --Lmin
  description: ': with --random, specify minimum length of random sequences as <n>'
  args: !SimpleFlagArg
    name: n
- !Flag
  optional: true
  synonyms:
  - --Lmax
  description: ': with --random, specify maximum length of random sequences as <n>'
  args: !SimpleFlagArg
    name: n
- !Flag
  optional: true
  synonyms:
  - --pad
  description: ': with --emit, pad (W-L) residues on each side of emitted seqs'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --hbanded
  description: ': compare d&c optimal CYK versus HMM banded CYK  [default]'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --tau
  description: ': set tail loss prob for --hbanded to <x>  [1E-7]  (0<x<1)'
  args: !SimpleFlagArg
    name: x
- !Flag
  optional: true
  synonyms:
  - --aln2bands
  description: ': w/--hbanded derive HMM bands w/o scanning Forward/Backward'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --hsafe
  description: ': realign (non-banded) seqs with HMM banded CYK score < 0 bits'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --nonbanded
  description: ': compare divide and conquer (d&c) versus standard non-banded CYK'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --scoreonly
  description: ': with --nonbanded, do only score, save memory'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --viterbi
  description: ': align to a CM Plan 9 HMM with the Viterbi algorithm'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --search
  description: ': run algorithms in scanning search mode'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --inside
  description: ': with --search, use Inside instead of CYK'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --forward
  description: ': with --search, use HMM  Forward instead of CYK'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --taus
  description: ': set initial (stage 2) tail loss prob to 1E-<x> for HMM banding'
  args: !SimpleFlagArg
    name: n
- !Flag
  optional: true
  synonyms:
  - --taue
  description: ': set final   (stage N) tail loss prob to 1E-<x> for HMM banding'
  args: !SimpleFlagArg
    name: n
- !Flag
  optional: true
  synonyms:
  - --tfile
  description: ': dump parsetrees to file <f>'
  args: !SimpleFlagArg
    name: f
- !Flag
  optional: true
  synonyms:
  - -options
  description: ''
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  description: ': show brief help on version and usage'
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "# ssu-cmscore :: score RNA covariance model against sequences\n# INFERNAL\
  \ s0.1.1 (Feb 2016)\n# Copyright (C) 2016 Howard Hughes Medical Institute.\n# Freely\
  \ distributed under the BSD open source license.\n# - - - - - - - - - - - - - -\
  \ - - - - - - - - - - - - - - - - - - - - - -\nUsage: ssu-cmscore [-options] <cmfile>\n\
  \nwhere general options are:\n  -h           : show brief help on version and usage\n\
  \  -n <n>       : generate <n> sequences  [10]\n  -l           : align locally w.r.t.\
  \ the model\n  -s <n>       : set RNG seed to <n> (if 0: one-time arbitrary seed)\
  \  [181]\n  -a           : print individual timings & scores, not just a summary\n\
  \  --sub        : build sub CM for columns b/t HMM predicted start/end points\n\
  \  --mxsize <x> : set maximum allowable DP matrix size to <x> Mb  [2048.0]\n  --devhelp\
  \    : show list of undocumented developer options\n\noptions for source of input\
  \ sequences:\n  --emit        : emit <n> sequences from each CM  [default]\n  --random\
  \      : emit <n> random seq from cm->null model\n  --infile <f>  : read sequences\
  \ to align from file <s>\n  --outfile <f> : save seqs to file <s> in FASTA format\n\
  \  --Lmin <n>    : with --random, specify minimum length of random sequences as\
  \ <n>\n  --Lmax <n>    : with --random, specify maximum length of random sequences\
  \ as <n>\n  --pad         : with --emit, pad (W-L) residues on each side of emitted\
  \ seqs\n\nstage 2 alignment options, to compare to stage 1 (D&C non-banded), are:\n\
  \  --hbanded   : compare d&c optimal CYK versus HMM banded CYK  [default]\n  --tau\
  \ <x>   : set tail loss prob for --hbanded to <x>  [1E-7]  (0<x<1)\n  --aln2bands\
  \ : w/--hbanded derive HMM bands w/o scanning Forward/Backward\n  --hsafe     :\
  \ realign (non-banded) seqs with HMM banded CYK score < 0 bits\n  --nonbanded :\
  \ compare divide and conquer (d&c) versus standard non-banded CYK\n  --scoreonly\
  \ : with --nonbanded, do only score, save memory\n  --viterbi   : align to a CM\
  \ Plan 9 HMM with the Viterbi algorithm\n\noptions for testing search algorithms\
  \ instead of alignment algorithms:\n  --search  : run algorithms in scanning search\
  \ mode\n  --inside  : with --search, use Inside instead of CYK\n  --forward : with\
  \ --search, use HMM  Forward instead of CYK\n\noptions for testing multiple tau\
  \ values for --hbanded:\n  --taus <n> : set initial (stage 2) tail loss prob to\
  \ 1E-<x> for HMM banding\n  --taue <n> : set final   (stage N) tail loss prob to\
  \ 1E-<x> for HMM banding\n\nextra output files:\n  --tfile <f> : dump parsetrees\
  \ to file <f>\n"
generated_using:
- -h
docker_image:
