from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Boolean, Int

Snoscan_V0_1_0 = CommandToolBuilder(tool="snoscan", base_command=["snoscan"], inputs=[ToolInput(tag="in_specify_methylation_sites", input_type=File(optional=True), prefix="-m", doc=InputDocumentation(doc=": specify methylation sites")), ToolInput(tag="in_save_candidates_outfile", input_type=String(optional=True), prefix="-o", doc=InputDocumentation(doc=": save candidates in <outfile>")), ToolInput(tag="in_save_snorna_sequences", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc=": save snoRNA sequences with hit info")), ToolInput(tag="in_set_minimim_length", input_type=Int(optional=True), prefix="-l", doc=InputDocumentation(doc=": set minimim length for snoRNA-rRNA pairing (def=9bp)")), ToolInput(tag="in_set_c_box", input_type=String(optional=True), prefix="-C", doc=InputDocumentation(doc=": set C Box score cutoff to <Score>")), ToolInput(tag="in_set_d_prime", input_type=String(optional=True), prefix="-D", doc=InputDocumentation(doc=": set D prime Box score cutoff to <Score>")), ToolInput(tag="in_set_final_cutoff", input_type=String(optional=True), prefix="-X", doc=InputDocumentation(doc=": set final score cutoff to <Score>")), ToolInput(tag="in_set_min_score", input_type=Int(optional=True), prefix="-c", doc=InputDocumentation(doc=": set min score for complementary region match")), ToolInput(tag="in_set_max_distance_c", input_type=Int(optional=True), prefix="-d", doc=InputDocumentation(doc=": set max distance between C & D boxes")), ToolInput(tag="in_set_min_distance", input_type=Int(optional=True), prefix="-p", doc=InputDocumentation(doc=": set min distance between rRNA match &\nD box when D prime box is present (def=10bp)")), ToolInput(tag="in_initiate_scan_def", input_type=Int(optional=True), prefix="-i", doc=InputDocumentation(doc=": Initiate scan at <position> in sequence (def=1)")), ToolInput(tag="in_set_max_distance_known", input_type=Int(optional=True), prefix="-M", doc=InputDocumentation(doc=": set max distance to known meth site (Def=0)")), ToolInput(tag="in__verbose_output", input_type=Boolean(optional=True), prefix="-V", doc=InputDocumentation(doc=": verbose output")), ToolInput(tag="in_options", input_type=Boolean(optional=True), prefix="-options", doc=InputDocumentation(doc="")), ToolInput(tag="in_rrna_sequence_file", input_type=File(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_query_sequence_file", input_type=File(), position=1, doc=InputDocumentation(doc=""))], outputs=[], container="quay.io/biocontainers/snoscan:1.0--pl526h516909a_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Snoscan_V0_1_0().translate("wdl")

