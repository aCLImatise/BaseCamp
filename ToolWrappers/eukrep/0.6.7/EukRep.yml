!Command
command:
- EukRep
positional: []
named:
- !Flag
  description: input fasta file
  synonyms:
  - -i
  args: !SimpleFlagArg
    name: I
  optional: true
- !Flag
  description: output file name
  synonyms:
  - -o
  args: !SimpleFlagArg
    name: O
  optional: true
- !Flag
  description: Force overwrite of existing output files
  synonyms:
  - -ff
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Minimum sequence length cutoff for sequences to be included in prediction.
    Default is 3kb
  synonyms:
  - --min
  args: !SimpleFlagArg
    name: MIN
  optional: true
- !Flag
  description: Path to an alternate trained linear SVM model. Default is lin_svm_160_3.0.pickle
  synonyms:
  - --model
  args: !SimpleFlagArg
    name: MODEL
  optional: true
- !Flag
  description: Kmer length to use for making predictions. Lengths between 3-7bp are
    available by default. If using a custom trained model, specify kmer length here.
  synonyms:
  - -k
  - --kmer_len
  args: !SimpleFlagArg
    name: KMER_LEN
  optional: true
- !Flag
  description: Name of file to output predicted prokaryotic sequences to. Default
    is to not output prokaryotic sequences.
  synonyms:
  - --prokarya
  args: !SimpleFlagArg
    name: PROKARYA
  optional: true
- !Flag
  description: Only output fasta headers of identified sequences. Default is full
    fasta entry
  synonyms:
  - --seq_names
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Not compatable with --model.\nHow stringent the algorithm is in identifying\
    \ eukaryotic scaffolds. Strict has a lower false positive rate and true positive\
    \ rate; vice verso for leneient. Default is balanced."
  synonyms:
  - -m
  args: !ChoiceFlagArg
    choices: !!set
      lenient:
      balanced:
      strict:
  optional: true
- !Flag
  description: "Specify how to handle cases where an equal number of a sequences chunks\
    \ are predicted to be of eukaryotic and prokaryotic origin (Generally occurs infrequently).\n\
    euk = classify as euk\nprok = classify as prok\nrand = assign randomly\nskip =\
    \ do not classify\nDefault is to classify as eukaryotic.\n"
  synonyms:
  - --tie
  args: !SimpleFlagArg
    name: TIE
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: show program's version number and exit
  synonyms:
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "usage: EukRep [-h] -i I -o O [-ff] [--min MIN] [--model MODEL] [-k KMER_LEN]\n\
  \              [--prokarya PROKARYA] [--seq_names]\n              [-m {strict,balanced,lenient}]\
  \ [--version] [--tie TIE]\n\nIdentify sequences of predicted eukaryotic origin from\
  \ a nucleotide fasta file. Individual sequences are split into 5kb chunks. Prediction\
  \ is performed on each 5kb chunk and sequence origin is determined by majority rule\
  \ of the chunks.\n\noptional arguments:\n  -h, --help            show this help\
  \ message and exit\n  -i I                  input fasta file\n  -o O           \
  \       output file name\n  -ff                   Force overwrite of existing output\
  \ files\n  --min MIN             Minimum sequence length cutoff for sequences to\
  \ be included in prediction. Default is 3kb\n  --model MODEL         Path to an\
  \ alternate trained linear SVM model. Default is lin_svm_160_3.0.pickle\n  -k KMER_LEN,\
  \ --kmer_len KMER_LEN\n                        Kmer length to use for making predictions.\
  \ Lengths between 3-7bp are available by default. If using a custom trained model,\
  \ specify kmer length here.\n  --prokarya PROKARYA   Name of file to output predicted\
  \ prokaryotic sequences to. Default is to not output prokaryotic sequences.\n  --seq_names\
  \           Only output fasta headers of identified sequences. Default is full fasta\
  \ entry\n  -m {strict,balanced,lenient}\n                        Not compatable\
  \ with --model.\n                                How stringent the algorithm is\
  \ in identifying eukaryotic scaffolds. Strict has a lower false positive rate and\
  \ true positive rate; vice verso for leneient. Default is balanced.\n  --version\
  \             show program's version number and exit\n  --tie TIE             Specify\
  \ how to handle cases where an equal number of a sequences chunks are predicted\
  \ to be of eukaryotic and prokaryotic origin (Generally occurs infrequently).\n\
  \                                euk = classify as euk\n                       \
  \         prok = classify as prok\n                                rand = assign\
  \ randomly\n                                skip = do not classify\n           \
  \                     Default is to classify as eukaryotic.\n"
generated_using:
- --help
