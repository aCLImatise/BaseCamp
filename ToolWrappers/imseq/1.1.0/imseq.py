from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean, Int

Imseq_V0_1_0 = CommandToolBuilder(tool="imseq", base_command=["imseq"], inputs=[ToolInput(tag="in_reference", input_type=File(optional=True), prefix="--reference", doc=InputDocumentation(doc="FASTA file with gene segment reference sequences.")), ToolInput(tag="in_out_amino", input_type=File(optional=True), prefix="--out-amino", doc=InputDocumentation(doc="Output file path for translated clonotypes.")), ToolInput(tag="in_out_nuc", input_type=File(optional=True), prefix="--out-nuc", doc=InputDocumentation(doc="Output file path for untranslated clonotypes.")), ToolInput(tag="in_out", input_type=File(optional=True), prefix="--out", doc=InputDocumentation(doc="Output file path for verbose output per analyzed read.")), ToolInput(tag="in_reverse", input_type=Boolean(optional=True), prefix="--reverse", doc=InputDocumentation(doc="By default, V-reads are read as they are and V(D)J-reads are reverse\ncomplemented. Use this switch for the opposite behaviour.")), ToolInput(tag="in_truncate_reads", input_type=Int(optional=True), prefix="--truncate-reads", doc=InputDocumentation(doc="Truncate reads to the specified length. 0 leaves them at their\noriginal lengths. Default: 0.")), ToolInput(tag="in_reject_log", input_type=File(optional=True), prefix="--reject-log", doc=InputDocumentation(doc="Log file for rejected reads. If empty, no log file is written.")), ToolInput(tag="in_with_alleles", input_type=File(optional=True), prefix="--with-alleles", doc=InputDocumentation(doc="Keep allele information in detailed output file specified with -o.")), ToolInput(tag="in_v_err_rate", input_type=Int(optional=True), prefix="--v-err-rate", doc=InputDocumentation(doc="Maximum error rate allowed within the V segment alignment In range\n[0..inf]. Default: 0.05.")), ToolInput(tag="in_j_err_rate", input_type=Int(optional=True), prefix="--j-err-rate", doc=InputDocumentation(doc="Maximum error rate allowed within the J segment alignment In range\n[0..inf]. Default: 0.15.")), ToolInput(tag="in_paired_v_error", input_type=Int(optional=True), prefix="--paired-v-error", doc=InputDocumentation(doc="Maximum error rate in the alignment between the forward-read\nidentified V segment and the reverse read. Default: Use value from\n-ev. In range [0..1].")), ToolInput(tag="in_v_read_crop", input_type=Int(optional=True), prefix="--v-read-crop", doc=InputDocumentation(doc="Crop NUM bases from the beginning of the V read before processing it\nIn range [0..inf]. Default: 0.")), ToolInput(tag="in_j_core_length", input_type=Int(optional=True), prefix="--j-core-length", doc=InputDocumentation(doc="Length of the J core fragment. In range [5..20]. Default: 12.")), ToolInput(tag="in_j_core_offset", input_type=Int(optional=True), prefix="--j-core-offset", doc=InputDocumentation(doc="Offset of the V core fragment. Default: -6.")), ToolInput(tag="in_v_core_length", input_type=Int(optional=True), prefix="--v-core-length", doc=InputDocumentation(doc="Length of the V core fragment. Default: Automatically select value\nbetween 10 and 20 based on minimum observed read length. In range\n[5..inf].")), ToolInput(tag="in_v_core_offset", input_type=Int(optional=True), prefix="--v-core-offset", doc=InputDocumentation(doc="Offset of the V core fragment. Default: 0.")), ToolInput(tag="in_v_core_errors", input_type=Int(optional=True), prefix="--v-core-errors", doc=InputDocumentation(doc="Maximum number of errors when matching the V core fragments. In\nrange [0..inf]. Default: 1.")), ToolInput(tag="in_j_core_errors", input_type=Int(optional=True), prefix="--j-core-errors", doc=InputDocumentation(doc="Maximum number of errors when matching the J core fragments. In\nrange [0..inf]. Default: 2.")), ToolInput(tag="in_min_qual", input_type=Int(optional=True), prefix="--min-qual", doc=InputDocumentation(doc="Minimum average read phred score. In paired end mode, this is\napplied to both reads. See '-sfb'. In range [0..60]. Default: 30.")), ToolInput(tag="in_min_clust_qual", input_type=Int(optional=True), prefix="--min-clust-qual", doc=InputDocumentation(doc="Minimum average cluster phred score. In range [0..60]. Default: 30.")), ToolInput(tag="in_min_read_length", input_type=Int(optional=True), prefix="--min-read-length", doc=InputDocumentation(doc="Minimum read length. In paired end mode, this is applied to both\nreads. See '-sfb'. In range [0..inf]. Default: 75.")), ToolInput(tag="in_min_cdr_three_length", input_type=Int(optional=True), prefix="--min-cdr3-length", doc=InputDocumentation(doc="Minimum CDR3 length in amino acids. In range [0..inf]. Default: 5.")), ToolInput(tag="in_single_end_fall_back", input_type=Boolean(optional=True), prefix="--single-end-fallback", doc=InputDocumentation(doc="Fall back to single end analysis based on VDJ read if V read fails\n-mq or -mrl.")), ToolInput(tag="in_barcode_vdj", input_type=Boolean(optional=True), prefix="--barcode-vdj", doc=InputDocumentation(doc="In paired end mode: Read the barcode from the VDJ read instead of\nthe V read.")), ToolInput(tag="in_bc_seq_max_err", input_type=Int(optional=True), prefix="--bcseq-max-err", doc=InputDocumentation(doc="Maximum number of errors allowed in the barcode sequence In range\n[0..inf]. Default: 1.")), ToolInput(tag="in_bc_min_qual", input_type=Int(optional=True), prefix="--bc-min-qual", doc=InputDocumentation(doc="Minimum per base quality in molecular barcode region In range\n[0..60]. Default: 30.")), ToolInput(tag="in_barcode_length", input_type=Int(optional=True), prefix="--barcode-length", doc=InputDocumentation(doc="Length of random barcode at the beginning of the read. A value of\n'0' disables barcode based correction. In range [0..inf]. Default:\n0.")), ToolInput(tag="in_barcode_err_rate", input_type=Int(optional=True), prefix="--barcode-err-rate", doc=InputDocumentation(doc="Maximum error rate between reads in order to be merged based on\nbarcode sequence In range [0..1]. Default: 0.05.")), ToolInput(tag="in_barcode_freq_rate", input_type=Int(optional=True), prefix="--barcode-freq-rate", doc=InputDocumentation(doc="Inclusive maximum frequency ratio between smaller and larger cluster\nduring barcode clustering In range [0..1]. Default: 0.2.")), ToolInput(tag="in_barcode_stats", input_type=File(optional=True), prefix="--barcode-stats", doc=InputDocumentation(doc="Path to barcode stats output file. If empty, no file is written.\nIgnored if -bcl is 0.")), ToolInput(tag="in_out_amino_bc", input_type=File(optional=True), prefix="--out-amino-bc", doc=InputDocumentation(doc="Output file path for translated clonotypes with barcode corrected\ncounts. Ignored if -bcl is 0.")), ToolInput(tag="in_out_nuc_bc", input_type=File(optional=True), prefix="--out-nuc-bc", doc=InputDocumentation(doc="Output file path for untranslated clonotypes with barcode corrected\ncounts. Ignored if -bcl is 0.")), ToolInput(tag="in_merge_ambiguous_seg", input_type=Boolean(optional=True), prefix="--merge-ambiguous-seg", doc=InputDocumentation(doc="Merge clonotypes with identical CDR3 sequences separated by\nambiguous segment identification")), ToolInput(tag="in_qual_clust", input_type=Boolean(optional=True), prefix="--qual-clust", doc=InputDocumentation(doc="Enable quality score based clustering.")), ToolInput(tag="in_simple_clust", input_type=Boolean(optional=True), prefix="--simple-clust", doc=InputDocumentation(doc="Enable simple distance-based clustering")), ToolInput(tag="in_max_err_hq", input_type=Int(optional=True), prefix="--max-err-hq", doc=InputDocumentation(doc="Maximum edit-distance for two clusters to be clustered without low\nquality correlation In range [0..inf]. Default: 4.")), ToolInput(tag="in_min_sd_diff", input_type=Int(optional=True), prefix="--min-sd-diff", doc=InputDocumentation(doc="How many standard deviations must an error positions quality value\nbe below the mean to be considered for clustering. Default: 1.")), ToolInput(tag="in_max_err_lq", input_type=Int(optional=True), prefix="--max-err-lq", doc=InputDocumentation(doc="Maximum edit-distance for two clusters to be potentially clustered\nwithout low quality correlation In range [0..inf]. Default: 2.")), ToolInput(tag="in_max_clust_ratio", input_type=Int(optional=True), prefix="--max-clust-ratio", doc=InputDocumentation(doc="Maximum abundance ratio for two clonotypes to be clustered In range\n[0..1]. Default: 1.")), ToolInput(tag="in_jobs", input_type=Int(optional=True), prefix="--jobs", doc=InputDocumentation(doc="Number of parallel jobs (threads). Default: 1.")), ToolInput(tag="in_print_alignments", input_type=Boolean(optional=True), prefix="--print-alignments", doc=InputDocumentation(doc="Print the V/J alignments for each read. Implies -j 1."))], outputs=[ToolOutput(tag="out_out_amino", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_amino", type_hint=File()), doc=OutputDocumentation(doc="Output file path for translated clonotypes.")), ToolOutput(tag="out_out_nuc", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_nuc", type_hint=File()), doc=OutputDocumentation(doc="Output file path for untranslated clonotypes.")), ToolOutput(tag="out_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out", type_hint=File()), doc=OutputDocumentation(doc="Output file path for verbose output per analyzed read.")), ToolOutput(tag="out_with_alleles", output_type=File(optional=True), selector=InputSelector(input_to_select="in_with_alleles", type_hint=File()), doc=OutputDocumentation(doc="Keep allele information in detailed output file specified with -o.")), ToolOutput(tag="out_barcode_stats", output_type=File(optional=True), selector=InputSelector(input_to_select="in_barcode_stats", type_hint=File()), doc=OutputDocumentation(doc="Path to barcode stats output file. If empty, no file is written.\nIgnored if -bcl is 0.")), ToolOutput(tag="out_out_amino_bc", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_amino_bc", type_hint=File()), doc=OutputDocumentation(doc="Output file path for translated clonotypes with barcode corrected\ncounts. Ignored if -bcl is 0.")), ToolOutput(tag="out_out_nuc_bc", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_nuc_bc", type_hint=File()), doc=OutputDocumentation(doc="Output file path for untranslated clonotypes with barcode corrected\ncounts. Ignored if -bcl is 0."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Imseq_V0_1_0().translate("wdl", allow_empty_container=True)

