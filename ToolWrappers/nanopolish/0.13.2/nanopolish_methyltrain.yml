!Command
command:
- nanopolish
- methyltrain
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -v
  - --verbose
  description: display verbose output
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -m
  - --models-fofn
  description: read the models to be trained from the FOFN
  args: !SimpleFlagArg
    name: FILE
- !Flag
  optional: true
  synonyms:
  - --train-kmers
  description: train methylated, unmethylated or all kmers
  args: !SimpleFlagArg
    name: STR
- !Flag
  optional: true
  synonyms:
  - -c
  - --calibrate
  description: recalibrate aligned reads to model before training
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --no-update-models
  description: do not write out trained models
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --output-scores
  description: optionally output read scores during training
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -r
  - --reads
  description: the ONT reads are in fasta FILE
  args: !SimpleFlagArg
    name: FILE
- !Flag
  optional: true
  synonyms:
  - -b
  - --bam
  description: the reads aligned to the genome assembly are in bam FILE
  args: !SimpleFlagArg
    name: FILE
- !Flag
  optional: true
  synonyms:
  - -g
  - --genome
  description: the reference genome is in FILE
  args: !SimpleFlagArg
    name: FILE
- !Flag
  optional: true
  synonyms:
  - -t
  - --threads
  description: 'use NUM threads (default: 1)'
  args: !SimpleFlagArg
    name: NUM
- !Flag
  optional: true
  synonyms:
  - --filter-policy
  description: filter reads for [R7] or [R9] project
  args: !SimpleFlagArg
    name: STR
- !Flag
  optional: true
  synonyms:
  - -s
  - --out-suffix
  description: name output files like <strand>.out_suffix
  args: !SimpleFlagArg
    name: STR
- !Flag
  optional: true
  synonyms:
  - --out-fofn
  description: write the names of the output models into FILE
  args: !SimpleFlagArg
    name: FILE
- !Flag
  optional: true
  synonyms:
  - --rounds
  description: number of training rounds to perform
  args: !SimpleFlagArg
    name: NUM
- !Flag
  optional: true
  synonyms:
  - --max-reads
  description: stop after processing NUM reads in each round
  args: !SimpleFlagArg
    name: NUM
- !Flag
  optional: true
  synonyms:
  - --progress
  description: print out a progress message
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --stdv
  description: enable stdv modelling
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --max-events
  description: 'use NUM events for training (default: 1000)'
  args: !SimpleFlagArg
    name: NUM
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - --help
  description: display this help and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - --version
  description: display version
  args: !EmptyFlagArg {}
help_text: "Usage: nanopolish methyltrain [OPTIONS] --reads reads.fa --bam alignments.bam\
  \ --genome genome.fa\nTrain a methylation model\n\n  -v, --verbose             \
  \           display verbose output\n      --version                        display\
  \ version\n      --help                           display this help and exit\n \
  \ -m, --models-fofn=FILE               read the models to be trained from the FOFN\n\
  \      --train-kmers=STR                train methylated, unmethylated or all kmers\n\
  \  -c  --calibrate                      recalibrate aligned reads to model before\
  \ training\n      --no-update-models               do not write out trained models\n\
  \      --output-scores                  optionally output read scores during training\n\
  \  -r, --reads=FILE                     the ONT reads are in fasta FILE\n  -b, --bam=FILE\
  \                       the reads aligned to the genome assembly are in bam FILE\n\
  \  -g, --genome=FILE                    the reference genome is in FILE\n  -t, --threads=NUM\
  \                    use NUM threads (default: 1)\n      --filter-policy=STR   \
  \           filter reads for [R7] or [R9] project\n  -s, --out-suffix=STR      \
  \           name output files like <strand>.out_suffix\n      --out-fofn=FILE  \
  \                write the names of the output models into FILE\n      --rounds=NUM\
  \                     number of training rounds to perform\n      --max-reads=NUM\
  \                  stop after processing NUM reads in each round\n      --progress\
  \                       print out a progress message\n      --stdv             \
  \              enable stdv modelling\n      --max-events=NUM                 use\
  \ NUM events for training (default: 1000)\n\nReport bugs to https://github.com/jts/nanopolish/issues\n\
  \n"
generated_using:
- --help
docker_image:
