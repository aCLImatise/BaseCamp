from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, String, Boolean, File

Mosdepth_V0_1_0 = CommandToolBuilder(tool="mosdepth", base_command=["mosdepth"], inputs=[ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="number of BAM decompression threads [default: 0]")), ToolInput(tag="in_chrom", input_type=String(optional=True), prefix="--chrom", doc=InputDocumentation(doc="chromosome to restrict depth calculation.")), ToolInput(tag="in_by", input_type=Int(optional=True), prefix="--by", doc=InputDocumentation(doc="optional BED file or (integer) window-sizes.")), ToolInput(tag="in_no_per_base", input_type=Boolean(optional=True), prefix="--no-per-base", doc=InputDocumentation(doc="dont output per-base depth. skipping this output will speed execution\nsubstantially. prefer quantized or thresholded values if possible.")), ToolInput(tag="in_fast_a", input_type=File(optional=True), prefix="--fasta", doc=InputDocumentation(doc="fasta file for use with CRAM files [default: ].")), ToolInput(tag="in_flag", input_type=Int(optional=True), prefix="--flag", doc=InputDocumentation(doc="exclude reads with any of the bits in FLAG set [default: 1796]")), ToolInput(tag="in_include_flag", input_type=Int(optional=True), prefix="--include-flag", doc=InputDocumentation(doc="only include reads with any of the bits in FLAG set. default is unset. [default: 0]")), ToolInput(tag="in_fast_mode", input_type=Boolean(optional=True), prefix="--fast-mode", doc=InputDocumentation(doc="dont look at internal cigar operations or correct mate overlaps (recommended for most use-cases).")), ToolInput(tag="in_quantize", input_type=String(optional=True), prefix="--quantize", doc=InputDocumentation(doc="write quantized output see docs for description.")), ToolInput(tag="in_mapq", input_type=Int(optional=True), prefix="--mapq", doc=InputDocumentation(doc="mapping quality threshold. reads with a quality less than this value are ignored [default: 0]")), ToolInput(tag="in_thresholds", input_type=Int(optional=True), prefix="--thresholds", doc=InputDocumentation(doc="for each interval in --by, write number of bases covered by at\nleast threshold bases. Specify multiple integer values separated\nby ','.")), ToolInput(tag="in_use_median", input_type=Boolean(optional=True), prefix="--use-median", doc=InputDocumentation(doc="output median of each region (in --by) instead of mean.")), ToolInput(tag="in_read_groups", input_type=String(optional=True), prefix="--read-groups", doc=InputDocumentation(doc="only calculate depth for these comma-separated read groups IDs.")), ToolInput(tag="in_prefix", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_bam_or_cram", input_type=String(), position=1, doc=InputDocumentation(doc=""))], outputs=[], container="quay.io/biocontainers/mosdepth:0.3.1--ha7ba039_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Mosdepth_V0_1_0().translate("wdl")

