from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, Directory, File

Rdoc_V0_1_0 = CommandToolBuilder(tool="rdoc", base_command=["rdoc"], inputs=[ToolInput(tag="in_access_or", input_type=Boolean(optional=True), prefix="--accessor", doc=InputDocumentation(doc="support discontinued")), ToolInput(tag="in_diagram", input_type=Boolean(optional=True), prefix="--diagram", doc=InputDocumentation(doc="support discontinued")), ToolInput(tag="in_help_output", input_type=Boolean(optional=True), prefix="--help-output", doc=InputDocumentation(doc="support discontinued")), ToolInput(tag="in_image_format", input_type=Boolean(optional=True), prefix="--image-format", doc=InputDocumentation(doc="was an option for --diagram")), ToolInput(tag="in_inline_source", input_type=Boolean(optional=True), prefix="--inline-source", doc=InputDocumentation(doc="source code is now always inlined")), ToolInput(tag="in_merge", input_type=Boolean(optional=True), prefix="--merge", doc=InputDocumentation(doc="ri now always merges class information")), ToolInput(tag="in_one_file", input_type=Boolean(optional=True), prefix="--one-file", doc=InputDocumentation(doc="support discontinued")), ToolInput(tag="in_op_name", input_type=Boolean(optional=True), prefix="--op-name", doc=InputDocumentation(doc="support discontinued")), ToolInput(tag="in_opname", input_type=Boolean(optional=True), prefix="--opname", doc=InputDocumentation(doc="support discontinued")), ToolInput(tag="in_promiscuous", input_type=Boolean(optional=True), prefix="--promiscuous", doc=InputDocumentation(doc="files always only document their content")), ToolInput(tag="in_ri_system", input_type=Boolean(optional=True), prefix="--ri-system", doc=InputDocumentation(doc="Ruby installers use other techniques")), ToolInput(tag="in_preferred_charset_specifies", input_type=String(optional=True), prefix="-e", doc=InputDocumentation(doc="preferred over --charset,  Specifies the output encoding.  All files")), ToolInput(tag="in_encoding", input_type=Boolean(optional=True), prefix="--encoding", doc=InputDocumentation(doc="read will be converted to this encoding.\nThe default encoding is UTF-8.")), ToolInput(tag="in_locale", input_type=String(optional=True), prefix="--locale", doc=InputDocumentation(doc="Specifies the output locale.")), ToolInput(tag="in_locale_data_dir", input_type=Directory(optional=True), prefix="--locale-data-dir", doc=InputDocumentation(doc="Specifies the directory where locale data live.")), ToolInput(tag="in_all", input_type=Boolean(optional=True), prefix="--all", doc=InputDocumentation(doc="Synonym for --visibility=private.")), ToolInput(tag="in_exclude", input_type=String(optional=True), prefix="--exclude", doc=InputDocumentation(doc="Do not process files or directories\nmatching PATTERN.")), ToolInput(tag="in_extension", input_type=File(optional=True), prefix="--extension", doc=InputDocumentation(doc="=OLD          Treat files ending with .new as if they\nended with .old. Using '-E cgi=rb' will\ncause xxx.cgi to be parsed as a Ruby file.")), ToolInput(tag="in_forceupdate_forces_rdoc", input_type=Boolean(optional=True), prefix="-U", doc=InputDocumentation(doc=", --[no-]force-update          Forces rdoc to scan all sources even if\nnewer than the flag file.")), ToolInput(tag="in_pipe", input_type=Boolean(optional=True), prefix="--pipe", doc=InputDocumentation(doc="Convert RDoc on stdin to HTML")), ToolInput(tag="in_tab_width", input_type=String(optional=True), prefix="--tab-width", doc=InputDocumentation(doc="Set the width of tab characters.")), ToolInput(tag="in_visibility", input_type=String(optional=True), prefix="--visibility", doc=InputDocumentation(doc="Minimum visibility to document a method.\nOne of 'public', 'protected' (the default),\n'private' or 'nodoc' (show everything)")), ToolInput(tag="in_markup", input_type=String(optional=True), prefix="--markup", doc=InputDocumentation(doc="The markup format for the named files.\nThe default is rdoc.  Valid values are:\nmarkdown, rd, rdoc, tomdoc")), ToolInput(tag="in_root", input_type=Directory(optional=True), prefix="--root", doc=InputDocumentation(doc="Root of the source tree documentation\nwill be generated for.  Set this when\nbuilding documentation outside the\nsource directory.  Default is the\ncurrent directory.")), ToolInput(tag="in_page_dir", input_type=File(optional=True), prefix="--page-dir", doc=InputDocumentation(doc="Directory where guides, your FAQ or\nother pages not associated with a class\nlive.  Set this when you don't store\nsuch files at your project root.\nNOTE: Do not use the same file name in\nthe page dir and the root of your project")), ToolInput(tag="in_force_output", input_type=Directory(optional=True), prefix="--force-output", doc=InputDocumentation(doc="Forces rdoc to write the output files,\neven if the output directory exists\nand does not seem to have been created\nby rdoc.")), ToolInput(tag="in_format", input_type=String(optional=True), prefix="--format", doc=InputDocumentation(doc="Set the output formatter.  One of:")), ToolInput(tag="in_prints_report_undocumented", input_type=Boolean(optional=True), prefix="-C", doc=InputDocumentation(doc="[LEVEL],                       Prints a report on undocumented items.\n--[no-]coverage-report       Does not generate files.\n--[no-]dcov")), ToolInput(tag="in_output", input_type=Directory(optional=True), prefix="--output", doc=InputDocumentation(doc="Set the output directory.")), ToolInput(tag="in_deprecated__optionprevents", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc="Deprecated --diagram option.\nPrevents firing debug mode\nwith legacy invocation.")), ToolInput(tag="in_charset", input_type=String(optional=True), prefix="--charset", doc=InputDocumentation(doc="Specifies the output HTML character-set.\nUse --encoding instead of --charset if\navailable.")), ToolInput(tag="in_hyperlink_all", input_type=Boolean(optional=True), prefix="--hyperlink-all", doc=InputDocumentation(doc="Generate hyperlinks for all words that\ncorrespond to known methods, even if they\ndo not start with '#' or '::' (legacy\nbehavior).")), ToolInput(tag="in_main", input_type=String(optional=True), prefix="--main", doc=InputDocumentation(doc="NAME will be the initial page displayed.")), ToolInput(tag="in__linenumbers_include", input_type=Boolean(optional=True), prefix="-N", doc=InputDocumentation(doc=", --[no-]line-numbers          Include line numbers in the source code.\nBy default, only the number of the first\nline is displayed, in a leading comment.")), ToolInput(tag="in_show_hash", input_type=Boolean(optional=True), prefix="--show-hash", doc=InputDocumentation(doc="A name of the form #name in a comment is a\npossible hyperlink to an instance method\nname. When displayed, the '#' is removed\nunless this option is specified.")), ToolInput(tag="in_template", input_type=String(optional=True), prefix="--template", doc=InputDocumentation(doc="Set the template used when generating\noutput. The default depends on the\nformatter used.")), ToolInput(tag="in_template_stylesheets", input_type=String(optional=True), prefix="--template-stylesheets", doc=InputDocumentation(doc="Set (or add to) the list of files to\ninclude with the html template.")), ToolInput(tag="in_title", input_type=String(optional=True), prefix="--title", doc=InputDocumentation(doc="Set TITLE as the title for HTML output.")), ToolInput(tag="in_copy_files", input_type=File(optional=True), prefix="--copy-files", doc=InputDocumentation(doc="Specify a file or directory to copy static\nfiles from.\nIf a file is given it will be copied into\nthe output dir.  If a directory is given the\nentire directory will be copied.\nYou can use this multiple times")), ToolInput(tag="in_web_cvs", input_type=File(optional=True), prefix="--webcvs", doc=InputDocumentation(doc="Specify a URL for linking to a web frontend\nto CVS. If the URL contains a '%s', the\nname of the current file will be\nsubstituted; if the URL doesn't contain a\n'%s', the filename will be appended to it.")), ToolInput(tag="in_generate_output_the", input_type=Directory(optional=True), prefix="--ri", doc=InputDocumentation(doc="Generate output for use by `ri`. The files\nare stored in the '.rdoc' directory under\nyour home directory unless overridden by a\nsubsequent --op parameter, so no special\nprivileges are needed.")), ToolInput(tag="in_ri_site", input_type=Directory(optional=True), prefix="--ri-site", doc=InputDocumentation(doc="Generate output for use by `ri`. The files\nare stored in a site-wide directory,\nmaking them accessible to others, so\nspecial privileges are needed.")), ToolInput(tag="in_write_options", input_type=Boolean(optional=True), prefix="--write-options", doc=InputDocumentation(doc="Write .rdoc_options to the current\ndirectory with the given options.  Not all\noptions will be used.  See RDoc::Options\nfor details.")), ToolInput(tag="in__debug_lots", input_type=Boolean(optional=True), prefix="-D", doc=InputDocumentation(doc=", --[no-]debug                 Displays lots on internal stuff.\n--[no-]ignore-invalid        Ignore invalid options and continue\n(default true).")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="Don't show progress as we parse.")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Display extra progress as RDoc parses")), ToolInput(tag="in_processed_dot", input_type=String(), position=0, doc=InputDocumentation(doc="How RDoc generates output depends on the output formatter being used, and on")), ToolInput(tag="in_pot", input_type=String(), position=0, doc=InputDocumentation(doc="- creates .pot file")), ToolInput(tag="in_creates_data_files", input_type=String(), position=1, doc=InputDocumentation(doc="- creates ri data files")), ToolInput(tag="in_dark_fish", input_type=String(), position=0, doc=InputDocumentation(doc="pot")), ToolInput(tag="in_i__includedirectories", input_type=String(), position=1, doc=InputDocumentation(doc="-i, --include=DIRECTORIES        Set (or add to) the list of directories to"))], outputs=[ToolOutput(tag="out_force_output", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_force_output", type_hint=File()), doc=OutputDocumentation(doc="Forces rdoc to write the output files,\neven if the output directory exists\nand does not seem to have been created\nby rdoc.")), ToolOutput(tag="out_output", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="Set the output directory.")), ToolOutput(tag="out_copy_files", output_type=File(optional=True), selector=InputSelector(input_to_select="in_copy_files", type_hint=File()), doc=OutputDocumentation(doc="Specify a file or directory to copy static\nfiles from.\nIf a file is given it will be copied into\nthe output dir.  If a directory is given the\nentire directory will be copied.\nYou can use this multiple times")), ToolOutput(tag="out_generate_output_the", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_generate_output_the", type_hint=File()), doc=OutputDocumentation(doc="Generate output for use by `ri`. The files\nare stored in the '.rdoc' directory under\nyour home directory unless overridden by a\nsubsequent --op parameter, so no special\nprivileges are needed.")), ToolOutput(tag="out_ri_site", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_ri_site", type_hint=File()), doc=OutputDocumentation(doc="Generate output for use by `ri`. The files\nare stored in a site-wide directory,\nmaking them accessible to others, so\nspecial privileges are needed."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Rdoc_V0_1_0().translate("wdl", allow_empty_container=True)

