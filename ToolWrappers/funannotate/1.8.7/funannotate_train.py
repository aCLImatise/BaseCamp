from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Directory, String

Funannotate_Train_V0_1_0 = CommandToolBuilder(tool="funannotate_train", base_command=["funannotate", "train"], inputs=[ToolInput(tag="in_input", input_type=Boolean(optional=True), prefix="--input", doc=InputDocumentation(doc="Genome multi-fasta file")), ToolInput(tag="in_out", input_type=Directory(optional=True), prefix="--out", doc=InputDocumentation(doc="Output folder name")), ToolInput(tag="in_left", input_type=Boolean(optional=True), prefix="--left", doc=InputDocumentation(doc="Left/Forward FASTQ Illumina reads (R1)")), ToolInput(tag="in_right", input_type=Boolean(optional=True), prefix="--right", doc=InputDocumentation(doc="Right/Reverse FASTQ Illumina reads (R2)")), ToolInput(tag="in_single", input_type=Boolean(optional=True), prefix="--single", doc=InputDocumentation(doc="Single ended FASTQ reads")), ToolInput(tag="in_stranded", input_type=Boolean(optional=True), prefix="--stranded", doc=InputDocumentation(doc="If RNA-seq library stranded. [RF,FR,F,R,no]")), ToolInput(tag="in_left_norm", input_type=Boolean(optional=True), prefix="--left_norm", doc=InputDocumentation(doc="Normalized left FASTQ reads (R1)")), ToolInput(tag="in_right_norm", input_type=Boolean(optional=True), prefix="--right_norm", doc=InputDocumentation(doc="Normalized right FASTQ reads (R2)")), ToolInput(tag="in_single_norm", input_type=Boolean(optional=True), prefix="--single_norm", doc=InputDocumentation(doc="Normalized single-ended FASTQ reads")), ToolInput(tag="in_pac_bio_iso_seq", input_type=Boolean(optional=True), prefix="--pacbio_isoseq", doc=InputDocumentation(doc="PacBio long-reads")), ToolInput(tag="in_nano_pore_cdna", input_type=Boolean(optional=True), prefix="--nanopore_cdna", doc=InputDocumentation(doc="Nanopore cDNA long-reads")), ToolInput(tag="in_nano_pore_mrna", input_type=Boolean(optional=True), prefix="--nanopore_mrna", doc=InputDocumentation(doc="Nanopore mRNA direct long-reads")), ToolInput(tag="in_trinity", input_type=Boolean(optional=True), prefix="--trinity", doc=InputDocumentation(doc="Pre-computed Trinity transcripts (FASTA)")), ToolInput(tag="in_jaccard_clip", input_type=Boolean(optional=True), prefix="--jaccard_clip", doc=InputDocumentation(doc="Turn on jaccard clip for dense genomes [Recommended for fungi]")), ToolInput(tag="in_no_normalize_reads", input_type=Boolean(optional=True), prefix="--no_normalize_reads", doc=InputDocumentation(doc="Skip read Normalization")), ToolInput(tag="in_no_trim_mo_matic", input_type=Boolean(optional=True), prefix="--no_trimmomatic", doc=InputDocumentation(doc="Skip Quality Trimming of reads")), ToolInput(tag="in_memory", input_type=Boolean(optional=True), prefix="--memory", doc=InputDocumentation(doc="RAM to use for Jellyfish. Default: 50G")), ToolInput(tag="in_coverage", input_type=Boolean(optional=True), prefix="--coverage", doc=InputDocumentation(doc="Depth to normalize reads. Default: 50")), ToolInput(tag="in_min_coverage", input_type=Boolean(optional=True), prefix="--min_coverage", doc=InputDocumentation(doc="Min depth for normalizing reads. Default: 5")), ToolInput(tag="in_pasa_db", input_type=Boolean(optional=True), prefix="--pasa_db", doc=InputDocumentation(doc="Database to use. Default: sqlite [mysql,sqlite]")), ToolInput(tag="in_aligners", input_type=Boolean(optional=True), prefix="--aligners", doc=InputDocumentation(doc="Aligners to use with PASA: Default: minimap2 blat [gmap]")), ToolInput(tag="in_pasa_min_pct_aligned", input_type=Boolean(optional=True), prefix="--pasa_min_pct_aligned", doc=InputDocumentation(doc="PASA --MIN_PERCENT_ALIGNED. Default: 90")), ToolInput(tag="in_pasa_min_avg_per_id", input_type=Boolean(optional=True), prefix="--pasa_min_avg_per_id", doc=InputDocumentation(doc="PASA --MIN_AVG_PER_ID. Default: 95")), ToolInput(tag="in_pasa_num_bp_splice", input_type=Boolean(optional=True), prefix="--pasa_num_bp_splice", doc=InputDocumentation(doc="PASA --NUM_BP_PERFECT_SPLICE_BOUNDARY. Default: 3")), ToolInput(tag="in_max_intron_len", input_type=Boolean(optional=True), prefix="--max_intronlen", doc=InputDocumentation(doc="Maximum intron length. Default: 3000")), ToolInput(tag="in_species", input_type=Boolean(optional=True), prefix="--species", doc=InputDocumentation(doc="Species name, use quotes for binomial, e.g. 'Aspergillus fumigatus'")), ToolInput(tag="in_strain", input_type=Boolean(optional=True), prefix="--strain", doc=InputDocumentation(doc="Strain name")), ToolInput(tag="in_isolate", input_type=Boolean(optional=True), prefix="--isolate", doc=InputDocumentation(doc="Isolate name")), ToolInput(tag="in_cpus", input_type=Boolean(optional=True), prefix="--cpus", doc=InputDocumentation(doc="Number of CPUs to use. Default: 2")), ToolInput(tag="in_no_progress", input_type=Boolean(optional=True), prefix="--no-progress", doc=InputDocumentation(doc="Do not print progress to stdout for long sub jobs")), ToolInput(tag="in_arguments", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_out", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_out", type_hint=File()), doc=OutputDocumentation(doc="Output folder name"))], container="quay.io/biocontainers/funannotate:1.8.7--pyh5e36f6f_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Funannotate_Train_V0_1_0().translate("wdl")

