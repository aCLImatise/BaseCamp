from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Int, Boolean, Float

Chunkify_Py_Remap_V0_1_0 = CommandToolBuilder(tool="chunkify.py_remap", base_command=["chunkify.py", "remap"], inputs=[ToolInput(tag="in_alphabet", input_type=String(optional=True), prefix="--alphabet", doc=InputDocumentation(doc="Alphabet of the sequences (default: b'ACGT')")), ToolInput(tag="in_input_strand_list", input_type=File(optional=True), prefix="--input_strand_list", doc=InputDocumentation(doc="Strand summary file containing subset (default: None)")), ToolInput(tag="in_jobs", input_type=Int(optional=True), prefix="--jobs", doc=InputDocumentation(doc="Number of threads to use when processing data\n(default: 1)")), ToolInput(tag="in_km_er_len", input_type=Int(optional=True), prefix="--kmer_len", doc=InputDocumentation(doc="Length of kmer to estimate (default: 5)")), ToolInput(tag="in_limit", input_type=Int(optional=True), prefix="--limit", doc=InputDocumentation(doc="Limit number of reads to process (default: None)")), ToolInput(tag="in_no_overwrite", input_type=Boolean(optional=True), prefix="--no-overwrite", doc=InputDocumentation(doc="Whether to overwrite any output files (Default: --no-\noverwrite) (default: False)")), ToolInput(tag="in_blanks", input_type=Float(optional=True), prefix="--blanks", doc=InputDocumentation(doc="Maximum proportion of blanks in labels (default: 0.7)")), ToolInput(tag="in_chunk_len", input_type=Int(optional=True), prefix="--chunk_len", doc=InputDocumentation(doc="Length of each read chunk (default: 500)")), ToolInput(tag="in_normalisation", input_type=String(optional=True), prefix="--normalisation", doc=InputDocumentation(doc="Whether to perform studentisation and with what scope\n(default: per-read)")), ToolInput(tag="in_min_length", input_type=Int(optional=True), prefix="--min_length", doc=InputDocumentation(doc="Minimum events in acceptable read (default: 1200)")), ToolInput(tag="in_no_use_scaled", input_type=Boolean(optional=True), prefix="--no-use_scaled", doc=InputDocumentation(doc="Train from scaled event statistics (Default: --no-\nuse_scaled) (default: False)")), ToolInput(tag="in_trim", input_type=Int(optional=True), prefix="--trim", doc=InputDocumentation(doc="end  Number of events to trim off start and end (default:\n(50, 10))")), ToolInput(tag="in_section", input_type=String(optional=True), prefix="--section", doc=InputDocumentation(doc="Section to call (default: template)")), ToolInput(tag="in_compile", input_type=File(optional=True), prefix="--compile", doc=InputDocumentation(doc="File output compiled model (default: None)")), ToolInput(tag="in_min_prob", input_type=Float(optional=True), prefix="--min_prob", doc=InputDocumentation(doc="Minimum allowed probabiility for basecalls (default:\n1e-05)")), ToolInput(tag="in_output_strand_list", input_type=File(optional=True), prefix="--output_strand_list", doc=InputDocumentation(doc="Strand summary output file (default:\nstrand_output_list.txt)")), ToolInput(tag="in_prior", input_type=Float(optional=True), prefix="--prior", doc=InputDocumentation(doc="end     Mean of start and end positions (default: (25.0,\n25.0))")), ToolInput(tag="in_slip", input_type=Float(optional=True), prefix="--slip", doc=InputDocumentation(doc="Slip penalty (default: 5.0)")), ToolInput(tag="in_segmentation", input_type=String(optional=True), prefix="--segmentation", doc=InputDocumentation(doc="Location of segmentation information (default:\nSegmentation)\n")), ToolInput(tag="in_input_folder", input_type=String(), position=0, doc=InputDocumentation(doc="Directory containing single-read fast5 files")), ToolInput(tag="in_output", input_type=String(), position=1, doc=InputDocumentation(doc="Output HDF5 file")), ToolInput(tag="in_model", input_type=String(), position=2, doc=InputDocumentation(doc="Pickled model file")), ToolInput(tag="in_references", input_type=String(), position=3, doc=InputDocumentation(doc="Reference sequences in fasta format"))], outputs=[ToolOutput(tag="out_compile", output_type=File(optional=True), selector=InputSelector(input_to_select="in_compile", type_hint=File()), doc=OutputDocumentation(doc="File output compiled model (default: None)")), ToolOutput(tag="out_output_strand_list", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_strand_list", type_hint=File()), doc=OutputDocumentation(doc="Strand summary output file (default:\nstrand_output_list.txt)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Chunkify_Py_Remap_V0_1_0().translate("wdl", allow_empty_container=True)

