from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Int, Boolean

Statstr_V0_1_0 = CommandToolBuilder(tool="statSTR", base_command=["statSTR"], inputs=[ToolInput(tag="in_input_str_vcf", input_type=File(optional=True), prefix="--vcf", doc=InputDocumentation(doc="Input STR VCF file")), ToolInput(tag="in_out", input_type=File(optional=True), prefix="--out", doc=InputDocumentation(doc="Output file prefix. Use stdout to print file to\nstandard output. In addition, if not stdout then\ntiming diagnostics are print to stdout.")), ToolInput(tag="in_vcf_type", input_type=String(optional=True), prefix="--vcftype", doc=InputDocumentation(doc="Options=['gangstr', 'advntr', 'hipstr', 'eh',\n'popstr'] (default: auto)")), ToolInput(tag="in_precision", input_type=Int(optional=True), prefix="--precision", doc=InputDocumentation(doc="How much precision to use when printing decimals\n(default: 3)")), ToolInput(tag="in_samples", input_type=File(optional=True), prefix="--samples", doc=InputDocumentation(doc="File containing list of samples to include. Or a\ncomma-separated list of files to compute stats\nseparate for each group of samples")), ToolInput(tag="in_sample_prefixes", input_type=Int(optional=True), prefix="--sample-prefixes", doc=InputDocumentation(doc="Prefixes to name output for each samples group. By\ndefault uses 1,2,3 etc.")), ToolInput(tag="in_region", input_type=File(optional=True), prefix="--region", doc=InputDocumentation(doc="Restrict to the region chrom:start-end. Requires file\nto bgzipped and tabix indexed.")), ToolInput(tag="in_thresh", input_type=Boolean(optional=True), prefix="--thresh", doc=InputDocumentation(doc="Output threshold field (max allele size, used for\nGangSTR strinfo). (default: False)")), ToolInput(tag="in_a_freq", input_type=Boolean(optional=True), prefix="--afreq", doc=InputDocumentation(doc="Output allele frequencies (default: False)")), ToolInput(tag="in_a_count", input_type=Boolean(optional=True), prefix="--acount", doc=InputDocumentation(doc="Output allele counts (default: False)")), ToolInput(tag="in_h_wep", input_type=Boolean(optional=True), prefix="--hwep", doc=InputDocumentation(doc="Output HWE p-values per loci. (default: False)")), ToolInput(tag="in_het", input_type=Boolean(optional=True), prefix="--het", doc=InputDocumentation(doc="Output the heterozygosity of each locus. (default:\nFalse)")), ToolInput(tag="in_entropy", input_type=Boolean(optional=True), prefix="--entropy", doc=InputDocumentation(doc="Output the entropy of each locus. (default: False)")), ToolInput(tag="in_mean", input_type=Boolean(optional=True), prefix="--mean", doc=InputDocumentation(doc="Output mean of the allele frequencies. (default:\nFalse)")), ToolInput(tag="in_mode", input_type=Boolean(optional=True), prefix="--mode", doc=InputDocumentation(doc="Output mode of the allele frequencies. (default:\nFalse)")), ToolInput(tag="in_var", input_type=Boolean(optional=True), prefix="--var", doc=InputDocumentation(doc="Output variance of the allele frequencies. (default:\nFalse)")), ToolInput(tag="in_num_called", input_type=Boolean(optional=True), prefix="--numcalled", doc=InputDocumentation(doc="Output number of samples called. (default: False)")), ToolInput(tag="in_use_length", input_type=Boolean(optional=True), prefix="--use-length", doc=InputDocumentation(doc="Calculate per-locus stats (het, HWE) collapsing\nalleles by length. This is implicitly true for\ngenotypers which only emit length based genotypes.\n(default: False)")), ToolInput(tag="in_plot_a_freq", input_type=Boolean(optional=True), prefix="--plot-afreq", doc=InputDocumentation(doc="Output allele frequency plot. Will only do for a\nmaximum of 10 TRs. (default: False)")), ToolInput(tag="in_tool", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_for", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_computing", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_stats", input_type=String(), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_on", input_type=String(), position=4, doc=InputDocumentation(doc="")), ToolInput(tag="in_a", input_type=String(), position=5, doc=InputDocumentation(doc="")), ToolInput(tag="in_tr", input_type=String(), position=6, doc=InputDocumentation(doc="")), ToolInput(tag="in_var_26", input_type=String(), position=7, doc=InputDocumentation(doc="")), ToolInput(tag="in_file", input_type=File(), position=8, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out", type_hint=File()), doc=OutputDocumentation(doc="Output file prefix. Use stdout to print file to\nstandard output. In addition, if not stdout then\ntiming diagnostics are print to stdout."))], container="quay.io/biocontainers/trtools:4.0.0--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Statstr_V0_1_0().translate("wdl")

