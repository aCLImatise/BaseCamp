from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, String, File, Boolean

Comparestr_V0_1_0 = CommandToolBuilder(tool="compareSTR", base_command=["compareSTR"], inputs=[ToolInput(tag="in_vcf_one", input_type=Int(optional=True), prefix="--vcf1", doc=InputDocumentation(doc="First VCF file to compare (must be sorted, bgzipped,\nand indexed)")), ToolInput(tag="in_vcf_two", input_type=Int(optional=True), prefix="--vcf2", doc=InputDocumentation(doc="Second VCF file to compare (must be sorted, bgzipped,\nand indexed)")), ToolInput(tag="in_out", input_type=String(optional=True), prefix="--out", doc=InputDocumentation(doc="Prefix to name output files")), ToolInput(tag="in_vcf_type_one", input_type=Int(optional=True), prefix="--vcftype1", doc=InputDocumentation(doc="Type of --vcf1. Options=['gangstr', 'advntr',\n'hipstr', 'eh', 'popstr'] (default: auto)")), ToolInput(tag="in_vcf_type_two", input_type=Int(optional=True), prefix="--vcftype2", doc=InputDocumentation(doc="Type of --vcf2. Options=['gangstr', 'advntr',\n'hipstr', 'eh', 'popstr'] (default: auto)")), ToolInput(tag="in_samples", input_type=File(optional=True), prefix="--samples", doc=InputDocumentation(doc="File containing list of samples to include")), ToolInput(tag="in_region", input_type=String(optional=True), prefix="--region", doc=InputDocumentation(doc="Restrict to this region chrom:start-end")), ToolInput(tag="in_stratify_fields", input_type=String(optional=True), prefix="--stratify-fields", doc=InputDocumentation(doc="Comma-separated list of FORMAT fields to stratify by")), ToolInput(tag="in_stratify_bin_sizes", input_type=Int(optional=True), prefix="--stratify-binsizes", doc=InputDocumentation(doc="Comma-separated list of min:max:binsize to stratify\neach field on. Must be same length as --stratify-\nfields.")), ToolInput(tag="in_stratify_file", input_type=File(optional=True), prefix="--stratify-file", doc=InputDocumentation(doc="Set to 1 to stratify based on --vcf1. Set to 2 to\nstratify based on --vcf2. Set to 0 to apply\nstratification to both --vcf1 and --vcf2 (default: 0)")), ToolInput(tag="in_period", input_type=Boolean(optional=True), prefix="--period", doc=InputDocumentation(doc="Report results overall and also stratified by repeat\nunit length (period) (default: False)")), ToolInput(tag="in_bubble_min", input_type=Int(optional=True), prefix="--bubble-min", doc=InputDocumentation(doc="Minimum x/y axis value to display on bubble plots")), ToolInput(tag="in_bubble_max", input_type=Int(optional=True), prefix="--bubble-max", doc=InputDocumentation(doc="Maximum x/y axis value to display on bubble plots")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Print helpful debugging info (default: False)")), ToolInput(tag="in_num_records", input_type=Int(optional=True), prefix="--numrecords", doc=InputDocumentation(doc="For debugging, only process this many records")), ToolInput(tag="in_no_plot", input_type=Boolean(optional=True), prefix="--noplot", doc=InputDocumentation(doc="Don't output any plots. Only produce text output\n(default: False)")), ToolInput(tag="in_tool", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_for", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_comparing", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_genotypes", input_type=String(), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_from", input_type=String(), position=4, doc=InputDocumentation(doc="")), ToolInput(tag="in_two", input_type=String(), position=5, doc=InputDocumentation(doc="")), ToolInput(tag="in_tr", input_type=String(), position=6, doc=InputDocumentation(doc="")), ToolInput(tag="in_v_cfs", input_type=String(), position=7, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Comparestr_V0_1_0().translate("wdl", allow_empty_container=True)

