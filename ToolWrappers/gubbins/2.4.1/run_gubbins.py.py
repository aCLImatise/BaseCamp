from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Boolean, Int

Run_Gubbins_Py_V0_1_0 = CommandToolBuilder(tool="run_gubbins.py", base_command=["run_gubbins.py"], inputs=[ToolInput(tag="in_out_group", input_type=String(optional=True), prefix="--outgroup", doc=InputDocumentation(doc="Outgroup name for rerooting. A list of comma separated\nnames can be used if they form a clade (default: None)")), ToolInput(tag="in_starting_tree", input_type=String(optional=True), prefix="--starting_tree", doc=InputDocumentation(doc="Starting tree (default: None)")), ToolInput(tag="in_use_time_stamp", input_type=Boolean(optional=True), prefix="--use_time_stamp", doc=InputDocumentation(doc="Use a time stamp in file names (default: False)")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Turn on debugging (default: False)")), ToolInput(tag="in_no_cleanup", input_type=Boolean(optional=True), prefix="--no_cleanup", doc=InputDocumentation(doc="Dont cleanup intermediate files (default: False)")), ToolInput(tag="in_tree_builder", input_type=String(optional=True), prefix="--tree_builder", doc=InputDocumentation(doc="Application to use for tree building (default: raxml)")), ToolInput(tag="in_iterations", input_type=Int(optional=True), prefix="--iterations", doc=InputDocumentation(doc="Maximum No. of iterations (default: 5)")), ToolInput(tag="in_min_snps", input_type=Int(optional=True), prefix="--min_snps", doc=InputDocumentation(doc="Min SNPs to identify a recombination block (default:\n3)")), ToolInput(tag="in_filter_percentage", input_type=Int(optional=True), prefix="--filter_percentage", doc=InputDocumentation(doc="Filter out taxa with more than this percentage of gaps\n(default: 25)")), ToolInput(tag="in_prefix", input_type=String(optional=True), prefix="--prefix", doc=InputDocumentation(doc="Add a prefix to the final output filenames (default:\nNone)")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of threads to run with RAXML, but only if a\nPTHREADS version is available (default: 1)")), ToolInput(tag="in_converge_method", input_type=String(optional=True), prefix="--converge_method", doc=InputDocumentation(doc="Criteria to use to know when to halt iterations\n(default: weighted_robinson_foulds)")), ToolInput(tag="in_min_window_size", input_type=Int(optional=True), prefix="--min_window_size", doc=InputDocumentation(doc="Minimum window size (default: 100)")), ToolInput(tag="in_max_window_size", input_type=Int(optional=True), prefix="--max_window_size", doc=InputDocumentation(doc="Maximum window size (default: 10000)")), ToolInput(tag="in_ra_xml_model", input_type=String(optional=True), prefix="--raxml_model", doc=InputDocumentation(doc="RAxML model (default: GTRCAT)")), ToolInput(tag="in_remove_identical_sequences", input_type=Boolean(optional=True), prefix="--remove_identical_sequences", doc=InputDocumentation(doc="Remove identical sequences (default: False)\n"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Run_Gubbins_Py_V0_1_0().translate("wdl", allow_empty_container=True)

