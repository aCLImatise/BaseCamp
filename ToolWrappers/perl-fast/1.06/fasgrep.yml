!Command
command:
- fasgrep
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -s
  - --sequence
  description: "Print records whose sequence data match the regex. Default:\n[query\
    \ identifiers]"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -d
  - --description
  description: "Print records whose descriptions match the regex. Default:\n[query\
    \ identifiers]"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -f
  description: "[int], --field=[int]\nSplit descriptions into fields, and print records\
    \ for which a\nspecific numbered field matches the regex. With this option, the\n\
    description is split into fields using strings of white space as\nfield delimiters\
    \ (the Perl default).\nThis option takes a mandatory integer option argument giving\
    \ the\nindex for which field the regex should query. One-based indexing\nis used,\
    \ so the first field after the identifier has index 1. As\nstandard in Perl, negative\
    \ indices count backwards from the last\nfield in the description; field \"-1\"\
    \ is the last field, \"-2\" is\nthe second-to-last etc.\nIn fasta files, the identifier\
    \ occurs between the record\nseparator (\">\") and the first whitespace on the\
    \ identifier line,\nand the description is everything after the first string of\n\
    white space on the identifier line. Therefore the identifier is\ncounted as the\
    \ 0th field, which is what fasgrep matches by\ndefault."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -t
  description: "[string], --tag=[string]\nQuery sequence records by values of a named\
    \ tag in the\ndescription. Name-value pairs in the description are expected to\n\
    have the format \"name:value\" as generated by FAST tools (such as\nfaslen) or\
    \ \"name=value\" as common in General Feature Format. The\n\"name\" must contain\
    \ only characters from the set [a-zA-Z0-9_-].\nThe \"value\" is any string of\
    \ non-whitespace characters. Sequence\nrecords for which the specified tag does\
    \ not exist will not be\nwritten to output. Currently only the first (left-most)\n\
    occcurence of a tag is tested."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -S
  description: "[regex], --split-on-regex=[regex]\nUse regex <regex> to split the\
    \ description for the -f option\ninstead of the perl default (which splits on\
    \ one or more\nwhitespace characters). Special characters must be quoted to\n\
    protect them from the shell."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -v
  - --negate
  description: "Output sequences that do not match the regular expression\nargument."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -i
  - --insensitive
  description: Match data case-insensitively.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -e
  - --iupac-expand-nuc
  description: "Expand IUPAC ambiguity symbols in the regex argument for DNA/RNA\n\
    sequence matching (implies -s, matching on sequence data). For\nexample, the symbol\
    \ \"B\" in the regex is equivalent to \"[CGTU]\".\nThis option, -e, has priority\
    \ over -p."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -r
  - --revcom-iupac-expand-nuc
  description: "Reverse complement the regular-expression and expand IUPAC\nambiguity\
    \ symbols for DNA/RNA sequence matching (implies -s,\nmatching on sequence data).\
    \ For example, the symbol \"B\" in the\nregex is equivalent to \"[ACG]\". This\
    \ option, -r, takes priority\nover -e or -p. priority."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -p
  - --iupac-expand-prot
  description: "Expand IUPAC ambiguity symbols in the regex argyment for protein\n\
    sequence matching (implies -s, matching on sequence data)."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -m
  description: "[dna|rna|protein], --moltype=[dna|rna|protein]\nSpecify the type of\
    \ sequence on input (should not be needed in\nmost cases, but sometimes Bioperl\
    \ cannot guess and complains\nwhen processing data)."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --man
  description: Print the manual page and exit.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -l
  - --log
  description: "Creates, or appends to, a generic FAST logfile in the current\nworking\
    \ directory. The logfile records date/time of execution,\nfull command with options\
    \ and arguments, and an optional\ncomment."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -L
  description: "[string], --logname=[string]\nUse [string] as the name of the logfile.\
    \ Default is\n\"FAST.log.txt\"."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -C
  description: "[string], --comment=[string]\nInclude comment [string] in logfile.\
    \ No comment is saved by\ndefault."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --format
  description: "=[format]\nUse alternative format for input. See man page for \"fasconvert\"\
    \nfor allowed formats. This is for convenience; the FAST tools are\ndesigned to\
    \ exchange data in Fasta format, and \"fasta\" is the\ndefault format for this\
    \ tool."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -q
  - --fastq
  description: '> Use fastq format as input and output.'
  args: !SimpleFlagArg
    name: B
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: Print a brief help message and exit.
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - --version
  description: Print version information and exit.
  args: !EmptyFlagArg {}
help_text: "Usage:\n    fasgrep [OPTION]... [PERL-REGEX] [MULTIFASTA-FILE]...\n\n\
  Options:\n    -s, --sequence\n            Print records whose sequence data match\
  \ the regex. Default:\n            [query identifiers]\n\n    -d, --description\n\
  \            Print records whose descriptions match the regex. Default:\n      \
  \      [query identifiers]\n\n    -f [int], --field=[int]\n            Split descriptions\
  \ into fields, and print records for which a\n            specific numbered field\
  \ matches the regex. With this option, the\n            description is split into\
  \ fields using strings of white space as\n            field delimiters (the Perl\
  \ default).\n\n            This option takes a mandatory integer option argument\
  \ giving the\n            index for which field the regex should query. One-based\
  \ indexing\n            is used, so the first field after the identifier has index\
  \ 1. As\n            standard in Perl, negative indices count backwards from the\
  \ last\n            field in the description; field \"-1\" is the last field, \"\
  -2\" is\n            the second-to-last etc.\n\n            In fasta files, the\
  \ identifier occurs between the record\n            separator (\">\") and the first\
  \ whitespace on the identifier line,\n            and the description is everything\
  \ after the first string of\n            white space on the identifier line. Therefore\
  \ the identifier is\n            counted as the 0th field, which is what fasgrep\
  \ matches by\n            default.\n\n    -t [string], --tag=[string]\n        \
  \    Query sequence records by values of a named tag in the\n            description.\
  \ Name-value pairs in the description are expected to\n            have the format\
  \ \"name:value\" as generated by FAST tools (such as\n            faslen) or \"\
  name=value\" as common in General Feature Format. The\n            \"name\" must\
  \ contain only characters from the set [a-zA-Z0-9_-].\n            The \"value\"\
  \ is any string of non-whitespace characters. Sequence\n            records for\
  \ which the specified tag does not exist will not be\n            written to output.\
  \ Currently only the first (left-most)\n            occcurence of a tag is tested.\n\
  \n    -S [regex], --split-on-regex=[regex]\n            Use regex <regex> to split\
  \ the description for the -f option\n            instead of the perl default (which\
  \ splits on one or more\n            whitespace characters). Special characters\
  \ must be quoted to\n            protect them from the shell.\n\n    -v, --negate\n\
  \            Output sequences that do not match the regular expression\n       \
  \     argument.\n\n    -i, --insensitive\n            Match data case-insensitively.\n\
  \n    -e, --iupac-expand-nuc\n            Expand IUPAC ambiguity symbols in the\
  \ regex argument for DNA/RNA\n            sequence matching (implies -s, matching\
  \ on sequence data). For\n            example, the symbol \"B\" in the regex is\
  \ equivalent to \"[CGTU]\".\n            This option, -e, has priority over -p.\n\
  \n    -r, --revcom-iupac-expand-nuc\n            Reverse complement the regular-expression\
  \ and expand IUPAC\n            ambiguity symbols for DNA/RNA sequence matching\
  \ (implies -s,\n            matching on sequence data). For example, the symbol\
  \ \"B\" in the\n            regex is equivalent to \"[ACG]\". This option, -r, takes\
  \ priority\n            over -e or -p. priority.\n\n    -p, --iupac-expand-prot\n\
  \            Expand IUPAC ambiguity symbols in the regex argyment for protein\n\
  \            sequence matching (implies -s, matching on sequence data).\n\n    -m\
  \ [dna|rna|protein], --moltype=[dna|rna|protein]\n            Specify the type of\
  \ sequence on input (should not be needed in\n            most cases, but sometimes\
  \ Bioperl cannot guess and complains\n            when processing data).\n\n   \
  \ -h, --help\n            Print a brief help message and exit.\n\n    --man   Print\
  \ the manual page and exit.\n\n    --version\n            Print version information\
  \ and exit.\n\n    -l, --log\n            Creates, or appends to, a generic FAST\
  \ logfile in the current\n            working directory. The logfile records date/time\
  \ of execution,\n            full command with options and arguments, and an optional\n\
  \            comment.\n\n    -L [string], --logname=[string]\n            Use [string]\
  \ as the name of the logfile. Default is\n            \"FAST.log.txt\".\n\n    -C\
  \ [string], --comment=[string]\n            Include comment [string] in logfile.\
  \ No comment is saved by\n            default.\n\n    --format=[format]\n      \
  \      Use alternative format for input. See man page for \"fasconvert\"\n     \
  \       for allowed formats. This is for convenience; the FAST tools are\n     \
  \       designed to exchange data in Fasta format, and \"fasta\" is the\n      \
  \      default format for this tool.\n\n    -q B,--fastq> Use fastq format as input\
  \ and output.\n\n"
generated_using:
- --help
docker_image: quay.io/biocontainers/perl-fast:1.06--pl526_0
