class: CommandLineTool
id: fassort.cwl
inputs:
- id: in_description
  doc: "Sort sequence records by their descriptions. If used in\ncombination with\
    \ the -x, --regex option, sort records by values\nof a regex capture applied to\
    \ their descriptions."
  type: boolean?
  inputBinding:
    prefix: --description
- id: in_sequence
  doc: "Sort sequence records by their sequences. If used in combination\nwith the\
    \ -x, --regex option, sort records by values of a regex\ncapture applied to their\
    \ sequences."
  type: boolean?
  inputBinding:
    prefix: --sequence
- id: in_sort_sequence_records_values
  doc: "[int], --field=[int]\nSort sequence records by values at a specific field\
    \ in sequence\ndescriptions. With this option, the description is split into\n\
    fields using strings of white space as field delimiters (the\ndefault Perl behavior\
    \ for splitting lines of data into fields).\nThis option takes a mandatory positive\
    \ integer option argument\ngiving the index for which field the regex should query.\n\
    One-based indexing is used, so the first field after the\nsequence identifier\
    \ has index 1. As standard in Perl, negative\nindices count backwards from the\
    \ last field in the description;\nfield \"-1\" is the last field, \"-2\" is the\
    \ second-to-last etc.\nSequence records for which the specified field does not\
    \ exist\nwill sort on a null key."
  type: boolean?
  inputBinding:
    prefix: -f
- id: in_use_regex_regex
  doc: "[regex], --split-on-regex=[regex]\nUse regex <regex> to split descriptions\
    \ for the -f option\ninstead of the perl default (which splits on one or more\n\
    whitespace characters). Special characters must be quoted to\nprotect them from\
    \ the shell."
  type: boolean?
  inputBinding:
    prefix: -S
- id: in_sort_sequence_named
  doc: "[string], --tag=[string]\nSort sequence records by values of a named tag in\
    \ the\ndescription. Name-value pairs in the description are expected to\nhave\
    \ the format \"name:value\" as generated by FAST tools (such as\nfaslen) or \"\
    name=value\" as common in General Feature Format. The\n\"name\" must contain only\
    \ characters from the set [a-zA-Z0-9_-].\nThe \"value\" is any string of non-whitespace\
    \ characters. Sequence\nrecords for which the specified tag does not exist will\
    \ sort on\na null key."
  type: boolean?
  inputBinding:
    prefix: -t
- id: in_sort_sequence_regex
  doc: "[regex], --regex=[regex]\nSort sequence records by values of a regex capture\
    \ applied to\nidentifers (by default), descriptions (in combination with the\n\
    -d option), or sequences (in combination with the -s option).\nThe format of the\
    \ regex is a perl regular expression that must\ncontain exactly one \"capture\
    \ buffer\" indicated by a pair or\nparentheses. The value captured in this buffer\
    \ is the sort key.\nSequence records that do not match the regex will sort on\
    \ a null\nkey."
  type: boolean?
  inputBinding:
    prefix: -x
- id: in_reverse
  doc: "Reverse the result of comparisons so that greater keys come\nfirst."
  type: boolean?
  inputBinding:
    prefix: --reverse
- id: in_numeric
  doc: Compare keys by their string numerical value.
  type: boolean?
  inputBinding:
    prefix: --numeric
- id: in_man
  doc: Print the manual page and exit.
  type: boolean?
  inputBinding:
    prefix: --man
- id: in_log
  doc: "Creates, or appends to, a generic FAST logfile in the current\nworking directory.\
    \ The logfile records date/time of execution,\nfull command with options and arguments,\
    \ and an optional\ncomment."
  type: boolean?
  inputBinding:
    prefix: --log
- id: in_use_name_default
  doc: "[string], --logname=[string]\nUse [string] as the name of the logfile. Default\
    \ is\n\"FAST.log.txt\"."
  type: boolean?
  inputBinding:
    prefix: -L
- id: in_include_comment_logfile
  doc: "[string], --comment=[string]\nInclude comment [string] in logfile. No comment\
    \ is saved by\ndefault."
  type: boolean?
  inputBinding:
    prefix: -C
- id: in_format
  doc: "=[format]\nUse alternative format for input. See man page for \"fasconvert\"\
    \nfor allowed formats. This is for convenience; the FAST tools are\ndesigned to\
    \ exchange data in Fasta format, and \"fasta\" is the\ndefault format for this\
    \ tool."
  type: boolean?
  inputBinding:
    prefix: --format
- id: in_specify_type_sequence
  doc: "[dna|rna|protein], --moltype=[dna|rna|protein]\nSpecify the type of sequence\
    \ on input (should not be needed in\nmost cases, but sometimes Bioperl cannot\
    \ guess and complains\nwhen processing data)."
  type: boolean?
  inputBinding:
    prefix: -m
- id: in_fast_q
  doc: "Use fastq format as input and output.\n"
  type: boolean?
  inputBinding:
    prefix: --fastq
outputs:
- id: out_stdout
  doc: Standard output stream
  type: stdout
hints:
- class: DockerRequirement
  dockerPull: quay.io/biocontainers/perl-fast:1.06--pl526_0
cwlVersion: v1.1
baseCommand:
- fassort
