from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File

Fastax_V0_1_0 = CommandToolBuilder(tool="fastax", base_command=["fastax"], inputs=[ToolInput(tag="in_negate", input_type=Boolean(optional=True), prefix="--negate", doc=InputDocumentation(doc="return all sequences that are not from the taxon")), ToolInput(tag="in_strict_negate", input_type=Boolean(optional=True), prefix="--strict-negate", doc=InputDocumentation(doc="return all sequences that are not from the taxon, but only if\nthey are from a recognized taxon")), ToolInput(tag="in_identifier", input_type=Boolean(optional=True), prefix="--identifier", doc=InputDocumentation(doc="taxa are searched over sequence identifiers (default is over\ndescriptions)")), ToolInput(tag="in_sequence_descriptions_identifers", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc="[int], --field=[int]\nsequence descriptions or identifers are split into fields and\nfield <int> (1-based) is searched for taxonomic identifiers")), ToolInput(tag="in_fieldmode_split_perlregex", input_type=Boolean(optional=True), prefix="-S", doc=InputDocumentation(doc="[string], --regex-split=[string]\nin field-mode (-f) split on perl-regex <regex> instead of the\ndefault separator, which is strings of white-space. Do 'man\nperlre' and 'man perlfunc' for split.")), ToolInput(tag="in_tax_id_mode", input_type=Boolean(optional=True), prefix="--tax-id-mode", doc=InputDocumentation(doc="NCBI Taxonomic data in sequence records are numeric IDs, not\nnames.")), ToolInput(tag="in_man", input_type=Boolean(optional=True), prefix="--man", doc=InputDocumentation(doc="Print the manual page and exit.")), ToolInput(tag="in_log", input_type=Boolean(optional=True), prefix="--log", doc=InputDocumentation(doc="Creates, or appends to, a generic FAST logfile in the current\nworking directory. The logfile records date/time of execution,\nfull command with options and arguments, and an optional\ncomment.")), ToolInput(tag="in_use_name_default", input_type=Boolean(optional=True), prefix="-L", doc=InputDocumentation(doc="[string], --logname=[string]\nUse [string] as the name of the logfile. Default is\n'FAST.log.txt'.")), ToolInput(tag="in_include_comment_logfile", input_type=Boolean(optional=True), prefix="-C", doc=InputDocumentation(doc="[string], --comment=[string]\nInclude comment [string] in logfile. No comment is saved by\ndefault.")), ToolInput(tag="in_format", input_type=Boolean(optional=True), prefix="--format", doc=InputDocumentation(doc="=[format]\nUse alternative format for input. See man page for 'fasconvert'\nfor allowed formats. This is for convenience; the FAST tools are\ndesigned to exchange data in Fasta format, and 'fasta' is the\ndefault format for this tool.")), ToolInput(tag="in_specify_type_sequence", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="[dna|rna|protein], --moltype=[dna|rna|protein]\nSpecify the type of sequence on input (should not be needed in\nmost cases, but sometimes Bioperl cannot guess and complains\nwhen processing data).")), ToolInput(tag="in_fast_q", input_type=Boolean(optional=True), prefix="--fastq", doc=InputDocumentation(doc="Use fastq format as input and output.\n")), ToolInput(tag="in_multi_fast_a_file", input_type=File(optional=True), position=0, doc=InputDocumentation(doc=""))], outputs=[], container="quay.io/biocontainers/perl-fast:1.06--pl526_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Fastax_V0_1_0().translate("wdl")

