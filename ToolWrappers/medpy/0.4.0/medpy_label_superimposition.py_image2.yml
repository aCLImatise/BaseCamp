&id002 !Command
command:
- medpy_label_superimposition.py
- image2
positional:
- !Positional
  description: ''
  position: 0
  name: medpy_label_superimposition.py
  optional: false
- !Positional
  description: ''
  position: 1
  name: image1
  optional: false
- !Positional
  description: ''
  position: 2
  name: image2
  optional: false
- !Positional
  description: ''
  position: 3
  name: output
  optional: false
named:
- !Flag
  description: ''
  synonyms:
  - -f
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ''
  synonyms:
  - -d
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ''
  synonyms:
  - -v
  args: !EmptyFlagArg {}
  optional: true
parent: &id001 !Command
  command:
  - medpy_label_superimposition.py
  positional: []
  named:
  - !Flag
    description: Display more information.
    synonyms:
    - -v
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Display debug information.
    synonyms:
    - -d
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Silently override existing output images.
    synonyms:
    - -f
    args: !EmptyFlagArg {}
    optional: true
  parent:
  subcommands:
  - !Command
    command:
    - medpy_label_superimposition.py
    - output
    positional:
    - !Positional
      description: ''
      position: 0
      name: medpy_label_superimposition.py
      optional: false
    - !Positional
      description: ''
      position: 1
      name: image1
      optional: false
    - !Positional
      description: ''
      position: 2
      name: image2
      optional: false
    - !Positional
      description: ''
      position: 3
      name: output
      optional: false
    named:
    - !Flag
      description: ''
      synonyms:
      - -f
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -d
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -v
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: ''
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: medpy_label_superimposition.py [-h] [-v] [-d] [-f] image1 image2\
      \ output\nmedpy_label_superimposition.py: error: the following arguments are\
      \ required: image2, output\n"
    generated_using: &id003 []
  - *id002
  usage: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: medpy_label_superimposition.py [-h] [-v] [-d] [-f] image1 image2\
    \ output\n\nTakes two label images as input and creates their superimposition\
    \ i.e. all the\nregions borders are preserved and the resulting image contains\
    \ more or the\nsame number of regions as the respective input images. The resulting\
    \ image has\nthe same name as the first input image, just with a '_superimp' suffix.\n\
    Copyright (C) 2013 Oskar Maier This program comes with ABSOLUTELY NO WARRANTY;\n\
    This is free software, and you are welcome to redistribute it under certain\n\
    conditions; see the LICENSE file or <http://www.gnu.org/licenses/> for\ndetails.\n\
    \npositional arguments:\n  image1      The first input label image.\n  image2\
    \      The second input label image.\n  output      The output image.\n\noptional\
    \ arguments:\n  -h, --help  show this help message and exit\n  -v          Display\
    \ more information.\n  -d          Display debug information.\n  -f          Silently\
    \ override existing output images.\n"
  generated_using:
  - --help
subcommands: []
usage: []
help_flag: !Flag
  description: ''
  synonyms:
  - -h
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: medpy_label_superimposition.py [-h] [-v] [-d] [-f] image1 image2\
  \ output\nmedpy_label_superimposition.py: error: the following arguments are required:\
  \ image2, output\n"
generated_using: *id003
