from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File

Dsk2Ascii_V0_1_0 = CommandToolBuilder(tool="dsk2ascii", base_command=["dsk2ascii"], inputs=[ToolInput(tag="in_arg_output_stdout", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="(0 arg) :    output to stdout")), ToolInput(tag="in_fast_a", input_type=Boolean(optional=True), prefix="-fasta", doc=InputDocumentation(doc="(0 arg) :    output in fasta format, one kmer per read")), ToolInput(tag="in_fast_q", input_type=Boolean(optional=True), prefix="-fastq", doc=InputDocumentation(doc="(0 arg) :    output in fastq format, one kmer per read")), ToolInput(tag="in_file", input_type=Boolean(optional=True), prefix="-file", doc=InputDocumentation(doc="(1 arg) :    file generated by dsk")), ToolInput(tag="in_out", input_type=File(optional=True), prefix="-out", doc=InputDocumentation(doc="(1 arg) :    output file")), ToolInput(tag="in_nb_cores", input_type=Boolean(optional=True), prefix="-nb-cores", doc=InputDocumentation(doc="(1 arg) :    number of cores  [default '0']")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="-verbose", doc=InputDocumentation(doc="(1 arg) :    verbosity level  [default '1']")), ToolInput(tag="in_version", input_type=Boolean(optional=True), prefix="-version", doc=InputDocumentation(doc="(0 arg) :    version"))], outputs=[ToolOutput(tag="out_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out", type_hint=File()), doc=OutputDocumentation(doc="(1 arg) :    output file"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Dsk2Ascii_V0_1_0().translate("wdl", allow_empty_container=True)

