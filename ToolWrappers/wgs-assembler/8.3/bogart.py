from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, Int

Bogart_V0_1_0 = CommandToolBuilder(tool="bogart", base_command=["bogart"], inputs=[ToolInput(tag="in_mandatory_path_ovlstore", input_type=Boolean(optional=True), prefix="-O", doc=InputDocumentation(doc="Mandatory path to an ovlStore.")), ToolInput(tag="in_mandatory_path_gkpstore", input_type=Boolean(optional=True), prefix="-G", doc=InputDocumentation(doc="Mandatory path to a gkpStore.")), ToolInput(tag="in_mandatory_path_tigstore", input_type=Boolean(optional=True), prefix="-T", doc=InputDocumentation(doc="Mandatory path to a tigStore (can exist or not).")), ToolInput(tag="in_mandatory_name_output", input_type=String(optional=True), prefix="-o", doc=InputDocumentation(doc="Mandatory name for the output files")), ToolInput(tag="in_target_number_fragments", input_type=Int(optional=True), prefix="-B", doc=InputDocumentation(doc="Target number of fragments per tigStore (consensus) partition")), ToolInput(tag="in_rs", input_type=Boolean(optional=True), prefix="-RS", doc=InputDocumentation(doc="Remove edges to spur reads from best overlap graph.")), ToolInput(tag="in_ns", input_type=Boolean(optional=True), prefix="-NS", doc=InputDocumentation(doc="Don't seed promiscuous unitigs with suspicious reads.")), ToolInput(tag="in_cs", input_type=Boolean(optional=True), prefix="-CS", doc=InputDocumentation(doc="Don't place contained reads in singleton unitigs.")), ToolInput(tag="in_rw", input_type=String(optional=True), prefix="-RW", doc=InputDocumentation(doc="Remove weak overlaps, those in the lower t fraction of erates per overlap end.")), ToolInput(tag="in_join_promiscuous_unitigs", input_type=Boolean(optional=True), prefix="-J", doc=InputDocumentation(doc="Join promiscuous unitigs using unused best edges.")), ToolInput(tag="in_sr", input_type=Boolean(optional=True), prefix="-SR", doc=InputDocumentation(doc="Shatter repeats.  Enabled with -R and -E; if neither are supplied,\nrepeat fragments are promoted to singleton unitigs (unless -DP).")), ToolInput(tag="in_shatter_repeats_rebuild", input_type=Boolean(optional=True), prefix="-R", doc=InputDocumentation(doc="Shatter repeats, rebuild")), ToolInput(tag="in_shatter_repeats_extend", input_type=Boolean(optional=True), prefix="-E", doc=InputDocumentation(doc="Shatter repeats, extend unique unitigs")), ToolInput(tag="in_dp", input_type=Boolean(optional=True), prefix="-DP", doc=InputDocumentation(doc="When -R or -E, don't promote shattered leftovers to unitigs.\nThis WILL cause CGW to fail; diagnostic only.")), ToolInput(tag="in_rl", input_type=String(optional=True), prefix="-RL", doc=InputDocumentation(doc="Force reads below 'len' bases to be singletons.\nThis WILL cause CGW to fail; diagnostic only.")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="-threads", doc=InputDocumentation(doc="Use N compute threads during repeat detection.\n0 - use OpenMP default (default)\n1 - use one thread")), ToolInput(tag="in_no_more_fraction", input_type=Int(optional=True), prefix="-eg", doc=InputDocumentation(doc="no more than 0.020 fraction (2.0%) error")), ToolInput(tag="in_no_more_errors", input_type=Int(optional=True), prefix="-Eg", doc=InputDocumentation(doc="no more than 2 errors (useful with short reads)")), ToolInput(tag="in_no_more_when", input_type=Int(optional=True), prefix="-em", doc=InputDocumentation(doc="no more than 0.045 fraction (4.5%) error when bubble popping and repeat splitting")), ToolInput(tag="in_no_more_r", input_type=Int(optional=True), prefix="-Em", doc=InputDocumentation(doc="no more than r errors (useful with short reads)")), ToolInput(tag="in_el", input_type=Int(optional=True), prefix="-el", doc=InputDocumentation(doc="no shorter than 40 bases; AS_OVERLAP_MIN_LEN")), ToolInput(tag="in_use_most_gigabytes", input_type=String(optional=True), prefix="-M", doc=InputDocumentation(doc="Use at most 'gb' gigabytes of memory for storing overlaps.")), ToolInput(tag="in_load_most_overlaps", input_type=Int(optional=True), prefix="-N", doc=InputDocumentation(doc="Load at most 'num' overlaps per read.")), ToolInput(tag="in_create", input_type=Boolean(optional=True), prefix="-create", doc=InputDocumentation(doc="Only create the overlap graph, save to disk and quit.")), ToolInput(tag="in_save", input_type=Boolean(optional=True), prefix="-save", doc=InputDocumentation(doc="Save the overlap graph to disk, and continue.")), ToolInput(tag="in_enable_loggingdebugging_specific", input_type=String(optional=True), prefix="-D", doc=InputDocumentation(doc="enable logging/debugging for a specific component.")), ToolInput(tag="in_disable_loggingdebugging_specific", input_type=String(optional=True), prefix="-d", doc=InputDocumentation(doc="disable logging/debugging for a specific component.")), ToolInput(tag="in_overlap_quality", input_type=String(), position=0, doc=InputDocumentation(doc="overlapsUsed")), ToolInput(tag="in_chunk_graph", input_type=String(), position=1, doc=InputDocumentation(doc="intersections")), ToolInput(tag="in_populate", input_type=String(), position=2, doc=InputDocumentation(doc="intersectionBreaking")), ToolInput(tag="in_intersection_bubbles", input_type=String(), position=3, doc=InputDocumentation(doc="intersectionBubblesDebug")), ToolInput(tag="in_intersection_joining", input_type=String(), position=4, doc=InputDocumentation(doc="intersectionJoiningDebug")), ToolInput(tag="in_contained_placement", input_type=String(), position=5, doc=InputDocumentation(doc="happiness")), ToolInput(tag="in_intermediate_unit_igs", input_type=String(), position=6, doc=InputDocumentation(doc="mateSplitAnalysis")), ToolInput(tag="in_mate_split_discontinuous", input_type=String(), position=7, doc=InputDocumentation(doc="mateSplitUnhappyContains")), ToolInput(tag="in_mate_split_coverage_plot", input_type=String(), position=8, doc=InputDocumentation(doc="setParentAndHang")), ToolInput(tag="in_stderr", input_type=String(), position=9, doc=InputDocumentation(doc="No output prefix name (-o option) supplied."))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bogart_V0_1_0().translate("wdl", allow_empty_container=True)

