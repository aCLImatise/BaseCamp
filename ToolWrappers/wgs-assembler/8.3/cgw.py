from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, Int, File, Float

Cgw_V0_1_0 = CommandToolBuilder(tool="cgw", base_command=["cgw"], inputs=[ToolInput(tag="in_do_cleanup_scaffolds", input_type=Boolean(optional=True), prefix="-C", doc=InputDocumentation(doc="Don't cleanup scaffolds")), ToolInput(tag="in_debug", input_type=String(optional=True), prefix="-D", doc=InputDocumentation(doc="Debug")), ToolInput(tag="in_output_overlap_edges", input_type=Boolean(optional=True), prefix="-E", doc=InputDocumentation(doc="output overlap only contig edges")), ToolInput(tag="in_microhet_score_probability", input_type=String(optional=True), prefix="-e", doc=InputDocumentation(doc="Microhet score probability cutoff")), ToolInput(tag="in_strongly_enforce_set", input_type=Boolean(optional=True), prefix="-F", doc=InputDocumentation(doc="strongly enforce unique/repeat flag set in unitig, default if not set is to still\nallow those marked unique to be demoted due to Repeat Branch Pattern or being\ntoo small")), ToolInput(tag="in_gkp_store_path", input_type=Boolean(optional=True), prefix="-g", doc=InputDocumentation(doc="gkp Store path (required)")), ToolInput(tag="in_generate_output_cgw", input_type=Boolean(optional=True), prefix="-G", doc=InputDocumentation(doc="Don't generate output (cgw or cam)")), ToolInput(tag="in_gg", input_type=Boolean(optional=True), prefix="-GG", doc=InputDocumentation(doc="Don't destroy consensus on output (ctgcns will do nothing)")), ToolInput(tag="in_ignore_chaff_unitigs", input_type=Boolean(optional=True), prefix="-I", doc=InputDocumentation(doc="ignore chaff unitigs")), ToolInput(tag="in_set_max_coverage_stat_microhet", input_type=Int(optional=True), prefix="-i", doc=InputDocumentation(doc="Set max coverage stat for microhet determination of non-uniqueness (default -1)")), ToolInput(tag="in_set_min_coverage", input_type=Int(optional=True), prefix="-j", doc=InputDocumentation(doc="Set min coverage stat for definite uniqueness")), ToolInput(tag="in_allow_kicking_contig", input_type=Boolean(optional=True), prefix="-K", doc=InputDocumentation(doc="Allow kicking out a contig placed in a scaffold by mate pairs that has no overlaps\nto both its left and right neighbor contigs.")), ToolInput(tag="in_set_max_coverage_stat_possible", input_type=Int(optional=True), prefix="-k", doc=InputDocumentation(doc="Set max coverage stat for possible uniqueness")), ToolInput(tag="in_interleaved_scaffold_merging", input_type=Boolean(optional=True), prefix="-M", doc=InputDocumentation(doc="don't do interleaved scaffold merging")), ToolInput(tag="in_number_recompute_default", input_type=Int(optional=True), prefix="-m", doc=InputDocumentation(doc="Number of mate samples to recompute an insert size, default is 100")), ToolInput(tag="in_restart_checkpoint_see", input_type=File(optional=True), prefix="-N", doc=InputDocumentation(doc="restart from checkpoint location 'ckp' (see the timing file)")), ToolInput(tag="in_output_name_required", input_type=Boolean(optional=True), prefix="-o", doc=InputDocumentation(doc="Output Name (required)")), ToolInput(tag="in_how_place_closure", input_type=Int(optional=True), prefix="-P", doc=InputDocumentation(doc="how to place closure reads.\n0 - place at first location found\n1 - place at best gap\n2 - allow to be placed in multiple gaps")), ToolInput(tag="in_restart_checkpoint_file", input_type=Int(optional=True), prefix="-R", doc=InputDocumentation(doc="restart from checkpoint file number 'ckp'")), ToolInput(tag="in_repeat_resolution_level", input_type=String(optional=True), prefix="-r", doc=InputDocumentation(doc="repeat resolution level")), ToolInput(tag="in_place_frags_fraction", input_type=Float(optional=True), prefix="-S", doc=InputDocumentation(doc="place all frags in singly-placed surrogates if at least fraction <x> can be placed\ntwo special cases:\nif <t> = -1, place all frags in singly-placed surrogates aggressively\n(which really mean t = 0.0, but triggers a better algorithm)\nif <t> =  0, do not resolve surrogate fragments")), ToolInput(tag="in_stone_throwing_level", input_type=String(optional=True), prefix="-s", doc=InputDocumentation(doc="stone throwing level")), ToolInput(tag="in_shatter", input_type=String(optional=True), prefix="-shatter", doc=InputDocumentation(doc="Set threshold for shattering scaffolds when loading from checkpoint. Any contigs\nconnected to a scaffold only by edges with less weight than the threshold will be\nsplit into a new scaffold (default OFF)")), ToolInput(tag="in_missing_mate", input_type=Int(optional=True), prefix="-missingMate", doc=InputDocumentation(doc="Set threshold (0-1) for the percentage of mates (out of total) that are allowed to be\nmissing when attempting a scaffold merge (default 0). A value of -1 will ignore all\nmissing mates")), ToolInput(tag="in_min_merge_weight", input_type=String(optional=True), prefix="-minmergeweight", doc=InputDocumentation(doc="Only use weight w or better edges for merging scaffolds.")), ToolInput(tag="in_recompute_gaps", input_type=Boolean(optional=True), prefix="-recomputegaps", doc=InputDocumentation(doc="if loading a checkpoint, recompute gaps, merging contigs and splitting low weight scaffolds.")), ToolInput(tag="in_reload_mates", input_type=Boolean(optional=True), prefix="-reloadmates", doc=InputDocumentation(doc="If loading a checkpoint, also load any new mates from gkpStore.")), ToolInput(tag="in_inserting_rocksstones_try", input_type=Boolean(optional=True), prefix="-U", doc=InputDocumentation(doc="after inserting rocks/stones try shifting contig positions back to their original location\nwhen computing overlaps to see if they overlap with the rock/stone and allow them to merge\nif they do")), ToolInput(tag="in_load_overlaps_bog", input_type=File(optional=True), prefix="-u", doc=InputDocumentation(doc="load these overlaps (from BOG) into the scaffold graph")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="verbose")), ToolInput(tag="in_demote_singleton_scaffolds", input_type=Boolean(optional=True), prefix="-Z", doc=InputDocumentation(doc="Don't demote singleton scaffolds")), ToolInput(tag="in_turn_demotes_unitigs", input_type=Boolean(optional=True), prefix="-z", doc=InputDocumentation(doc="Turn on Check for Repeat Branch Pattern (demotes some unique unitigs to repeat)"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Cgw_V0_1_0().translate("wdl", allow_empty_container=True)

