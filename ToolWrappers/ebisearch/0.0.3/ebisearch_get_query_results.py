from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Boolean, Int, File

Ebisearch_Get_Query_Results_V0_1_0 = CommandToolBuilder(tool="ebisearch_get_query_results", base_command=["ebisearch", "get_query_results"], inputs=[ToolInput(tag="in_domain", input_type=String(optional=True), prefix="--domain", doc=InputDocumentation(doc="Domain id in EBI (accessible with\nget_domains)")), ToolInput(tag="in_query", input_type=String(optional=True), prefix="--query", doc=InputDocumentation(doc="Query (searchable fields accessible with\nget_fields with searchable     as type)")), ToolInput(tag="in_field", input_type=String(optional=True), prefix="--field", doc=InputDocumentation(doc="(Multiple) Field to export (accessible with\nget_fields with    retrievable as type)")), ToolInput(tag="in_order", input_type=Boolean(optional=True), prefix="--order", doc=InputDocumentation(doc="[ascending|descending]  (Optional) Order to sort the results\n(optional), should come along     with\n'sortfield' and not allowed to use with\n'sort' parameters")), ToolInput(tag="in_sort_field", input_type=String(optional=True), prefix="--sort_field", doc=InputDocumentation(doc="(Optional) Field to sort on (accessible via\nget_fields with sortable     as option),\nshould come along with 'sortfield'")), ToolInput(tag="in_sort", input_type=String(optional=True), prefix="--sort", doc=InputDocumentation(doc="(Optional, Multiple) Sorting criteria with\nfield_id:order (field_id     accessible with\nget_fields with retrievable as type), should\nnot be used     in conjunction with any of\n'sortfield' and 'order' parameters")), ToolInput(tag="in_field_url", input_type=Boolean(optional=True), prefix="--field_url", doc=InputDocumentation(doc="Include the field links")), ToolInput(tag="in_view_url", input_type=Boolean(optional=True), prefix="--view_url", doc=InputDocumentation(doc="Include other view links")), ToolInput(tag="in_facets", input_type=String(optional=True), prefix="--facets", doc=InputDocumentation(doc="(Optional, Multiple) Facet selections to\napply on search results     with\nfacet_id:facet_value (facet_id accessible\nwith get_fields with facet     as type)")), ToolInput(tag="in_facet_fields", input_type=String(optional=True), prefix="--facet_fields", doc=InputDocumentation(doc="(Optional, Multiple) Facet field identifiers\nassociated with facets     to retrieve\n(facet_id accessible with get_fields with\nfacet as type)")), ToolInput(tag="in_facet_count", input_type=Int(optional=True), prefix="--facet_count", doc=InputDocumentation(doc="(Optional) Number of facet values to")), ToolInput(tag="in_file", input_type=File(optional=True), prefix="--file", doc=InputDocumentation(doc="(Optional) File to export the entry content")), ToolInput(tag="in_retrieve", input_type=String(), position=0, doc=InputDocumentation(doc="--facet_depth INTEGER           (Optional) Number of levels in the facet"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Ebisearch_Get_Query_Results_V0_1_0().translate("wdl", allow_empty_container=True)

