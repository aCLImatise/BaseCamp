from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean, Int, String

Art_V0_1_0 = CommandToolBuilder(tool="art", base_command=["art"], inputs=[ToolInput(tag="in_options", input_type=File(optional=True), prefix="-options", doc=InputDocumentation(doc="Read a text file of options from FILE")), ToolInput(tag="in_chado", input_type=Boolean(optional=True), prefix="-chado", doc=InputDocumentation(doc="Connect to a Chado database (using PGHOST, PGPORT, PGDATABASE, PGUSER environment variables)")), ToolInput(tag="in_d_black_belt_mode", input_type=Boolean(optional=True), prefix="-Dblack_belt_mode", doc=InputDocumentation(doc="=?            Keep warning messages to a minimum [true,false]")), ToolInput(tag="in_d_offset", input_type=Int(optional=True), prefix="-Doffset", doc=InputDocumentation(doc="Open viewer at base position XXX [integer >= 1]")), ToolInput(tag="in_d_user_plot", input_type=File(), prefix="-Duserplot", doc=InputDocumentation(doc="Open one or more userplots")), ToolInput(tag="in_dlog_user_plot", input_type=File(), prefix="-Dloguserplot", doc=InputDocumentation(doc="Open one or more userplots, take log(data)")), ToolInput(tag="in_db_am", input_type=File(optional=True), prefix="-Dbam", doc=InputDocumentation(doc="[,FILE2,...]         Open one or more BAM, CRAM, VCF or BCF files")), ToolInput(tag="in_db_am_clone", input_type=Int(optional=True), prefix="-DbamClone", doc=InputDocumentation(doc="Open all BAM, CRAM, VCF or BCF files in multiple (n > 1) panels")), ToolInput(tag="in_d_show_snps", input_type=Boolean(optional=True), prefix="-Dshow_snps", doc=InputDocumentation(doc="Show SNP marks in BamView")), ToolInput(tag="in_d_show_snp_plot", input_type=Boolean(optional=True), prefix="-Dshow_snp_plot", doc=InputDocumentation(doc="Open SNP plot in BamView")), ToolInput(tag="in_d_show_cov_plot", input_type=Boolean(optional=True), prefix="-Dshow_cov_plot", doc=InputDocumentation(doc="Open coverage plot in BamView")), ToolInput(tag="in_d_show_forward_lines", input_type=Boolean(optional=True), prefix="-Dshow_forward_lines", doc=InputDocumentation(doc="=?         Hide/show forward frame lines [true,false]")), ToolInput(tag="in_d_show_reverse_lines", input_type=Boolean(optional=True), prefix="-Dshow_reverse_lines", doc=InputDocumentation(doc="=?         Hide/show reverse frame lines [true,false]")), ToolInput(tag="in_dcha_do", input_type=Boolean(optional=True), prefix="-Dchado", doc=InputDocumentation(doc="='h:p/d?u'              Get Artemis to open this CHADO database")), ToolInput(tag="in_dread_only", input_type=Boolean(optional=True), prefix="-Dread_only", doc=InputDocumentation(doc="Open CHADO database read-only")), ToolInput(tag="in_sequence_file", input_type=String(), position=0, doc=InputDocumentation(doc="An EMBL, GenBank, FASTA, or GFF3 file")), ToolInput(tag="in_feature_file", input_type=String(), position=1, doc=InputDocumentation(doc="An Artemis TAB file, or GFF file"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Art_V0_1_0().translate("wdl", allow_empty_container=True)

