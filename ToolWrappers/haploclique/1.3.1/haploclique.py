from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, Boolean, File, String

Haploclique_V0_1_0 = CommandToolBuilder(tool="haploclique", base_command=["haploclique"], inputs=[ToolInput(tag="in_edge_quasi_cut_off_cliques", input_type=Int(optional=True), prefix="--edge_quasi_cutoff_cliques", doc=InputDocumentation(doc="edge calculator option\n[default: 0.99]")), ToolInput(tag="in_edge_quasi_cut_off_mixed", input_type=Int(optional=True), prefix="--edge_quasi_cutoff_mixed", doc=InputDocumentation(doc="edge calculator option\n[default: 0.97]")), ToolInput(tag="in_edge_quasi_cut_off_single", input_type=Int(optional=True), prefix="--edge_quasi_cutoff_single", doc=InputDocumentation(doc="edge calculator option\n[default: 0.95]")), ToolInput(tag="in_random_overlap_quality", input_type=Int(optional=True), prefix="--random_overlap_quality", doc=InputDocumentation(doc="edge calculator option\n[default: 0.9]")), ToolInput(tag="in_frame_shift_merge", input_type=Boolean(optional=True), prefix="--frame_shift_merge", doc=InputDocumentation(doc="Reads will be clustered with\nsingle nucleotide insertions or\ndeletions. Use for PacBio data.")), ToolInput(tag="in_min_overlap_cliques", input_type=Int(optional=True), prefix="--min_overlap_cliques", doc=InputDocumentation(doc="edge calculator option\n[default: 0.9]")), ToolInput(tag="in_min_overlap_single", input_type=Int(optional=True), prefix="--min_overlap_single", doc=InputDocumentation(doc="edge calculator option\n[default: 0.6]")), ToolInput(tag="in_all_el_frequencies", input_type=File(optional=True), prefix="--allel_frequencies", doc=InputDocumentation(doc="variant calling is not supported")), ToolInput(tag="in_iterations", input_type=Int(optional=True), prefix="--iterations", doc=InputDocumentation(doc="Number of iterations.\nhaploclique will stop if the\nsuperreads converge.\n[default: -1]")), ToolInput(tag="in_filter", input_type=Int(optional=True), prefix="--filter", doc=InputDocumentation(doc="Filter out reads with low\nfrequency at the end.\n[default: 0.0]")), ToolInput(tag="in_no_singletons", input_type=Boolean(optional=True), prefix="--no_singletons", doc=InputDocumentation(doc="Filter out single read cliques\nafter first iteration.")), ToolInput(tag="in_significance", input_type=Int(optional=True), prefix="--significance", doc=InputDocumentation(doc="Filter out reads witch are below\n<num> standard deviations.\n[default: 3.0]")), ToolInput(tag="in_log", input_type=File(optional=True), prefix="--log", doc=InputDocumentation(doc="Write log to <file>.")), ToolInput(tag="in_doc_haplotypes", input_type=Int(optional=True), prefix="--doc_haplotypes", doc=InputDocumentation(doc="Used in simulation studies with known\nhaplotypes to document which reads\ncontributed to which final cliques (3 or 5).")), ToolInput(tag="in_no_prob_zero", input_type=Boolean(optional=True), prefix="--no_prob0", doc=InputDocumentation(doc="ignore the tail probabilites during edge\ncalculation in <output>.")), ToolInput(tag="in_gff", input_type=File(optional=True), prefix="--gff", doc=InputDocumentation(doc="Option to create GFF File from output. <output> is used as prefix.")), ToolInput(tag="in_bam", input_type=File(optional=True), prefix="--bam", doc=InputDocumentation(doc="Option to create BAM File from output. <output> is used as prefix.")), ToolInput(tag="in_max_cliques", input_type=Int(optional=True), prefix="--max_cliques", doc=InputDocumentation(doc="Set a threshold for the maximal number of cliques which\nshould be considered in the next iteration.")), ToolInput(tag="in_limit_clique_size", input_type=Int(optional=True), prefix="--limit_clique_size", doc=InputDocumentation(doc="Set a threshold to limit the size of cliques.")), ToolInput(tag="in_clever", input_type=String(), position=0, doc=InputDocumentation(doc="use the original clever clique finder")), ToolInput(tag="in_bronk_er_bosch", input_type=String(), position=1, doc=InputDocumentation(doc="use the Bron-Kerbosch based clique finder")), ToolInput(tag="in_yet_dot", input_type=String(), position=0, doc=InputDocumentation(doc="-M FILE --mean_and_sd_filename=FILE     Required for option -I"))], outputs=[ToolOutput(tag="out_gff", output_type=File(optional=True), selector=InputSelector(input_to_select="in_gff", type_hint=File()), doc=OutputDocumentation(doc="Option to create GFF File from output. <output> is used as prefix.")), ToolOutput(tag="out_bam", output_type=File(optional=True), selector=InputSelector(input_to_select="in_bam", type_hint=File()), doc=OutputDocumentation(doc="Option to create BAM File from output. <output> is used as prefix."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Haploclique_V0_1_0().translate("wdl", allow_empty_container=True)

