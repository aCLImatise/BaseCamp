from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean, Float, String

Tensorboard_V0_1_0 = CommandToolBuilder(tool="tensorboard", base_command=["tensorboard"], inputs=[ToolInput(tag="in_logdir", input_type=File(optional=True), prefix="--logdir", doc=InputDocumentation(doc="logdir specifies the directory where TensorBoard will\nlook to find TensorFlow event files that it can\ndisplay. TensorBoard will recursively walk the\ndirectory structure rooted at logdir, looking for\n.*tfevents.* files. You may also pass a comma\nseparated list of log directories, and TensorBoard\nwill watch each directory. You can also assign names\nto individual log directories by putting a colon\nbetween the name and the path, as in tensorboard\n--logdir=name1:/path/to/logs/1,name2:/path/to/logs/2")), ToolInput(tag="in_run_app_verbosity", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="[DEBUG]       Whether to run the app in debug mode. This increases\nlog verbosity to DEBUG.")), ToolInput(tag="in_no_debug", input_type=Float(optional=True), prefix="--nodebug", doc=InputDocumentation(doc="What host to listen to. Defaults to serving on\n0.0.0.0, set to 127.0.0.1 (localhost) todisable remote\naccess (also quiets security warnings).")), ToolInput(tag="in_inspect", input_type=Boolean(optional=True), prefix="--inspect", doc=InputDocumentation(doc="[INSPECT]   Use this flag to print out a digest of your event\nfiles to the command line, when no data is shown on\nTensorBoard or the data shown looks weird. Example\nusages: tensorboard --inspect\n--event_file=myevents.out tensorboard --inspect\n--event_file=myevents.out --tag=loss tensorboard\n--inspect --logdir=mylogdir tensorboard --inspect\n--logdir=mylogdir --tag=loss See\ntensorflow/python/summary/event_file_inspector.py for\nmore info and detailed usage.")), ToolInput(tag="in_no_inspect", input_type=String(optional=True), prefix="--noinspect", doc=InputDocumentation(doc="The particular tag to query for. Only used if")), ToolInput(tag="in_event_file", input_type=File(optional=True), prefix="--event_file", doc=InputDocumentation(doc="The particular event file to query for. Only used if\n--inspect is present and --logdir is not specified.")), ToolInput(tag="in_port", input_type=String(optional=True), prefix="--port", doc=InputDocumentation(doc="What port to serve TensorBoard on.")), ToolInput(tag="in_purge_orphaned_data", input_type=Boolean(optional=True), prefix="--purge_orphaned_data", doc=InputDocumentation(doc="[PURGE_ORPHANED_DATA]\nWhether to purge data that may have been orphaned due\nto TensorBoard restarts. Disabling purge_orphaned_data\ncan be used to debug data disappearance.")), ToolInput(tag="in_no_purge_orphaned_data", input_type=String(optional=True), prefix="--nopurge_orphaned_data", doc=InputDocumentation(doc="How often the backend should load more data.\n")), ToolInput(tag="in_var_9", input_type=String(optional=True), position=0, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Tensorboard_V0_1_0().translate("wdl", allow_empty_container=True)

