from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File

Nextclade_V0_1_0 = CommandToolBuilder(tool="nextclade", base_command=["nextclade"], inputs=[ToolInput(tag="in_jobs", input_type=Boolean(optional=True), prefix="--jobs", doc=InputDocumentation(doc="Number of CPU threads used by the algorithm. If not specified, using number of logical CPU cores, as detected by Node.js runtime  [number] [default: 2]")), ToolInput(tag="in_input_fast_a", input_type=Boolean(optional=True), prefix="--input-fasta", doc=InputDocumentation(doc="Path to a .fasta or a .txt file with input sequences  [string] [required]")), ToolInput(tag="in_input_root_seq", input_type=Boolean(optional=True), prefix="--input-root-seq", doc=InputDocumentation(doc="Path to plain text file containing custom root sequence  [string]")), ToolInput(tag="in_input_tree", input_type=Boolean(optional=True), prefix="--input-tree", doc=InputDocumentation(doc="(optional) Path to Auspice JSON v2 file containing custom reference tree. See https://nextstrain.org/docs/bioinformatics/data-formats  [string]")), ToolInput(tag="in_input_qc_config", input_type=Boolean(optional=True), prefix="--input-qc-config", doc=InputDocumentation(doc="(optional) Path to a JSON file containing custom configuration of Quality Control rules.\nFor an example format see: https://github.com/nextstrain/nextclade/blob/20a9fda5b8046ce26669de2023770790c650daae/packages/web/src/algorithms/defaults/sars-cov-2/qcRulesConfig.ts  [string]")), ToolInput(tag="in_input_gene_map", input_type=Boolean(optional=True), prefix="--input-gene-map", doc=InputDocumentation(doc="(optional) Path to a JSON file containing custom gene map. Gene map (sometimes also called 'gene annotations') is used to resolve aminoacid changes in genes.\nFor an example see https://github.com/nextstrain/nextclade/blob/20a9fda5b8046ce26669de2023770790c650daae/packages/web/src/algorithms/defaults/sars-cov-2/geneMap.json  [string]")), ToolInput(tag="in_input_pcr_primers", input_type=Boolean(optional=True), prefix="--input-pcr-primers", doc=InputDocumentation(doc="(optional) Path to a CSV file containing a list of custom PCR primer sites. These are used to report mutations in these sites.\nFor an example see https://github.com/nextstrain/nextclade/blob/20a9fda5b8046ce26669de2023770790c650daae/packages/web/src/algorithms/defaults/sars-cov-2/pcrPrimers.csv  [string]")), ToolInput(tag="in_output_json", input_type=File(optional=True), prefix="--output-json", doc=InputDocumentation(doc="Path to output JSON results file  [string]")), ToolInput(tag="in_output_csv", input_type=File(optional=True), prefix="--output-csv", doc=InputDocumentation(doc="Path to output CSV results file  [string]")), ToolInput(tag="in_output_tsv_clades_only", input_type=File(optional=True), prefix="--output-tsv-clades-only", doc=InputDocumentation(doc="Path to output CSV clades-only file  [string]")), ToolInput(tag="in_output_tsv", input_type=File(optional=True), prefix="--output-tsv", doc=InputDocumentation(doc="Path to output TSV results file  [string]")), ToolInput(tag="in_output_tree", input_type=File(optional=True), prefix="--output-tree", doc=InputDocumentation(doc="Path to output Auspice JSON V2 results file. See https://nextstrain.org/docs/bioinformatics/data-formats  [string]"))], outputs=[ToolOutput(tag="out_output_json", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_json", type_hint=File()), doc=OutputDocumentation(doc="Path to output JSON results file  [string]")), ToolOutput(tag="out_output_csv", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_csv", type_hint=File()), doc=OutputDocumentation(doc="Path to output CSV results file  [string]")), ToolOutput(tag="out_output_tsv_clades_only", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_tsv_clades_only", type_hint=File()), doc=OutputDocumentation(doc="Path to output CSV clades-only file  [string]")), ToolOutput(tag="out_output_tsv", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_tsv", type_hint=File()), doc=OutputDocumentation(doc="Path to output TSV results file  [string]")), ToolOutput(tag="out_output_tree", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_tree", type_hint=File()), doc=OutputDocumentation(doc="Path to output Auspice JSON V2 results file. See https://nextstrain.org/docs/bioinformatics/data-formats  [string]"))], container="quay.io/biocontainers/nextclade_js:0.14.2--h9ee0642_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Nextclade_V0_1_0().translate("wdl")

