from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String, Int, Float

Chap_V0_1_0 = CommandToolBuilder(tool="chap", base_command=["chap"], inputs=[ToolInput(tag="in_trajxtc_optinput_trajectory", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc="[<.xtc/.trr/...>]  (traj.xtc)       (Opt.)\nInput trajectory or single configuration: xtc trr cpt gro g96 pdb\ntng")), ToolInput(tag="in_topoltpr_optinput_structure", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="[<.tpr/.gro/...>]  (topol.tpr)      (Opt.)\nInput structure: tpr gro g96 pdb brk ent")), ToolInput(tag="in_indexndx_optextra_index", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="[<.ndx>]           (index.ndx)      (Opt.)\nExtra index groups")), ToolInput(tag="in_time_first_frame", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc="<time>             (0)\nFirst frame (ps) to read from trajectory")), ToolInput(tag="in_time_last_frame", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc="<time>             (0)\nLast frame (ps) to read from trajectory")), ToolInput(tag="in_dt", input_type=Boolean(optional=True), prefix="-dt", doc=InputDocumentation(doc="<time>             (0)\nOnly use frame if t MOD dt == first time (ps)")), ToolInput(tag="in_tu", input_type=Boolean(optional=True), prefix="-tu", doc=InputDocumentation(doc="<enum>             (ps)\nUnit for time values: fs, ps, ns, us, ms, s")), ToolInput(tag="in_f_group", input_type=File(optional=True), prefix="-fgroup", doc=InputDocumentation(doc="Atoms stored in the trajectory file (if not set, assume first N\natoms)")), ToolInput(tag="in_x_vg", input_type=Boolean(optional=True), prefix="-xvg", doc=InputDocumentation(doc="<enum>             (xmgrace)\nPlot formatting: none, xmgrace, xmgr")), ToolInput(tag="in_sf", input_type=Boolean(optional=True), prefix="-sf", doc=InputDocumentation(doc="<file>\nProvide selections from files")), ToolInput(tag="in_sel_rpos", input_type=String(optional=True), prefix="-selrpos", doc=InputDocumentation(doc="(atom)\nSelection reference positions: atom, res_com, res_cog, mol_com,\nmol_cog, whole_res_com, whole_res_cog, whole_mol_com,\nwhole_mol_cog, part_res_com, part_res_cog, part_mol_com,\npart_mol_cog, dyn_res_com, dyn_res_cog, dyn_mol_com, dyn_mol_cog")), ToolInput(tag="in_sel_type", input_type=String(optional=True), prefix="-seltype", doc=InputDocumentation(doc="(atom)\nDefault selection output positions: atom, res_com, res_cog,\nmol_com, mol_cog, whole_res_com, whole_res_cog, whole_mol_com,\nwhole_mol_cog, part_res_com, part_res_cog, part_mol_com,\npart_mol_cog, dyn_res_com, dyn_res_cog, dyn_mol_com, dyn_mol_cog")), ToolInput(tag="in_sel_pathway", input_type=String(optional=True), prefix="-sel-pathway", doc=InputDocumentation(doc="Reference group that defines the permeation pathway (usually\n'Protein')")), ToolInput(tag="in_sel_solvent", input_type=String(optional=True), prefix="-sel-solvent", doc=InputDocumentation(doc="Group of small particles to calculate density of (usually 'Water')")), ToolInput(tag="in_out_filename", input_type=File(optional=True), prefix="-out-filename", doc=InputDocumentation(doc="(output)\nFile name for output files without file extension.")), ToolInput(tag="in_out_num_points", input_type=Int(optional=True), prefix="-out-num-points", doc=InputDocumentation(doc="(1000)\nNumber of spatial sample points that are written to the JSON output\nfile.")), ToolInput(tag="in_out_extra_p_dist", input_type=Int(optional=True), prefix="-out-extrap-dist", doc=InputDocumentation(doc="(0)\nExtrapolation distance beyond the pathway endpoints for both JSON\nand OBJ output.")), ToolInput(tag="in_out_grid_dist", input_type=Float(optional=True), prefix="-out-grid-dist", doc=InputDocumentation(doc="(0.15)\nControls the sampling distance of vertices on the pathway surface\nwhich are subsequently interpolated to yield a smooth surface. Very\nsmall values may yield visual artifacts.")), ToolInput(tag="in_out_vis_tweak", input_type=Float(optional=True), prefix="-out-vis-tweak", doc=InputDocumentation(doc="(0.1)\nVisual tweaking factor that controls the smoothness of the pathway\nsurface in the OBJ output. Varies between -1 and 1 (exculisvely),\nwhere larger values result in a smoother surface. Negative values\nmay result in visualisation artifacts.")), ToolInput(tag="in_pf_method", input_type=File(optional=True), prefix="-pf-method", doc=InputDocumentation(doc="(inplane_optim)\nPath finding method. The default inplane_optim implements the\nalgorithm used in the HOLE programme, where the position of a probe\nsphere is optimised in subsequent parallel planes so as to maximise\nits radius. The alternative naive_cylindrical simply uses a\ncylindrical volume as permeation pathway.: cylindrical,\ninplane_optim")), ToolInput(tag="in_pf_v_dwr_database", input_type=String(optional=True), prefix="-pf-vdwr-database", doc=InputDocumentation(doc="(hole_simple)\nDatabase of van-der-Waals radii to be used in pore finding:\nhole_amberuni, hole_bondi, hole_hardcore, hole_simple, hole_xplor,\nuser")), ToolInput(tag="in_pf_v_dwr_fall_back", input_type=String(optional=True), prefix="-pf-vdwr-fallback", doc=InputDocumentation(doc="(nan)\nFallback van-der-Waals radius for atoms that are not listed in\nvan-der-Waals radius database. Unless this is set to a positive\nvalue, an error will be thrown if a pathway-forming atom has no\nassociated van-der-Waals radius in the database.")), ToolInput(tag="in_pf_v_dwr_json", input_type=File(optional=True), prefix="-pf-vdwr-json", doc=InputDocumentation(doc="JSON file with user defined van-der-Waals radii. Will be ignored\nunless -pf-vdwr-database is set to 'user'.")), ToolInput(tag="in_pf_align_method", input_type=String(optional=True), prefix="-pf-align-method", doc=InputDocumentation(doc="(ipp)\nMethod for aligning pathway coordinates across time steps: none,\nipp")), ToolInput(tag="in_pf_probe_step", input_type=Int(optional=True), prefix="-pf-probe-step", doc=InputDocumentation(doc="(0.1)\nStep length for probe movement.")), ToolInput(tag="in_pf_max_free_dist", input_type=Int(optional=True), prefix="-pf-max-free-dist", doc=InputDocumentation(doc="(1)\nMaximum radius of pore.")), ToolInput(tag="in_pf_max_probe_steps", input_type=Int(optional=True), prefix="-pf-max-probe-steps", doc=InputDocumentation(doc="(10000)\nMaximum number of steps the probe is moved in either direction.")), ToolInput(tag="in_pf_sel_ipp", input_type=String(optional=True), prefix="-pf-sel-ipp", doc=InputDocumentation(doc="Selection of atoms whose COM will be used as initial probe\nposition. If not set, the selection specified with 'sel-pathway'\nwill be used.")), ToolInput(tag="in_pf_in_it_probe_pos", input_type=String(optional=True), prefix="-pf-init-probe-pos", doc=InputDocumentation(doc="(nan nan nan)\nInitial position of probe in probe-based pore finding algorithms.\nIf set explicitly, it will overwrite the COM-based initial position\nset with the ippSelflag.")), ToolInput(tag="in_pf_chan_dir_vec", input_type=Int(optional=True), prefix="-pf-chan-dir-vec", doc=InputDocumentation(doc="(0 0 1)\nChannel direction vector. Will be normalised to unit vector\ninternally.")), ToolInput(tag="in_pf_cut_off", input_type=File(optional=True), prefix="-pf-cutoff", doc=InputDocumentation(doc="(nan)\nCutoff for distance searches in path finding algorithm. A value of\nzero or less means no cutoff is applied. If unset, an appropriate\ncutoff is determined automatically.")), ToolInput(tag="in_sa_seed", input_type=Int(optional=True), prefix="-sa-seed", doc=InputDocumentation(doc="(0)\nSeed used in pseudo random number generation for simulated\nannealing. If not set explicitly, a random seed is used.")), ToolInput(tag="in_sa_max_iter", input_type=Int(optional=True), prefix="-sa-max-iter", doc=InputDocumentation(doc="(0)\nNumber of cooling iterations in one simulated annealing run.")), ToolInput(tag="in_sa_in_it_temp", input_type=Float(optional=True), prefix="-sa-init-temp", doc=InputDocumentation(doc="(0.1)\nSimulated annealing initial temperature.")), ToolInput(tag="in_sa_cooling_fac", input_type=Float(optional=True), prefix="-sa-cooling-fac", doc=InputDocumentation(doc="(0.98)\nSimulated annealing cooling factor.")), ToolInput(tag="in_sa_step", input_type=Int(optional=True), prefix="-sa-step", doc=InputDocumentation(doc="(0.001)\nStep length factor used in candidate generation.")), ToolInput(tag="in_nm_max_iter", input_type=Int(optional=True), prefix="-nm-max-iter", doc=InputDocumentation(doc="(100)\nNumber of Nelder-Mead simplex iterations in path finding algorithm.")), ToolInput(tag="in_nm_in_it_shift", input_type=Float(optional=True), prefix="-nm-init-shift", doc=InputDocumentation(doc="(0.1)\nDistance of vertices in initial Nelder-Mead simplex.")), ToolInput(tag="in_pm_pl_margin", input_type=File(optional=True), prefix="-pm-pl-margin", doc=InputDocumentation(doc="(0.75)\nMargin for determining pathway lining residues. A residue is\nconsidered to be pathway lining if it is no further than the local\npath radius plus this margin from the pathway's centre line.")), ToolInput(tag="in_pm_pf_sel", input_type=String(optional=True), prefix="-pm-pf-sel", doc=InputDocumentation(doc="(name CA)\nSelection string that determines the group of atoms in each residue\nwhose centre of geometry's distance from the centre line is used to\ndetermine if a residue is pore-facing.")), ToolInput(tag="in_de_method", input_type=String(optional=True), prefix="-de-method", doc=InputDocumentation(doc="(kernel)\nMethod used for estimating the probability density of the solvent\nparticles along the permeation pathway: histogram, kernel")), ToolInput(tag="in_de_res", input_type=Float(optional=True), prefix="-de-res", doc=InputDocumentation(doc="(0.01)\nSpatial resolution of the density estimator. In case of a\nhistogram, this is the bin width, in case of a kernel density\nestimator, this is the spacing of the evaluation points.")), ToolInput(tag="in_de_bandwidth", input_type=Int(optional=True), prefix="-de-bandwidth", doc=InputDocumentation(doc="(-1)\nBandwidth for the kernel density estimator. Ignored for other\nmethods. If negative or zero, bandwidth will be determined\nautomatically to minimise the asymptotic mean integrated squared\nerror (AMISE).")), ToolInput(tag="in_de_bw_scale", input_type=Int(optional=True), prefix="-de-bw-scale", doc=InputDocumentation(doc="(1)\nScaling factor for the band width. Useful to set a bandwidth\nrelative to the AMISE-optimal value.")), ToolInput(tag="in_de_eval_cut_off", input_type=Int(optional=True), prefix="-de-eval-cutoff", doc=InputDocumentation(doc="(5)\nEvaluation range cutoff for kernel density estimator in multiples\nof bandwidth. Ignored for other methods. Ensures that the density\nfalls off smoothly to zero outside the data range.")), ToolInput(tag="in_hydro_phob_database", input_type=Int(optional=True), prefix="-hydrophob-database", doc=InputDocumentation(doc="(wimley_white_1996)\nDatabase of hydrophobicity scale for pore forming residues:\nhessa_2005, kyte_doolittle_1982, monera_1995, moon_2011,\nwimley_white_1996, zhu_2016, memprotmd, user")), ToolInput(tag="in_hydro_phob_fall_back", input_type=String(optional=True), prefix="-hydrophob-fallback", doc=InputDocumentation(doc="(nan)\nFallback hydrophobicity for residues in the pathway defining group.\nIf unset (nan), residues missing in the database will cause an\nerror.")), ToolInput(tag="in_hydro_phob_json", input_type=File(optional=True), prefix="-hydrophob-json", doc=InputDocumentation(doc="JSON file with user defined hydrophobicity scale. Will be ignored\nunless -hydrophobicity-database is set to 'user'.")), ToolInput(tag="in_hydro_phob_bandwidth", input_type=Float(optional=True), prefix="-hydrophob-bandwidth", doc=InputDocumentation(doc="(0.35)\nBandwidth for hydrophobicity kernel.")), ToolInput(tag="in_hh_hh_aaa", input_type=String(), position=0, doc=InputDocumentation(doc="HH     HH    AAA    PPPPPPPP  ")), ToolInput(tag="in_hh_hh_aa", input_type=String(), position=6, doc=InputDocumentation(doc="HH     HH AA     AA PP        "))], outputs=[ToolOutput(tag="out_out_filename", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_filename", type_hint=File()), doc=OutputDocumentation(doc="(output)\nFile name for output files without file extension."))], container="quay.io/biocontainers/chap:0.9.1--h78a066a_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Chap_V0_1_0().translate("wdl")

