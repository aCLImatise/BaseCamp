from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Rvtest_V0_1_0 = CommandToolBuilder(tool="rvtest", base_command=["rvtest"], inputs=[ToolInput(tag="in_in_vcf", input_type=Boolean(optional=True), prefix="--inVcf", doc=InputDocumentation(doc=": Input VCF File")), ToolInput(tag="in_in_bg_en", input_type=Boolean(optional=True), prefix="--inBgen", doc=InputDocumentation(doc=": Input BGEN File")), ToolInput(tag="in_in_bg_en_sample", input_type=Boolean(optional=True), prefix="--inBgenSample", doc=InputDocumentation(doc=": Input Sample IDs for the BGEN File")), ToolInput(tag="in_ink_gg", input_type=Boolean(optional=True), prefix="--inKgg", doc=InputDocumentation(doc=": Input KGG File")), ToolInput(tag="in_out", input_type=Boolean(optional=True), prefix="--out", doc=InputDocumentation(doc=": Output prefix")), ToolInput(tag="in_output_raw", input_type=Boolean(optional=True), prefix="--outputRaw", doc=InputDocumentation(doc=": Output genotypes, phenotype, covariates(if any); and\ncollapsed genotype to tabular files")), ToolInput(tag="in_co_var", input_type=Boolean(optional=True), prefix="--covar", doc=InputDocumentation(doc=": Specify covariate file")), ToolInput(tag="in_co_var_name", input_type=Boolean(optional=True), prefix="--covar-name", doc=InputDocumentation(doc=": Specify the column name in covariate file to be\nincluded in analysis")), ToolInput(tag="in_sex", input_type=Boolean(optional=True), prefix="--sex", doc=InputDocumentation(doc=": Include sex (5th column in the PED file) as a covariate")), ToolInput(tag="in_pheno", input_type=Boolean(optional=True), prefix="--pheno", doc=InputDocumentation(doc=": Specify phenotype file")), ToolInput(tag="in_inverse_normal", input_type=Boolean(optional=True), prefix="--inverseNormal", doc=InputDocumentation(doc=": Transform phenotype like normal distribution")), ToolInput(tag="in_use_residual_as_phenotype", input_type=Boolean(optional=True), prefix="--useResidualAsPhenotype", doc=InputDocumentation(doc=": Fit covariate ~ phenotype, use residual to replace\nphenotype")), ToolInput(tag="in_m_pheno", input_type=Boolean(optional=True), prefix="--mpheno", doc=InputDocumentation(doc=": Specify which phenotype column to read (default: 1);\n--pheno-name: Specify which phenotype column to read by header\n--qtl: Treat phenotype as quantitative trait")), ToolInput(tag="in_multiple_pheno", input_type=Boolean(optional=True), prefix="--multiplePheno", doc=InputDocumentation(doc=": Specify aa template file for analyses of more than one\nphenotype")), ToolInput(tag="in_dosage", input_type=Boolean(optional=True), prefix="--dosage", doc=InputDocumentation(doc=": Specify which dosage tag to use. (e.g. EC or DS);")), ToolInput(tag="in_multiple_allele", input_type=Boolean(optional=True), prefix="--multipleAllele", doc=InputDocumentation(doc=": Support multi-allelic genotypes")), ToolInput(tag="in_xlabel", input_type=Boolean(optional=True), prefix="--xLabel", doc=InputDocumentation(doc=": Specify X chromosome label (default: 23|X);")), ToolInput(tag="in_x_par_region", input_type=Boolean(optional=True), prefix="--xParRegion", doc=InputDocumentation(doc=": Specify PAR region (default: hg19);, can be build\nnumber e.g. hg38, b37; or specify region, e.g.\n'60001-2699520,154931044-155260560'")), ToolInput(tag="in_people_include_id", input_type=Boolean(optional=True), prefix="--peopleIncludeID", doc=InputDocumentation(doc=": List IDs of people that will be included in study")), ToolInput(tag="in_people_include_file", input_type=Boolean(optional=True), prefix="--peopleIncludeFile", doc=InputDocumentation(doc=": From given file, set IDs of people that will be\nincluded in study")), ToolInput(tag="in_people_exclude_id", input_type=Boolean(optional=True), prefix="--peopleExcludeID", doc=InputDocumentation(doc=": List IDs of people that will be included in study")), ToolInput(tag="in_people_exclude_file", input_type=Boolean(optional=True), prefix="--peopleExcludeFile", doc=InputDocumentation(doc=": From given file, set IDs of people that will be\nincluded in study")), ToolInput(tag="in_range_list", input_type=Boolean(optional=True), prefix="--rangeList", doc=InputDocumentation(doc=": Specify some ranges to use, please use chr:begin-end")), ToolInput(tag="in_site_file", input_type=Boolean(optional=True), prefix="--siteFile", doc=InputDocumentation(doc=": Specify the file containing sites to include, please\nuse 'chr pos' format.")), ToolInput(tag="in_site_depth_min", input_type=Boolean(optional=True), prefix="--siteDepthMin", doc=InputDocumentation(doc=": Specify minimum depth(inclusive); to be included in")), ToolInput(tag="in_an_no_type", input_type=Boolean(optional=True), prefix="--annoType", doc=InputDocumentation(doc=": Specify annotation type that is followed by ANNO= in\nthe VCF INFO field, regular expression is allowed")), ToolInput(tag="in_in_dv_depth_min", input_type=Boolean(optional=True), prefix="--indvDepthMin", doc=InputDocumentation(doc=": Specify minimum depth(inclusive); of a sample to be\nincluded in analysis")), ToolInput(tag="in_in_dv_depth_max", input_type=Boolean(optional=True), prefix="--indvDepthMax", doc=InputDocumentation(doc=": Specify maximum depth(inclusive); of a sample to be\nincluded in analysis")), ToolInput(tag="in_in_dv_qualm_in", input_type=Boolean(optional=True), prefix="--indvQualMin", doc=InputDocumentation(doc=": Specify minimum depth(inclusive); of a sample to be\nincluded in analysis")), ToolInput(tag="in_single", input_type=Boolean(optional=True), prefix="--single", doc=InputDocumentation(doc=": Single variant tests, choose from: score, wald, exact,\nfamScore, famLrt, famGrammarGamma, firth")), ToolInput(tag="in_burden", input_type=Boolean(optional=True), prefix="--burden", doc=InputDocumentation(doc=": Burden tests, choose from: cmc, zeggini, mb, exactCMC,\nrarecover, cmat, cmcWald")), ToolInput(tag="in_vt", input_type=Boolean(optional=True), prefix="--vt", doc=InputDocumentation(doc=": Variable threshold tests, choose from: price, analytic")), ToolInput(tag="in_kernel", input_type=Boolean(optional=True), prefix="--kernel", doc=InputDocumentation(doc=": Kernal-based tests, choose from: SKAT, KBAC, FamSKAT,")), ToolInput(tag="in_kinship", input_type=Boolean(optional=True), prefix="--kinship", doc=InputDocumentation(doc=": Specify a kinship file for autosomal analysis, use\nvcf2kinship to generate")), ToolInput(tag="in_x_hemi_kinship", input_type=Boolean(optional=True), prefix="--xHemiKinship", doc=InputDocumentation(doc=": Provide kinship for the chromosome X hemizygote region")), ToolInput(tag="in_kinship_eigen", input_type=Boolean(optional=True), prefix="--kinshipEigen", doc=InputDocumentation(doc=": Specify eigen decomposition results of a kinship file\nfor autosomal analysis")), ToolInput(tag="in_x_hemi_kinship_eigen", input_type=Boolean(optional=True), prefix="--xHemiKinshipEigen", doc=InputDocumentation(doc=": Specify eigen decomposition results of a kinship file\nfor X analysis")), ToolInput(tag="in_bolt_plink", input_type=Boolean(optional=True), prefix="--boltPlink", doc=InputDocumentation(doc=": Specify a prefix of binary PLINK inputs for BoltLMM")), ToolInput(tag="in_bolt_plink_no_check", input_type=Boolean(optional=True), prefix="--boltPlinkNoCheck", doc=InputDocumentation(doc=": Not checking MAF and missingness for binary PLINK file")), ToolInput(tag="in_gene_file", input_type=Boolean(optional=True), prefix="--geneFile", doc=InputDocumentation(doc=": Specify a gene file (for burden tests);")), ToolInput(tag="in_gene", input_type=Boolean(optional=True), prefix="--gene", doc=InputDocumentation(doc=": Specify which genes to test")), ToolInput(tag="in_setlist", input_type=Boolean(optional=True), prefix="--setList", doc=InputDocumentation(doc=": Specify a list to test (for burden tests);")), ToolInput(tag="in_set_file", input_type=Boolean(optional=True), prefix="--setFile", doc=InputDocumentation(doc=": Specify a list file (for burden tests, first 2 columns:\nsetName chr:beg-end);")), ToolInput(tag="in_set", input_type=Boolean(optional=True), prefix="--set", doc=InputDocumentation(doc=": Specify which set to test (1st column);")), ToolInput(tag="in_freq_upper", input_type=Boolean(optional=True), prefix="--freqUpper", doc=InputDocumentation(doc=": Specify upper minor allele frequency bound to be\nincluded in analysis")), ToolInput(tag="in_freq_lower", input_type=Boolean(optional=True), prefix="--freqLower", doc=InputDocumentation(doc=": Specify lower minor allele frequency bound to be\nincluded in analysis")), ToolInput(tag="in_impute", input_type=Boolean(optional=True), prefix="--impute", doc=InputDocumentation(doc=": Impute missing genotype (default:mean):  mean, hwe, and")), ToolInput(tag="in_condition", input_type=Boolean(optional=True), prefix="--condition", doc=InputDocumentation(doc=": Specify markers to be conditions (specify range);")), ToolInput(tag="in_no_web", input_type=Boolean(optional=True), prefix="--noweb", doc=InputDocumentation(doc=": Skip checking new version")), ToolInput(tag="in_hide_co_var", input_type=Boolean(optional=True), prefix="--hide-covar", doc=InputDocumentation(doc=": Surpress output lines of covariates")), ToolInput(tag="in_num_thread", input_type=Boolean(optional=True), prefix="--numThread", doc=InputDocumentation(doc=": Specify number of threads (default:1)")), ToolInput(tag="in_output_id", input_type=Boolean(optional=True), prefix="--outputID", doc=InputDocumentation(doc=": Output VCF IDs in single-variant assocition results")), ToolInput(tag="in_format_dot", input_type=String(), position=0, doc=InputDocumentation(doc="--rangeFile: Specify the file containing ranges, please use")), ToolInput(tag="in_ska_to", input_type=String(), position=0, doc=InputDocumentation(doc="--meta: Meta-analysis related functions to generate summary")), ToolInput(tag="in_drop", input_type=String(), position=0, doc=InputDocumentation(doc="--imputePheno: Impute phenotype to mean of those have genotypes but no")), ToolInput(tag="in_phenotypes", input_type=String(), position=1, doc=InputDocumentation(doc="--imputeCov: Impute each covariate to its mean, instead of drop"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Rvtest_V0_1_0().translate("wdl", allow_empty_container=True)

