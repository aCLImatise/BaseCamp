from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean

Mlst_V0_1_0 = CommandToolBuilder(tool="mlst", base_command=["mlst"], inputs=[ToolInput(tag="in_check", input_type=Boolean(optional=True), prefix="--check", doc=InputDocumentation(doc="Just check dependencies and exit (default OFF)")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="Quiet - no stderr output (default OFF)")), ToolInput(tag="in_threads", input_type=Boolean(optional=True), prefix="--threads", doc=InputDocumentation(doc="[N]     Number of BLAST threads (suggest GNU Parallel instead) (default '1')")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="Verbose debug output to stderr (default OFF)")), ToolInput(tag="in_scheme", input_type=Boolean(optional=True), prefix="--scheme", doc=InputDocumentation(doc="[X]      Don't autodetect, force this scheme on all inputs (default '')")), ToolInput(tag="in_list", input_type=Boolean(optional=True), prefix="--list", doc=InputDocumentation(doc="List available MLST scheme names (default OFF)")), ToolInput(tag="in_long_list", input_type=Boolean(optional=True), prefix="--longlist", doc=InputDocumentation(doc="List allelles for all MLST schemes (default OFF)")), ToolInput(tag="in_exclude", input_type=Boolean(optional=True), prefix="--exclude", doc=InputDocumentation(doc="[X]     Ignore these schemes (comma sep. list) (default 'ecoli_2,abaumannii')")), ToolInput(tag="in_csv", input_type=Boolean(optional=True), prefix="--csv", doc=InputDocumentation(doc="Output CSV instead of TSV (default OFF)")), ToolInput(tag="in_json", input_type=Boolean(optional=True), prefix="--json", doc=InputDocumentation(doc="[X]        Also write results to this file in JSON format (default '')")), ToolInput(tag="in_label", input_type=Boolean(optional=True), prefix="--label", doc=InputDocumentation(doc="[X]       Replace FILE with this name instead (default '')")), ToolInput(tag="in_no_path", input_type=Boolean(optional=True), prefix="--nopath", doc=InputDocumentation(doc="Strip filename paths from FILE column (default OFF)")), ToolInput(tag="in_novel", input_type=Boolean(optional=True), prefix="--novel", doc=InputDocumentation(doc="[X]       Save novel alleles to this FASTA file (default '')")), ToolInput(tag="in_legacy", input_type=Boolean(optional=True), prefix="--legacy", doc=InputDocumentation(doc="Use old legacy output with allele header row (requires --scheme) (default OFF)")), ToolInput(tag="in_mini_d", input_type=Boolean(optional=True), prefix="--minid", doc=InputDocumentation(doc="[n.n]     DNA %identity of full allelle to consider 'similar' [~] (default '95')")), ToolInput(tag="in_min_cov", input_type=Boolean(optional=True), prefix="--mincov", doc=InputDocumentation(doc="[n.n]    DNA %cov to report partial allele at all [?] (default '10')")), ToolInput(tag="in_min_score", input_type=Boolean(optional=True), prefix="--minscore", doc=InputDocumentation(doc="[n.n]  Minumum score out of 100 to match a scheme (when auto --scheme) (default '50')")), ToolInput(tag="in_blast_db", input_type=Boolean(optional=True), prefix="--blastdb", doc=InputDocumentation(doc="[X]     BLAST database (default '/usr/local/db/blast/mlst.fa')")), ToolInput(tag="in_datadir", input_type=Boolean(optional=True), prefix="--datadir", doc=InputDocumentation(doc="[X]     PubMLST data (default '/usr/local/db/pubmlst')"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Mlst_V0_1_0().translate("wdl", allow_empty_container=True)

