from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Int, Float, Boolean, File

Cooltools_Call_Dots_V0_1_0 = CommandToolBuilder(tool="cooltools_call_dots", base_command=["cooltools", "call-dots"], inputs=[ToolInput(tag="in_expected_name", input_type=String(optional=True), prefix="--expected-name", doc=InputDocumentation(doc="Name of value column in EXPECTED_PATH\n[default: balanced.avg]")), ToolInput(tag="in_weight_name", input_type=String(optional=True), prefix="--weight-name", doc=InputDocumentation(doc="Use balancing weight with this name.\n[default: weight]")), ToolInput(tag="in_nproc", input_type=Int(optional=True), prefix="--nproc", doc=InputDocumentation(doc="Number of processes to split the work\nbetween. [default: 1, i.e. no process pool]")), ToolInput(tag="in_max_loci_separation", input_type=Int(optional=True), prefix="--max-loci-separation", doc=InputDocumentation(doc="Limit loci separation for dot-calling, i.e.,\ndo not call dots for loci that are further\nthan max_loci_separation basepair apart.\n2-20MB is reasonable and would capture most\nof CTCF-dots.  [default: 2000000]")), ToolInput(tag="in_max_nans_tolerated", input_type=Int(optional=True), prefix="--max-nans-tolerated", doc=InputDocumentation(doc="Maximum number of NaNs tolerated in a\nfootprint of every used filter. Must be\ncontrolled with caution, as large max-nans-\ntolerated, might lead to pixels scored in\nthe padding area of the tiles to 'penetrate'\nto the list of scored pixels for the\nstatistical testing. [max-nans-tolerated <=\n2*w ]  [default: 1]")), ToolInput(tag="in_tile_size", input_type=Int(optional=True), prefix="--tile-size", doc=InputDocumentation(doc="Tile size for the Hi-C heatmap tiling.\nTypically on order of several mega-bases,\nand <= max_loci_separation.  [default:\n6000000]")), ToolInput(tag="in_kernel_width", input_type=Int(optional=True), prefix="--kernel-width", doc=InputDocumentation(doc="Outer half-width of the convolution kernel\nin pixels e.g. outer size (w) of the 'donut'\nkernel, with the 2*w+1 overall footprint of\nthe 'donut'.")), ToolInput(tag="in_kernel_peak", input_type=Int(optional=True), prefix="--kernel-peak", doc=InputDocumentation(doc="Inner half-width of the convolution kernel\nin pixels e.g. inner size (p) of the 'donut'\nkernel, with the 2*p+1 overall footprint of\nthe punch-hole.")), ToolInput(tag="in_num_lambda_chunks", input_type=Int(optional=True), prefix="--num-lambda-chunks", doc=InputDocumentation(doc="Number of log-spaced bins to divide your\nadjusted expected between. Same as\nHiCCUPS_W1_MAX_INDX in the original HiCCUPS.\n[default: 45]")), ToolInput(tag="in_fdr", input_type=Float(optional=True), prefix="--fdr", doc=InputDocumentation(doc="False discovery rate (FDR) to control in the\nmultiple hypothesis testing BH-FDR\nprocedure.  [default: 0.02]")), ToolInput(tag="in_dots_clustering_radius", input_type=Int(optional=True), prefix="--dots-clustering-radius", doc=InputDocumentation(doc="Radius for clustering dots that have been\ncalled too close to each other.Typically on\norder of 40 kilo-bases, and >= binsize.\n[default: 39000]")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Enable verbose output")), ToolInput(tag="in_output_scores", input_type=String(optional=True), prefix="--output-scores", doc=InputDocumentation(doc="At the moment it is a redundant option that\ndoes nothing. Reserve it for a better dump\nof convolved scores.")), ToolInput(tag="in_output_hist_s", input_type=File(optional=True), prefix="--output-hists", doc=InputDocumentation(doc="Specify output file name to store lambda-\nchunked histograms. [Not implemented yet]")), ToolInput(tag="in_output_calls", input_type=File(optional=True), prefix="--output-calls", doc=InputDocumentation(doc="Specify output file name where to store the\nresults of dot-calling, in a BEDPE format.\nPre-processed dots are stored in that file.\nPost-processed dots are stored in the\n.postproc one.")), ToolInput(tag="in_score_dump_mode", input_type=File(optional=True), prefix="--score-dump-mode", doc=InputDocumentation(doc="Specify file format for the dump of\nconvolved scores. This dump is used for the\ndownstream processing and is read twice. Now\n'parquet' is the only supported format.\n'cooler' and 'hdf' in the future.  [default:\nparquet]")), ToolInput(tag="in_temp_dir", input_type=String(optional=True), prefix="--temp-dir", doc=InputDocumentation(doc="Create temporary files in specified")), ToolInput(tag="in_no_delete_temp", input_type=Boolean(optional=True), prefix="--no-delete-temp", doc=InputDocumentation(doc="Do not delete temporary files when finished.")), ToolInput(tag="in_cool_path", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_expected_path", input_type=String(), position=1, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output_hist_s", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_hist_s", type_hint=File()), doc=OutputDocumentation(doc="Specify output file name to store lambda-\nchunked histograms. [Not implemented yet]")), ToolOutput(tag="out_output_calls", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_calls", type_hint=File()), doc=OutputDocumentation(doc="Specify output file name where to store the\nresults of dot-calling, in a BEDPE format.\nPre-processed dots are stored in that file.\nPost-processed dots are stored in the\n.postproc one."))], container="quay.io/biocontainers/cooltools:0.4.0--py39hcbe4a3b_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Cooltools_Call_Dots_V0_1_0().translate("wdl")

