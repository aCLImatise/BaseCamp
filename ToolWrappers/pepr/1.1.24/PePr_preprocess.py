from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, Boolean, String, Float, Directory

Pepr_Preprocess_V0_1_0 = CommandToolBuilder(tool="PePr_preprocess", base_command=["PePr-preprocess"], inputs=[ToolInput(tag="in_parameter_file", input_type=File(optional=True), prefix="--parameter-file", doc=InputDocumentation(doc="provide a file that contain the parameters")), ToolInput(tag="in_chip_one", input_type=Int(optional=True), prefix="--chip1", doc=InputDocumentation(doc="chip1 file names separated by comma")), ToolInput(tag="in_input_one", input_type=Int(optional=True), prefix="--input1", doc=InputDocumentation(doc="input1 file names separated by comma")), ToolInput(tag="in_chip_two", input_type=Int(optional=True), prefix="--chip2", doc=InputDocumentation(doc="chip2 file names separated by comma")), ToolInput(tag="in_input_two", input_type=Int(optional=True), prefix="--input2", doc=InputDocumentation(doc="input2 file names separated by comma")), ToolInput(tag="in_file_format", input_type=File(optional=True), prefix="--file-format", doc=InputDocumentation(doc="bed, sam, bam, sampe, bampe...")), ToolInput(tag="in_shift_size", input_type=Int(optional=True), prefix="--shiftsize", doc=InputDocumentation(doc="Half the fragment size.")), ToolInput(tag="in_window_size", input_type=Int(optional=True), prefix="--windowsize", doc=InputDocumentation(doc="Window sizes")), ToolInput(tag="in_diff", input_type=Boolean(optional=True), prefix="--diff", doc=InputDocumentation(doc="Perform differential binding instead of peak-calling")), ToolInput(tag="in_name", input_type=String(optional=True), prefix="--name", doc=InputDocumentation(doc="the experimental name. NA if none provided")), ToolInput(tag="in_threshold", input_type=Float(optional=True), prefix="--threshold", doc=InputDocumentation(doc="p-value threshold. Default 1e-5.")), ToolInput(tag="in_peak_type", input_type=String(optional=True), prefix="--peaktype", doc=InputDocumentation(doc="sharp or broad. Default broad.")), ToolInput(tag="in_num_processors", input_type=Int(optional=True), prefix="--num-processors", doc=InputDocumentation(doc="number of cores for use.")), ToolInput(tag="in_input_directory", input_type=Directory(optional=True), prefix="--input-directory", doc=InputDocumentation(doc="where the data files are. Absolute path recommended.")), ToolInput(tag="in_output_directory", input_type=Directory(optional=True), prefix="--output-directory", doc=InputDocumentation(doc="where you want the output files to be")), ToolInput(tag="in_normalization", input_type=String(optional=True), prefix="--normalization", doc=InputDocumentation(doc="Normalization method. inter-group, intra-group, scale\nor no. Must manually specify for differential binding\nanalysis.")), ToolInput(tag="in_keep_max_dup", input_type=Int(optional=True), prefix="--keep-max-dup", doc=InputDocumentation(doc="maximum number of reads to keep at each position.\nif not specified, will not remove any duplicate.")), ToolInput(tag="in_pep_r_post_process", input_type=String(), position=0, doc=InputDocumentation(doc="Options:"))], outputs=[ToolOutput(tag="out_output_directory", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output_directory", type_hint=File()), doc=OutputDocumentation(doc="where you want the output files to be"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Pepr_Preprocess_V0_1_0().translate("wdl", allow_empty_container=True)

