from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Directory, Int, Boolean

Metawrap_Binning_V0_1_0 = CommandToolBuilder(tool="metaWRAP_binning", base_command=["metaWRAP", "binning"], inputs=[ToolInput(tag="in_metagenomic_assembly_file", input_type=File(optional=True), prefix="-a", doc=InputDocumentation(doc="metagenomic assembly file")), ToolInput(tag="in_output_directory", input_type=Directory(optional=True), prefix="-o", doc=InputDocumentation(doc="output directory")), ToolInput(tag="in_number_threads_default", input_type=Int(optional=True), prefix="-t", doc=InputDocumentation(doc="number of threads (default=1)")), ToolInput(tag="in_amount_ram_available", input_type=Int(optional=True), prefix="-m", doc=InputDocumentation(doc="amount of RAM available (default=4)")), ToolInput(tag="in_minimum_contig_length", input_type=Int(optional=True), prefix="-l", doc=InputDocumentation(doc="minimum contig length to bin (default=1000bp). Note: metaBAT will default to 1500bp minimum")), ToolInput(tag="in_metab_at_two", input_type=Boolean(optional=True), prefix="--metabat2", doc=InputDocumentation(doc="bin contigs with metaBAT2")), ToolInput(tag="in_metab_at_one", input_type=Boolean(optional=True), prefix="--metabat1", doc=InputDocumentation(doc="bin contigs with the original metaBAT")), ToolInput(tag="in_max_bin_two", input_type=Boolean(optional=True), prefix="--maxbin2", doc=InputDocumentation(doc="bin contigs with MaxBin2")), ToolInput(tag="in_concoct", input_type=Boolean(optional=True), prefix="--concoct", doc=InputDocumentation(doc="bin contigs with CONCOCT")), ToolInput(tag="in_universal", input_type=Boolean(optional=True), prefix="--universal", doc=InputDocumentation(doc="use universal marker genes instead of bacterial markers in MaxBin2 (improves Archaea binning)")), ToolInput(tag="in_run_check_m", input_type=Boolean(optional=True), prefix="--run-checkm", doc=InputDocumentation(doc="immediately run CheckM on the bin results (requires 40GB+ of memory)")), ToolInput(tag="in_single_end", input_type=Boolean(optional=True), prefix="--single-end", doc=InputDocumentation(doc="non-paired reads mode (provide *.fastq files)")), ToolInput(tag="in_interleaved", input_type=Boolean(optional=True), prefix="--interleaved", doc=InputDocumentation(doc="the input read files contain interleaved paired-end reads")), ToolInput(tag="in_reads_x_one_dot_fast_q", input_type=Int(optional=True), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_reads_x_two_dot_fast_q", input_type=Int(optional=True), position=1, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output_directory", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output_directory", type_hint=File()), doc=OutputDocumentation(doc="output directory"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Metawrap_Binning_V0_1_0().translate("wdl", allow_empty_container=True)

