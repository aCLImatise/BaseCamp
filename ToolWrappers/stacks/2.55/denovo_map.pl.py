from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File

Denovo_Map_Pl_V0_1_0 = CommandToolBuilder(tool="denovo_map.pl", base_command=["denovo_map.pl"], inputs=[ToolInput(tag="in_samples", input_type=Boolean(optional=True), prefix="--samples", doc=InputDocumentation(doc=": path to the directory containing the samples reads files.")), ToolInput(tag="in_pop_map", input_type=Boolean(optional=True), prefix="--popmap", doc=InputDocumentation(doc=": path to a population map file (format is '<name> TAB <pop>', one sample per line).")), ToolInput(tag="in_out_path", input_type=File(optional=True), prefix="--out-path", doc=InputDocumentation(doc=": path to an output directory.")), ToolInput(tag="in_additional_options_specific", input_type=Boolean(optional=True), prefix="-X", doc=InputDocumentation(doc=": additional options for specific pipeline components, e.g. -X 'populations: --min-maf 0.05'.")), ToolInput(tag="in_threads", input_type=Boolean(optional=True), prefix="--threads", doc=InputDocumentation(doc=": the number of threads/CPUs to use (default: 1).")), ToolInput(tag="in_dry_run", input_type=Boolean(optional=True), prefix="--dry-run", doc=InputDocumentation(doc=": dry run. Do not actually execute anything, just print the commands that would be executed.")), ToolInput(tag="in_resume", input_type=Boolean(optional=True), prefix="--resume", doc=InputDocumentation(doc=": resume executing the pipeline from a previous run.")), ToolInput(tag="in_number_within_individuals", input_type=Boolean(optional=True), prefix="-M", doc=InputDocumentation(doc=": number of mismatches allowed between stacks within individuals (for ustacks).")), ToolInput(tag="in_number_between_individuals", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc=": number of mismatches allowed between stacks between individuals (for cstacks; default 1; suggested: set to ustacks -M).")), ToolInput(tag="in_var_alpha", input_type=Boolean(optional=True), prefix="--var-alpha", doc=InputDocumentation(doc=": significance level at which to call variant sites (for gstacks; default: 0.05).")), ToolInput(tag="in_gt_alpha", input_type=Boolean(optional=True), prefix="--gt-alpha", doc=InputDocumentation(doc=": significance level at which to call genotypes (for gstacks; default: 0.05).")), ToolInput(tag="in_paired", input_type=Boolean(optional=True), prefix="--paired", doc=InputDocumentation(doc=": after assembling RAD loci, assemble mini-contigs with paired-end reads.")), ToolInput(tag="in_rm_pcr_duplicates", input_type=Boolean(optional=True), prefix="--rm-pcr-duplicates", doc=InputDocumentation(doc=": remove all but one set of read pairs of the same sample that have\nthe same insert length.")), ToolInput(tag="in_min_samples_per_pop", input_type=Boolean(optional=True), prefix="--min-samples-per-pop", doc=InputDocumentation(doc=": minimum percentage of individuals in a population required to process a locus for that population (for populations; default: 0)")), ToolInput(tag="in_min_populations", input_type=Boolean(optional=True), prefix="--min-populations", doc=InputDocumentation(doc=": minimum number of populations a locus must be present in to process a locus (for populations; default: 1)")), ToolInput(tag="in_time_components", input_type=Boolean(optional=True), prefix="--time-components", doc=InputDocumentation(doc="(for benchmarking)"))], outputs=[ToolOutput(tag="out_out_path", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_path", type_hint=File()), doc=OutputDocumentation(doc=": path to an output directory."))], container="quay.io/biocontainers/stacks:2.55--he513fc3_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Denovo_Map_Pl_V0_1_0().translate("wdl")

