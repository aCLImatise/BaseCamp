from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File

Populations_V0_1_0 = CommandToolBuilder(tool="populations", base_command=["populations"], inputs=[ToolInput(tag="in_in_path", input_type=Boolean(optional=True), prefix="--in-path", doc=InputDocumentation(doc=": path to a directory containing Stacks ouput files.")), ToolInput(tag="in_in_vcf", input_type=Boolean(optional=True), prefix="--in-vcf", doc=InputDocumentation(doc=": path to a standalone input VCF file.")), ToolInput(tag="in_out_path", input_type=File(optional=True), prefix="--out-path", doc=InputDocumentation(doc=": path to a directory where to write the output files. (Required by -V; otherwise defaults to value of -P.)")), ToolInput(tag="in_pop_map", input_type=Boolean(optional=True), prefix="--popmap", doc=InputDocumentation(doc=": path to a population map. (Format is 'SAMPLE1 \t POP1 \n SAMPLE2 ...'.)")), ToolInput(tag="in_threads", input_type=Boolean(optional=True), prefix="--threads", doc=InputDocumentation(doc=": number of threads to run in parallel sections of code.")), ToolInput(tag="in_batch_size", input_type=Boolean(optional=True), prefix="--batch-size", doc=InputDocumentation(doc="[int]: the number of loci to process in a batch (default: 10,000 in de novo mode; in reference mode, one chromosome\nper batch). Increase to speed analysis, uses more memory, decrease to save memory).")), ToolInput(tag="in_min_populations", input_type=Boolean(optional=True), prefix="--min-populations", doc=InputDocumentation(doc="[int]: minimum number of populations a locus must be present in to process a locus.")), ToolInput(tag="in_min_samples_per_pop", input_type=Boolean(optional=True), prefix="--min-samples-per-pop", doc=InputDocumentation(doc="[float]: minimum percentage of individuals in a population required to process a locus for that population.")), ToolInput(tag="in_min_samples_overall", input_type=Boolean(optional=True), prefix="--min-samples-overall", doc=InputDocumentation(doc="[float]: minimum percentage of individuals across populations required to process a locus.")), ToolInput(tag="in_filter_haplotype_wise", input_type=Boolean(optional=True), prefix="--filter-haplotype-wise", doc=InputDocumentation(doc=": apply the above filters haplotype wise\n(unshared SNPs will be pruned to reduce haplotype-wise missing data).")), ToolInput(tag="in_min_maf", input_type=Boolean(optional=True), prefix="--min-maf", doc=InputDocumentation(doc="[float]: specify a minimum minor allele frequency required to process a SNP (0 < min_maf < 0.5).")), ToolInput(tag="in_min_mac", input_type=Boolean(optional=True), prefix="--min-mac", doc=InputDocumentation(doc="[int]: specify a minimum minor allele count required to process a SNP.")), ToolInput(tag="in_max_obs_het", input_type=Boolean(optional=True), prefix="--max-obs-het", doc=InputDocumentation(doc="[float]: specify a maximum observed heterozygosity required to process a SNP.")), ToolInput(tag="in_write_single_snp", input_type=Boolean(optional=True), prefix="--write-single-snp", doc=InputDocumentation(doc=": restrict data analysis to only the first SNP per locus (implies --no-haps).")), ToolInput(tag="in_write_random_snp", input_type=Boolean(optional=True), prefix="--write-random-snp", doc=InputDocumentation(doc=": restrict data analysis to one random SNP per locus (implies --no-haps).")), ToolInput(tag="in_blacklist", input_type=Boolean(optional=True), prefix="--blacklist", doc=InputDocumentation(doc=": path to a file containing Blacklisted markers to be excluded from the export.")), ToolInput(tag="in_whitelist", input_type=Boolean(optional=True), prefix="--whitelist", doc=InputDocumentation(doc=": path to a file containing Whitelisted markers to include in the export.")), ToolInput(tag="in_renz", input_type=Boolean(optional=True), prefix="--renz", doc=InputDocumentation(doc=": restriction enzyme name.")), ToolInput(tag="in_merge_sites", input_type=Boolean(optional=True), prefix="--merge-sites", doc=InputDocumentation(doc=": merge loci that were produced from the same restriction enzyme cutsite (requires reference-aligned data).")), ToolInput(tag="in_merge_prune_lim", input_type=Boolean(optional=True), prefix="--merge-prune-lim", doc=InputDocumentation(doc=": when merging adjacent loci, if at least X% samples posses both loci prune the remaining samples out of the analysis.")), ToolInput(tag="in_h_we", input_type=Boolean(optional=True), prefix="--hwe", doc=InputDocumentation(doc=": calculate divergence from Hardy-Weinberg equilibrium for each locus.")), ToolInput(tag="in_f_stats", input_type=Boolean(optional=True), prefix="--fstats", doc=InputDocumentation(doc=": enable SNP and haplotype-based F statistics.")), ToolInput(tag="in_fst_correction", input_type=Boolean(optional=True), prefix="--fst-correction", doc=InputDocumentation(doc=": specify a p-value correction to be applied to Fst values based on a Fisher's exact test. Default: off.")), ToolInput(tag="in_p_value_cut_off", input_type=Boolean(optional=True), prefix="--p-value-cutoff", doc=InputDocumentation(doc="[float]: maximum p-value to keep an Fst measurement. Default: 0.05. (Also used as base for Bonferroni correction.)")), ToolInput(tag="in_smooth", input_type=Boolean(optional=True), prefix="--smooth", doc=InputDocumentation(doc=": enable kernel-smoothed Pi, Fis, Fst, Fst', and Phi_st calculations.")), ToolInput(tag="in_smooth_f_stats", input_type=Boolean(optional=True), prefix="--smooth-fstats", doc=InputDocumentation(doc=": enable kernel-smoothed Fst, Fst', and Phi_st calculations.")), ToolInput(tag="in_smooth_pop_stats", input_type=Boolean(optional=True), prefix="--smooth-popstats", doc=InputDocumentation(doc=": enable kernel-smoothed Pi and Fis calculations.\n(Note: turning on smoothing implies --ordered-export.)")), ToolInput(tag="in_sigma", input_type=Boolean(optional=True), prefix="--sigma", doc=InputDocumentation(doc="[int]: standard deviation of the kernel smoothing weight distribution. Default 150kb.")), ToolInput(tag="in_bootstrap", input_type=Boolean(optional=True), prefix="--bootstrap", doc=InputDocumentation(doc=": turn on boostrap resampling for all smoothed statistics.")), ToolInput(tag="in_bootstrap_reps", input_type=Boolean(optional=True), prefix="--bootstrap-reps", doc=InputDocumentation(doc="[int]: number of bootstrap resamplings to calculate (default 100).")), ToolInput(tag="in_bootstrap_pif_is", input_type=Boolean(optional=True), prefix="--bootstrap-pifis", doc=InputDocumentation(doc=": turn on boostrap resampling for smoothed SNP-based Pi and Fis calculations.")), ToolInput(tag="in_bootstrap_fst", input_type=Boolean(optional=True), prefix="--bootstrap-fst", doc=InputDocumentation(doc=": turn on boostrap resampling for smoothed Fst calculations based on pairwise population comparison of SNPs.")), ToolInput(tag="in_bootstrap_div", input_type=Boolean(optional=True), prefix="--bootstrap-div", doc=InputDocumentation(doc=": turn on boostrap resampling for smoothed haplotype diveristy and gene diversity calculations based on haplotypes.")), ToolInput(tag="in_bootstrap_p_hist", input_type=Boolean(optional=True), prefix="--bootstrap-phist", doc=InputDocumentation(doc=": turn on boostrap resampling for smoothed Phi_st calculations based on haplotypes.")), ToolInput(tag="in_bootstrap_wl", input_type=Boolean(optional=True), prefix="--bootstrap-wl", doc=InputDocumentation(doc="[path]: only bootstrap loci contained in this whitelist.")), ToolInput(tag="in_ordered_export", input_type=Boolean(optional=True), prefix="--ordered-export", doc=InputDocumentation(doc=": if data is reference aligned, exports will be ordered; only a single representative of each overlapping site.")), ToolInput(tag="in_fast_a_loci", input_type=Boolean(optional=True), prefix="--fasta-loci", doc=InputDocumentation(doc=": output locus consensus sequences in FASTA format.")), ToolInput(tag="in_fast_a_samples", input_type=Boolean(optional=True), prefix="--fasta-samples", doc=InputDocumentation(doc=": output the sequences of the two haplotypes of each (diploid) sample, for each locus, in FASTA format.")), ToolInput(tag="in_vcf", input_type=Boolean(optional=True), prefix="--vcf", doc=InputDocumentation(doc=": output SNPs and haplotypes in Variant Call Format (VCF).")), ToolInput(tag="in_gene_pop", input_type=Boolean(optional=True), prefix="--genepop", doc=InputDocumentation(doc=": output SNPs and haplotypes in GenePop format.")), ToolInput(tag="in_structure", input_type=Boolean(optional=True), prefix="--structure", doc=InputDocumentation(doc=": output results in Structure format.")), ToolInput(tag="in_rad_painter", input_type=Boolean(optional=True), prefix="--radpainter", doc=InputDocumentation(doc=": output results in fineRADstructure/RADpainter format.")), ToolInput(tag="in_plink", input_type=Boolean(optional=True), prefix="--plink", doc=InputDocumentation(doc=": output genotypes in PLINK format.")), ToolInput(tag="in_hz_ar", input_type=Boolean(optional=True), prefix="--hzar", doc=InputDocumentation(doc=": output genotypes in Hybrid Zone Analysis using R (HZAR) format.")), ToolInput(tag="in_phylip", input_type=Boolean(optional=True), prefix="--phylip", doc=InputDocumentation(doc=": output nucleotides that are fixed-within, and variant among populations in Phylip format for phylogenetic tree construction.")), ToolInput(tag="in_phylip_var", input_type=Boolean(optional=True), prefix="--phylip-var", doc=InputDocumentation(doc=": include variable sites in the phylip output encoded using IUPAC notation.")), ToolInput(tag="in_phylip_var_all", input_type=Boolean(optional=True), prefix="--phylip-var-all", doc=InputDocumentation(doc=": include all sequence as well as variable sites in the phylip output encoded using IUPAC notation.")), ToolInput(tag="in_tree_mix", input_type=Boolean(optional=True), prefix="--treemix", doc=InputDocumentation(doc=": output SNPs in a format useable for the TreeMix program (Pickrell and Pritchard).")), ToolInput(tag="in_gtf", input_type=File(optional=True), prefix="--gtf", doc=InputDocumentation(doc=": output locus positions in a GTF annotation file.")), ToolInput(tag="in_no_hap_exports", input_type=Boolean(optional=True), prefix="--no-hap-exports", doc=InputDocumentation(doc=": omit haplotype outputs.")), ToolInput(tag="in_fast_a_samples_raw", input_type=Boolean(optional=True), prefix="--fasta-samples-raw", doc=InputDocumentation(doc=": output all haplotypes observed in each sample, for each locus, in FASTA format.")), ToolInput(tag="in_map_type", input_type=Boolean(optional=True), prefix="--map-type", doc=InputDocumentation(doc=": genetic map type to write. 'CP', 'DH', 'F2', and 'BC1' are the currently supported map types.")), ToolInput(tag="in_map_format", input_type=Boolean(optional=True), prefix="--map-format", doc=InputDocumentation(doc=": mapping program format to write, 'joinmap', 'onemap', and 'rqtl' are currently supported.")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc=": turn on additional logging.")), ToolInput(tag="in_log_fst_comp", input_type=Boolean(optional=True), prefix="--log-fst-comp", doc=InputDocumentation(doc=": log components of Fst/Phi_st calculations to a file."))], outputs=[ToolOutput(tag="out_out_path", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_path", type_hint=File()), doc=OutputDocumentation(doc=": path to a directory where to write the output files. (Required by -V; otherwise defaults to value of -P.)")), ToolOutput(tag="out_gtf", output_type=File(optional=True), selector=InputSelector(input_to_select="in_gtf", type_hint=File()), doc=OutputDocumentation(doc=": output locus positions in a GTF annotation file."))], container="quay.io/biocontainers/stacks:2.55--he513fc3_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Populations_V0_1_0().translate("wdl")

