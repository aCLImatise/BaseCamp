from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean, Int

Statal_V0_1_0 = CommandToolBuilder(tool="statal", base_command=["statal"], inputs=[ToolInput(tag="in_in", input_type=File(optional=True), prefix="-in", doc=InputDocumentation(doc="Input file in several formats (clustal, fasta, nexus, phylip, etc).")), ToolInput(tag="in_compare_set", input_type=File(optional=True), prefix="-compareset", doc=InputDocumentation(doc="Input list of paths for the alignments to compare.")), ToolInput(tag="in_force_select", input_type=File(optional=True), prefix="-forceselect", doc=InputDocumentation(doc="Force selection of a given file as reference for being compare with others.")), ToolInput(tag="in_matrix", input_type=File(optional=True), prefix="-matrix", doc=InputDocumentation(doc="Input file for user-defined similarity matrix (default: Blosum62).")), ToolInput(tag="in_sgc", input_type=Boolean(optional=True), prefix="-sgc", doc=InputDocumentation(doc="Print gap score per column from input alignment.")), ToolInput(tag="in_sgt", input_type=Boolean(optional=True), prefix="-sgt", doc=InputDocumentation(doc="Print accumulated gap scores distribution from input alignment.")), ToolInput(tag="in_ssc", input_type=Boolean(optional=True), prefix="-ssc", doc=InputDocumentation(doc="Print similarity score per column from input alignment.")), ToolInput(tag="in_sst", input_type=Boolean(optional=True), prefix="-sst", doc=InputDocumentation(doc="Print accumulated similarity scores distribution for input alignment.")), ToolInput(tag="in_sfc", input_type=Boolean(optional=True), prefix="-sfc", doc=InputDocumentation(doc="Print sum-of-pairs score per column for the selected alignment")), ToolInput(tag="in_sft", input_type=Boolean(optional=True), prefix="-sft", doc=InputDocumentation(doc="Print accumulated sum-of-pairs scores distribution for the selected alignment")), ToolInput(tag="in_sident", input_type=Boolean(optional=True), prefix="-sident", doc=InputDocumentation(doc="Print identity scores for sequences in the alignemnt.")), ToolInput(tag="in_scol_ident_t", input_type=Boolean(optional=True), prefix="-scolidentt", doc=InputDocumentation(doc="Print general descriptive statistics for column identity scores from input alignemnt.")), ToolInput(tag="in_half_window_size", input_type=Int(optional=True), prefix="-w", doc=InputDocumentation(doc="(half) Window size, score of position i is the average of the window (i - n) to (i + n).")), ToolInput(tag="in_gw", input_type=Int(optional=True), prefix="-gw", doc=InputDocumentation(doc="(half) Window size only applies to statistics based on Gaps.")), ToolInput(tag="in_sw", input_type=Int(optional=True), prefix="-sw", doc=InputDocumentation(doc="(half) Window size only applies to statistics based on Similarity.")), ToolInput(tag="in_cw", input_type=Int(optional=True), prefix="-cw", doc=InputDocumentation(doc="(half) Window size only applies to statistics based on Consistency."))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Statal_V0_1_0().translate("wdl", allow_empty_container=True)

