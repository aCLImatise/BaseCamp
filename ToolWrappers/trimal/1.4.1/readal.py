from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean

Readal_V0_1_0 = CommandToolBuilder(tool="readal", base_command=["readal"], inputs=[ToolInput(tag="in_in", input_type=File(optional=True), prefix="-in", doc=InputDocumentation(doc="Input file in several formats.")), ToolInput(tag="in_out", input_type=File(optional=True), prefix="-out", doc=InputDocumentation(doc="Output file name (default STDOUT).")), ToolInput(tag="in_format", input_type=Boolean(optional=True), prefix="-format", doc=InputDocumentation(doc="Print information about input file format and if sequences are aligned or not.")), ToolInput(tag="in_type", input_type=Boolean(optional=True), prefix="-type", doc=InputDocumentation(doc="Print information about biological sequences datatype (e.g. nucleotides:dna, nucleotides:rna, aminoacids, etc)")), ToolInput(tag="in_info", input_type=Boolean(optional=True), prefix="-info", doc=InputDocumentation(doc="Print information about sequences number, average sequence length, max & min sequence length")), ToolInput(tag="in_only_seqs", input_type=Boolean(optional=True), prefix="-onlyseqs", doc=InputDocumentation(doc="Generate output with only residues from input file")), ToolInput(tag="in_html", input_type=File(optional=True), prefix="-html", doc=InputDocumentation(doc="Output residues colored according their physicochemical properties. HTML file.")), ToolInput(tag="in_reverse", input_type=Boolean(optional=True), prefix="-reverse", doc=InputDocumentation(doc="Output the reverse of sequences in input file.")), ToolInput(tag="in_nbr_f", input_type=File(optional=True), prefix="-nbrf", doc=InputDocumentation(doc="Output file in NBRF/PIR format")), ToolInput(tag="in_mega", input_type=File(optional=True), prefix="-mega", doc=InputDocumentation(doc="Output file in MEGA format")), ToolInput(tag="in_nexus", input_type=File(optional=True), prefix="-nexus", doc=InputDocumentation(doc="Output file in NEXUS format")), ToolInput(tag="in_clustal", input_type=File(optional=True), prefix="-clustal", doc=InputDocumentation(doc="Output file in CLUSTAL format")), ToolInput(tag="in_fast_a", input_type=File(optional=True), prefix="-fasta", doc=InputDocumentation(doc="Output file in FASTA format")), ToolInput(tag="in_fast_a_m_one_zero", input_type=File(optional=True), prefix="-fasta_m10", doc=InputDocumentation(doc="Output file in FASTA format. Sequences name up to 10 characters.")), ToolInput(tag="in_phylip", input_type=File(optional=True), prefix="-phylip", doc=InputDocumentation(doc="Output file in PHYLIP/PHYLIP4 format")), ToolInput(tag="in_phylip_m_one_zero", input_type=File(optional=True), prefix="-phylip_m10", doc=InputDocumentation(doc="Output file in PHYLIP/PHYLIP4 format. Sequences name up to 10 characters.")), ToolInput(tag="in_phylip_paml", input_type=File(optional=True), prefix="-phylip_paml", doc=InputDocumentation(doc="Output file in PHYLIP format compatible with PAML")), ToolInput(tag="in_phylip_paml_m_one_zero", input_type=File(optional=True), prefix="-phylip_paml_m10", doc=InputDocumentation(doc="Output file in PHYLIP format compatible with PAML. Sequences name up to 10 characters.")), ToolInput(tag="in_phylip_three_dot_two", input_type=File(optional=True), prefix="-phylip3.2", doc=InputDocumentation(doc="Output file in PHYLIP3.2 format")), ToolInput(tag="in_phylip_three_dot_two_m_one_zero", input_type=File(optional=True), prefix="-phylip3.2_m10", doc=InputDocumentation(doc="Output file in PHYLIP3.2 format. Sequences name up to 10 characters."))], outputs=[ToolOutput(tag="out_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out", type_hint=File()), doc=OutputDocumentation(doc="Output file name (default STDOUT).")), ToolOutput(tag="out_html", output_type=File(optional=True), selector=InputSelector(input_to_select="in_html", type_hint=File()), doc=OutputDocumentation(doc="Output residues colored according their physicochemical properties. HTML file.")), ToolOutput(tag="out_nbr_f", output_type=File(optional=True), selector=InputSelector(input_to_select="in_nbr_f", type_hint=File()), doc=OutputDocumentation(doc="Output file in NBRF/PIR format")), ToolOutput(tag="out_mega", output_type=File(optional=True), selector=InputSelector(input_to_select="in_mega", type_hint=File()), doc=OutputDocumentation(doc="Output file in MEGA format")), ToolOutput(tag="out_nexus", output_type=File(optional=True), selector=InputSelector(input_to_select="in_nexus", type_hint=File()), doc=OutputDocumentation(doc="Output file in NEXUS format")), ToolOutput(tag="out_clustal", output_type=File(optional=True), selector=InputSelector(input_to_select="in_clustal", type_hint=File()), doc=OutputDocumentation(doc="Output file in CLUSTAL format")), ToolOutput(tag="out_fast_a", output_type=File(optional=True), selector=InputSelector(input_to_select="in_fast_a", type_hint=File()), doc=OutputDocumentation(doc="Output file in FASTA format")), ToolOutput(tag="out_fast_a_m_one_zero", output_type=File(optional=True), selector=InputSelector(input_to_select="in_fast_a_m_one_zero", type_hint=File()), doc=OutputDocumentation(doc="Output file in FASTA format. Sequences name up to 10 characters.")), ToolOutput(tag="out_phylip", output_type=File(optional=True), selector=InputSelector(input_to_select="in_phylip", type_hint=File()), doc=OutputDocumentation(doc="Output file in PHYLIP/PHYLIP4 format")), ToolOutput(tag="out_phylip_m_one_zero", output_type=File(optional=True), selector=InputSelector(input_to_select="in_phylip_m_one_zero", type_hint=File()), doc=OutputDocumentation(doc="Output file in PHYLIP/PHYLIP4 format. Sequences name up to 10 characters.")), ToolOutput(tag="out_phylip_paml", output_type=File(optional=True), selector=InputSelector(input_to_select="in_phylip_paml", type_hint=File()), doc=OutputDocumentation(doc="Output file in PHYLIP format compatible with PAML")), ToolOutput(tag="out_phylip_paml_m_one_zero", output_type=File(optional=True), selector=InputSelector(input_to_select="in_phylip_paml_m_one_zero", type_hint=File()), doc=OutputDocumentation(doc="Output file in PHYLIP format compatible with PAML. Sequences name up to 10 characters.")), ToolOutput(tag="out_phylip_three_dot_two", output_type=File(optional=True), selector=InputSelector(input_to_select="in_phylip_three_dot_two", type_hint=File()), doc=OutputDocumentation(doc="Output file in PHYLIP3.2 format")), ToolOutput(tag="out_phylip_three_dot_two_m_one_zero", output_type=File(optional=True), selector=InputSelector(input_to_select="in_phylip_three_dot_two_m_one_zero", type_hint=File()), doc=OutputDocumentation(doc="Output file in PHYLIP3.2 format. Sequences name up to 10 characters."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Readal_V0_1_0().translate("wdl", allow_empty_container=True)

