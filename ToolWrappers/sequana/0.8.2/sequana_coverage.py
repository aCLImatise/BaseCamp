from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, Boolean, Directory, String, Float

Sequana_Coverage_V0_1_0 = CommandToolBuilder(tool="sequana_coverage", base_command=["sequana_coverage"], inputs=[ToolInput(tag="in_input", input_type=File(optional=True), prefix="--input", doc=InputDocumentation(doc="Input file in BED or BAM format. If a BAM file is\nprovided, it will be converted locally to a BED file\nusing genomecov, which must be installed. (default:\nNone)")), ToolInput(tag="in_chromosome", input_type=Int(optional=True), prefix="--chromosome", doc=InputDocumentation(doc="Chromosome number (if only one chromosome found, the\nsingle chromosome is chosen automatically). Otherwise\nall chromosomes are analysed. You may want to analyse\nonly one in which case, use this parameter (e.g., -c\n1). !!START AT INDEX 0 !! (default: -1)")), ToolInput(tag="in_circular", input_type=Boolean(optional=True), prefix="--circular", doc=InputDocumentation(doc="If the DNA of the organism is circular (typically\nviruses or bacteria), set to True (default: False)")), ToolInput(tag="in_output_directory", input_type=Directory(optional=True), prefix="--output-directory", doc=InputDocumentation(doc="name of the output (report) directory. (default:\nreport)")), ToolInput(tag="in_no_html", input_type=Boolean(optional=True), prefix="--no-html", doc=InputDocumentation(doc="Do not create any HTML reports. Save ROIs and\nstatistics only. (default: False)")), ToolInput(tag="in_no_multi_qc", input_type=Boolean(optional=True), prefix="--no-multiqc", doc=InputDocumentation(doc="Do not create any multiqc HTML page. (default: False)")), ToolInput(tag="in_debug_level", input_type=String(optional=True), prefix="--debug-level", doc=InputDocumentation(doc="set to DEBUG, INFO, WARNING, CRITICAL, ERROR (default:\nINFO)")), ToolInput(tag="in_level", input_type=String(optional=True), prefix="--level", doc=InputDocumentation(doc="set to DEBUG, INFO, WARNING, CRITICAL, ERROR (default:\nINFO)")), ToolInput(tag="in_genbank", input_type=String(optional=True), prefix="--genbank", doc=InputDocumentation(doc="a valid genbank annotation (default: None)")), ToolInput(tag="in_reference", input_type=Int(optional=True), prefix="--reference", doc=InputDocumentation(doc="If available, you can provide a reference (ENA/NCBI).\nIt must have the same length as the one used to create\nthe BAM or BED file. If provided, it is used to create\nthe coverage versus GC content image (default: None)")), ToolInput(tag="in_window_gc", input_type=Int(optional=True), prefix="--window-gc", doc=InputDocumentation(doc="Length of the running window to compute the GC content\n(default: 201)")), ToolInput(tag="in_n_levels", input_type=Int(optional=True), prefix="--nlevels", doc=InputDocumentation(doc="Number of levels in the contour (default: 3)")), ToolInput(tag="in_window_median", input_type=Int(optional=True), prefix="--window-median", doc=InputDocumentation(doc="Length of the running median window (default 20001,\nrecommended for bacteria). For short genome (below\n100000 bases), we set this parameter to one fifth of\nthe genome length . (default: 20001)")), ToolInput(tag="in_mixture_models", input_type=Int(optional=True), prefix="--mixture-models", doc=InputDocumentation(doc="Number of mixture models to use (default 2, although\nif sequencing depth is below 8, k is set to 1\nautomatically). To ignore that behaviour set k to the\nrequired value (default: 2)")), ToolInput(tag="in_low_threshold", input_type=String(optional=True), prefix="--low-threshold", doc=InputDocumentation(doc="lower threshold (zscore) of the confidence interval.\nOverwrite value given by --threshold/-T (default:\nNone)")), ToolInput(tag="in_high_threshold", input_type=String(optional=True), prefix="--high-threshold", doc=InputDocumentation(doc="higher threshold (zscore) of the confidence interval.\nOverwrite value given by --threshold/-T (default:\nNone)")), ToolInput(tag="in_threshold", input_type=Int(optional=True), prefix="--threshold", doc=InputDocumentation(doc="set lower and higher thresholds of the confidence\ninterval. (default: 4)")), ToolInput(tag="in_clustering_parameter", input_type=Float(optional=True), prefix="--clustering-parameter", doc=InputDocumentation(doc="set lower and higher double threshold parameter (in\n[0,1]). Do not use value close to zero. Ideally,\naround 0.5. lower value will tend to cluster more than\nhigher value (default: 0.5)")), ToolInput(tag="in_length_chunk_used", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="[minimum=1000000], --chunk-size [minimum=1000000]\nLength of the chunk to be used for the analysis.\n(default: 5000000)")), ToolInput(tag="in_merge_consecutive_data", input_type=Boolean(optional=True), prefix="-B", doc=InputDocumentation(doc="[minimum=2], --binning [minimum=2]\nmerge consecutive (non overlapping) data points,\ntaking the mean. This is useful for large genome (e.g.\nhuman). This allows a faster computation, especially\nfor CNV detection were only large windows are of\ninterest. For instance, using a binning of 50 or 100\nallows the human genome to be analysed. (default:\nNone)")), ToolInput(tag="in_cnv_clustering", input_type=Int(optional=True), prefix="--cnv-clustering", doc=InputDocumentation(doc="Two consecutive ROIs are merged when their distance in\nbases is below this parameter. If set to -1, not used.\n(default: -1)")), ToolInput(tag="in_download_reference", input_type=String(optional=True), prefix="--download-reference", doc=InputDocumentation(doc="Download the reference from one of these database\n(default ENA) (default: ENA)")), ToolInput(tag="in_welcome", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_to", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_se_quan_a", input_type=String(), position=2, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output_directory", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output_directory", type_hint=File()), doc=OutputDocumentation(doc="name of the output (report) directory. (default:\nreport)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Sequana_Coverage_V0_1_0().translate("wdl", allow_empty_container=True)

