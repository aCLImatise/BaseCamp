from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String, Int

Seqan_Tcoffee_V0_1_0 = CommandToolBuilder(tool="seqan_tcoffee", base_command=["seqan_tcoffee"], inputs=[ToolInput(tag="in_version_check", input_type=Boolean(optional=True), prefix="--version-check", doc=InputDocumentation(doc="Turn this option off to disable version update notifications of the\napplication. One of 1, ON, TRUE, T, YES, 0, OFF, FALSE, F, and NO.\nDefault: 1.")), ToolInput(tag="in_seq", input_type=File(optional=True), prefix="--seq", doc=InputDocumentation(doc="Name of multi-fasta input file. Valid filetypes are: .frn, .fna,\n.ffn, .fasta, .faa, and .fa.")), ToolInput(tag="in_alphabet", input_type=String(optional=True), prefix="--alphabet", doc=InputDocumentation(doc="The used sequence alphabet. One of protein, dna, rna, and iupac.\nDefault: protein.")), ToolInput(tag="in_outfile", input_type=File(optional=True), prefix="--outfile", doc=InputDocumentation(doc="Name of the output file. Valid filetypes are: .msf, .frn, .fna,\n.ffn, .fasta, .faa, and .fa. Default: out.fasta.")), ToolInput(tag="in_method", input_type=String(optional=True), prefix="--method", doc=InputDocumentation(doc="of STRING's\nDefines the generation method for matches. To select multiple\ngeneration methods recall this option with different arguments. One\nof global, local, overlap, and lcs. Default: global and local.")), ToolInput(tag="in_libraries", input_type=File(optional=True), prefix="--libraries", doc=InputDocumentation(doc="of INPUT_FILE's\nName of match file. To select multiple files recall this option with\ndifferent arguments. Valid filetypes are: .mums, .lib, .blast, and\n.aln.")), ToolInput(tag="in_pairwise_alignment", input_type=Int(optional=True), prefix="--pairwise-alignment", doc=InputDocumentation(doc="Pairwise alignment method. Default: unbanded for usual alignments (<\n50 sequences), banded for deep alignments (>= 50 sequences) One of\nunbanded and banded.")), ToolInput(tag="in_band_width", input_type=Int(optional=True), prefix="--band-width", doc=InputDocumentation(doc="Band width. This option automatically select banded pairwise\nalignment (see pa for details) In range [2..inf]. Default: 60.")), ToolInput(tag="in_gop", input_type=Int(optional=True), prefix="--gop", doc=InputDocumentation(doc="gap open penalty Default: -13.")), ToolInput(tag="in_gex", input_type=Int(optional=True), prefix="--gex", doc=InputDocumentation(doc="gap extension penalty Default: -1.")), ToolInput(tag="in_matrix", input_type=Int(optional=True), prefix="--matrix", doc=InputDocumentation(doc="score matrix Default: Blosum62.")), ToolInput(tag="in_msc", input_type=Int(optional=True), prefix="--msc", doc=InputDocumentation(doc="match score Default: 5.")), ToolInput(tag="in_mmsc", input_type=Int(optional=True), prefix="--mmsc", doc=InputDocumentation(doc="mismatch penalty Default: -4.")), ToolInput(tag="in_use_tree", input_type=File(optional=True), prefix="--usetree", doc=InputDocumentation(doc="Name of the file containing the Newick Guide Tree.")), ToolInput(tag="in_build", input_type=Int(optional=True), prefix="--build", doc=InputDocumentation(doc="Method to build the tree. Following methods are provided:\nNeighbor-Joining (nj), UPGMA single linkage (min), UPGMA complete\nlinkage (max), UPGMA average linkage (avg), UPGMA weighted average\nlinkage (wavg). Neighbor-Joining creates an unrooted tree, which we\nroot at the last joined pair. One of nj, min, max, avg, and wavg.\nDefault: nj.")), ToolInput(tag="in_in_file", input_type=File(optional=True), prefix="--infile", doc=InputDocumentation(doc="Name of the alignment file <FASTA FILE> Valid filetypes are: .frn,\n.fna, .ffn, .fasta, .faa, and .fa."))], outputs=[ToolOutput(tag="out_outfile", output_type=File(optional=True), selector=InputSelector(input_to_select="in_outfile", type_hint=File()), doc=OutputDocumentation(doc="Name of the output file. Valid filetypes are: .msf, .frn, .fna,\n.ffn, .fasta, .faa, and .fa. Default: out.fasta."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Seqan_Tcoffee_V0_1_0().translate("wdl", allow_empty_container=True)

