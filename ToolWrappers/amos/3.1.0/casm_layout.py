from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, Float, Boolean, String

Casm_Layout_V0_1_0 = CommandToolBuilder(tool="casm_layout", base_command=["casm-layout"], inputs=[ToolInput(tag="in_set_path_use", input_type=File(optional=True), prefix="-b", doc=InputDocumentation(doc="Set path of the AMOS bank to use")), ToolInput(tag="in_output_conflict_positions", input_type=File(optional=True), prefix="-C", doc=InputDocumentation(doc="Output conflict positions and support counts to file")), ToolInput(tag="in_set_acceptable_number", input_type=Int(optional=True), prefix="-d", doc=InputDocumentation(doc="Set acceptable number of stdvs for mate-pairs, default 5")), ToolInput(tag="in_set_maximum_alignment", input_type=Int(optional=True), prefix="-g", doc=InputDocumentation(doc="Set maximum alignment gap length, default 10000")), ToolInput(tag="in_set_identity_default", input_type=Float(optional=True), prefix="-i", doc=InputDocumentation(doc="Set the minimum alignment identity, default 70")), ToolInput(tag="in_set_identity_tolerance", input_type=Float(optional=True), prefix="-I", doc=InputDocumentation(doc="Set the identity tolerance between repeats, default 2")), ToolInput(tag="in_set_majority_needed", input_type=Float(optional=True), prefix="-m", doc=InputDocumentation(doc="Set the majority needed to discern a conflict, default 70")), ToolInput(tag="in_output_read_mappings", input_type=File(optional=True), prefix="-M", doc=InputDocumentation(doc="Output read mappings to file")), ToolInput(tag="in_set_minimum_overlap", input_type=Int(optional=True), prefix="-o", doc=InputDocumentation(doc="Set minimum overlap length for assembly, default 10")), ToolInput(tag="in_only_place_reads", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="Only place reads with happy mate-pairs")), ToolInput(tag="in_randomly_place_reads", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="Randomly place repetitive reads into one of their copy\nlocations if they cannot be placed via mate-pair info")), ToolInput(tag="in_set_generator_seed", input_type=Int(optional=True), prefix="-s", doc=InputDocumentation(doc="Set random generator seed to unsigned int, default\nseed is generated by the system clock")), ToolInput(tag="in_include_singleton_contigs", input_type=Boolean(optional=True), prefix="-S", doc=InputDocumentation(doc="Include singleton contigs in the output")), ToolInput(tag="in_set_maximum_ignorable", input_type=Int(optional=True), prefix="-t", doc=InputDocumentation(doc="Set maximum ignorable trim length, default 20")), ToolInput(tag="in_output_tigr_contig", input_type=File(optional=True), prefix="-T", doc=InputDocumentation(doc="Output TIGR contig to file")), ToolInput(tag="in_output_umd_contig", input_type=File(optional=True), prefix="-U", doc=InputDocumentation(doc="Output UMD contig to file")), ToolInput(tag="in_set_coverage_default", input_type=Float(optional=True), prefix="-v", doc=InputDocumentation(doc="Set the minimum alignment coverage, default 25")), ToolInput(tag="in_set_coverage_tolerance", input_type=Float(optional=True), prefix="-V", doc=InputDocumentation(doc="Set the coverage tolerance between repeats, default 2\nPosition query sequences on a reference based on the alignment")), ToolInput(tag="in_delta_file", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output_conflict_positions", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_conflict_positions", type_hint=File()), doc=OutputDocumentation(doc="Output conflict positions and support counts to file")), ToolOutput(tag="out_output_read_mappings", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_read_mappings", type_hint=File()), doc=OutputDocumentation(doc="Output read mappings to file")), ToolOutput(tag="out_output_tigr_contig", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_tigr_contig", type_hint=File()), doc=OutputDocumentation(doc="Output TIGR contig to file")), ToolOutput(tag="out_output_umd_contig", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_umd_contig", type_hint=File()), doc=OutputDocumentation(doc="Output UMD contig to file"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Casm_Layout_V0_1_0().translate("wdl", allow_empty_container=True)

