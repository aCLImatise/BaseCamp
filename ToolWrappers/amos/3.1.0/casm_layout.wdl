version 1.0

task Casmlayout {
  input {
    File? set_path_use
    File? output_conflict_positions
    Int? set_acceptable_number
    Int? set_maximum_alignment
    Float? set_identity_default
    Float? set_identity_tolerance
    Float? set_majority_needed
    File? output_read_mappings
    Int? set_minimum_overlap
    Boolean? only_place_reads
    Boolean? randomly_place_reads
    Int? set_generator_seed
    Boolean? include_singleton_contigs
    Int? set_maximum_ignorable
    File? output_tigr_contig
    File? output_umd_contig
    Float? set_coverage_default
    Float? set_coverage_tolerance
    String delta_file
  }
  command <<<
    casm_layout \
      ~{delta_file} \
      ~{if defined(set_path_use) then ("-b " +  '"' + set_path_use + '"') else ""} \
      ~{if defined(output_conflict_positions) then ("-C " +  '"' + output_conflict_positions + '"') else ""} \
      ~{if defined(set_acceptable_number) then ("-d " +  '"' + set_acceptable_number + '"') else ""} \
      ~{if defined(set_maximum_alignment) then ("-g " +  '"' + set_maximum_alignment + '"') else ""} \
      ~{if defined(set_identity_default) then ("-i " +  '"' + set_identity_default + '"') else ""} \
      ~{if defined(set_identity_tolerance) then ("-I " +  '"' + set_identity_tolerance + '"') else ""} \
      ~{if defined(set_majority_needed) then ("-m " +  '"' + set_majority_needed + '"') else ""} \
      ~{if defined(output_read_mappings) then ("-M " +  '"' + output_read_mappings + '"') else ""} \
      ~{if defined(set_minimum_overlap) then ("-o " +  '"' + set_minimum_overlap + '"') else ""} \
      ~{if (only_place_reads) then "-p" else ""} \
      ~{if (randomly_place_reads) then "-r" else ""} \
      ~{if defined(set_generator_seed) then ("-s " +  '"' + set_generator_seed + '"') else ""} \
      ~{if (include_singleton_contigs) then "-S" else ""} \
      ~{if defined(set_maximum_ignorable) then ("-t " +  '"' + set_maximum_ignorable + '"') else ""} \
      ~{if defined(output_tigr_contig) then ("-T " +  '"' + output_tigr_contig + '"') else ""} \
      ~{if defined(output_umd_contig) then ("-U " +  '"' + output_umd_contig + '"') else ""} \
      ~{if defined(set_coverage_default) then ("-v " +  '"' + set_coverage_default + '"') else ""} \
      ~{if defined(set_coverage_tolerance) then ("-V " +  '"' + set_coverage_tolerance + '"') else ""}
  >>>
  runtime {
    docker: "None"
  }
  parameter_meta {
    set_path_use: "Set path of the AMOS bank to use"
    output_conflict_positions: "Output conflict positions and support counts to file"
    set_acceptable_number: "Set acceptable number of stdvs for mate-pairs, default 5"
    set_maximum_alignment: "Set maximum alignment gap length, default 10000"
    set_identity_default: "Set the minimum alignment identity, default 70"
    set_identity_tolerance: "Set the identity tolerance between repeats, default 2"
    set_majority_needed: "Set the majority needed to discern a conflict, default 70"
    output_read_mappings: "Output read mappings to file"
    set_minimum_overlap: "Set minimum overlap length for assembly, default 10"
    only_place_reads: "Only place reads with happy mate-pairs"
    randomly_place_reads: "Randomly place repetitive reads into one of their copy\\nlocations if they cannot be placed via mate-pair info"
    set_generator_seed: "Set random generator seed to unsigned int, default\\nseed is generated by the system clock"
    include_singleton_contigs: "Include singleton contigs in the output"
    set_maximum_ignorable: "Set maximum ignorable trim length, default 20"
    output_tigr_contig: "Output TIGR contig to file"
    output_umd_contig: "Output UMD contig to file"
    set_coverage_default: "Set the minimum alignment coverage, default 25"
    set_coverage_tolerance: "Set the coverage tolerance between repeats, default 2\\nPosition query sequences on a reference based on the alignment"
    delta_file: ""
  }
  output {
    File out_stdout = stdout()
    File out_output_conflict_positions = "${in_output_conflict_positions}"
    File out_output_read_mappings = "${in_output_read_mappings}"
    File out_output_tigr_contig = "${in_output_tigr_contig}"
    File out_output_umd_contig = "${in_output_umd_contig}"
  }
}