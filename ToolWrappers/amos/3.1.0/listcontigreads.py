from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String

Listcontigreads_V0_1_0 = CommandToolBuilder(tool="listcontigreads", base_command=["listcontigreads"], inputs=[ToolInput(tag="in_h", input_type=Boolean(optional=True), prefix="-H", doc=InputDocumentation(doc="Add 'filename:' prefix")), ToolInput(tag="in_n", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="Add 'line_no:' prefix")), ToolInput(tag="in_show_names_match", input_type=Boolean(optional=True), prefix="-l", doc=InputDocumentation(doc="Show only names of files that match")), ToolInput(tag="in_show_names_do", input_type=Boolean(optional=True), prefix="-L", doc=InputDocumentation(doc="Show only names of files that don't match")), ToolInput(tag="in_show_only_count", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="Show only count of matching lines")), ToolInput(tag="in_show_only_part", input_type=Boolean(optional=True), prefix="-o", doc=InputDocumentation(doc="Show only the matching part of line")), ToolInput(tag="in_quiet_return_pattern", input_type=Boolean(optional=True), prefix="-q", doc=InputDocumentation(doc="Quiet. Return 0 if PATTERN is found, 1 otherwise")), ToolInput(tag="in_select_nonmatching_lines", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="Select non-matching lines")), ToolInput(tag="in_suppress_open_read", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="Suppress open and read errors")), ToolInput(tag="in_recurse", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="Recurse")), ToolInput(tag="in_ignore_case", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="Ignore case")), ToolInput(tag="in_match_whole_words", input_type=Boolean(optional=True), prefix="-w", doc=InputDocumentation(doc="Match whole words only")), ToolInput(tag="in_match_whole_lines", input_type=Boolean(optional=True), prefix="-x", doc=InputDocumentation(doc="Match whole lines only")), ToolInput(tag="in_pattern_literal_regexp", input_type=Boolean(optional=True), prefix="-F", doc=InputDocumentation(doc="PATTERN is a literal (not regexp)")), ToolInput(tag="in_pattern_extended_regexp", input_type=Boolean(optional=True), prefix="-E", doc=InputDocumentation(doc="PATTERN is an extended regexp")), ToolInput(tag="in_match_n_times", input_type=File(optional=True), prefix="-m", doc=InputDocumentation(doc="Match up to N times per file")), ToolInput(tag="in_print_n_lines_trailing", input_type=String(optional=True), prefix="-A", doc=InputDocumentation(doc="Print N lines of trailing context")), ToolInput(tag="in_print_n_lines_leading", input_type=String(optional=True), prefix="-B", doc=InputDocumentation(doc="Print N lines of leading context")), ToolInput(tag="in_same_as", input_type=String(optional=True), prefix="-C", doc=InputDocumentation(doc="Same as '-A N -B N'")), ToolInput(tag="in_pattern_to_match", input_type=String(optional=True), prefix="-e", doc=InputDocumentation(doc="Pattern to match")), ToolInput(tag="in_read_pattern_file", input_type=File(optional=True), prefix="-f", doc=InputDocumentation(doc="Read pattern from file")), ToolInput(tag="in_hhnlloqvsriwfe", input_type=Boolean(optional=True), prefix="-HhnlLoqvsriwFE", doc=InputDocumentation(doc="")), ToolInput(tag="in_grep", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Listcontigreads_V0_1_0().translate("wdl", allow_empty_container=True)

