from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Int, File, Float

Casm_Breaks_V0_1_0 = CommandToolBuilder(tool="casm_breaks", base_command=["casm-breaks"], inputs=[ToolInput(tag="in_bank_materead_info", input_type=String(optional=True), prefix="-b", doc=InputDocumentation(doc="Bank for mate/read info and layout/scaffold output")), ToolInput(tag="in_number_concurring_signatures", input_type=Int(optional=True), prefix="-c", doc=InputDocumentation(doc="Number of concurring signatures required, default 3")), ToolInput(tag="in_set_fuzzy_equals", input_type=Int(optional=True), prefix="-f", doc=InputDocumentation(doc="Set the fuzzy equals tolerance for break positions,\ndefault 3")), ToolInput(tag="in_output_read_paths_file_features", input_type=File(optional=True), prefix="-F", doc=InputDocumentation(doc="Output read paths to file as AMOS features")), ToolInput(tag="in_set_identity_default", input_type=Float(optional=True), prefix="-i", doc=InputDocumentation(doc="Set the minimum alignment identity, default 0")), ToolInput(tag="in_output_read_paths_file_wacky", input_type=File(optional=True), prefix="-P", doc=InputDocumentation(doc="Output read paths to file in wacky format")), ToolInput(tag="in_set_generator_seed", input_type=Int(optional=True), prefix="-s", doc=InputDocumentation(doc="Set random generator seed to unsigned int, default\nseed is generated by the system clock")), ToolInput(tag="in_set_maximum_ignorable", input_type=Int(optional=True), prefix="-t", doc=InputDocumentation(doc="Set maximum ignorable trim length, default 500"))], outputs=[ToolOutput(tag="out_output_read_paths_file_features", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_read_paths_file_features", type_hint=File()), doc=OutputDocumentation(doc="Output read paths to file as AMOS features")), ToolOutput(tag="out_output_read_paths_file_wacky", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_read_paths_file_wacky", type_hint=File()), doc=OutputDocumentation(doc="Output read paths to file in wacky format"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Casm_Breaks_V0_1_0().translate("wdl", allow_empty_container=True)

