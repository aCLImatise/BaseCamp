from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, File, String

Alignstats_V0_1_0 = CommandToolBuilder(tool="alignstats", base_command=["alignstats"], inputs=[ToolInput(tag="in_print_verbose_runtime", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="Print verbose runtime information output to stderr.")), ToolInput(tag="in_maximum_number_keep", input_type=Int(optional=True), prefix="-n", doc=InputDocumentation(doc="Maximum number of records to keep in memory.")), ToolInput(tag="in_use_separate_threads", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="Use separate threads for reading and processing records\n(requires builtin pthread support).")), ToolInput(tag="in_number_htslib_decompression", input_type=Int(optional=True), prefix="-P", doc=InputDocumentation(doc="Number of HTSlib decompression threads to spawn.")), ToolInput(tag="in_read_input_file", input_type=File(optional=True), prefix="-i", doc=InputDocumentation(doc="Read INPUT as the input SAM, BAM, or CRAM file (stdin). Input\nmust be coordinate-sorted for accurate results.")), ToolInput(tag="in_specify_file_format", input_type=File(optional=True), prefix="-j", doc=InputDocumentation(doc="Specify file format of input alignment file ('sam', 'bam', or\n'cram' available, default guessed from filename or 'sam').")), ToolInput(tag="in_write_report_output", input_type=String(optional=True), prefix="-o", doc=InputDocumentation(doc="Write report to OUTPUT (stdout).")), ToolInput(tag="in_file_bed_format_listing_processed", input_type=File(optional=True), prefix="-r", doc=InputDocumentation(doc="File in BED format listing which regions to process. By\ndefault, all available records are processed. This option\nrequires the alignment file to be indexed.")), ToolInput(tag="in_file_listing_regions", input_type=File(optional=True), prefix="-t", doc=InputDocumentation(doc="File in BED format listing capture coverage regions. Required\nif capture coverage statistics are enabled.")), ToolInput(tag="in_file_bed_format_listing_regions", input_type=File(optional=True), prefix="-m", doc=InputDocumentation(doc="File in BED format listing regions of N bases in reference.\nCoverage counts will be suppressed for these regions.")), ToolInput(tag="in_indexed_fasta_reference", input_type=File(optional=True), prefix="-T", doc=InputDocumentation(doc="Indexed FASTA reference file for CRAM input alignment.")), ToolInput(tag="in_only_process_records_minimum", input_type=Int(optional=True), prefix="-q", doc=InputDocumentation(doc="Only process records with minimum mapping quality of INT.")), ToolInput(tag="in_only_process_records_bits", input_type=Int(optional=True), prefix="-f", doc=InputDocumentation(doc="Only process records with all bits in INT set in FLAG.")), ToolInput(tag="in_only_process_records_none", input_type=Int(optional=True), prefix="-F", doc=InputDocumentation(doc="Only process records with none of bits in INT set in FLAG.")), ToolInput(tag="in_filter_bases_base", input_type=Int(optional=True), prefix="-b", doc=InputDocumentation(doc="Filter bases with base quality below INT from coverage")), ToolInput(tag="in_disable_excluding_reads", input_type=Boolean(optional=True), prefix="-D", doc=InputDocumentation(doc="Disable excluding duplicate reads from coverage statistics.")), ToolInput(tag="in_bydetermining_overlapping_bases", input_type=Boolean(optional=True), prefix="-M", doc=InputDocumentation(doc="Enable excluding overlapping bases in paired-end reads by\ndetermining overlapping bases from MC tag.")), ToolInput(tag="in_enable_excluding_fromfirst", input_type=Boolean(optional=True), prefix="-O", doc=InputDocumentation(doc="Enable excluding overlapping bases in paired-end reads from\nfirst read in coordinate-sorted order from coverage statistics.")), ToolInput(tag="in_disable_processing_unplaced", input_type=Boolean(optional=True), prefix="-U", doc=InputDocumentation(doc="Disable processing unplaced unmapped reads (CHROM '*') when\nusing the -r option.")), ToolInput(tag="in_disable_reporting_alignment", input_type=Boolean(optional=True), prefix="-A", doc=InputDocumentation(doc="Disable reporting alignment statistics.")), ToolInput(tag="in_disable_reporting_capture", input_type=Boolean(optional=True), prefix="-C", doc=InputDocumentation(doc="Disable reporting capture coverage statistics.")), ToolInput(tag="in_disable_reporting_whole", input_type=Boolean(optional=True), prefix="-W", doc=InputDocumentation(doc="Disable reporting whole genome coverage statistics.")), ToolInput(tag="in_statistics_dot", input_type=String(), position=0, doc=InputDocumentation(doc="Reporting options:"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Alignstats_V0_1_0().translate("wdl", allow_empty_container=True)

