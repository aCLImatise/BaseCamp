!Command
command:
- grmpy
positional:
- !Positional
  optional: false
  position: 0
  name: parameters
  description: '--graph-sequence-matching arg (=1)        Enables smith waterman graph '
- !Positional
  optional: false
  position: 1
  name: alignment
  description: '-g [ --graph-spec ] arg                   JSON file(s) describing
    the '
- !Positional
  optional: false
  position: 0
  name: arguments
  description: '-t [ --sample-threads ] arg (=8)          Number of threads for parallel '
named:
- !Flag
  optional: true
  synonyms:
  - -A
  description: "[ --alignment-output-folder ] arg      Output folder for alignments.\
    \ Note\nthese can become very large and are\nonly requiredfor curation /\nvisualisation\
    \ or faster reanalysis."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --bad-align-frac
  description: "(=0.800000012)       Fraction of read that needs to be\nmapped in\
    \ order for it to be used."
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - --bad-align-uniq-kmer-len
  description: "(=0)        Kmer length for uniqueness check\nduring read filtering."
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - -G
  description: '[ --genotyping-parameters ] arg        JSON file with genotyping model'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -z
  description: "[ --gzip-output ] [=arg(=1)] (=0)      gzip-compress output files.\
    \ If -O\nis used, output file names are\nappended with .gz"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --help-defaults
  description: "produce tab-delimited list of\ncommand line options and their\ndefault\
    \ values"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --help-md
  description: "produce help message pre-formatted\nas a markdown file section and\
    \ exit"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --infer-read-haplotypes
  description: "[=arg(=1)] (=0)   Infer haplotype paths using read\nand fragment information."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --klib-sequence-matching
  description: (=0)         Use klib smith-waterman aligner.
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - --kmer-sequence-matching
  description: (=0)         Use kmer aligner.
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - --log-async
  description: (=0)                      Enable / disable async logging.
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - --log-file
  description: Log to a file instead of stderr.
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - --log-level
  description: "(=info)                   Set log level (error, warning,\ninfo)."
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - -m
  description: "[ --manifest ] arg                     Manifest of samples with path\
    \ and\nbam stats."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -M
  description: "[ --max-reads-per-event ] arg (=10000) Maximum number of reads to\
    \ process\nfor a single event."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -o
  description: "[ --output-file ] arg                  Output file name. Will output\
    \ to\nstdout if omitted or '-'."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -O
  description: "[ --output-folder ] arg                Output folder path. paragraph\
    \ will\nattempt to create the folder but\nnot the entire path. Will output to\n\
    stdout if neither of output-file or\noutput-folder provided. If\nspecified, paragraph\
    \ will produce\none output file for each input file\nbearing the same name."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --path-sequence-matching
  description: (=0)         Enables alignment to paths
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - --progress
  description: '[=arg(=1)] (=1)'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -r
  description: '[ --reference ] arg                    Reference genome fasta file.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --response-file
  description: file with more command line
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - -v
  description: '[ --version ]                          print program version information'
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  description: '[ --help ]                             produce help message and exit'
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "grmpy -r <reference> -g <graphs> -m <manifest> [optional arguments]\n\n\
  Command line options:\n  -A [ --alignment-output-folder ] arg      Output folder\
  \ for alignments. Note \n                                            these can become\
  \ very large and are\n                                            only requiredfor\
  \ curation / \n                                            visualisation or faster\
  \ reanalysis.\n  --bad-align-frac arg (=0.800000012)       Fraction of read that\
  \ needs to be \n                                            mapped in order for\
  \ it to be used.\n  --bad-align-uniq-kmer-len arg (=0)        Kmer length for uniqueness\
  \ check \n                                            during read filtering.\n \
  \ -G [ --genotyping-parameters ] arg        JSON file with genotyping model \n \
  \                                           parameters\n  --graph-sequence-matching\
  \ arg (=1)        Enables smith waterman graph \n                              \
  \              alignment\n  -g [ --graph-spec ] arg                   JSON file(s)\
  \ describing the \n                                            graph(s)\n  -z [\
  \ --gzip-output ] [=arg(=1)] (=0)      gzip-compress output files. If -O \n    \
  \                                        is used, output file names are \n     \
  \                                       appended with .gz\n  -h [ --help ]     \
  \                        produce help message and exit\n  --help-defaults      \
  \                     produce tab-delimited list of \n                         \
  \                   command line options and their \n                          \
  \                  default values\n  --help-md                                 produce\
  \ help message pre-formatted \n                                            as a\
  \ markdown file section and exit\n  --infer-read-haplotypes [=arg(=1)] (=0)   Infer\
  \ haplotype paths using read \n                                            and fragment\
  \ information.\n  --klib-sequence-matching arg (=0)         Use klib smith-waterman\
  \ aligner.\n  --kmer-sequence-matching arg (=0)         Use kmer aligner.\n  --log-async\
  \ arg (=0)                      Enable / disable async logging.\n  --log-file arg\
  \                            Log to a file instead of stderr.\n  --log-level arg\
  \ (=info)                   Set log level (error, warning, \n                  \
  \                          info).\n  -m [ --manifest ] arg                     Manifest\
  \ of samples with path and \n                                            bam stats.\n\
  \  -M [ --max-reads-per-event ] arg (=10000) Maximum number of reads to process\
  \ \n                                            for a single event.\n  -o [ --output-file\
  \ ] arg                  Output file name. Will output to \n                   \
  \                         stdout if omitted or '-'.\n  -O [ --output-folder ] arg\
  \                Output folder path. paragraph will \n                         \
  \                   attempt to create the folder but \n                        \
  \                    not the entire path. Will output to\n                     \
  \                       stdout if neither of output-file or\n                  \
  \                          output-folder provided. If \n                       \
  \                     specified, paragraph will produce \n                     \
  \                       one output file for each input file\n                  \
  \                          bearing the same name.\n  --path-sequence-matching arg\
  \ (=0)         Enables alignment to paths\n  --progress [=arg(=1)] (=1)\n  -r [\
  \ --reference ] arg                    Reference genome fasta file.\n  --response-file\
  \ arg                       file with more command line \n                     \
  \                       arguments\n  -t [ --sample-threads ] arg (=8)          Number\
  \ of threads for parallel \n                                            sample processing.\n\
  \  -v [ --version ]                          print program version information\n\
  \n\n"
generated_using:
- --help
docker_image:
