!Command
command:
- paragraph
positional:
- !Positional
  optional: false
  position: 0
  name: uniquely.
  description: --bad-align-uniq-kmer-len arg (=0)           Kmer length for uniqueness
    check
- !Positional
  optional: false
  position: 0
  name: alignment
  description: '-g [ --graph-spec ] arg                      JSON file(s) describing
    the '
- !Positional
  optional: false
  position: 0
  name: arguments
  description: '-T [ --target-regions ] arg                  Comma-separated list
    of target '
- !Positional
  optional: false
  position: 0
  name: information
  description: 'Failed to parse the options: ERROR: BAM file is missing.'
named:
- !Flag
  optional: true
  synonyms:
  - --bad-align-frac
  description: "(=0.800000012)          Fraction of read that needs to\nbe mapped\
    \ in order for it to be\nused."
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - --bad-align-nonuniq
  description: (=1)                 Remove reads that are not mapped
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - -b
  description: "[ --bam ] arg                             Input BAM file(s) for read\n\
    extraction. We align all reads\nto all graphs."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --graph-sequence-matching
  description: (=1)           Enables smith waterman graph
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - -z
  description: '[ --gzip-output ] [=arg(=1)] (=0)         gzip-compress output files.
    If'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -O
  description: used, output file names
  args: !SimpleFlagArg
    name: is
- !Flag
  optional: true
  synonyms:
  - --help-defaults
  description: "produce tab-delimited list of\ncommand line options and their\ndefault\
    \ values"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --help-md
  description: "produce help message\npre-formatted as a markdown file\nsection and\
    \ exit"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --klib-sequence-matching
  description: (=0)            Use klib smith-waterman aligner.
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - --kmer-sequence-matching
  description: (=0)            Use kmer aligner.
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - --log-async
  description: (=0)                         Enable / disable async logging.
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - --log-file
  description: Log to a file instead of stderr.
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - --log-level
  description: "(=info)                      Set log level (error, warning,\ninfo)."
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - -M
  description: "[ --max-reads-per-event ] arg (=10000)    Maximum number of reads\
    \ to\nprocess for a single event."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -a
  description: "[ --output-alignments ] arg (=0)          Output alignments for every\
    \ read\n(large)."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --output-detailed-read-counts
  description: "(=0)       Output detailed read counts not\njust for paths but also\
    \ for each\nnode/edge on the paths."
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - -E
  description: "[ --output-everything ] arg (=0)          Write all information we\
    \ have\ninto JSON. (=enable all\n--output-* above)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -o
  description: "[ --output-file ] arg                     Output file name. Will output\
    \ to\nstdout if '-' or neither of\noutput-file or output-folder\nprovided."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -A
  description: "[ --output-filtered-alignments ] arg (=0) Output alignments for every\
    \ read\neven when it was filtered\n(larger)."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --output-node-coverage
  description: (=0)              Output coverage for nodes
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - --output-path-coverage
  description: (=0)              Output coverage for paths
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - --output-read-haplotypes
  description: "(=0)            Output graph haplotypes\nsupported by reads."
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - -v
  description: "[ --output-variants ] arg (=0)            Output variants not present\
    \ in\nthe graph."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --path-sequence-matching
  description: (=1)            Enable path seeding aligner
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - -r
  description: '[ --reference ] arg                       Reference genome fasta file.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --response-file
  description: file with more command line
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - --threads
  description: "(=8)                           Number of threads to use for\nparallel\
    \ alignment."
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - --validate-alignments
  description: "[=arg(=1)] (=0)        Use information in the input bam\nread names\
    \ to collect statistics\nabout the accuracy of\nalignments. Requires bam file\n\
    produced with simulate-reads.sh"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --variant-min-frac
  description: "(=0.00999999978)      Minimum fraction of reads\nrequired to report\
    \ a variant."
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - --variant-min-reads
  description: "(=3)                 Minimum number of reads required\nto report a\
    \ variant."
  args: !SimpleFlagArg
    name: arg
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  description: '[ --help ]                                produce help message and
    exit'
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "no --response-file\nparagraph -r <reference> -g <graph(s)> -b <input cram(s)/bam(s)>\
  \ [optional arguments]\n\nCommand line options:\n  --bad-align-frac arg (=0.800000012)\
  \          Fraction of read that needs to \n                                   \
  \            be mapped in order for it to be \n                                \
  \               used.\n  --bad-align-nonuniq arg (=1)                 Remove reads\
  \ that are not mapped\n                                               uniquely.\n\
  \  --bad-align-uniq-kmer-len arg (=0)           Kmer length for uniqueness check\n\
  \                                               during read filtering.\n  -b [ --bam\
  \ ] arg                             Input BAM file(s) for read \n              \
  \                                 extraction. We align all reads \n            \
  \                                   to all graphs.\n  --graph-sequence-matching\
  \ arg (=1)           Enables smith waterman graph \n                           \
  \                    alignment\n  -g [ --graph-spec ] arg                      JSON\
  \ file(s) describing the \n                                               graph(s)\n\
  \  -z [ --gzip-output ] [=arg(=1)] (=0)         gzip-compress output files. If \n\
  \                                               -O is used, output file names \n\
  \                                               are appended with .gz\n  -h [ --help\
  \ ]                                produce help message and exit\n  --help-defaults\
  \                              produce tab-delimited list of \n                \
  \                               command line options and their \n              \
  \                                 default values\n  --help-md                  \
  \                  produce help message \n                                     \
  \          pre-formatted as a markdown file\n                                  \
  \             section and exit\n  --klib-sequence-matching arg (=0)            Use\
  \ klib smith-waterman aligner.\n  --kmer-sequence-matching arg (=0)            Use\
  \ kmer aligner.\n  --log-async arg (=0)                         Enable / disable\
  \ async logging.\n  --log-file arg                               Log to a file instead\
  \ of stderr.\n  --log-level arg (=info)                      Set log level (error,\
  \ warning, \n                                               info).\n  -M [ --max-reads-per-event\
  \ ] arg (=10000)    Maximum number of reads to \n                              \
  \                 process for a single event.\n  -a [ --output-alignments ] arg\
  \ (=0)          Output alignments for every read\n                             \
  \                  (large).\n  --output-detailed-read-counts arg (=0)       Output\
  \ detailed read counts not \n                                               just\
  \ for paths but also for each\n                                               node/edge\
  \ on the paths.\n  -E [ --output-everything ] arg (=0)          Write all information\
  \ we have \n                                               into JSON. (=enable all\
  \ \n                                               --output-* above)\n  -o [ --output-file\
  \ ] arg                     Output file name. Will output to\n                 \
  \                              stdout if '-' or neither of \n                  \
  \                             output-file or output-folder \n                  \
  \                             provided.\n  -A [ --output-filtered-alignments ] arg\
  \ (=0) Output alignments for every read\n                                      \
  \         even when it was filtered \n                                         \
  \      (larger).\n  -O [ --output-folder ] arg                   Output folder path.\
  \ paragraph \n                                               will attempt to create\
  \ the \n                                               folder but not the entire\
  \ path. \n                                               Will output to stdout if\
  \ neither\n                                               of output-file or output-folder\
  \ \n                                               provided. If specified, \n  \
  \                                             paragraph will produce one \n    \
  \                                           output file for each input file \n \
  \                                              bearing the same name.\n  --output-node-coverage\
  \ arg (=0)              Output coverage for nodes\n  --output-path-coverage arg\
  \ (=0)              Output coverage for paths\n  --output-read-haplotypes arg (=0)\
  \            Output graph haplotypes \n                                        \
  \       supported by reads.\n  -v [ --output-variants ] arg (=0)            Output\
  \ variants not present in \n                                               the graph.\n\
  \  --path-sequence-matching arg (=1)            Enable path seeding aligner\n  -r\
  \ [ --reference ] arg                       Reference genome fasta file.\n  --response-file\
  \ arg                          file with more command line \n                  \
  \                             arguments\n  -T [ --target-regions ] arg         \
  \         Comma-separated list of target \n                                    \
  \           regions, e.g. chr1:1-20,chr2:2-4\n                                 \
  \              0. This overrides the target \n                                 \
  \              regions in the graph spec.\n  --threads arg (=8)                \
  \           Number of threads to use for \n                                    \
  \           parallel alignment.\n  --validate-alignments [=arg(=1)] (=0)       \
  \ Use information in the input bam\n                                           \
  \    read names to collect statistics\n                                        \
  \       about the accuracy of \n                                               alignments.\
  \ Requires bam file \n                                               produced with\
  \ simulate-reads.sh\n  --variant-min-frac arg (=0.00999999978)      Minimum fraction\
  \ of reads \n                                               required to report a\
  \ variant.\n  --variant-min-reads arg (=3)                 Minimum number of reads\
  \ required\n                                               to report a variant.\n\
  \  -v [ --version ]                             print program version \n       \
  \                                        information\n\n\nFailed to parse the options:\
  \ ERROR: BAM file is missing.\n"
generated_using: []
docker_image:
