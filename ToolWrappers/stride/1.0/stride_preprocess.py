from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Int, Float, String

Stride_Preprocess_V0_1_0 = CommandToolBuilder(tool="stride_preprocess", base_command=["stride", "preprocess"], inputs=[ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="display verbose output")), ToolInput(tag="in_out", input_type=File(optional=True), prefix="--out", doc=InputDocumentation(doc="write the reads to FILE (default: stdout)")), ToolInput(tag="in_pe_mode", input_type=File(optional=True), prefix="--pe-mode", doc=InputDocumentation(doc="0 - do not treat reads as paired (default)\n1 - reads are paired with the first read in READS1 and the second\nread in READS2. The paired reads will be interleaved in the output file\n2 - reads are paired and the records are interleaved within a single file.")), ToolInput(tag="in_pe_orphans", input_type=File(optional=True), prefix="--pe-orphans", doc=InputDocumentation(doc="if one half of a read pair fails filtering, write the passed half to FILE")), ToolInput(tag="in_phred_six_four", input_type=Boolean(optional=True), prefix="--phred64", doc=InputDocumentation(doc="convert quality values from phred-64 to phred-33.")), ToolInput(tag="in_discard_quality", input_type=Boolean(optional=True), prefix="--discard-quality", doc=InputDocumentation(doc="do not output quality scores")), ToolInput(tag="in_quality_trim", input_type=Int(optional=True), prefix="--quality-trim", doc=InputDocumentation(doc="perform Heng Li's BWA quality trim algorithm.\nReads are trimmed according to the formula:\nargmax_x{\sum_{i=x+1}^l(INT-q_i)} if q_l<INT\nwhere l is the original read length.")), ToolInput(tag="in_quality_filter", input_type=Int(optional=True), prefix="--quality-filter", doc=InputDocumentation(doc="discard the read if it contains more than INT low-quality bases.\nBases with phred score <= 3 are considered low quality. Default: no filtering.\nThe filtering is applied after trimming so bases removed are not counted.\nDo not use this option if you are planning to use the BCR algorithm for indexing.")), ToolInput(tag="in_min_length", input_type=Int(optional=True), prefix="--min-length", doc=InputDocumentation(doc="discard sequences that are shorter than INT\nthis is most useful when used in conjunction with --quality-trim. Default: 40")), ToolInput(tag="in_hard_clip", input_type=Int(optional=True), prefix="--hard-clip", doc=InputDocumentation(doc="clip all reads to be length INT. In most cases it is better to use\nthe soft clip (quality-trim) option.")), ToolInput(tag="in_permute_ambiguous", input_type=Boolean(optional=True), prefix="--permute-ambiguous", doc=InputDocumentation(doc="Randomly change ambiguous base calls to one of possible bases.\nIf this option is not specified, the entire read will be discarded.")), ToolInput(tag="in_sample", input_type=Float(optional=True), prefix="--sample", doc=InputDocumentation(doc="Randomly sample reads or pairs with acceptance probability FLOAT.")), ToolInput(tag="in_dust", input_type=Boolean(optional=True), prefix="--dust", doc=InputDocumentation(doc="Perform dust-style filtering of low complexity reads.")), ToolInput(tag="in_dust_threshold", input_type=Float(optional=True), prefix="--dust-threshold", doc=InputDocumentation(doc="filter out reads that have a dust score higher than FLOAT (default: 4.0).")), ToolInput(tag="in_suffix", input_type=String(optional=True), prefix="--suffix", doc=InputDocumentation(doc="append SUFFIX to each read ID")), ToolInput(tag="in_no_primer_check", input_type=Boolean(optional=True), prefix="--no-primer-check", doc=InputDocumentation(doc="disable the default check for primer sequences")), ToolInput(tag="in_remove_adapter_fwd", input_type=String(optional=True), prefix="--remove-adapter-fwd", doc=InputDocumentation(doc="Remove the adapter STRING from input reads.")), ToolInput(tag="in_prepare", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_reads_one", input_type=Int(), position=1, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_pe_mode", output_type=File(optional=True), selector=InputSelector(input_to_select="in_pe_mode", type_hint=File()), doc=OutputDocumentation(doc="0 - do not treat reads as paired (default)\n1 - reads are paired with the first read in READS1 and the second\nread in READS2. The paired reads will be interleaved in the output file\n2 - reads are paired and the records are interleaved within a single file."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Stride_Preprocess_V0_1_0().translate("wdl", allow_empty_container=True)

