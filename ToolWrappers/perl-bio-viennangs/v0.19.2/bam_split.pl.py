from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Directory

Bam_Split_Pl_V0_1_0 = CommandToolBuilder(tool="bam_split.pl", base_command=["bam_split.pl"], inputs=[ToolInput(tag="in_bam", input_type=Boolean(optional=True), prefix="--bam", doc=InputDocumentation(doc="Input file in BAM format")), ToolInput(tag="in_bed", input_type=Boolean(optional=True), prefix="--bed", doc=InputDocumentation(doc="Create a BED6 file for each split BAM file")), ToolInput(tag="in_bw", input_type=Boolean(optional=True), prefix="--bw", doc=InputDocumentation(doc="Create BedGraph and bigWig coverage files for e.g. genome browser\nvisualization.")), ToolInput(tag="in_bw_dir", input_type=Directory(optional=True), prefix="--bwdir", doc=InputDocumentation(doc="Directory name for resulting bigWig files. This directory is created\nas subdirectory of the output directory. Default is 'vis'.")), ToolInput(tag="in_cs", input_type=Boolean(optional=True), prefix="--cs", doc=InputDocumentation(doc="Chromosome sizes file (required if --bw is given).")), ToolInput(tag="in_norm", input_type=Boolean(optional=True), prefix="--norm", doc=InputDocumentation(doc="Normalize resulting bigWig files")), ToolInput(tag="in_out", input_type=Directory(optional=True), prefix="--out", doc=InputDocumentation(doc="Output directory")), ToolInput(tag="in_reverse", input_type=Boolean(optional=True), prefix="--reverse", doc=InputDocumentation(doc="Reverse the +/- strand mapping. This is required to achieve proper\nstrand assignments for certain RNA-seq library preparation protocol.")), ToolInput(tag="in_scale", input_type=Boolean(optional=True), prefix="--scale", doc=InputDocumentation(doc="If --bw is given, scale bigWig files to this number. Default is\n1000000.")), ToolInput(tag="in_uniq", input_type=Boolean(optional=True), prefix="--uniq", doc=InputDocumentation(doc="Filter uniquely mapped reads by inspecting the NH:i: SAM attribute.\nSee also the bam_uniq.pl utility, which extracts both uniquely and\nmultiply mapped reads from BAM files without strand-splitting.")), ToolInput(tag="in_log", input_type=Boolean(optional=True), prefix="--log", doc=InputDocumentation(doc="Log file extension. Default is '.bam_split.log'. The log file is\ncreated in the directory given via -o and its name is constructed\nfrom the base name of the input BAM file and the log filename\nextension.")), ToolInput(tag="in_man", input_type=Boolean(optional=True), prefix="--man", doc=InputDocumentation(doc="Prints the manual page and exits\n"))], outputs=[ToolOutput(tag="out_bw_dir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_bw_dir", type_hint=File()), doc=OutputDocumentation(doc="Directory name for resulting bigWig files. This directory is created\nas subdirectory of the output directory. Default is 'vis'.")), ToolOutput(tag="out_out", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_out", type_hint=File()), doc=OutputDocumentation(doc="Output directory"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bam_Split_Pl_V0_1_0().translate("wdl", allow_empty_container=True)

