!Command
command:
- bam_uniq.pl
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - --bam
  description: BAM file to extract unique and multi mappers from
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --band
  description: "Process bands of (supposedly paired-end) reads sharing the same\n\
    name/id from a name-sorted BAM file. The reads of band are\nconsidered unique\
    \ mappers if and only if all of them are unique\nmappers. In all other cases,\
    \ all reads of a band are considered\nmulti mappers. In a paired-end context this\
    \ means that e.g. a read\nmap uniquely, but its mate is a multi-mapper, both will\
    \ be\nconsideres multi-mappers."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --out
  - -o
  description: Output path
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --man
  description: "Prints the manual page and exits\n"
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - --help
  - -h
  description: Print short help
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "Usage:\n    bam_uniq.pl [--bam FILE] [-o DIR] [options]\n\nOptions:\n\
  \    --bam\n        BAM file to extract unique and multi mappers from\n\n    --band\n\
  \        Process bands of (supposedly paired-end) reads sharing the same\n     \
  \   name/id from a name-sorted BAM file. The reads of band are\n        considered\
  \ unique mappers if and only if all of them are unique\n        mappers. In all\
  \ other cases, all reads of a band are considered\n        multi mappers. In a paired-end\
  \ context this means that e.g. a read\n        map uniquely, but its mate is a multi-mapper,\
  \ both will be\n        consideres multi-mappers.\n\n    --out -o\n        Output\
  \ path\n\n    --help -h\n        Print short help\n\n    --man\n        Prints the\
  \ manual page and exits\n\n"
generated_using:
- --help
docker_image:
