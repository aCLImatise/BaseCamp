from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, Boolean, String

Methratio_Py_V0_1_0 = CommandToolBuilder(tool="methratio.py", base_command=["methratio.py"], inputs=[ToolInput(tag="in_out", input_type=File(optional=True), prefix="--out", doc=InputDocumentation(doc="output methylation ratio file name. [default: STDOUT]")), ToolInput(tag="in_alignment_copy", input_type=File(optional=True), prefix="--alignment-copy", doc=InputDocumentation(doc="save a copy of input alignment for BSMAP pipe input.\n(in BAM format) [default: none]")), ToolInput(tag="in_wig", input_type=File(optional=True), prefix="--wig", doc=InputDocumentation(doc="output methylation ratio wiggle file. [default: none]")), ToolInput(tag="in_wig_bin", input_type=Int(optional=True), prefix="--wig-bin", doc=InputDocumentation(doc="wiggle file bin size. [default: 25]")), ToolInput(tag="in_ref", input_type=File(optional=True), prefix="--ref", doc=InputDocumentation(doc="reference genome fasta file. (required)")), ToolInput(tag="in_chr", input_type=Int(optional=True), prefix="--chr", doc=InputDocumentation(doc="process only specified chromosomes, separated by ','.\n[default: all] example: --chroms=chr1,chr2")), ToolInput(tag="in_sam_path", input_type=File(optional=True), prefix="--sam-path", doc=InputDocumentation(doc="path to samtools. [default: none]")), ToolInput(tag="in_unique", input_type=Boolean(optional=True), prefix="--unique", doc=InputDocumentation(doc="process only unique mappings/pairs.")), ToolInput(tag="in_pair", input_type=Boolean(optional=True), prefix="--pair", doc=InputDocumentation(doc="process only properly paired mappings.")), ToolInput(tag="in_zero_meth", input_type=Boolean(optional=True), prefix="--zero-meth", doc=InputDocumentation(doc="report loci with zero methylation ratios.\n(depreciated, -z will be always enabled)")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="don't print progress on stderr.")), ToolInput(tag="in_remove_duplicate", input_type=Boolean(optional=True), prefix="--remove-duplicate", doc=InputDocumentation(doc="remove duplicated reads.")), ToolInput(tag="in_trim_fill_in", input_type=Int(optional=True), prefix="--trim-fillin", doc=InputDocumentation(doc="trim N end-repairing fill-in nucleotides. [default: 0]")), ToolInput(tag="in_combine_cpg", input_type=Boolean(optional=True), prefix="--combine-CpG", doc=InputDocumentation(doc="combine CpG methylaion ratios on both strands.")), ToolInput(tag="in_min_depth", input_type=Int(optional=True), prefix="--min-depth", doc=InputDocumentation(doc="report loci with sequencing depth>=FOLD. [default: 1]")), ToolInput(tag="in_no_header", input_type=Boolean(optional=True), prefix="--no-header", doc=InputDocumentation(doc="don't print a header line")), ToolInput(tag="in_ct_snp", input_type=String(optional=True), prefix="--ct-snp", doc=InputDocumentation(doc="how to handle CT SNP ('no-action', 'correct', 'skip'),\ndefault: 'correct'.")), ToolInput(tag="in_context", input_type=String(optional=True), prefix="--context", doc=InputDocumentation(doc="methylation pattern type [CG|CHG|CHH], multiple types\nseparated by ','. [default: all]\n")), ToolInput(tag="in_bs_map_mapping_files", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out", type_hint=File()), doc=OutputDocumentation(doc="output methylation ratio file name. [default: STDOUT]")), ToolOutput(tag="out_wig", output_type=File(optional=True), selector=InputSelector(input_to_select="in_wig", type_hint=File()), doc=OutputDocumentation(doc="output methylation ratio wiggle file. [default: none]"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Methratio_Py_V0_1_0().translate("wdl", allow_empty_container=True)

