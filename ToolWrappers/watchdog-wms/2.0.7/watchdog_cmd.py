from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Watchdog_Cmd_V0_1_0 = CommandToolBuilder(tool="watchdog_cmd", base_command=["watchdog-cmd"], inputs=[ToolInput(tag="in_attach_info", input_type=Boolean(optional=True), prefix="-attachInfo", doc=InputDocumentation(doc="path to a file that is used to restore the info on previously running\ntasks when Wathdog should be re-attached to running tasks; (can not be\nused in combination with -resume as resume file is automatically loaded)")), ToolInput(tag="in_auto_detach", input_type=Boolean(optional=True), prefix="-autoDetach", doc=InputDocumentation(doc="stops the execution of Watchdog whenever possible (running tasks on an\nexternal executor will not be terminated on detach); status of\npreviously running tasks is checked when Watchdog is started with the\n-restart and -attachInfo option;\nDefault: false")), ToolInput(tag="in_disable_checkpoint", input_type=Boolean(optional=True), prefix="-disableCheckpoint", doc=InputDocumentation(doc="checkpoints are ignored during execution\nDefault: false")), ToolInput(tag="in_disable_mails", input_type=Boolean(optional=True), prefix="-disableMails", doc=InputDocumentation(doc="no mails are sent even if a mail adress is given in the workflow\nDefault: false")), ToolInput(tag="in_exclude", input_type=Boolean(optional=True), prefix="-exclude", doc=InputDocumentation(doc="xml task id that should be ignored during execution; can be used several\ntimes; can be used in combination with -start and -stop\nDefault: []")), ToolInput(tag="in_force_loading", input_type=Boolean(optional=True), prefix="-forceLoading", doc=InputDocumentation(doc="ignores the XSD schema definition file of watchdog and all modules\nduring parsing (might crash)\nDefault: false")), ToolInput(tag="in_ignore_executor", input_type=Boolean(optional=True), prefix="-ignoreExecutor", doc=InputDocumentation(doc="ignores the executor info and executes all tasks on the local host\nrunning n tasks at once\nDefault: 0")), ToolInput(tag="in_include", input_type=Boolean(optional=True), prefix="-include", doc=InputDocumentation(doc="xml task id that should be executed; can be used several times; can be\nused in combination with -start and -stop\nDefault: []")), ToolInput(tag="in_log", input_type=Boolean(optional=True), prefix="-log", doc=InputDocumentation(doc="path to the log file")), ToolInput(tag="in_mail_config", input_type=Boolean(optional=True), prefix="-mailConfig", doc=InputDocumentation(doc="config file for the mail server; if none is given SMTP on port 25 on\nlocalhost without authentification is used")), ToolInput(tag="in_mail_wait_time", input_type=Boolean(optional=True), prefix="-mailWaitTime", doc=InputDocumentation(doc="wait time in seconds before task processing is started if no mail adress\nis given\nDefault: 5")), ToolInput(tag="in_port", input_type=Boolean(optional=True), prefix="-port", doc=InputDocumentation(doc="port for the HTTP server\nDefault: 8080")), ToolInput(tag="in_resume", input_type=Boolean(optional=True), prefix="-resume", doc=InputDocumentation(doc="resumes workflow execution whereby tasks that were executed successfully\n(and parameters are unchanged) are ignored; expects a watchdog status\nlog file from a previous watchdog run; can be used in combination with\n-start, -stop, -include and -exclude")), ToolInput(tag="in_simulate", input_type=Boolean(optional=True), prefix="-simulate", doc=InputDocumentation(doc="simulate the jobs as far as possible\nDefault: false")), ToolInput(tag="in_start", input_type=Boolean(optional=True), prefix="-start", doc=InputDocumentation(doc="start with that ID (included)\nDefault: -2147483648")), ToolInput(tag="in_stop", input_type=Boolean(optional=True), prefix="-stop", doc=InputDocumentation(doc="stop with that ID (included)\nDefault: 2147483647")), ToolInput(tag="in_tmp_folder", input_type=Boolean(optional=True), prefix="-tmpFolder", doc=InputDocumentation(doc="uses a different tmp folder; should be accessible by external executors;\ndefault: ${watchdogBase}/tmp")), ToolInput(tag="in_use_env_base", input_type=Boolean(optional=True), prefix="-useEnvBase", doc=InputDocumentation(doc="ignores the watchdogBase attribute of the XML workflow and overrides it\nwith the content of the WATCHDOG_HOME environment variable\nDefault: false")), ToolInput(tag="in_validate", input_type=Boolean(optional=True), prefix="-validate", doc=InputDocumentation(doc="validate a XML file or a folder containing *.xml files\nDefault: false")), ToolInput(tag="in_version", input_type=Boolean(optional=True), prefix="-version", doc=InputDocumentation(doc="prints the version number of Watchdog")), ToolInput(tag="in_main_class", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Watchdog_Cmd_V0_1_0().translate("wdl", allow_empty_container=True)

