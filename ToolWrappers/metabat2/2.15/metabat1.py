from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Int, String

Metabat1_V0_1_0 = CommandToolBuilder(tool="metabat1", base_command=["metabat1"], inputs=[ToolInput(tag="in_i", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="[ --inFile ] arg               Contigs in (gzipped) fasta file format [Mandatory]")), ToolInput(tag="in_arg_base_file", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="[ --outFile ] arg              Base file name for each bin. The default output is fasta format. Use -l\noption to output only contig names [Mandatory]")), ToolInput(tag="in_arg_file_having", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="[ --abdFile ] arg              A file having mean and variance of base coverage depth (tab delimited;\nthe first column should be contig names, and the first row will be\nconsidered as the header and be skipped) [Optional]")), ToolInput(tag="in_cv_ext", input_type=Boolean(optional=True), prefix="--cvExt", doc=InputDocumentation(doc="When a coverage file without variance (from third party tools) is used\ninstead of abdFile from jgi_summarize_bam_contig_depths")), ToolInput(tag="in_arg_file_paired", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="[ --pairFile ] arg             A file having paired reads mapping information. Use it to increase\nsensitivity. (tab delimited; should have 3 columns of contig index\n(ordered by), its mate contig index, and supporting mean read coverage.\nThe first row will be considered as the header and be skipped) [Optional]")), ToolInput(tag="in_p_one", input_type=Int(optional=True), prefix="--p1", doc=InputDocumentation(doc="(=0)                     Probability cutoff for bin seeding. It mainly controls the number of\npotential bins and their specificity. The higher, the more (specific)\nbins would be. (Percentage; Should be between 0 and 100)")), ToolInput(tag="in_p_two", input_type=Int(optional=True), prefix="--p2", doc=InputDocumentation(doc="(=0)                     Probability cutoff for secondary neighbors. It supports p1 and better be\nclose to p1. (Percentage; Should be between 0 and 100)")), ToolInput(tag="in_min_prob", input_type=Int(optional=True), prefix="--minProb", doc=InputDocumentation(doc="(=0)                Minimum probability for binning consideration. It controls sensitivity.\nUsually it should be >= 75. (Percentage; Should be between 0 and 100)")), ToolInput(tag="in_min_binned", input_type=Int(optional=True), prefix="--minBinned", doc=InputDocumentation(doc="For better specificity. Different from --sensitive when using correlation")), ToolInput(tag="in_very_sensitive", input_type=Boolean(optional=True), prefix="--verysensitive", doc=InputDocumentation(doc="For greater sensitivity, especially in a simple community. It is the\nshortcut for --p1 90 --p2 85 --pB 20 --minProb 75 --minBinned 20\n--minCorr 90")), ToolInput(tag="in_sensitive", input_type=Boolean(optional=True), prefix="--sensitive", doc=InputDocumentation(doc="For better sensitivity [default]. It is the shortcut for --p1 90 --p2 90")), ToolInput(tag="in_very_specific", input_type=Boolean(optional=True), prefix="--veryspecific", doc=InputDocumentation(doc="For greater specificity. No correlation binning for short contig\nrecruiting. It is the shortcut for --p1 90 --p2 90 --pB 40 --minProb 80\n--minBinned 40")), ToolInput(tag="in_super_specific", input_type=Boolean(optional=True), prefix="--superspecific", doc=InputDocumentation(doc="For the best specificity. It is the shortcut for --p1 95 --p2 90 --pB 50")), ToolInput(tag="in_min_samples", input_type=Int(optional=True), prefix="--minSamples", doc=InputDocumentation(doc="(=10)            Minimum number of sample sizes for considering correlation based")), ToolInput(tag="in_min_cvs_um", input_type=Int(optional=True), prefix="--minCVSum", doc=InputDocumentation(doc="(=2)               Minimum total mean coverage of a contig (sum of all libraries) to\nconsider for abundance distance calculation")), ToolInput(tag="in_arg_minimum_size_bin", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="[ --minClsSize ] arg (=200000) Minimum size of a bin to be considered as the output")), ToolInput(tag="in_arg_minimum_size_considered", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="[ --minContig ] arg (=2500)    Minimum size of a contig to be considered for binning (should be >=1500;\nideally >=2500). If # of samples >= minSamples, small contigs (>=1000)\nwill be given a chance to be recruited to existing bins by default.")), ToolInput(tag="in_min_contig_by_corr", input_type=Int(optional=True), prefix="--minContigByCorr", doc=InputDocumentation(doc="(=1000)     Minimum size of a contig to be considered for recruiting by pearson\ncorrelation coefficients (activated only if # of samples >= minSamples;\ndisabled when minContigByCorr > minContig)")), ToolInput(tag="in_arg_number_use", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="[ --numThreads ] arg (=0)      Number of threads to use (0: use all cores)")), ToolInput(tag="in_min_shared", input_type=Int(optional=True), prefix="--minShared", doc=InputDocumentation(doc="(=50)             Percentage cutoff for merging fuzzy contigs")), ToolInput(tag="in_fuzzy", input_type=Boolean(optional=True), prefix="--fuzzy", doc=InputDocumentation(doc="Binning with fuzziness which assigns multiple memberships of a contig to\nbins (activated only with --pairFile at the moment)")), ToolInput(tag="in_output_only_sequence", input_type=Boolean(optional=True), prefix="-l", doc=InputDocumentation(doc="[ --onlyLabel ]                Output only sequence labels as a list in a column without sequences")), ToolInput(tag="in_set_then_sample", input_type=Boolean(optional=True), prefix="-S", doc=InputDocumentation(doc="[ --sumLowCV ]                 If set, then every sample that falls below the minCV will be used in an\naggregate sample")), ToolInput(tag="in_arg_ignore_contigs", input_type=Boolean(optional=True), prefix="-V", doc=InputDocumentation(doc="[ --maxVarRatio ] arg (=0)     Ignore any contigs where variance / mean exceeds this ratio (0 disables)")), ToolInput(tag="in_save_tnf", input_type=File(optional=True), prefix="--saveTNF", doc=InputDocumentation(doc="File to save (or load if exists) TNF matrix for each contig in input")), ToolInput(tag="in_save_distance", input_type=File(optional=True), prefix="--saveDistance", doc=InputDocumentation(doc="File to save (or load if exists) distance graph at lowest probability")), ToolInput(tag="in_unbinned", input_type=Boolean(optional=True), prefix="--unbinned", doc=InputDocumentation(doc="Generate [outFile].unbinned.fa file for unbinned contigs")), ToolInput(tag="in_no_bin_out", input_type=Boolean(optional=True), prefix="--noBinOut", doc=InputDocumentation(doc="No bin output. Usually combined with --saveCls to check only contig")), ToolInput(tag="in_seed", input_type=Int(optional=True), prefix="--seed", doc=InputDocumentation(doc="(=0)                   For reproducibility in ensemble binning, though it might produce slightly\ndifferent results. (0: use random seed)")), ToolInput(tag="in_keep", input_type=Boolean(optional=True), prefix="--keep", doc=InputDocumentation(doc="Keep the intermediate files for later usage")), ToolInput(tag="in__debug_output", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc="[ --debug ]                    Debug output")), ToolInput(tag="in__verbose_output", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="[ --verbose ]                  Verbose output")), ToolInput(tag="in_recruiting", input_type=String(), position=0, doc=InputDocumentation(doc="-x [ --minCV ] arg (=1)           Minimum mean coverage of a contig to consider for abundance distance ")), ToolInput(tag="in_cut_off", input_type=String(), position=0, doc=InputDocumentation(doc="--saveCls                         Save cluster memberships as a matrix format")), ToolInput(tag="in_memberships", input_type=String(), position=1, doc=InputDocumentation(doc="-B [ --B ] arg (=20)              Number of bootstrapping for ensemble binning (Recommended to be >=20)"))], outputs=[ToolOutput(tag="out_arg_base_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_arg_base_file", type_hint=File()), doc=OutputDocumentation(doc="[ --outFile ] arg              Base file name for each bin. The default output is fasta format. Use -l\noption to output only contig names [Mandatory]"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Metabat1_V0_1_0().translate("wdl", allow_empty_container=True)

