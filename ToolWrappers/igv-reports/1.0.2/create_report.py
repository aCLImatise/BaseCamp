from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Array, Boolean

Create_Report_V0_1_0 = CommandToolBuilder(tool="create_report", base_command=["create_report"], inputs=[ToolInput(tag="in_type", input_type=String(optional=True), prefix="--type", doc=InputDocumentation(doc="Report type. Possible values are mutation and\njunctions. Default is mutation")), ToolInput(tag="in_ideogram", input_type=File(optional=True), prefix="--ideogram", doc=InputDocumentation(doc="ideogram file in UCSC cytoIdeo format")), ToolInput(tag="in_tracks", input_type=Array(t=String(), optional=True), prefix="--tracks", doc=InputDocumentation(doc="list of track files")), ToolInput(tag="in_track_config", input_type=Array(t=String(), optional=True), prefix="--track-config", doc=InputDocumentation(doc="track json file")), ToolInput(tag="in_template", input_type=File(optional=True), prefix="--template", doc=InputDocumentation(doc="html template file")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="output file name")), ToolInput(tag="in_info_columns", input_type=Array(t=String(), optional=True), prefix="--info-columns", doc=InputDocumentation(doc="list of VCF info field names to include in variant\ntable")), ToolInput(tag="in_info_columns_prefixes", input_type=Array(t=String(), optional=True), prefix="--info-columns-prefixes", doc=InputDocumentation(doc="list of prefixes of VCF info field names to include in\nvariant table")), ToolInput(tag="in_sample_columns", input_type=Array(t=String(), optional=True), prefix="--sample-columns", doc=InputDocumentation(doc="list of VCF sample/format field names to include in\nvariant table")), ToolInput(tag="in_flanking", input_type=String(optional=True), prefix="--flanking", doc=InputDocumentation(doc="genomic region to include either side of variant")), ToolInput(tag="in_standalone", input_type=Boolean(optional=True), prefix="--standalone", doc=InputDocumentation(doc="Print more data")), ToolInput(tag="in_title", input_type=String(optional=True), prefix="--title", doc=InputDocumentation(doc="optional title string")), ToolInput(tag="in_sites", input_type=String(), position=0, doc=InputDocumentation(doc="vcf file defining variants, required")), ToolInput(tag="in_fast_a", input_type=String(), position=1, doc=InputDocumentation(doc="reference fasta file, required"))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="output file name"))], container="quay.io/biocontainers/igv-reports:1.0.2--pyh3252c3a_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Create_Report_V0_1_0().translate("wdl")

