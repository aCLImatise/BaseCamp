from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Directory, File, Int, String

Bcbio_Vm_Py_Ipythonprep_V0_1_0 = CommandToolBuilder(tool="bcbio_vm.py_ipythonprep", base_command=["bcbio_vm.py", "ipythonprep"], inputs=[ToolInput(tag="in_fc_dir", input_type=Directory(optional=True), prefix="--fcdir", doc=InputDocumentation(doc="A directory of Illumina output or fastq files to")), ToolInput(tag="in_system_config", input_type=File(optional=True), prefix="--systemconfig", doc=InputDocumentation(doc="Global YAML configuration file specifying system\ndetails. Defaults to installed bcbio_system.yaml.")), ToolInput(tag="in_num_cores", input_type=Int(optional=True), prefix="--numcores", doc=InputDocumentation(doc="Total cores to use for processing")), ToolInput(tag="in_resources", input_type=String(optional=True), prefix="--resources", doc=InputDocumentation(doc="Cluster specific resources specifications. Can be\nspecified multiple times. Supports SGE and SLURM\nparameters.")), ToolInput(tag="in_timeout", input_type=Int(optional=True), prefix="--timeout", doc=InputDocumentation(doc="Number of minutes before cluster startup times out.\nDefaults to 15")), ToolInput(tag="in_retries", input_type=Int(optional=True), prefix="--retries", doc=InputDocumentation(doc="Number of retries of failed tasks during distributed\nprocessing. Default 0 (no retries)")), ToolInput(tag="in_tag", input_type=String(optional=True), prefix="--tag", doc=InputDocumentation(doc="Tag name to label jobs on the cluster")), ToolInput(tag="in_tmpdir", input_type=File(optional=True), prefix="--tmpdir", doc=InputDocumentation(doc="Path of local on-machine temporary directory to\nprocess in.\n")), ToolInput(tag="in_image", input_type=String(optional=True), prefix="--image", doc=InputDocumentation(doc="")), ToolInput(tag="in_positional_arguments", input_type=String(), position=0, doc=InputDocumentation(doc="positional arguments:")), ToolInput(tag="in_sample_config", input_type=String(), position=1, doc=InputDocumentation(doc="YAML file with details about samples to process.")), ToolInput(tag="in_scheduler_queue_run", input_type=String(), position=0, doc=InputDocumentation(doc="Scheduler queue to run jobs on.")), ToolInput(tag="in_process", input_type=String(), position=0, doc=InputDocumentation(doc="--image IMAGE         Docker image name to use, could point to compatible"))], outputs=[ToolOutput(tag="out_fc_dir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_fc_dir", type_hint=File()), doc=OutputDocumentation(doc="A directory of Illumina output or fastq files to"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bcbio_Vm_Py_Ipythonprep_V0_1_0().translate("wdl", allow_empty_container=True)

