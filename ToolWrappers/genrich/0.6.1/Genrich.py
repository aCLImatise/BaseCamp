from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File

Genrich_V0_1_0 = CommandToolBuilder(tool="Genrich", base_command=["Genrich"], inputs=[ToolInput(tag="in_file_files_experimental", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="<file>       Input SAM/BAM file(s) for experimental sample(s)")), ToolInput(tag="in_file_peak_file", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="<file>       Output peak file (in ENCODE narrowPeak format)")), ToolInput(tag="in_file_files_control", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="<file>       Input SAM/BAM file(s) for control sample(s)")), ToolInput(tag="in_file_file_pq", input_type=File(optional=True), prefix="-f", doc=InputDocumentation(doc="<file>       Output bedgraph-ish file for p/q values")), ToolInput(tag="in_file_file_pileups", input_type=File(optional=True), prefix="-k", doc=InputDocumentation(doc="<file>       Output bedgraph-ish file for pileups and p-values")), ToolInput(tag="in_file_bed_file", input_type=File(optional=True), prefix="-b", doc=InputDocumentation(doc="<file>       Output BED file for reads/fragments/intervals")), ToolInput(tag="in_file_output_file", input_type=File(optional=True), prefix="-R", doc=InputDocumentation(doc="<file>       Output file for PCR duplicates (only with -r)")), ToolInput(tag="in_remove_pcr_duplicates", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="Remove PCR duplicates")), ToolInput(tag="in_arg_commaseparated_list", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc="<arg>        Comma-separated list of chromosomes to exclude")), ToolInput(tag="in_file_bed_files", input_type=Boolean(optional=True), prefix="-E", doc=InputDocumentation(doc="<file>       Input BED file(s) of genomic regions to exclude")), ToolInput(tag="in_int_minimum_mapq", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="<int>        Minimum MAPQ to keep an alignment (def. 0)")), ToolInput(tag="in_float_keep_alns", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="<float>      Keep sec alns with AS >= bestAS - <float> (def. 0)")), ToolInput(tag="in_keep_unpaired_alignments", input_type=Boolean(optional=True), prefix="-y", doc=InputDocumentation(doc="Keep unpaired alignments (def. false)")), ToolInput(tag="in_int_lengths_changed", input_type=Boolean(optional=True), prefix="-w", doc=InputDocumentation(doc="<int>        Keep unpaired alns, lengths changed to <int>")), ToolInput(tag="in_keep_unpaired_lengths", input_type=Boolean(optional=True), prefix="-x", doc=InputDocumentation(doc="Keep unpaired alns, lengths changed to paired avg")), ToolInput(tag="in_use_atacseq_mode", input_type=Boolean(optional=True), prefix="-j", doc=InputDocumentation(doc="Use ATAC-seq mode (def. false)")), ToolInput(tag="in_int_expand_cut", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc="<int>        Expand cut sites to <int> bp (def. 100)")), ToolInput(tag="in_skip_tn_adjustments", input_type=Boolean(optional=True), prefix="-D", doc=InputDocumentation(doc="Skip Tn5 adjustments of cut sites (def. false)")), ToolInput(tag="in_float_maximum_def", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="<float>      Maximum p-value (def. 0.01)")), ToolInput(tag="in_float_fdradjusted_def", input_type=Boolean(optional=True), prefix="-q", doc=InputDocumentation(doc="<float>      Maximum q-value (FDR-adjusted p-value; def. 1)")), ToolInput(tag="in_float_minimum_auc", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="<float>      Minimum AUC for a peak (def. 200.0)")), ToolInput(tag="in_int_minimum_length", input_type=Boolean(optional=True), prefix="-l", doc=InputDocumentation(doc="<int>        Minimum length of a peak (def. 0)")), ToolInput(tag="in_int_maximum_distance", input_type=Boolean(optional=True), prefix="-g", doc=InputDocumentation(doc="<int>        Maximum distance between signif. sites (def. 100)")), ToolInput(tag="in_skip_peakcalling", input_type=Boolean(optional=True), prefix="-X", doc=InputDocumentation(doc="Skip peak-calling")), ToolInput(tag="in_call_peaks_directly", input_type=Boolean(optional=True), prefix="-P", doc=InputDocumentation(doc="Call peaks directly from a log file (-f)")), ToolInput(tag="in_option_gzipcompress_outputs", input_type=Boolean(optional=True), prefix="-z", doc=InputDocumentation(doc="Option to gzip-compress output(s)")), ToolInput(tag="in_option_print_status", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="Option to print status updates/counts to stderr"))], outputs=[ToolOutput(tag="out_file_peak_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_file_peak_file", type_hint=File()), doc=OutputDocumentation(doc="<file>       Output peak file (in ENCODE narrowPeak format)")), ToolOutput(tag="out_file_file_pq", output_type=File(optional=True), selector=InputSelector(input_to_select="in_file_file_pq", type_hint=File()), doc=OutputDocumentation(doc="<file>       Output bedgraph-ish file for p/q values")), ToolOutput(tag="out_file_file_pileups", output_type=File(optional=True), selector=InputSelector(input_to_select="in_file_file_pileups", type_hint=File()), doc=OutputDocumentation(doc="<file>       Output bedgraph-ish file for pileups and p-values")), ToolOutput(tag="out_file_bed_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_file_bed_file", type_hint=File()), doc=OutputDocumentation(doc="<file>       Output BED file for reads/fragments/intervals")), ToolOutput(tag="out_file_output_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_file_output_file", type_hint=File()), doc=OutputDocumentation(doc="<file>       Output file for PCR duplicates (only with -r)"))], container="quay.io/biocontainers/genrich:0.6.1--hed695b0_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Genrich_V0_1_0().translate("wdl")

