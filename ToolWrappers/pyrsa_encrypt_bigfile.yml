!Command
command:
- pyrsa-encrypt-bigfile
positional:
- !Positional
  description: ''
  position: 0
  name: public_key
  optional: false
named:
- !Flag
  description: "Name of the file to encrypt. Reads from stdin if not\nspecified."
  synonyms:
  - -i
  - --input
  args: !SimpleFlagArg
    name: INPUT
  optional: true
- !Flag
  description: "Name of the file to write the encrypted file to.\nWritten to stdout\
    \ if this option is not present."
  synonyms:
  - -o
  - --output
  args: !SimpleFlagArg
    name: OUTPUT
  optional: true
- !Flag
  description: Key format of the public key - default PEM
  synonyms:
  - --keyform
  args: !SimpleFlagArg
    name: KEYFORM
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "Usage: pyrsa-encrypt-bigfile [options] public_key\n\nEncrypts a file to\
  \ an encrypted VARBLOCK file. The file can be larger than the\nkey length, but the\
  \ output file is only compatible with Python-RSA.\n\nOptions:\n  -h, --help    \
  \        show this help message and exit\n  -i INPUT, --input=INPUT\n          \
  \              Name of the file to encrypt. Reads from stdin if not\n          \
  \              specified.\n  -o OUTPUT, --output=OUTPUT\n                      \
  \  Name of the file to write the encrypted file to.\n                        Written\
  \ to stdout if this option is not present.\n  --keyform=KEYFORM     Key format of\
  \ the public key - default PEM\n"
generated_using:
- --help
