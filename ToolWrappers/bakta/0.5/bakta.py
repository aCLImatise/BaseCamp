from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, String, Directory, Boolean

Bakta_V0_1_0 = CommandToolBuilder(tool="bakta", base_command=["bakta"], inputs=[ToolInput(tag="in_db", input_type=File(optional=True), prefix="--db", doc=InputDocumentation(doc="Database path (default = <bakta_path>/db)")), ToolInput(tag="in_min_contig_length", input_type=Int(optional=True), prefix="--min-contig-length", doc=InputDocumentation(doc="Minimum contig size (default = 1)")), ToolInput(tag="in_prefix", input_type=String(optional=True), prefix="--prefix", doc=InputDocumentation(doc="Prefix for output files")), ToolInput(tag="in_output", input_type=Directory(optional=True), prefix="--output", doc=InputDocumentation(doc="Output directory (default = current working directory)")), ToolInput(tag="in_genus", input_type=String(optional=True), prefix="--genus", doc=InputDocumentation(doc="Genus name")), ToolInput(tag="in_species", input_type=String(optional=True), prefix="--species", doc=InputDocumentation(doc="Species name")), ToolInput(tag="in_strain", input_type=String(optional=True), prefix="--strain", doc=InputDocumentation(doc="Strain name")), ToolInput(tag="in_plasmid", input_type=String(optional=True), prefix="--plasmid", doc=InputDocumentation(doc="Plasmid name")), ToolInput(tag="in_complete", input_type=Boolean(optional=True), prefix="--complete", doc=InputDocumentation(doc="All sequences are complete replicons\n(chromosome/plasmid[s])")), ToolInput(tag="in_prodigal_tf", input_type=File(optional=True), prefix="--prodigal-tf", doc=InputDocumentation(doc="Path to existing Prodigal training file to use for CDS\nprediction")), ToolInput(tag="in_translation_table", input_type=String(optional=True), prefix="--translation-table", doc=InputDocumentation(doc="Translation table to use: 11/4 (default = 11)")), ToolInput(tag="in_gram", input_type=Boolean(optional=True), prefix="--gram", doc=InputDocumentation(doc="{+,-,?}        Gram type: +/-/? (default = '?')")), ToolInput(tag="in_locus", input_type=String(optional=True), prefix="--locus", doc=InputDocumentation(doc="Locus prefix (instead of 'contig')")), ToolInput(tag="in_locus_tag", input_type=String(optional=True), prefix="--locus-tag", doc=InputDocumentation(doc="Locus tag prefix")), ToolInput(tag="in_keep_contig_headers", input_type=Boolean(optional=True), prefix="--keep-contig-headers", doc=InputDocumentation(doc="Keep original contig headers")), ToolInput(tag="in_replicons", input_type=String(optional=True), prefix="--replicons", doc=InputDocumentation(doc="Replicon information table (TSV)")), ToolInput(tag="in_skip_trna", input_type=Boolean(optional=True), prefix="--skip-trna", doc=InputDocumentation(doc="Skip tRNA detection & annotation")), ToolInput(tag="in_skip_tmrna", input_type=Boolean(optional=True), prefix="--skip-tmrna", doc=InputDocumentation(doc="Skip tmRNA detection & annotation")), ToolInput(tag="in_skip_rrna", input_type=Boolean(optional=True), prefix="--skip-rrna", doc=InputDocumentation(doc="Skip rRNA detection & annotation")), ToolInput(tag="in_skip_ncrna", input_type=Boolean(optional=True), prefix="--skip-ncrna", doc=InputDocumentation(doc="Skip ncRNA detection & annotation")), ToolInput(tag="in_skip_ncrna_region", input_type=Boolean(optional=True), prefix="--skip-ncrna-region", doc=InputDocumentation(doc="Skip ncRNA region detection & annotation")), ToolInput(tag="in_skip_crisp_r", input_type=Boolean(optional=True), prefix="--skip-crispr", doc=InputDocumentation(doc="Skip CRISPR array detection & annotation")), ToolInput(tag="in_skip_cds", input_type=Boolean(optional=True), prefix="--skip-cds", doc=InputDocumentation(doc="Skip CDS detection & annotation")), ToolInput(tag="in_skip_so_rf", input_type=Boolean(optional=True), prefix="--skip-sorf", doc=InputDocumentation(doc="Skip sORF detection & annotation")), ToolInput(tag="in_skip_gap", input_type=Boolean(optional=True), prefix="--skip-gap", doc=InputDocumentation(doc="Skip gap detection & annotation")), ToolInput(tag="in_skip_ori", input_type=Boolean(optional=True), prefix="--skip-ori", doc=InputDocumentation(doc="Skip oriC/oriT detection & annotation")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Print verbose information")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of threads to use (default = number of\navailable CPUs)")), ToolInput(tag="in_tmp_dir", input_type=String(optional=True), prefix="--tmp-dir", doc=InputDocumentation(doc="Location for temporary files (default = system\ndependent auto detection)")), ToolInput(tag="in_citation", input_type=Boolean(optional=True), prefix="--citation", doc=InputDocumentation(doc="Print citation"))], outputs=[ToolOutput(tag="out_output", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="Output directory (default = current working directory)"))], container="quay.io/biocontainers/bakta:0.5--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bakta_V0_1_0().translate("wdl")

