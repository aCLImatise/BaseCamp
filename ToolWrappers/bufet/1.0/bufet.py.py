from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean, String

Bufet_Py_V0_1_0 = CommandToolBuilder(tool="bufet.py", base_command=["bufet.py"], inputs=[ToolInput(tag="in_mirna", input_type=File(optional=True), prefix="-miRNA", doc=InputDocumentation(doc=": path to the miRNA group file")), ToolInput(tag="in_interactions", input_type=File(optional=True), prefix="-interactions", doc=InputDocumentation(doc=">: path to the interactions file")), ToolInput(tag="in_ontology", input_type=File(optional=True), prefix="-ontology", doc=InputDocumentation(doc=": path to the ontology file")), ToolInput(tag="in_synonyms", input_type=File(optional=True), prefix="-synonyms", doc=InputDocumentation(doc=": path to the synonyms file")), ToolInput(tag="in_iterations", input_type=Boolean(optional=True), prefix="-iterations", doc=InputDocumentation(doc=": number of random permutations")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="-output", doc=InputDocumentation(doc=": path to the output file (overwritten if it exists)")), ToolInput(tag="in_processors", input_type=Boolean(optional=True), prefix="-processors", doc=InputDocumentation(doc=": number of threads to use for calculations")), ToolInput(tag="in_species", input_type=Boolean(optional=True), prefix="-species", doc=InputDocumentation(doc=": 'human' or 'mouse'")), ToolInput(tag="in_mi_free", input_type=Boolean(optional=True), prefix="-miFree", doc=InputDocumentation(doc=": miRanda free energy (valid only if the --miRanda flag is invoked)")), ToolInput(tag="in_mi_score", input_type=Boolean(optional=True), prefix="-miScore", doc=InputDocumentation(doc=": miRanda free energy (valid only if the --miRanda flag is invoked)")), ToolInput(tag="in_miranda", input_type=Boolean(optional=True), prefix="--miRanda", doc=InputDocumentation(doc=": use interactions file from miRanda run")), ToolInput(tag="in_ens_go", input_type=Boolean(optional=True), prefix="--ensGO", doc=InputDocumentation(doc=": use ontology file downloaded from Ensembl")), ToolInput(tag="in_disable_file_check", input_type=Boolean(optional=True), prefix="--disable-file-check", doc=InputDocumentation(doc=": (quicker but not recommended) disable all file validations.")), ToolInput(tag="in_disable_interactions_check", input_type=Boolean(optional=True), prefix="--disable-interactions-check", doc=InputDocumentation(doc=": (quicker but not recommended) disable existence and file format validation for the interactions file.")), ToolInput(tag="in_disable_ontology_check", input_type=Boolean(optional=True), prefix="--disable-ontology-check", doc=InputDocumentation(doc=": (quicker but not recommended) disable existence and file format validation for the ontology file.")), ToolInput(tag="in_disable_synonyms_check", input_type=Boolean(optional=True), prefix="--disable-synonyms-check", doc=InputDocumentation(doc=": (quicker but not recommended) disable existence and file format validation for the synonyms file.")), ToolInput(tag="in_python", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc=": path to the output file (overwritten if it exists)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bufet_Py_V0_1_0().translate("wdl", allow_empty_container=True)

