from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Int, File, Directory, Array

Optimize_Augustus_Pl_V0_1_0 = CommandToolBuilder(tool="optimize_augustus.pl", base_command=["optimize_augustus.pl"], inputs=[ToolInput(tag="in_meta_pars", input_type=String(optional=True), prefix="--metapars", doc=InputDocumentation(doc="metapars.cfg contains the names and their ranges of the\nmeta parameters that are subject to optimization.\n(default: generic_metapars.cfg)")), ToolInput(tag="in_rounds", input_type=Int(optional=True), prefix="--rounds", doc=InputDocumentation(doc="r is the number of rounds (default: 5)")), ToolInput(tag="in_cpus", input_type=Int(optional=True), prefix="--cpus", doc=InputDocumentation(doc="n is the number of CPUs to use (default: 1)")), ToolInput(tag="in_only_train", input_type=File(optional=True), prefix="--onlytrain", doc=InputDocumentation(doc="an optional genbank file that is used in addition to train.gb\nbut only for etrain not for intermediate evaluation of accuracy.\nThese genes may e.g. be incomplete.")), ToolInput(tag="in_k_fold", input_type=Int(optional=True), prefix="--kfold", doc=InputDocumentation(doc="Make a k-fold cross validation (default: 8)")), ToolInput(tag="in_p_step", input_type=Int(optional=True), prefix="--pstep", doc=InputDocumentation(doc="For integer and floating parameters start with p tests equidistributed\nin the allowed range of values (default: 5)")), ToolInput(tag="in_augustus_config_path", input_type=Directory(optional=True), prefix="--AUGUSTUS_CONFIG_PATH", doc=InputDocumentation(doc="Specify the config directory d if not set as environment variable")), ToolInput(tag="in_opt_trans_matrix", input_type=Array(t=String(), optional=True), prefix="--opt_trans_matrix", doc=InputDocumentation(doc="/species/nt/generic/generic_trans_shadow_partial.pbl")), ToolInput(tag="in_matrix_constraints", input_type=File(optional=True), prefix="--matrix_constraints", doc=InputDocumentation(doc="A file with try list, normed list and bindings.")), ToolInput(tag="in_utr", input_type=String(optional=True), prefix="--UTR", doc=InputDocumentation(doc="Turn untranslated region model on for training and prediction.")), ToolInput(tag="in_aug_exec_dir", input_type=File(optional=True), prefix="--aug_exec_dir", doc=InputDocumentation(doc="Path to augustus and etraining executable. If not specified\nit must be in \$PATH environment variable.")), ToolInput(tag="in_train_only_utr", input_type=Int(optional=True), prefix="--trainOnlyUtr", doc=InputDocumentation(doc="Use this option, if the exon, intron and intergenic models need not be trained. (default: 0)")), ToolInput(tag="in_not_rain_pars", input_type=Int(optional=True), prefix="--noTrainPars", doc=InputDocumentation(doc="Use this option, if the parameters to optimize do not affect training. The training step (etraining) is omitted completely. (default: 0)")), ToolInput(tag="in_sens_spec_bias", input_type=Int(optional=True), prefix="--sens_spec_bias", doc=InputDocumentation(doc="increase sensitivity weight by factor f. (default: 1)")), ToolInput(tag="in_nice", input_type=Int(optional=True), prefix="--nice", doc=InputDocumentation(doc="execute all time consuming system calls with bash nice (default nice level)\nDefault value for execution of optmize_augustus.pl is --nice=0.")), ToolInput(tag="in_cleanup", input_type=Int(optional=True), prefix="--cleanup", doc=InputDocumentation(doc="Delete tmp_opt_* folder after optimization (default: 0)")), ToolInput(tag="in_stop_codon_excluded_from_cds", input_type=Int(optional=True), prefix="--stopCodonExcludedFromCDS", doc=InputDocumentation(doc="Use this option, if the stop codons are excluded from the CDS features in 'eval.gtf' (default: 0).")), ToolInput(tag="in_eval_exec_dir", input_type=File(optional=True), prefix="--eval_exec_dir", doc=InputDocumentation(doc="Directory that contains the executable evaluate_gtf.pl from the eval package.\nIf not specified it must be in \$PATH environment variable.")), ToolInput(tag="in_eval_against", input_type=String(optional=True), prefix="--eval_against", doc=InputDocumentation(doc="s is the species identifier to which 'eval.gtf' belongs to. Caution, if not specified, the\nreference species in the alignment (first s-line in Maf block) is assumed.")), ToolInput(tag="in_chunksize", input_type=Int(optional=True), prefix="--chunksize", doc=InputDocumentation(doc="when more than 1 CPU is used, the alignment is split into multiple smaller alignments each approximately covering a\nsequence range of length n (in the reference genome). The prediction step is executed in parallel on these chunks (default: 5000000).")), ToolInput(tag="in_dbaccess", input_type=File(optional=True), prefix="--dbaccess", doc=InputDocumentation(doc="retrieve genomes either from a MySQL or from an SQLITE database. In the SQLITE case, 'db' is a database file\nwith extension .db, e.g. --dbaccess=vertebrates.db. In the MySQL case, 'db' is a string that contains the connection\ninformation, e.g. --dbaccess=dbname,host,user,passwd (the parameter --speciesfilenames is not required, here).")), ToolInput(tag="in_jg", input_type=Directory(optional=True), prefix="--jg", doc=InputDocumentation(doc="Use this option, if you want to filter out duplicates from the prediction with the external tool 'joingenes' (default: 0,\nhowever --jg=1 is recommended). The tool 'joingenes' is part of the augustus package and can be found in the 'auxprogs' folder.")), ToolInput(tag="in_jg_exec_dir", input_type=Directory(optional=True), prefix="--jg_exec_dir", doc=InputDocumentation(doc="Directory that contains the exectuable 'joingenes' (only required when --jg=1)")), ToolInput(tag="in_prefix_species_name", input_type=String(), position=0, doc=InputDocumentation(doc="prefix of the species name")), ToolInput(tag="in_train_dot_gb", input_type=String(), position=1, doc=InputDocumentation(doc="genbank file for training with bona fide gene structures")), ToolInput(tag="in_prefix_model_species", input_type=String(), position=0, doc=InputDocumentation(doc="prefix of the model species")), ToolInput(tag="in_tree_dot_nwk", input_type=String(), position=1, doc=InputDocumentation(doc="a phylogenetic tree of the species in NEWICK format")), ToolInput(tag="in_aln_dot_maf", input_type=String(), position=2, doc=InputDocumentation(doc="an alignment of the genomes in MAF format")), ToolInput(tag="in_genomes_dot_tbl", input_type=String(), position=3, doc=InputDocumentation(doc="a text file containing the locations of the genomes. Each line starts with the species identifier\nfollowed by the location of the corresponding genome file, e.g.\nhg19 /path/to/human/genome.fa\nmm9  /path/to/mouse/genome.fa\n...")), ToolInput(tag="in_eval_dot_gtf", input_type=String(), position=4, doc=InputDocumentation(doc="annotation file in GTF format. Accuracy values are computed by comparing the predictions against this reference set."))], outputs=[ToolOutput(tag="out_jg", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_jg", type_hint=File()), doc=OutputDocumentation(doc="Use this option, if you want to filter out duplicates from the prediction with the external tool 'joingenes' (default: 0,\nhowever --jg=1 is recommended). The tool 'joingenes' is part of the augustus package and can be found in the 'auxprogs' folder."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Optimize_Augustus_Pl_V0_1_0().translate("wdl", allow_empty_container=True)

