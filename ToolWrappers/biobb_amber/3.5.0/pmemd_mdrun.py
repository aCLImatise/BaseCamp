from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String

Pmemd_Mdrun_V0_1_0 = CommandToolBuilder(tool="pmemd_mdrun", base_command=["pmemd_mdrun"], inputs=[ToolInput(tag="in_config", input_type=File(optional=True), prefix="--config", doc=InputDocumentation(doc="Configuration file")), ToolInput(tag="in_input_top_path", input_type=File(optional=True), prefix="--input_top_path", doc=InputDocumentation(doc="Input topology file (AMBER ParmTop). Accepted formats: top, prmtop, parmtop.")), ToolInput(tag="in_input_crd_path", input_type=File(optional=True), prefix="--input_crd_path", doc=InputDocumentation(doc="Input coordinates file (AMBER crd). Accepted formats: crd, mdcrd.")), ToolInput(tag="in_input_md_in_path", input_type=File(optional=True), prefix="--input_mdin_path", doc=InputDocumentation(doc="Input configuration file (MD run options) (AMBER mdin). Accepted formats: mdin, in, txt.")), ToolInput(tag="in_input_cp_in_path", input_type=File(optional=True), prefix="--input_cpin_path", doc=InputDocumentation(doc="Input constant pH file (AMBER cpin). Accepted formats: cpin.")), ToolInput(tag="in_input_ref_path", input_type=File(optional=True), prefix="--input_ref_path", doc=InputDocumentation(doc="Input reference coordinates for position restraints. Accepted formats: rst, rst7.")), ToolInput(tag="in_output_log_path", input_type=File(optional=True), prefix="--output_log_path", doc=InputDocumentation(doc="Output log file. Accepted formats: log, out, txt.")), ToolInput(tag="in_output_t_raj_path", input_type=File(optional=True), prefix="--output_traj_path", doc=InputDocumentation(doc="Output trajectory file. Accepted formats: trj, crd, mdcrd, x.")), ToolInput(tag="in_output_rst_path", input_type=File(optional=True), prefix="--output_rst_path", doc=InputDocumentation(doc="Output restart file. Accepted formats: rst, rst7.")), ToolInput(tag="in_output_cp_out_path", input_type=File(optional=True), prefix="--output_cpout_path", doc=InputDocumentation(doc="Output constant pH file (AMBER cpout). Accepted formats: cpout.")), ToolInput(tag="in_output_cpr_st_path", input_type=File(optional=True), prefix="--output_cprst_path", doc=InputDocumentation(doc="Output constant pH restart file (AMBER rstout). Accepted formats: cprst.")), ToolInput(tag="in_output_md_info_path", input_type=String(optional=True), prefix="--output_mdinfo_path", doc=InputDocumentation(doc="Output MD info. Accepted formats: mdinfo.\n"))], outputs=[ToolOutput(tag="out_output_log_path", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_log_path", type_hint=File()), doc=OutputDocumentation(doc="Output log file. Accepted formats: log, out, txt.")), ToolOutput(tag="out_output_t_raj_path", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_t_raj_path", type_hint=File()), doc=OutputDocumentation(doc="Output trajectory file. Accepted formats: trj, crd, mdcrd, x.")), ToolOutput(tag="out_output_rst_path", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_rst_path", type_hint=File()), doc=OutputDocumentation(doc="Output restart file. Accepted formats: rst, rst7.")), ToolOutput(tag="out_output_cp_out_path", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_cp_out_path", type_hint=File()), doc=OutputDocumentation(doc="Output constant pH file (AMBER cpout). Accepted formats: cpout.")), ToolOutput(tag="out_output_cpr_st_path", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_cpr_st_path", type_hint=File()), doc=OutputDocumentation(doc="Output constant pH restart file (AMBER rstout). Accepted formats: cprst."))], container="quay.io/biocontainers/biobb_amber:3.5.0--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Pmemd_Mdrun_V0_1_0().translate("wdl")

