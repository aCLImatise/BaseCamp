from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, File

Tts_V0_1_0 = CommandToolBuilder(tool="tts", base_command=["tts"], inputs=[ToolInput(tag="in_string_template_execute", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc="String template to execute")), ToolInput(tag="in_http_header", input_type=Boolean(optional=True), prefix="--http-header", doc=InputDocumentation(doc="Print a HTTP Header?")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="Integer. Sets the debuggging level")), ToolInput(tag="in_debug_tokens", input_type=Boolean(optional=True), prefix="--debug-tokens", doc=InputDocumentation(doc="Enable token debugging?")), ToolInput(tag="in_new_cache", input_type=Boolean(optional=True), prefix="--new-cache", doc=InputDocumentation(doc="Flag.")), ToolInput(tag="in_new_capture_warnings", input_type=Boolean(optional=True), prefix="--new-capture-warnings", doc=InputDocumentation(doc="Flag.")), ToolInput(tag="in_new_safe", input_type=Boolean(optional=True), prefix="--new-safe", doc=InputDocumentation(doc="Flag.")), ToolInput(tag="in_new_stack", input_type=Boolean(optional=True), prefix="--new-stack", doc=InputDocumentation(doc="Flag.")), ToolInput(tag="in_new_strict", input_type=Boolean(optional=True), prefix="--new-strict", doc=InputDocumentation(doc="Flag.")), ToolInput(tag="in_new_verbose_errors", input_type=Boolean(optional=True), prefix="--new-verbose_errors", doc=InputDocumentation(doc="Flag.")), ToolInput(tag="in_new_warn_ids", input_type=Boolean(optional=True), prefix="--new-warn-ids", doc=InputDocumentation(doc="Flag.")), ToolInput(tag="in_new_monolith", input_type=Boolean(optional=True), prefix="--new-monolith", doc=InputDocumentation(doc="Flag.")), ToolInput(tag="in_new_add_args", input_type=Boolean(optional=True), prefix="--new-add-args", doc=InputDocumentation(doc="Add global arguments")), ToolInput(tag="in_new_cache_dir", input_type=Boolean(optional=True), prefix="--new-cache-dir", doc=InputDocumentation(doc="Path to cache directory")), ToolInput(tag="in_new_delimiters", input_type=Boolean(optional=True), prefix="--new-delimiters", doc=InputDocumentation(doc="Sets the delimiters")), ToolInput(tag="in_new_header", input_type=Boolean(optional=True), prefix="--new-header", doc=InputDocumentation(doc="Injects a default code onto the template")), ToolInput(tag="in_new_include_paths", input_type=Boolean(optional=True), prefix="--new-include-paths", doc=InputDocumentation(doc="List of include paths")), ToolInput(tag="in_new_io_layer", input_type=Boolean(optional=True), prefix="--new-iolayer", doc=InputDocumentation(doc="Perl I/O layer")), ToolInput(tag="in_new_pre_chomp", input_type=Boolean(optional=True), prefix="--new-pre-chomp", doc=InputDocumentation(doc="Global pre-chomp")), ToolInput(tag="in_new_post_chomp", input_type=Boolean(optional=True), prefix="--new-post-chomp", doc=InputDocumentation(doc="Global post-chomp")), ToolInput(tag="in_compile_param", input_type=Boolean(optional=True), prefix="--compile-param", doc=InputDocumentation(doc="List of parameters to pass to compiler")), ToolInput(tag="in_compile_id", input_type=Boolean(optional=True), prefix="--compile-id", doc=InputDocumentation(doc="Set the template cache id manually")), ToolInput(tag="in_compile_map_keys", input_type=Boolean(optional=True), prefix="--compile-map-keys", doc=InputDocumentation(doc="Flag. Enable map keys interface?")), ToolInput(tag="in_compile_chk_mt", input_type=Boolean(optional=True), prefix="--compile-chkmt", doc=InputDocumentation(doc="Flag. Check modification time of the template?")), ToolInput(tag="in_you", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_have", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_to", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_either", input_type=String(), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_pass", input_type=String(), position=4, doc=InputDocumentation(doc="")), ToolInput(tag="in_a", input_type=String(), position=5, doc=InputDocumentation(doc="")), ToolInput(tag="in_file", input_type=File(), position=6, doc=InputDocumentation(doc="")), ToolInput(tag="in_name", input_type=String(), position=7, doc=InputDocumentation(doc="")), ToolInput(tag="in_or", input_type=String(), position=8, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Tts_V0_1_0().translate("wdl", allow_empty_container=True)

