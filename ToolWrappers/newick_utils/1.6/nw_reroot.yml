!Command
command:
- nw_reroot
positional: []
named:
- !Flag
  description: ": deroot - splice out the LCA of the ingroup, attaching its children\n\
    to the root. The ingroup is the root's child which has the more\ndescendants.\
    \ The root is expected to have two children. Other options\nhave no effect."
  synonyms:
  - -d
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ": lax - if it is not possible to reroot on the outgroup, try the\n\
    ingroup - that is, all nodes whose labels were NOT passed as\narguments.  This\
    \ can also fail, if both the outgroup and the\ningroup have the tree's root as\
    \ LCA. Note that to use this option\nyou must make sure that you pass ALL outgroup\
    \ labels, otherwise the\ningroup will be wrong."
  synonyms:
  - -l
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ": treat inner node labels as bipartition support values. Although\
    \ they\nare attributed to nodes in Newick, these are actually properties of\n\
    edges, and are treated differently from clade labels, which are\nreally properties\
    \ of nodes. The \"Rerooting\" section of the manual\nhas more details."
  synonyms:
  - -s
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: ': print this message and exit'
  synonyms:
  - -h
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "(Re)roots a tree on a specified outgroup\n\nSynopsis\n--------\n\nnw_reroot\
  \ [-dhls] <newick trees filename|-> [label*]\n\nInput\n-----\n\nFirst argument is\
  \ the name of a file that contains Newick trees, or '-' (in\nwhich case trees are\
  \ read from standard input).\n\nFurther arguments are node labels. If there is at\
  \ least one label, the tree\nwill be re-rooted on their LCAa. If there is no label,\
  \ the tree is rerooted\non the longest branch. In this case the tree must be a phylogram.\n\
  \nOutput\n------\n\nRe-roots the tree on the outgroup formed by the nodes whose\
  \ labels are\npassed as arguments (by finding their LCA and rooting on its parent\
  \ edge).\n\nOptions\n-------\n\n    -d: deroot - splice out the LCA of the ingroup,\
  \ attaching its children\n        to the root. The ingroup is the root's child which\
  \ has the more\n        descendants. The root is expected to have two children.\
  \ Other options\n        have no effect.\n    -h: print this message and exit\n\
  \    -l: lax - if it is not possible to reroot on the outgroup, try the\n      \
  \  ingroup - that is, all nodes whose labels were NOT passed as\n        arguments.\
  \  This can also fail, if both the outgroup and the\n        ingroup have the tree's\
  \ root as LCA. Note that to use this option\n        you must make sure that you\
  \ pass ALL outgroup labels, otherwise the\n        ingroup will be wrong.\n    -s:\
  \ treat inner node labels as bipartition support values. Although they\n       \
  \ are attributed to nodes in Newick, these are actually properties of\n        edges,\
  \ and are treated differently from clade labels, which are\n        really properties\
  \ of nodes. The \"Rerooting\" section of the manual\n        has more details.\n\
  \nExamples\n--------\n\n# This tree is rooted on humans, but the outgroup should\
  \ be Cebus (New\n# World monkey) - let's fix that: \n\n$ nw_reroot data/catarrhini_wrong\
  \ Cebus\n\n# We can reroot on more than one node:\n\n$ nw_reroot data/catarrhini_wrong_3og\
  \ Cebus Aotus \n"
generated_using:
- -h
