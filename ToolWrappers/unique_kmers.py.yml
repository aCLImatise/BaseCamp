!Command
command:
- unique-kmers.py
positional:
- !Positional
  description: Input FAST[AQ] sequence filename(s).
  position: 0
  name: input_sequence_filename
  optional: false
named:
- !Flag
  description: ''
  synonyms:
  - -k
  args: !SimpleFlagArg
    name: KSIZE
  optional: true
- !Flag
  description: ''
  synonyms:
  - -q
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ''
  synonyms:
  - --info
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: ''
  synonyms:
  - -h
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: "show program's version number and exit\n--info                print\
    \ citation information\n-h, --help            show this help message and exit\n\
    -q, --quiet\n-k KSIZE, --ksize KSIZE\nk-mer size to use (default: 32)\n-e ERROR_RATE,\
    \ --error-rate ERROR_RATE\nAcceptable error rate (default: 0.01)\n-R filename,\
    \ --report filename\ngenerate informational report and write to filename\n(default:\
    \ None)\n-S, --stream-records  write input sequences to STDOUT (default: False)\n\
    --diagnostics         print out recommended tablesize arguments and\nrestrictions\
    \ (default: False)"
  synonyms:
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "usage: unique-kmers.py [--version] [--info] [-h] [-q] [-k KSIZE]\n   \
  \                    [-e ERROR_RATE] [-R filename] [-S] [--diagnostics]\n      \
  \                 input_sequence_filename [input_sequence_filename ...]\n\nEstimate\
  \ number of unique k-mers, with precision <= ERROR_RATE.\n\npositional arguments:\n\
  \  input_sequence_filename\n                        Input FAST[AQ] sequence filename(s).\n\
  \noptional arguments:\n  --version             show program's version number and\
  \ exit\n  --info                print citation information\n  -h, --help       \
  \     show this help message and exit\n  -q, --quiet\n  -k KSIZE, --ksize KSIZE\n\
  \                        k-mer size to use (default: 32)\n  -e ERROR_RATE, --error-rate\
  \ ERROR_RATE\n                        Acceptable error rate (default: 0.01)\n  -R\
  \ filename, --report filename\n                        generate informational report\
  \ and write to filename\n                        (default: None)\n  -S, --stream-records\
  \  write input sequences to STDOUT (default: False)\n  --diagnostics         print\
  \ out recommended tablesize arguments and\n                        restrictions\
  \ (default: False)\n\nA HyperLogLog counter is used to do cardinality estimation.\
  \ Since this counter\nis based on a tradeoff between precision and memory consumption,\
  \ the\n`-e`/`--error-rate` can be used to control how much memory will be used.\
  \ In\npractice the memory footprint is small even at low error rates (< 0.01).\n\
  \n`-k`/`--ksize` should be set to the desired k-mer size.\n\nInformational output\
  \ is sent to STDERR, but a report file can be generated with\n`-R`/`--report`.\n\
  \n`--stream-records` will write the sequences taken in to STDOUT. This is useful\n\
  for workflows: count unique kmers in a stream, then do digital normalization.\n\n\
  `--diagnostics` will provide detailed options for tablesize and memory\nlimitations\
  \ for various false positive rates. This is useful for configuring\nother khmer\
  \ scripts. This will be written to STDERR.\n\nExample:\n\n    unique-kmers.py -k\
  \ 17 tests/test-data/test-abund-read{,-2,-3}.fa\n\nExample:\n\n    unique-kmers.py\
  \ -k 17 --diagnostics tests/test-data/test-abund-read.fa\n\nExample:\n\n    unique-kmers.py\
  \ --stream-records -k 17 tests/test-data/test-reads.fa | \\\n    normalize-by-median.py\
  \ -k 17 -o normalized /dev/stdin\n\nExample:\n\n    unique-kmers.py -R unique_count\
  \ -k 30 \\\n    tests/test-data/test-abund-read-paired.fa\n"
generated_using:
- --help
