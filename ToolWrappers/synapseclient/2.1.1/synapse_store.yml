!Command
command:
- synapse
- store
positional:
- !Positional
  description: file to be added to synapse.
  position: 0
  name: FILE
  optional: false
named:
- !Flag
  description: "Synapse ID of project or folder where to upload data\n(must be specified\
    \ if --id is not used."
  synonyms:
  - --parentid
  - --parentId
  - -parentid
  - -parentId
  args: !SimpleFlagArg
    name: syn123
  optional: true
- !Flag
  description: Optional Id of entity in Synapse to be updated.
  synonyms:
  - --id
  args: !SimpleFlagArg
    name: syn123
  optional: true
- !Flag
  description: "Type of object, such as \"File\", \"Folder\", or\n\"Project\", to\
    \ create in Synapse. Defaults to \"File\""
  synonyms:
  - --type
  args: !SimpleFlagArg
    name: TYPE
  optional: true
- !Flag
  description: Name of data object in Synapse
  synonyms:
  - --name
  - -name
  args: !SimpleFlagArg
    name: NAME
  optional: true
- !Flag
  description: Description of data object in Synapse.
  synonyms:
  - --description
  - -description
  args: !SimpleFlagArg
    name: DESCRIPTION
  optional: true
- !Flag
  description: "Path to a markdown file containing description of\nproject/folder"
  synonyms:
  - --descriptionFile
  - -descriptionFile
  args: !SimpleFlagArg
    name: DESCRIPTION_FILE_PATH
  optional: true
- !Flag
  description: "[target [target ...]], -used [target [target ...]]\nSynapse ID, a\
    \ url, or a local file path (of a file\npreviouslyuploaded to Synapse) from which\
    \ the\nspecified entity is derived"
  synonyms:
  - --used
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "[target [target ...]], -executed [target [target ...]]\nSynapse ID,\
    \ a url, or a local file path (of a file\npreviouslyuploaded to Synapse) that\
    \ was executed to\ngenerate the specified entity"
  synonyms:
  - --executed
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Synapse ID of a container such as project or folder to\nlimit search\
    \ for provenance files."
  synonyms:
  - --limitSearch
  args: !SimpleFlagArg
    name: projId
  optional: true
- !Flag
  description: "Do not force a new version to be created if the\ncontents of the file\
    \ have not changed. The default is\na new version is created."
  synonyms:
  - --noForceVersion
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Annotations to add as a JSON formatted string, should\nevaluate to\
    \ a dictionary (key/value pairs). Example:\n'{\"foo\": 1, \"bar\":\"quux\"}'"
  synonyms:
  - --annotations
  args: !SimpleFlagArg
    name: ANNOTATIONS
  optional: true
- !Flag
  description: "Replace all existing annotations with the given\nannotations\n"
  synonyms:
  - --replace
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: synapse store [-h] (--parentid syn123 | --id syn123 | --type TYPE)\n\
  \                     [--name NAME]\n                     [--description DESCRIPTION\
  \ | --descriptionFile DESCRIPTION_FILE_PATH]\n                     [--used [target\
  \ [target ...]]]\n                     [--executed [target [target ...]]] [--limitSearch\
  \ projId]\n                     [--noForceVersion] [--annotations ANNOTATIONS]\n\
  \                     [--replace]\n                     [FILE]\n\npositional arguments:\n\
  \  FILE                  file to be added to synapse.\n\noptional arguments:\n \
  \ -h, --help            show this help message and exit\n  --parentid syn123, --parentId\
  \ syn123, -parentid syn123, -parentId syn123\n                        Synapse ID\
  \ of project or folder where to upload data\n                        (must be specified\
  \ if --id is not used.\n  --id syn123           Optional Id of entity in Synapse\
  \ to be updated.\n  --type TYPE           Type of object, such as \"File\", \"Folder\"\
  , or\n                        \"Project\", to create in Synapse. Defaults to \"\
  File\"\n  --name NAME, -name NAME\n                        Name of data object in\
  \ Synapse\n  --description DESCRIPTION, -description DESCRIPTION\n             \
  \           Description of data object in Synapse.\n  --descriptionFile DESCRIPTION_FILE_PATH,\
  \ -descriptionFile DESCRIPTION_FILE_PATH\n                        Path to a markdown\
  \ file containing description of\n                        project/folder\n  --used\
  \ [target [target ...]], -used [target [target ...]]\n                        Synapse\
  \ ID, a url, or a local file path (of a file\n                        previouslyuploaded\
  \ to Synapse) from which the\n                        specified entity is derived\n\
  \  --executed [target [target ...]], -executed [target [target ...]]\n         \
  \               Synapse ID, a url, or a local file path (of a file\n           \
  \             previouslyuploaded to Synapse) that was executed to\n            \
  \            generate the specified entity\n  --limitSearch projId  Synapse ID of\
  \ a container such as project or folder to\n                        limit search\
  \ for provenance files.\n  --noForceVersion      Do not force a new version to be\
  \ created if the\n                        contents of the file have not changed.\
  \ The default is\n                        a new version is created.\n  --annotations\
  \ ANNOTATIONS\n                        Annotations to add as a JSON formatted string,\
  \ should\n                        evaluate to a dictionary (key/value pairs). Example:\n\
  \                        '{\"foo\": 1, \"bar\":\"quux\"}'\n  --replace         \
  \    Replace all existing annotations with the given\n                        annotations\n"
generated_using:
- --help
