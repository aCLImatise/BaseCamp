from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Int, Boolean, Directory

Hivtrace_V0_1_0 = CommandToolBuilder(tool="hivtrace", base_command=["hivtrace"], inputs=[ToolInput(tag="in_input", input_type=File(optional=True), prefix="--input", doc=InputDocumentation(doc="FASTA file")), ToolInput(tag="in_ambiguities", input_type=String(optional=True), prefix="--ambiguities", doc=InputDocumentation(doc="handle ambiguous nucleotides using the specified\nstrategy")), ToolInput(tag="in_reference", input_type=String(optional=True), prefix="--reference", doc=InputDocumentation(doc="reference to align to")), ToolInput(tag="in_threshold", input_type=String(optional=True), prefix="--threshold", doc=InputDocumentation(doc="Only count edges where the distance is less than this\nthreshold")), ToolInput(tag="in_min_overlap", input_type=Int(optional=True), prefix="--minoverlap", doc=InputDocumentation(doc="Minimum Overlap")), ToolInput(tag="in_filter", input_type=String(optional=True), prefix="--filter", doc=InputDocumentation(doc="Edge filtering option")), ToolInput(tag="in_strip_drams", input_type=File(optional=True), prefix="--strip_drams", doc=InputDocumentation(doc="Read in an aligned Fasta file (HIV prot/rt sequences)\nand remove DRAM (drug resistance associated mutation)\ncodon sites. It will output a new alignment with these\nsites removed. It requires input/output file names\nalong with the list of DRAM sites to remove: 'lewis'\nor 'wheeler'.")), ToolInput(tag="in_compare", input_type=Boolean(optional=True), prefix="--compare", doc=InputDocumentation(doc="Compare to supplied FASTA file")), ToolInput(tag="in_do_not_store_intermediate", input_type=Boolean(optional=True), prefix="--do-not-store-intermediate", doc=InputDocumentation(doc="Store intermediate files")), ToolInput(tag="in_skip_alignment", input_type=Boolean(optional=True), prefix="--skip-alignment", doc=InputDocumentation(doc="Skip alignment")), ToolInput(tag="in_attributes_file", input_type=File(optional=True), prefix="--attributes-file", doc=InputDocumentation(doc="Annotate with attributes")), ToolInput(tag="in_log", input_type=Directory(optional=True), prefix="--log", doc=InputDocumentation(doc="Write logs to specified directory")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="Specify output filename")), ToolInput(tag="in_prior", input_type=String(optional=True), prefix="--prior", doc=InputDocumentation(doc="Prior network configuration\n")), ToolInput(tag="in_fraction", input_type=String(), position=0, doc=InputDocumentation(doc="-u CURATE, --curate CURATE"))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="Specify output filename"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Hivtrace_V0_1_0().translate("wdl", allow_empty_container=True)

