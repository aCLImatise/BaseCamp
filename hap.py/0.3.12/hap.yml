!Command
positional:
- !Positional
  description: ''
  position: 0
  name: Haplotype
  optional: false
- !Positional
  description: ''
  position: 1
  name: Comparison
  optional: false
named:
- !Flag
  description: Specify a reference file.
  synonyms:
  - -r
  - --reference
  args: !SimpleFlagArg
    name: REF
  optional: true
- !Flag
  description: Filename prefix for report output.
  synonyms:
  - -o
  - --report-prefix
  args: !SimpleFlagArg
    name: REPORTS_PREFIX
  optional: true
- !Flag
  description: Directory for scratch files.
  synonyms:
  - --scratch-prefix
  args: !SimpleFlagArg
    name: SCRATCH_PREFIX
  optional: true
- !Flag
  description: Filename prefix for scratch report output.
  synonyms:
  - --keep-scratch
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Annotation format in input VCF file.
  synonyms:
  - -t
  - --type
  args: !ChoiceFlagArg
    choices: !!set
      ? xcmp
      ? ga4gh
  optional: true
- !Flag
  description: False positive / confident call regions (.bed or .bed.gz). Calls outside
    these regions will be labelled as UNK.
  synonyms:
  - -f
  - --false-positives
  args: !SimpleFlagArg
    name: FP_BEDFILE
  optional: true
- !Flag
  description: Stratification file list (TSV format -- first column is region name,
    second column is file name).
  synonyms:
  - --stratification
  args: !SimpleFlagArg
    name: STRAT_TSV
  optional: true
- !Flag
  description: Add single stratification region, e.g. --stratification-region TEST:test.bed
  synonyms:
  - --stratification-region
  args: !SimpleFlagArg
    name: STRAT_REGIONS
  optional: true
- !Flag
  description: Add chr prefix to stratification files if necessary
  synonyms:
  - --stratification-fixchr
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Write an annotated VCF.
  synonyms:
  - -V
  - --write-vcf
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Write advanced counts and metrics.
  synonyms:
  - -X
  - --write-counts
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Do not write advanced counts and metrics.
  synonyms:
  - --no-write-counts
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Write VTC field in the final VCF which gives the counts each position
    has contributed to.
  synonyms:
  - --output-vtc
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: When using XCMP, preserve and merge the INFO fields in truth and query.
    Useful for ROC computation.
  synonyms:
  - --preserve-info
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Select a feature to produce a ROC on (INFO feature, QUAL, GQX, ...).
  synonyms:
  - --roc
  args: !SimpleFlagArg
    name: ROC
  optional: true
- !Flag
  description: Disable ROC computation and only output summary statistics for more
    concise output.
  synonyms:
  - --no-roc
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Select a list of regions to compute ROCs in. By default, only the '*'
    region will produce ROC output (aggregate variant counts).
  synonyms:
  - --roc-regions
  args: !SimpleFlagArg
    name: ROC_REGIONS
  optional: true
- !Flag
  description: Select a filter to ignore when making ROCs.
  synonyms:
  - --roc-filter
  args: !SimpleFlagArg
    name: ROC_FILTER
  optional: true
- !Flag
  description: Minimum spacing between ROC QQ levels.
  synonyms:
  - --roc-delta
  args: !SimpleFlagArg
    name: ROC_DELTA
  optional: true
- !Flag
  description: Confidence level for Jeffrey's CI for recall, precision and fraction
    of non-assessed calls.
  synonyms:
  - --ci-alpha
  args: !SimpleFlagArg
    name: CI_ALPHA
  optional: true
- !Flag
  description: Disable JSON file output.
  synonyms:
  - --no-json
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Comma-separated list of locations [use naming after preprocessing],
    when not specified will use whole VCF.
  synonyms:
  - --location
  - -l
  args: !SimpleFlagArg
    name: LOCATIONS
  optional: true
- !Flag
  description: Keep only PASS variants.
  synonyms:
  - --pass-only
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Specify a comma-separated list of filters to apply (by default all
    filters are ignored / passed on.
  synonyms:
  - --filters-only
  args: !SimpleFlagArg
    name: FILTERS_ONLY
  optional: true
- !Flag
  description: Restrict analysis to given (sparse) regions (using -R in bcftools).
  synonyms:
  - -R
  - --restrict-regions
  args: !SimpleFlagArg
    name: REGIONS_BEDFILE
  optional: true
- !Flag
  description: Restrict analysis to given (dense) regions (using -T in bcftools).
  synonyms:
  - -T
  - --target-regions
  args: !SimpleFlagArg
    name: TARGETS_BEDFILE
  optional: true
- !Flag
  description: Left-shift variants safely.
  synonyms:
  - -L
  - --leftshift
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Do not left-shift variants safely.
  synonyms:
  - --no-leftshift
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Decompose variants into primitives. This results in more granular counts.
  synonyms:
  - --decompose
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Do not decompose variants into primitives.
  synonyms:
  - -D
  - --no-decompose
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Enable preprocessing through bcftools norm -c x -D (requires external
    preprocessing to be switched on).
  synonyms:
  - --bcftools-norm
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Add chr prefix to VCF records where necessary (default: auto, attempt
    to match reference).'
  synonyms:
  - --fixchr
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Do not add chr prefix to VCF records (default: auto, attempt to match
    reference).'
  synonyms:
  - --no-fixchr
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Use BCF internally. This is the default when the input file is in BCF
    format already. Using BCF can speed up temp file access, but may fail for VCF
    files that have broken headers or records that don't comply with the header.
  synonyms:
  - --bcf
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Assume the input file is a somatic call file and squash all columns
    into one, putting all FORMATs into INFO + use half genotypes (see also --set-gt).
    This will replace all sample columns and replace them with a single one.
  synonyms:
  - --somatic
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'This is used to treat Strelka somatic files Possible values for this
    parameter: half / hemi / het / hom / half to assign one of the following genotypes
    to the resulting sample: 1 | 0/1 | 1/1 | ./1. This will replace all sample columns
    and replace them with a single one.'
  synonyms:
  - --set-gt
  args: !ChoiceFlagArg
    choices: !!set
      ? first
      ? half
      ? het
      ? hemi
      ? hom
  optional: true
- !Flag
  description: Remove any variants genotyped as <NON_REF>.
  synonyms:
  - --filter-nonref
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Convert the truth set from genome VCF format to a VCF before processing.
  synonyms:
  - --convert-gvcf-truth
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Convert the query set from genome VCF format to a VCF before processing.
  synonyms:
  - --convert-gvcf-query
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Specify sex. This determines how haploid calls on chrX get treated:
    for male samples, all non-ref calls (in the truthset only when running through
    hap.py) are given a 1/1 genotype.'
  synonyms:
  - --gender
  args: !ChoiceFlagArg
    choices: !!set
      ? female
      ? auto
      ? none
      ? male
  optional: true
- !Flag
  description: Preprocess truth file with same settings as query (default is to accept
    truth in original format).
  synonyms:
  - --preprocess-truth
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Use filtered variant calls in truth file (by default, only PASS calls
    in the truth file are used)
  synonyms:
  - --usefiltered-truth
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Preprocessing window size (variants further apart than that size are
    not expected to interfere).
  synonyms:
  - --preprocessing-window-size
  args: !SimpleFlagArg
    name: PREPROCESS_WINDOW
  optional: true
- !Flag
  description: Adjust confident regions to include variant locations. Note this will
    only include variants that are included in the CONF regions already when viewing
    with bcftools; this option only makes sure insertions are padded correctly in
    the CONF regions (to capture these, both the base before and after must be contained
    in the bed file).
  synonyms:
  - --adjust-conf-regions
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Do not adjust confident regions for insertions.
  synonyms:
  - --no-adjust-conf-regions
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Disable haplotype comparison (only count direct GT matches as TP).
  synonyms:
  - --unhappy
  - --no-haplotype-comparison
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Minimum distance between variants such that they fall into the same
    superlocus.
  synonyms:
  - -w
  - --window-size
  args: !SimpleFlagArg
    name: WINDOW
  optional: true
- !Flag
  description: Enumeration threshold / maximum number of sequences to enumerate per
    block.
  synonyms:
  - --xcmp-enumeration-threshold
  args: !SimpleFlagArg
    name: MAX_ENUM
  optional: true
- !Flag
  description: Expand haplotype blocks by this many basepairs left and right.
  synonyms:
  - --xcmp-expand-hapblocks
  args: !SimpleFlagArg
    name: HB_EXPAND
  optional: true
- !Flag
  description: Number of threads to use.
  synonyms:
  - --threads
  args: !SimpleFlagArg
    name: THREADS
  optional: true
- !Flag
  description: Comparison engine to use.
  synonyms:
  - --engine
  args: !ChoiceFlagArg
    choices: !!set
      ? xcmp
      ? scmp-distance
      ? scmp-somatic
      ? vcfeval
  optional: true
- !Flag
  description: This parameter should give the path to the "rtg" executable. The default
    is rtg
  synonyms:
  - --engine-vcfeval-path
  args: !SimpleFlagArg
    name: ENGINE_VCFEVAL
  optional: true
- !Flag
  description: Vcfeval needs the reference sequence formatted in its own file format
    (SDF -- run rtg format -o ref.SDF ref.fa). You can specify this here to save time
    when running hap.py with vcfeval. If no SDF folder is specified, hap.py will create
    a temporary one.
  synonyms:
  - --engine-vcfeval-template
  args: !SimpleFlagArg
    name: ENGINE_VCFEVAL_TEMPLATE
  optional: true
- !Flag
  description: For distance-based matching (vcfeval and scmp), this is the distance
    between variants to use.
  synonyms:
  - --scmp-distance
  args: !SimpleFlagArg
    name: ENGINE_SCMP_DISTANCE
  optional: true
- !Flag
  description: For distance-based matching (vcfeval and scmp), this is the distance
    between variants to use.
  synonyms:
  - --lose-match-distance
  args: !SimpleFlagArg
    name: ENGINE_SCMP_DISTANCE
  optional: true
- !Flag
  description: Write logging information into file rather than to stderr
  synonyms:
  - --logfile
  args: !SimpleFlagArg
    name: LOGFILE
  optional: true
- !Flag
  description: Raise logging level from warning to info.
  synonyms:
  - --verbose
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Set logging level to output errors only.
  synonyms:
  - --quiet
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ''
  synonyms:
  - -v
  args: !EmptyFlagArg {}
  optional: true
command:
- hap.py
parent:
subcommands: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: Show version number and exit.
  synonyms:
  - -v
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "usage: Haplotype Comparison [-h] [-v] [-r REF] [-o REPORTS_PREFIX]\n \
  \                           [--scratch-prefix SCRATCH_PREFIX] [--keep-scratch]\n\
  \                            [-t {xcmp,ga4gh}] [-f FP_BEDFILE]\n               \
  \             [--stratification STRAT_TSV]\n                            [--stratification-region\
  \ STRAT_REGIONS]\n                            [--stratification-fixchr] [-V] [-X]\n\
  \                            [--no-write-counts] [--output-vtc]\n              \
  \              [--preserve-info] [--roc ROC] [--no-roc]\n                      \
  \      [--roc-regions ROC_REGIONS]\n                            [--roc-filter ROC_FILTER]\
  \ [--roc-delta ROC_DELTA]\n                            [--ci-alpha CI_ALPHA] [--no-json]\n\
  \                            [--location LOCATIONS] [--pass-only]\n            \
  \                [--filters-only FILTERS_ONLY] [-R REGIONS_BEDFILE]\n          \
  \                  [-T TARGETS_BEDFILE] [-L] [--no-leftshift]\n                \
  \            [--decompose] [-D] [--bcftools-norm] [--fixchr]\n                 \
  \           [--no-fixchr] [--bcf] [--somatic]\n                            [--set-gt\
  \ {half,hemi,het,hom,first}]\n                            [--filter-nonref] [--convert-gvcf-truth]\n\
  \                            [--convert-gvcf-query]\n                          \
  \  [--gender {male,female,auto,none}]\n                            [--preprocess-truth]\
  \ [--usefiltered-truth]\n                            [--preprocessing-window-size\
  \ PREPROCESS_WINDOW]\n                            [--adjust-conf-regions] [--no-adjust-conf-regions]\n\
  \                            [--unhappy] [-w WINDOW]\n                         \
  \   [--xcmp-enumeration-threshold MAX_ENUM]\n                            [--xcmp-expand-hapblocks\
  \ HB_EXPAND]\n                            [--threads THREADS]\n                \
  \            [--engine {xcmp,vcfeval,scmp-somatic,scmp-distance}]\n            \
  \                [--engine-vcfeval-path ENGINE_VCFEVAL]\n                      \
  \      [--engine-vcfeval-template ENGINE_VCFEVAL_TEMPLATE]\n                   \
  \         [--scmp-distance ENGINE_SCMP_DISTANCE]\n                            [--lose-match-distance\
  \ ENGINE_SCMP_DISTANCE]\n                            [--logfile LOGFILE] [--verbose\
  \ | --quiet]\n                            [_vcfs [_vcfs ...]]\n\npositional arguments:\n\
  \  _vcfs                 Two VCF files.\n\noptional arguments:\n  -h, --help   \
  \         show this help message and exit\n  -v, --version         Show version\
  \ number and exit.\n  -r REF, --reference REF\n                        Specify a\
  \ reference file.\n  -o REPORTS_PREFIX, --report-prefix REPORTS_PREFIX\n       \
  \                 Filename prefix for report output.\n  --scratch-prefix SCRATCH_PREFIX\n\
  \                        Directory for scratch files.\n  --keep-scratch        Filename\
  \ prefix for scratch report output.\n  -t {xcmp,ga4gh}, --type {xcmp,ga4gh}\n  \
  \                      Annotation format in input VCF file.\n  -f FP_BEDFILE, --false-positives\
  \ FP_BEDFILE\n                        False positive / confident call regions (.bed\
  \ or\n                        .bed.gz). Calls outside these regions will be labelled\n\
  \                        as UNK.\n  --stratification STRAT_TSV\n               \
  \         Stratification file list (TSV format -- first column\n               \
  \         is region name, second column is file name).\n  --stratification-region\
  \ STRAT_REGIONS\n                        Add single stratification region, e.g.\n\
  \                        --stratification-region TEST:test.bed\n  --stratification-fixchr\n\
  \                        Add chr prefix to stratification files if necessary\n \
  \ -V, --write-vcf       Write an annotated VCF.\n  -X, --write-counts    Write advanced\
  \ counts and metrics.\n  --no-write-counts     Do not write advanced counts and\
  \ metrics.\n  --output-vtc          Write VTC field in the final VCF which gives\
  \ the\n                        counts each position has contributed to.\n  --preserve-info\
  \       When using XCMP, preserve and merge the INFO fields in\n               \
  \         truth and query. Useful for ROC computation.\n  --roc ROC            \
  \ Select a feature to produce a ROC on (INFO feature,\n                        QUAL,\
  \ GQX, ...).\n  --no-roc              Disable ROC computation and only output summary\n\
  \                        statistics for more concise output.\n  --roc-regions ROC_REGIONS\n\
  \                        Select a list of regions to compute ROCs in. By\n     \
  \                   default, only the '*' region will produce ROC output\n     \
  \                   (aggregate variant counts).\n  --roc-filter ROC_FILTER\n   \
  \                     Select a filter to ignore when making ROCs.\n  --roc-delta\
  \ ROC_DELTA\n                        Minimum spacing between ROC QQ levels.\n  --ci-alpha\
  \ CI_ALPHA   Confidence level for Jeffrey's CI for recall,\n                   \
  \     precision and fraction of non-assessed calls.\n  --no-json             Disable\
  \ JSON file output.\n  --location LOCATIONS, -l LOCATIONS\n                    \
  \    Comma-separated list of locations [use naming after\n                     \
  \   preprocessing], when not specified will use whole VCF.\n  --pass-only      \
  \     Keep only PASS variants.\n  --filters-only FILTERS_ONLY\n                \
  \        Specify a comma-separated list of filters to apply (by\n              \
  \          default all filters are ignored / passed on.\n  -R REGIONS_BEDFILE, --restrict-regions\
  \ REGIONS_BEDFILE\n                        Restrict analysis to given (sparse) regions\
  \ (using -R\n                        in bcftools).\n  -T TARGETS_BEDFILE, --target-regions\
  \ TARGETS_BEDFILE\n                        Restrict analysis to given (dense) regions\
  \ (using -T\n                        in bcftools).\n  -L, --leftshift       Left-shift\
  \ variants safely.\n  --no-leftshift        Do not left-shift variants safely.\n\
  \  --decompose           Decompose variants into primitives. This results in\n \
  \                       more granular counts.\n  -D, --no-decompose    Do not decompose\
  \ variants into primitives.\n  --bcftools-norm       Enable preprocessing through\
  \ bcftools norm -c x -D\n                        (requires external preprocessing\
  \ to be switched on).\n  --fixchr              Add chr prefix to VCF records where\
  \ necessary\n                        (default: auto, attempt to match reference).\n\
  \  --no-fixchr           Do not add chr prefix to VCF records (default: auto,\n\
  \                        attempt to match reference).\n  --bcf                 Use\
  \ BCF internally. This is the default when the input\n                        file\
  \ is in BCF format already. Using BCF can speed up\n                        temp\
  \ file access, but may fail for VCF files that have\n                        broken\
  \ headers or records that don't comply with the\n                        header.\n\
  \  --somatic             Assume the input file is a somatic call file and\n    \
  \                    squash all columns into one, putting all FORMATs into\n   \
  \                     INFO + use half genotypes (see also --set-gt). This\n    \
  \                    will replace all sample columns and replace them with\n   \
  \                     a single one.\n  --set-gt {half,hemi,het,hom,first}\n    \
  \                    This is used to treat Strelka somatic files Possible\n    \
  \                    values for this parameter: half / hemi / het / hom /\n    \
  \                    half to assign one of the following genotypes to the\n    \
  \                    resulting sample: 1 | 0/1 | 1/1 | ./1. This will\n        \
  \                replace all sample columns and replace them with a\n          \
  \              single one.\n  --filter-nonref       Remove any variants genotyped\
  \ as <NON_REF>.\n  --convert-gvcf-truth  Convert the truth set from genome VCF format\
  \ to a VCF\n                        before processing.\n  --convert-gvcf-query \
  \ Convert the query set from genome VCF format to a VCF\n                      \
  \  before processing.\n  --gender {male,female,auto,none}\n                    \
  \    Specify sex. This determines how haploid calls on chrX\n                  \
  \      get treated: for male samples, all non-ref calls (in\n                  \
  \      the truthset only when running through hap.py) are\n                    \
  \    given a 1/1 genotype.\n  --preprocess-truth    Preprocess truth file with same\
  \ settings as query\n                        (default is to accept truth in original\
  \ format).\n  --usefiltered-truth   Use filtered variant calls in truth file (by\
  \ default,\n                        only PASS calls in the truth file are used)\n\
  \  --preprocessing-window-size PREPROCESS_WINDOW\n                        Preprocessing\
  \ window size (variants further apart than\n                        that size are\
  \ not expected to interfere).\n  --adjust-conf-regions\n                       \
  \ Adjust confident regions to include variant locations.\n                     \
  \   Note this will only include variants that are included\n                   \
  \     in the CONF regions already when viewing with\n                        bcftools;\
  \ this option only makes sure insertions are\n                        padded correctly\
  \ in the CONF regions (to capture\n                        these, both the base\
  \ before and after must be\n                        contained in the bed file).\n\
  \  --no-adjust-conf-regions\n                        Do not adjust confident regions\
  \ for insertions.\n  --unhappy, --no-haplotype-comparison\n                    \
  \    Disable haplotype comparison (only count direct GT\n                      \
  \  matches as TP).\n  -w WINDOW, --window-size WINDOW\n                        Minimum\
  \ distance between variants such that they fall\n                        into the\
  \ same superlocus.\n  --xcmp-enumeration-threshold MAX_ENUM\n                  \
  \      Enumeration threshold / maximum number of sequences to\n                \
  \        enumerate per block.\n  --xcmp-expand-hapblocks HB_EXPAND\n           \
  \             Expand haplotype blocks by this many basepairs left\n            \
  \            and right.\n  --threads THREADS     Number of threads to use.\n  --engine\
  \ {xcmp,vcfeval,scmp-somatic,scmp-distance}\n                        Comparison\
  \ engine to use.\n  --engine-vcfeval-path ENGINE_VCFEVAL\n                     \
  \   This parameter should give the path to the \"rtg\"\n                       \
  \ executable. The default is rtg\n  --engine-vcfeval-template ENGINE_VCFEVAL_TEMPLATE\n\
  \                        Vcfeval needs the reference sequence formatted in its\n\
  \                        own file format (SDF -- run rtg format -o ref.SDF\n   \
  \                     ref.fa). You can specify this here to save time when\n   \
  \                     running hap.py with vcfeval. If no SDF folder is\n       \
  \                 specified, hap.py will create a temporary one.\n  --scmp-distance\
  \ ENGINE_SCMP_DISTANCE\n                        For distance-based matching (vcfeval\
  \ and scmp), this\n                        is the distance between variants to use.\n\
  \  --lose-match-distance ENGINE_SCMP_DISTANCE\n                        For distance-based\
  \ matching (vcfeval and scmp), this\n                        is the distance between\
  \ variants to use.\n  --logfile LOGFILE     Write logging information into file\
  \ rather than to\n                        stderr\n  --verbose             Raise\
  \ logging level from warning to info.\n  --quiet               Set logging level\
  \ to output errors only.\n"
generated_using:
- --help
