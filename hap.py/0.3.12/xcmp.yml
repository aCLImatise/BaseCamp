!Command
command:
- xcmp
positional:
- !Positional
  description: '--apply-filters-truth arg        Apply filtering in truth VCF (on
    by '
  position: 0
  name: process.
  optional: false
named:
- !Flag
  description: "Two VCF files to compare (use file:sample\nfor a specific sample column)."
  synonyms:
  - --input-vcfs
  args: !SimpleFlagArg
    name: arg
  optional: true
- !Flag
  description: '[ --output-vcf ] arg          Output variant comparison results to
    VCF.'
  synonyms:
  - -o
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '[ --output-errors ] arg       Output failure information.'
  synonyms:
  - -e
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '[ --reference ] arg           The reference fasta file.'
  synonyms:
  - -r
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '[ --location ] arg            The location to start at.'
  synonyms:
  - -l
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "[ --regions ] arg             Use a bed file for getting a subset\
    \ of\nregions (traversal via tabix)."
  synonyms:
  - -R
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "[ --targets ] arg             Use a bed file for getting a subset\
    \ of\ntargets (streaming the whole file, ignoring\nthings outside the bed regions)."
  synonyms:
  - -T
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "[ --qq ] arg                  Field to use for quality scoring (this\
    \ will\nbe output as the QQ info field)."
  synonyms:
  - -q
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Set to true to output progress information.
  synonyms:
  - --progress
  args: !SimpleFlagArg
    name: arg
  optional: true
- !Flag
  description: Output progress information every n seconds.
  synonyms:
  - --progress-seconds
  args: !SimpleFlagArg
    name: arg
  optional: true
- !Flag
  description: '[ --window ] arg              Overlap window to create haplotype blocks.'
  synonyms:
  - -w
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '[ --max-n-haplotypes ] arg    Maximum number of haplotypes to enumerate.'
  synonyms:
  - -n
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Number of bases to expand around each\nhaplotype block."
  synonyms:
  - --expand-hapblocks
  args: !SimpleFlagArg
    name: arg
  optional: true
- !Flag
  description: Maximum number of haplotype blocks to
  synonyms:
  - --limit
  args: !SimpleFlagArg
    name: arg
  optional: true
- !Flag
  description: "[ --apply-filters-query ] arg Apply filtering in query VCF (off by\n\
    default)."
  synonyms:
  - -f
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Always compare haplotype blocks (even if\nthey match). Testing use\
    \ only/slow."
  synonyms:
  - --always-hapcmp
  args: !SimpleFlagArg
    name: arg
  optional: true
- !Flag
  description: "Disable haplotype comparison. This overrides\nall other haplotype\
    \ comparison options.\n"
  synonyms:
  - --no-hapcmp
  args: !SimpleFlagArg
    name: arg
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: '[ --help ]                    produce help message'
  synonyms:
  - -h
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: Show version
  synonyms:
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "Allowed options:\n  -h [ --help ]                    produce help message\n\
  \  --version                        Show version\n  --input-vcfs arg           \
  \      Two VCF files to compare (use file:sample \n                            \
  \       for a specific sample column).\n  -o [ --output-vcf ] arg          Output\
  \ variant comparison results to VCF.\n  -e [ --output-errors ] arg       Output\
  \ failure information.\n  -r [ --reference ] arg           The reference fasta file.\n\
  \  -l [ --location ] arg            The location to start at.\n  -R [ --regions\
  \ ] arg             Use a bed file for getting a subset of \n                  \
  \                 regions (traversal via tabix).\n  -T [ --targets ] arg       \
  \      Use a bed file for getting a subset of \n                               \
  \    targets (streaming the whole file, ignoring \n                            \
  \       things outside the bed regions).\n  -q [ --qq ] arg                  Field\
  \ to use for quality scoring (this will \n                                   be\
  \ output as the QQ info field).\n  --progress arg                   Set to true\
  \ to output progress information.\n  --progress-seconds arg           Output progress\
  \ information every n seconds.\n  -w [ --window ] arg              Overlap window\
  \ to create haplotype blocks.\n  -n [ --max-n-haplotypes ] arg    Maximum number\
  \ of haplotypes to enumerate.\n  --expand-hapblocks arg           Number of bases\
  \ to expand around each \n                                   haplotype block.\n\
  \  --limit arg                      Maximum number of haplotype blocks to \n   \
  \                                process.\n  --apply-filters-truth arg        Apply\
  \ filtering in truth VCF (on by \n                                   default).\n\
  \  -f [ --apply-filters-query ] arg Apply filtering in query VCF (off by \n    \
  \                               default).\n  --always-hapcmp arg              Always\
  \ compare haplotype blocks (even if \n                                   they match).\
  \ Testing use only/slow.\n  --no-hapcmp arg                  Disable haplotype comparison.\
  \ This overrides\n                                   all other haplotype comparison\
  \ options.\n\n"
generated_using:
- --help
