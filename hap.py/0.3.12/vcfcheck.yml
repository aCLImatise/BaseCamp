!Command
command:
- vcfcheck
positional: []
named:
- !Flag
  description: The input file
  synonyms:
  - --input-file
  args: !SimpleFlagArg
    name: arg
  optional: true
- !Flag
  description: '[ --output-file ] arg   The output JSON file with basic counts.'
  synonyms:
  - -o
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '[ --location ] arg      Start location.'
  synonyms:
  - -l
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Maximum number of records to process
  synonyms:
  - --limit-records
  args: !SimpleFlagArg
    name: arg
  optional: true
- !Flag
  description: Print a message every N records.
  synonyms:
  - --message-every
  args: !SimpleFlagArg
    name: arg
  optional: true
- !Flag
  description: '[ --apply-filters ] arg Apply filtering in VCF.'
  synonyms:
  - -f
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "[ --strict-homref ] arg Be strict about hom-ref assertions (i.e. don't\n\
    allow these to overlap)."
  synonyms:
  - -H
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Check if turning this file into BCF will succeed\nor fail."
  synonyms:
  - --check-bcf-errors
  args: !SimpleFlagArg
    name: arg
  optional: true
- !Flag
  description: '[ --all-warnings ] arg  Show all warnings, not just the first instance.'
  synonyms:
  - -W
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: '[ --help ]              produce help message'
  synonyms:
  - -h
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: Show version
  synonyms:
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "Allowed options:\n  -h [ --help ]              produce help message\n\
  \  --version                  Show version\n  --input-file arg           The input\
  \ file\n  -o [ --output-file ] arg   The output JSON file with basic counts.\n \
  \ -l [ --location ] arg      Start location.\n  --limit-records arg        Maximum\
  \ number of records to process\n  --message-every arg        Print a message every\
  \ N records.\n  -f [ --apply-filters ] arg Apply filtering in VCF.\n  -H [ --strict-homref\
  \ ] arg Be strict about hom-ref assertions (i.e. don't \n                      \
  \       allow these to overlap).\n  --check-bcf-errors arg     Check if turning\
  \ this file into BCF will succeed \n                             or fail.\n  -W\
  \ [ --all-warnings ] arg  Show all warnings, not just the first instance.\n\n"
generated_using:
- --help
