version 1.0

task SvtoolsLmerge {
  input {
    File? in_file
    Float? percent_slop
    Int? fixed_slop
    Boolean? sum
    Boolean? include_original_genotypes
    String? weighting_scheme_intended
    String? tempdir
  }
  command <<<
    svtools lmerge \
      ~{if defined(in_file) then ("--inFile " +  '"' + in_file + '"') else ""} \
      ~{if defined(percent_slop) then ("--percent-slop " +  '"' + percent_slop + '"') else ""} \
      ~{if defined(fixed_slop) then ("--fixed-slop " +  '"' + fixed_slop + '"') else ""} \
      ~{true="--sum" false="" sum} \
      ~{true="-g" false="" include_original_genotypes} \
      ~{if defined(weighting_scheme_intended) then ("-w " +  '"' + weighting_scheme_intended + '"') else ""} \
      ~{if defined(tempdir) then ("--tempdir " +  '"' + tempdir + '"') else ""}
  >>>
  parameter_meta {
    in_file: "a sorted VCF file generated by svtools lsort. Each INFO field must contain an SNAME tag containing the sample name (e.g. SNAME=SAMPLE_NAME)"
    percent_slop: "increase the the breakpoint confidence interval both up and down stream by a given proportion of the original size"
    fixed_slop: "increase the the breakpoint confidence interval both up and down stream by a given fixed size"
    sum: "calculate breakpoint PDF and position using sum algorithm instead of product"
    include_original_genotypes: "include original genotypes in output. When multiple variants are merged, the last will dictate the genotype field"
    weighting_scheme_intended: "weighting scheme (intended for use in tiered merging), options: unweighted, carrier_wt, evidence_wt"
    tempdir: "Directory for temp file downloads"
  }
}