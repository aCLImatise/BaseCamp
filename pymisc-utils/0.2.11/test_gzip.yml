!Command
positional:
- !Positional
  description: The size of the random binary file
  position: 0
  name: size
  optional: false
named:
- !Flag
  description: 'This option specifies a file to which logging statements will be written
    (in addition to stdout and stderr, if specified) (default: )'
  synonyms:
  - --log-file
  args: !SimpleFlagArg
    name: LOG_FILE
  optional: true
- !Flag
  description: 'If this flag is present, then logging statements will be written to
    stdout (in addition to a file and stderr, if specified) (default: False)'
  synonyms:
  - --log-stdout
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Unless this flag is present, then logging statements will be written
    to stderr (in addition to a file and stdout, if specified) (default: False)'
  synonyms:
  - --no-log-stderr
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'If this value is specified, then it will be used for all logs (default:
    WARNING)'
  synonyms:
  - --logging-level
  args: !ChoiceFlagArg
    choices: !!set
      ERROR:
      CRITICAL:
      INFO:
      WARNING:
      NOTSET:
      DEBUG:
  optional: true
- !Flag
  description: 'The logging level to be used for the log file, if specified. This
    option overrides --logging-level. (default: NOTSET)'
  synonyms:
  - --file-logging-level
  args: !ChoiceFlagArg
    choices: !!set
      ERROR:
      CRITICAL:
      INFO:
      WARNING:
      NOTSET:
      DEBUG:
  optional: true
- !Flag
  description: 'The logging level to be used for the stdout log, if specified. This
    option overrides --logging-level. (default: NOTSET)'
  synonyms:
  - --stdout-logging-level
  args: !ChoiceFlagArg
    choices: !!set
      ERROR:
      CRITICAL:
      INFO:
      WARNING:
      NOTSET:
      DEBUG:
  optional: true
- !Flag
  description: 'The logging level to be used for the stderr log, if specified. This
    option overrides --logging-level. (default: NOTSET)'
  synonyms:
  - --stderr-logging-level
  args: !ChoiceFlagArg
    choices: !!set
      ERROR:
      CRITICAL:
      INFO:
      WARNING:
      NOTSET:
      DEBUG:
  optional: true
- !Flag
  description: ''
  synonyms:
  - --blocksize
  args: !SimpleFlagArg
    name: BLOCKSIZE
  optional: true
command:
- test_gzip.py
parent:
subcommands: []
help_flag: !Flag
  description: ''
  synonyms:
  - -h
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: test_gzip.py [-h] [--blocksize BLOCKSIZE]\n                   \
  \ [--num-iterations NUM_ITERATIONS] [--read-file READ_FILE]\n                  \
  \  [--write-file WRITE_FILE] [--log-file LOG_FILE]\n                    [--log-stdout]\
  \ [--no-log-stderr]\n                    [--logging-level {NOTSET,DEBUG,INFO,WARNING,ERROR,CRITICAL}]\n\
  \                    [--file-logging-level {NOTSET,DEBUG,INFO,WARNING,ERROR,CRITICAL}]\n\
  \                    [--stdout-logging-level {NOTSET,DEBUG,INFO,WARNING,ERROR,CRITICAL}]\n\
  \                    [--stderr-logging-level {NOTSET,DEBUG,INFO,WARNING,ERROR,CRITICAL}]\n\
  \                    size\n\nThis script reads and writes a random gzipped file\
  \ many times to disk. After\neach iteration, it calculates the checksum of the new\
  \ file. It raises an\nOSError if the checksums do not match.\n\npositional arguments:\n\
  \  size                  The size of the random binary file\n\noptional arguments:\n\
  \  -h, --help            show this help message and exit\n  --blocksize BLOCKSIZE\n\
  \                        The size of blocks for reading and writing (default:\n\
  \                        4k)\n  --num-iterations NUM_ITERATIONS\n              \
  \          The number of iterations (default: 30)\n  --read-file READ_FILE\n  --write-file\
  \ WRITE_FILE\n\nlogging options:\n  --log-file LOG_FILE   This option specifies\
  \ a file to which logging\n                        statements will be written (in\
  \ addition to stdout and\n                        stderr, if specified) (default:\
  \ )\n  --log-stdout          If this flag is present, then logging statements will\n\
  \                        be written to stdout (in addition to a file and\n     \
  \                   stderr, if specified) (default: False)\n  --no-log-stderr  \
  \     Unless this flag is present, then logging statements\n                   \
  \     will be written to stderr (in addition to a file and\n                   \
  \     stdout, if specified) (default: False)\n  --logging-level {NOTSET,DEBUG,INFO,WARNING,ERROR,CRITICAL}\n\
  \                        If this value is specified, then it will be used for\n\
  \                        all logs (default: WARNING)\n  --file-logging-level {NOTSET,DEBUG,INFO,WARNING,ERROR,CRITICAL}\n\
  \                        The logging level to be used for the log file, if\n   \
  \                     specified. This option overrides --logging-level.\n      \
  \                  (default: NOTSET)\n  --stdout-logging-level {NOTSET,DEBUG,INFO,WARNING,ERROR,CRITICAL}\n\
  \                        The logging level to be used for the stdout log, if\n \
  \                       specified. This option overrides --logging-level.\n    \
  \                    (default: NOTSET)\n  --stderr-logging-level {NOTSET,DEBUG,INFO,WARNING,ERROR,CRITICAL}\n\
  \                        The logging level to be used for the stderr log, if\n \
  \                       specified. This option overrides --logging-level.\n    \
  \                    (default: NOTSET)\n"
generated_using:
- --help
