!Command
positional: []
named:
- !Flag
  description: Try both strands
  synonyms:
  - -s
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Alignment penalty: match, [2]'
  synonyms:
  - -M
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: 'Alignment penalty: mismatch, [-5]'
  synonyms:
  - -X
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: 'Alignment penalty: insertion or deletion, [-3]'
  synonyms:
  - -O
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: 'Alignment penalty: gap extension, [-1]'
  synonyms:
  - -E
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: 'Alignment penalty: read end clipping, 0: distable HSP extension, otherwise
    set to -100 or other [-100]'
  synonyms:
  - -T
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: Bandwidth, [800]
  synonyms:
  - -W
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: Output alignment
  synonyms:
  - -a
  args: !EmptyFlagArg {}
  optional: true
command:
- pairaln
parent:
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "Program: pairaln\n pairaln read paired sequences (fasta or fastq) from\
  \ STDIN, here is an example input\n >read1\n AAGGCCTT\n >read2\n AAGCCTT\n and so\
  \ on, read3, read4, ...\n pairaln will perform alignment on read1 and read2, read3\
  \ and read4, ...\n The default parameters is used for pacbio long reads\nUsage:\
  \ pairaln [options]\nAuthor: Jue Ruan\nOptions:\n -s          Try both strands\n\
  \ -M <int>    Alignment penalty: match, [2]\n -X <int>    Alignment penalty: mismatch,\
  \ [-5]\n -O <int>    Alignment penalty: insertion or deletion, [-3]\n -E <int> \
  \   Alignment penalty: gap extension, [-1]\n -T <int>    Alignment penalty: read\
  \ end clipping, 0: distable HSP extension, otherwise set to -100 or other [-100]\n\
  \ -W <int>    Bandwidth, [800]\n -a          Output alignment\n\n"
generated_using:
- --help
