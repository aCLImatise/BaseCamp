!Command
positional:
- !Positional
  description: ''
  position: 0
  name: sort
  optional: false
- !Positional
  description: ''
  position: 1
  name: bedFile.bed
  optional: false
named:
- !Flag
  description: mysql host used to get chrom sizes
  synonyms:
  - -host
  args: !SimpleFlagArg
    name: hostname
  optional: true
- !Flag
  description: mysql user
  synonyms:
  - -user
  args: !SimpleFlagArg
    name: username
  optional: true
- !Flag
  description: mysql password
  synonyms:
  - -password
  args: !SimpleFlagArg
    name: password
  optional: true
command:
- bedItemOverlapCount
parent:
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "bedItemOverlapCount - count number of times a base is overlapped by the\n\
  \titems in a bed file.  Output is bedGraph 4 to stdout.\nusage:\n sort bedFile.bed\
  \ | bedItemOverlapCount [options] <database> stdin\nTo create a bigWig file from\
  \ this data to use in a custom track:\n sort -k1,1 bedFile.bed | bedItemOverlapCount\
  \ [options] <database> stdin \\\n         > bedFile.bedGraph\n bedGraphToBigWig\
  \ bedFile.bedGraph chrom.sizes bedFile.bw\n   where the chrom.sizes is obtained\
  \ with the script: fetchChromSizes\n   See also:\n http://genome-test.gi.ucsc.edu/~kent/src/unzipped/utils/userApps/fetchChromSizes\n\
  options:\n   -zero      add blocks with zero count, normally these are ommitted\n\
  \   -bed12     expect bed12 and count based on blocks\n              Without this\
  \ option, only the first three fields are used.\n   -max       if counts per base\
  \ overflows set to max (4294967295) instead of exiting\n   -outBounds output min/max\
  \ to stderr\n   -chromSize=sizefile\tRead chrom sizes from file instead of database\n\
  \             sizefile contains two white space separated fields per line:\n\t\t\
  chrom name and size\n   -host=hostname\tmysql host used to get chrom sizes\n   -user=username\t\
  mysql user\n   -password=password\tmysql password\n\nNotes:\n * You may want to\
  \ separate your + and - strand\n   items before sending into this program as it\
  \ only looks at\n   the chrom, start and end columns of the bed file.\n * Program\
  \ requires a <database> connection to lookup chrom sizes for a sanity\n   check\
  \ of the incoming data.  Even when the -chromSize argument is used\n   the <database>\
  \ must be present, but it will not be used.\n\n * The bed file *must* be sorted\
  \ by chrom\n * Maximum count per base is 4294967295. Recompile with new unitSize\
  \ to increase this\n"
generated_using: []
