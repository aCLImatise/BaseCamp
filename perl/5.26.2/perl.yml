!Command
command:
- perl
positional:
- !Positional
  description: ''
  position: 0
  name: switches
  optional: true
named:
- !Flag
  description: '[octal]         specify record separator (\0, if no argument)'
  synonyms:
  - '-0'
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: autosplit mode with -n or -p (splits $_ into @F)
  synonyms:
  - -a
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '[number/list]   enables the listed Unicode features'
  synonyms:
  - -C
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: check syntax only (runs BEGIN and CHECK blocks)
  synonyms:
  - -c
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '[:debugger]     run program under debugger'
  synonyms:
  - -d
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '[number/list]   set debugging flags (argument is a bit mask or alphabets)'
  synonyms:
  - -D
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: one line of program (several -e's allowed, omit programfile)
  synonyms:
  - -e
  args: !SimpleFlagArg
    name: program
  optional: true
- !Flag
  description: like -e, but enables all optional features
  synonyms:
  - -E
  args: !SimpleFlagArg
    name: program
  optional: true
- !Flag
  description: don't do $sitelib/sitecustomize.pl at startup
  synonyms:
  - -f
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: split() pattern for -a switch (//'s are optional)
  synonyms:
  - -F/pattern/
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '[extension]     edit <> files in place (makes backup if extension
    supplied)'
  synonyms:
  - -i
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: specify @INC/#include directory (several -I's allowed)
  synonyms:
  - -Idirectory
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '[octal]         enable line ending processing, specifies line terminator'
  synonyms:
  - -l
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: assume "while (<>) { ... }" loop around program
  synonyms:
  - -n
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: assume loop like -n but print line also, like sed
  synonyms:
  - -p
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: enable rudimentary parsing for switches after programfile
  synonyms:
  - -s
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: look for programfile using PATH environment variable
  synonyms:
  - -S
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: enable tainting warnings
  synonyms:
  - -t
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: enable tainting checks
  synonyms:
  - -T
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: dump core after parsing program
  synonyms:
  - -u
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: allow unsafe operations
  synonyms:
  - -U
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: print version, patchlevel and license
  synonyms:
  - -v
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '[:variable]     print configuration summary (or a single Config.pm
    variable)'
  synonyms:
  - -V
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: enable many useful warnings
  synonyms:
  - -w
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: enable all warnings
  synonyms:
  - -W
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '[directory]     ignore text before #!perl line (optionally cd to directory)'
  synonyms:
  - -x
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: disable all warnings
  synonyms:
  - -X
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "\nUsage: perl [switches] [--] [programfile] [arguments]\n  -0[octal] \
  \        specify record separator (\\0, if no argument)\n  -a                autosplit\
  \ mode with -n or -p (splits $_ into @F)\n  -C[number/list]   enables the listed\
  \ Unicode features\n  -c                check syntax only (runs BEGIN and CHECK\
  \ blocks)\n  -d[:debugger]     run program under debugger\n  -D[number/list]   set\
  \ debugging flags (argument is a bit mask or alphabets)\n  -e program        one\
  \ line of program (several -e's allowed, omit programfile)\n  -E program       \
  \ like -e, but enables all optional features\n  -f                don't do $sitelib/sitecustomize.pl\
  \ at startup\n  -F/pattern/       split() pattern for -a switch (//'s are optional)\n\
  \  -i[extension]     edit <> files in place (makes backup if extension supplied)\n\
  \  -Idirectory       specify @INC/#include directory (several -I's allowed)\n  -l[octal]\
  \         enable line ending processing, specifies line terminator\n  -[mM][-]module\
  \    execute \"use/no module...\" before executing program\n  -n               \
  \ assume \"while (<>) { ... }\" loop around program\n  -p                assume\
  \ loop like -n but print line also, like sed\n  -s                enable rudimentary\
  \ parsing for switches after programfile\n  -S                look for programfile\
  \ using PATH environment variable\n  -t                enable tainting warnings\n\
  \  -T                enable tainting checks\n  -u                dump core after\
  \ parsing program\n  -U                allow unsafe operations\n  -v           \
  \     print version, patchlevel and license\n  -V[:variable]     print configuration\
  \ summary (or a single Config.pm variable)\n  -w                enable many useful\
  \ warnings\n  -W                enable all warnings\n  -x[directory]     ignore\
  \ text before #!perl line (optionally cd to directory)\n  -X                disable\
  \ all warnings\n  \nRun 'perldoc perl' for more help with Perl.\n\n"
generated_using:
- --help
