!Command
command:
- pbindexdump
positional:
- !Positional
  description: FILE  Input PBI file. If not provided, stdin will be used as input.
  position: 0
  name: input.bam.pbi
  optional: false
named:
- !Flag
  description: 'STR   Output format. Valid choices: (json, cpp). [json]'
  synonyms:
  - --format
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: INT   JSON indent level. [4]
  synonyms:
  - --json-indent-level
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Print fields in a layout that more closely reflects the PBI file format\
    \ (per-field\ncolumns, not per-record objects."
  synonyms:
  - --json-raw
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: Show this help and exit.
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: Show application version and exit.
  synonyms:
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "pbindexdump - pbindexdump prints a human-readable view of PBI data to\
  \ stdout.\n\nUsage:\n  pbindexdump [options] [input.bam.pbi]\n\n  input.bam.pbi\
  \        FILE  Input PBI file. If not provided, stdin will be used as input.\n\n\
  Output Options:\n  --format             STR   Output format. Valid choices: (json,\
  \ cpp). [json]\n  --json-indent-level  INT   JSON indent level. [4]\n  --json-raw\
  \                 Print fields in a layout that more closely reflects the PBI file\
  \ format (per-field\n                             columns, not per-record objects.\n\
  \n  -h,--help                  Show this help and exit.\n  --version           \
  \       Show application version and exit.\n\nSupported output formats:\n  json:\
  \ 'pretty-printed' JSON\n  cpp:  copy/paste-able C++ code that can be used to construct\
  \ the\n        equivalent BAM::PbiRawData object.\n"
generated_using:
- --help
