!Command
command:
- pbmerge
positional:
- !Positional
  description: 'FILE  Input file(s). Maybe one of: DataSetXML, BAM file(s), or FOFN'
  position: 0
  name: INPUT
  optional: false
named:
- !Flag
  description: STR   Output BAM filename. Writes to stdout if not provided.
  synonyms:
  - -o
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Disables creation of PBI index file. PBI always disabled when writing
    to stdout.
  synonyms:
  - --no-pbi
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: Show this help and exit.
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: Show application version and exit.
  synonyms:
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "pbmerge - pbmerge merges PacBio BAM files. If the input is DataSetXML,\
  \ any filters will be applied.\n\nUsage:\n  pbmerge [options] <INPUT>\n\n  INPUT\
  \      FILE  Input file(s). Maybe one of: DataSetXML, BAM file(s), or FOFN\n\nInput/Output:\n\
  \  -o         STR   Output BAM filename. Writes to stdout if not provided.\n  --no-pbi\
  \         Disables creation of PBI index file. PBI always disabled when writing\
  \ to stdout.\n\n  -h,--help        Show this help and exit.\n  --version       \
  \ Show application version and exit.\n\nExamples:\n    $ pbmerge -o merged.bam data.subreadset.xml\n\
  \    $ pbmerge -o merged.bam data_1.bam data_2.bam data_3.bam\n    $ pbmerge -o\
  \ merged.bam data_bams.fofn\n"
generated_using:
- --help
