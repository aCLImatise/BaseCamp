&id003 !Command
positional:
- !Positional
  description: Prints this usage information
  position: 0
  name: help
  optional: false
named:
- !Flag
  description: Load aplication plugins [Multiple; Split by "," ]
  synonyms:
  - --plugins
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Options for application plugins [Key-Value]
  synonyms:
  - --plugins_opts
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Select rules after and including a particular rule.
  synonyms:
  - --select_after
  - --sa
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Select rules to process [Multiple; Split by "," ]
  synonyms:
  - --select_rules
  - --sr
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Match rules to omit [Multiple; Split by ","]
  synonyms:
  - --omit_match
  - --om
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Select sets of rules. Ex: rule1-rule2,rule4- rule5 [Multiple; Split
    by ","]'
  synonyms:
  - --select_between
  - --sbtwn
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Omit rules after and including a particular rule.
  synonyms:
  - --omit_after
  - --oa
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Omit rules before and including a particular rule.
  synonyms:
  - --omit_before
  - --ob
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Supply samples on the command line as --samples sample1 --samples sample2,
    or find through sample_rule. [Multiple; Split by ","]
  synonyms:
  - --samples
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Omit sets of rules. Ex: rule1-rule2,rule4-rule5 [Multiple; Split by
    ","]'
  synonyms:
  - --omit_between
  - --obtwn
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Omit rules to process [Multiple; Split by ","]
  synonyms:
  - --omit_rules
  - --or
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Select rules before and including a particular rule.
  synonyms:
  - --select_before
  - --sb
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Match rules to select [Multiple; Split by ","]
  synonyms:
  - --select_match
  - --sm
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Exclude samples from analysis --exclude_samples sample1 --exclude_samples
    sample2 [Multiple; Split by ","]
  synonyms:
  - --exclude_samples
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '[Flag]'
  synonyms:
  - --verbose
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '[Default:"#"]'
  synonyms:
  - --comment_char
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Create a dependency tree using the INPUT/ OUTPUTs of a rule [Flag]
  synonyms:
  - --auto_deps
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Supply a workflow [Required]
  synonyms:
  - --workflow
  - -w
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Write your workflow to a file
  synonyms:
  - --outfile
  - -o
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Write workflows to STDOUT [Flag]
  synonyms:
  - --stdout
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Search for config files in ~/.config.(ext) and in your current working
    directory. [Flag]
  synonyms:
  - --search
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Enable a search path for configs. Default is the home dir and your
    cwd. [Multiple]
  synonyms:
  - --search_path
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: --no_configs tells HPC::Runner not to load any configs [Flag]
  synonyms:
  - --no_configs
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Basename of config files [Default:".config"]
  synonyms:
  - --config_base
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Override the search paths and supply your own config.
  synonyms:
  - --config
  args: !EmptyFlagArg {}
  optional: true
command:
- biox-workflow.pl
- run
parent: &id001 !Command
  positional: []
  named:
  - !Flag
    description: Options for application plugins [Key-Value]
    synonyms:
    - --plugins_opts
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Load aplication plugins [Multiple; Split by ","]
    synonyms:
    - --plugins
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Basename of config files [Default:".bioxworkflow"]
    synonyms:
    - --config_base
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Search for config files in ~/.config.(ext) and in your current working
      directory. [Flag]
    synonyms:
    - --search
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Enable a search path for configs. Default is the home dir and your
      cwd. [Multiple]
    synonyms:
    - --search_path
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: --no_configs tells HPC::Runner not to load any configs [Flag]
    synonyms:
    - --no_configs
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Override the search paths and supply your own config.
    synonyms:
    - --config
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: ''
    synonyms:
    - -w
    args: !SimpleFlagArg
      name: workflow.yml
    optional: true
  command:
  - biox-workflow.pl
  parent:
  subcommands:
  - !Command
    positional:
    - !Positional
      description: Prints this usage information
      position: 0
      name: help
      optional: false
    named:
    - !Flag
      description: Load aplication plugins [Multiple; Split by ","]
      synonyms:
      - --plugins
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Options for application plugins [Key-Value]
      synonyms:
      - --plugins_opts
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: --no_configs tells HPC::Runner not to load any configs [Flag]
      synonyms:
      - --no_configs
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Enable a search path for configs. Default is the home dir and your
        cwd. [Multiple]
      synonyms:
      - --search_path
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Basename of config files [Default:".bioxworkflow"]
      synonyms:
      - --config_base
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Override the search paths and supply your own config.
      synonyms:
      - --config
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Search for config files in ~/.config.(ext) and in your current
        working directory. [Flag]
      synonyms:
      - --search
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Add rules [Multiple; Split by ","]
      synonyms:
      - --rules
      - -r
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Supply a workflow [Required]
      synonyms:
      - --workflow
      - -w
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Write workflows to STDOUT [Flag]
      synonyms:
      - --stdout
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Write your workflow to a file. The default will write it out to
        the same workflow.
      synonyms:
      - --outfile
      - -o
      args: !EmptyFlagArg {}
      optional: true
    command:
    - biox-workflow.pl
    - add
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: -?  Prints this usage information. [Flag]
      synonyms:
      - --help
      - -h
      - --usage
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage:\n    biox-workflow.pl add [long options...]\n    biox-workflow.pl\
      \ help\n    biox-workflow.pl add --help\n\ndescription:\n    Add rules to an\
      \ existing workflow.\n\noptions:\n    --plugins             Load aplication\
      \ plugins [Multiple; Split by \",\"]\n    --plugins_opts        Options for\
      \ application plugins [Key-Value]\n    --no_configs          --no_configs tells\
      \ HPC::Runner not to load any\n                          configs [Flag]\n  \
      \  --search_path         Enable a search path for configs. Default is the\n\
      \                          home dir and your cwd. [Multiple]\n    --config_base\
      \         Basename of config files [Default:\".bioxworkflow\"]\n    --config\
      \              Override the search paths and supply your own\n             \
      \             config.\n    --search              Search for config files in\
      \ ~/.config.(ext) and in\n                          your current working directory.\
      \ [Flag]\n    --rules -r            Add rules [Multiple; Split by \",\"]\n \
      \   --workflow -w         Supply a workflow [Required]\n    --stdout       \
      \       Write workflows to STDOUT [Flag]\n    --outfile -o          Write your\
      \ workflow to a file. The default will\n                          write it out\
      \ to the same workflow.\n    --help -h --usage -?  Prints this usage information.\
      \ [Flag]\n\navailable subcommands:\n    help  Prints this usage information\n\
      \n"
    generated_using: &id002
    - --help
  - !Command
    positional:
    - !Positional
      description: Prints this usage information
      position: 0
      name: help
      optional: false
    named:
    - !Flag
      description: '[Flag]'
      synonyms:
      - --json
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '[Flag]'
      synonyms:
      - --show_only_errors
      args: !EmptyFlagArg {}
      optional: true
    command:
    - biox-workflow.pl
    - inspect
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: -?      Prints this usage information. [Flag]
      synonyms:
      - --help
      - -h
      - --usage
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage:\n    biox-workflow.pl inspect [long options...]\n    biox-workflow.pl\
      \ help\n    biox-workflow.pl inspect --help\n\ndescription:\n    Inspect individual\
      \ variables in your workflow. Syntax is global.var for\n    global, or rule.rulename.var\
      \ for rules. Use the --all flag to inspect all\n    variables.\n\noptions:\n\
      \    --plugins_opts            Options for application plugins [Key-Value]\n\
      \    --plugins                 Load aplication plugins [Multiple; Split by \"\
      ,\"\n                              ]\n    --config                  Override\
      \ the search paths and supply your own\n                              config.\n\
      \    --search_path             Enable a search path for configs. Default is\n\
      \                              the home dir and your cwd. [Multiple]\n    --config_base\
      \             Basename of config files [Default:\".\n                      \
      \        bioxworkflow\"]\n    --search                  Search for config files\
      \ in ~/.config.(ext) and\n                              in your current working\
      \ directory. [Flag]\n    --no_configs              --no_configs tells HPC::Runner\
      \ not to load any\n                              configs [Flag]\n    --omit_match\
      \ --om         Match rules to omit [Multiple; Split by \",\"]\n    --select_after\
      \ --sa       Select rules after and including a particular\n               \
      \               rule.\n    --select_before --sb      Select rules before and\
      \ including a particular\n                              rule.\n    --exclude_samples\
      \         Exclude samples from analysis --exclude_samples\n                \
      \              sample1 --exclude_samples sample2 [Multiple;\n              \
      \                Split by \",\"]\n    --omit_before --ob        Omit rules before\
      \ and including a particular\n                              rule.\n    --omit_rules\
      \ --or         Omit rules to process [Multiple; Split by \",\"]\n    --omit_between\
      \ --obtwn    Omit sets of rules. Ex: rule1-rule2,rule4-rule5\n             \
      \                 [Multiple; Split by \",\"]\n    --select_rules --sr      \
      \ Select rules to process [Multiple; Split by \",\"\n                      \
      \        ]\n    --select_match --sm       Match rules to select [Multiple; Split\
      \ by \",\"]\n    --omit_after --oa         Omit rules after and including a\
      \ particular\n                              rule.\n    --samples           \
      \      Supply samples on the command line as --samples\n                   \
      \           sample1 --samples sample2, or find through\n                   \
      \           sample_rule. [Multiple; Split by \",\"]\n    --select_between --sbtwn\
      \  Select sets of rules. Ex: rule1-rule2,rule4-\n                          \
      \    rule5 [Multiple; Split by \",\"]\n    --verbose                 [Flag]\n\
      \    --comment_char            [Default:\"#\"]\n    --auto_deps            \
      \   Create a dependency tree using the INPUT/\n                            \
      \  OUTPUTs of a rule [Flag]\n    --outfile -o              Write your workflow\
      \ to a file\n    --workflow -w             Supply a workflow [Required]\n  \
      \  --stdout                  Write workflows to STDOUT [Flag]\n    --all   \
      \                  [Flag]\n    --step_key                Type any key to continue\
      \ to next rule key. Type\n                              'q' or 'quit' to quit.\
      \ [Flag]\n    --step_rule               Type any key to continue to next rule.\
      \ Type 'q'\n                              or 'quit' to quit. [Flag]\n    --path\
      \                    \n    --json                    [Flag]\n    --show_only_errors\
      \        [Flag]\n    --help -h --usage -?      Prints this usage information.\
      \ [Flag]\n\navailable subcommands:\n    help  Prints this usage information\n\
      \n"
    generated_using: *id002
  - *id003
  help_flag: !Flag
    description: -?  Prints this usage information. [Flag]
    synonyms:
    - --help
    - -h
    - --usage
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage:\n      biox run -w workflow.yml\n      biox -h\n\ndescription:\n\
    \    BioX::Workflow::Command is a templating system for creating Bioinformatics\n\
    \    Workflows.\n\nglobal options:\n    --plugins_opts        Options for application\
    \ plugins [Key-Value]\n    --plugins             Load aplication plugins [Multiple;\
    \ Split by \",\"]\n    --config_base         Basename of config files [Default:\"\
    .bioxworkflow\"]\n    --search              Search for config files in ~/.config.(ext)\
    \ and in\n                          your current working directory. [Flag]\n \
    \   --search_path         Enable a search path for configs. Default is the\n \
    \                         home dir and your cwd. [Multiple]\n    --no_configs\
    \          --no_configs tells HPC::Runner not to load any\n                  \
    \        configs [Flag]\n    --config              Override the search paths and\
    \ supply your own\n                          config.\n    --help -h --usage -?\
    \  Prints this usage information. [Flag]\n\navailable commands:\n    add     \
    \  Add rules to an existing workflow.\n    inspect   Inspect your workflow\n \
    \   new       Create a new workflow.\n    run       Run your workflow.\n    stats\
    \     Get the status of INPUT/OUTPUT for your workflow\n    validate  Validate\
    \ your workflow.\n    help      Prints this usage information\n\n"
  generated_using: *id002
subcommands: []
help_flag: !Flag
  description: -?      Prints this usage information. [Flag]
  synonyms:
  - --help
  - -h
  - --usage
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage:\n    biox-workflow.pl run [long options...]\n    biox-workflow.pl\
  \ help\n    biox-workflow.pl run --help\n\ndescription:\n    Run your workflow,\
  \ process the variables, and create all your directories.\n\noptions:\n    --plugins\
  \                 Load aplication plugins [Multiple; Split by \",\"\n          \
  \                    ]\n    --plugins_opts            Options for application plugins\
  \ [Key-Value]\n    --select_after --sa       Select rules after and including a\
  \ particular\n                              rule.\n    --select_rules --sr     \
  \  Select rules to process [Multiple; Split by \",\"\n                         \
  \     ]\n    --omit_match --om         Match rules to omit [Multiple; Split by \"\
  ,\"]\n    --select_between --sbtwn  Select sets of rules. Ex: rule1-rule2,rule4-\n\
  \                              rule5 [Multiple; Split by \",\"]\n    --omit_after\
  \ --oa         Omit rules after and including a particular\n                   \
  \           rule.\n    --omit_before --ob        Omit rules before and including\
  \ a particular\n                              rule.\n    --samples             \
  \    Supply samples on the command line as --samples\n                         \
  \     sample1 --samples sample2, or find through\n                             \
  \ sample_rule. [Multiple; Split by \",\"]\n    --omit_between --obtwn    Omit sets\
  \ of rules. Ex: rule1-rule2,rule4-rule5\n                              [Multiple;\
  \ Split by \",\"]\n    --omit_rules --or         Omit rules to process [Multiple;\
  \ Split by \",\"]\n    --select_before --sb      Select rules before and including\
  \ a particular\n                              rule.\n    --select_match --sm   \
  \    Match rules to select [Multiple; Split by \",\"]\n    --exclude_samples   \
  \      Exclude samples from analysis --exclude_samples\n                       \
  \       sample1 --exclude_samples sample2 [Multiple;\n                         \
  \     Split by \",\"]\n    --verbose                 [Flag]\n    --comment_char\
  \            [Default:\"#\"]\n    --auto_deps               Create a dependency\
  \ tree using the INPUT/\n                              OUTPUTs of a rule [Flag]\n\
  \    --workflow -w             Supply a workflow [Required]\n    --outfile -o  \
  \            Write your workflow to a file\n    --stdout                  Write\
  \ workflows to STDOUT [Flag]\n    --search                  Search for config files\
  \ in ~/.config.(ext) and\n                              in your current working\
  \ directory. [Flag]\n    --search_path             Enable a search path for configs.\
  \ Default is\n                              the home dir and your cwd. [Multiple]\n\
  \    --no_configs              --no_configs tells HPC::Runner not to load any\n\
  \                              configs [Flag]\n    --config_base             Basename\
  \ of config files [Default:\".config\"]\n    --config                  Override\
  \ the search paths and supply your own\n                              config.\n\
  \    --help -h --usage -?      Prints this usage information. [Flag]\n\navailable\
  \ subcommands:\n    help  Prints this usage information\n\n"
generated_using: *id002
