!Command
positional: []
named:
- !Flag
  description: Input dataset in wide format.
  synonyms:
  - -i
  - --input
  args: !SimpleFlagArg
    name: INPUT
  optional: true
- !Flag
  description: Design file.
  synonyms:
  - -d
  - --design
  args: !SimpleFlagArg
    name: DESIGN
  optional: true
- !Flag
  description: Name of the column with unique identifiers.
  synonyms:
  - -id
  - --ID
  args: !SimpleFlagArg
    name: UNIQID
  optional: true
- !Flag
  description: Group/treatment identifier in design file [Optional].
  synonyms:
  - -g
  - --group
  args: !SimpleFlagArg
    name: GROUP
  optional: true
- !Flag
  description: Name of the column on design file that contains run order
  synonyms:
  - -o
  - --order
  args: !SimpleFlagArg
    name: ORDER
  optional: true
- !Flag
  description: Different groups to sort by separeted by commas.
  synonyms:
  - -l
  - --levels
  args: !SimpleFlagArg
    name: LEVELS
  optional: true
- !Flag
  description: Name of PDF to save scatter plots.
  synonyms:
  - -f
  - --fig
  args: !SimpleFlagArg
    name: FIGURE
  optional: true
- !Flag
  description: Name of table for scatter plots
  synonyms:
  - -t
  - --table
  args: !SimpleFlagArg
    name: TABLE
  optional: true
- !Flag
  description: Name of table flags
  synonyms:
  - -fl
  - --flags
  args: !SimpleFlagArg
    name: FLAGS
  optional: true
- !Flag
  description: Add debugging log output.
  synonyms:
  - -dg
  - --debug
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Name of the palette to use.
  synonyms:
  - -pal
  - --palette
  args: !SimpleFlagArg
    name: PALETTE
  optional: true
- !Flag
  description: Name of a valid color scheme on the selected palette
  synonyms:
  - -col
  - --color
  args: !SimpleFlagArg
    name: COLOR
  optional: true
command:
- run_order_regression.py
parent:
subcommands: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: run_order_regression.py [-h] -i INPUT -d DESIGN -id UNIQID -g GROUP\
  \ -o\n                               ORDER [-l LEVELS] -f FIGURE -t TABLE -fl FLAGS\n\
  \                               [-dg] [-pal PALETTE] [-col COLOR]\n\n \n\noptional\
  \ arguments:\n  -h, --help            show this help message and exit\n\nStandard\
  \ input:\n  Standard input for SECIM tools.\n\n  -i INPUT, --input INPUT\n     \
  \                   Input dataset in wide format.\n  -d DESIGN, --design DESIGN\n\
  \                        Design file.\n  -id UNIQID, --ID UNIQID\n             \
  \           Name of the column with unique identifiers.\n  -g GROUP, --group GROUP\n\
  \                        Group/treatment identifier in design file [Optional].\n\
  \  -o ORDER, --order ORDER\n                        Name of the column on design\
  \ file that contains run\n                        order\n  -l LEVELS, --levels LEVELS\n\
  \                        Different groups to sort by separeted by commas.\n\nRequired\
  \ Output:\n  -f FIGURE, --fig FIGURE\n                        Name of PDF to save\
  \ scatter plots.\n  -t TABLE, --table TABLE\n                        Name of table\
  \ for scatter plots\n  -fl FLAGS, --flags FLAGS\n                        Name of\
  \ table flags\n\nDevelopment Settings:\n  -dg, --debug          Add debugging log\
  \ output.\n\nPlot options:\n  -pal PALETTE, --palette PALETTE\n                \
  \        Name of the palette to use.\n  -col COLOR, --color COLOR\n            \
  \            Name of a valid color scheme on the selected palette\n"
generated_using:
- --help
