!Command
command:
- fastqStatsAndSubsample
positional:
- !Positional
  description: ''
  position: 0
  name: in.fastq
  optional: false
- !Positional
  description: ''
  position: 1
  name: out.stats
  optional: false
named:
- !Flag
  description: '- default 100000'
  synonyms:
  - -sampleSize
  args: !SimpleFlagArg
    name: N
  optional: true
- !Flag
  description: '- Use given seed for random number generator.  Default 0.'
  synonyms:
  - -seed
  args: !SimpleFlagArg
    name: N
  optional: true
- !Flag
  description: '- Not an error if less than sampleSize reads.  out.fastq will be entire
    in.fastq'
  synonyms:
  - -smallOk
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '- out.stats will be in json rather than text format'
  synonyms:
  - -json
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "fastqStatsAndSubsample v2 - Go through a fastq file doing sanity checks\
  \ and collecting stats\nand also producing a smaller fastq out of a sample of the\
  \ data.  The fastq input may be\ncompressed with gzip or bzip2.\nPaired-end samples:\
  \ run on both files, the seed is fixed so it will chose the paired reads\nusage:\n\
  \   fastqStatsAndSubsample in.fastq out.stats out.fastq\noptions:\n   -sampleSize=N\
  \ - default 100000\n   -seed=N - Use given seed for random number generator.  Default\
  \ 0.\n   -smallOk - Not an error if less than sampleSize reads.  out.fastq will\
  \ be entire in.fastq\n   -json - out.stats will be in json rather than text format\n\
  Use /dev/null for out.fastq and/or out.stats if not interested in these outputs\n\
  \n"
generated_using: []
