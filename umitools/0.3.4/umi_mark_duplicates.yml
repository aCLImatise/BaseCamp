!Command
command:
- umi_mark_duplicates
positional: []
named:
- !Flag
  description: the input bam file
  synonyms:
  - -f
  - --file
  args: !SimpleFlagArg
    name: FILE
  optional: true
- !Flag
  description: number of processes
  synonyms:
  - -p
  - --processes
  args: !SimpleFlagArg
    name: PROCESSES
  optional: true
- !Flag
  description: turn on debug mode
  synonyms:
  - -d
  - --debug
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Count the number of raw reads for each locus\n(determined by pairs)\n"
  synonyms:
  - -c
  - --count
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: umi_mark_duplicates [-h] -f FILE [-p PROCESSES] [-d] [-c]\n\nA\
  \ pair of FASTQ files are first reformatted using reformat_umi_fastq.py and\nthen\
  \ is aligned to get the bam file. This script can parse the umi barcode in\nthe\
  \ name of each read to mark duplicates. This script is also known as\numitools mark.\n\
  \noptional arguments:\n  -h, --help            show this help message and exit\n\
  \  -f FILE, --file FILE  the input bam file\n  -p PROCESSES, --processes PROCESSES\n\
  \                        number of processes\n  -d, --debug           turn on debug\
  \ mode\n  -c, --count           Count the number of raw reads for each locus\n \
  \                       (determined by pairs)\n"
generated_using:
- --help
