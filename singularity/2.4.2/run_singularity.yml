!Command
positional:
- !Positional
  description: ''
  position: 0
  name: singularity
  optional: false
named:
- !Flag
  description: Run an app's runscript instead of the default one
  synonyms:
  - -a
  - --app
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: A user-bind path specification.  spec has the format src[:dest[:opts]],
    where src and dest are outside and inside paths.  If dest is not given, it is
    set equal to src.  Mount options ('opts') may be specified as 'ro' (read-only)
    or 'rw' (read/write, which is the  default). This option can be called multiple
    times.
  synonyms:
  - -B
  - --bind
  args: !SimpleFlagArg
    name: spec
  optional: true
- !Flag
  description: Use minimal /dev and empty other directories (e.g. /tmp and /home/ubuntu)
    instead of sharing filesystems on your host
  synonyms:
  - -c
  - --contain
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Contain not only file systems, but also PID and IPC
  synonyms:
  - -C
  - --containall
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Clean environment before running container
  synonyms:
  - -e
  - --cleanenv
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: A home directory specification.  spec can either be a src path or src:dest
    pair.  src is the source path of the home directory outside the container and
    dest overrides the home directory within the container
  synonyms:
  - -H
  - --home
  args: !SimpleFlagArg
    name: spec
  optional: true
- !Flag
  description: Run container in a new IPC namespace
  synonyms:
  - -i
  - --ipc
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Run container in a new network namespace (loopback is only network
    device active)
  synonyms:
  - -n
  - --net
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Enable experimental Nvidia support
  synonyms:
  - --nv
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Use a persistent overlayFS via a writable image
  synonyms:
  - -o
  - --overlay
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Run container in a new PID namespace
  synonyms:
  - -p
  - --pid
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Initial working directory for payload process inside the container
  synonyms:
  - --pwd
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Include a scratch directory within the container that  is linked to
    a temporary dir (use -W to force location)
  synonyms:
  - -S
  - --scratch
  args: !SimpleFlagArg
    name: path
  optional: true
- !Flag
  description: Run container in a new user namespace (this allows Singularity to run
    completely unprivileged on recent kernels and doesn't support all features)
  synonyms:
  - -u
  - --userns
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Working directory to be used for /tmp, /var/tmp and /home/ubuntu (if
    -c/--contain was also used)
  synonyms:
  - -W
  - --workdir
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: By default all Singularity containers are available as read only. This
    option makes the file system accessible as read/write.
  synonyms:
  - -w
  - --writable
  args: !EmptyFlagArg {}
  optional: true
command:
- run-singularity
parent:
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "USAGE: singularity [...] run [run options...] <container path> [...]\n\
  \nThis command will launch a Singularity container and execute a runscript\nif one\
  \ is defined for that container. The runscript is a file at\n'/singularity'. If\
  \ this file is present (and executable) then this\ncommand will execute that file\
  \ within the container automatically. All\narguments following the container name\
  \ will be passed directly to the\nrunscript.\n\n\nRUN OPTIONS:\n    -a|--app   \
  \         Run an app's runscript instead of the default one\n    -B|--bind <spec>\
  \    A user-bind path specification.  spec has the format\n                    \
  \    src[:dest[:opts]], where src and dest are outside and\n                   \
  \     inside paths.  If dest is not given, it is set equal\n                   \
  \     to src.  Mount options ('opts') may be specified as\n                    \
  \    'ro' (read-only) or 'rw' (read/write, which is the \n                     \
  \   default). This option can be called multiple times.\n    -c|--contain      \
  \  Use minimal /dev and empty other directories (e.g. /tmp\n                   \
  \     and /home/ubuntu) instead of sharing filesystems on your host\n    -C|--containall\
  \     Contain not only file systems, but also PID and IPC\n    -e|--cleanenv   \
  \    Clean environment before running container\n    -H|--home <spec>    A home\
  \ directory specification.  spec can either be a\n                        src path\
  \ or src:dest pair.  src is the source path\n                        of the home\
  \ directory outside the container and dest\n                        overrides the\
  \ home directory within the container\n    -i|--ipc            Run container in\
  \ a new IPC namespace\n    -n|--net            Run container in a new network namespace\
  \ (loopback is\n                        only network device active)\n    --nv  \
  \              Enable experimental Nvidia support\n    -o|--overlay        Use a\
  \ persistent overlayFS via a writable image\n    -p|--pid            Run container\
  \ in a new PID namespace\n    --pwd               Initial working directory for\
  \ payload process inside\n                        the container\n    -S|--scratch\
  \ <path> Include a scratch directory within the container that \n              \
  \          is linked to a temporary dir (use -W to force location)\n    -u|--userns\
  \         Run container in a new user namespace (this allows\n                 \
  \       Singularity to run completely unprivileged on recent\n                 \
  \       kernels and doesn't support all features)\n    -W|--workdir        Working\
  \ directory to be used for /tmp, /var/tmp and\n                        /home/ubuntu\
  \ (if -c/--contain was also used)\n    -w|--writable       By default all Singularity\
  \ containers are available as\n                        read only. This option makes\
  \ the file system accessible\n                        as read/write.\n\nCONTAINER\
  \ FORMATS SUPPORTED:\n    *.sqsh              SquashFS format.  Native to Singularity\
  \ 2.4+\n    *.img               This is the native Singularity image format for\
  \ all\n                        Singularity versions < 2.4.\n    *.tar*         \
  \     Tar archives are exploded to a temporary directory and\n                 \
  \       run within that directory (and cleaned up after). The\n                \
  \        contents of the archive is a root file system with root\n             \
  \           being in the current directory. Compression suffixes as\n          \
  \              '.gz' and '.bz2' are supported.\n    directory/          Container\
  \ directories that contain a valid root file\n                        system.\n\
  \    instance://*        A local running instance of a container. (See the\n   \
  \                     instance command group.)\n    shub://*            A container\
  \ hosted on Singularity Hub\n    docker://*          A container hosted on Docker\
  \ Hub\n\n\nEXAMPLES:\n\n    # Here we see that the runscript prints \"Hello world:\
  \ \"\n    $ singularity exec /tmp/Debian.img cat /singularity\n    #!/bin/sh\n \
  \   echo \"Hello world: \"\n\n    # It runs with our inputs when we run the image\n\
  \    $ singularity run /tmp/Debian.img one two three\n    Hello world: one two three\n\
  \n    # Note that this does the same thing\n    $ ./tmp/Debian.img one two three\n\
  \nFor additional help, please visit our public documentation pages which are\nfound\
  \ at:\n\n    http://singularity.lbl.gov/\n\n"
generated_using:
- --help
