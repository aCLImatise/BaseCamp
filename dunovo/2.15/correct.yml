!Command
positional:
- !Positional
  description: "The sorted output of make-barcodes.awk. The important part is that\
    \ it's a tab-delimited file with at least 2 columns: the barcode sequence and\
    \ order, and it must be sorted in the same order as the \"reads\" in the SAM file."
  position: 0
  name: families
  optional: false
- !Positional
  description: The fasta/q file given to the aligner. Used to get barcode sequences
    from read names.
  position: 1
  name: reads
  optional: false
- !Positional
  description: Barcode alignment, in SAM format. Omit to read from stdin. The read
    names must be integers, representing the (1-based) order they appear in the families
    file.
  position: 2
  name: sam
  optional: false
named:
- !Flag
  description: Print debug messages (very verbose).
  synonyms:
  - -D
  - --debug
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Report helpful usage data to the developer, to better understand the
    use cases and performance of the tool. The only data which will be recorded is
    the name and version of the tool, the size of the input data, the time and memory
    taken to process it, and the IP address of the machine running it. Also, if the
    script fails, it will report the name of the exception thrown and the line of
    code it occurred in. No parameters or filenames are sent. All the reporting and
    recording code is available at https://github.com/NickSto/ET.
  synonyms:
  - --phone-home
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Tell the script it's running on Galaxy. Currently this only affects
    data reported when phoning home.
  synonyms:
  - --galaxy
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: If reporting usage data, mark this as a test run.
  synonyms:
  - --test
  args: !EmptyFlagArg {}
  optional: true
command:
- correct.py
parent:
subcommands: []
help_flag:
usage_flag:
version_flag: !Flag
  description: Print the version number and exit.
  synonyms:
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "usage: $ correct.py [options] families.tsv barcodes.fa barcodes.sam >\
  \ families.corrected.tsv\n\nCorrect barcodes using an alignment of all barcodes\
  \ to themselves. Reads the\nalignment in SAM format and corrects the barcodes in\
  \ an input \"families\" file\n(the output of make-barcodes.awk). It will print the\
  \ \"families\" file to stdout\nwith barcodes (and orders) corrected.\n\npositional\
  \ arguments:\n  families              The sorted output of make-barcodes.awk. The\
  \ important\n                        part is that it's a tab-delimited file with\
  \ at least 2\n                        columns: the barcode sequence and order, and\
  \ it must\n                        be sorted in the same order as the \"reads\"\
  \ in the SAM\n                        file.\n  reads                 The fasta/q\
  \ file given to the aligner. Used to get\n                        barcode sequences\
  \ from read names.\n  sam                   Barcode alignment, in SAM format. Omit\
  \ to read from\n                        stdin. The read names must be integers,\
  \ representing\n                        the (1-based) order they appear in the families\
  \ file.\n\noptional arguments:\n  -h, --help            show this help message and\
  \ exit\n  -P, --prepend         Prepend the corrected barcodes and orders to the\n\
  \                        original columns.\n  -d DIST, --dist DIST  NM edit distance\
  \ threshold. Default: 1\n  -m MAPQ, --mapq MAPQ  MAPQ threshold. Default: 20\n \
  \ -p POS, --pos POS     POS tolerance. Alignments will be ignored if abs(POS -\n\
  \                        1) is greater than this value. Set to greater than the\n\
  \                        barcode length for no threshold. Default: 2\n  -c {count,connect},\
  \ --choose-by {count,connect}\n                        Choose the \"correct\" barcode\
  \ in a network of related\n                        barcodes by either the count\
  \ of how many times the\n                        barcode was observed (\"freq\"\
  ) or how connected the\n                        barcode is to the others in the\
  \ network (\"connect\").\n  -I, --no-check-ids    Don't check to make sure read\
  \ pairs have identical\n                        ids. By default, if this encounters\
  \ a pair of reads in\n                        families.tsv with ids that aren't\
  \ identical (minus an\n                        ending /1 or /2), it will throw an\
  \ error.\n  --limit LIMIT         Limit the number of lines that will be read from\
  \ each\n                        input file, for testing purposes.\n  -S, --structures\
  \      Print a list of the unique isoforms\n  --struct-human\n  -V [networks.png],\
  \ --visualize [networks.png]\n                        Produce a visualization of\
  \ the unique structures and\n                        write the image to this file.\
  \ If you omit a filename,\n                        it will be displayed in a window.\n\
  \  -F {dot,graphviz,png}, --viz-format {dot,graphviz,png}\n  -n, --no-output\n \
  \ -l LOG, --log LOG     Print log messages to this file instead of to stderr.\n\
  \                        Warning: Will overwrite the file.\n  -q, --quiet\n  -i,\
  \ --info\n  -v, --verbose\n  -D, --debug           Print debug messages (very verbose).\n\
  \  --phone-home          Report helpful usage data to the developer, to better\n\
  \                        understand the use cases and performance of the tool.\n\
  \                        The only data which will be recorded is the name and\n\
  \                        version of the tool, the size of the input data, the\n\
  \                        time and memory taken to process it, and the IP\n     \
  \                   address of the machine running it. Also, if the script\n   \
  \                     fails, it will report the name of the exception thrown\n \
  \                       and the line of code it occurred in. No parameters or\n\
  \                        filenames are sent. All the reporting and recording\n \
  \                       code is available at https://github.com/NickSto/ET.\n  --galaxy\
  \              Tell the script it's running on Galaxy. Currently this\n        \
  \                only affects data reported when phoning home.\n  --test       \
  \         If reporting usage data, mark this as a test run.\n  --version       \
  \      Print the version number and exit.\n"
generated_using:
- --help
