!Command
positional:
- !Positional
  description: Input FASTA reads. Omit to read from stdin.
  position: 0
  name: reads.fa
  optional: false
named: []
command:
- safety-not-guaranteed.py
parent:
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "usage: $ safety-not-guaranteed.py -q [phred score] reads.fa > reads.fq\n\
  \nConvert FASTA to FASTQ.\n\npositional arguments:\n  reads.fa              Input\
  \ FASTA reads. Omit to read from stdin.\n\noptional arguments:\n  -h, --help   \
  \         show this help message and exit\n  -o reads.fq, --output reads.fq\n  \
  \                      Write output FASTQ reads to this file. If not given,\n  \
  \                      will print to stdout.\n  -q PHRED_SCORE, --phred-score PHRED_SCORE\n\
  \                        The quality score to give to all bases. There is no\n \
  \                       meaningful quality score we can automatically give, so\n\
  \                        you will have to specify an artificial one. A good\n  \
  \                      choice is 40, the maximum score normally output by\n    \
  \                    sequencers.\n  -F {sanger,solexa}, --qual-format {sanger,solexa}\n\
  \                        FASTQ quality score format. Sanger scores are assumed\n\
  \                        to begin at '33' (!). Default: sanger.\n  -l LOG, --log\
  \ LOG     Print log messages to this file instead of to stderr.\n              \
  \          Warning: Will overwrite the file.\n  -Q, --quiet\n  -v, --verbose\n \
  \ -D, --debug\n\nWARNING: There is no quality information in a FASTA, so this must\
  \ use a dummy\nvalue for the quality scores. This is inherently false/artifactual\n\
  information, so keep that in mind when using the output in downstream tools.\n"
generated_using:
- --help
