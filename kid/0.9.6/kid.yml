!Command
command:
- kid
positional:
- !Positional
  description: ''
  position: 0
  name: file
  optional: false
- !Positional
  description: ''
  position: 1
  name: args
  optional: true
named:
- !Flag
  description: "Specify the output character encoding.\nDefault: utf-8"
  synonyms:
  - -e
  - --encoding
  args: !SimpleFlagArg
    name: enc
  optional: true
- !Flag
  description: "Specify the output file.\nDefault: standard output"
  synonyms:
  - -o
  - --output
  args: !SimpleFlagArg
    name: outfile
  optional: true
- !Flag
  description: ":port, --server=host:port\nSpecify the server address if\nyou want\
    \ to start the HTTP server.\nInstead of the Kid template,\nyou can specify a base\
    \ directory."
  synonyms:
  - -s
  args: !SimpleFlagArg
    name: host
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: Print this help message and exit.
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: Print the Kid version number and exit.
  synonyms:
  - -V
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "Usage: kid [options] file [args]\nExpand a Kid template file.\n\nOPTIONS:\n\
  \n  -e enc, --encoding=enc\n          Specify the output character encoding.\n \
  \         Default: utf-8\n  -o outfile, --output=outfile\n          Specify the\
  \ output file.\n          Default: standard output\n  -s host:port, --server=host:port\n\
  \          Specify the server address if\n          you want to start the HTTP server.\n\
  \          Instead of the Kid template,\n          you can specify a base directory.\n\
  \  -h, --help\n          Print this help message and exit.\n  -V, --version\n  \
  \        Print the Kid version number and exit.\n\nfile:\n  filename of the Kid\
  \ template to be processed\n  or \"-\" for reading the template from stdin.\n\n\
  args:\n  key=value or other arguments passed to the template.\n"
generated_using:
- --help
