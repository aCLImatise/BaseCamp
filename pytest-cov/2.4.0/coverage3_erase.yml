&id003 !Command
command:
- coverage3
- erase
positional: []
named:
- !Flag
  description: Debug options, separated by commas
  synonyms:
  - --debug
  args: !SimpleFlagArg
    name: OPTS
  optional: true
- !Flag
  description: Specify configuration file.  Defaults to '.coveragerc'
  synonyms:
  - --rcfile
  args: !SimpleFlagArg
    name: RCFILE
  optional: true
parent: &id001 !Command
  command:
  - coverage3
  positional: []
  named: []
  parent:
  subcommands:
  - !Command
    command:
    - coverage3
    - report
    positional:
    - !Positional
      description: ''
      position: 0
      name: modules
      optional: true
    named:
    - !Flag
      description: "Exit with a status of 2 if the total coverage is less\nthan MIN."
      synonyms:
      - --fail-under
      args: !SimpleFlagArg
        name: MIN
      optional: true
    - !Flag
      description: Ignore errors while reading source files.
      synonyms:
      - -i
      - --ignore-errors
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ",PAT2,...\nInclude only files whose paths match one of these\n\
        patterns. Accepts shell-style wildcards, which must be\nquoted."
      synonyms:
      - --include
      args: !SimpleFlagArg
        name: PAT1
      optional: true
    - !Flag
      description: ",PAT2,...  Omit files whose paths match one of these patterns.\n\
        Accepts shell-style wildcards, which must be quoted."
      synonyms:
      - --omit
      args: !SimpleFlagArg
        name: PAT1
      optional: true
    - !Flag
      description: "Show line numbers of statements in each module that\nweren't executed."
      synonyms:
      - -m
      - --show-missing
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Skip files with 100% coverage.
      synonyms:
      - --skip-covered
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Debug options, separated by commas
      synonyms:
      - --debug
      args: !SimpleFlagArg
        name: OPTS
      optional: true
    - !Flag
      description: Specify configuration file.  Defaults to '.coveragerc'
      synonyms:
      - --rcfile
      args: !SimpleFlagArg
        name: RCFILE
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Get help on this command.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: coverage3 report [options] [modules]\n\nReport coverage statistics\
      \ on modules.\n\nOptions:\n  --fail-under=MIN      Exit with a status of 2 if\
      \ the total coverage is less\n                        than MIN.\n  -i, --ignore-errors\
      \   Ignore errors while reading source files.\n  --include=PAT1,PAT2,...\n \
      \                       Include only files whose paths match one of these\n\
      \                        patterns. Accepts shell-style wildcards, which must\
      \ be\n                        quoted.\n  --omit=PAT1,PAT2,...  Omit files whose\
      \ paths match one of these patterns.\n                        Accepts shell-style\
      \ wildcards, which must be quoted.\n  -m, --show-missing    Show line numbers\
      \ of statements in each module that\n                        weren't executed.\n\
      \  --skip-covered        Skip files with 100% coverage.\n  --debug=OPTS    \
      \      Debug options, separated by commas\n  -h, --help            Get help\
      \ on this command.\n  --rcfile=RCFILE       Specify configuration file.  Defaults\
      \ to '.coveragerc'\n"
    generated_using: &id002
    - --help
  - !Command
    command:
    - coverage3
    - html
    positional:
    - !Positional
      description: ''
      position: 0
      name: modules
      optional: true
    named:
    - !Flag
      description: Write the output files to DIR.
      synonyms:
      - -d
      - --directory
      args: !SimpleFlagArg
        name: DIR
      optional: true
    - !Flag
      description: "Exit with a status of 2 if the total coverage is less\nthan MIN."
      synonyms:
      - --fail-under
      args: !SimpleFlagArg
        name: MIN
      optional: true
    - !Flag
      description: Ignore errors while reading source files.
      synonyms:
      - -i
      - --ignore-errors
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ",PAT2,...\nInclude only files whose paths match one of these\n\
        patterns. Accepts shell-style wildcards, which must be\nquoted."
      synonyms:
      - --include
      args: !SimpleFlagArg
        name: PAT1
      optional: true
    - !Flag
      description: ",PAT2,...  Omit files whose paths match one of these patterns.\n\
        Accepts shell-style wildcards, which must be quoted."
      synonyms:
      - --omit
      args: !SimpleFlagArg
        name: PAT1
      optional: true
    - !Flag
      description: A text string to use as the title on the HTML.
      synonyms:
      - --title
      args: !SimpleFlagArg
        name: TITLE
      optional: true
    - !Flag
      description: Skip files with 100% coverage.
      synonyms:
      - --skip-covered
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Debug options, separated by commas
      synonyms:
      - --debug
      args: !SimpleFlagArg
        name: OPTS
      optional: true
    - !Flag
      description: Specify configuration file.  Defaults to '.coveragerc'
      synonyms:
      - --rcfile
      args: !SimpleFlagArg
        name: RCFILE
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Get help on this command.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: coverage3 html [options] [modules]\n\nCreate an HTML report\
      \ of the coverage of the files.  Each file gets its own\npage, with the source\
      \ decorated to show executed, excluded, and missed lines.\n\nOptions:\n  -d\
      \ DIR, --directory=DIR\n                        Write the output files to DIR.\n\
      \  --fail-under=MIN      Exit with a status of 2 if the total coverage is less\n\
      \                        than MIN.\n  -i, --ignore-errors   Ignore errors while\
      \ reading source files.\n  --include=PAT1,PAT2,...\n                       \
      \ Include only files whose paths match one of these\n                      \
      \  patterns. Accepts shell-style wildcards, which must be\n                \
      \        quoted.\n  --omit=PAT1,PAT2,...  Omit files whose paths match one of\
      \ these patterns.\n                        Accepts shell-style wildcards, which\
      \ must be quoted.\n  --title=TITLE         A text string to use as the title\
      \ on the HTML.\n  --skip-covered        Skip files with 100% coverage.\n  --debug=OPTS\
      \          Debug options, separated by commas\n  -h, --help            Get help\
      \ on this command.\n  --rcfile=RCFILE       Specify configuration file.  Defaults\
      \ to '.coveragerc'\n"
    generated_using: *id002
  - !Command
    command:
    - coverage3
    - xml
    positional:
    - !Positional
      description: ''
      position: 0
      name: modules
      optional: true
    named:
    - !Flag
      description: "Exit with a status of 2 if the total coverage is less\nthan MIN."
      synonyms:
      - --fail-under
      args: !SimpleFlagArg
        name: MIN
      optional: true
    - !Flag
      description: Ignore errors while reading source files.
      synonyms:
      - -i
      - --ignore-errors
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ",PAT2,...\nInclude only files whose paths match one of these\n\
        patterns. Accepts shell-style wildcards, which must be\nquoted."
      synonyms:
      - --include
      args: !SimpleFlagArg
        name: PAT1
      optional: true
    - !Flag
      description: ",PAT2,...  Omit files whose paths match one of these patterns.\n\
        Accepts shell-style wildcards, which must be quoted."
      synonyms:
      - --omit
      args: !SimpleFlagArg
        name: PAT1
      optional: true
    - !Flag
      description: "Write the XML report to this file. Defaults to\n'coverage.xml'"
      synonyms:
      - -o
      args: !SimpleFlagArg
        name: OUTFILE
      optional: true
    - !Flag
      description: Debug options, separated by commas
      synonyms:
      - --debug
      args: !SimpleFlagArg
        name: OPTS
      optional: true
    - !Flag
      description: Specify configuration file.  Defaults to '.coveragerc'
      synonyms:
      - --rcfile
      args: !SimpleFlagArg
        name: RCFILE
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Get help on this command.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: coverage3 xml [options] [modules]\n\nGenerate an XML report\
      \ of coverage results.\n\nOptions:\n  --fail-under=MIN      Exit with a status\
      \ of 2 if the total coverage is less\n                        than MIN.\n  -i,\
      \ --ignore-errors   Ignore errors while reading source files.\n  --include=PAT1,PAT2,...\n\
      \                        Include only files whose paths match one of these\n\
      \                        patterns. Accepts shell-style wildcards, which must\
      \ be\n                        quoted.\n  --omit=PAT1,PAT2,...  Omit files whose\
      \ paths match one of these patterns.\n                        Accepts shell-style\
      \ wildcards, which must be quoted.\n  -o OUTFILE            Write the XML report\
      \ to this file. Defaults to\n                        'coverage.xml'\n  --debug=OPTS\
      \          Debug options, separated by commas\n  -h, --help            Get help\
      \ on this command.\n  --rcfile=RCFILE       Specify configuration file.  Defaults\
      \ to '.coveragerc'\n"
    generated_using: *id002
  - !Command
    command:
    - coverage3
    - combine
    positional:
    - !Positional
      description: ''
      position: 0
      name: pathN
      optional: false
    named:
    - !Flag
      description: "Append coverage data to .coverage, otherwise it starts\nclean\
        \ each time."
      synonyms:
      - -a
      - --append
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Debug options, separated by commas
      synonyms:
      - --debug
      args: !SimpleFlagArg
        name: OPTS
      optional: true
    - !Flag
      description: Specify configuration file.  Defaults to '.coveragerc'
      synonyms:
      - --rcfile
      args: !SimpleFlagArg
        name: RCFILE
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Get help on this command.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: coverage3 combine [options] <path1> <path2> ... <pathN>\n\n\
      Combine data from multiple coverage files collected with 'run -p'.  The\ncombined\
      \ results are written to a single file representing the union of the\ndata.\
      \ The positional arguments are data files or directories containing data\nfiles.\
      \ If no paths are provided, data files in the default data file's\ndirectory\
      \ are combined.\n\nOptions:\n  -a, --append     Append coverage data to .coverage,\
      \ otherwise it starts\n                   clean each time.\n  --debug=OPTS \
      \    Debug options, separated by commas\n  -h, --help       Get help on this\
      \ command.\n  --rcfile=RCFILE  Specify configuration file.  Defaults to '.coveragerc'\n"
    generated_using: *id002
  - !Command
    command:
    - coverage3
    - run
    positional:
    - !Positional
      description: --concurrency=LIB     Properly measure code using a concurrency
        library.
      position: 0
      name: coverage.
      optional: false
    - !Positional
      description: --include=PAT1,PAT2,...
      position: 0
      name: multiprocessing.
      optional: false
    - !Positional
      description: -m, --module          <pyfile> is an importable Python module,
        not a script
      position: 0
      name: quoted.
      optional: false
    named:
    - !Flag
      description: "Append coverage data to .coverage, otherwise it starts\nclean\
        \ each time."
      synonyms:
      - -a
      - --append
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Measure branch coverage in addition to statement
      synonyms:
      - --branch
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ",PAT2,...  Omit files whose paths match one of these patterns.\n\
        Accepts shell-style wildcards, which must be quoted."
      synonyms:
      - --omit
      args: !SimpleFlagArg
        name: PAT1
      optional: true
    - !Flag
      description: "Measure coverage even inside the Python installed\nlibrary, which\
        \ isn't done by default."
      synonyms:
      - -L
      - --pylib
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Append the machine name, process id and random number\nto the\
        \ .coverage data file name to simplify collecting\ndata from many processes."
      synonyms:
      - -p
      - --parallel-mode
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ",SRC2,...\nA list of packages or directories of code to be\nmeasured."
      synonyms:
      - --source
      args: !SimpleFlagArg
        name: SRC1
      optional: true
    - !Flag
      description: "Use a simpler but slower trace method.  Try this if\nyou get seemingly\
        \ impossible results!"
      synonyms:
      - --timid
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Debug options, separated by commas
      synonyms:
      - --debug
      args: !SimpleFlagArg
        name: OPTS
      optional: true
    - !Flag
      description: Specify configuration file.  Defaults to '.coveragerc'
      synonyms:
      - --rcfile
      args: !SimpleFlagArg
        name: RCFILE
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Get help on this command.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: coverage3 run [options] <pyfile> [program options]\n\nRun a\
      \ Python program, measuring code execution.\n\nOptions:\n  -a, --append    \
      \      Append coverage data to .coverage, otherwise it starts\n            \
      \            clean each time.\n  --branch              Measure branch coverage\
      \ in addition to statement\n                        coverage.\n  --concurrency=LIB\
      \     Properly measure code using a concurrency library.\n                 \
      \       Valid values are: thread, gevent, greenlet, eventlet,\n            \
      \            multiprocessing.\n  --include=PAT1,PAT2,...\n                 \
      \       Include only files whose paths match one of these\n                \
      \        patterns. Accepts shell-style wildcards, which must be\n          \
      \              quoted.\n  -m, --module          <pyfile> is an importable Python\
      \ module, not a script\n                        path, to be run as 'python -m'\
      \ would run it.\n  --omit=PAT1,PAT2,...  Omit files whose paths match one of\
      \ these patterns.\n                        Accepts shell-style wildcards, which\
      \ must be quoted.\n  -L, --pylib           Measure coverage even inside the\
      \ Python installed\n                        library, which isn't done by default.\n\
      \  -p, --parallel-mode   Append the machine name, process id and random number\n\
      \                        to the .coverage data file name to simplify collecting\n\
      \                        data from many processes.\n  --source=SRC1,SRC2,...\n\
      \                        A list of packages or directories of code to be\n \
      \                       measured.\n  --timid               Use a simpler but\
      \ slower trace method.  Try this if\n                        you get seemingly\
      \ impossible results!\n  --debug=OPTS          Debug options, separated by commas\n\
      \  -h, --help            Get help on this command.\n  --rcfile=RCFILE      \
      \ Specify configuration file.  Defaults to '.coveragerc'\n"
    generated_using: *id002
  - *id003
  - !Command
    command:
    - coverage3
    - annotate
    positional:
    - !Positional
      description: ''
      position: 0
      name: modules
      optional: true
    named:
    - !Flag
      description: Write the output files to DIR.
      synonyms:
      - -d
      - --directory
      args: !SimpleFlagArg
        name: DIR
      optional: true
    - !Flag
      description: Ignore errors while reading source files.
      synonyms:
      - -i
      - --ignore-errors
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ",PAT2,...\nInclude only files whose paths match one of these\n\
        patterns. Accepts shell-style wildcards, which must be\nquoted."
      synonyms:
      - --include
      args: !SimpleFlagArg
        name: PAT1
      optional: true
    - !Flag
      description: ",PAT2,...  Omit files whose paths match one of these patterns.\n\
        Accepts shell-style wildcards, which must be quoted."
      synonyms:
      - --omit
      args: !SimpleFlagArg
        name: PAT1
      optional: true
    - !Flag
      description: Debug options, separated by commas
      synonyms:
      - --debug
      args: !SimpleFlagArg
        name: OPTS
      optional: true
    - !Flag
      description: Specify configuration file.  Defaults to '.coveragerc'
      synonyms:
      - --rcfile
      args: !SimpleFlagArg
        name: RCFILE
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: Get help on this command.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: coverage3 annotate [options] [modules]\n\nMake annotated copies\
      \ of the given files, marking statements that are executed\nwith > and statements\
      \ that are missed with !.\n\nOptions:\n  -d DIR, --directory=DIR\n         \
      \               Write the output files to DIR.\n  -i, --ignore-errors   Ignore\
      \ errors while reading source files.\n  --include=PAT1,PAT2,...\n          \
      \              Include only files whose paths match one of these\n         \
      \               patterns. Accepts shell-style wildcards, which must be\n   \
      \                     quoted.\n  --omit=PAT1,PAT2,...  Omit files whose paths\
      \ match one of these patterns.\n                        Accepts shell-style\
      \ wildcards, which must be quoted.\n  --debug=OPTS          Debug options, separated\
      \ by commas\n  -h, --help            Get help on this command.\n  --rcfile=RCFILE\
      \       Specify configuration file.  Defaults to '.coveragerc'\n"
    generated_using: *id002
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "Coverage.py, version 4.3.4 with C extension\nMeasure, collect, and report\
    \ on code coverage in Python programs.\n\nusage: coverage3 <command> [options]\
    \ [args]\n\nCommands:\n    annotate    Annotate source files with execution information.\n\
    \    combine     Combine a number of data files.\n    erase       Erase previously\
    \ collected coverage data.\n    help        Get help on using coverage.py.\n \
    \   html        Create an HTML report.\n    report      Report coverage stats\
    \ on modules.\n    run         Run a Python program and measure code execution.\n\
    \    xml         Create an XML report of coverage results.\n\nUse \"coverage3\
    \ help <command>\" for detailed help on any command.\nFor full documentation,\
    \ see https://coverage.readthedocs.io\n"
  generated_using: *id002
subcommands: []
usage: []
help_flag: !Flag
  description: Get help on this command.
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "Usage: coverage3 erase [options]\n\nErase previously collected coverage\
  \ data.\n\nOptions:\n  --debug=OPTS     Debug options, separated by commas\n  -h,\
  \ --help       Get help on this command.\n  --rcfile=RCFILE  Specify configuration\
  \ file.  Defaults to '.coveragerc'\n"
generated_using: *id002
