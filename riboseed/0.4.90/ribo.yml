&id001 !Command
positional: []
named: []
command:
- ribo
parent:
subcommands:
- !Command
  positional: []
  named:
  - !Flag
    description: "if your cores are hyperthreaded, set number threads to the number\
      \ of threads per processer.If unsure, see 'cat /proc/cpuinfo' under 'cpu cores',\
      \ or 'lscpu' under 'Thread(s) per core'.: 1"
    synonyms:
    - -t
    - --threads
    args: !ChoiceFlagArg
      choices: !!set
        ? "1"
        ? "2"
        ? "4"
    optional: true
  - !Flag
    description: 'include these libraries in final assembly in addition to the reads
      supplied as -F and -R. They must be supplied according to SPAdes arg naming
      scheme. Use at own risk.default: None'
    synonyms:
    - --additional_libs
    args: !SimpleFlagArg
      name: str
    optional: true
  - !Flag
    description: 'if --serialize, runs seeding and assembly without multiprocessing.
      We recommend this for machines with less than 8GB RAM: False'
    synonyms:
    - -z
    - --serialize
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: ''
    synonyms:
    - -r
    args: !SimpleFlagArg
      name: reference.fasta
    optional: true
  - !Flag
    description: ''
    synonyms:
    - -c
    args: !SimpleFlagArg
      name: config_file
    optional: true
  command:
  - ribo
  - run
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: Displays this help message
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag: !Flag
    description: show program's version number and exit
    synonyms:
    - --version
    args: !EmptyFlagArg {}
    optional: true
  help_text: "usage: ribo run [-r reference.fasta] -c config_file [-o /output/dir/]\n\
    \                [-e experiment_name] [-K {bac,euk,arc,mito}] [-S 16S:23S:5S]\n\
    \                [--clusters str] [-C str] [-F reads_F.fq] [-R reads_R.fq]\n \
    \               [-S1 reads_S.fq] [-s int]\n                [--ref_as_contig {ignore,infer,trusted,untrusted}]\
    \ [--linear]\n                [--subassembler {spades,skesa}] [-j] [-l int]\n\
    \                [-k 21,33,55,77,99,127] [--force_kmers] [-p 21,33,55,77,99]\n\
    \                [-d int] [--clean_temps] [-i int] [--skip_control]\n        \
    \        [-v {1,2,3,4,5}] [--cores int] [--memory int]\n                [--damn_the_torpedos]\n\
    \                [--stages {sketch,spec,snag,score,stack,none} [{sketch,spec,snag,score,stack,none}\
    \ ...]]\n                [-t {1,2,4}] [--additional_libs str] [-z] [-h] [--version]\n\
    \nRun the riboSeed pipeline of scan, select, and seed, plus any additional\nstages.\
    \ Uses a config file to wrangle all the args not available via these\ncommandline\
    \ args. This can either be run by providing (as minimum) a\nreference, some reads,\
    \ and an output directory; or, if you have a completed\nconfig file, you can run\
    \ it with just that.\n\noptional arguments:\n  -r reference.fasta, --reference_fasta\
    \ reference.fasta\n                        path to a (multi)fasta or a directory\
    \ containing one\n                        or more chromosomal sequences in fasta\
    \ format.\n                        Required, unless using a config file\n  -c\
    \ config_file, --config config_file\n                        config file; if none\
    \ given, create one; default:\n                        /tmp/tmpdvlbjbbn\n  -o\
    \ /output/dir/, --output /output/dir/\n                        output directory;\
    \ default: /tmp/tmpdvlbjbbn/2020-06-25\n                        T1423_riboSeed_pipeline_results/\n\
    \  -e experiment_name, --experiment_name experiment_name\n                   \
    \     prefix for results files; default: inferred\n  -K {bac,euk,arc,mito}, --Kingdom\
    \ {bac,euk,arc,mito}\n                        whether to look for eukaryotic,\
    \ archaeal, or bacterial\n                        rDNA; default: bac\n  -S 16S:23S:5S,\
    \ --specific_features 16S:23S:5S\n                        colon:separated -- specific\
    \ features; default:\n                        16S:23S:5S\n  --clusters str   \
    \     number of rDNA clusters;if submitting multiple\n                       \
    \ records, must be a colon:separated list whose length\n                     \
    \   matches number of genbank records. Default is inferred\n                 \
    \       from specific feature with fewest hits\n  -C str, --cluster_file str\n\
    \                        clustered_loci file output from riboSelect;this is\n\
    \                        created by default from run_riboSeed, but if you don't\n\
    \                        agree with the operon structure predicted by\n      \
    \                  riboSelect, you can use your alternate clustered_loci\n   \
    \                     file. default: None\n  -F reads_F.fq, --fastq1 reads_F.fq\n\
    \                        path to forward fastq file, can be compressed\n  -R reads_R.fq,\
    \ --fastq2 reads_R.fq\n                        path to reverse fastq file, can\
    \ be compressed\n  -S1 reads_S.fq, --fastq_single1 reads_S.fq\n              \
    \          path to single fastq file\n  -s int, --score_min int\n            \
    \            If using smalt, this sets the '-m' param; default with\n        \
    \                smalt is inferred from read length. If using BWA,\n         \
    \               reads mapping with ASscore lower than this will be\n         \
    \               rejected; default with BWA is half of read length\n  --ref_as_contig\
    \ {ignore,infer,trusted,untrusted}\n                        ignore: reference\
    \ will not be used in subassembly.\n                        trusted: SPAdes will\
    \ use the seed sequences as a\n                        --trusted-contig; untrusted:\
    \ SPAdes will treat as\n                        --untrusted-contig. infer: if\
    \ mapping percentage over\n                        80%, 'trusted'; else 'untrusted'.\
    \ See SPAdes docs for\n                        details. default: infer\n  --linear\
    \              if genome is known to not be circular and a region of\n       \
    \                 interest (including flanking bits) extends past\n          \
    \              chromosome end, this extends the seqence past\n               \
    \         chromosome origin forward by --padding; default: False\n  --subassembler\
    \ {spades,skesa}\n                        assembler to use for subassembly scheme.\
    \ SPAdes is\n                        used by default, but Skesa is a new addition\
    \ that\n                        seems to work for subassembly and is faster\n\
    \  -j, --just_seed       Don't do an assembly, just generate the long read\n \
    \                       'seeds'; default: False\n  -l int, --flanking_length int\n\
    \                        length of flanking regions, in bp; default: 1000\n  -k\
    \ 21,33,55,77,99,127, --kmers 21,33,55,77,99,127\n                        kmers\
    \ used for final assembly, separated by commas\n                        such as21,33,55,77,99,127.\
    \ Can be set to 'auto', where\n                        SPAdes chooses. We ensure\
    \ kmers are not too big or too\n                        close to read length;\
    \ default: 21,33,55,77,99,127\n  --force_kmers         skip checking to see if\
    \ kmerchoice is appropriate to\n                        read length. Sometimes\
    \ kmers longer than reads can\n                        help in the final assembly,\
    \ as the long reads\n                        generated by riboSeed contain kmers\
    \ longer than the\n                        read length\n  -p 21,33,55,77,99, --pre_kmers\
    \ 21,33,55,77,99\n                        kmers used during seeding assemblies,\
    \ separated bt\n                        commas; default: 21,33,55,77,99\n  -d\
    \ int, --min_flank_depth int\n                        a subassembly won't be performed\
    \ if this minimum depth\n                        is not achieved on both the 3'\
    \ and5' end of the\n                        pseudocontig. default: 0\n  --clean_temps\
    \         if --clean_temps, mapping files will be removed once\n             \
    \           they are no no longer needed during the mapping\n                \
    \        iterations to save space; default: False\n  -i int, --iterations int\n\
    \                        if iterations>1, multiple seedings will occur after\n\
    \                        subassembly of seed regions; if setting --target_len,\n\
    \                        seedings will continue until --iterations are\n     \
    \                   completed or --target_len is matched or exceeded;\n      \
    \                  default: 3\n  --skip_control        if --skip_control, no de\
    \ novo assembly will be done;\n                        default: False\n  -v {1,2,3,4,5},\
    \ --verbosity {1,2,3,4,5}\n                        Logger writes debug to file\
    \ in output dir; this sets\n                        verbosity level sent to stderr.\
    \ 1 = debug(), 2 =\n                        info(), 3 = warning(), 4 = error()\
    \ and 5 = critical();\n                        default: 2\n  --cores int     \
    \      cores used; default: None\n  --memory int          cores for multiprocessing;\
    \ default: 8\n  --damn_the_torpedos   Ignore certain errors, full speed ahead!\n\
    \  --stages {sketch,spec,snag,score,stack,none} [{sketch,spec,snag,score,stack,none}\
    \ ...]\n                        Which assessment stages you wish to run: sketch,\
    \ spec,\n                        snag, score, stack. Any combination thereof\n\
    \  -t {1,2,4}, --threads {1,2,4}\n                        if your cores are hyperthreaded,\
    \ set number threads to\n                        the number of threads per processer.If\
    \ unsure, see\n                        'cat /proc/cpuinfo' under 'cpu cores',\
    \ or 'lscpu'\n                        under 'Thread(s) per core'.: 1\n  --additional_libs\
    \ str\n                        include these libraries in final assembly in addition\n\
    \                        to the reads supplied as -F and -R. They must be\n  \
    \                      supplied according to SPAdes arg naming scheme. Use at\n\
    \                        own risk.default: None\n  -z, --serialize       if --serialize,\
    \ runs seeding and assembly without\n                        multiprocessing.\
    \ We recommend this for machines with\n                        less than 8GB RAM:\
    \ False\n  -h, --help            Displays this help message\n  --version     \
    \        show program's version number and exit\n"
  generated_using: &id002
  - --help
- !Command
  positional:
  - !Positional
    description: either a (multi)fasta or a directory containing one or more chromosomal
      sequences in fasta format
    position: 0
    name: contigs
    optional: false
  named:
  - !Flag
    description: 'output directory; default: /tmp/tmpdvlbjbbn'
    synonyms:
    - -o
    - --output
    args: !SimpleFlagArg
      name: OUTPUT
    optional: true
  - !Flag
    description: 'whether to look for eukaryotic, archaeal, or bacterial rDNA; default:
      bac'
    synonyms:
    - -k
    - --kingdom
    args: !ChoiceFlagArg
      choices: !!set
        ? arc
        ? bac
        ? mito
        ? euk
    optional: true
  - !Flag
    description: 'partial rRNA hits below this threshold will be ignored. default:
      0.5'
    synonyms:
    - -t
    - --id_thresh
    args: !SimpleFlagArg
      name: ID_THRESH
    optional: true
  - !Flag
    description: 'path to barrnap executable; default: barrnap'
    synonyms:
    - -b
    - --barrnap_exe
    args: !SimpleFlagArg
      name: BARRNAP_EXE
    optional: true
  - !Flag
    description: 'name to give the contig files; default: infered from file'
    synonyms:
    - -n
    - --name
    args: !SimpleFlagArg
      name: NAME
    optional: true
  - !Flag
    description: 'number of threads/cores to use; default: 2'
    synonyms:
    - -c
    - --cores
    args: !SimpleFlagArg
      name: CORES
    optional: true
  - !Flag
    description: 'skip the scaffold if its shorter than this default: 0'
    synonyms:
    - -m
    - --min_length
    args: !SimpleFlagArg
      name: MIN_LENGTH
    optional: true
  - !Flag
    description: 'Logger writes debug to file in output dir; this sets verbosity level
      sent to stderr. 1 = debug(), 2 = info(), 3 = warning(), 4 = error() and 5 =
      critical(); default: 2'
    synonyms:
    - -v
    - --verbosity
    args: !ChoiceFlagArg
      choices: !!set
        ? "1"
        ? "2"
        ? "4"
        ? "3"
        ? "5"
    optional: true
  command:
  - ribo
  - scan
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: Displays this help message
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: ribo scan -o OUTPUT [-k {bac,euk,arc,mito}] [-t ID_THRESH]\n\
    \                 [-b BARRNAP_EXE] [-n NAME] [-c CORES] [-m MIN_LENGTH]\n    \
    \             [-v {1,2,3,4,5}] [-h]\n                 contigs\n\nGiven a directory\
    \ of one or more chromosomes as fasta files, this facilitates\nreannotation of\
    \ rDNA regions with Barrnap and outputs all sequences as a\nsingle, annotated\
    \ genbank file\n\npositional arguments:\n  contigs               either a (multi)fasta\
    \ or a directory containing one or\n                        more chromosomal sequences\
    \ in fasta format\n\nrequired named arguments:\n  -o OUTPUT, --output OUTPUT\n\
    \                        output directory; default: /tmp/tmpdvlbjbbn\n\noptional\
    \ arguments:\n  -k {bac,euk,arc,mito}, --kingdom {bac,euk,arc,mito}\n        \
    \                whether to look for eukaryotic, archaeal, or bacterial\n    \
    \                    rDNA; default: bac\n  -t ID_THRESH, --id_thresh ID_THRESH\n\
    \                        partial rRNA hits below this threshold will be\n    \
    \                    ignored. default: 0.5\n  -b BARRNAP_EXE, --barrnap_exe BARRNAP_EXE\n\
    \                        path to barrnap executable; default: barrnap\n  -n NAME,\
    \ --name NAME  name to give the contig files; default: infered from\n        \
    \                file\n  -c CORES, --cores CORES\n                        number\
    \ of threads/cores to use; default: 2\n  -m MIN_LENGTH, --min_length MIN_LENGTH\n\
    \                        skip the scaffold if its shorter than this default: 0\n\
    \  -v {1,2,3,4,5}, --verbosity {1,2,3,4,5}\n                        Logger writes\
    \ debug to file in output dir; this sets\n                        verbosity level\
    \ sent to stderr. 1 = debug(), 2 =\n                        info(), 3 = warning(),\
    \ 4 = error() and 5 = critical();\n                        default: 2\n  -h, --help\
    \            Displays this help message\n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: Genbank file (WITH SEQUENCE)
    position: 0
    name: genbank_genome
    optional: false
  named:
  - !Flag
    description: 'output directory;default: None'
    synonyms:
    - -o
    - --output
    args: !SimpleFlagArg
      name: OUTPUT
    optional: true
  - !Flag
    description: 'Feature, rRNA or RRNA; default: rRNA'
    synonyms:
    - -f
    - --feature
    args: !SimpleFlagArg
      name: FEATURE
    optional: true
  - !Flag
    description: 'colon:separated -- specific features; default: 16S:23S:5S'
    synonyms:
    - -s
    - --specific_features
    args: !SimpleFlagArg
      name: SPECIFIC_FEATURES
    optional: true
  - !Flag
    description: 'overwrite previous output files: default: False'
    synonyms:
    - --clobber
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: number of rDNA clusters;if submitting multiple records, must be a
      colon:separated list whose length matches number of genbank records. Default
      is inferred from specific feature with fewest hits
    synonyms:
    - -c
    - --clusters
    args: !SimpleFlagArg
      name: CLUSTERS
    optional: true
  - !Flag
    description: '1 = debug(), 2 = info(), 3 = warning(), 4 = error() and 5 = critical();
      default: 2'
    synonyms:
    - -v
    - --verbosity
    args: !SimpleFlagArg
      name: VERBOSITY
    optional: true
  - !Flag
    description: Enable debug messages
    synonyms:
    - --debug
    args: !EmptyFlagArg {}
    optional: true
  command:
  - ribo
  - select
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: ribo select [-h] -o OUTPUT [-f FEATURE] [-s SPECIFIC_FEATURES]\n\
    \                   [--clobber] [-c CLUSTERS] [-v VERBOSITY] [--debug]\n     \
    \              genbank_genome\n\nThis is used to identify and cluster rRNA regions\
    \ from a gb file, returnsa\ntext file with the clusters\n\npositional arguments:\n\
    \  genbank_genome        Genbank file (WITH SEQUENCE)\n\noptional arguments:\n\
    \  -h, --help            show this help message and exit\n\nrequired named arguments:\n\
    \  -o OUTPUT, --output OUTPUT\n                        output directory;default:\
    \ None\n\noptional arguments:\n  -f FEATURE, --feature FEATURE\n             \
    \           Feature, rRNA or RRNA; default: rRNA\n  -s SPECIFIC_FEATURES, --specific_features\
    \ SPECIFIC_FEATURES\n                        colon:separated -- specific features;\
    \ default:\n                        16S:23S:5S\n  --clobber             overwrite\
    \ previous output files: default: False\n  -c CLUSTERS, --clusters CLUSTERS\n\
    \                        number of rDNA clusters;if submitting multiple\n    \
    \                    records, must be a colon:separated list whose length\n  \
    \                      matches number of genbank records. Default is inferred\n\
    \                        from specific feature with fewest hits\n  -v VERBOSITY,\
    \ --verbosity VERBOSITY\n                        1 = debug(), 2 = info(), 3 =\
    \ warning(), 4 = error()\n                        and 5 = critical(); default:\
    \ 2\n  --debug               Enable debug messages\n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: output from riboSelect
    position: 0
    name: clustered_loci_txt
    optional: false
  named:
  - !Flag
    description: genbank reference, used to estimate insert sizes, and compare with
      QUAST
    synonyms:
    - -r
    - --reference_genbank
    args: !SimpleFlagArg
      name: REFERENCE_GENBANK
    optional: true
  - !Flag
    description: 'output directory; default: /tmp/tmpdvlbjbbn'
    synonyms:
    - -o
    - --output
    args: !SimpleFlagArg
      name: OUTPUT
    optional: true
  - !Flag
    description: forward fastq reads, can be compressed
    synonyms:
    - -F
    - --fastq1
    args: !SimpleFlagArg
      name: FASTQ1
    optional: true
  - !Flag
    description: reverse fastq reads, can be compressed
    synonyms:
    - -R
    - --fastq2
    args: !SimpleFlagArg
      name: FASTQ2
    optional: true
  - !Flag
    description: single fastq reads
    synonyms:
    - -S1
    - --fastqS1
    args: !SimpleFlagArg
      name: FASTQS1
    optional: true
  - !Flag
    description: 'length of flanking regions, in bp; default: 1000'
    synonyms:
    - -l
    - --flanking_length
    args: !SimpleFlagArg
      name: FLANKING
    optional: true
  - !Flag
    description: "Don't do an assembly, just generate the long read 'seeds'; default:\
      \ False"
    synonyms:
    - -j
    - --just_seed
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: 'prefix for results files; default: riboSeed'
    synonyms:
    - -e
    - --experiment_name
    args: !SimpleFlagArg
      name: EXPERIMENT_NAME
    optional: true
  - !Flag
    description: 'available mappers: smalt and bwa; default: bwa'
    synonyms:
    - --mapper
    args: !ChoiceFlagArg
      choices: !!set
        ? bwa
        ? smalt
    optional: true
  - !Flag
    description: "kmers used for final assembly, separated by commas such as21,33,55,77,99,127\
      \ . Can be set to 'auto', where SPAdes chooses. We ensure kmers are not too\
      \ big or too close to read length; default: 21,33,55,77,99,127"
    synonyms:
    - -k
    - --kmers
    args: !SimpleFlagArg
      name: KMERS
    optional: true
  - !Flag
    description: 'kmers used during seeding assemblies, separated bt commas; default:
      21,33,55,77,99'
    synonyms:
    - -p
    - --pre_kmers
    args: !SimpleFlagArg
      name: PRE_KMERS
    optional: true
  - !Flag
    description: skip checking to see if kmerchoice is appropriate to read length.
      Sometimes kmers longer than reads can help in the final assembly, as the long
      reads generated by riboSeed contain kmers longer than the read length
    synonyms:
    - --force_kmers
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: If using smalt, this sets the '-m' param; default with smalt is inferred
      from read length. If using BWA, reads mapping with ASscore lower than this will
      be rejected; default with BWA is half of read length
    synonyms:
    - -s
    - --score_min
    args: !SimpleFlagArg
      name: SCORE_MIN
    optional: true
  - !Flag
    description: 'if initial SPAdes assembly largest contig is not at least as long
      as --min_assembly_len, reject. Set this to the length of the seed sequence;
      if it is not achieved, seeding across regions will likely fail; default: 6000'
    synonyms:
    - -a
    - --min_assembly_len
    args: !SimpleFlagArg
      name: MIN_ASSEMBLY_LEN
    optional: true
  - !Flag
    description: 'if assembled contig is smaller than --min_assembly_len, contig will
      still be included in assembly; default: inferred'
    synonyms:
    - --include_shorts
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Ignore certain errors, full speed ahead!
    synonyms:
    - --damn_the_torpedos
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: if --subtract reads already used in previousround of subassembly
      will not be included in subsequent rounds. This can lead to problems with multiple
      mapping and inflated coverage.
    synonyms:
    - --subtract
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: 'if genome is known to not be circular and a region of interest (including
      flanking bits) extends past chromosome end, this extends the seqence past chromosome
      origin forward by --padding; default: False'
    synonyms:
    - --linear
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "a subassembly will not be performed if this minimum depth is not\
      \ achieved on both the 3' and5' end of the pseudocontig. default: 0"
    synonyms:
    - -d
    - --min_flank_depth
    args: !SimpleFlagArg
      name: MIN_FLANK_DEPTH
    optional: true
  - !Flag
    description: assembler to use for subassembly scheme. SPAdes is used by default,
      but Skesa is a new addition that seems to work for subassembly and is faster
    synonyms:
    - --subassembler
    args: !ChoiceFlagArg
      choices: !!set
        ? spades
        ? skesa
    optional: true
  - !Flag
    description: "ignore: reference will not be used in subassembly. trusted: SPAdes\
      \ will use the seed sequences as a --trusted-contig; untrusted: SPAdes will\
      \ treat as --untrusted-contig. infer: if mapping percentage over 80%, 'trusted';\
      \ else 'untrusted'. See SPAdes docs for details. default: infer"
    synonyms:
    - --ref_as_contig
    args: !ChoiceFlagArg
      choices: !!set
        ? trusted
        ? untrusted
        ? ignore
        ? infer
    optional: true
  - !Flag
    description: 'include this string (usually additional library, but could be other
      SPAdes args) these libraries in final assembly in addition to the reads supplied
      as -F and -R. They must be supplied according to SPAdes arg naming scheme. Use
      at own risk.default: None'
    synonyms:
    - --additional_libs
    args: !SimpleFlagArg
      name: ADDITIONAL_LIBS
    optional: true
  - !Flag
    description: 'if --clean_temps, mapping files will be removed once they are no
      no longer needed during the mapping iterations to save space; default: False'
    synonyms:
    - --clean_temps
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: 'Default behaviour should be to skip read error correction: http://cab.spbu.ru/benchmarking-tools-for-
      de-novo-microbial-assembly/ . This re-enables itdefault: False'
    synonyms:
    - --enable-spades-error-corection
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: 'if --skip_control, no de novo assembly will be done; default: False'
    synonyms:
    - --skip_control
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: 'if iterations>1, multiple seedings will occur after subassembly
      of seed regions; if setting --target_len, seedings will continue until --iterations
      are completed or --target_len is matched or exceeded; default: 3'
    synonyms:
    - -i
    - --iterations
    args: !SimpleFlagArg
      name: ITERATIONS
    optional: true
  - !Flag
    description: 'Logger writes debug to file in output dir; this sets verbosity level
      sent to stderr. 1 = debug(), 2 = info(), 3 = warning(), 4 = error() and 5 =
      critical(); default: 2'
    synonyms:
    - -v
    - --verbosity
    args: !ChoiceFlagArg
      choices: !!set
        ? "1"
        ? "2"
        ? "4"
        ? "3"
        ? "5"
    optional: true
  - !Flag
    description: if set, iterations will continue until contigs reach this length,
      or max iterations (set by --iterations) have been completed. Set as fraction
      of original seed length by giving a decimal between 0 and 5, or set as an absolute
      number of base pairs by giving an integer greater than 50. Not used by default
    synonyms:
    - --target_len
    args: !SimpleFlagArg
      name: TARGET_LEN
    optional: true
  - !Flag
    description: 'if --serialize, runs seeding and assembly without multiprocessing.
      This is recommended for machines with less than 8GB RAM: False'
    synonyms:
    - -z
    - --serialize
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: if --initial_consensus, generate a mpileup-based consesnsus instead
      of doing a proper spades subassembly
    synonyms:
    - --consensus
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: 'if mapping with SMALT, submit custom smalt scoring via smalt -S
      scorespec option; default: match=1,subst=-4,gapopen=-4,gapext=-3'
    synonyms:
    - --smalt_scoring
    args: !SimpleFlagArg
      name: SMALT_SCORING
    optional: true
  - !Flag
    description: "submit custom parameters to mapper. And by mapper, I mean bwa, cause\
      \ we dont support this option for SMALT, sorry. This requires knowledge of your\
      \ chosen mapper's optional arguments. Proceed with caution! default: -L 0,0\
      \ -U 0 -a"
    synonyms:
    - --mapper_args
    args: !SimpleFlagArg
      name: MAPPER_ARGS
    optional: true
  - !Flag
    description: 'Path to SPAdes executable; default: spades.py'
    synonyms:
    - --spades_exe
    args: !SimpleFlagArg
      name: SPADES_EXE
    optional: true
  - !Flag
    description: 'Path to samtools executable; default: samtools'
    synonyms:
    - --samtools_exe
    args: !SimpleFlagArg
      name: SAMTOOLS_EXE
    optional: true
  - !Flag
    description: 'Path to skesa executable; default: skesa'
    synonyms:
    - --skesa_exe
    args: !SimpleFlagArg
      name: SKESA_EXE
    optional: true
  - !Flag
    description: 'Path to smalt executable; default: smalt'
    synonyms:
    - --smalt_exe
    args: !SimpleFlagArg
      name: SMALT_EXE
    optional: true
  - !Flag
    description: 'Path to BWA executable; default: bwa'
    synonyms:
    - --bwa_exe
    args: !SimpleFlagArg
      name: BWA_EXE
    optional: true
  - !Flag
    description: 'Path to quast executable; default: quast'
    synonyms:
    - --quast_exe
    args: !SimpleFlagArg
      name: QUAST_EXE
    optional: true
  - !Flag
    description: 'Path to bcftools executable; default: bcftools'
    synonyms:
    - --bcftools_exe
    args: !SimpleFlagArg
      name: BCFTOOLS_EXE
    optional: true
  - !Flag
    description: 'cores to be used; default: None'
    synonyms:
    - -c
    - --cores
    args: !SimpleFlagArg
      name: CORES
    optional: true
  - !Flag
    description: "if your cores are hyperthreaded, set number threads to the number\
      \ of threads per processer.If unsure, see 'cat /proc/cpuinfo' under 'cpu cores',\
      \ or 'lscpu' under 'Thread(s) per core'.: 1"
    synonyms:
    - -t
    - --threads
    args: !ChoiceFlagArg
      choices: !!set
        ? "1"
        ? "2"
        ? "4"
    optional: true
  - !Flag
    description: 'system memory available; default: 8'
    synonyms:
    - -m
    - --memory
    args: !SimpleFlagArg
      name: MEMORY
    optional: true
  command:
  - ribo
  - seed
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: Displays this help message
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag: !Flag
    description: show program's version number and exit
    synonyms:
    - --version
    args: !EmptyFlagArg {}
    optional: true
  help_text: "usage: ribo seed -r REFERENCE_GENBANK -o OUTPUT [-F FASTQ1] [-R FASTQ2]\n\
    \                 [-S1 FASTQS1] [-l FLANKING] [-j] [-e EXPERIMENT_NAME]\n    \
    \             [--mapper {smalt,bwa}] [-k KMERS] [-p PRE_KMERS]\n             \
    \    [--force_kmers] [-s SCORE_MIN] [-a MIN_ASSEMBLY_LEN]\n                 [--include_shorts]\
    \ [--damn_the_torpedos] [--subtract]\n                 [--linear] [-d MIN_FLANK_DEPTH]\n\
    \                 [--subassembler {spades,skesa}]\n                 [--ref_as_contig\
    \ {ignore,infer,trusted,untrusted}]\n                 [--additional_libs ADDITIONAL_LIBS]\
    \ [--clean_temps]\n                 [--enable-spades-error-corection] [--skip_control]\n\
    \                 [-i ITERATIONS] [-v {1,2,3,4,5}] [--target_len TARGET_LEN]\n\
    \                 [-z] [--consensus] [--smalt_scoring SMALT_SCORING]\n       \
    \          [--mapper_args MAPPER_ARGS] [--spades_exe SPADES_EXE]\n           \
    \      [--samtools_exe SAMTOOLS_EXE] [--skesa_exe SKESA_EXE]\n               \
    \  [--smalt_exe SMALT_EXE] [--bwa_exe BWA_EXE]\n                 [--quast_exe\
    \ QUAST_EXE] [--bcftools_exe BCFTOOLS_EXE]\n                 [-c CORES] [-t {1,2,4}]\
    \ [-m MEMORY] [--version] [-h]\n                 clustered_loci_txt\n\nGiven cluster\
    \ file of rDNA regions from riboSelect and either paired-end or\nsingle-end reads,\
    \ assembles the mapped reads into pseduocontig 'seeds', and\nuses those with the\
    \ reads to runde fere novo and de novo assembly with SPAdes\n\npositional arguments:\n\
    \  clustered_loci_txt    output from riboSelect\n\nrequired named arguments:\n\
    \  -r REFERENCE_GENBANK, --reference_genbank REFERENCE_GENBANK\n             \
    \           genbank reference, used to estimate insert sizes, and\n          \
    \              compare with QUAST\n  -o OUTPUT, --output OUTPUT\n            \
    \            output directory; default: /tmp/tmpdvlbjbbn\n\noptional arguments:\n\
    \  -F FASTQ1, --fastq1 FASTQ1\n                        forward fastq reads, can\
    \ be compressed\n  -R FASTQ2, --fastq2 FASTQ2\n                        reverse\
    \ fastq reads, can be compressed\n  -S1 FASTQS1, --fastqS1 FASTQS1\n         \
    \               single fastq reads\n  -l FLANKING, --flanking_length FLANKING\n\
    \                        length of flanking regions, in bp; default: 1000\n  -j,\
    \ --just_seed       Don't do an assembly, just generate the long read\n      \
    \                  'seeds'; default: False\n  -e EXPERIMENT_NAME, --experiment_name\
    \ EXPERIMENT_NAME\n                        prefix for results files; default:\
    \ riboSeed\n  --mapper {smalt,bwa}  available mappers: smalt and bwa; default:\
    \ bwa\n  -k KMERS, --kmers KMERS\n                        kmers used for final\
    \ assembly, separated by commas\n                        such as21,33,55,77,99,127\
    \ . Can be set to 'auto',\n                        where SPAdes chooses. We ensure\
    \ kmers are not too big\n                        or too close to read length;\
    \ default:\n                        21,33,55,77,99,127\n  -p PRE_KMERS, --pre_kmers\
    \ PRE_KMERS\n                        kmers used during seeding assemblies, separated\
    \ bt\n                        commas; default: 21,33,55,77,99\n  --force_kmers\
    \         skip checking to see if kmerchoice is appropriate to\n             \
    \           read length. Sometimes kmers longer than reads can\n             \
    \           help in the final assembly, as the long reads\n                  \
    \      generated by riboSeed contain kmers longer than the\n                 \
    \       read length\n  -s SCORE_MIN, --score_min SCORE_MIN\n                 \
    \       If using smalt, this sets the '-m' param; default with\n             \
    \           smalt is inferred from read length. If using BWA,\n              \
    \          reads mapping with ASscore lower than this will be\n              \
    \          rejected; default with BWA is half of read length\n  -a MIN_ASSEMBLY_LEN,\
    \ --min_assembly_len MIN_ASSEMBLY_LEN\n                        if initial SPAdes\
    \ assembly largest contig is not at\n                        least as long as\
    \ --min_assembly_len, reject. Set this\n                        to the length\
    \ of the seed sequence; if it is not\n                        achieved, seeding\
    \ across regions will likely fail;\n                        default: 6000\n  --include_shorts\
    \      if assembled contig is smaller than\n                        --min_assembly_len,\
    \ contig will still be included in\n                        assembly; default:\
    \ inferred\n  --damn_the_torpedos   Ignore certain errors, full speed ahead!\n\
    \  --subtract            if --subtract reads already used in previousround of\n\
    \                        subassembly will not be included in subsequent rounds.\n\
    \                        This can lead to problems with multiple mapping and\n\
    \                        inflated coverage.\n  --linear              if genome\
    \ is known to not be circular and a region of\n                        interest\
    \ (including flanking bits) extends past\n                        chromosome end,\
    \ this extends the seqence past\n                        chromosome origin forward\
    \ by --padding; default: False\n  -d MIN_FLANK_DEPTH, --min_flank_depth MIN_FLANK_DEPTH\n\
    \                        a subassembly will not be performed if this minimum\n\
    \                        depth is not achieved on both the 3' and5' end of the\n\
    \                        pseudocontig. default: 0\n  --subassembler {spades,skesa}\n\
    \                        assembler to use for subassembly scheme. SPAdes is\n\
    \                        used by default, but Skesa is a new addition that\n \
    \                       seems to work for subassembly and is faster\n  --ref_as_contig\
    \ {ignore,infer,trusted,untrusted}\n                        ignore: reference\
    \ will not be used in subassembly.\n                        trusted: SPAdes will\
    \ use the seed sequences as a\n                        --trusted-contig; untrusted:\
    \ SPAdes will treat as\n                        --untrusted-contig. infer: if\
    \ mapping percentage over\n                        80%, 'trusted'; else 'untrusted'.\
    \ See SPAdes docs for\n                        details. default: infer\n  --additional_libs\
    \ ADDITIONAL_LIBS\n                        include this string (usually additional\
    \ library, but\n                        could be other SPAdes args) these libraries\
    \ in final\n                        assembly in addition to the reads supplied\
    \ as -F and\n                        -R. They must be supplied according to SPAdes\
    \ arg\n                        naming scheme. Use at own risk.default: None\n\
    \  --clean_temps         if --clean_temps, mapping files will be removed once\n\
    \                        they are no no longer needed during the mapping\n   \
    \                     iterations to save space; default: False\n  --enable-spades-error-corection\n\
    \                        Default behaviour should be to skip read error\n    \
    \                    correction: http://cab.spbu.ru/benchmarking-tools-for-\n\
    \                        de-novo-microbial-assembly/ . This re-enables\n     \
    \                   itdefault: False\n  --skip_control        if --skip_control,\
    \ no de novo assembly will be done;\n                        default: False\n\
    \  -i ITERATIONS, --iterations ITERATIONS\n                        if iterations>1,\
    \ multiple seedings will occur after\n                        subassembly of seed\
    \ regions; if setting --target_len,\n                        seedings will continue\
    \ until --iterations are\n                        completed or --target_len is\
    \ matched or exceeded;\n                        default: 3\n  -v {1,2,3,4,5},\
    \ --verbosity {1,2,3,4,5}\n                        Logger writes debug to file\
    \ in output dir; this sets\n                        verbosity level sent to stderr.\
    \ 1 = debug(), 2 =\n                        info(), 3 = warning(), 4 = error()\
    \ and 5 = critical();\n                        default: 2\n  --target_len TARGET_LEN\n\
    \                        if set, iterations will continue until contigs reach\n\
    \                        this length, or max iterations (set by --iterations)\n\
    \                        have been completed. Set as fraction of original seed\n\
    \                        length by giving a decimal between 0 and 5, or set as\n\
    \                        an absolute number of base pairs by giving an integer\n\
    \                        greater than 50. Not used by default\n  -z, --serialize\
    \       if --serialize, runs seeding and assembly without\n                  \
    \      multiprocessing. This is recommended for machines with\n              \
    \          less than 8GB RAM: False\n  --consensus           if --initial_consensus,\
    \ generate a mpileup-based\n                        consesnsus instead of doing\
    \ a proper spades\n                        subassembly\n  --smalt_scoring SMALT_SCORING\n\
    \                        if mapping with SMALT, submit custom smalt scoring via\n\
    \                        smalt -S scorespec option; default:\n               \
    \         match=1,subst=-4,gapopen=-4,gapext=-3\n  --mapper_args MAPPER_ARGS\n\
    \                        submit custom parameters to mapper. And by mapper, I\n\
    \                        mean bwa, cause we dont support this option for SMALT,\n\
    \                        sorry. This requires knowledge of your chosen mapper's\n\
    \                        optional arguments. Proceed with caution! default: -L\n\
    \                        0,0 -U 0 -a\n  --spades_exe SPADES_EXE\n            \
    \            Path to SPAdes executable; default: spades.py\n  --samtools_exe SAMTOOLS_EXE\n\
    \                        Path to samtools executable; default: samtools\n  --skesa_exe\
    \ SKESA_EXE\n                        Path to skesa executable; default: skesa\n\
    \  --smalt_exe SMALT_EXE\n                        Path to smalt executable; default:\
    \ smalt\n  --bwa_exe BWA_EXE     Path to BWA executable; default: bwa\n  --quast_exe\
    \ QUAST_EXE\n                        Path to quast executable; default: quast\n\
    \  --bcftools_exe BCFTOOLS_EXE\n                        Path to bcftools executable;\
    \ default: bcftools\n  -c CORES, --cores CORES\n                        cores\
    \ to be used; default: None\n  -t {1,2,4}, --threads {1,2,4}\n               \
    \         if your cores are hyperthreaded, set number threads to\n           \
    \             the number of threads per processer.If unsure, see\n           \
    \             'cat /proc/cpuinfo' under 'cpu cores', or 'lscpu'\n            \
    \            under 'Thread(s) per core'.: 1\n  -m MEMORY, --memory MEMORY\n  \
    \                      system memory available; default: 8\n  --version      \
    \       show program's version number and exit\n  -h, --help            Displays\
    \ this help message\n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: Genbank file (WITH SEQUENCE)
    position: 0
    name: genbank_genome
    optional: false
  - !Positional
    description: output from riboSelect
    position: 1
    name: clustered_loci
    optional: false
  named:
  - !Flag
    description: 'output directory; default: /tmp/tmpdvlbjbbn'
    synonyms:
    - -o
    - --output
    args: !SimpleFlagArg
      name: OUTPUT
    optional: true
  - !Flag
    description: 'rename the contigs with this prefix; default: date (YYYYMMDD)'
    synonyms:
    - -n
    - --name
    args: !SimpleFlagArg
      name: NAME
    optional: true
  - !Flag
    description: 'length of flanking regions, in bp; default: 1000'
    synonyms:
    - -l
    - --flanking_length
    args: !SimpleFlagArg
      name: FLANKING
    optional: true
  - !Flag
    description: 'calculate kmer similarity based on aligned sequences instead of
      raw sequences;default: False'
    synonyms:
    - --msa_kmers
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: 'Just plot entropy if MSAdefault: False'
    synonyms:
    - --skip_kmers
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: 'Skip running BLAST Comparisonsdefault: False'
    synonyms:
    - --skip_blast
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: 'if the genome is not circular, and an region of interest (including
      flanking bits) extends past chromosome end, this extends the sequence past chromosome
      origin forward by 5kb; default: False'
    synonyms:
    - --linear
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "if treating as circular, this controls the length of sequence added\
      \ to the 5' and 3' ends to allow for selecting regions that cross the chromosome's\
      \ origin; default: 5000"
    synonyms:
    - -p
    - --padding
    args: !SimpleFlagArg
      name: PADDING
    optional: true
  - !Flag
    description: '1 = debug(), 2 = info(), 3 = warning(), 4 = error() and 5 = critical();
      default: 2'
    synonyms:
    - -v
    - --verbosity
    args: !SimpleFlagArg
      name: VERBOSITY
    optional: true
  - !Flag
    description: 'String for plot title; uses matplotlib math processing for italics
      (you know, the LaTeX $..$ syntax): https://matplotlib.org/users/mathtext.html
      default: inferred from --seq_name'
    synonyms:
    - --title
    args: !SimpleFlagArg
      name: TITLE
    optional: true
  - !Flag
    description: 'overwrite previous output files; default: False'
    synonyms:
    - --clobber
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: 'default returns reverse complimented seq if majority of regions
      on reverse strand. if --no_revcomp, this is overwridden; default: False'
    synonyms:
    - --no_revcomp
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: 'Dont bother making an MSA, calculating Shannon Entropy, BLASTing,
      generating plots etc; just extract the regions ; default: False'
    synonyms:
    - -j
    - --just_extract
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: 'Path to PRANK executable; default: mafft'
    synonyms:
    - --msa_tool
    args: !ChoiceFlagArg
      choices: !!set
        ? prank
        ? mafft
    optional: true
  - !Flag
    description: 'Path to PRANK executable; default: prank'
    synonyms:
    - --prank_exe
    args: !SimpleFlagArg
      name: PRANK_EXE
    optional: true
  - !Flag
    description: 'Path to MAFFT executable; default: mafft'
    synonyms:
    - --mafft_exe
    args: !SimpleFlagArg
      name: MAFFT_EXE
    optional: true
  - !Flag
    description: 'Path to barrnap executable; default: barrnap'
    synonyms:
    - --barrnap_exe
    args: !SimpleFlagArg
      name: BARRNAP_EXE
    optional: true
  - !Flag
    description: 'Path to makeblastdb executable; default: makeblastdb'
    synonyms:
    - --makeblastdb_exe
    args: !SimpleFlagArg
      name: MAKEBLASTDB_EXE
    optional: true
  - !Flag
    description: 'kingdom for barrnap; default: bac'
    synonyms:
    - --kingdom
    args: !ChoiceFlagArg
      choices: !!set
        ? arc
        ? bac
        ? mito
        ? euk
    optional: true
  - !Flag
    description: 'name of genome; default: inferred from file name, as many casesinvolve
      multiple contigs, etc, making inference from record intractable'
    synonyms:
    - -s
    - --seq_name
    args: !SimpleFlagArg
      name: SEQ_NAME
    optional: true
  command:
  - ribo
  - snag
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: Displays this help message
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: ribo snag [-o OUTPUT] [-n NAME] [-l FLANKING] [--msa_kmers]\n\
    \                 [--skip_kmers] [--skip_blast] [--linear] [-p PADDING]\n    \
    \             [-v VERBOSITY] [--title TITLE] [--clobber] [--no_revcomp]\n    \
    \             [-j] [--msa_tool {mafft,prank}] [--prank_exe PRANK_EXE]\n      \
    \           [--mafft_exe MAFFT_EXE] [--barrnap_exe BARRNAP_EXE]\n            \
    \     [--makeblastdb_exe MAKEBLASTDB_EXE]\n                 [--kingdom {mito,euk,arc,bac}]\
    \ [-s SEQ_NAME] [-h]\n                 genbank_genome clustered_loci\n\nUse to\
    \ extract regions of interest based on supplied Locus tags and evaluate\nthe extracted\
    \ regions\n\npositional arguments:\n  genbank_genome        Genbank file (WITH\
    \ SEQUENCE)\n  clustered_loci        output from riboSelect\n\nrequired named\
    \ arguments:\n  -o OUTPUT, --output OUTPUT\n                        output directory;\
    \ default: /tmp/tmpdvlbjbbn\n\noptional arguments:\n  -n NAME, --name NAME  rename\
    \ the contigs with this prefix; default: date\n                        (YYYYMMDD)\n\
    \  -l FLANKING, --flanking_length FLANKING\n                        length of\
    \ flanking regions, in bp; default: 1000\n  --msa_kmers           calculate kmer\
    \ similarity based on aligned sequences\n                        instead of raw\
    \ sequences;default: False\n  --skip_kmers          Just plot entropy if MSAdefault:\
    \ False\n  --skip_blast          Skip running BLAST Comparisonsdefault: False\n\
    \  --linear              if the genome is not circular, and an region of\n   \
    \                     interest (including flanking bits) extends past\n      \
    \                  chromosome end, this extends the sequence past\n          \
    \              chromosome origin forward by 5kb; default: False\n  -p PADDING,\
    \ --padding PADDING\n                        if treating as circular, this controls\
    \ the length of\n                        sequence added to the 5' and 3' ends\
    \ to allow for\n                        selecting regions that cross the chromosome's\
    \ origin;\n                        default: 5000\n  -v VERBOSITY, --verbosity\
    \ VERBOSITY\n                        1 = debug(), 2 = info(), 3 = warning(), 4\
    \ = error()\n                        and 5 = critical(); default: 2\n  --title\
    \ TITLE         String for plot title; uses matplotlib math processing\n     \
    \                   for italics (you know, the LaTeX $..$ syntax):\n         \
    \               https://matplotlib.org/users/mathtext.html default:\n        \
    \                inferred from --seq_name\n  --clobber             overwrite previous\
    \ output files; default: False\n  --no_revcomp          default returns reverse\
    \ complimented seq if majority\n                        of regions on reverse\
    \ strand. if --no_revcomp, this is\n                        overwridden; default:\
    \ False\n  -j, --just_extract    Dont bother making an MSA, calculating Shannon\n\
    \                        Entropy, BLASTing, generating plots etc; just extract\n\
    \                        the regions ; default: False\n  --msa_tool {mafft,prank}\n\
    \                        Path to PRANK executable; default: mafft\n  --prank_exe\
    \ PRANK_EXE\n                        Path to PRANK executable; default: prank\n\
    \  --mafft_exe MAFFT_EXE\n                        Path to MAFFT executable; default:\
    \ mafft\n  --barrnap_exe BARRNAP_EXE\n                        Path to barrnap\
    \ executable; default: barrnap\n  --makeblastdb_exe MAKEBLASTDB_EXE\n        \
    \                Path to makeblastdb executable; default: makeblastdb\n  --kingdom\
    \ {mito,euk,arc,bac}\n                        kingdom for barrnap; default: bac\n\
    \  -s SEQ_NAME, --seq_name SEQ_NAME\n                        name of genome; default:\
    \ inferred from file name, as\n                        many casesinvolve multiple\
    \ contigs, etc, making\n                        inference from record intractable\n\
    \  -h, --help            Displays this help message\n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: (multi)fasta file containing the sequences to be mutated
    position: 0
    name: fasta
    optional: false
  named:
  - !Flag
    description: 'output directory; default: /tmp/tmpdvlbjbbn'
    synonyms:
    - -o
    - --output
    args: !SimpleFlagArg
      name: OUTPUT
    optional: true
  - !Flag
    description: 'Logger writes debug to file in output dir; this sets verbosity level
      sent to stderr. 1 = debug(), 2 = info(), 3 = warning(), 4 = error() and 5 =
      critical(); default: 2'
    synonyms:
    - -v
    - --verbosity
    args: !ChoiceFlagArg
      choices: !!set
        ? "1"
        ? "2"
        ? "4"
        ? "3"
        ? "5"
    optional: true
  - !Flag
    description: 'Probability of mutated basesdefault: 0.01'
    synonyms:
    - -f
    - --frequency
    args: !SimpleFlagArg
      name: FREQUENCY
    optional: true
  - !Flag
    description: 'if value given, only mutated the ends of the sequences and ignore
      the middledefault: None'
    synonyms:
    - -e
    - --end_length
    args: !SimpleFlagArg
      name: END_LENGTH
    optional: true
  - !Flag
    description: 'cause reproduciblity; default: None'
    synonyms:
    - -s
    - --seed
    args: !SimpleFlagArg
      name: SEED
    optional: true
  command:
  - ribo
  - sim
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: Displays this help message
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: ribo sim -o OUTPUT [-v {1,2,3,4,5}] [-f FREQUENCY] [-e END_LENGTH]\n\
    \                [-s SEED] [-h]\n                fasta\n\nThis uses the JC model\
    \ of genome evolution to test the effectiveness of\nriboSeed on divergent reference\
    \ sequences.\n\npositional arguments:\n  fasta                 (multi)fasta file\
    \ containing the sequences to be\n                        mutated\n\nrequired\
    \ named arguments:\n  -o OUTPUT, --output OUTPUT\n                        output\
    \ directory; default: /tmp/tmpdvlbjbbn\n\noptional arguments:\n  -v {1,2,3,4,5},\
    \ --verbosity {1,2,3,4,5}\n                        Logger writes debug to file\
    \ in output dir; this sets\n                        verbosity level sent to stderr.\
    \ 1 = debug(), 2 =\n                        info(), 3 = warning(), 4 = error()\
    \ and 5 = critical();\n                        default: 2\n  -f FREQUENCY, --frequency\
    \ FREQUENCY\n                        Probability of mutated basesdefault: 0.01\n\
    \  -e END_LENGTH, --end_length END_LENGTH\n                        if value given,\
    \ only mutated the ends of the sequences\n                        and ignore the\
    \ middledefault: None\n  -s SEED, --seed SEED  cause reproduciblity; default:\
    \ None\n  -h, --help            Displays this help message\n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: dir containing a genbank file, assembly filesas fastas. Usually the
      'mauve' dir in the riboSeed results
    position: 0
    name: indir
    optional: false
  named:
  - !Flag
    description: 'output directory; default: None'
    synonyms:
    - -o
    - --outdir
    args: !SimpleFlagArg
      name: OUTDIR
    optional: true
  - !Flag
    description: extension of assemblies, usually fasta
    synonyms:
    - -f
    - --assembly_ext
    args: !SimpleFlagArg
      name: ASSEMBLY_EXT
    optional: true
  - !Flag
    description: extension of reference, usually gb
    synonyms:
    - -g
    - --ref_ext
    args: !SimpleFlagArg
      name: REF_EXT
    optional: true
  - !Flag
    description: name the resulting plot and output dirs; comma- separate
    synonyms:
    - -n
    - --names
    args: !SimpleFlagArg
      name: NAMES
    optional: true
  - !Flag
    description: replot, using a previous run of analyses
    synonyms:
    - -r
    - --replot
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: 'path to Mauve.jar; default: ~/mauve_snapshot_2015-02-13/Mauve.jar'
    synonyms:
    - --mauve_jar
    args: !SimpleFlagArg
      name: MAUVE_JAR
    optional: true
  - !Flag
    description: 'Logger writes debug to file in output dir; this sets verbosity level
      sent to stderr. 1 = debug(), 2 = info(), 3 = warning(), 4 = error() and 5 =
      critical(); default: 2'
    synonyms:
    - -v
    - --verbosity
    args: !ChoiceFlagArg
      choices: !!set
        ? "1"
        ? "2"
        ? "4"
        ? "3"
        ? "5"
    optional: true
  command:
  - ribo
  - sketch
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: Displays this help message
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: ribo sketch [-o OUTDIR] [-f ASSEMBLY_EXT] [-g REF_EXT] [-n NAMES]\
    \ [-r]\n                   [--mauve_jar MAUVE_JAR] [-v {1,2,3,4,5}] [-h]\n   \
    \                indir\n\nPretty up the plots generated by mauve contig mover\n\
    \npositional arguments:\n  indir                 dir containing a genbank file,\
    \ assembly filesas\n                        fastas. Usually the 'mauve' dir in\
    \ the riboSeed\n                        results\n\nrequired named arguments:\n\
    \  -o OUTDIR, --outdir OUTDIR\n                        output directory; default:\
    \ None\n\noptional arguments:\n  -f ASSEMBLY_EXT, --assembly_ext ASSEMBLY_EXT\n\
    \                        extension of assemblies, usually fasta\n  -g REF_EXT,\
    \ --ref_ext REF_EXT\n                        extension of reference, usually gb\n\
    \  -n NAMES, --names NAMES\n                        name the resulting plot and\
    \ output dirs; comma-\n                        separate\n  -r, --replot      \
    \    replot, using a previous run of analyses\n  --mauve_jar MAUVE_JAR\n     \
    \                   path to Mauve.jar; default:\n                        ~/mauve_snapshot_2015-02-13/Mauve.jar\n\
    \  -v {1,2,3,4,5}, --verbosity {1,2,3,4,5}\n                        Logger writes\
    \ debug to file in output dir; this sets\n                        verbosity level\
    \ sent to stderr. 1 = debug(), 2 =\n                        info(), 3 = warning(),\
    \ 4 = error() and 5 = critical();\n                        default: 2\n  -h, --help\
    \            Displays this help message\n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: We need the gff and fasta files from your riboScan run.
    position: 0
    name: riboScan_dir
    optional: false
  named:
  - !Flag
    description: 'output directory; default: /tmp/tmpdvlbjbbn'
    synonyms:
    - -o
    - --output
    args: !SimpleFlagArg
      name: OUTPUT
    optional: true
  - !Flag
    description: 'BAM file; tested with BWA output; default: None'
    synonyms:
    - -b
    - --bam
    args: !SimpleFlagArg
      name: BAM
    optional: true
  - !Flag
    description: look for BAM file in this riboSeed output directory
    synonyms:
    - -r
    - --riboSeed_dir
    args: !SimpleFlagArg
      name: RIBOSEED_DIR
    optional: true
  - !Flag
    description: 'Number of regions to compare rDNA depth to; must be greater than
      1; default: 10'
    synonyms:
    - -n
    - --n_samples
    args: !SimpleFlagArg
      name: N_SAMPLES
    optional: true
  - !Flag
    description: 'prefix for results files; default: riboStack'
    synonyms:
    - -e
    - --experiment_name
    args: !SimpleFlagArg
      name: EXPERIMENT_NAME
    optional: true
  - !Flag
    description: 'If --infer, ignore the name and length of reference sequence, using
      the BAM header instead default: False'
    synonyms:
    - -i
    - --infer
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: 'Logger writes debug to file in output dir; this sets verbosity level
      sent to stderr. 1 = debug(), 2 = info(), 3 = warning(), 4 = error() and 5 =
      critical(); default: 2'
    synonyms:
    - -v
    - --verbosity
    args: !ChoiceFlagArg
      choices: !!set
        ? "1"
        ? "2"
        ? "4"
        ? "3"
        ? "5"
    optional: true
  command:
  - ribo
  - stack
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: Displays this help message
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: ribo stack -o OUTPUT [-b BAM] -r RIBOSEED_DIR [-n N_SAMPLES]\n\
    \                  [-e EXPERIMENT_NAME] [-i] [-v {1,2,3,4,5}] [-h]\n         \
    \         riboScan_dir\n\nThis facilitates the mapping of reads to a reference\
    \ and comparison of\ncoverage depths in rDNA regions to assess disparity in rDNA\
    \ counts between the\nreference and your reads\n\npositional arguments:\n  riboScan_dir\
    \          We need the gff and fasta files from your riboScan\n              \
    \          run.\n\nrequired named arguments:\n  -o OUTPUT, --output OUTPUT\n \
    \                       output directory; default: /tmp/tmpdvlbjbbn\n\noptional\
    \ arguments:\n  -b BAM, --bam BAM     BAM file; tested with BWA output; default:\
    \ None\n  -r RIBOSEED_DIR, --riboSeed_dir RIBOSEED_DIR\n                     \
    \   look for BAM file in this riboSeed output directory\n  -n N_SAMPLES, --n_samples\
    \ N_SAMPLES\n                        Number of regions to compare rDNA depth to;\
    \ must be\n                        greater than 1; default: 10\n  -e EXPERIMENT_NAME,\
    \ --experiment_name EXPERIMENT_NAME\n                        prefix for results\
    \ files; default: riboStack\n  -i, --infer           If --infer, ignore the name\
    \ and length of reference\n                        sequence, using the BAM header\
    \ instead default: False\n  -v {1,2,3,4,5}, --verbosity {1,2,3,4,5}\n        \
    \                Logger writes debug to file in output dir; this sets\n      \
    \                  verbosity level sent to stderr. 1 = debug(), 2 =\n        \
    \                info(), 3 = warning(), 4 = error() and 5 = critical();\n    \
    \                    default: 2\n  -h, --help            Displays this help message\n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: dir containing a genbank file, assembly filesas fastas. Usually the
      'mauve' dir in the riboSeed results
    position: 0
    name: indir
    optional: false
  named:
  - !Flag
    description: directory in which to place the output files
    synonyms:
    - -o
    - --output
    args: !SimpleFlagArg
      name: OUTPUT
    optional: true
  - !Flag
    description: 'length of flanking regions, in bp; default: 1000'
    synonyms:
    - -l
    - --flanking_length
    args: !SimpleFlagArg
      name: FLANKING
    optional: true
  - !Flag
    description: minimum percent identity
    synonyms:
    - -p
    - --min_percent
    args: !SimpleFlagArg
      name: MIN_PERCENT
    optional: true
  - !Flag
    description: extenssion of reference, usually fasta
    synonyms:
    - -f
    - --assembly_ext
    args: !SimpleFlagArg
      name: ASSEMBLY_EXT
    optional: true
  - !Flag
    description: extension of reference, usually .gb
    synonyms:
    - -g
    - --ref_ext
    args: !SimpleFlagArg
      name: REF_EXT
    optional: true
  - !Flag
    description: if true, blast full sequences along with just the flanking. Interpretation
      is not implemented currently as false positives cant be detected this way
    synonyms:
    - -F
    - --blast_Full
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: 'Logger writes debug to file in output dir; this sets verbosity level
      sent to stderr. 1 = debug(), 2 = info(), 3 = warning(), 4 = error() and 5 =
      critical(); default: 2'
    synonyms:
    - -v
    - --verbosity
    args: !ChoiceFlagArg
      choices: !!set
        ? "1"
        ? "2"
        ? "4"
        ? "3"
        ? "5"
    optional: true
  command:
  - ribo
  - score
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: ribo score [-h] [-o OUTPUT] [-l FLANKING] [-p MIN_PERCENT]\n\
    \                  [-f ASSEMBLY_EXT] [-g REF_EXT] [-F] [-v {1,2,3,4,5}]\n    \
    \              indir\n\nThis does some simple blasting to detect correctness of\
    \ riboSeed results\n\npositional arguments:\n  indir                 dir containing\
    \ a genbank file, assembly filesas\n                        fastas. Usually the\
    \ 'mauve' dir in the riboSeed\n                        results\n\noptional arguments:\n\
    \  -h, --help            show this help message and exit\n  -o OUTPUT, --output\
    \ OUTPUT\n                        directory in which to place the output files\n\
    \  -l FLANKING, --flanking_length FLANKING\n                        length of\
    \ flanking regions, in bp; default: 1000\n  -p MIN_PERCENT, --min_percent MIN_PERCENT\n\
    \                        minimum percent identity\n  -f ASSEMBLY_EXT, --assembly_ext\
    \ ASSEMBLY_EXT\n                        extenssion of reference, usually fasta\n\
    \  -g REF_EXT, --ref_ext REF_EXT\n                        extension of reference,\
    \ usually .gb\n  -F, --blast_Full      if true, blast full sequences along with\
    \ just the\n                        flanking. Interpretation is not implemented\
    \ currently\n                        as false positives cant be detected this\
    \ way\n  -v {1,2,3,4,5}, --verbosity {1,2,3,4,5}\n                        Logger\
    \ writes debug to file in output dir; this sets\n                        verbosity\
    \ level sent to stderr. 1 = debug(), 2 =\n                        info(), 3 =\
    \ warning(), 4 = error() and 5 = critical();\n                        default:\
    \ 2\n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: multifasta containing de novo contigs
    position: 0
    name: de_novo_file
    optional: false
  - !Positional
    description: multifasta containing de fere novo contigs
    position: 1
    name: de_fere_novo_file
    optional: false
  - !Positional
    description: name of the bad contig
    position: 2
    name: bad_contig
    optional: false
  - !Positional
    description: colon separated good contigs for replacement
    position: 3
    name: good_contigs
    optional: false
  named:
  - !Flag
    description: 'output directory; default: /tmp/tmpdvlbjbbn'
    synonyms:
    - -o
    - --output
    args: !SimpleFlagArg
      name: OUTPUT
    optional: true
  - !Flag
    description: 'Logger writes debug to file in output dir; this sets verbosity level
      sent to stderr. 1 = debug(), 2 = info(), 3 = warning(), 4 = error() and 5 =
      critical(); default: 2'
    synonyms:
    - -v
    - --verbosity
    args: !ChoiceFlagArg
      choices: !!set
        ? "1"
        ? "2"
        ? "4"
        ? "3"
        ? "5"
    optional: true
  command:
  - ribo
  - swap
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: Displays this help message
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: ribo swap -o OUTPUT [-v {1,2,3,4,5}] [-h]\n                 de_novo_file\
    \ de_fere_novo_file bad_contig good_contigs\n\nGiven de novo and de fere novo\
    \ contigs files, a misjoined de fere novo contig\nname, and a colon:separated\
    \ list of de novo contig names, replace the\noffending contig with the de novo\
    \ contig(s)\n\npositional arguments:\n  de_novo_file          multifasta containing\
    \ de novo contigs\n  de_fere_novo_file     multifasta containing de fere novo\
    \ contigs\n  bad_contig            name of the bad contig\n  good_contigs    \
    \      colon separated good contigs for replacement\n\nrequired named arguments:\n\
    \  -o OUTPUT, --output OUTPUT\n                        output directory; default:\
    \ /tmp/tmpdvlbjbbn\n\noptional arguments:\n  -v {1,2,3,4,5}, --verbosity {1,2,3,4,5}\n\
    \                        Logger writes debug to file in output dir; this sets\n\
    \                        verbosity level sent to stderr. 1 = debug(), 2 =\n  \
    \                      info(), 3 = warning(), 4 = error() and 5 = critical();\n\
    \                        default: 2\n  -h, --help            Displays this help\
    \ message\n"
  generated_using: *id002
- !Command
  positional: []
  named:
  - !Flag
    description: 'output directory; default: None'
    synonyms:
    - -o
    - --output
    args: !SimpleFlagArg
      name: OUTPUT
    optional: true
  - !Flag
    description: fastg assembly graph from SPAdes or a SPAdes output directory. If
      the latter, riboSpec will be run on both the final assembly graph, and all the
      intermediate graphs for each k-mer.
    synonyms:
    - -g
    - --assembly_graph
    args: !SimpleFlagArg
      name: ASSEMBLY_GRAPH
    optional: true
  - !Flag
    description: draw the network graphs
    synonyms:
    - --plot_graphs
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: 'Logger writes debug to file in output dir; this sets verbosity level
      sent to stderr. 1 = debug(), 2 = info(), 3 = warning(), 4 = error() and 5 =
      critical(); default: 2'
    synonyms:
    - -v
    - --verbosity
    args: !ChoiceFlagArg
      choices: !!set
        ? "1"
        ? "2"
        ? "4"
        ? "3"
        ? "5"
    optional: true
  - !Flag
    description: 'Contigs under this length will be collapsed; default: 75'
    synonyms:
    - -m
    - --min_contig_len
    args: !SimpleFlagArg
      name: MIN_CONTIG_LEN
    optional: true
  - !Flag
    description: 'Paths must contain at least one node this long as an anchor; default:
      500'
    synonyms:
    - -a
    - --min_anchor_length
    args: !SimpleFlagArg
      name: MIN_ANCHOR_LENGTH
    optional: true
  - !Flag
    description: 'Paths are simplified when contigs are greater than the --min_contig_length,
      but still short. These medium- length contigs may be assembly artificts or otherwise
      irrelevent. IF you dont want this filtering applied, set to the same value as
      --min_contig_len; default: 400'
    synonyms:
    - -f
    - --medium_length_threshold
    args: !SimpleFlagArg
      name: MEDIUM_LENGTH_THRESHOLD
    optional: true
  - !Flag
    description: 'paths must be at least this long (bp) to be considered; default:
      1500'
    synonyms:
    - -t
    - --threshold
    args: !SimpleFlagArg
      name: THRESHOLD
    optional: true
  - !Flag
    description: "This gets passed to barrnap's --lencutoff argument, for determining\
      \ what we should treat as a legitimate hmm hit; default: 0.75"
    synonyms:
    - -b
    - --barrnap_length_threshold
    args: !SimpleFlagArg
      name: BARRNAP_LENGTH_THRESHOLD
    optional: true
  - !Flag
    description: 'Path to barrnap executable; default: barrnap'
    synonyms:
    - --barrnap_exe
    args: !SimpleFlagArg
      name: BARRNAP_EXE
    optional: true
  - !Flag
    description: 'cores to be used; default: None'
    synonyms:
    - -c
    - --cores
    args: !SimpleFlagArg
      name: CORES
    optional: true
  - !Flag
    description: 'generate and plot an adjacency matrix; default: False'
    synonyms:
    - -x
    - --MAKE_ADJACENCY_MATRIX
    args: !EmptyFlagArg {}
    optional: true
  command:
  - ribo
  - spec
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: Displays this help message
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: ribo spec -o OUTPUT -g ASSEMBLY_GRAPH [--plot_graphs] [-v {1,2,3,4,5}]\n\
    \                 [-m MIN_CONTIG_LEN] [-a MIN_ANCHOR_LENGTH]\n               \
    \  [-f MEDIUM_LENGTH_THRESHOLD] [-t THRESHOLD]\n                 [-b BARRNAP_LENGTH_THRESHOLD]\
    \ [--barrnap_exe BARRNAP_EXE]\n                 [-c CORES] [-x] [-h]\n\nGiven\
    \ either an assembly graph or a mapping file and reference, determine\nwhether\
    \ the number of rDNAs appears to match the reference\n\nrequired named arguments:\n\
    \  -o OUTPUT, --output OUTPUT\n                        output directory; default:\
    \ None\n  -g ASSEMBLY_GRAPH, --assembly_graph ASSEMBLY_GRAPH\n               \
    \         fastg assembly graph from SPAdes or a SPAdes output\n              \
    \          directory. If the latter, riboSpec will be run on both\n          \
    \              the final assembly graph, and all the intermediate\n          \
    \              graphs for each k-mer.\n\noptional arguments:\n  --plot_graphs\
    \         draw the network graphs\n  -v {1,2,3,4,5}, --verbosity {1,2,3,4,5}\n\
    \                        Logger writes debug to file in output dir; this sets\n\
    \                        verbosity level sent to stderr. 1 = debug(), 2 =\n  \
    \                      info(), 3 = warning(), 4 = error() and 5 = critical();\n\
    \                        default: 2\n  -m MIN_CONTIG_LEN, --min_contig_len MIN_CONTIG_LEN\n\
    \                        Contigs under this length will be collapsed; default:\n\
    \                        75\n  -a MIN_ANCHOR_LENGTH, --min_anchor_length MIN_ANCHOR_LENGTH\n\
    \                        Paths must contain at least one node this long as an\n\
    \                        anchor; default: 500\n  -f MEDIUM_LENGTH_THRESHOLD, --medium_length_threshold\
    \ MEDIUM_LENGTH_THRESHOLD\n                        Paths are simplified when contigs\
    \ are greater than the\n                        --min_contig_length, but still\
    \ short. These medium-\n                        length contigs may be assembly\
    \ artificts or otherwise\n                        irrelevent. IF you dont want\
    \ this filtering applied,\n                        set to the same value as --min_contig_len;\
    \ default:\n                        400\n  -t THRESHOLD, --threshold THRESHOLD\n\
    \                        paths must be at least this long (bp) to be\n       \
    \                 considered; default: 1500\n  -b BARRNAP_LENGTH_THRESHOLD, --barrnap_length_threshold\
    \ BARRNAP_LENGTH_THRESHOLD\n                        This gets passed to barrnap's\
    \ --lencutoff argument,\n                        for determining what we should\
    \ treat as a legitimate\n                        hmm hit; default: 0.75\n  --barrnap_exe\
    \ BARRNAP_EXE\n                        Path to barrnap executable; default: barrnap\n\
    \  -c CORES, --cores CORES\n                        cores to be used; default:\
    \ None\n  -x, --MAKE_ADJACENCY_MATRIX\n                        generate and plot\
    \ an adjacency matrix; default: False\n  -h, --help            Displays this help\
    \ message\n"
  generated_using: *id002
- !Command
  positional: []
  named:
  - !Flag
    description: ''
    synonyms:
    - -o
    args: !SimpleFlagArg
      name: OUTPUT
    optional: true
  - !Flag
    description: ''
    synonyms:
    - -g
    args: !SimpleFlagArg
      name: GFFDIR
    optional: true
  - !Flag
    description: ''
    synonyms:
    - -k
    args: !ChoiceFlagArg
      choices: !!set
        ? arc
        ? bac
        ? mito
        ? euk
    optional: true
  command:
  - ribo
  - structure
  parent: *id001
  subcommands: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: ribo structure -o OUTPUT [-g GFFDIR] [-k {bac,euk,arc,mito}]\n\
    \                      [-t ID_THRESH] [-b BARRNAP_EXE] [-c {1,2,4,8,16}]\n   \
    \                   [-v {1,2,3,4,5}]\n                      dir\nribo structure:\
    \ error: the following arguments are required: dir, -o/--output\n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: ribo
    optional: false
  named:
  - !Flag
    description: 'output directory; default: /tmp/tmpdvlbjbbn'
    synonyms:
    - -o
    - --outdir
    args: !SimpleFlagArg
      name: OUTDIR
    optional: true
  - !Flag
    description: 'name of config file; default: timestamped'
    synonyms:
    - -n
    - --name
    args: !SimpleFlagArg
      name: NAME
    optional: true
  command:
  - ribo
  - config
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: ribo [-h] [-o OUTDIR] [-n NAME]\n\nGenerate a configuration yaml\
    \ file for your riboSeed run\n\noptional arguments:\n  -h, --help            show\
    \ this help message and exit\n  -o OUTDIR, --outdir OUTDIR\n                 \
    \       output directory; default: /tmp/tmpdvlbjbbn\n  -n NAME, --name NAME  name\
    \ of config file; default: timestamped\n"
  generated_using: *id002
- !Command
  positional: []
  named:
  - !Flag
    description: 'output directory; default: /tmp/tmpdvlbjbbn/riboSeed_sample_results'
    synonyms:
    - -o
    - --output
    args: !SimpleFlagArg
      name: OUTPUT
    optional: true
  - !Flag
    description: 'Logger writes debug to file in output dir; this sets verbosity level
      sent to stderr. 1 = debug(), 2 = info(), 3 = warning(), 4 = error() and 5 =
      critical(); default: 2'
    synonyms:
    - -v
    - --verbosity
    args: !ChoiceFlagArg
      choices: !!set
        ? "1"
        ? "2"
        ? "4"
        ? "3"
        ? "5"
    optional: true
  - !Flag
    description: 'cores to be used; default: 2'
    synonyms:
    - -c
    - --cores
    args: !SimpleFlagArg
      name: CORES
    optional: true
  - !Flag
    description: "if your cores are hyperthreaded, set number threads to the number\
      \ of threads per processer.If unsure, see 'cat /proc/cpuinfo' under 'cpu cores',\
      \ or 'lscpu' under 'Thread(s) per core'.: 1"
    synonyms:
    - -t
    - --threads
    args: !ChoiceFlagArg
      choices: !!set
        ? "1"
        ? "2"
        ? "4"
    optional: true
  - !Flag
    description: 'system memory available; default: 8'
    synonyms:
    - -m
    - --memory
    args: !SimpleFlagArg
      name: MEMORY
    optional: true
  command:
  - ribo
  - try
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: Displays this help message
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: ribo try [-o OUTPUT] [-v {1,2,3,4,5}] [-c CORES] [-t {1,2,4}]\n\
    \                [-m MEMORY] [-h]\n\nWelcome to the ribo try! Here we test the\
    \ integration of several parts of the\nriboSeed pipeline. First, `ribo run` is\
    \ performed on the included test\ndataset. Then, essentially the same thing is\
    \ done, but calling the individual\nsubcommands (`ribo scan`, `ribo select`, etc)\
    \ If all goes well, no errors\nshould occur, and you should essentially have two\
    \ \"identical\" riboSeed\nassemblies (although due to random assignments of mapping\
    \ duplicates, the\nnature of error correction, etc, I can't guarantee that you\
    \ will get the exact\nsame result Have fun!\n\noptional arguments:\n  -o OUTPUT,\
    \ --output OUTPUT\n                        output directory; default:\n      \
    \                  /tmp/tmpdvlbjbbn/riboSeed_sample_results\n  -v {1,2,3,4,5},\
    \ --verbosity {1,2,3,4,5}\n                        Logger writes debug to file\
    \ in output dir; this sets\n                        verbosity level sent to stderr.\
    \ 1 = debug(), 2 =\n                        info(), 3 = warning(), 4 = error()\
    \ and 5 = critical();\n                        default: 2\n  -c CORES, --cores\
    \ CORES\n                        cores to be used; default: 2\n  -t {1,2,4}, --threads\
    \ {1,2,4}\n                        if your cores are hyperthreaded, set number\
    \ threads to\n                        the number of threads per processer.If unsure,\
    \ see\n                        'cat /proc/cpuinfo' under 'cpu cores', or 'lscpu'\n\
    \                        under 'Thread(s) per core'.: 1\n  -m MEMORY, --memory\
    \ MEMORY\n                        system memory available; default: 8\n  -h, --help\
    \            Displays this help message\n"
  generated_using: *id002
help_flag:
usage_flag:
version_flag:
help_text: "riboSeed v0.4.90\nContact: Nick Waters <nickp60@gmail.com>\nDescription:\
  \ A suite of tools to perform de fere novo assembly to bridge\n             gaps\
  \ caused by rDNA repeats\n\nUsage:   ribo <command> [options]\n\nAvailable commands:\n\
  \  run        execute pipeline (scan, select, seed, and more)\n  scan       reannotate\
  \ rRNAs in a FASTA file\n  select     group rRNA annotations into rDNA operons\n\
  \  seed       perform de fere novo assembly\n  snag       extract rDNA regions and\
  \ plot entropy\n  sim        perform simulations used in manuscript\n  sketch  \
  \   plot results from a de fere novo assembly\n  stack      compare coverage depth\
  \ in rDNA regions to rest of genome\n  score      score batches of assemblies with\
  \ BLASTn\n  swap       swap contigs from assemblies\n  spec       use assembly graph\
  \ to speculate number of rDNAs\n  structure  view the rRNA operon structure across\
  \ several genomes\n  config     write out a blank config file to be used with `run`\n\
  \  try        runs the pipeline on some included sample data\n\n"
generated_using: *id002
