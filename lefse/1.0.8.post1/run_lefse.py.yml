!Command
command:
- run_lefse.py
positional:
- !Positional
  description: the input file
  position: 0
  name: INPUT_FILE
  optional: false
- !Positional
  description: the output file containing the data for the visualization
  position: 1
  name: OUTPUT_FILE
  optional: false
- !Positional
  description: 'optional arguments:'
  position: 2
  name: module
  optional: false
named:
- !Flag
  description: "set the file for exporting the result (only concise textual\nform)"
  synonyms:
  - -o
  args: !SimpleFlagArg
    name: str
  optional: true
- !Flag
  description: set the alpha value for the Anova test (default 0.05)
  synonyms:
  - -a
  args: !SimpleFlagArg
    name: float
  optional: true
- !Flag
  description: set the alpha value for the Wilcoxon test (default 0.05)
  synonyms:
  - -w
  args: !SimpleFlagArg
    name: float
  optional: true
- !Flag
  description: "set the threshold on the absolute value of the logarithmic\nLDA score\
    \ (default 2.0)"
  synonyms:
  - -l
  args: !SimpleFlagArg
    name: float
  optional: true
- !Flag
  description: max log ingluence of LDA coeff
  synonyms:
  - --nlogs
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: verbose execution (default 0)
  synonyms:
  - --verbose
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: wheter to perform the Wicoxon step (default 1)
  synonyms:
  - --wilc
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: select LDA or SVM for effect size (default LDA)
  synonyms:
  - -r
  args: !SimpleFlagArg
    name: str
  optional: true
- !Flag
  description: "whether to normalize the data in [0,1] for SVM feature\nwaiting (default\
    \ 1 strongly suggested)"
  synonyms:
  - --svm_norm
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: set the number of bootstrap iteration for LDA (default 30)
  synonyms:
  - -b
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: "set whether perform the wilcoxon test only among the\nsubclasses with\
    \ the same name (default 0)"
  synonyms:
  - -e
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: "set whether perform the wilcoxon test ing the Curtis's\napproach [BETA\
    \ VERSION] (default 0)"
  synonyms:
  - -c
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: "set the subsampling fraction value for each bootstrap\niteration (default\
    \ 0.66666)"
  synonyms:
  - -f
  args: !SimpleFlagArg
    name: float
  optional: true
- !Flag
  description: "set the multiple testing correction options. 0 no correction\n(more\
    \ strict, default), 1 correction for independent\ncomparisons, 2 correction for\
    \ independent comparison"
  synonyms:
  - -s
  args: !ChoiceFlagArg
    choices: !!set
      ? "1"
      ? "2"
      ? "0"
  optional: true
- !Flag
  description: "minimum number of samples per subclass for performing\nwilcoxon test\
    \ (default 10)"
  synonyms:
  - --min_c
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: "set the title of the analysis (default input file without\nextension)"
  synonyms:
  - -t
  args: !SimpleFlagArg
    name: str
  optional: true
- !Flag
  description: "(for multiclass tasks) set whether the test is performed in\na one-against-one\
    \ ( 1 - more strict!) or in a one-against-\nall setting ( 0 - less strict) (default\
    \ 0)\n"
  synonyms:
  - -y
  args: !ChoiceFlagArg
    choices: !!set
      ? "1"
      ? "0"
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: run_lefse.py [-h] [-o str] [-a float] [-w float] [-l float]\n \
  \                   [--nlogs int] [--verbose int] [--wilc int] [-r str]\n      \
  \              [--svm_norm int] [-b int] [-e int] [-c int] [-f float]\n        \
  \            [-s {0,1,2}] [--min_c int] [-t str] [-y {0,1}]\n                  \
  \  INPUT_FILE OUTPUT_FILE\n\nLEfSe 1.0\n\npositional arguments:\n  INPUT_FILE  \
  \    the input file\n  OUTPUT_FILE     the output file containing the data for the\
  \ visualization\n                  module\n\noptional arguments:\n  -h, --help \
  \     show this help message and exit\n  -o str          set the file for exporting\
  \ the result (only concise textual\n                  form)\n  -a float        set\
  \ the alpha value for the Anova test (default 0.05)\n  -w float        set the alpha\
  \ value for the Wilcoxon test (default 0.05)\n  -l float        set the threshold\
  \ on the absolute value of the logarithmic\n                  LDA score (default\
  \ 2.0)\n  --nlogs int     max log ingluence of LDA coeff\n  --verbose int   verbose\
  \ execution (default 0)\n  --wilc int      wheter to perform the Wicoxon step (default\
  \ 1)\n  -r str          select LDA or SVM for effect size (default LDA)\n  --svm_norm\
  \ int  whether to normalize the data in [0,1] for SVM feature\n                \
  \  waiting (default 1 strongly suggested)\n  -b int          set the number of bootstrap\
  \ iteration for LDA (default 30)\n  -e int          set whether perform the wilcoxon\
  \ test only among the\n                  subclasses with the same name (default\
  \ 0)\n  -c int          set whether perform the wilcoxon test ing the Curtis's\n\
  \                  approach [BETA VERSION] (default 0)\n  -f float        set the\
  \ subsampling fraction value for each bootstrap\n                  iteration (default\
  \ 0.66666)\n  -s {0,1,2}      set the multiple testing correction options. 0 no\
  \ correction\n                  (more strict, default), 1 correction for independent\n\
  \                  comparisons, 2 correction for independent comparison\n  --min_c\
  \ int     minimum number of samples per subclass for performing\n              \
  \    wilcoxon test (default 10)\n  -t str          set the title of the analysis\
  \ (default input file without\n                  extension)\n  -y {0,1}        (for\
  \ multiclass tasks) set whether the test is performed in\n                  a one-against-one\
  \ ( 1 - more strict!) or in a one-against-\n                  all setting ( 0 -\
  \ less strict) (default 0)\n"
generated_using:
- --help
