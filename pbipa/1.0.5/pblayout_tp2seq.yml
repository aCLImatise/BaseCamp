&id002 !Command
positional:
- !Positional
  description: STR   Path to a SeqDB file with reads which will be used to compose
    the sequences.
  position: 0
  name: in_reads_fn
  optional: false
- !Positional
  description: STR   Path to a TilingPath file.
  position: 1
  name: in_tiling_path_fn
  optional: false
- !Positional
  description: STR   Output FASTA filename.
  position: 2
  name: out_fn
  optional: false
named:
- !Flag
  description: The input tiling path contains sequence IDs instead of read names.
  synonyms:
  - --use-seq-ids
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Assumes that the input tiling paths were constructed in the homopolymer-compressed
    space, and expands the sequences during sequence construction.
  synonyms:
  - --use-hpc
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Realigns the tiling path edges to improve tiling coordinates.
  synonyms:
  - --realign
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: INT   Batch size in Mbp. Reads for a batch of contigs are loaded at
    once so that all reads total in roughly this size. [1000]
  synonyms:
  - --batch-mb
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: INT   Number of threads to use, 0 means autodetection. [0]
  synonyms:
  - -j
  - --num-threads
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'STR   Set log level. Valid choices: (TRACE, DEBUG, INFO, WARN, FATAL).
    [WARN]'
  synonyms:
  - --log-level
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: FILE  Log to a file, instead of stderr.
  synonyms:
  - --log-file
  args: !EmptyFlagArg {}
  optional: true
command:
- pblayout
- tp2seq
parent: &id001 !Command
  positional: []
  named: []
  command:
  - pblayout
  parent:
  subcommands:
  - !Command
    positional:
    - !Positional
      description: STR  Input M4.
      position: 0
      name: in.m4
      optional: false
    named: []
    command:
    - pblayout
    - m4-index
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: Show this help and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag: !Flag
      description: Show application version and exit.
      synonyms:
      - --version
      args: !EmptyFlagArg {}
      optional: true
    help_text: "pblayout m4-index - Generate M4 index file.\n\nUsage:\n  pblayout\
      \ m4-index [options] <in.m4>\n\n  in.m4      STR  Input M4.\n\nOptions:\n  -h,--help\
      \       Show this help and exit.\n  --version       Show application version\
      \ and exit.\n\n"
    generated_using: &id003
    - --help
  - *id002
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: subgraph
      optional: false
    - !Positional
      description: ''
      position: 1
      name: in_sg
      optional: false
    - !Positional
      description: ''
      position: 2
      name: out_prefix
      optional: false
    named:
    - !Flag
      description: Apply the directed ego-graph algorithm to extract the subgraph.
      synonyms:
      - --directed
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: INT   Radius (in the number of nodes) to extract in each direction.
        [100]
      synonyms:
      - --radius
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: STR   Path to a tiling path file. If specified, it will be used
        to create the Bandage CSV.
      synonyms:
      - --tp
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: STR   Path to a SeqDB file. If specified, it will be used to retrieve
        lengths of sequences.
      synonyms:
      - --seqdb
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Indicates that the sequences in the input graph are actually IDs
        instead of headers.
      synonyms:
      - --use-seq-ids
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Write the sequences to the generated GFA file. This requires the
        '--seqdb' to be provided.
      synonyms:
      - --write-seqs
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'STR   CSV file with a list of nodes to extract. Each line contains
        2 columns: <node_name> <label>. The label will be used to name the output
        files.'
      synonyms:
      - --csv-nodes
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: INT   Number of threads to use, 0 means autodetection. [0]
      synonyms:
      - -j
      - --num-threads
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'STR   Set log level. Valid choices: (TRACE, DEBUG, INFO, WARN,
        FATAL). [WARN]'
      synonyms:
      - --log-level
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: FILE  Log to a file, instead of stderr.
      synonyms:
      - --log-file
      args: !EmptyFlagArg {}
      optional: true
    command:
    - pblayout
    - subgraph
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: Show this help and exit.
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag: !Flag
      description: Show application version and exit.
      synonyms:
      - --version
      args: !EmptyFlagArg {}
      optional: true
    help_text: "subgraph - Extract a subgraph from a given assembly graph.\n\nUsage:\n\
      \  subgraph [options] <in_sg> <out_prefix> <node1 [node2 node3 ...]>\n\n  in_sg\
      \                    STR   Input string graph in the sg_edges_list\n       \
      \                          format.\n  out_prefix               STR   Output\
      \ prefix.\n  node1 [node2 node3 ...]  STR   One or more nodes to extract the\
      \ subgraph for.\n\nAlgorithm Options:\n  --directed                     Apply\
      \ the directed ego-graph algorithm to\n                                 extract\
      \ the subgraph.\n  --radius                 INT   Radius (in the number of nodes)\
      \ to extract in\n                                 each direction. [100]\n  --tp\
      \                     STR   Path to a tiling path file. If specified, it\n \
      \                                will be used to create the Bandage CSV.\n \
      \ --seqdb                  STR   Path to a SeqDB file. If specified, it will\
      \ be\n                                 used to retrieve lengths of sequences.\n\
      \  --use-seq-ids                  Indicates that the sequences in the input\n\
      \                                 graph are actually IDs instead of headers.\n\
      \  --write-seqs                   Write the sequences to the generated GFA file.\n\
      \                                 This requires the '--seqdb' to be provided.\n\
      \  --csv-nodes              STR   CSV file with a list of nodes to extract.\
      \ Each\n                                 line contains 2 columns: <node_name>\
      \ <label>.\n                                 The label will be used to name\
      \ the output\n                                 files.\n\n  -h,--help       \
      \               Show this help and exit.\n  --version                      Show\
      \ application version and exit.\n  -j,--num-threads         INT   Number of\
      \ threads to use, 0 means\n                                 autodetection. [0]\n\
      \  --log-level              STR   Set log level. Valid choices: (TRACE, DEBUG,\n\
      \                                 INFO, WARN, FATAL). [WARN]\n  --log-file \
      \              FILE  Log to a file, instead of stderr.\n\n"
    generated_using: *id003
  help_flag: !Flag
    description: Show this help and exit.
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag: !Flag
    description: Show application version and exit.
    synonyms:
    - --version
    args: !EmptyFlagArg {}
    optional: true
  help_text: "pblayout - PacBio assembly tool.\n\nUsage:\n  pblayout <tool>\n\n  -h,--help\
    \    Show this help and exit.\n  --version    Show application version and exit.\n\
    \nTools:\n  dedup-actg Deduplicate alternative bubble branches (associate contigs).\
    \ Only unphased bubbles are deduplicated based on alignment identity and length.\n\
    \  m4-to-m4   Convert M4 to M4.\n  m4-to-sg   Convert M4 to SG.\n  m4-to-g   \
    \ Convert M4 to Graph (like ovlp_to_graph).\n  sg-to-sg   Convert SG to SG.\n\
    \  read-to-contig Assign reads to a tiling path based on overlaps.\n  m4-to-sg-to-gfa1\
    \ Convert M4 to GFA1, via intermediate string graph.\n  m4-index   Generate M4\
    \ index file.\n  tp2seq     Construct contig sequences from a given tiling path\
    \ file.\n  subgraph   Extract a subgraph from a given assembly graph.\n\n"
  generated_using: *id003
subcommands: []
help_flag: !Flag
  description: Show this help and exit.
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: Show application version and exit.
  synonyms:
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "tp2seq - Construct contig sequences from a given tiling path file.\n\n\
  Usage:\n  tp2seq [options] <in_reads_fn> <in_tiling_path_fn> <out_fn>\n\n  in_reads_fn\
  \        STR   Path to a SeqDB file with reads which will be used\n            \
  \               to compose the sequences.\n  in_tiling_path_fn  STR   Path to a\
  \ TilingPath file.\n  out_fn             STR   Output FASTA filename.\n\nAlgorithm\
  \ Options:\n  --use-seq-ids            The input tiling path contains sequence IDs\
  \ instead\n                           of read names.\n  --use-hpc              \
  \  Assumes that the input tiling paths were constructed\n                      \
  \     in the homopolymer-compressed space, and expands the\n                   \
  \        sequences during sequence construction.\n  --realign                Realigns\
  \ the tiling path edges to improve tiling\n                           coordinates.\n\
  \  --batch-mb         INT   Batch size in Mbp. Reads for a batch of contigs are\n\
  \                           loaded at once so that all reads total in roughly\n\
  \                           this size. [1000]\n\n  -h,--help                Show\
  \ this help and exit.\n  --version                Show application version and exit.\n\
  \  -j,--num-threads   INT   Number of threads to use, 0 means autodetection. [0]\n\
  \  --log-level        STR   Set log level. Valid choices: (TRACE, DEBUG, INFO,\n\
  \                           WARN, FATAL). [WARN]\n  --log-file         FILE  Log\
  \ to a file, instead of stderr.\n\n"
generated_using: *id003
