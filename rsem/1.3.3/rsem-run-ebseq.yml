!Command
positional:
- !Positional
  description: This file is a m by n matrix. m is the number of genes/transcripts
    and n is the number of total samples. Each element in the matrix represents the
    expected count for a particular gene/transcript in a particular sample. Users
    can use 'rsem-generate-data-matrix' to generate this file from expression result
    files.
  position: 0
  name: data_matrix_file
  optional: false
- !Positional
  description: Comma-separated list of values representing the number of replicates
    for each condition. For example, "3,3" means the data set contains 2 conditions
    and each condition has 3 replicates. "2,3,3" means the data set contains 3 conditions,
    with 2, 3, and 3 replicates for each condition respectively.
  position: 1
  name: conditions
  optional: false
- !Positional
  description: This file contains the median normalized version of the input data
    matrix.
  position: 1
  name: output_file.normalized_data_matrix
  optional: false
- !Positional
  description: This file is only generated when there are more than 2 conditions.
    It defines all possible expression patterns over the conditions using a matrix
    with names. Each row of the matrix refers to a different expression pattern and
    each column gives the expression status of a different condition. Two conditions
    are equally expressed if and only if their statuses are the same.
  position: 2
  name: output_file.pattern
  optional: false
- !Positional
  description: This file is only generated when there are more than 2 conditions.
    It gives the normalized mean count value for each gene/transcript at each condition.
    It is formatted as a matrix with names. Each row represents a gene/transcript
    and each column represent a condition. The order of genes/transcripts is the same
    as 'output_file'. This file can be used to calculate fold changes between conditions
    which users are interested in.
  position: 3
  name: output_file.condmeans
  optional: false
named:
- !Flag
  description: "This option provides the grouping information required by EBSeq for\
    \ isoform-level differential expression analysis. The file can be generated by\
    \ 'rsem-generate-ngvector'. Turning this option on is highly recommended for isoform-level\
    \ differential expression analysis. (Default: off)"
  synonyms:
  - --ngvector
  args: !SimpleFlagArg
    name: file
  optional: true
- !Flag
  description: Show help information.
  synonyms:
  - -h/--help
  args: !EmptyFlagArg {}
  optional: true
command:
- rsem-run-ebseq
parent:
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "Invalid number of arguments!\nNAME\n    rsem-run-ebseq - Wrapper for EBSeq\
  \ to perform differential expression\n    analysis.\n\nSYNOPSIS\n    rsem-run-ebseq\
  \ [options] data_matrix_file conditions output_file\n\nARGUMENTS\n    data_matrix_file\n\
  \        This file is a m by n matrix. m is the number of genes/transcripts\n  \
  \      and n is the number of total samples. Each element in the matrix\n      \
  \  represents the expected count for a particular gene/transcript in a\n       \
  \ particular sample. Users can use 'rsem-generate-data-matrix' to\n        generate\
  \ this file from expression result files.\n\n    conditions\n        Comma-separated\
  \ list of values representing the number of replicates\n        for each condition.\
  \ For example, \"3,3\" means the data set contains 2\n        conditions and each\
  \ condition has 3 replicates. \"2,3,3\" means the\n        data set contains 3 conditions,\
  \ with 2, 3, and 3 replicates for each\n        condition respectively.\n\n    output_file\n\
  \        Output file name.\n\nOPTIONS\n    --ngvector <file>\n        This option\
  \ provides the grouping information required by EBSeq for\n        isoform-level\
  \ differential expression analysis. The file can be\n        generated by 'rsem-generate-ngvector'.\
  \ Turning this option on is\n        highly recommended for isoform-level differential\
  \ expression\n        analysis. (Default: off)\n\n    -h/--help\n        Show help\
  \ information.\n\nDESCRIPTION\n    This program is a wrapper over EBSeq. It performs\
  \ differential\n    expression analysis and can work on two or more conditions.\
  \ All\n    genes/transcripts and their associated statistcs are reported in one\n\
  \    output file. This program does not control false discovery rate and call\n\
  \    differential expressed genes/transcripts. Please use 'rsem-control-fdr'\n \
  \   to control false discovery rate after this program is finished.\n\nOUTPUT\n\
  \    output_file\n        This file reports the calculated statistics for all\n\
  \        genes/transcripts. It is written as a matrix with row and column\n    \
  \    names. The row names are the genes'/transcripts' names. The column\n      \
  \  names are for the reported statistics.\n\n        If there are only 2 different\
  \ conditions among the samples, four\n        statistics (columns) will be reported\
  \ for each gene/transcript. They\n        are \"PPEE\", \"PPDE\", \"PostFC\" and\
  \ \"RealFC\". \"PPEE\" is the posterior\n        probability (estimated by EBSeq)\
  \ that a gene/transcript is equally\n        expressed. \"PPDE\" is the posterior\
  \ probability that a\n        gene/transcript is differentially expressed. \"PostFC\"\
  \ is the\n        posterior fold change (condition 1 over condition2) for a\n  \
  \      gene/transcript. It is defined as the ratio between posterior mean\n    \
  \    expression estimates of the gene/transcript for each condition.\n        \"\
  RealFC\" is the real fold change (condition 1 over condition2) for a\n        gene/transcript.\
  \ It is the ratio of the normalized within condition\n        1 mean count over\
  \ normalized within condition 2 mean count for the\n        gene/transcript. Fold\
  \ changes are calculated using EBSeq's 'PostFC'\n        function. The genes/transcripts\
  \ are reported in descending order of\n        their \"PPDE\" values.\n\n      \
  \  If there are more than 2 different conditions among the samples, the\n      \
  \  output format is different. For differential expression analysis\n        with\
  \ more than 2 conditions, EBSeq will enumerate all possible\n        expression\
  \ patterns (on which conditions are equally expressed and\n        which conditions\
  \ are not). Suppose there are k different patterns,\n        the first k columns\
  \ of the output file give the posterior\n        probability of each expression\
  \ pattern is true. Patterns are defined\n        in a separate file, 'output_file.pattern'.\
  \ The k+1 column gives the\n        maximum a posteriori (MAP) expression pattern\
  \ for each\n        gene/transcript. The k+2 column gives the posterior probability\
  \ that\n        not all conditions are equally expressed (column name \"PPDE\").\
  \ The\n        genes/transcripts are reported in descending order of their \"PPDE\"\
  \n        column values. For details on how EBSeq works for more than 2\n      \
  \  conditions, please refer to EBSeq's manual.\n\n    output_file.normalized_data_matrix\n\
  \        This file contains the median normalized version of the input data\n  \
  \      matrix.\n\n    output_file.pattern\n        This file is only generated when\
  \ there are more than 2 conditions.\n        It defines all possible expression\
  \ patterns over the conditions\n        using a matrix with names. Each row of the\
  \ matrix refers to a\n        different expression pattern and each column gives\
  \ the expression\n        status of a different condition. Two conditions are equally\n\
  \        expressed if and only if their statuses are the same.\n\n    output_file.condmeans\n\
  \        This file is only generated when there are more than 2 conditions.\n  \
  \      It gives the normalized mean count value for each gene/transcript at\n  \
  \      each condition. It is formatted as a matrix with names. Each row\n      \
  \  represents a gene/transcript and each column represent a condition.\n       \
  \ The order of genes/transcripts is the same as 'output_file'. This\n        file\
  \ can be used to calculate fold changes between conditions which\n        users\
  \ are interested in.\n\nEXAMPLES\n    1) We're interested in isoform-level differential\
  \ expression analysis\n    and there are two conditions. Each condition has 5 replicates.\
  \ We have\n    already collected the data matrix as 'IsoMat.txt' and generated ngvector\n\
  \    as 'ngvector.ngvec':\n\n     rsem-run-ebseq --ngvector ngvector.ngvec IsoMat.txt\
  \ 5,5 IsoMat.results\n\n    The results will be in 'IsoMat.results' and\n    'IsoMat.results.normalized_data_matrix'\
  \ contains the normalized data\n    matrix.\n\n    2) We're interested in gene-level\
  \ analysis and there are 3 conditions.\n    The first condition has 3 replicates\
  \ and the other two has 4 replicates\n    each. The data matrix is named as 'GeneMat.txt':\n\
  \n     rsem-run-ebseq GeneMat.txt 3,4,4 GeneMat.results\n\n    Four files, 'GeneMat.results',\
  \ 'GeneMat.results.normalized_data_matrix',\n    'GeneMat.results.pattern', and\
  \ 'GeneMat.results.condmeans', will be\n    generated.\n\n"
generated_using: []
