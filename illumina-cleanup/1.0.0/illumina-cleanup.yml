!Command
positional:
- !Positional
  description: ''
  position: 0
  name: run
  optional: false
- !Positional
  description: ''
  position: 1
  name: Project
  optional: false
- !Positional
  description: ''
  position: 2
  name: name
  optional: false
- !Positional
  description: ''
  position: 3
  name: or
  optional: false
- !Positional
  description: ''
  position: 4
  name: repository
  optional: false
- !Positional
  description: ''
  position: 5
  name: url
  optional: false
named:
- !Flag
  description: 'Exports all current system environment Default: false'
  synonyms:
  - -E
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Enable/disable ANSI console logging
  synonyms:
  - -ansi-log
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Remote bucket where intermediate result files are stored
  synonyms:
  - -bucket-dir
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Enable/disable processes caching
  synonyms:
  - -cache
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Dump channels for debugging purpose
  synonyms:
  - -dump-channels
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Dump task hash keys for debugging purpose Default: false'
  synonyms:
  - -dump-hashes
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Add the specified variable to execution environment Syntax: -e.key=value
    Default: {}'
  synonyms:
  - -e.
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Entry workflow name to be executed
  synonyms:
  - -entry
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Service hub where the project is hosted
  synonyms:
  - -hub
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Pull latest changes before run Default: false'
  synonyms:
  - -latest
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Library extension path
  synonyms:
  - -lib
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Assign a mnemonic name to the a pipeline run
  synonyms:
  - -name
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Do not check for remote project updates Default: false'
  synonyms:
  - -offline
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Load script parameters from a JSON/YAML file
  synonyms:
  - -params-file
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Set process options Syntax: -process.key=value Default: {}'
  synonyms:
  - -process.
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Choose a configuration profile
  synonyms:
  - -profile
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Max number of processes that can be executed in parallel by each executor
  synonyms:
  - -qs
  - -queue-size
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Execute the script using the cached results, useful to continue executions
    that was stopped by an error
  synonyms:
  - -resume
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Revision of the project to run (either a git branch, tag or commit
    SHA number)
  synonyms:
  - -r
  - -revision
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Test a script function with the name specified
  synonyms:
  - -test
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Private repository user name
  synonyms:
  - -user
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Use the specified Conda environment package or file (must end with
    .yml|.yaml suffix)
  synonyms:
  - -with-conda
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Create pipeline DAG file
  synonyms:
  - -with-dag
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Enable process execution in a Docker container
  synonyms:
  - -with-docker
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Send a notification email on workflow completion to the specified recipients
  synonyms:
  - -N
  - -with-notification
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Enable process execution in a Podman container
  synonyms:
  - -with-podman
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Create processes execution html report
  synonyms:
  - -with-report
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Enable process execution in a Singularity container
  synonyms:
  - -with-singularity
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Create processes execution timeline file
  synonyms:
  - -with-timeline
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Monitor workflow execution with Seqera Tower service
  synonyms:
  - -with-tower
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Create processes execution tracing file
  synonyms:
  - -with-trace
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Send workflow status messages via HTTP to target URL
  synonyms:
  - -with-weblog
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Disable process execution with Docker Default: false'
  synonyms:
  - -without-docker
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Disable process execution in a Podman container
  synonyms:
  - -without-podman
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Directory where intermediate result files are stored
  synonyms:
  - -w
  - -work-dir
  args: !EmptyFlagArg {}
  optional: true
command:
- illumina-cleanup
parent:
subcommands: []
help_flag: !Flag
  description: 'Print the command usage Default: false'
  synonyms:
  - -h
  - -help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "Execute a pipeline project\nUsage: run [options] Project name or repository\
  \ url\n  Options:\n    -E\n       Exports all current system environment\n     \
  \  Default: false\n    -ansi-log\n       Enable/disable ANSI console logging\n \
  \   -bucket-dir\n       Remote bucket where intermediate result files are stored\n\
  \    -cache\n       Enable/disable processes caching\n    -dump-channels\n     \
  \  Dump channels for debugging purpose\n    -dump-hashes\n       Dump task hash\
  \ keys for debugging purpose\n       Default: false\n    -e.\n       Add the specified\
  \ variable to execution environment\n       Syntax: -e.key=value\n       Default:\
  \ {}\n    -entry\n       Entry workflow name to be executed\n    -h, -help\n   \
  \    Print the command usage\n       Default: false\n    -hub\n       Service hub\
  \ where the project is hosted\n    -latest\n       Pull latest changes before run\n\
  \       Default: false\n    -lib\n       Library extension path\n    -name\n   \
  \    Assign a mnemonic name to the a pipeline run\n    -offline\n       Do not check\
  \ for remote project updates\n       Default: false\n    -params-file\n       Load\
  \ script parameters from a JSON/YAML file\n    -process.\n       Set process options\n\
  \       Syntax: -process.key=value\n       Default: {}\n    -profile\n       Choose\
  \ a configuration profile\n    -qs, -queue-size\n       Max number of processes\
  \ that can be executed in parallel by each executor\n    -resume\n       Execute\
  \ the script using the cached results, useful to continue\n       executions that\
  \ was stopped by an error\n    -r, -revision\n       Revision of the project to\
  \ run (either a git branch, tag or commit SHA\n       number)\n    -test\n     \
  \  Test a script function with the name specified\n    -user\n       Private repository\
  \ user name\n    -with-conda\n       Use the specified Conda environment package\
  \ or file (must end with\n       .yml|.yaml suffix)\n    -with-dag\n       Create\
  \ pipeline DAG file\n    -with-docker\n       Enable process execution in a Docker\
  \ container\n    -N, -with-notification\n       Send a notification email on workflow\
  \ completion to the specified\n       recipients\n    -with-podman\n       Enable\
  \ process execution in a Podman container\n    -with-report\n       Create processes\
  \ execution html report\n    -with-singularity\n       Enable process execution\
  \ in a Singularity container\n    -with-timeline\n       Create processes execution\
  \ timeline file\n    -with-tower\n       Monitor workflow execution with Seqera\
  \ Tower service\n    -with-trace\n       Create processes execution tracing file\n\
  \    -with-weblog\n       Send workflow status messages via HTTP to target URL\n\
  \    -without-docker\n       Disable process execution with Docker\n       Default:\
  \ false\n    -without-podman\n       Disable process execution in a Podman container\n\
  \    -w, -work-dir\n       Directory where intermediate result files are stored\n\
  \n"
generated_using:
- -h
