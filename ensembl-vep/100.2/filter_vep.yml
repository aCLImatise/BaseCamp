!Command
positional: []
named: []
command:
- filter_vep
parent:
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "#------------#\n# filter_vep #\n#------------#\n\nhttp://www.ensembl.org/info/docs/tools/vep/script/vep_filter.html\n\
  \nUsage:\n./filter_vep [arguments]\n  \n--help               -h   Print usage message\
  \ and exit\n\n--input_file [file]  -i   Specify the input file (i.e. the VEP results\
  \ file).\n                          If no input file is specified, the script will\n\
  \                          attempt to read from STDIN. Input may be gzipped - to\n\
  \                          force the script to read a file as gzipped, use --gz\n\
  --format [vcf|tab]        Specify input file format (tab for any tab-delimited\n\
  \                          format, including default VEP output format)\n\n--output_file\
  \ [file] -o   Specify the output file to write to. If no output file\n         \
  \                 is specified, the script will write to STDOUT\n--force_overwrite\
  \         Force the script to overwrite the output file if it\n                \
  \          already exists\n\n--filter [filters]   -f   Add filter. Multiple --filter\
  \ flags may be used, and\n                          are treated as logical ANDs,\
  \ i.e. all filters must\n                          pass for a line to be printed\n\
  \n--list               -l   List allowed fields from the input file\n--count   \
  \           -c   Print only a count of matched lines\n\n--only_matched         \
  \   In VCF files, the CSQ field that contains the\n                          consequence\
  \ data will often contain more than one\n                          \"block\" of\
  \ consequence data, where each block\n                          corresponds to a\
  \ variant/feature overlap. Using\n                          --only_matched will\
  \ remove blocks that do not pass the\n                          filters. By default,\
  \ the script prints out the entire\n                          VCF line if any of\
  \ the blocks pass the filters.\n\n--vcf_info_field [key]    With VCF input files,\
  \ by default filter_vep expects to\n                          find VEP annotations\
  \ encoded in the CSQ INFO key; VEP\n                          itself can be configured\
  \ to write to a different key\n                          (with the equivalent --vcf_info_field\
  \ flag). Use this\n                          flag to change the INFO key VEP expects\
  \ to decode.\n                          \n--ontology           -y   Use Sequence\
  \ Ontology to match consequence terms. Use\n                          with operator\
  \ \"is\" to match against all child terms of\n                          your value.\n\
  \                          e.g. \"Consequence is coding_sequence_variant\" will\n\
  \                          match missense_variant, synonymous_variant etc.\n   \
  \                       Requires database connection; defaults to connecting\n \
  \                         to ensembldb.ensembl.org. Use --host, --port, --user,\n\
  \                          --password, --version as per ./vep to change\n      \
  \                    connection parameters.\n"
generated_using:
- --help
