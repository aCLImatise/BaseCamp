!Command
positional:
- !Positional
  description: ''
  position: 0
  name: tagDir2hicFile.pl
  optional: false
- !Positional
  description: ''
  position: 1
  name: tag directory
  optional: false
named: []
command:
- tagDir2HiCsummary.pl
parent:
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "\n\tUsage: tagDir2hicFile.pl <tag directory> [options]\n\n\tBy default,\
  \ this program will output a file in \"HiC summary\" format to stdout:\n\t\tid<tab>chr1<tab>pos1<tab>strand1<tab>chr2<tab>pos2<tab>strand2\n\
  \n\tOptions below can be set to help output a *.hic file for use with juicebox/juicer\n\
  \n\tOptions (most are for use with juicer):\n\t\t-juicer <filename.hic> (create\
  \ *.hic file with juicer, \"-juicer auto\" places file in tagdir)\n\t\t-genome <genome>\
  \ (genome is passed on to juicer_tools - if using a normal genome, i.e. hg38,\n\t\
  \t\tmm10, etc. it's probably best to specify the genome code - if juicer_tools can\
  \ recognize it.\n\t\t\tOtherwise specify the path to a chrom.sizes file instead\
  \ of the genome code)\n\t\t-juicerExe <\"command to run juicer_tools\"> (executable\
  \ for running juicer_tools,\n\t\t\tby default assumes \"juicer_tools\" is in the\
  \ executable PATH)\n\t\t-juicerOpt <\"juicer options\"> (command line options to\
  \ pass to juicer, use quotes \"...\")\n\t\t-p <#> (number of CPUs to use during\
  \ sort command for juicer file creation, default: 1)\n\t\t-short <filename> (output\
  \ read pairs in \"short format\" for processing with juicer,\n\t\t\tbut don't run\
  \ juicer_tools. This file will not be sorted the way juicer wants it)\n\n"
generated_using: []
