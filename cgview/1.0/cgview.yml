!Command
positional:
- !Positional
  description: ''
  position: 0
  name: java
  optional: false
- !Positional
  description: ''
  position: 1
  name: OPTION
  optional: true
named:
- !Flag
  description: ''
  synonyms:
  - -jar
  args: !SimpleFlagArg
    name: cgview.jar
  optional: true
command:
- cgview
parent:
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "unknown option '--help'\nusage: java -jar cgview.jar [OPTION]...\n-A <integer>\
  \ Specifies a label font size.\n-c <integer> Specifies the base to center on when\
  \ zooming.\n-D <integer> Specifies a legend font size.\n-d <real> Specifies tick\
  \ density, between 0 and 1.0. Default is 1.0.\n-E <boolean> Whether or not to embed\
  \ vector-based text in SVG output.\n-e <boolean> Whether or not to exclude SVG output\
  \ from image series.\n-f <format> The format of the output: PNG, JPG, SVG, or SVGZ.\n\
  -h <file> HTML file to create.\n-H <integer> The height of the map.\n-i <file> The\
  \ input file to parse.\n-I <boolean> Whether or not to draw labels on the inside\
  \ of the backbone circle.\n-L <integer> The width of an external legend.\n-o <file>\
  \ The image file to create.\n-p <path> The path to the image file in the HTML file\
  \ created using the -h option.\n-r <boolean> Whether or not to remove legends.\n\
  -R <boolean> Whether or not to remove labels.\n-s <directory> Directory to receive\
  \ an image series.\n-S <boolean> Whether or not to reference external stylesheet\
  \ in HTML output.\n-u <boolean> Whether or not to reference overlib.js in HTML output.\n\
  -U <integer> Specifies a sequence ruler font size.\n-W <integer> The width of the\
  \ map.\n-x <string> Comma separated zoom values for image series.\n-z <real> The\
  \ factor to zoom in by.\nExample usage: java -jar cgview.jar -f png -i cybercell.xml\
  \ -o my_picture.png -h view_image.html.\nExample usage: java -jar cgview.jar -i\
  \ cybercell.xml -s directory_for_series -e true.\n"
generated_using:
- --help
