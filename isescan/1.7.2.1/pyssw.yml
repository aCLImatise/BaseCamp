!Command
positional: []
named:
- !Flag
  description: Path of the fasta file containing the subject genome sequence. Can
    be gziped. [REQUIRED]
  synonyms:
  - -s
  - --subject
  args: !SimpleFlagArg
    name: SUBJECT
  optional: true
- !Flag
  description: Path of the fastq or fasta file containing the short read to be aligned.
    Can be gziped. [REQUIRED]
  synonyms:
  - -q
  - --query
  args: !SimpleFlagArg
    name: QUERY
  optional: true
- !Flag
  description: 'Type of the query file = fastq or fasta. [default: fastq]'
  synonyms:
  - -t
  - --qtype
  args: !SimpleFlagArg
    name: QTYPE
  optional: true
- !Flag
  description: 'Positive integer for weight match in genome sequence alignment. [default:
    2]'
  synonyms:
  - -m
  - --match
  args: !SimpleFlagArg
    name: MATCH
  optional: true
- !Flag
  description: 'Positive integer. The negative value will be used as weight mismatch
    in genome sequence alignment. [default: 2]'
  synonyms:
  - -x
  - --mismatch
  args: !SimpleFlagArg
    name: MISMATCH
  optional: true
- !Flag
  description: 'Positive integer. The negative value will be used as weight for the
    gap opening. [default: 3]'
  synonyms:
  - -o
  - --gap_open
  args: !SimpleFlagArg
    name: GAP_OPEN
  optional: true
- !Flag
  description: 'Positive integer. The negative value will be used as weight for the
    gap opening. [default: 1]'
  synonyms:
  - -e
  - --gap_extend
  args: !SimpleFlagArg
    name: GAP_EXTEND
  optional: true
- !Flag
  description: 'Integer. Consider alignments having a score <= as not aligned. [default:
    0]'
  synonyms:
  - -f
  - --min_score
  args: !SimpleFlagArg
    name: MIN_SCORE
  optional: true
- !Flag
  description: 'Integer. Consider alignments having a length <= as not aligned. [default:
    0]'
  synonyms:
  - -l
  - --min_len
  args: !SimpleFlagArg
    name: MIN_LEN
  optional: true
- !Flag
  description: Flag. Align query in forward and reverse orientation and choose the
    best alignment. [Set by default]
  synonyms:
  - -r
  - --reverse
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Flag. Write unaligned reads in sam output [Unset by default]
  synonyms:
  - -u
  - --unaligned
  args: !EmptyFlagArg {}
  optional: true
command:
- pyssw.py
parent:
subcommands: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: show program's version number and exit
  synonyms:
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "Parse command line options\nUsage: pyssw.py -s subject.fasta -q fastq\
  \ (or fasta) [Facultative options]\n\nOptions:\n  --version             show program's\
  \ version number and exit\n  -h, --help            show this help message and exit\n\
  \  -s SUBJECT, --subject=SUBJECT\n                        Path of the fasta file\
  \ containing the subject genome\n                        sequence. Can be gziped.\
  \ [REQUIRED]\n  -q QUERY, --query=QUERY\n                        Path of the fastq\
  \ or fasta file containing the short\n                        read to be aligned.\
  \ Can be gziped. [REQUIRED]\n  -t QTYPE, --qtype=QTYPE\n                       \
  \ Type of the query file = fastq or fasta. [default:\n                        fastq]\n\
  \  -m MATCH, --match=MATCH\n                        Positive integer for weight\
  \ match in genome sequence\n                        alignment. [default: 2]\n  -x\
  \ MISMATCH, --mismatch=MISMATCH\n                        Positive integer. The negative\
  \ value will be used as\n                        weight mismatch in genome sequence\
  \ alignment.\n                        [default: 2]\n  -o GAP_OPEN, --gap_open=GAP_OPEN\n\
  \                        Positive integer. The negative value will be used as\n\
  \                        weight for the gap opening. [default: 3]\n  -e GAP_EXTEND,\
  \ --gap_extend=GAP_EXTEND\n                        Positive integer. The negative\
  \ value will be used as\n                        weight for the gap opening. [default:\
  \ 1]\n  -f MIN_SCORE, --min_score=MIN_SCORE\n                        Integer. Consider\
  \ alignments having a score <= as not\n                        aligned. [default:\
  \ 0]\n  -l MIN_LEN, --min_len=MIN_LEN\n                        Integer. Consider\
  \ alignments having a length <= as not\n                        aligned. [default:\
  \ 0]\n  -r, --reverse         Flag. Align query in forward and reverse orientation\n\
  \                        and choose the best alignment. [Set by default]\n  -u,\
  \ --unaligned       Flag. Write unaligned reads in sam output [Unset by\n      \
  \                  default]\n"
generated_using:
- --help
