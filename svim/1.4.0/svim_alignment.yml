&id002 !Command
positional:
- !Positional
  description: Working and output directory. Existing files in the directory are overwritten.
    If the directory does not exist, it is created.
  position: 0
  name: working_dir
  optional: false
- !Positional
  description: Coordinate-sorted and indexed BAM file with aligned long reads
  position: 1
  name: bam_file
  optional: false
- !Positional
  description: Reference genome file that the long reads were aligned to (FASTA)
  position: 2
  name: genome
  optional: false
named:
- !Flag
  description: 'Enable more verbose logging (default: False)'
  synonyms:
  - --verbose
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Minimum mapping quality of reads to consider (default: 20). Reads
    with a lower mapping quality are ignored.'
  synonyms:
  - --min_mapq
  args: !SimpleFlagArg
    name: MIN_MAPQ
  optional: true
- !Flag
  description: 'Minimum SV size to detect (default: 40). SVIM can potentially detect
    events of any size but is limited by the signal-to-noise ratio in the input alignments.
    That means that more accurate reads and alignments enable the detection of smaller
    events. For current PacBio or Nanopore data, we would recommend a minimum size
    of 40bp or larger.'
  synonyms:
  - --min_sv_size
  args: !SimpleFlagArg
    name: MIN_SV_SIZE
  optional: true
- !Flag
  description: 'Maximum SV size to detect (default: 100000). This parameter is used
    to distinguish long deletions (and inversions) from translocations which cannot
    be distinguished from the alignment alone. Split read segments mapping far apart
    on the reference could either indicate a very long deletion (inversion) or a translocation
    breakpoint. SVIM calls a translocation breakpoint if the mapping distance is larger
    than this parameter and a deletion (or inversion) if it is smaller or equal.'
  synonyms:
  - --max_sv_size
  args: !SimpleFlagArg
    name: MAX_SV_SIZE
  optional: true
- !Flag
  description: 'Maximum tolerated gap between adjacent alignment segments (default:
    10). This parameter applies to gaps on the reference and the read. Example: Deletions
    are detected from two subsequent segments of a split read that are mapped far
    apart from each other on the reference. The segment gap tolerance determines the
    maximum tolerated length of the read gap between both segments. If there is an
    unaligned read segment larger than this value between the two segments, no deletion
    is called.'
  synonyms:
  - --segment_gap_tolerance
  args: !SimpleFlagArg
    name: SEGMENT_GAP_TOLERANCE
  optional: true
- !Flag
  description: 'Maximum tolerated overlap between adjacent alignment segments (default:
    5). This parameter applies to overlaps on the reference and the read. Example:
    Deletions are detected from two subsequent segments of a split read that are mapped
    far apart from each other on the reference. The segment overlap tolerance determines
    the maximum tolerated length of an overlap between both segments on the read.
    If the overlap between the two segments on the read is larger than this value,
    no deletion is called.'
  synonyms:
  - --segment_overlap_tolerance
  args: !SimpleFlagArg
    name: SEGMENT_OVERLAP_TOLERANCE
  optional: true
- !Flag
  description: 'Maximum distance in bp between SVs in a partition (default: 1000).
    Before clustering, the SV signatures are divided into coarse partitions. This
    parameter determines the maximum distance between two subsequent signatures in
    the same partition. If the distance between two subsequent signatures is larger
    than this parameter, they are distributed into separate partitions.'
  synonyms:
  - --partition_max_distance
  args: !SimpleFlagArg
    name: PARTITION_MAX_DISTANCE
  optional: true
- !Flag
  description: 'Distance normalizer used for span-position distance (default: 900).
    SVIM clusters the SV signatures using an hierarchical clustering approach and
    a novel distance metric called "span-position distance". Span- position distance
    is the sum of two components, span distance and position distance. The span distance
    is the difference in lengths between signatures normalized by the greater length
    and always lies in the interval [0,1]. The position distance is the difference
    in position between signatures normalized by the distance normalizer (this parameter).
    For a position difference of 1.8kb and a distance normalizer of 900, the position
    distance will be 2. A smaller distance normalizer leads to a higher position distance
    and as a consequence increases the importance of the position distance in the
    span-position distance relative to the span distance.'
  synonyms:
  - --distance_normalizer
  args: !SimpleFlagArg
    name: DISTANCE_NORMALIZER
  optional: true
- !Flag
  description: 'Maximum span-position distance between SVs in a cluster (default:
    0.3). This is the most important parameter because it determines the strictness
    of clustering. Choosing a large value leads to fewer but larger clusters with
    larger distances between its members. Choosing a small value leads to more but
    smaller clusters with smaller distances between its members. This parameter determines
    the height of the cut-off in the hierarchical clustering dendrogram.'
  synonyms:
  - --cluster_max_distance
  args: !SimpleFlagArg
    name: CLUSTER_MAX_DISTANCE
  optional: true
- !Flag
  description: "Output all rearrangements additionally in BND notation (default: False).\
    \ By default, SV signatures from the read alignments are used to detect complete\
    \ SVs, such as deletions, insertions and inversions. When this option is enabled,\
    \ all SVs are also output in breakend (BND) notation as defined in the VCF specs.\
    \ For instance, a deletion gets two records in the VCF output: 1. the normal <DEL>\
    \ record and 2. a <BND> record representing the novel adjacency between the deletion's\
    \ start and end coordinate in the sample genome."
  synonyms:
  - --all_bnds
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Maximum span-position distance between the origin of an insertion
    and a deletion to be flagged as a potential cut&paste insertion (default: 1.0)'
  synonyms:
  - --del_ins_dup_max_distance
  args: !SimpleFlagArg
    name: DEL_INS_DUP_MAX_DISTANCE
  optional: true
- !Flag
  description: 'Maximum distance in bp between translocation breakpoint destinations
    in a partition (default: 1000)'
  synonyms:
  - --trans_destination_partition_max_distance
  args: !SimpleFlagArg
    name: TRANS_DESTINATION_PARTITION_MAX_DISTANCE
  optional: true
- !Flag
  description: 'Maximum distance in bp between translocation breakpoints in a partition
    (default: 200)'
  synonyms:
  - --trans_partition_max_distance
  args: !SimpleFlagArg
    name: TRANS_PARTITION_MAX_DISTANCE
  optional: true
- !Flag
  description: 'Maximum distance in bp between a translocation breakpoint and an SV
    signature to be combined (default: 500)'
  synonyms:
  - --trans_sv_max_distance
  args: !SimpleFlagArg
    name: TRANS_SV_MAX_DISTANCE
  optional: true
- !Flag
  description: 'Disable genotyping (default: False)'
  synonyms:
  - --skip_genotyping
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Minimum score for genotyping (default: 3). Only SV candidates with
    a higher or equal score are genotyped. Depending on the score distribution among
    the SV candidates, decreasing this value increases the runtime. We recommend to
    choose a value close to the score threshold used for filtering the SV candidates.'
  synonyms:
  - --minimum_score
  args: !SimpleFlagArg
    name: MINIMUM_SCORE
  optional: true
- !Flag
  description: 'Minimum variant allele frequency to be called as homozygous (default:
    0.8). Allele frequency is computed as the fraction of reads supporting the variant
    over the total number of reads covering the variant. Variants with an allele frequence
    greater than or equal to this threshold are called as homozygous alternative.'
  synonyms:
  - --homozygous_threshold
  args: !SimpleFlagArg
    name: HOMOZYGOUS_THRESHOLD
  optional: true
- !Flag
  description: 'Minimum variant allele frequency to be called as heterozygous (default:
    0.2). Allele frequency is computed as the fraction of reads supporting the variant
    over the total number of reads covering the variant. Variants with an allele frequence
    greater than or equal to this threshold but lower than the homozygous threshold
    are called as heterozygous alternative. Variants with an allele frequence lower
    than this threshold are called as homozygous reference.'
  synonyms:
  - --heterozygous_threshold
  args: !SimpleFlagArg
    name: HETEROZYGOUS_THRESHOLD
  optional: true
- !Flag
  description: 'Minimum total read depth for genotyping (default: 4). Variants covered
    by a total number of reads lower than this value are not assigned a genotype (./.
    in the output VCF file).'
  synonyms:
  - --minimum_depth
  args: !SimpleFlagArg
    name: MINIMUM_DEPTH
  optional: true
- !Flag
  description: 'Sample ID to include in output vcf file (default: Sample)'
  synonyms:
  - --sample
  args: !SimpleFlagArg
    name: SAMPLE
  optional: true
- !Flag
  description: 'SV types to include in output VCF (default: DEL,INS,INV,DUP:TANDEM,DUP:INT,BND).
    Give a comma- separated list of SV types. The possible SV types are: DEL (deletions),
    INS (novel insertions), INV (inversions), DUP:TANDEM (tandem duplications), DUP:INT
    (interspersed duplications), BND (breakends).'
  synonyms:
  - --types
  args: !SimpleFlagArg
    name: TYPES
  optional: true
- !Flag
  description: 'Use nucleotide sequences for alleles of deletions, inversions and
    insertions in output VCF (default: False). By default, all SVs are represented
    by symbolic alleles, such as <DEL>, <INV> or <INS>. If enabled, ALT alleles of
    insertions are obtained from the sequence of a random read that supports the variant.'
  synonyms:
  - --sequence_alleles
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Output insertion sequences in INFO tag of VCF (default: False). If
    enabled, the INFO/SEQS tag contains a list of insertion sequences from the supporting
    reads. However, the insertion sequences are not combined into a consensus sequence.'
  synonyms:
  - --insertion_sequences
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Represent tandem duplications as insertions in output VCF (default:
    False). By default, tandem duplications are represented by the SVTYPE=DUP:TANDEM
    and the genomic source is given by the POS and END tags. When enabling this option,
    duplications are instead represented by the SVTYPE=INS and POS and END both give
    the insertion point of the duplication.'
  synonyms:
  - --tandem_duplications_as_insertions
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Represent interspersed duplications as insertions in output VCF (default:
    False). By default, interspersed duplications are represented by the SVTYPE=DUP:INT
    and the genomic source is given by the POS and END tags. When enabling this option,
    duplications are instead represented by the SVTYPE=INS and POS and END both give
    the insertion point of the duplication.'
  synonyms:
  - --interspersed_duplications_as_insertions
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Output names of supporting reads in INFO tag of VCF (default: False).
    If enabled, the INFO/READS tag contains the list of names of the supporting reads.'
  synonyms:
  - --read_names
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'look for information on ZMWs in PacBio read names (default: False).
    If enabled, the INFO/ZMWS tag contains the number of ZMWs that produced supporting
    reads.'
  synonyms:
  - --zmws
  args: !EmptyFlagArg {}
  optional: true
command:
- svim
- alignment
parent: &id001 !Command
  positional: []
  named: []
  command:
  - svim
  parent:
  subcommands:
  - !Command
    positional:
    - !Positional
      description: Working and output directory. Existing files in the directory are
        overwritten. If the directory does not exist, it is created.
      position: 0
      name: working_dir
      optional: false
    - !Positional
      description: 'Read file (FASTA, FASTQ, gzipped FASTA, gzipped FASTQ or file
        list). The read file has to have one of the following supported file endings:
        FASTA: .fa, .fasta, .FA, .fa.gz, .fa.gzip, .fasta.gz, .fasta.gzip FASTQ: .fq,
        .fastq, .FQ, .fq.gz, .fq.gzip, .fastq.gz, .fastq.gzip FILE LIST: .fa.fn, fq.fn'
      position: 1
      name: reads
      optional: false
    - !Positional
      description: Reference genome file (FASTA)
      position: 2
      name: genome
      optional: false
    named:
    - !Flag
      description: 'Enable more verbose logging (default: False)'
      synonyms:
      - --verbose
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'CPU cores to use for the alignment (default: 1)'
      synonyms:
      - --cores
      args: !SimpleFlagArg
        name: CORES
      optional: true
    - !Flag
      description: 'Tool for read alignment: ngmlr or minimap2 (default: ngmlr)'
      synonyms:
      - --aligner
      args: !ChoiceFlagArg
        choices: !!set
          ? minimap2
          ? ngmlr
      optional: true
    - !Flag
      description: 'Use Nanopore settings for read alignment (default: False)'
      synonyms:
      - --nanopore
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Minimum mapping quality of reads to consider (default: 20). Reads
        with a lower mapping quality are ignored.'
      synonyms:
      - --min_mapq
      args: !SimpleFlagArg
        name: MIN_MAPQ
      optional: true
    - !Flag
      description: 'Minimum SV size to detect (default: 40). SVIM can potentially
        detect events of any size but is limited by the signal-to-noise ratio in the
        input alignments. That means that more accurate reads and alignments enable
        the detection of smaller events. For current PacBio or Nanopore data, we would
        recommend a minimum size of 40bp or larger.'
      synonyms:
      - --min_sv_size
      args: !SimpleFlagArg
        name: MIN_SV_SIZE
      optional: true
    - !Flag
      description: 'Maximum SV size to detect (default: 100000). This parameter is
        used to distinguish long deletions (and inversions) from translocations which
        cannot be distinguished from the alignment alone. Split read segments mapping
        far apart on the reference could either indicate a very long deletion (inversion)
        or a translocation breakpoint. SVIM calls a translocation breakpoint if the
        mapping distance is larger than this parameter and a deletion (or inversion)
        if it is smaller or equal.'
      synonyms:
      - --max_sv_size
      args: !SimpleFlagArg
        name: MAX_SV_SIZE
      optional: true
    - !Flag
      description: 'Maximum tolerated gap between adjacent alignment segments (default:
        10). This parameter applies to gaps on the reference and the read. Example:
        Deletions are detected from two subsequent segments of a split read that are
        mapped far apart from each other on the reference. The segment gap tolerance
        determines the maximum tolerated length of the read gap between both segments.
        If there is an unaligned read segment larger than this value between the two
        segments, no deletion is called.'
      synonyms:
      - --segment_gap_tolerance
      args: !SimpleFlagArg
        name: SEGMENT_GAP_TOLERANCE
      optional: true
    - !Flag
      description: 'Maximum tolerated overlap between adjacent alignment segments
        (default: 5). This parameter applies to overlaps on the reference and the
        read. Example: Deletions are detected from two subsequent segments of a split
        read that are mapped far apart from each other on the reference. The segment
        overlap tolerance determines the maximum tolerated length of an overlap between
        both segments on the read. If the overlap between the two segments on the
        read is larger than this value, no deletion is called.'
      synonyms:
      - --segment_overlap_tolerance
      args: !SimpleFlagArg
        name: SEGMENT_OVERLAP_TOLERANCE
      optional: true
    - !Flag
      description: "Output all rearrangements additionally in BND notation (default:\
        \ False). By default, SV signatures from the read alignments are used to detect\
        \ complete SVs, such as deletions, insertions and inversions. When this option\
        \ is enabled, all SVs are also output in breakend (BND) notation as defined\
        \ in the VCF specs. For instance, a deletion gets two records in the VCF output:\
        \ 1. the normal <DEL> record and 2. a <BND> record representing the novel\
        \ adjacency between the deletion's start and end coordinate in the sample\
        \ genome."
      synonyms:
      - --all_bnds
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Maximum distance in bp between SVs in a partition (default: 1000).
        Before clustering, the SV signatures are divided into coarse partitions. This
        parameter determines the maximum distance between two subsequent signatures
        in the same partition. If the distance between two subsequent signatures is
        larger than this parameter, they are distributed into separate partitions.'
      synonyms:
      - --partition_max_distance
      args: !SimpleFlagArg
        name: PARTITION_MAX_DISTANCE
      optional: true
    - !Flag
      description: 'Distance normalizer used for span-position distance (default:
        900). SVIM clusters the SV signatures using an hierarchical clustering approach
        and a novel distance metric called "span-position distance". Span- position
        distance is the sum of two components, span distance and position distance.
        The span distance is the difference in lengths between signatures normalized
        by the greater length and always lies in the interval [0,1]. The position
        distance is the difference in position between signatures normalized by the
        distance normalizer (this parameter). For a position difference of 1.8kb and
        a distance normalizer of 900, the position distance will be 2. A smaller distance
        normalizer leads to a higher position distance and as a consequence increases
        the importance of the position distance in the span-position distance relative
        to the span distance.'
      synonyms:
      - --distance_normalizer
      args: !SimpleFlagArg
        name: DISTANCE_NORMALIZER
      optional: true
    - !Flag
      description: 'Maximum span-position distance between SVs in a cluster (default:
        0.3). This is the most important parameter because it determines the strictness
        of clustering. Choosing a large value leads to fewer but larger clusters with
        larger distances between its members. Choosing a small value leads to more
        but smaller clusters with smaller distances between its members. This parameter
        determines the height of the cut-off in the hierarchical clustering dendrogram.'
      synonyms:
      - --cluster_max_distance
      args: !SimpleFlagArg
        name: CLUSTER_MAX_DISTANCE
      optional: true
    - !Flag
      description: 'Maximum span-position distance between the origin of an insertion
        and a deletion to be flagged as a potential cut&paste insertion (default:
        1.0)'
      synonyms:
      - --del_ins_dup_max_distance
      args: !SimpleFlagArg
        name: DEL_INS_DUP_MAX_DISTANCE
      optional: true
    - !Flag
      description: 'Maximum distance in bp between translocation breakpoint destinations
        in a partition (default: 1000)'
      synonyms:
      - --trans_destination_partition_max_distance
      args: !SimpleFlagArg
        name: TRANS_DESTINATION_PARTITION_MAX_DISTANCE
      optional: true
    - !Flag
      description: 'Maximum distance in bp between translocation breakpoints in a
        partition (default: 200)'
      synonyms:
      - --trans_partition_max_distance
      args: !SimpleFlagArg
        name: TRANS_PARTITION_MAX_DISTANCE
      optional: true
    - !Flag
      description: 'Maximum distance in bp between a translocation breakpoint and
        an SV signature to be combined (default: 500)'
      synonyms:
      - --trans_sv_max_distance
      args: !SimpleFlagArg
        name: TRANS_SV_MAX_DISTANCE
      optional: true
    - !Flag
      description: 'Disable genotyping (default: False)'
      synonyms:
      - --skip_genotyping
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Minimum score for genotyping (default: 3). Only SV candidates
        with a higher or equal score are genotyped. Depending on the score distribution
        among the SV candidates, decreasing this value increases the runtime. We recommend
        to choose a value close to the score threshold used for filtering the SV candidates.'
      synonyms:
      - --minimum_score
      args: !SimpleFlagArg
        name: MINIMUM_SCORE
      optional: true
    - !Flag
      description: 'Minimum variant allele frequency to be called as homozygous (default:
        0.8). Allele frequency is computed as the fraction of reads supporting the
        variant over the total number of reads covering the variant. Variants with
        an allele frequence greater than or equal to this threshold are called as
        homozygous alternative.'
      synonyms:
      - --homozygous_threshold
      args: !SimpleFlagArg
        name: HOMOZYGOUS_THRESHOLD
      optional: true
    - !Flag
      description: 'Minimum variant allele frequency to be called as heterozygous
        (default: 0.2). Allele frequency is computed as the fraction of reads supporting
        the variant over the total number of reads covering the variant. Variants
        with an allele frequence greater than or equal to this threshold but lower
        than the homozygous threshold are called as heterozygous alternative. Variants
        with an allele frequence lower than this threshold are called as homozygous
        reference.'
      synonyms:
      - --heterozygous_threshold
      args: !SimpleFlagArg
        name: HETEROZYGOUS_THRESHOLD
      optional: true
    - !Flag
      description: 'Minimum total read depth for genotyping (default: 4). Variants
        covered by a total number of reads lower than this value are not assigned
        a genotype (./. in the output VCF file).'
      synonyms:
      - --minimum_depth
      args: !SimpleFlagArg
        name: MINIMUM_DEPTH
      optional: true
    - !Flag
      description: 'Sample ID to include in output vcf file (default: Sample)'
      synonyms:
      - --sample
      args: !SimpleFlagArg
        name: SAMPLE
      optional: true
    - !Flag
      description: 'SV types to include in output VCF (default: DEL,INS,INV,DUP:TANDEM,DUP:INT,BND).
        Give a comma- separated list of SV types. The possible SV types are: DEL (deletions),
        INS (novel insertions), INV (inversions), DUP:TANDEM (tandem duplications),
        DUP:INT (interspersed duplications), BND (breakends).'
      synonyms:
      - --types
      args: !SimpleFlagArg
        name: TYPES
      optional: true
    - !Flag
      description: 'Use nucleotide sequences for alleles of deletions, inversions
        and insertions in output VCF (default: False). By default, all SVs are represented
        by symbolic alleles, such as <DEL>, <INV> or <INS>. If enabled, ALT alleles
        of insertions are obtained from the sequence of a random read that supports
        the variant.'
      synonyms:
      - --sequence_alleles
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Output insertion sequences in INFO tag of VCF (default: False).
        If enabled, the INFO/SEQS tag contains a list of insertion sequences from
        the supporting reads. However, the insertion sequences are not combined into
        a consensus sequence.'
      synonyms:
      - --insertion_sequences
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Represent tandem duplications as insertions in output VCF (default:
        False). By default, tandem duplications are represented by the SVTYPE=DUP:TANDEM
        and the genomic source is given by the POS and END tags. When enabling this
        option, duplications are instead represented by the SVTYPE=INS and POS and
        END both give the insertion point of the duplication.'
      synonyms:
      - --tandem_duplications_as_insertions
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Represent interspersed duplications as insertions in output VCF
        (default: False). By default, interspersed duplications are represented by
        the SVTYPE=DUP:INT and the genomic source is given by the POS and END tags.
        When enabling this option, duplications are instead represented by the SVTYPE=INS
        and POS and END both give the insertion point of the duplication.'
      synonyms:
      - --interspersed_duplications_as_insertions
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Output names of supporting reads in INFO tag of VCF (default:
        False). If enabled, the INFO/READS tag contains the list of names of the supporting
        reads.'
      synonyms:
      - --read_names
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'look for information on ZMWs in PacBio read names (default: False).
        If enabled, the INFO/ZMWS tag contains the number of ZMWs that produced supporting
        reads.'
      synonyms:
      - --zmws
      args: !EmptyFlagArg {}
      optional: true
    command:
    - svim
    - reads
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: svim reads [-h] [--verbose] [--cores CORES]\n             \
      \     [--aligner {ngmlr,minimap2}] [--nanopore]\n                  [--min_mapq\
      \ MIN_MAPQ] [--min_sv_size MIN_SV_SIZE]\n                  [--max_sv_size MAX_SV_SIZE]\n\
      \                  [--segment_gap_tolerance SEGMENT_GAP_TOLERANCE]\n       \
      \           [--segment_overlap_tolerance SEGMENT_OVERLAP_TOLERANCE]\n      \
      \            [--all_bnds]\n                  [--partition_max_distance PARTITION_MAX_DISTANCE]\n\
      \                  [--distance_normalizer DISTANCE_NORMALIZER]\n           \
      \       [--cluster_max_distance CLUSTER_MAX_DISTANCE]\n                  [--del_ins_dup_max_distance\
      \ DEL_INS_DUP_MAX_DISTANCE]\n                  [--trans_destination_partition_max_distance\
      \ TRANS_DESTINATION_PARTITION_MAX_DISTANCE]\n                  [--trans_partition_max_distance\
      \ TRANS_PARTITION_MAX_DISTANCE]\n                  [--trans_sv_max_distance\
      \ TRANS_SV_MAX_DISTANCE]\n                  [--skip_genotyping] [--minimum_score\
      \ MINIMUM_SCORE]\n                  [--homozygous_threshold HOMOZYGOUS_THRESHOLD]\n\
      \                  [--heterozygous_threshold HETEROZYGOUS_THRESHOLD]\n     \
      \             [--minimum_depth MINIMUM_DEPTH] [--sample SAMPLE]\n          \
      \        [--types TYPES] [--sequence_alleles] [--insertion_sequences]\n    \
      \              [--tandem_duplications_as_insertions]\n                  [--interspersed_duplications_as_insertions]\
      \ [--read_names]\n                  [--zmws]\n                  working_dir\
      \ reads genome\n\npositional arguments:\n  working_dir           Working and\
      \ output directory. Existing files in the\n                        directory\
      \ are overwritten. If the directory does not\n                        exist,\
      \ it is created.\n  reads                 Read file (FASTA, FASTQ, gzipped FASTA,\
      \ gzipped FASTQ\n                        or file list). The read file has to\
      \ have one of the\n                        following supported file endings:\
      \ FASTA: .fa, .fasta,\n                        .FA, .fa.gz, .fa.gzip, .fasta.gz,\
      \ .fasta.gzip FASTQ:\n                        .fq, .fastq, .FQ, .fq.gz, .fq.gzip,\
      \ .fastq.gz,\n                        .fastq.gzip FILE LIST: .fa.fn, fq.fn\n\
      \  genome                Reference genome file (FASTA)\n\noptional arguments:\n\
      \  -h, --help            show this help message and exit\n  --verbose      \
      \       Enable more verbose logging (default: False)\n\nALIGN:\n  --cores CORES\
      \         CPU cores to use for the alignment (default: 1)\n  --aligner {ngmlr,minimap2}\n\
      \                        Tool for read alignment: ngmlr or minimap2 (default:\n\
      \                        ngmlr)\n  --nanopore            Use Nanopore settings\
      \ for read alignment (default:\n                        False)\n\nCOLLECT:\n\
      \  --min_mapq MIN_MAPQ   Minimum mapping quality of reads to consider (default:\n\
      \                        20). Reads with a lower mapping quality are ignored.\n\
      \  --min_sv_size MIN_SV_SIZE\n                        Minimum SV size to detect\
      \ (default: 40). SVIM can\n                        potentially detect events\
      \ of any size but is limited\n                        by the signal-to-noise\
      \ ratio in the input alignments.\n                        That means that more\
      \ accurate reads and alignments\n                        enable the detection\
      \ of smaller events. For current\n                        PacBio or Nanopore\
      \ data, we would recommend a minimum\n                        size of 40bp or\
      \ larger.\n  --max_sv_size MAX_SV_SIZE\n                        Maximum SV size\
      \ to detect (default: 100000). This\n                        parameter is used\
      \ to distinguish long deletions (and\n                        inversions) from\
      \ translocations which cannot be\n                        distinguished from\
      \ the alignment alone. Split read\n                        segments mapping\
      \ far apart on the reference could\n                        either indicate\
      \ a very long deletion (inversion) or a\n                        translocation\
      \ breakpoint. SVIM calls a translocation\n                        breakpoint\
      \ if the mapping distance is larger than this\n                        parameter\
      \ and a deletion (or inversion) if it is\n                        smaller or\
      \ equal.\n  --segment_gap_tolerance SEGMENT_GAP_TOLERANCE\n                \
      \        Maximum tolerated gap between adjacent alignment\n                \
      \        segments (default: 10). This parameter applies to gaps\n          \
      \              on the reference and the read. Example: Deletions are\n     \
      \                   detected from two subsequent segments of a split read\n\
      \                        that are mapped far apart from each other on the\n\
      \                        reference. The segment gap tolerance determines the\n\
      \                        maximum tolerated length of the read gap between both\n\
      \                        segments. If there is an unaligned read segment larger\n\
      \                        than this value between the two segments, no deletion\n\
      \                        is called.\n  --segment_overlap_tolerance SEGMENT_OVERLAP_TOLERANCE\n\
      \                        Maximum tolerated overlap between adjacent alignment\n\
      \                        segments (default: 5). This parameter applies to\n\
      \                        overlaps on the reference and the read. Example:\n\
      \                        Deletions are detected from two subsequent segments\
      \ of\n                        a split read that are mapped far apart from each\
      \ other\n                        on the reference. The segment overlap tolerance\n\
      \                        determines the maximum tolerated length of an overlap\n\
      \                        between both segments on the read. If the overlap\n\
      \                        between the two segments on the read is larger than\n\
      \                        this value, no deletion is called.\n  --all_bnds  \
      \          Output all rearrangements additionally in BND notation\n        \
      \                (default: False). By default, SV signatures from the\n    \
      \                    read alignments are used to detect complete SVs, such\n\
      \                        as deletions, insertions and inversions. When this\n\
      \                        option is enabled, all SVs are also output in breakend\n\
      \                        (BND) notation as defined in the VCF specs. For\n \
      \                       instance, a deletion gets two records in the VCF\n \
      \                       output: 1. the normal <DEL> record and 2. a <BND>\n\
      \                        record representing the novel adjacency between the\n\
      \                        deletion's start and end coordinate in the sample\n\
      \                        genome.\n\nCLUSTER:\n  --partition_max_distance PARTITION_MAX_DISTANCE\n\
      \                        Maximum distance in bp between SVs in a partition\n\
      \                        (default: 1000). Before clustering, the SV signatures\n\
      \                        are divided into coarse partitions. This parameter\n\
      \                        determines the maximum distance between two subsequent\n\
      \                        signatures in the same partition. If the distance\n\
      \                        between two subsequent signatures is larger than this\n\
      \                        parameter, they are distributed into separate\n   \
      \                     partitions.\n  --distance_normalizer DISTANCE_NORMALIZER\n\
      \                        Distance normalizer used for span-position distance\n\
      \                        (default: 900). SVIM clusters the SV signatures using\n\
      \                        an hierarchical clustering approach and a novel\n \
      \                       distance metric called \"span-position distance\". Span-\n\
      \                        position distance is the sum of two components, span\n\
      \                        distance and position distance. The span distance is\n\
      \                        the difference in lengths between signatures\n    \
      \                    normalized by the greater length and always lies in\n \
      \                       the interval [0,1]. The position distance is the\n \
      \                       difference in position between signatures normalized\n\
      \                        by the distance normalizer (this parameter). For a\n\
      \                        position difference of 1.8kb and a distance normalizer\n\
      \                        of 900, the position distance will be 2. A smaller\n\
      \                        distance normalizer leads to a higher position\n  \
      \                      distance and as a consequence increases the importance\n\
      \                        of the position distance in the span-position distance\n\
      \                        relative to the span distance.\n  --cluster_max_distance\
      \ CLUSTER_MAX_DISTANCE\n                        Maximum span-position distance\
      \ between SVs in a\n                        cluster (default: 0.3). This is\
      \ the most important\n                        parameter because it determines\
      \ the strictness of\n                        clustering. Choosing a large value\
      \ leads to fewer but\n                        larger clusters with larger distances\
      \ between its\n                        members. Choosing a small value leads\
      \ to more but\n                        smaller clusters with smaller distances\
      \ between its\n                        members. This parameter determines the\
      \ height of the\n                        cut-off in the hierarchical clustering\
      \ dendrogram.\n\nCOMBINE:\n  --del_ins_dup_max_distance DEL_INS_DUP_MAX_DISTANCE\n\
      \                        Maximum span-position distance between the origin of\n\
      \                        an insertion and a deletion to be flagged as a\n  \
      \                      potential cut&paste insertion (default: 1.0)\n  --trans_destination_partition_max_distance\
      \ TRANS_DESTINATION_PARTITION_MAX_DISTANCE\n                        Maximum\
      \ distance in bp between translocation\n                        breakpoint destinations\
      \ in a partition (default: 1000)\n  --trans_partition_max_distance TRANS_PARTITION_MAX_DISTANCE\n\
      \                        Maximum distance in bp between translocation\n    \
      \                    breakpoints in a partition (default: 200)\n  --trans_sv_max_distance\
      \ TRANS_SV_MAX_DISTANCE\n                        Maximum distance in bp between\
      \ a translocation\n                        breakpoint and an SV signature to\
      \ be combined\n                        (default: 500)\n\nGENOTYPE:\n  --skip_genotyping\
      \     Disable genotyping (default: False)\n  --minimum_score MINIMUM_SCORE\n\
      \                        Minimum score for genotyping (default: 3). Only SV\n\
      \                        candidates with a higher or equal score are genotyped.\n\
      \                        Depending on the score distribution among the SV\n\
      \                        candidates, decreasing this value increases the\n \
      \                       runtime. We recommend to choose a value close to the\n\
      \                        score threshold used for filtering the SV candidates.\n\
      \  --homozygous_threshold HOMOZYGOUS_THRESHOLD\n                        Minimum\
      \ variant allele frequency to be called as\n                        homozygous\
      \ (default: 0.8). Allele frequency is\n                        computed as the\
      \ fraction of reads supporting the\n                        variant over the\
      \ total number of reads covering the\n                        variant. Variants\
      \ with an allele frequence greater\n                        than or equal to\
      \ this threshold are called as\n                        homozygous alternative.\n\
      \  --heterozygous_threshold HETEROZYGOUS_THRESHOLD\n                       \
      \ Minimum variant allele frequency to be called as\n                       \
      \ heterozygous (default: 0.2). Allele frequency is\n                       \
      \ computed as the fraction of reads supporting the\n                       \
      \ variant over the total number of reads covering the\n                    \
      \    variant. Variants with an allele frequence greater\n                  \
      \      than or equal to this threshold but lower than the\n                \
      \        homozygous threshold are called as heterozygous\n                 \
      \       alternative. Variants with an allele frequence lower\n             \
      \           than this threshold are called as homozygous\n                 \
      \       reference.\n  --minimum_depth MINIMUM_DEPTH\n                      \
      \  Minimum total read depth for genotyping (default: 4).\n                 \
      \       Variants covered by a total number of reads lower than\n           \
      \             this value are not assigned a genotype (./. in the\n         \
      \               output VCF file).\n\nOUTPUT:\n  --sample SAMPLE       Sample\
      \ ID to include in output vcf file (default:\n                        Sample)\n\
      \  --types TYPES         SV types to include in output VCF (default:\n     \
      \                   DEL,INS,INV,DUP:TANDEM,DUP:INT,BND). Give a comma-\n   \
      \                     separated list of SV types. The possible SV types are:\n\
      \                        DEL (deletions), INS (novel insertions), INV\n    \
      \                    (inversions), DUP:TANDEM (tandem duplications),\n     \
      \                   DUP:INT (interspersed duplications), BND (breakends).\n\
      \  --sequence_alleles    Use nucleotide sequences for alleles of deletions,\n\
      \                        inversions and insertions in output VCF (default:\n\
      \                        False). By default, all SVs are represented by\n  \
      \                      symbolic alleles, such as <DEL>, <INV> or <INS>. If\n\
      \                        enabled, ALT alleles of insertions are obtained from\n\
      \                        the sequence of a random read that supports the\n \
      \                       variant.\n  --insertion_sequences\n                \
      \        Output insertion sequences in INFO tag of VCF\n                   \
      \     (default: False). If enabled, the INFO/SEQS tag\n                    \
      \    contains a list of insertion sequences from the\n                     \
      \   supporting reads. However, the insertion sequences are\n               \
      \         not combined into a consensus sequence.\n  --tandem_duplications_as_insertions\n\
      \                        Represent tandem duplications as insertions in output\n\
      \                        VCF (default: False). By default, tandem duplications\n\
      \                        are represented by the SVTYPE=DUP:TANDEM and the\n\
      \                        genomic source is given by the POS and END tags. When\n\
      \                        enabling this option, duplications are instead\n  \
      \                      represented by the SVTYPE=INS and POS and END both\n\
      \                        give the insertion point of the duplication.\n  --interspersed_duplications_as_insertions\n\
      \                        Represent interspersed duplications as insertions in\n\
      \                        output VCF (default: False). By default, interspersed\n\
      \                        duplications are represented by the SVTYPE=DUP:INT\
      \ and\n                        the genomic source is given by the POS and END\
      \ tags.\n                        When enabling this option, duplications are\
      \ instead\n                        represented by the SVTYPE=INS and POS and\
      \ END both\n                        give the insertion point of the duplication.\n\
      \  --read_names          Output names of supporting reads in INFO tag of VCF\n\
      \                        (default: False). If enabled, the INFO/READS tag\n\
      \                        contains the list of names of the supporting reads.\n\
      \  --zmws                look for information on ZMWs in PacBio read names\n\
      \                        (default: False). If enabled, the INFO/ZMWS tag\n \
      \                       contains the number of ZMWs that produced supporting\n\
      \                        reads.\n"
    generated_using: &id003
    - --help
  - *id002
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag: !Flag
    description: show program's version number and exit
    synonyms:
    - --version
    - -v
    args: !EmptyFlagArg {}
    optional: true
  help_text: "usage: svim [-h] [--version] {reads,alignment} ...\n\nSVIM (pronounced\
    \ SWIM) is a structural variant caller for long reads. \nIt discriminates five\
    \ different variant classes: deletions, tandem and interspersed duplications,\
    \ \ninversions and insertions. SVIM is unique in its capability of extracting\
    \ both the genomic origin and \ndestination of duplications.\n\nSVIM consists\
    \ of four major steps:\n- COLLECT detects signatures for SVs in long read alignments\n\
    - CLUSTER merges signatures that come from the same SV\n- COMBINE combines clusters\
    \ from different genomic regions and classifies them into distinct SV types\n\
    - GENOTYPE uses alignments spanning SVs to determine their genotype\n\nSVIM can\
    \ process two types of input. Firstly, it can detect SVs from raw reads by aligning\
    \ them to a given reference genome first (\"SVIM.py reads [options] working_dir\
    \ reads genome\").\nAlternatively, it can detect SVs from existing reads alignments\
    \ in SAM/BAM format (\"SVIM.py alignment [options] working_dir bam_file\").\n\n\
    positional arguments:\n  {reads,alignment}  modes\n    reads            Detect\
    \ SVs from raw reads. Align reads to given reference\n                     genome\
    \ first.\n    alignment        Detect SVs from an existing alignment\n\noptional\
    \ arguments:\n  -h, --help         show this help message and exit\n  --version,\
    \ -v      show program's version number and exit\n"
  generated_using: *id003
subcommands: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: svim alignment [-h] [--verbose] [--min_mapq MIN_MAPQ]\n       \
  \               [--min_sv_size MIN_SV_SIZE] [--max_sv_size MAX_SV_SIZE]\n      \
  \                [--segment_gap_tolerance SEGMENT_GAP_TOLERANCE]\n             \
  \         [--segment_overlap_tolerance SEGMENT_OVERLAP_TOLERANCE]\n            \
  \          [--partition_max_distance PARTITION_MAX_DISTANCE]\n                 \
  \     [--distance_normalizer DISTANCE_NORMALIZER]\n                      [--cluster_max_distance\
  \ CLUSTER_MAX_DISTANCE]\n                      [--all_bnds]\n                  \
  \    [--del_ins_dup_max_distance DEL_INS_DUP_MAX_DISTANCE]\n                   \
  \   [--trans_destination_partition_max_distance TRANS_DESTINATION_PARTITION_MAX_DISTANCE]\n\
  \                      [--trans_partition_max_distance TRANS_PARTITION_MAX_DISTANCE]\n\
  \                      [--trans_sv_max_distance TRANS_SV_MAX_DISTANCE]\n       \
  \               [--skip_genotyping] [--minimum_score MINIMUM_SCORE]\n          \
  \            [--homozygous_threshold HOMOZYGOUS_THRESHOLD]\n                   \
  \   [--heterozygous_threshold HETEROZYGOUS_THRESHOLD]\n                      [--minimum_depth\
  \ MINIMUM_DEPTH] [--sample SAMPLE]\n                      [--types TYPES] [--sequence_alleles]\n\
  \                      [--insertion_sequences]\n                      [--tandem_duplications_as_insertions]\n\
  \                      [--interspersed_duplications_as_insertions]\n           \
  \           [--read_names] [--zmws]\n                      working_dir bam_file\
  \ genome\n\npositional arguments:\n  working_dir           Working and output directory.\
  \ Existing files in the\n                        directory are overwritten. If the\
  \ directory does not\n                        exist, it is created.\n  bam_file\
  \              Coordinate-sorted and indexed BAM file with aligned\n           \
  \             long reads\n  genome                Reference genome file that the\
  \ long reads were aligned\n                        to (FASTA)\n\noptional arguments:\n\
  \  -h, --help            show this help message and exit\n  --verbose          \
  \   Enable more verbose logging (default: False)\n\nCOLLECT:\n  --min_mapq MIN_MAPQ\
  \   Minimum mapping quality of reads to consider (default:\n                   \
  \     20). Reads with a lower mapping quality are ignored.\n  --min_sv_size MIN_SV_SIZE\n\
  \                        Minimum SV size to detect (default: 40). SVIM can\n   \
  \                     potentially detect events of any size but is limited\n   \
  \                     by the signal-to-noise ratio in the input alignments.\n  \
  \                      That means that more accurate reads and alignments\n    \
  \                    enable the detection of smaller events. For current\n     \
  \                   PacBio or Nanopore data, we would recommend a minimum\n    \
  \                    size of 40bp or larger.\n  --max_sv_size MAX_SV_SIZE\n    \
  \                    Maximum SV size to detect (default: 100000). This\n       \
  \                 parameter is used to distinguish long deletions (and\n       \
  \                 inversions) from translocations which cannot be\n            \
  \            distinguished from the alignment alone. Split read\n              \
  \          segments mapping far apart on the reference could\n                 \
  \       either indicate a very long deletion (inversion) or a\n                \
  \        translocation breakpoint. SVIM calls a translocation\n                \
  \        breakpoint if the mapping distance is larger than this\n              \
  \          parameter and a deletion (or inversion) if it is\n                  \
  \      smaller or equal.\n  --segment_gap_tolerance SEGMENT_GAP_TOLERANCE\n    \
  \                    Maximum tolerated gap between adjacent alignment\n        \
  \                segments (default: 10). This parameter applies to gaps\n      \
  \                  on the reference and the read. Example: Deletions are\n     \
  \                   detected from two subsequent segments of a split read\n    \
  \                    that are mapped far apart from each other on the\n        \
  \                reference. The segment gap tolerance determines the\n         \
  \               maximum tolerated length of the read gap between both\n        \
  \                segments. If there is an unaligned read segment larger\n      \
  \                  than this value between the two segments, no deletion\n     \
  \                   is called.\n  --segment_overlap_tolerance SEGMENT_OVERLAP_TOLERANCE\n\
  \                        Maximum tolerated overlap between adjacent alignment\n\
  \                        segments (default: 5). This parameter applies to\n    \
  \                    overlaps on the reference and the read. Example:\n        \
  \                Deletions are detected from two subsequent segments of\n      \
  \                  a split read that are mapped far apart from each other\n    \
  \                    on the reference. The segment overlap tolerance\n         \
  \               determines the maximum tolerated length of an overlap\n        \
  \                between both segments on the read. If the overlap\n           \
  \             between the two segments on the read is larger than\n            \
  \            this value, no deletion is called.\n\nCLUSTER:\n  --partition_max_distance\
  \ PARTITION_MAX_DISTANCE\n                        Maximum distance in bp between\
  \ SVs in a partition\n                        (default: 1000). Before clustering,\
  \ the SV signatures\n                        are divided into coarse partitions.\
  \ This parameter\n                        determines the maximum distance between\
  \ two subsequent\n                        signatures in the same partition. If the\
  \ distance\n                        between two subsequent signatures is larger\
  \ than this\n                        parameter, they are distributed into separate\n\
  \                        partitions.\n  --distance_normalizer DISTANCE_NORMALIZER\n\
  \                        Distance normalizer used for span-position distance\n \
  \                       (default: 900). SVIM clusters the SV signatures using\n\
  \                        an hierarchical clustering approach and a novel\n     \
  \                   distance metric called \"span-position distance\". Span-\n \
  \                       position distance is the sum of two components, span\n \
  \                       distance and position distance. The span distance is\n \
  \                       the difference in lengths between signatures\n         \
  \               normalized by the greater length and always lies in\n          \
  \              the interval [0,1]. The position distance is the\n              \
  \          difference in position between signatures normalized\n              \
  \          by the distance normalizer (this parameter). For a\n                \
  \        position difference of 1.8kb and a distance normalizer\n              \
  \          of 900, the position distance will be 2. A smaller\n                \
  \        distance normalizer leads to a higher position\n                      \
  \  distance and as a consequence increases the importance\n                    \
  \    of the position distance in the span-position distance\n                  \
  \      relative to the span distance.\n  --cluster_max_distance CLUSTER_MAX_DISTANCE\n\
  \                        Maximum span-position distance between SVs in a\n     \
  \                   cluster (default: 0.3). This is the most important\n       \
  \                 parameter because it determines the strictness of\n          \
  \              clustering. Choosing a large value leads to fewer but\n         \
  \               larger clusters with larger distances between its\n            \
  \            members. Choosing a small value leads to more but\n               \
  \         smaller clusters with smaller distances between its\n                \
  \        members. This parameter determines the height of the\n                \
  \        cut-off in the hierarchical clustering dendrogram.\n  --all_bnds      \
  \      Output all rearrangements additionally in BND notation\n                \
  \        (default: False). By default, SV signatures from the\n                \
  \        read alignments are used to detect complete SVs, such\n               \
  \         as deletions, insertions and inversions. When this\n                 \
  \       option is enabled, all SVs are also output in breakend\n               \
  \         (BND) notation as defined in the VCF specs. For\n                    \
  \    instance, a deletion gets two records in the VCF\n                        output:\
  \ 1. the normal <DEL> record and 2. a <BND>\n                        record representing\
  \ the novel adjacency between the\n                        deletion's start and\
  \ end coordinate in the sample\n                        genome.\n\nCOMBINE:\n  --del_ins_dup_max_distance\
  \ DEL_INS_DUP_MAX_DISTANCE\n                        Maximum span-position distance\
  \ between the origin of\n                        an insertion and a deletion to\
  \ be flagged as a\n                        potential cut&paste insertion (default:\
  \ 1.0)\n  --trans_destination_partition_max_distance TRANS_DESTINATION_PARTITION_MAX_DISTANCE\n\
  \                        Maximum distance in bp between translocation\n        \
  \                breakpoint destinations in a partition (default: 1000)\n  --trans_partition_max_distance\
  \ TRANS_PARTITION_MAX_DISTANCE\n                        Maximum distance in bp between\
  \ translocation\n                        breakpoints in a partition (default: 200)\n\
  \  --trans_sv_max_distance TRANS_SV_MAX_DISTANCE\n                        Maximum\
  \ distance in bp between a translocation\n                        breakpoint and\
  \ an SV signature to be combined\n                        (default: 500)\n\nGENOTYPE:\n\
  \  --skip_genotyping     Disable genotyping (default: False)\n  --minimum_score\
  \ MINIMUM_SCORE\n                        Minimum score for genotyping (default:\
  \ 3). Only SV\n                        candidates with a higher or equal score are\
  \ genotyped.\n                        Depending on the score distribution among\
  \ the SV\n                        candidates, decreasing this value increases the\n\
  \                        runtime. We recommend to choose a value close to the\n\
  \                        score threshold used for filtering the SV candidates.\n\
  \  --homozygous_threshold HOMOZYGOUS_THRESHOLD\n                        Minimum\
  \ variant allele frequency to be called as\n                        homozygous (default:\
  \ 0.8). Allele frequency is\n                        computed as the fraction of\
  \ reads supporting the\n                        variant over the total number of\
  \ reads covering the\n                        variant. Variants with an allele frequence\
  \ greater\n                        than or equal to this threshold are called as\n\
  \                        homozygous alternative.\n  --heterozygous_threshold HETEROZYGOUS_THRESHOLD\n\
  \                        Minimum variant allele frequency to be called as\n    \
  \                    heterozygous (default: 0.2). Allele frequency is\n        \
  \                computed as the fraction of reads supporting the\n            \
  \            variant over the total number of reads covering the\n             \
  \           variant. Variants with an allele frequence greater\n               \
  \         than or equal to this threshold but lower than the\n                 \
  \       homozygous threshold are called as heterozygous\n                      \
  \  alternative. Variants with an allele frequence lower\n                      \
  \  than this threshold are called as homozygous\n                        reference.\n\
  \  --minimum_depth MINIMUM_DEPTH\n                        Minimum total read depth\
  \ for genotyping (default: 4).\n                        Variants covered by a total\
  \ number of reads lower than\n                        this value are not assigned\
  \ a genotype (./. in the\n                        output VCF file).\n\nOUTPUT:\n\
  \  --sample SAMPLE       Sample ID to include in output vcf file (default:\n   \
  \                     Sample)\n  --types TYPES         SV types to include in output\
  \ VCF (default:\n                        DEL,INS,INV,DUP:TANDEM,DUP:INT,BND). Give\
  \ a comma-\n                        separated list of SV types. The possible SV\
  \ types are:\n                        DEL (deletions), INS (novel insertions), INV\n\
  \                        (inversions), DUP:TANDEM (tandem duplications),\n     \
  \                   DUP:INT (interspersed duplications), BND (breakends).\n  --sequence_alleles\
  \    Use nucleotide sequences for alleles of deletions,\n                      \
  \  inversions and insertions in output VCF (default:\n                        False).\
  \ By default, all SVs are represented by\n                        symbolic alleles,\
  \ such as <DEL>, <INV> or <INS>. If\n                        enabled, ALT alleles\
  \ of insertions are obtained from\n                        the sequence of a random\
  \ read that supports the\n                        variant.\n  --insertion_sequences\n\
  \                        Output insertion sequences in INFO tag of VCF\n       \
  \                 (default: False). If enabled, the INFO/SEQS tag\n            \
  \            contains a list of insertion sequences from the\n                 \
  \       supporting reads. However, the insertion sequences are\n               \
  \         not combined into a consensus sequence.\n  --tandem_duplications_as_insertions\n\
  \                        Represent tandem duplications as insertions in output\n\
  \                        VCF (default: False). By default, tandem duplications\n\
  \                        are represented by the SVTYPE=DUP:TANDEM and the\n    \
  \                    genomic source is given by the POS and END tags. When\n   \
  \                     enabling this option, duplications are instead\n         \
  \               represented by the SVTYPE=INS and POS and END both\n           \
  \             give the insertion point of the duplication.\n  --interspersed_duplications_as_insertions\n\
  \                        Represent interspersed duplications as insertions in\n\
  \                        output VCF (default: False). By default, interspersed\n\
  \                        duplications are represented by the SVTYPE=DUP:INT and\n\
  \                        the genomic source is given by the POS and END tags.\n\
  \                        When enabling this option, duplications are instead\n \
  \                       represented by the SVTYPE=INS and POS and END both\n   \
  \                     give the insertion point of the duplication.\n  --read_names\
  \          Output names of supporting reads in INFO tag of VCF\n               \
  \         (default: False). If enabled, the INFO/READS tag\n                   \
  \     contains the list of names of the supporting reads.\n  --zmws            \
  \    look for information on ZMWs in PacBio read names\n                       \
  \ (default: False). If enabled, the INFO/ZMWS tag\n                        contains\
  \ the number of ZMWs that produced supporting\n                        reads.\n"
generated_using: *id003
