!Command
positional: []
named:
- !Flag
  description: length of each fragment (default is 100)
  synonyms:
  - --fragment
  args: !SimpleFlagArg
    name: length
  optional: true
- !Flag
  description: distance between the start of each fragment (default is 50)
  synonyms:
  - --step
  args: !SimpleFlagArg
    name: length
  optional: true
- !Flag
  description: '[=<seed>]   randomly shuffle the order that fragments are output;
    this can be very memory intensive, as all fragments are collected in a list before
    any are output (by default, fragments are output in sequence order)'
  synonyms:
  - --shuffle
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: limit the number of fragments emitted
  synonyms:
  - --head
  args: !SimpleFlagArg
    name: number
  optional: true
command:
- cactus_fasta_fragments.py
parent:
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "can't understand --help\nfasta_fragments [options] < fasta_file > fasta_file\n\
  \  Split a fasta file into overlapping fragments.\n\n  options:\n    --fragment=<length>\
  \  length of each fragment\n                         (default is 100)\n    --step=<length>\
  \      distance between the start of each fragment\n                         (default\
  \ is 50)\n    --shuffle[=<seed>]   randomly shuffle the order that fragments are\
  \ output;\n                         this can be very memory intensive, as all fragments\n\
  \                         are collected in a list before any are output\n      \
  \                   (by default, fragments are output in sequence order)\n    --origin=one\
  \         output positions are origin-one\n                         (surprisingly,\
  \ this is the default)\n    --origin=zero        output positions are origin-zero\n\
  \    --head=<number>      limit the number of fragments emitted\n"
generated_using:
- --help
