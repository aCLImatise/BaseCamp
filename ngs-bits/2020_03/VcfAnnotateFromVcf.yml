!Command
positional: []
named:
- !Flag
  description: "TSV file containing the annotation file path, the prefix, the INFO\
    \ ids and the id column for multiple annotations. Default value: ''"
  synonyms:
  - -config_file
  args: !SimpleFlagArg
    name: file
  optional: true
- !Flag
  description: "Tabix indexed VCF.GZ file used for annotation. Default value: ''"
  synonyms:
  - -annotation_file
  args: !SimpleFlagArg
    name: file
  optional: true
- !Flag
  description: "INFO id(s) in annotation VCF file (Multiple ids can be separated by\
    \ ',', optional new id names in output file can be added by '=': original_id=new_id).\
    \ Default value: ''"
  synonyms:
  - -info_ids
  args: !SimpleFlagArg
    name: string
  optional: true
- !Flag
  description: "Name of the ID column in annotation file. (If  it will be ignored\
    \ in output file, alternative output name can be specified by old_id_column_name=new_name\
    \ Default value: ''"
  synonyms:
  - -id_column
  args: !SimpleFlagArg
    name: string
  optional: true
- !Flag
  description: "Prefix for INFO id(s) in output VCF file. Default value: ''"
  synonyms:
  - -id_prefix
  args: !SimpleFlagArg
    name: string
  optional: true
- !Flag
  description: "If set the execution is not aborted if a INFO header is missing in\
    \ annotation file Default value: 'false'"
  synonyms:
  - -allow_missing_header
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Input VCF(.GZ) file. If unset, reads from STDIN. Default value: ''"
  synonyms:
  - -in
  args: !SimpleFlagArg
    name: file
  optional: true
- !Flag
  description: "Output VCF list. If unset, writes to STDOUT. Default value: ''"
  synonyms:
  - -out
  args: !SimpleFlagArg
    name: file
  optional: true
- !Flag
  description: Prints changeloge and exits.
  synonyms:
  - --changelog
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Writes a Tool Definition Xml file. The file name is the application
    name with the suffix '.tdx'.
  synonyms:
  - --tdx
  args: !EmptyFlagArg {}
  optional: true
command:
- VcfAnnotateFromVcf
parent:
subcommands: []
help_flag: !Flag
  description: Shows this help and exits.
  synonyms:
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: Prints version and exits.
  synonyms:
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "VcfAnnotateFromVcf (2020_03)\n\nAnnotates the INFO column of a VCF with\
  \ data from another VCF file (or multiple VCF files if config file is provided).\n\
  \nOptional parameters:\n  -config_file <file>     TSV file containing the annotation\
  \ file path, the prefix, the INFO ids and the id column for multiple annotations.\n\
  \                          Default value: ''\n  -annotation_file <file> Tabix indexed\
  \ VCF.GZ file used for annotation.\n                          Default value: ''\n\
  \  -info_ids <string>      INFO id(s) in annotation VCF file (Multiple ids can be\
  \ separated by ',', optional new id names in output file can be added by '=': original_id=new_id).\n\
  \                          Default value: ''\n  -id_column <string>     Name of\
  \ the ID column in annotation file. (If  it will be ignored in output file, alternative\
  \ output name can be specified by old_id_column_name=new_name\n                \
  \          Default value: ''\n  -id_prefix <string>     Prefix for INFO id(s) in\
  \ output VCF file.\n                          Default value: ''\n  -allow_missing_header\
  \   If set the execution is not aborted if a INFO header is missing in annotation\
  \ file\n                          Default value: 'false'\n  -in <file>         \
  \     Input VCF(.GZ) file. If unset, reads from STDIN.\n                       \
  \   Default value: ''\n  -out <file>             Output VCF list. If unset, writes\
  \ to STDOUT.\n                          Default value: ''\n\nSpecial parameters:\n\
  \  --help                  Shows this help and exits.\n  --version             \
  \  Prints version and exits.\n  --changelog             Prints changeloge and exits.\n\
  \  --tdx                   Writes a Tool Definition Xml file. The file name is the\
  \ application name with the suffix '.tdx'.\n\n"
generated_using:
- --help
