!Command
command:
- GenesToBed
positional: []
named:
- !Flag
  description: "Transcript source database.\nValid: 'ccds,ensembl'"
  synonyms:
  - -source
  args: !SimpleFlagArg
    name: enum
  optional: true
- !Flag
  description: "Mode: gene = start/end of all transcripts, exon = start/end of all\
    \ exons of all transcripts.\nValid: 'gene,exon'"
  synonyms:
  - -mode
  args: !SimpleFlagArg
    name: enum
  optional: true
- !Flag
  description: "Input TXT file with one gene symbol per line. If unset, reads from\
    \ STDIN.\nDefault value: ''"
  synonyms:
  - -in
  args: !SimpleFlagArg
    name: file
  optional: true
- !Flag
  description: "Output BED file. If unset, writes to STDOUT.\nDefault value: ''"
  synonyms:
  - -out
  args: !SimpleFlagArg
    name: file
  optional: true
- !Flag
  description: "Allow fallback to all source databases, if no transcript for a gene\
    \ is defined in the selected source database.\nDefault value: 'false'"
  synonyms:
  - -fallback
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Annotate transcript identifier in addition to gene name.\nDefault\
    \ value: 'false'"
  synonyms:
  - -anno
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Uses the test database instead of on the production database.\nDefault\
    \ value: 'false'"
  synonyms:
  - -test
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Prints changeloge and exits.
  synonyms:
  - --changelog
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Writes a Tool Definition Xml file. The file name is the application
    name with the suffix '.tdx'.
  synonyms:
  - --tdx
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: Shows this help and exits.
  synonyms:
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: Prints version and exits.
  synonyms:
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "GenesToBed (2020_06)\n\nConverts a text file with gene names to a BED\
  \ file.\n\nMandatory parameters:\n  -source <enum> Transcript source database.\n\
  \                 Valid: 'ccds,ensembl'\n  -mode <enum>   Mode: gene = start/end\
  \ of all transcripts, exon = start/end of all exons of all transcripts.\n      \
  \           Valid: 'gene,exon'\n\nOptional parameters:\n  -in <file>     Input TXT\
  \ file with one gene symbol per line. If unset, reads from STDIN.\n            \
  \     Default value: ''\n  -out <file>    Output BED file. If unset, writes to STDOUT.\n\
  \                 Default value: ''\n  -fallback      Allow fallback to all source\
  \ databases, if no transcript for a gene is defined in the selected source database.\n\
  \                 Default value: 'false'\n  -anno          Annotate transcript identifier\
  \ in addition to gene name.\n                 Default value: 'false'\n  -test  \
  \        Uses the test database instead of on the production database.\n       \
  \          Default value: 'false'\n\nSpecial parameters:\n  --help         Shows\
  \ this help and exits.\n  --version      Prints version and exits.\n  --changelog\
  \    Prints changeloge and exits.\n  --tdx          Writes a Tool Definition Xml\
  \ file. The file name is the application name with the suffix '.tdx'.\n\n"
generated_using:
- --help
