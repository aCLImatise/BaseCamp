!Command
positional: []
named:
- !Flag
  description: '[ --verbose ]             be verbose'
  synonyms:
  - -v
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '[ --debug ]               be verbose for debugging'
  synonyms:
  - -d
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '[ --in ] arg              input file which contains the structures,  sequence
    constraints and the start sequence  [string] structures: secondary structures
    in dot-bracket  notation. one structure per input  line sequence constraints:
    Permanent sequence  constraints in IUPAC  notation [ACGTUWSMKRYBDHVN ] (optional)
    start sequence:  A initial RNA sequence to start the sampling from [ACGU]  (optional)'
  synonyms:
  - -i
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '[ --out ] arg             output file for writing the sequences (default:  stdout)
    [string]'
  synonyms:
  - -o
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '[ --graphml ] arg         write a GraphML file representing the dependency
    graph to the given filename (optional) [string]'
  synonyms:
  - -g
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '[ --mode ] arg (=sample)  mode for sequence generation [string]: sample:
    stochastic sampling of all positions  (default) sample-clocal: Only sample one
    connected  component at a time starting from an initial sequence sample-plocal:
    Sample only single paths starting from an initial sequence clocal-neighbors: Only
    find neighboring  sequences to the initial start sequence by sampling one  connected
    component only plocal-neighbors: Only find neighboring  sequences to the initial
    start sequence by sampling one path  only'
  synonyms:
  - -m
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '[ --seed ] arg            random number generator seed [unsigned long]'
  synonyms:
  - -s
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '[ --num ] arg (=10)       number of designs (default: 10) [unsigned
    int]'
  synonyms:
  - -n
  args: !EmptyFlagArg {}
  optional: true
command:
- RNAblueprint
parent:
subcommands: []
help_flag: !Flag
  description: '[ --help ]                print help message'
  synonyms:
  - -h
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "\nThis program reads RNA secondary structures in dot-bracket notation\
  \ as well as\nsequence constraints in IUPAC code and fairly samples RNA sequences\
  \ compatible\nto both inputs:\n\nGeneric Options:\n  -h [ --help ]             \
  \   print help message\n  -v [ --verbose ]             be verbose\n  -d [ --debug\
  \ ]               be verbose for debugging\n\nProgram options:\n  -i [ --in ] arg\
  \              input file which contains the structures, \n                    \
  \           sequence constraints and the start sequence \n                     \
  \          [string]\n                               structures: secondary structures\
  \ in dot-bracket \n                                           notation. one structure\
  \ per input \n                                           line\n                \
  \               sequence constraints: Permanent sequence \n                    \
  \                                 constraints in IUPAC \n                      \
  \                               notation [ACGTUWSMKRYBDHVN\n                   \
  \                                  ] (optional)\n                              \
  \ start sequence:  A initial RNA sequence to start\n                           \
  \                    the sampling from [ACGU] \n                               \
  \                (optional)\n  -o [ --out ] arg             output file for writing\
  \ the sequences (default: \n                               stdout) [string]\n  -g\
  \ [ --graphml ] arg         write a GraphML file representing the dependency\n \
  \                              graph to the given filename (optional) [string]\n\
  \  -m [ --mode ] arg (=sample)  mode for sequence generation [string]:\n       \
  \                        sample: stochastic sampling of all positions \n       \
  \                                (default)\n                               sample-clocal:\
  \ Only sample one connected \n                                              component\
  \ at a time starting from\n                                              an initial\
  \ sequence\n                               sample-plocal: Sample only single paths\
  \ starting\n                                              from an initial sequence\n\
  \                               clocal-neighbors: Only find neighboring \n     \
  \                                            sequences to the initial start\n  \
  \                                               sequence by sampling one \n    \
  \                                             connected component only\n       \
  \                        plocal-neighbors: Only find neighboring \n            \
  \                                     sequences to the initial start\n         \
  \                                        sequence by sampling one path \n      \
  \                                           only\n                             \
  \  \n  -s [ --seed ] arg            random number generator seed [unsigned long]\n\
  \  -n [ --num ] arg (=10)       number of designs (default: 10) [unsigned int]\n\
  \n"
generated_using:
- --help
