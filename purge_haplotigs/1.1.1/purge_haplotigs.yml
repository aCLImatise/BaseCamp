&id001 !Command
positional: []
named: []
command:
- purge_haplotigs
parent:
subcommands:
- !Command
  positional: []
  named:
  - !Flag
    description: ''
    synonyms:
    - -b
    args: !SimpleFlagArg
      name: aligned.bam
    optional: true
  - !Flag
    description: ''
    synonyms:
    - -g
    args: !SimpleFlagArg
      name: genome.fasta
    optional: true
  - !Flag
    description: ''
    synonyms:
    - -t
    args: !SimpleFlagArg
      name: threads
    optional: true
  command:
  - purge_haplotigs
  - hist
  parent: *id001
  subcommands: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "[28-06-2020 21:14:57] bedtools OK!\n[28-06-2020 21:14:57] Rscript OK!\n\
    [28-06-2020 21:14:57] samtools OK!\n[28-06-2020 21:14:57] ALL DEPENDENCIES OK\n\
    \n\n[28-06-2020 21:14:57] ERROR: missing program xvfb-run\n[28-06-2020 21:14:57]\
    \ WARNING: Neither X11 nor xvfb is available\nUnknown option: help\n\nUSAGE:\n\
    purge_haplotigs  hist  -b aligned.bam  -g genome.fasta  [ -t threads ]\n\nREQUIRED:\n\
    -b / -bam       BAM file of aligned and sorted reads/subreads to the reference\n\
    -g / -genome    Reference FASTA for the BAM file.\n\nOPTIONAL:\n-t / -threads\
    \   Number of worker threads to use, DEFAULT = 4, MINIMUM = 2\n-d / -depth   \
    \  Maximum cutoff for depth. DEFAULT = 200, increase if needed,\n            \
    \    set much higher than your expected average coverage.\n"
  generated_using: &id002
  - --help
- !Command
  positional: []
  named:
  - !Flag
    description: ''
    synonyms:
    - -i
    args: !SimpleFlagArg
      name: aligned.bam.genecov
    optional: true
  - !Flag
    description: ''
    synonyms:
    - -l
    args: !SimpleFlagArg
      name: integer
    optional: true
  - !Flag
    description: ''
    synonyms:
    - -m
    args: !SimpleFlagArg
      name: integer
    optional: true
  - !Flag
    description: ''
    synonyms:
    - -h
    args: !SimpleFlagArg
      name: integer
    optional: true
  - !Flag
    description: ''
    synonyms:
    - -o
    args: !SimpleFlagArg
      name: coverage_stats.csv
    optional: true
  - !Flag
    description: ''
    synonyms:
    - -j
    args: !SimpleFlagArg
      name: '80'
    optional: true
  - !Flag
    description: ''
    synonyms:
    - -s
    args: !SimpleFlagArg
      name: '80'
    optional: true
  command:
  - purge_haplotigs
  - cov
  parent: *id001
  subcommands: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "Unknown option: help\n\nUSAGE:\npurge_haplotigs  cov  -i aligned.bam.genecov\
    \  -l <integer>  -m <integer>  -h <integer>  [-o coverage_stats.csv -j 80  -s\
    \ 80 ]\n\nREQUIRED:\n-i / -in        The bedtools genomecov output that was produced\
    \ from 'purge_haplotigs readhist'\n-l / -low       The read depth low cutoff (use\
    \ the histogram to eyeball these cutoffs)\n-h / -high      The read depth high\
    \ cutoff\n-m / -mid       The low point between the haploid and diploid peaks\n\
    \nOPTIONAL:\n-o / -out       Choose an output file name (CSV format, DEFAULT =\
    \ coverage_stats.csv)\n-j / -junk      Auto-assign contig as \"j\" (junk) if this\
    \ percentage or greater of the contig is \n                low/high coverage (DEFAULT\
    \ = 80, > 100 = don't junk anything)\n-s / -suspect   Auto-assign contig as \"\
    s\" (suspected haplotig) if this percentage or less of the\n                contig\
    \ is diploid level of coverage (DEFAULT = 80)\n\n"
  generated_using: *id002
- !Command
  positional: []
  named:
  - !Flag
    description: ''
    synonyms:
    - -g
    args: !SimpleFlagArg
      name: genome.fasta
    optional: true
  - !Flag
    description: ''
    synonyms:
    - -c
    args: !SimpleFlagArg
      name: coverage_stats.csv
    optional: true
  command:
  - purge_haplotigs
  - purge
  parent: *id001
  subcommands: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "[28-06-2020 21:14:59] bedtools OK!\n[28-06-2020 21:14:59] minimap2 OK!\n\
    [28-06-2020 21:14:59] samtools OK!\nUnknown option: help\n\nUSAGE:\npurge_haplotigs\
    \  purge  -g genome.fasta  -c coverage_stats.csv\n\nREQUIRED:\n-g / -genome  \
    \      Genome assembly in fasta format. Needs to be indexed with samtools faidx.\n\
    -c / -coverage      Contig by contig coverage stats csv file from the previous\
    \ step.\n\nOPTIONAL:\n-t / -threads       Number of worker threads to use. DEFAULT\
    \ = 4\n-o / -outprefix     Prefix for the curated assembly. DEFAULT = \"curated\"\
    \n-r / -repeats       BED-format file of repeats to ignore during analysis.\n\
    -d / -dotplots      Generate dotplots for manual inspection.\n-b / -bam      \
    \     Samtools-indexed bam file of aligned and sorted reads/subreads to the\n\
    \                    reference, required for generating dotplots.\n-f / -falconNaming\
    \  Rename contigs in the style used by FALCON/FALCON-unzip\n\nADVANCED:\n-a /\
    \ -align_cov     Percent cutoff for identifying a contig as a haplotig. DEFAULT\
    \ = 70\n-m / -max_match     Percent cutoff for identifying repetitive contigs.\
    \ Ignored when \n                    using repeat annotations (-repeats). DEFAULT\
    \ = 250\n-I                  Minimap2 indexing, drop minimisers every N bases,\
    \ DEFAULT = 4G\n-v / -verbose       Print EVERYTHING.\n-limit_io           Limit\
    \ for I/O intensive jobs. DEFAULT = -threads\n-wind_min           Min window size\
    \ for BED coverage plots (for dotplots). DEFAULT = 5000\n-wind_nmax          Max\
    \ windows per contig for BED coverage plots (for dotplots). DEFAULT = 200\n\n"
  generated_using: *id002
- !Command
  positional: []
  named:
  - !Flag
    description: ''
    synonyms:
    - -p
    args: !SimpleFlagArg
      name: contigs.fasta
    optional: true
  - !Flag
    description: ''
    synonyms:
    - -h
    args: !SimpleFlagArg
      name: haplotigs.fasta
    optional: true
  command:
  - purge_haplotigs
  - clip
  parent: *id001
  subcommands: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "Unknown option: help\n\nUSAGE:\npurge_haplotigs  clip  -p contigs.fasta\
    \  -h haplotigs.fasta\n\nREQUIRED:\n-p / -primary       Primary contigs (curated.fasta\
    \ by default) from the 'purge' stage.\n-h / -haplotigs     Haplotigs (curated.haplotigs.fasta\
    \ by default) from the 'purge' stage.\n\nOPTIONAL:\n-o / -outPrefix     Output\
    \ file prefix. DEFAULT = clip\n-l / -length        Minimum overlap length to trigger\
    \ clipping. DEFAULT = 10000\n-g / -gap           Maximum end gap to allow clipping.\
    \ DEFAULT = 10000\n-r / -ratio         Max allowable gap to alignment ratio. DEFAULT\
    \ = 0.5\n-t / -threads       Threds to use. DEFAULT = 4\n\nNOTE: This script is\
    \ experimental. \n"
  generated_using: *id002
- !Command
  positional: []
  named:
  - !Flag
    description: ''
    synonyms:
    - -p
    args: !SimpleFlagArg
      name: primary_contigs.fasta
    optional: true
  - !Flag
    description: ''
    synonyms:
    - -h
    args: !SimpleFlagArg
      name: haplotigs.fasta
    optional: true
  command:
  - purge_haplotigs
  - place
  parent: *id001
  subcommands: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "[28-06-2020 21:15:01] minimap2 OK!\n[28-06-2020 21:15:01] samtools OK!\n\
    Unknown option: help\n\nUSAGE:\npurge_haplotigs  place  -p primary_contigs.fasta\
    \  -h haplotigs.fasta  \n            [ -o out.tsv  -t <INT  -c <INT  -f]\n\nREQUIRED:\n\
    -p / -primary       Primary contigs fasta file\n-h / -haplotigs     Haplotigs\
    \ fasta file\n\nOPTIONAL:\n-o / -out           Placement file name. DEFAULT =\
    \ ncbi_placements.tsv\n-t / -threads       Threads for Minimap2. DEFAULT = 4\n\
    -c / -coverage      Coverage cutoff percentage for pairing contigs. \n       \
    \             DEFAULT = 50 (%)\n-f / -falconNaming  Rename contigs in the style\
    \ used by FALCON Unzip. Saved\n                    to <in-prefix>.FALC.fasta\n\
    \n"
  generated_using: *id002
help_flag:
usage_flag:
version_flag:
help_text: "\nERROR: no such sub-command --help\n\nUSAGE:\npurge_haplotigs  <command>\
  \  [options]\n\nCOMMANDS:\n-- Purge Haplotigs pipeline:\n    hist            First\
  \ step, generate a read-depth histogram for the genome\n    cov             Second\
  \ step, get contig coverage stats and flag 'suspect' contigs\n    purge        \
  \   Third step, identify and reassign haplotigs\n\n-- Other scripts\n    clip  \
  \          EXPERIMENTAL; Find and clip overlapping contig ends\n    place      \
  \     Generate a placement file for submission to NCBI\n    test            Test\
  \ everything!\n\n"
generated_using: *id002
