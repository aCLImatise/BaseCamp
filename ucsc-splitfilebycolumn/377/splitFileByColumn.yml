!Command
command:
- splitFileByColumn
positional:
- !Positional
  description: ''
  position: 0
  name: source
  optional: false
named:
- !Flag
  description: '- Use the Nth column value (default: N=1, first column)'
  synonyms:
  - -col
  args: !SimpleFlagArg
    name: N
  optional: true
- !Flag
  description: '- Put head in front of each output'
  synonyms:
  - -head
  args: !SimpleFlagArg
    name: file
  optional: true
- !Flag
  description: '- Put tail at end of each output'
  synonyms:
  - -tail
  args: !SimpleFlagArg
    name: file
  optional: true
- !Flag
  description: "- Split into subdirs of outDir that are distilled from chrom\nnames,\
    \ e.g. chr3_random -> outDir/3/chr3_random.XXX ."
  synonyms:
  - -chromDirs
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "- Use XXX as the dot-suffix of split files (default: taken\nfrom source)."
  synonyms:
  - -ending
  args: !SimpleFlagArg
    name: XXX
  optional: true
- !Flag
  description: '- Split by tab characters instead of whitespace.'
  synonyms:
  - -tab
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "splitFileByColumn - Split text input into files named by column value\n\
  usage:\n   splitFileByColumn source outDir\noptions:\n   -col=N      - Use the Nth\
  \ column value (default: N=1, first column)\n   -head=file  - Put head in front\
  \ of each output\n   -tail=file  - Put tail at end of each output\n   -chromDirs\
  \  - Split into subdirs of outDir that are distilled from chrom\n              \
  \   names, e.g. chr3_random -> outDir/3/chr3_random.XXX .\n   -ending=XXX - Use\
  \ XXX as the dot-suffix of split files (default: taken\n                 from source).\n\
  \   -tab        - Split by tab characters instead of whitespace.\nSplit source into\
  \ multiple files in outDir, with each filename determined\nby values from a column\
  \ of whitespace-separated input in source.\nIf source begins with a header, you\
  \ should pipe \"tail +N source\" to this\nprogram where N is number of header lines\
  \ plus 1, or use some similar\nmethod to strip the header from the input.\n\n"
generated_using: []
