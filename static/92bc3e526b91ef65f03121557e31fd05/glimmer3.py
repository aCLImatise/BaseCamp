from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Float, Boolean, Int

Glimmer3_V0_1_0 = CommandToolBuilder(tool="glimmer3", base_command=["glimmer3"], inputs=[ToolInput(tag="in_start_codons", input_type=String(optional=True), prefix="--start_codons", doc=InputDocumentation(doc="Use comma-separated list of codons as start codons\nSample format:  -A atg,gtg\nUse -P option to specify relative proportions of use.\nIf -P not used, then proportions will be equal")), ToolInput(tag="in_rbs_pwm", input_type=File(optional=True), prefix="--rbs_pwm", doc=InputDocumentation(doc="Read a position weight matrix (PWM) from <filename> to identify\nthe ribosome binding site to help choose start sites")), ToolInput(tag="in_gc_percent", input_type=Float(optional=True), prefix="--gc_percent", doc=InputDocumentation(doc="Use <p> as GC percentage of independent model\nNote:  <p> should be a percentage, e.g., -C 45.2")), ToolInput(tag="in_entropy", input_type=File(optional=True), prefix="--entropy", doc=InputDocumentation(doc="Read entropy profiles from <filename>.  Format is one header\nline, then 20 lines of 3 columns each.  Columns are amino acid,\npositive entropy, negative entropy.  Rows must be in order\nby amino acid code letter")), ToolInput(tag="in_first_codon", input_type=Boolean(optional=True), prefix="--first_codon", doc=InputDocumentation(doc="Use first codon in orf as start codon")), ToolInput(tag="in_gene_len", input_type=Int(optional=True), prefix="--gene_len", doc=InputDocumentation(doc="Set minimum gene length to <n>")), ToolInput(tag="in_ignore", input_type=File(optional=True), prefix="--ignore", doc=InputDocumentation(doc="<filename> specifies regions of bases that are off\nlimits, so that no bases within that area will be examined")), ToolInput(tag="in_linear", input_type=Boolean(optional=True), prefix="--linear", doc=InputDocumentation(doc="Assume linear rather than circular genome, i.e., no wraparound")), ToolInput(tag="in_orf_coords", input_type=File(optional=True), prefix="--orf_coords", doc=InputDocumentation(doc="Use <filename> to specify a list of orfs that should\nbe scored separately, with no overlap rules")), ToolInput(tag="in_separate_genes", input_type=Boolean(optional=True), prefix="--separate_genes", doc=InputDocumentation(doc="<sequence-file> is a multifasta file of separate genes to\nbe scored separately, with no overlap rules")), ToolInput(tag="in_max_olap", input_type=Int(optional=True), prefix="--max_olap", doc=InputDocumentation(doc="Set maximum overlap length to <n>.  Overlaps this short or shorter\nare ignored.")), ToolInput(tag="in_start_probs", input_type=Int(optional=True), prefix="--start_probs", doc=InputDocumentation(doc="Specify probability of different start codons (same number & order\nas in -A option).  If no -A option, then 3 values for atg, gtg and ttg\nin that order.  Sample format:  -P 0.6,0.35,0.05\nIf -A is specified without -P, then starts are equally likely.")), ToolInput(tag="in_ignore_score_len", input_type=String(optional=True), prefix="--ignore_score_len", doc=InputDocumentation(doc="Do not use the initial score filter on any gene <n> or more\nbase long")), ToolInput(tag="in_no_indep", input_type=Boolean(optional=True), prefix="--no_indep", doc=InputDocumentation(doc="Don't use independent probability score column")), ToolInput(tag="in_threshold", input_type=Int(optional=True), prefix="--threshold", doc=InputDocumentation(doc="Set threshold score for calling as gene to n.  If the in-frame\nscore >= <n>, then the region is given a number and considered\na potential gene.")), ToolInput(tag="in_extend", input_type=Boolean(optional=True), prefix="--extend", doc=InputDocumentation(doc="Allow orfs extending off ends of sequence to be scored")), ToolInput(tag="in_trans_table", input_type=Int(optional=True), prefix="--trans_table", doc=InputDocumentation(doc="Use Genbank translation table number <n> for stop codons")), ToolInput(tag="in_stop_codons", input_type=String(optional=True), prefix="--stop_codons", doc=InputDocumentation(doc="Use comma-separated list of codons as stop codons\nSample format:  -Z tag,tga,taa\n")), ToolInput(tag="in_sequence_file", input_type=File(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_icm_file", input_type=File(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_tag", input_type=String(), position=2, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Glimmer3_V0_1_0().translate("wdl", allow_empty_container=True)

