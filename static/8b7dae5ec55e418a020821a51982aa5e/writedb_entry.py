from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean

Writedb_Entry_V0_1_0 = CommandToolBuilder(tool="writedb_entry", base_command=["writedb_entry"], inputs=[ToolInput(tag="in_flatten_gene_model", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc="[y|n] flatten the gene model, default is y")), ToolInput(tag="in_flt", input_type=Boolean(optional=True), prefix="-flt", doc=InputDocumentation(doc="space separated list of qualifiers to ignore (GFF only)")), ToolInput(tag="in_ignore_features_default", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="[y|n] ignore obsolete features, default is y")), ToolInput(tag="in_space_separated_list_read", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="space separated list of sequences to read and write out")), ToolInput(tag="in_output_format_default", input_type=Boolean(optional=True), prefix="-o", doc=InputDocumentation(doc="[EMBL|GFF] output format, default is EMBL")), ToolInput(tag="in_location_embl_keymapping", input_type=Boolean(optional=True), prefix="-l", doc=InputDocumentation(doc="location of EMBL mapping files (qualifier_mapping and key_mapping)")), ToolInput(tag="in_gzip_output_default", input_type=Boolean(optional=True), prefix="-z", doc=InputDocumentation(doc="[y|n] gzip output, default is y")), ToolInput(tag="in_embl_submission_format", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="[y|n] for EMBL submission format change to n, default is y")), ToolInput(tag="in_pp", input_type=Boolean(optional=True), prefix="-pp", doc=InputDocumentation(doc="[y|n] read polypeptide domain features, default is n")), ToolInput(tag="in_remove_product_qualifiers", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="[y|n] remove product qualifiers from pseudogene (only for EMBL submission format), default is n")), ToolInput(tag="in_url_your_chado", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="the URL for your Chado database e.g. server_name:port/database_name?user (if not using default)")), ToolInput(tag="in_ui_mode_run", input_type=Boolean(optional=True), prefix="-u", doc=InputDocumentation(doc="[swing|console|script] the UI mode : run in swing (with popup dialog boxes) mode, run in console mode (choices entered in the console window), or in script mode (all choices default to continue, all parameters passed on command line)")), ToolInput(tag="in_password_connecting_chado", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="the password for connecting to the Chado database")), ToolInput(tag="in_fp", input_type=Boolean(optional=True), prefix="-fp", doc=InputDocumentation(doc="the file path (the folder you want to save the files in)")), ToolInput(tag="in_np", input_type=Boolean(optional=True), prefix="-np", doc=InputDocumentation(doc="[y|n] do not write out private qualifiers, default is y"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Writedb_Entry_V0_1_0().translate("wdl", allow_empty_container=True)

