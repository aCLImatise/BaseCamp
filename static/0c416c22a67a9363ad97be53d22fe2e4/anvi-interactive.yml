!Command
positional: []
named:
- !Flag
  description: Anvi'o profile database
  synonyms:
  - -p
  - --profile-db
  args: !SimpleFlagArg
    name: PROFILE_DB
  optional: true
- !Flag
  description: Anvi'o contigs database generated by 'anvi-gen- contigs'
  synonyms:
  - -c
  - --contigs-db
  args: !SimpleFlagArg
    name: CONTIGS_DB
  optional: true
- !Flag
  description: If you have a collection in your profile database, you can use this
    flag to start the interactive interface with a tree showing your bins in your
    collection, instead of each split. This is very useful when you have imported
    your external binning results into anvi'o, and want to see the distribution of
    your bins across samples. In these cases anvi'o will cluster your bins and based
    on multiple metrics. Because this particular clustering will be done on the fly
    within anvi'o interactive class, you get to define a disntance metric and a linkage
    method using --linkage and --distance parameters if you want!
  synonyms:
  - -C
  - --collection-name
  args: !SimpleFlagArg
    name: COLLECTION_NAME
  optional: true
- !Flag
  description: Using this flag, you can run the interactive interface in an ad hoc
    manner using input files you curated instead of standard output files generated
    by an anvi'o run. In the manual mode you will be asked to provide a profile database.
    In this mode a profile database is only used to store 'state' of the interactive
    interface so you can reload your visual settings when you re-analyze the same
    files again. If the profile database you provide does not exist, anvi'o will create
    an empty one for you.
  synonyms:
  - --manual-mode
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: A FASTA-formatted input file
  synonyms:
  - -f
  - --fasta-file
  args: !SimpleFlagArg
    name: FASTA
  optional: true
- !Flag
  description: A TAB-delimited file for view data
  synonyms:
  - -d
  - --view-data
  args: !SimpleFlagArg
    name: VIEW_DATA
  optional: true
- !Flag
  description: NEWICK formatted tree structure
  synonyms:
  - -t
  - --tree
  args: !SimpleFlagArg
    name: NEWICK
  optional: true
- !Flag
  description: "A flat file that contains the order of items you wish the display\
    \ using the interactive interface. You may want to use this if you have a specific\
    \ order of items in your mind, and do not want to display a tree in the middle\
    \ (or simply you don't have one). The file format is simple: each line should\
    \ have an item name, and there should be no header."
  synonyms:
  - --items-order
  args: !SimpleFlagArg
    name: FLAT_FILE
  optional: true
- !Flag
  description: A TAB-delimited file for an additional view to be used in the interface.
    This file should contain all split names, and values for each of them in all samples.
    Each column in this file must correspond to a sample name. Content of this file
    will be called 'user_view', which will be available as a new item in the 'views'
    combo box in the interface
  synonyms:
  - -V
  - --additional-view
  args: !SimpleFlagArg
    name: ADDITIONAL_VIEW
  optional: true
- !Flag
  description: A TAB-delimited file for additional layers for splits. The first column
    of this file must be split names, and the remaining columns should be unique attributes.
    The file does not need to contain all split names, or values for each split in
    every column. Anvi'o will try to deal with missing data nicely. Each column in
    this file will be visualized as a new layer in the tree.
  synonyms:
  - -A
  - --additional-layers
  args: !SimpleFlagArg
    name: ADDITIONAL_LAYERS
  optional: true
- !Flag
  description: "Initiate the interactive interface in 'gene mode'. In this mode, the\
    \ items are genes (instead of splits of contigs). The following views are available:\
    \ detection (the detection value of each gene in each sample). The mean_coverage\
    \ (the mean coverage of genes). The non_outlier_mean_coverage (the mean coverage\
    \ of the non-outlier nucleotide positions of each gene in each sample (median\
    \ absolute deviation is used to remove outliers per gene per sample)). The non_outlier_coverage_std\
    \ view (standard deviation of the coverage of non-outlier positions of genes in\
    \ samples). You can also choose to order items and layers according to each one\
    \ of the aforementioned views. In addition, all layer ordering that are available\
    \ in the regular mode (i.e. the full mode where you have contigs/splits) are also\
    \ available in 'gene mode', so that, for example, you can choose to order the\
    \ layers according to 'detection', and that would be the order according to the\
    \ detection values of splits, whereas if you choose 'genes_detections' then the\
    \ order of layers would be according to the detection values of genes. Inspection\
    \ and sequence functionality are available (through the right-click menu), except\
    \ now sequences are of the specific gene. Inspection has now two options available:\
    \ 'Inspect Context', which brings you to the inspection page of the split to which\
    \ the gene belongs where the inspected gene will be highlighted in yellow in the\
    \ bottom, and 'Inspect Gene', which opens the inspection page only for the gene\
    \ and 100 nts around each side of it (the purpose of this option is to make the\
    \ inspection page load faster if you only want to look at the nucleotide coverage\
    \ of a specific gene). NOTICE: You can't store states or collections in 'gene\
    \ mode'. However, you still can make fake selections, and create fake bins for\
    \ your viewing convenience only (smiley). Search options are available, and you\
    \ can even search for functions if you have them in your contigs database. ANOTHER\
    \ NOTICE: loading this mode might take a while if your bin has many genes, and\
    \ your profile database has many samples, this is because the gene coverages stats\
    \ are computed in an ad-hoc manner when you load this mode, we know this is not\
    \ ideal and we plan to improve that (along with other things). If you have suggestions/complaints\
    \ regarding this mode please comment on this github issue: https://goo.gl/yHhRei.\
    \ Please refer to the online tutorial for more information."
  synonyms:
  - --gene-mode
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Provide if working with INSeq/Tn-Seq genomic data. With this, all gene
    level coverage stats will be calculated using INSeq/Tn-Seq statistical methods.
  synonyms:
  - --inseq-stats
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Bin name you are interested in.
  synonyms:
  - -b
  - --bin-id
  args: !SimpleFlagArg
    name: BIN_NAME
  optional: true
- !Flag
  description: Start the interface with a pre-selected view. To see a list of available
    views, use --show-views flag.
  synonyms:
  - --view
  args: !SimpleFlagArg
    name: NAME
  optional: true
- !Flag
  description: Title for the interface. If you are working with a RUNINFO dict, the
    title will be determined based on information stored in that file. Regardless,
    you can override that value using this parameter.
  synonyms:
  - --title
  args: !SimpleFlagArg
    name: NAME
  optional: true
- !Flag
  description: The taxonomic level to use whenever relevant and/or available. The
    default taxonomic level is t_genus, but if you choose something specific, anvi'o
    will focus on that whenever possible.
  synonyms:
  - --taxonomic-level
  args: !ChoiceFlagArg
    choices: !!set
      t_species:
      t_domain:
      t_order:
      t_genus:
      t_class:
      t_phylum:
      t_family:
  optional: true
- !Flag
  description: When declared, this flag tells the interface to split every gene found
    in HMM searches that were performed against non-singlecopy gene HMM profiles into
    their own layer. Please see the documentation for details.
  synonyms:
  - --split-hmm-layers
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "During profiling, anvi'o marks positions of single- nucleotide variations\
    \ (SNVs) that originate from places in contigs where coverage values are a bit\
    \ 'sketchy'. If you would like to avoid SNVs in those positions of splits in applicable\
    \ projects you can use this flag, and the interface would hide SNVs that are marked\
    \ as 'outlier' (although it is clearly the best to see everything, no one will\
    \ judge you if you end up using this flag) (plus, there may or may not be some\
    \ historical data on this here: https://github.com/meren/anvio/issues/309)."
  synonyms:
  - --hide-outlier-SNVs
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Automatically load previous saved state and draw tree. To see a list
    of available states, use --show-states flag.
  synonyms:
  - --state-autoload
  args: !SimpleFlagArg
    name: NAME
  optional: true
- !Flag
  description: Automatically load a collection and draw tree. To see a list of available
    collections, use --list- collections flag.
  synonyms:
  - --collection-autoload
  args: !SimpleFlagArg
    name: NAME
  optional: true
- !Flag
  description: The SVG output file path.
  synonyms:
  - --export-svg
  args: !SimpleFlagArg
    name: FILE_PATH
  optional: true
- !Flag
  description: When declared, the program will show a list of available views, and
    exit.
  synonyms:
  - --show-views
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: For debugging purposes. You should never really need it.
  synonyms:
  - --skip-check-names
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Directory path for output files
  synonyms:
  - -o
  - --output-dir
  args: !SimpleFlagArg
    name: DIR_PATH
  optional: true
- !Flag
  description: Don't do anything real. Test everything, and stop right before wherever
    the developer said 'well, this is enough testing', and decided to print out results.
  synonyms:
  - --dry-run
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: When declared the program will print all available states and exit.
  synonyms:
  - --show-states
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Show available collections and exit.
  synonyms:
  - --list-collections
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: When declared, function calls for genes will not be initialized (therefore
    will be missing from all relevant interfaces or output files). The use of this
    flag may reduce the memory fingerprint and processing time for large datasets.
  synonyms:
  - --skip-init-functions
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: When declared, the attempt to include automatically generated orders
    of items based on additional data is skipped. In case those buggers cause issues
    with your data, and you still want to see your stuff and deal with the other issue
    maybe later.
  synonyms:
  - --skip-auto-ordering
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: The distance metric for the hierarchical clustering. Only relevant
    if you are running the interactive interface in "collection" mode. The default
    is "euclidean".
  synonyms:
  - --distance
  args: !SimpleFlagArg
    name: DISTANCE_METRIC
  optional: true
- !Flag
  description: The linkage method for the hierarchical clustering. Only relevant if
    you are running the interactive interface in "collection" mode. The default is
    "ward".
  synonyms:
  - --linkage
  args: !SimpleFlagArg
    name: LINKAGE_METHOD
  optional: true
- !Flag
  description: IP address for the HTTP server. The default ip address (0.0.0.0) should
    work just fine for most.
  synonyms:
  - -I
  - --ip-address
  args: !SimpleFlagArg
    name: IP_ADDR
  optional: true
- !Flag
  description: Port number to use for anvi'o services. If nothing is declared, anvi'o
    will try to find a suitable port number, starting from the default port number,
    8080.
  synonyms:
  - -P
  - --port-number
  args: !SimpleFlagArg
    name: INT
  optional: true
- !Flag
  description: By default, anvi'o will use your default browser to launch the interactive
    interface. If you would like to use something else than your system default, you
    can provide a full path for an alternative browser using this parameter, and hope
    for the best. For instance we are using this parameter to call Google's experimental
    browser, Canary, which performs better with demanding visualizations.
  synonyms:
  - --browser-path
  args: !SimpleFlagArg
    name: PATH
  optional: true
- !Flag
  description: When the interactive interface is started with this flag, all 'database
    write' operations will be disabled.
  synonyms:
  - --read-only
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: The default behavior is to start the local server, and fire up a browser
    that connects to the server. If you have other plans, and want to start the server
    without calling the browser, this is the flag you need.
  synonyms:
  - --server-only
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: If this flag is set, command line tool will ask you to enter a password
    and interactive interface will be only accessible after entering same password.
    This option is recommended for shared machines like clusters or shared networks
    where computers are not isolated.
  synonyms:
  - --password-protected
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Allow users to shutdown an anvi'server via web interface.
  synonyms:
  - --user-server-shutdown
  args: !EmptyFlagArg {}
  optional: true
command:
- anvi-interactive
parent:
subcommands: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: anvi-interactive [-h] [-p PROFILE_DB] [-c CONTIGS_DB]\n       \
  \                 [-C COLLECTION_NAME] [--manual-mode] [-f FASTA]\n            \
  \            [-d VIEW_DATA] [-t NEWICK] [--items-order FLAT_FILE]\n            \
  \            [-V ADDITIONAL_VIEW] [-A ADDITIONAL_LAYERS]\n                     \
  \   [--gene-mode] [--inseq-stats] [-b BIN_NAME]\n                        [--view\
  \ NAME] [--title NAME]\n                        [--taxonomic-level {t_domain,t_phylum,t_class,t_order,t_family,t_genus,t_species}]\n\
  \                        [--split-hmm-layers] [--hide-outlier-SNVs]\n          \
  \              [--state-autoload NAME] [--collection-autoload NAME]\n          \
  \              [--export-svg FILE_PATH] [--show-views]\n                       \
  \ [--skip-check-names] [-o DIR_PATH] [--dry-run]\n                        [--show-states]\
  \ [--list-collections]\n                        [--skip-init-functions] [--skip-auto-ordering]\n\
  \                        [--distance DISTANCE_METRIC]\n                        [--linkage\
  \ LINKAGE_METHOD] [-I IP_ADDR] [-P INT]\n                        [--browser-path\
  \ PATH] [--read-only] [--server-only]\n                        [--password-protected]\
  \ [--user-server-shutdown]\n\nStart an anvi'o server for the interactive interface\n\
  \noptional arguments:\n  -h, --help            show this help message and exit\n\
  \nDEFAULT INPUTS:\n  The interavtive interface can be started with and without anvi'o\n\
  \  databases. The default use assumes you have your profile and contigs\n  database,\
  \ however, it is also possible to start the interface using ad hoc\n  input files.\
  \ See 'MANUAL INPUT' section for required parameters.\n\n  -p PROFILE_DB, --profile-db\
  \ PROFILE_DB\n                        Anvi'o profile database\n  -c CONTIGS_DB,\
  \ --contigs-db CONTIGS_DB\n                        Anvi'o contigs database generated\
  \ by 'anvi-gen-\n                        contigs'\n  -C COLLECTION_NAME, --collection-name\
  \ COLLECTION_NAME\n                        If you have a collection in your profile\
  \ database, you\n                        can use this flag to start the interactive\
  \ interface\n                        with a tree showing your bins in your collection,\n\
  \                        instead of each split. This is very useful when you\n \
  \                       have imported your external binning results into\n     \
  \                   anvi'o, and want to see the distribution of your bins\n    \
  \                    across samples. In these cases anvi'o will cluster\n      \
  \                  your bins and based on multiple metrics. Because this\n     \
  \                   particular clustering will be done on the fly within\n     \
  \                   anvi'o interactive class, you get to define a\n            \
  \            disntance metric and a linkage method using --linkage\n           \
  \             and --distance parameters if you want!\n\nMANUAL INPUTS:\n  Mandatory\
  \ input parameters to start the interactive interface without\n  anvi'o databases.\n\
  \n  --manual-mode         Using this flag, you can run the interactive interface\n\
  \                        in an ad hoc manner using input files you curated\n   \
  \                     instead of standard output files generated by an\n       \
  \                 anvi'o run. In the manual mode you will be asked to\n        \
  \                provide a profile database. In this mode a profile\n          \
  \              database is only used to store 'state' of the\n                 \
  \       interactive interface so you can reload your visual\n                  \
  \      settings when you re-analyze the same files again. If\n                 \
  \       the profile database you provide does not exist,\n                     \
  \   anvi'o will create an empty one for you.\n  -f FASTA, --fasta-file FASTA\n \
  \                       A FASTA-formatted input file\n  -d VIEW_DATA, --view-data\
  \ VIEW_DATA\n                        A TAB-delimited file for view data\n  -t NEWICK,\
  \ --tree NEWICK\n                        NEWICK formatted tree structure\n  --items-order\
  \ FLAT_FILE\n                        A flat file that contains the order of items\
  \ you wish\n                        the display using the interactive interface.\
  \ You may\n                        want to use this if you have a specific order\
  \ of items\n                        in your mind, and do not want to display a tree\
  \ in the\n                        middle (or simply you don't have one). The file\
  \ format\n                        is simple: each line should have an item name,\
  \ and\n                        there should be no header.\n\nADDITIONAL STUFF:\n\
  \  Parameters to provide additional layers, views, or layer data.\n\n  -V ADDITIONAL_VIEW,\
  \ --additional-view ADDITIONAL_VIEW\n                        A TAB-delimited file\
  \ for an additional view to be used\n                        in the interface. This\
  \ file should contain all split\n                        names, and values for each\
  \ of them in all samples.\n                        Each column in this file must\
  \ correspond to a sample\n                        name. Content of this file will\
  \ be called 'user_view',\n                        which will be available as a new\
  \ item in the 'views'\n                        combo box in the interface\n  -A\
  \ ADDITIONAL_LAYERS, --additional-layers ADDITIONAL_LAYERS\n                   \
  \     A TAB-delimited file for additional layers for splits.\n                 \
  \       The first column of this file must be split names, and\n               \
  \         the remaining columns should be unique attributes. The\n             \
  \           file does not need to contain all split names, or\n                \
  \        values for each split in every column. Anvi'o will try\n              \
  \          to deal with missing data nicely. Each column in this\n             \
  \           file will be visualized as a new layer in the tree.\n\nGENE MODE:\n\
  \  Gene mode related parameters.\n\n  --gene-mode           Initiate the interactive\
  \ interface in 'gene mode'. In\n                        this mode, the items are\
  \ genes (instead of splits of\n                        contigs). The following views\
  \ are available: detection\n                        (the detection value of each\
  \ gene in each sample). The\n                        mean_coverage (the mean coverage\
  \ of genes). The\n                        non_outlier_mean_coverage (the mean coverage\
  \ of the\n                        non-outlier nucleotide positions of each gene\
  \ in each\n                        sample (median absolute deviation is used to\
  \ remove\n                        outliers per gene per sample)). The\n        \
  \                non_outlier_coverage_std view (standard deviation of\n        \
  \                the coverage of non-outlier positions of genes in\n           \
  \             samples). You can also choose to order items and\n               \
  \         layers according to each one of the aforementioned\n                 \
  \       views. In addition, all layer ordering that are\n                      \
  \  available in the regular mode (i.e. the full mode\n                        where\
  \ you have contigs/splits) are also available in\n                        'gene\
  \ mode', so that, for example, you can choose to\n                        order\
  \ the layers according to 'detection', and that\n                        would be\
  \ the order according to the detection values\n                        of splits,\
  \ whereas if you choose 'genes_detections'\n                        then the order\
  \ of layers would be according to the\n                        detection values\
  \ of genes. Inspection and sequence\n                        functionality are available\
  \ (through the right-click\n                        menu), except now sequences\
  \ are of the specific gene.\n                        Inspection has now two options\
  \ available: 'Inspect\n                        Context', which brings you to the\
  \ inspection page of\n                        the split to which the gene belongs\
  \ where the\n                        inspected gene will be highlighted in yellow\
  \ in the\n                        bottom, and 'Inspect Gene', which opens the inspection\n\
  \                        page only for the gene and 100 nts around each side of\n\
  \                        it (the purpose of this option is to make the\n       \
  \                 inspection page load faster if you only want to look\n       \
  \                 at the nucleotide coverage of a specific gene).\n            \
  \            NOTICE: You can't store states or collections in 'gene\n          \
  \              mode'. However, you still can make fake selections,\n           \
  \             and create fake bins for your viewing convenience only\n         \
  \               (smiley). Search options are available, and you can\n          \
  \              even search for functions if you have them in your\n            \
  \            contigs database. ANOTHER NOTICE: loading this mode\n             \
  \           might take a while if your bin has many genes, and\n               \
  \         your profile database has many samples, this is\n                    \
  \    because the gene coverages stats are computed in an\n                     \
  \   ad-hoc manner when you load this mode, we know this is\n                   \
  \     not ideal and we plan to improve that (along with\n                      \
  \  other things). If you have suggestions/complaints\n                        regarding\
  \ this mode please comment on this github\n                        issue: https://goo.gl/yHhRei.\
  \ Please refer to the\n                        online tutorial for more information.\n\
  \  --inseq-stats         Provide if working with INSeq/Tn-Seq genomic data.\n  \
  \                      With this, all gene level coverage stats will be\n      \
  \                  calculated using INSeq/Tn-Seq statistical methods.\n  -b BIN_NAME,\
  \ --bin-id BIN_NAME\n                        Bin name you are interested in.\n\n\
  VISUALS RELATED:\n  Parameters that give access to various adjustements regarding\
  \ the\n  interface.\n\n  --view NAME           Start the interface with a pre-selected\
  \ view. To see a\n                        list of available views, use --show-views\
  \ flag.\n  --title NAME          Title for the interface. If you are working with\
  \ a\n                        RUNINFO dict, the title will be determined based on\n\
  \                        information stored in that file. Regardless, you can\n\
  \                        override that value using this parameter.\n  --taxonomic-level\
  \ {t_domain,t_phylum,t_class,t_order,t_family,t_genus,t_species}\n             \
  \           The taxonomic level to use whenever relevant and/or\n              \
  \          available. The default taxonomic level is t_genus, but\n            \
  \            if you choose something specific, anvi'o will focus on\n          \
  \              that whenever possible.\n  --split-hmm-layers    When declared, this\
  \ flag tells the interface to split\n                        every gene found in\
  \ HMM searches that were performed\n                        against non-singlecopy\
  \ gene HMM profiles into their\n                        own layer. Please see the\
  \ documentation for details.\n  --hide-outlier-SNVs   During profiling, anvi'o marks\
  \ positions of single-\n                        nucleotide variations (SNVs) that\
  \ originate from\n                        places in contigs where coverage values\
  \ are a bit\n                        'sketchy'. If you would like to avoid SNVs\
  \ in those\n                        positions of splits in applicable projects you\
  \ can use\n                        this flag, and the interface would hide SNVs\
  \ that are\n                        marked as 'outlier' (although it is clearly\
  \ the best\n                        to see everything, no one will judge you if\
  \ you end up\n                        using this flag) (plus, there may or may not\
  \ be some\n                        historical data on this here:\n             \
  \           https://github.com/meren/anvio/issues/309).\n  --state-autoload NAME\n\
  \                        Automatically load previous saved state and draw tree.\n\
  \                        To see a list of available states, use --show-states\n\
  \                        flag.\n  --collection-autoload NAME\n                 \
  \       Automatically load a collection and draw tree. To see\n                \
  \        a list of available collections, use --list-\n                        collections\
  \ flag.\n  --export-svg FILE_PATH\n                        The SVG output file path.\n\
  \nSWEET PARAMS OF CONVENIENCE:\n  Parameters and flags that are not quite essential\
  \ (but nice to have).\n\n  --show-views          When declared, the program will\
  \ show a list of\n                        available views, and exit.\n  --skip-check-names\
  \    For debugging purposes. You should never really need\n                    \
  \    it.\n  -o DIR_PATH, --output-dir DIR_PATH\n                        Directory\
  \ path for output files\n  --dry-run             Don't do anything real. Test everything,\
  \ and stop\n                        right before wherever the developer said 'well,\
  \ this\n                        is enough testing', and decided to print out results.\n\
  \  --show-states         When declared the program will print all available\n  \
  \                      states and exit.\n  --list-collections    Show available\
  \ collections and exit.\n  --skip-init-functions\n                        When declared,\
  \ function calls for genes will not be\n                        initialized (therefore\
  \ will be missing from all\n                        relevant interfaces or output\
  \ files). The use of this\n                        flag may reduce the memory fingerprint\
  \ and processing\n                        time for large datasets.\n  --skip-auto-ordering\
  \  When declared, the attempt to include automatically\n                       \
  \ generated orders of items based on additional data is\n                      \
  \  skipped. In case those buggers cause issues with your\n                     \
  \   data, and you still want to see your stuff and deal\n                      \
  \  with the other issue maybe later.\n  --distance DISTANCE_METRIC\n           \
  \             The distance metric for the hierarchical clustering.\n           \
  \             Only relevant if you are running the interactive\n               \
  \         interface in \"collection\" mode. The default is\n                   \
  \     \"euclidean\".\n  --linkage LINKAGE_METHOD\n                        The linkage\
  \ method for the hierarchical clustering.\n                        Only relevant\
  \ if you are running the interactive\n                        interface in \"collection\"\
  \ mode. The default is \"ward\".\n\nSERVER CONFIGURATION:\n  For power users.\n\n\
  \  -I IP_ADDR, --ip-address IP_ADDR\n                        IP address for the\
  \ HTTP server. The default ip address\n                        (0.0.0.0) should\
  \ work just fine for most.\n  -P INT, --port-number INT\n                      \
  \  Port number to use for anvi'o services. If nothing is\n                     \
  \   declared, anvi'o will try to find a suitable port\n                        number,\
  \ starting from the default port number, 8080.\n  --browser-path PATH   By default,\
  \ anvi'o will use your default browser to\n                        launch the interactive\
  \ interface. If you would like to\n                        use something else than\
  \ your system default, you can\n                        provide a full path for\
  \ an alternative browser using\n                        this parameter, and hope\
  \ for the best. For instance we\n                        are using this parameter\
  \ to call Google's experimental\n                        browser, Canary, which\
  \ performs better with demanding\n                        visualizations.\n  --read-only\
  \           When the interactive interface is started with this\n              \
  \          flag, all 'database write' operations will be\n                     \
  \   disabled.\n  --server-only         The default behavior is to start the local\
  \ server, and\n                        fire up a browser that connects to the server.\
  \ If you\n                        have other plans, and want to start the server\
  \ without\n                        calling the browser, this is the flag you need.\n\
  \  --password-protected  If this flag is set, command line tool will ask you to\n\
  \                        enter a password and interactive interface will be\n  \
  \                      only accessible after entering same password. This\n    \
  \                    option is recommended for shared machines like\n          \
  \              clusters or shared networks where computers are not\n           \
  \             isolated.\n  --user-server-shutdown\n                        Allow\
  \ users to shutdown an anvi'server via web\n                        interface.\n"
generated_using:
- --help
