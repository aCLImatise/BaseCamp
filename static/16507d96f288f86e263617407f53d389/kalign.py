from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, File, Int

Kalign_V0_1_0 = CommandToolBuilder(tool="kalign", base_command=["kalign"], inputs=[ToolInput(tag="in_gap_open", input_type=Boolean(optional=True), prefix="-gapopen", doc=InputDocumentation(doc="Gap open penalty")), ToolInput(tag="in_gap_extension", input_type=Boolean(optional=True), prefix="-gapextension", doc=InputDocumentation(doc="Gap extension penalty")), ToolInput(tag="in_terminal_gap_extension_penalty", input_type=String(optional=True), prefix="-terminal_gap_extension_penalty", doc=InputDocumentation(doc="gap penalties")), ToolInput(tag="in_matrix_bonus", input_type=Boolean(optional=True), prefix="-matrix_bonus", doc=InputDocumentation(doc="A constant added to the substitution matrix.")), ToolInput(tag="in_bonus", input_type=Boolean(optional=True), prefix="-bonus", doc=InputDocumentation(doc="The order in which the sequences appear in the output alignment.\n<input, tree, gaps.>")), ToolInput(tag="in_feature", input_type=Boolean(optional=True), prefix="-feature", doc=InputDocumentation(doc="Selects feature mode and specifies which features are to be used:\ne.g. all, maxplp, STRUCT, PFAM-A....")), ToolInput(tag="in_same_feature_score", input_type=Boolean(optional=True), prefix="-same_feature_score", doc=InputDocumentation(doc="Score for aligning same features")), ToolInput(tag="in_diff_feature_score", input_type=Boolean(optional=True), prefix="-diff_feature_score", doc=InputDocumentation(doc="Penalty for aligning different features")), ToolInput(tag="in_distance", input_type=Boolean(optional=True), prefix="-distance", doc=InputDocumentation(doc="Distance method.\n<wu,pair>")), ToolInput(tag="in_guide_tree", input_type=Boolean(optional=True), prefix="-guide-tree", doc=InputDocumentation(doc="Guide tree method.")), ToolInput(tag="in_tree", input_type=Boolean(optional=True), prefix="-tree", doc=InputDocumentation(doc="<nj,upgma>")), ToolInput(tag="in_z_cut_off", input_type=Boolean(optional=True), prefix="-zcutoff", doc=InputDocumentation(doc="Parameter used in the wu-manber based distance calculation")), ToolInput(tag="in_input", input_type=Boolean(optional=True), prefix="-input", doc=InputDocumentation(doc="The input file.")), ToolInput(tag="in_the_output_file", input_type=File(optional=True), prefix="-infile", doc=InputDocumentation(doc="The output file.")), ToolInput(tag="in_parameter_increases_penalties", input_type=Boolean(optional=True), prefix="-outfile", doc=InputDocumentation(doc="Parameter increases gap penalties depending on the number of existing gaps")), ToolInput(tag="in_format", input_type=Boolean(optional=True), prefix="-format", doc=InputDocumentation(doc="The output format:\n<fasta, msf, aln, clu, macsim>")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="-quiet", doc=InputDocumentation(doc="Print nothing to STDERR.\nRead nothing from STDIN")), ToolInput(tag="in_k_align_two", input_type=Int(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_var_18", input_type=String(optional=True), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_var_19", input_type=String(optional=True), position=2, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_the_output_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_the_output_file", type_hint=File()), doc=OutputDocumentation(doc="The output file."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Kalign_V0_1_0().translate("wdl", allow_empty_container=True)

