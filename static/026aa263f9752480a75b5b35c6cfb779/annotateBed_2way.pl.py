from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, Boolean, String

Annotatebed_2Way_Pl_V0_1_0 = CommandToolBuilder(tool="annotateBed_2way.pl", base_command=["annotateBed_2way.pl"], inputs=[ToolInput(tag="in_an_no", input_type=File(optional=True), prefix="--anno", doc=InputDocumentation(doc=": genomic features' bed files, which are used to annotate input bed files, allow multiple files")), ToolInput(tag="in_genome", input_type=File(optional=True), prefix="--genome", doc=InputDocumentation(doc=": genome fasta index file, used to generate random number in each of the chromosome")), ToolInput(tag="in_upstream", input_type=Int(optional=True), prefix="--upstream", doc=InputDocumentation(doc=":  how many bp upstream from  align start position (Default: 0)")), ToolInput(tag="in_downstream", input_type=Int(optional=True), prefix="--downstream", doc=InputDocumentation(doc=":   how many bp downstream from  align start position (Default: 0)")), ToolInput(tag="in_overlap_only", input_type=Boolean(optional=True), prefix="--overlap_only", doc=InputDocumentation(doc=": only genomic feature overlapped with .bed region will be taken into account")), ToolInput(tag="in_overlap_percentage", input_type=Int(optional=True), prefix="--overlap_percentage", doc=InputDocumentation(doc=":  minimum percentage of .bed regions overlapped with genomic features will be taken into account (Default: 0)")), ToolInput(tag="in_same_strand", input_type=Boolean(optional=True), prefix="--same_strand", doc=InputDocumentation(doc=": Require same strandedness.  That is, only counts overlaps on the _same_ strand (Default: both strand).")), ToolInput(tag="in_reverse_strand", input_type=Boolean(optional=True), prefix="--reverse_strand", doc=InputDocumentation(doc=": Require different strandedness.  That is, only count overlaps on the _opposite_ strand (Default: both strand).")), ToolInput(tag="in_bed_tools_path", input_type=Boolean(optional=True), prefix="--bedtools_path", doc=InputDocumentation(doc=": path to BEDtools/bin/.if not specified in PATH environment variable")), ToolInput(tag="in_align_start", input_type=Int(optional=True), prefix="--align_start", doc=InputDocumentation(doc=": (Default: --align_start 1)\n1) extend upstream, downstream from both of 5', 3' border\n2) extend upstream, downstream from 5' border\n3) extend upstream, downstream from 3' border\n4) extend upstream, downstream from center of .bed region\n")), ToolInput(tag="in_summary_file_dot_txt", input_type=String(), position=0, doc=InputDocumentation(doc="Summary statistics about annotation result."))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Annotatebed_2Way_Pl_V0_1_0().translate("wdl", allow_empty_container=True)

