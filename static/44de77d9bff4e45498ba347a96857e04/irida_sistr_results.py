from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Boolean, File, Float, Int

Irida_Sistr_Results_V0_1_0 = CommandToolBuilder(tool="irida_sistr_results", base_command=["irida-sistr-results"], inputs=[ToolInput(tag="in_irid_a_url", input_type=String(optional=True), prefix="--irida-url", doc=InputDocumentation(doc="The URL to the IRIDA instance.")), ToolInput(tag="in_client_id", input_type=String(optional=True), prefix="--client-id", doc=InputDocumentation(doc="The client id for an IRIDA instance.")), ToolInput(tag="in_client_secret", input_type=String(optional=True), prefix="--client-secret", doc=InputDocumentation(doc="The client secret for the IRIDA instance.")), ToolInput(tag="in_username", input_type=String(optional=True), prefix="--username", doc=InputDocumentation(doc="The username for the IRIDA instance.")), ToolInput(tag="in_password", input_type=String(optional=True), prefix="--password", doc=InputDocumentation(doc="The password for the IRIDA instance. Prompts for password if left blank.")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Turn on verbose logging.")), ToolInput(tag="in_project", input_type=String(optional=True), prefix="--project", doc=InputDocumentation(doc="Projects to scan for SISTR results. If left blank will scan all projects the user has access to.")), ToolInput(tag="in_all_projects", input_type=Boolean(optional=True), prefix="--all-projects", doc=InputDocumentation(doc="Explicitly load results from all projects the user has access to.  Will ignore the values given in --project.")), ToolInput(tag="in_to_tab_file", input_type=File(optional=True), prefix="--to-tab-file", doc=InputDocumentation(doc="Print results to tab-deliminited file.")), ToolInput(tag="in_to_excel_file", input_type=File(optional=True), prefix="--to-excel-file", doc=InputDocumentation(doc="Print results to the given excel file.")), ToolInput(tag="in_include_user_results", input_type=Boolean(optional=True), prefix="--include-user-results", doc=InputDocumentation(doc="Include SISTR analysis results run directly by the user.")), ToolInput(tag="in_exclude_user_existing_results", input_type=Boolean(optional=True), prefix="--exclude-user-existing-results", doc=InputDocumentation(doc="If including user results, do not replace existing SISTR analysis that were automatically generated with user-run SISTR results.")), ToolInput(tag="in_reportable_serovars_file", input_type=File(optional=True), prefix="--reportable-serovars-file", doc=InputDocumentation(doc="The reportable serovars file [/usr/local/lib/python3.7/site-packages/irida_sistr_results/data/reportable_serovars.tsv].")), ToolInput(tag="in_exclude_reportable_status", input_type=Boolean(optional=True), prefix="--exclude-reportable-status", doc=InputDocumentation(doc="Excludes printing of reportable serovar status in final output.")), ToolInput(tag="in_connection_timeout", input_type=String(optional=True), prefix="--connection-timeout", doc=InputDocumentation(doc="Connection timeout when getting results from IRIDA.")), ToolInput(tag="in_config", input_type=File(optional=True), prefix="--config", doc=InputDocumentation(doc="Configuration file for IRIDA (overrides values in ['/usr/local/lib/python3.7/site-packages/irida_sistr_results/etc/config.ini', '/root/.local/share/irida-sistr-results/config.ini'])")), ToolInput(tag="in_workflow", input_type=Float(optional=True), prefix="--workflow", doc=InputDocumentation(doc="Only include results of these workflow versions (or uuids) ['0.1', '0.2', '0.3'] [all versions]")), ToolInput(tag="in_samples_created_since", input_type=Int(optional=True), prefix="--samples-created-since", doc=InputDocumentation(doc="Only include samples created more recently than this date (in format YYYY-MM-DD) or this many days ago (as a number) [Include all samples]"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Irida_Sistr_Results_V0_1_0().translate("wdl", allow_empty_container=True)

