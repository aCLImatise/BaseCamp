from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, File, Directory, String

Unicycler_V0_1_0 = CommandToolBuilder(tool="unicycler", base_command=["unicycler"], inputs=[ToolInput(tag="in_help_all", input_type=Boolean(optional=True), prefix="--help_all", doc=InputDocumentation(doc="Show a help message with all program options")), ToolInput(tag="in_short_one", input_type=Int(optional=True), prefix="--short1", doc=InputDocumentation(doc="FASTQ file of first short reads in each pair\n(required)")), ToolInput(tag="in_short_two", input_type=Int(optional=True), prefix="--short2", doc=InputDocumentation(doc="FASTQ file of second short reads in each pair\n(required)")), ToolInput(tag="in_unpaired", input_type=File(optional=True), prefix="--unpaired", doc=InputDocumentation(doc="FASTQ file of unpaired short reads (optional)")), ToolInput(tag="in_long", input_type=File(optional=True), prefix="--long", doc=InputDocumentation(doc="FASTQ or FASTA file of long reads (optional)")), ToolInput(tag="in_out", input_type=Directory(optional=True), prefix="--out", doc=InputDocumentation(doc="Output directory (required)")), ToolInput(tag="in_verbosity", input_type=File(optional=True), prefix="--verbosity", doc=InputDocumentation(doc="Level of stdout and log file information (default: 1)\n0 = no stdout, 1 = basic progress indicators,\n2 = extra info, 3 = debugging info")), ToolInput(tag="in_min_fast_a_length", input_type=Int(optional=True), prefix="--min_fasta_length", doc=InputDocumentation(doc="Exclude contigs from the FASTA file which are\nshorter than this length (default: 100)")), ToolInput(tag="in_keep", input_type=File(optional=True), prefix="--keep", doc=InputDocumentation(doc="Level of file retention (default: 1)\n0 = only keep final files: assembly (FASTA,\nGFA and log),\n1 = also save graphs at main checkpoints,\n2 = also keep SAM (enables fast rerun in different mode),\n3 = keep all temp files and save all graphs (for debugging)")), ToolInput(tag="in_vcf", input_type=Boolean(optional=True), prefix="--vcf", doc=InputDocumentation(doc="Produce a VCF by mapping the short reads to the\nfinal assembly (experimental, default: do not\nproduce a vcf file)")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of threads used (default: 8)")), ToolInput(tag="in_mode", input_type=String(optional=True), prefix="--mode", doc=InputDocumentation(doc="Bridging mode (default: normal)\nconservative = smaller contigs, lowest misassembly\nrate\nnormal = moderate contig size and misassembly rate\nbold = longest contigs, higher misassembly rate")), ToolInput(tag="in_linear_seqs", input_type=Int(optional=True), prefix="--linear_seqs", doc=InputDocumentation(doc="The expected number of linear (i.e. non-circular)\nsequences in the underlying sequence (default: 0)\n"))], outputs=[ToolOutput(tag="out_out", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_out", type_hint=File()), doc=OutputDocumentation(doc="Output directory (required)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Unicycler_V0_1_0().translate("wdl", allow_empty_container=True)

