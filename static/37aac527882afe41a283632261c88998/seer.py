from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean, String, Int, Float

Seer_V0_1_0 = CommandToolBuilder(tool="seer", base_command=["seer"], inputs=[ToolInput(tag="in_arg_dsm_kmer", input_type=File(optional=True), prefix="-k", doc=InputDocumentation(doc="[ --kmers ] arg       dsm kmer output file")), ToolInput(tag="in__arg_metadata", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="[ --pheno ] arg       .pheno metadata")), ToolInput(tag="in_struct", input_type=String(optional=True), prefix="--struct", doc=InputDocumentation(doc="mds values from kmds")), ToolInput(tag="in_co_var_file", input_type=File(optional=True), prefix="--covar_file", doc=InputDocumentation(doc="file containing covariates")), ToolInput(tag="in_co_var_list", input_type=Int(optional=True), prefix="--covar_list", doc=InputDocumentation(doc="list of columns covariates to use. Format is 1,2q,3\n(use q for quantitative)")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="(=1)       number of threads. Suggested: 8")), ToolInput(tag="in_no_filtering", input_type=Boolean(optional=True), prefix="--no_filtering", doc=InputDocumentation(doc="turn off all filtering and perform tests on all\nkmers input")), ToolInput(tag="in_max_length", input_type=Int(optional=True), prefix="--max_length", doc=InputDocumentation(doc="(=100)  maximum kmer length")), ToolInput(tag="in_maf", input_type=Float(optional=True), prefix="--maf", doc=InputDocumentation(doc="(=0.01)        minimum kmer frequency")), ToolInput(tag="in_min_words", input_type=String(optional=True), prefix="--min_words", doc=InputDocumentation(doc="minimum kmer occurences. Overrides --maf")), ToolInput(tag="in_chisq", input_type=Float(optional=True), prefix="--chisq", doc=InputDocumentation(doc="(=10e-5)     p-value threshold for initial chi squared test. Set\nto 1 to show all")), ToolInput(tag="in_pval", input_type=Float(optional=True), prefix="--pval", doc=InputDocumentation(doc="(=10e-8)      p-value threshold for final logistic test. Set to 1\nto show all")), ToolInput(tag="in_print_samples", input_type=Boolean(optional=True), prefix="--print_samples", doc=InputDocumentation(doc="print lists of samples significant kmers were found")), ToolInput(tag="in_in", input_type=String(), position=0, doc=InputDocumentation(doc="--version                prints version and exits"))], outputs=[ToolOutput(tag="out_arg_dsm_kmer", output_type=File(optional=True), selector=InputSelector(input_to_select="in_arg_dsm_kmer", type_hint=File()), doc=OutputDocumentation(doc="[ --kmers ] arg       dsm kmer output file"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Seer_V0_1_0().translate("wdl", allow_empty_container=True)

