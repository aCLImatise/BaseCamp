&id001 !Command
positional: []
named: []
command:
- AlignRecords.py
parent:
subcommands:
- !Command
  positional: []
  named:
  - !Flag
    description: 'A list of tab delimited database files. (default: None)'
    synonyms:
    - -d
    args: !RepeatFlagArg
      name: DB_FILES
    optional: true
  - !Flag
    description: 'Explicit output file name. Note, this argument cannot be used with
      the --failed, --outdir, or --outname arguments. If unspecified, then the output
      filename will be based on the input filename(s). (default: None)'
    synonyms:
    - -o
    args: !RepeatFlagArg
      name: OUT_FILES
    optional: true
  - !Flag
    description: 'Specify to changes the output directory to the location specified.
      The input file directory is used if this is not specified. (default: None)'
    synonyms:
    - --outdir
    args: !SimpleFlagArg
      name: OUT_DIR
    optional: true
  - !Flag
    description: 'Changes the prefix of the successfully processed output file to
      the string specified. May not be specified with multiple input files. (default:
      None)'
    synonyms:
    - --outname
    args: !SimpleFlagArg
      name: OUT_NAME
    optional: true
  - !Flag
    description: 'Specify to write verbose logging to a file. May not be specified
      with multiple input files. (default: None)'
    synonyms:
    - --log
    args: !SimpleFlagArg
      name: LOG_FILE
    optional: true
  - !Flag
    description: 'If specified create files containing records that fail processing.
      (default: False)'
    synonyms:
    - --failed
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: 'Specify input and output format. (default: airr)'
    synonyms:
    - --format
    args: !ChoiceFlagArg
      choices: !!set
        changeo:
        airr:
    optional: true
  - !Flag
    description: 'The number of simultaneous computational processes to execute (CPU
      cores to utilized). (default: 8)'
    synonyms:
    - --nproc
    args: !SimpleFlagArg
      name: NPROC
    optional: true
  - !Flag
    description: 'The sequence fields to multiple align within each group. (default:
      None)'
    synonyms:
    - --sf
    args: !RepeatFlagArg
      name: SEQ_FIELDS
    optional: true
  - !Flag
    description: 'Additional (not allele call) fields to use for grouping. (default:
      None)'
    synonyms:
    - --gf
    args: !RepeatFlagArg
      name: GROUP_FIELDS
    optional: true
  - !Flag
    description: "[{v,d,j} ...] Segment calls (allele assignments) to use for grouping.\
      \ (default: ['v', 'j'])"
    synonyms:
    - --calls
    args: !ChoiceFlagArg
      choices: !!set
        v:
        j:
        d:
    optional: true
  - !Flag
    description: 'Specifies whether to use the V(D)J allele or gene when an allele
      call field (--calls) is specified. (default: gene)'
    synonyms:
    - --mode
    args: !ChoiceFlagArg
      choices: !!set
        allele:
        gene:
    optional: true
  - !Flag
    description: 'Specifies how to handle multiple values within default allele call
      fields. Currently, only "first" is supported. (default: first)'
    synonyms:
    - --act
    args: !ChoiceFlagArg
      choices: !!set
        first:
    optional: true
  - !Flag
    description: 'The location of the MUSCLE executable (default: muscle)'
    synonyms:
    - --exec
    args: !SimpleFlagArg
      name: MUSCLE_EXEC
    optional: true
  command:
  - AlignRecords.py
  - across
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag: !Flag
    description: show program's version number and exit
    synonyms:
    - --version
    args: !EmptyFlagArg {}
    optional: true
  help_text: "usage: AlignRecords.py across [--version] [-h] -d DB_FILES [DB_FILES\
    \ ...]\n                              [-o OUT_FILES [OUT_FILES ...]]\n       \
    \                       [--outdir OUT_DIR] [--outname OUT_NAME]\n            \
    \                  [--log LOG_FILE] [--failed]\n                             \
    \ [--format {airr,changeo}] [--nproc NPROC] --sf\n                           \
    \   SEQ_FIELDS [SEQ_FIELDS ...]\n                              [--gf GROUP_FIELDS\
    \ [GROUP_FIELDS ...]]\n                              [--calls {v,d,j} [{v,d,j}\
    \ ...]]\n                              [--mode {allele,gene}] [--act {first}]\n\
    \                              [--exec MUSCLE_EXEC]\n\nhelp:\n  --version    \
    \         show program's version number and exit\n  -h, --help            show\
    \ this help message and exit\n\nstandard arguments:\n  -d DB_FILES [DB_FILES ...]\n\
    \                        A list of tab delimited database files. (default:\n \
    \                       None)\n  -o OUT_FILES [OUT_FILES ...]\n              \
    \          Explicit output file name. Note, this argument cannot\n           \
    \             be used with the --failed, --outdir, or --outname\n            \
    \            arguments. If unspecified, then the output filename\n           \
    \             will be based on the input filename(s). (default:\n            \
    \            None)\n  --outdir OUT_DIR      Specify to changes the output directory\
    \ to the\n                        location specified. The input file directory\
    \ is used\n                        if this is not specified. (default: None)\n\
    \  --outname OUT_NAME    Changes the prefix of the successfully processed\n  \
    \                      output file to the string specified. May not be\n     \
    \                   specified with multiple input files. (default: None)\n  --log\
    \ LOG_FILE        Specify to write verbose logging to a file. May not be\n   \
    \                     specified with multiple input files. (default: None)\n \
    \ --failed              If specified create files containing records that fail\n\
    \                        processing. (default: False)\n  --format {airr,changeo}\n\
    \                        Specify input and output format. (default: airr)\n  --nproc\
    \ NPROC         The number of simultaneous computational processes to\n      \
    \                  execute (CPU cores to utilized). (default: 8)\n\nalignment\
    \ arguments:\n  --sf SEQ_FIELDS [SEQ_FIELDS ...]\n                        The\
    \ sequence fields to multiple align within each\n                        group.\
    \ (default: None)\n  --gf GROUP_FIELDS [GROUP_FIELDS ...]\n                  \
    \      Additional (not allele call) fields to use for\n                      \
    \  grouping. (default: None)\n  --calls {v,d,j} [{v,d,j} ...]\n              \
    \          Segment calls (allele assignments) to use for\n                   \
    \     grouping. (default: ['v', 'j'])\n  --mode {allele,gene}  Specifies whether\
    \ to use the V(D)J allele or gene when\n                        an allele call\
    \ field (--calls) is specified. (default:\n                        gene)\n  --act\
    \ {first}         Specifies how to handle multiple values within default\n   \
    \                     allele call fields. Currently, only \"first\" is\n     \
    \                   supported. (default: first)\n  --exec MUSCLE_EXEC    The location\
    \ of the MUSCLE executable (default:\n                        muscle)\n"
  generated_using: &id002
  - --help
- !Command
  positional: []
  named:
  - !Flag
    description: 'A list of tab delimited database files. (default: None)'
    synonyms:
    - -d
    args: !RepeatFlagArg
      name: DB_FILES
    optional: true
  - !Flag
    description: 'Explicit output file name. Note, this argument cannot be used with
      the --failed, --outdir, or --outname arguments. If unspecified, then the output
      filename will be based on the input filename(s). (default: None)'
    synonyms:
    - -o
    args: !RepeatFlagArg
      name: OUT_FILES
    optional: true
  - !Flag
    description: 'Specify to changes the output directory to the location specified.
      The input file directory is used if this is not specified. (default: None)'
    synonyms:
    - --outdir
    args: !SimpleFlagArg
      name: OUT_DIR
    optional: true
  - !Flag
    description: 'Changes the prefix of the successfully processed output file to
      the string specified. May not be specified with multiple input files. (default:
      None)'
    synonyms:
    - --outname
    args: !SimpleFlagArg
      name: OUT_NAME
    optional: true
  - !Flag
    description: 'Specify to write verbose logging to a file. May not be specified
      with multiple input files. (default: None)'
    synonyms:
    - --log
    args: !SimpleFlagArg
      name: LOG_FILE
    optional: true
  - !Flag
    description: 'If specified create files containing records that fail processing.
      (default: False)'
    synonyms:
    - --failed
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: 'Specify input and output format. (default: airr)'
    synonyms:
    - --format
    args: !ChoiceFlagArg
      choices: !!set
        changeo:
        airr:
    optional: true
  - !Flag
    description: 'The number of simultaneous computational processes to execute (CPU
      cores to utilized). (default: 8)'
    synonyms:
    - --nproc
    args: !SimpleFlagArg
      name: NPROC
    optional: true
  - !Flag
    description: 'The sequence fields to multiple align within each record. (default:
      None)'
    synonyms:
    - --sf
    args: !RepeatFlagArg
      name: SEQ_FIELDS
    optional: true
  - !Flag
    description: 'The location of the MUSCLE executable (default: muscle)'
    synonyms:
    - --exec
    args: !SimpleFlagArg
      name: MUSCLE_EXEC
    optional: true
  command:
  - AlignRecords.py
  - within
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag: !Flag
    description: show program's version number and exit
    synonyms:
    - --version
    args: !EmptyFlagArg {}
    optional: true
  help_text: "usage: AlignRecords.py within [--version] [-h] -d DB_FILES [DB_FILES\
    \ ...]\n                              [-o OUT_FILES [OUT_FILES ...]]\n       \
    \                       [--outdir OUT_DIR] [--outname OUT_NAME]\n            \
    \                  [--log LOG_FILE] [--failed]\n                             \
    \ [--format {airr,changeo}] [--nproc NPROC] --sf\n                           \
    \   SEQ_FIELDS [SEQ_FIELDS ...] [--exec MUSCLE_EXEC]\n\nhelp:\n  --version   \
    \          show program's version number and exit\n  -h, --help            show\
    \ this help message and exit\n\nstandard arguments:\n  -d DB_FILES [DB_FILES ...]\n\
    \                        A list of tab delimited database files. (default:\n \
    \                       None)\n  -o OUT_FILES [OUT_FILES ...]\n              \
    \          Explicit output file name. Note, this argument cannot\n           \
    \             be used with the --failed, --outdir, or --outname\n            \
    \            arguments. If unspecified, then the output filename\n           \
    \             will be based on the input filename(s). (default:\n            \
    \            None)\n  --outdir OUT_DIR      Specify to changes the output directory\
    \ to the\n                        location specified. The input file directory\
    \ is used\n                        if this is not specified. (default: None)\n\
    \  --outname OUT_NAME    Changes the prefix of the successfully processed\n  \
    \                      output file to the string specified. May not be\n     \
    \                   specified with multiple input files. (default: None)\n  --log\
    \ LOG_FILE        Specify to write verbose logging to a file. May not be\n   \
    \                     specified with multiple input files. (default: None)\n \
    \ --failed              If specified create files containing records that fail\n\
    \                        processing. (default: False)\n  --format {airr,changeo}\n\
    \                        Specify input and output format. (default: airr)\n  --nproc\
    \ NPROC         The number of simultaneous computational processes to\n      \
    \                  execute (CPU cores to utilized). (default: 8)\n\nalignment\
    \ arguments:\n  --sf SEQ_FIELDS [SEQ_FIELDS ...]\n                        The\
    \ sequence fields to multiple align within each\n                        record.\
    \ (default: None)\n  --exec MUSCLE_EXEC    The location of the MUSCLE executable\
    \ (default:\n                        muscle)\n"
  generated_using: *id002
- !Command
  positional: []
  named:
  - !Flag
    description: 'A list of tab delimited database files. (default: None)'
    synonyms:
    - -d
    args: !RepeatFlagArg
      name: DB_FILES
    optional: true
  - !Flag
    description: 'Explicit output file name. Note, this argument cannot be used with
      the --failed, --outdir, or --outname arguments. If unspecified, then the output
      filename will be based on the input filename(s). (default: None)'
    synonyms:
    - -o
    args: !RepeatFlagArg
      name: OUT_FILES
    optional: true
  - !Flag
    description: 'Specify to changes the output directory to the location specified.
      The input file directory is used if this is not specified. (default: None)'
    synonyms:
    - --outdir
    args: !SimpleFlagArg
      name: OUT_DIR
    optional: true
  - !Flag
    description: 'Changes the prefix of the successfully processed output file to
      the string specified. May not be specified with multiple input files. (default:
      None)'
    synonyms:
    - --outname
    args: !SimpleFlagArg
      name: OUT_NAME
    optional: true
  - !Flag
    description: 'Specify to write verbose logging to a file. May not be specified
      with multiple input files. (default: None)'
    synonyms:
    - --log
    args: !SimpleFlagArg
      name: LOG_FILE
    optional: true
  - !Flag
    description: 'If specified create files containing records that fail processing.
      (default: False)'
    synonyms:
    - --failed
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: 'Specify input and output format. (default: airr)'
    synonyms:
    - --format
    args: !ChoiceFlagArg
      choices: !!set
        changeo:
        airr:
    optional: true
  - !Flag
    description: 'The number of simultaneous computational processes to execute (CPU
      cores to utilized). (default: 8)'
    synonyms:
    - --nproc
    args: !SimpleFlagArg
      name: NPROC
    optional: true
  - !Flag
    description: 'The sequence fields to multiple align within each group. (default:
      None)'
    synonyms:
    - --sf
    args: !RepeatFlagArg
      name: SEQ_FIELDS
    optional: true
  - !Flag
    description: 'Additional (not allele call) fields to use for grouping. (default:
      None)'
    synonyms:
    - --gf
    args: !RepeatFlagArg
      name: GROUP_FIELDS
    optional: true
  - !Flag
    description: "[{v,d,j} ...] Segment calls (allele assignments) to use for grouping.\
      \ (default: ['v', 'j'])"
    synonyms:
    - --calls
    args: !ChoiceFlagArg
      choices: !!set
        v:
        j:
        d:
    optional: true
  - !Flag
    description: 'Specifies whether to use the V(D)J allele or gene when an allele
      call field (--calls) is specified. (default: gene)'
    synonyms:
    - --mode
    args: !ChoiceFlagArg
      choices: !!set
        allele:
        gene:
    optional: true
  - !Flag
    description: 'Specifies how to handle multiple values within default allele call
      fields. Currently, only "first" is supported. (default: first)'
    synonyms:
    - --act
    args: !ChoiceFlagArg
      choices: !!set
        first:
    optional: true
  - !Flag
    description: 'The location of the MUSCLE executable (default: muscle)'
    synonyms:
    - --exec
    args: !SimpleFlagArg
      name: MUSCLE_EXEC
    optional: true
  command:
  - AlignRecords.py
  - block
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag: !Flag
    description: show program's version number and exit
    synonyms:
    - --version
    args: !EmptyFlagArg {}
    optional: true
  help_text: "usage: AlignRecords.py block [--version] [-h] -d DB_FILES [DB_FILES\
    \ ...]\n                             [-o OUT_FILES [OUT_FILES ...]] [--outdir\
    \ OUT_DIR]\n                             [--outname OUT_NAME] [--log LOG_FILE]\
    \ [--failed]\n                             [--format {airr,changeo}] [--nproc\
    \ NPROC] --sf\n                             SEQ_FIELDS [SEQ_FIELDS ...]\n    \
    \                         [--gf GROUP_FIELDS [GROUP_FIELDS ...]]\n           \
    \                  [--calls {v,d,j} [{v,d,j} ...]]\n                         \
    \    [--mode {allele,gene}] [--act {first}]\n                             [--exec\
    \ MUSCLE_EXEC]\n\nhelp:\n  --version             show program's version number\
    \ and exit\n  -h, --help            show this help message and exit\n\nstandard\
    \ arguments:\n  -d DB_FILES [DB_FILES ...]\n                        A list of\
    \ tab delimited database files. (default:\n                        None)\n  -o\
    \ OUT_FILES [OUT_FILES ...]\n                        Explicit output file name.\
    \ Note, this argument cannot\n                        be used with the --failed,\
    \ --outdir, or --outname\n                        arguments. If unspecified, then\
    \ the output filename\n                        will be based on the input filename(s).\
    \ (default:\n                        None)\n  --outdir OUT_DIR      Specify to\
    \ changes the output directory to the\n                        location specified.\
    \ The input file directory is used\n                        if this is not specified.\
    \ (default: None)\n  --outname OUT_NAME    Changes the prefix of the successfully\
    \ processed\n                        output file to the string specified. May\
    \ not be\n                        specified with multiple input files. (default:\
    \ None)\n  --log LOG_FILE        Specify to write verbose logging to a file. May\
    \ not be\n                        specified with multiple input files. (default:\
    \ None)\n  --failed              If specified create files containing records\
    \ that fail\n                        processing. (default: False)\n  --format\
    \ {airr,changeo}\n                        Specify input and output format. (default:\
    \ airr)\n  --nproc NPROC         The number of simultaneous computational processes\
    \ to\n                        execute (CPU cores to utilized). (default: 8)\n\n\
    alignment arguments:\n  --sf SEQ_FIELDS [SEQ_FIELDS ...]\n                   \
    \     The sequence fields to multiple align within each\n                    \
    \    group. (default: None)\n  --gf GROUP_FIELDS [GROUP_FIELDS ...]\n        \
    \                Additional (not allele call) fields to use for\n            \
    \            grouping. (default: None)\n  --calls {v,d,j} [{v,d,j} ...]\n    \
    \                    Segment calls (allele assignments) to use for\n         \
    \               grouping. (default: ['v', 'j'])\n  --mode {allele,gene}  Specifies\
    \ whether to use the V(D)J allele or gene when\n                        an allele\
    \ call field (--calls) is specified. (default:\n                        gene)\n\
    \  --act {first}         Specifies how to handle multiple values within default\n\
    \                        allele call fields. Currently, only \"first\" is\n  \
    \                      supported. (default: first)\n  --exec MUSCLE_EXEC    The\
    \ location of the MUSCLE executable (default:\n                        muscle)\n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: AlignRecords.py
    optional: false
  named: []
  command:
  - AlignRecords.py
  - align-pass
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: ''
    synonyms:
    - -h
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag: !Flag
    description: ''
    synonyms:
    - --version
    args: !EmptyFlagArg {}
    optional: true
  help_text: "usage: AlignRecords.py [--version] [-h]  ...\nAlignRecords.py: error:\
    \ argument : invalid choice: 'align-pass' (choose from 'across', 'within', 'block')\n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: AlignRecords.py
    optional: false
  named: []
  command:
  - AlignRecords.py
  - align-fail
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: ''
    synonyms:
    - -h
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag: !Flag
    description: ''
    synonyms:
    - --version
    args: !EmptyFlagArg {}
    optional: true
  help_text: "usage: AlignRecords.py [--version] [-h]  ...\nAlignRecords.py: error:\
    \ argument : invalid choice: 'align-fail' (choose from 'across', 'within', 'block')\n"
  generated_using: *id002
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: show program's version number and exit
  synonyms:
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "usage: AlignRecords.py [--version] [-h]  ...\n\nMultiple aligns sequence\
  \ fields\n\nhelp:\n  --version   show program's version number and exit\n  -h, --help\
  \  show this help message and exit\n\nsubcommands:\n              alignment method\n\
  \    across    Multiple aligns sequence columns within groups and across rows\n\
  \              using MUSCLE.\n    within    Multiple aligns sequence fields within\
  \ rows using MUSCLE\n    block     Multiple aligns sequence groups across both columns\
  \ and rows\n              using MUSCLE.\n\noutput files:\n    align-pass\n     \
  \   database with multiple aligned sequences.\n    align-fail\n        database\
  \ with records failing alignment.\n\nrequired fields:\n    sequence_id, v_call,\
  \ j_call\n    <field>\n        user specified sequence fields to align.\n\noutput\
  \ fields:\n    <field>_align\n"
generated_using: *id002
