from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Int, File, Boolean

Gffcompare_V0_1_0 = CommandToolBuilder(tool="gffcompare", base_command=["gffcompare"], inputs=[ToolInput(tag="in_gffcompare_version_also", input_type=String(optional=True), prefix="-v", doc=InputDocumentation(doc="gffcompare version (also --version)")), ToolInput(tag="in_text_file_process", input_type=Int(optional=True), prefix="-i", doc=InputDocumentation(doc="a text file with a list of (query) GTF files to process instead\nof expecting them as command line arguments (useful when a large number\nof GTF files should be processed)")), ToolInput(tag="in_annotation_file_gtfgff", input_type=File(optional=True), prefix="-r", doc=InputDocumentation(doc="annotation file (GTF/GFF)")), ToolInput(tag="in_strict_match", input_type=Boolean(optional=True), prefix="--strict-match", doc=InputDocumentation(doc=": the match code '=' is only assigned when all exon boundaries\nmatch; code '~' is assigned for intron chain match or single-exon")), ToolInput(tag="in_consider_only_reference_transcripts_thatoverlap", input_type=String(optional=True), prefix="-R", doc=InputDocumentation(doc=", consider only the reference transcripts that\noverlap any of the input transfrags (Sn correction)")), ToolInput(tag="in_consider_only_input_transcripts_thatoverlap", input_type=String(optional=True), prefix="-Q", doc=InputDocumentation(doc=", consider only the input transcripts that\noverlap any of the reference transcripts (Precision correction);\n(Warning: this will discard all 'novel' loci!)")), ToolInput(tag="in_ignore_singleexon_transfrags", input_type=String(optional=True), prefix="-M", doc=InputDocumentation(doc="(ignore) single-exon transfrags and reference transcripts")), ToolInput(tag="in_ignore_singleexon_transcripts", input_type=String(optional=True), prefix="-N", doc=InputDocumentation(doc="(ignore) single-exon reference transcripts")), ToolInput(tag="in_query_transfrags_ie", input_type=String(optional=True), prefix="-D", doc=InputDocumentation(doc="'duplicate' query transfrags (i.e. those with the same\nintron chain) within a single sample (disable 'annotation' mode)")), ToolInput(tag="in_stricter_duplicate_checking", input_type=String(optional=True), prefix="-S", doc=InputDocumentation(doc=", but stricter duplicate checking: only discard matching query\nor reference transcripts (same intron chain) if their boundaries are fully\ncontained within other, larger or identical transfrags; if --strict-match\nis also given, exact matching of all exon boundaries is required")), ToolInput(tag="in_no_merge", input_type=Boolean(optional=True), prefix="--no-merge", doc=InputDocumentation(doc=": disable close-exon merging (default: merge exons separated by\n'introns' shorter than 5 bases")), ToolInput(tag="in_genome_sequences_optional", input_type=File(optional=True), prefix="-s", doc=InputDocumentation(doc="to genome sequences (optional); this can be either a multi-FASTA\nfile or a directory containing single-fasta files (one for each contig);\nrepeats must be soft-masked (lower case) in order to be able to classify\ntransfrags as repeats")), ToolInput(tag="in_generate_files_input", input_type=File(optional=True), prefix="-T", doc=InputDocumentation(doc="not generate .tmap and .refmap files for each input file")), ToolInput(tag="in_distance_range_allowed", input_type=Int(optional=True), prefix="-e", doc=InputDocumentation(doc="distance (range) allowed from free ends of terminal exons of\nreference transcripts when assessing exon accuracy (100)")), ToolInput(tag="in_distance_range_grouping", input_type=Int(optional=True), prefix="-d", doc=InputDocumentation(doc="distance (range) for grouping transcript start sites (100)")), ToolInput(tag="in_processing_mode_also", input_type=String(optional=True), prefix="-V", doc=InputDocumentation(doc="processing mode (also shows GFF parser warnings)")), ToolInput(tag="in_chr_stats", input_type=Boolean(optional=True), prefix="--chr-stats", doc=InputDocumentation(doc=": the .stats file will show summary and accuracy data\nfor each reference contig/chromosome separately")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc=": enables -V and generates additional files:\n<outprefix>.Q_discarded.lst, <outprefix>.missed_introns.gff,\n<outprefix>.R_missed.lst")), ToolInput(tag="in_name_prefix_use", input_type=File(optional=True), prefix="-p", doc=InputDocumentation(doc="name prefix to use for consensus transcripts in the\n<outprefix>.combined.gtf file (default: 'TCONS')")), ToolInput(tag="in_matching_transfrags_outputie", input_type=String(optional=True), prefix="-C", doc=InputDocumentation(doc="matching and 'contained' transfrags in the GTF output\n(i.e. collapse intron-redundant transfrags across all query files)")), ToolInput(tag="in_discard_intronredundant_transfrags", input_type=Int(optional=True), prefix="-A", doc=InputDocumentation(doc="does not discard intron-redundant transfrags if they start\nwith a different 5' exon (keep alternate TSS)")), ToolInput(tag="in_also_discard_contained", input_type=String(optional=True), prefix="-X", doc=InputDocumentation(doc="also discard contained transfrags if transfrag ends stick out\nwithin the container's introns")), ToolInput(tag="in_discard_redundant_transfrag", input_type=String(optional=True), prefix="-K", doc=InputDocumentation(doc=", do NOT discard any redundant transfrag matching a reference"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Gffcompare_V0_1_0().translate("wdl", allow_empty_container=True)

