&id003 !Command
positional:
- !Positional
  description: path to recipe directory (can also be path to the .bz2)
  position: 0
  name: recipe_path
  optional: false
named:
- !Flag
  description: (Optional) Set the stdout log level to debug
  synonyms:
  - -d
  - --debug
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: (Optional) By default the newly installed local ggd data package is
    uninstalled after the check has finished. To bypass this uninstall step (to keep
    the local package installed) set this flag "-- dont_uninstall"
  synonyms:
  - -du
  - --dont_uninstall
  args: !EmptyFlagArg {}
  optional: true
command:
- ggd
- check-recipe
parent: &id001 !Command
  positional: []
  named:
  - !Flag
    description: ''
    synonyms:
    - -v
    args: !EmptyFlagArg {}
    optional: true
  command:
  - ggd
  parent:
  subcommands:
  - !Command
    positional:
    - !Positional
      description: "**Required** The term(s) to search for. Multiple terms can be\
        \ used. Example: 'ggd search reference genome'"
      position: 0
      name: search_term
      optional: false
    named:
    - !Flag
      description: (Optional) Filter results by the genome build of the desired recipe
      synonyms:
      - -g
      - --genome-build
      args: !ChoiceFlagArg
        choices: !!set
          ? GRCh37
          ? hg38
          ? hg19
          ? danRer10
          ? GRCz11
          ? mm10
          ? GRCz10
          ? danRer11
          ? mm9
          ? dm3
          ? GRCh38
          ? canFam3
          ? dm6
      optional: true
    - !Flag
      description: (Optional) Filter results by the species for the desired recipe
      synonyms:
      - -s
      - --species
      args: !ChoiceFlagArg
        choices: !!set
          ? Mus_musculus
          ? Danio_rerio
          ? Homo_sapiens
          ? Canis_familiaris
          ? Drosophila_melanogaster
      optional: true
    - !Flag
      description: (Optional) The number of search results to display. (Default =
        5)
      synonyms:
      - -dn
      - --display-number
      args: !SimpleFlagArg
        name: DISPLAY_NUMBER
      optional: true
    - !Flag
      description: (Optional) A score between 0 and 100 to use to filter the results
        by. (Default = 75). The lower the number the more results will be output
      synonyms:
      - -m
      - --match-score
      args: !SimpleFlagArg
        name: MATCH_SCORE
      optional: true
    - !Flag
      description: (Optional) The ggd channel to search. (Default = genomics)
      synonyms:
      - -c
      - --channel
      args: !ChoiceFlagArg
        choices: !!set
          ? genomics
      optional: true
    command:
    - ggd
    - search
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: ggd search [-h]\n                  [-g {GRCh37,GRCh38,GRCz10,GRCz11,canFam3,danRer10,danRer11,dm3,dm6,hg19,hg38,mm10,mm9}]\n\
      \                  [-s {Canis_familiaris,Danio_rerio,Drosophila_melanogaster,Homo_sapiens,Mus_musculus}]\n\
      \                  [-dn DISPLAY_NUMBER] [-m MATCH_SCORE] [-c {genomics}]\n \
      \                 search_term [search_term ...]\n\nSearch for available ggd\
      \ data packages. Results are filtered by match score\nfrom high to low. (Only\
      \ 5 results will be reported unless the -dn flag is\nchanged)\n\npositional\
      \ arguments:\n  search_term           **Required** The term(s) to search for.\
      \ Multiple terms\n                        can be used. Example: 'ggd search\
      \ reference genome'\n\noptional arguments:\n  -h, --help            show this\
      \ help message and exit\n  -g {GRCh37,GRCh38,GRCz10,GRCz11,canFam3,danRer10,danRer11,dm3,dm6,hg19,hg38,mm10,mm9},\
      \ --genome-build {GRCh37,GRCh38,GRCz10,GRCz11,canFam3,danRer10,danRer11,dm3,dm6,hg19,hg38,mm10,mm9}\n\
      \                        (Optional) Filter results by the genome build of the\n\
      \                        desired recipe\n  -s {Canis_familiaris,Danio_rerio,Drosophila_melanogaster,Homo_sapiens,Mus_musculus},\
      \ --species {Canis_familiaris,Danio_rerio,Drosophila_melanogaster,Homo_sapiens,Mus_musculus}\n\
      \                        (Optional) Filter results by the species for the\n\
      \                        desired recipe\n  -dn DISPLAY_NUMBER, --display-number\
      \ DISPLAY_NUMBER\n                        (Optional) The number of search results\
      \ to display.\n                        (Default = 5)\n  -m MATCH_SCORE, --match-score\
      \ MATCH_SCORE\n                        (Optional) A score between 0 and 100\
      \ to use to filter\n                        the results by. (Default = 75).\
      \ The lower the number\n                        the more results will be output\n\
      \  -c {genomics}, --channel {genomics}\n                        (Optional) The\
      \ ggd channel to search. (Default =\n                        genomics)\n"
    generated_using: &id002
    - --help
  - !Command
    positional: []
    named:
    - !Flag
      description: The ggd channel of the recipe to find. (Default = genomics)
      synonyms:
      - -c
      - --channel
      args: !ChoiceFlagArg
        choices: !!set
          ? genomics
      optional: true
    - !Flag
      description: (Optional) The name or the full directory path to an conda environment.
        The predicted path will be based on this conda environment. When installing,
        the data package should also be installed in this environment. (Only needed
        if not predicting for a path in the current conda enviroment)
      synonyms:
      - --prefix
      args: !SimpleFlagArg
        name: PREFIX
      optional: true
    - !Flag
      description: (Required) The name of the data package to predict a file path
        for
      synonyms:
      - -pn
      - --package-name
      args: !SimpleFlagArg
        name: PACKAGE_NAME
      optional: true
    - !Flag
      description: (Required) The name of the file to predict that path for. It is
        best if you give the full and correct name of the file to predict the path
        for. If not, ggd will try to identify the right file, but won't guarantee
        that it is the rigth file
      synonyms:
      - -fn
      - --file-name
      args: !SimpleFlagArg
        name: FILE_NAME
      optional: true
    command:
    - ggd
    - predict-path
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: ggd predict-path [-h] [-c {genomics}] [--prefix PREFIX] -pn\n\
      \                        PACKAGE_NAME -fn FILE_NAME\n\nGet a predicted install\
      \ file path for a data package before it is installed.\n(Use for worklows, such\
      \ as Snakemake)\n\noptional arguments:\n  -h, --help            show this help\
      \ message and exit\n  -c {genomics}, --channel {genomics}\n                \
      \        The ggd channel of the recipe to find. (Default =\n               \
      \         genomics)\n  --prefix PREFIX       (Optional) The name or the full\
      \ directory path to an\n                        conda environment. The predicted\
      \ path will be based on\n                        this conda environment. When\
      \ installing, the data\n                        package should also be installed\
      \ in this environment.\n                        (Only needed if not predicting\
      \ for a path in the\n                        current conda enviroment)\n\nrequired\
      \ arguments:\n  -pn PACKAGE_NAME, --package-name PACKAGE_NAME\n            \
      \            (Required) The name of the data package to predict a\n        \
      \                file path for\n  -fn FILE_NAME, --file-name FILE_NAME\n   \
      \                     (Required) The name of the file to predict that path\n\
      \                        for. It is best if you give the full and correct name\n\
      \                        of the file to predict the path for. If not, ggd will\n\
      \                        try to identify the right file, but won't guarantee\n\
      \                        that it is the rigth file\n"
    generated_using: *id002
  - !Command
    positional:
    - !Positional
      description: 'The data package name to install. Can use more than once (e.g.
        ggd install <pkg 1> <pkg 2> <pkg 3> ). (NOTE: No need to designate version
        as it is implicated in the package name)'
      position: 0
      name: name
      optional: false
    named:
    - !Flag
      description: The ggd channel the desired recipe is stored in. (Default = genomics)
      synonyms:
      - -c
      - --channel
      args: !ChoiceFlagArg
        choices: !!set
          ? genomics
      optional: true
    - !Flag
      description: (Optional) When the -d flag is set debug output will be printed
        to stdout.
      synonyms:
      - -d
      - --debug
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: A file with a list of ggd data packages to install. One package
        per line. Can use more than one (e.g. ggd install --file <file_1> --file <file_2>
        )
      synonyms:
      - --file
      args: !SimpleFlagArg
        name: FILE
      optional: true
    - !Flag
      description: (Optional) The name or the full directory path to an existing conda
        environment where you want to install a ggd data pacakge. (Only needed if
        you want to install the data package into a different conda environment then
        the one you are currently in)
      synonyms:
      - --prefix
      args: !SimpleFlagArg
        name: PREFIX
      optional: true
    command:
    - ggd
    - install
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: ggd install [-h] [-c {genomics}] [-d] [--file FILE] [--prefix\
      \ PREFIX]\n                   [name [name ...]]\n\nInstall a ggd data package\
      \ into the current or specified conda environment\n\npositional arguments:\n\
      \  name                  The data package name to install. Can use more than\n\
      \                        once (e.g. ggd install <pkg 1> <pkg 2> <pkg 3> ).\n\
      \                        (NOTE: No need to designate version as it is\n    \
      \                    implicated in the package name)\n\noptional arguments:\n\
      \  -h, --help            show this help message and exit\n  -c {genomics}, --channel\
      \ {genomics}\n                        The ggd channel the desired recipe is\
      \ stored in.\n                        (Default = genomics)\n  -d, --debug  \
      \         (Optional) When the -d flag is set debug output will\n           \
      \             be printed to stdout.\n  --file FILE           A file with a list\
      \ of ggd data packages to install.\n                        One package per\
      \ line. Can use more than one (e.g. ggd\n                        install --file\
      \ <file_1> --file <file_2> )\n  --prefix PREFIX       (Optional) The name or\
      \ the full directory path to an\n                        existing conda environment\
      \ where you want to install a\n                        ggd data pacakge. (Only\
      \ needed if you want to install\n                        the data package into\
      \ a different conda environment\n                        then the one you are\
      \ currently in)\n"
    generated_using: *id002
  - !Command
    positional:
    - !Positional
      description: the name of the recipe to uninstall
      position: 0
      name: name
      optional: false
    named:
    - !Flag
      description: The ggd channel of the recipe to uninstall. (Default = genomics)
      synonyms:
      - -c
      - --channel
      args: !ChoiceFlagArg
        choices: !!set
          ? genomics
      optional: true
    command:
    - ggd
    - uninstall
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: ggd uninstall [-h] [-c {genomics}] name\n\nUse ggd to uninstall\
      \ a ggd data package installed in the current conda\nenvironment\n\npositional\
      \ arguments:\n  name                  the name of the recipe to uninstall\n\n\
      optional arguments:\n  -h, --help            show this help message and exit\n\
      \  -c {genomics}, --channel {genomics}\n                        The ggd channel\
      \ of the recipe to uninstall. (Default =\n                        genomics)\n"
    generated_using: *id002
  - !Command
    positional: []
    named:
    - !Flag
      description: (Optional) pattern to match the name of the ggd data package.
      synonyms:
      - -p
      - --pattern
      args: !SimpleFlagArg
        name: PATTERN
      optional: true
    - !Flag
      description: (Optional) The name or the full directory path to a conda environment
        where a ggd recipe is stored. (Only needed if not getting file paths for files
        in the current conda enviroment)
      synonyms:
      - --prefix
      args: !SimpleFlagArg
        name: PREFIX
      optional: true
    command:
    - ggd
    - list
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: ggd list [-h] [-p PATTERN] [--prefix PREFIX]\n\nGet a list\
      \ of ggd data packages installed in the current or specified conda\nprefix/environment.\n\
      \noptional arguments:\n  -h, --help            show this help message and exit\n\
      \  -p PATTERN, --pattern PATTERN\n                        (Optional) pattern\
      \ to match the name of the ggd data\n                        package.\n  --prefix\
      \ PREFIX       (Optional) The name or the full directory path to a\n       \
      \                 conda environment where a ggd recipe is stored. (Only\n  \
      \                      needed if not getting file paths for files in the\n \
      \                       current conda enviroment)\n"
    generated_using: *id002
  - !Command
    positional:
    - !Positional
      description: pattern to match recipe name(s).
      position: 0
      name: name
      optional: false
    named:
    - !Flag
      description: The ggd channel of the recipe to find. (Default = genomics)
      synonyms:
      - -c
      - --channel
      args: !ChoiceFlagArg
        choices: !!set
          ? genomics
      optional: true
    - !Flag
      description: (Optional) species recipe is for. Use '*' for any species
      synonyms:
      - -s
      - --species
      args: !ChoiceFlagArg
        choices: !!set
          ? Mus_musculus
          ? Danio_rerio
          ? Homo_sapiens
          ? Canis_familiaris
          ? Drosophila_melanogaster
      optional: true
    - !Flag
      description: (Optional) genome build the recipe is for. Use '*' for any genome
        build.
      synonyms:
      - -g
      - --genome-build
      args: !ChoiceFlagArg
        choices: !!set
          ? GRCh37
          ? hg38
          ? hg19
          ? danRer10
          ? GRCz11
          ? mm10
          ? GRCz10
          ? danRer11
          ? mm9
          ? dm3
          ? GRCh38
          ? canFam3
          ? dm6
      optional: true
    - !Flag
      description: (Optional) pattern to match the name of the file desired. To list
        all files for a ggd package, do not use the -p option
      synonyms:
      - -p
      - --pattern
      args: !SimpleFlagArg
        name: PATTERN
      optional: true
    - !Flag
      description: (Optional) The name or the full directory path to an conda environment
        where a ggd recipe is stored. (Only needed if not getting file paths for files
        in the current conda enviroment)
      synonyms:
      - --prefix
      args: !SimpleFlagArg
        name: PREFIX
      optional: true
    command:
    - ggd
    - get-files
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag: !Flag
      description: (Optional) pattern to match the version of the file desired. Use
        '*' for any version
      synonyms:
      - -v
      - --version
      args: !SimpleFlagArg
        name: VERSION
      optional: true
    help_text: "usage: ggd get-files [-h] [-c {genomics}]\n                     [-s\
      \ {Canis_familiaris,Danio_rerio,Drosophila_melanogaster,Homo_sapiens,Mus_musculus}]\n\
      \                     [-g {GRCh37,GRCh38,GRCz10,GRCz11,canFam3,danRer10,danRer11,dm3,dm6,hg19,hg38,mm10,mm9}]\n\
      \                     [-v VERSION] [-p PATTERN] [--prefix PREFIX]\n        \
      \             name\n\nGet a list of file(s) for a specific installed ggd package\n\
      \npositional arguments:\n  name                  pattern to match recipe name(s).\n\
      \noptional arguments:\n  -h, --help            show this help message and exit\n\
      \  -c {genomics}, --channel {genomics}\n                        The ggd channel\
      \ of the recipe to find. (Default =\n                        genomics)\n  -s\
      \ {Canis_familiaris,Danio_rerio,Drosophila_melanogaster,Homo_sapiens,Mus_musculus},\
      \ --species {Canis_familiaris,Danio_rerio,Drosophila_melanogaster,Homo_sapiens,Mus_musculus}\n\
      \                        (Optional) species recipe is for. Use '*' for any\n\
      \                        species\n  -g {GRCh37,GRCh38,GRCz10,GRCz11,canFam3,danRer10,danRer11,dm3,dm6,hg19,hg38,mm10,mm9},\
      \ --genome-build {GRCh37,GRCh38,GRCz10,GRCz11,canFam3,danRer10,danRer11,dm3,dm6,hg19,hg38,mm10,mm9}\n\
      \                        (Optional) genome build the recipe is for. Use '*'\
      \ for\n                        any genome build.\n  -v VERSION, --version VERSION\n\
      \                        (Optional) pattern to match the version of the file\n\
      \                        desired. Use '*' for any version\n  -p PATTERN, --pattern\
      \ PATTERN\n                        (Optional) pattern to match the name of the\
      \ file\n                        desired. To list all files for a ggd package,\
      \ do not\n                        use the -p option\n  --prefix PREFIX     \
      \  (Optional) The name or the full directory path to an\n                  \
      \      conda environment where a ggd recipe is stored. (Only\n             \
      \           needed if not getting file paths for files in the\n            \
      \            current conda enviroment)\n"
    generated_using: *id002
  - !Command
    positional:
    - !Positional
      description: the name of the recipe to get info about
      position: 0
      name: name
      optional: false
    named:
    - !Flag
      description: The ggd channel of the recipe to list info about (Default = genomics)
      synonyms:
      - -c
      - --channel
      args: !ChoiceFlagArg
        choices: !!set
          ? genomics
      optional: true
    - !Flag
      description: '(Optional) When the flag is set, the recipe will be printed to
        the stdout. This will provide info on where the data is hosted and how it
        was processed. (NOTE: -sr flag does not accept arguments)'
      synonyms:
      - -sr
      - --show_recipe
      args: !EmptyFlagArg {}
      optional: true
    command:
    - ggd
    - pkg-info
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: ggd pkg-info [-h] [-c {genomics}] [-sr] name\n\nGet the information\
      \ for a specific ggd data pacakge installed in the current\nconda environmnet\n\
      \npositional arguments:\n  name                  the name of the recipe to get\
      \ info about\n\noptional arguments:\n  -h, --help            show this help\
      \ message and exit\n  -c {genomics}, --channel {genomics}\n                \
      \        The ggd channel of the recipe to list info about\n                \
      \        (Default = genomics)\n  -sr, --show_recipe    (Optional) When the flag\
      \ is set, the recipe will be\n                        printed to the stdout.\
      \ This will provide info on where\n                        the data is hosted\
      \ and how it was processed. (NOTE:\n                        -sr flag does not\
      \ accept arguments)\n"
    generated_using: *id002
  - !Command
    positional:
    - !Positional
      description: bash script that contains the commands to obtain and process the
        data
      position: 0
      name: script
      optional: false
    named:
    - !Flag
      description: the ggd channel to use. (Default = genomics)
      synonyms:
      - -c
      - --channel
      args: !ChoiceFlagArg
        choices: !!set
          ? genomics
      optional: true
    - !Flag
      description: any software dependencies (in bioconda, conda-forge) or data-dependency
        (in ggd). May be as many times as needed.
      synonyms:
      - -d
      - --dependency
      args: !SimpleFlagArg
        name: DEPENDENCY
      optional: true
    - !Flag
      description: any files that the recipe creates that are not a *.gz and *.gz.tbi
        pair or *.fa and *.fai pair. May be used more than once
      synonyms:
      - -e
      - --extra-file
      args: !SimpleFlagArg
        name: EXTRA_FILE
      optional: true
    - !Flag
      description: Whether to use noarch as the platfrom or the system platform. If
        set to 'none' the system platform will be used. (Default = noarch. Noarch
        means no architecture and is platform agnostic.)
      synonyms:
      - -p
      - --platform
      args: !ChoiceFlagArg
        choices: !!set
          ? noarch
          ? none
      optional: true
    - !Flag
      description: The species recipe is for
      synonyms:
      - -s
      - --species
      args: !ChoiceFlagArg
        choices: !!set
          ? Mus_musculus
          ? Danio_rerio
          ? Homo_sapiens
          ? Canis_familiaris
          ? Drosophila_melanogaster
      optional: true
    - !Flag
      description: The genome build the recipe is for
      synonyms:
      - -g
      - --genome-build
      args: !ChoiceFlagArg
        choices: !!set
          ? GRCh37
          ? hg38
          ? hg19
          ? danRer10
          ? GRCz11
          ? mm10
          ? GRCz10
          ? danRer11
          ? mm9
          ? dm3
          ? GRCh38
          ? canFam3
          ? dm6
      optional: true
    - !Flag
      description: The author(s) of the data recipe being created, (This recipe)
      synonyms:
      - --authors
      args: !SimpleFlagArg
        name: AUTHORS
      optional: true
    - !Flag
      description: The version of the ggd package. (First time package = 1, updated
        package > 1)
      synonyms:
      - -pv
      - --package-version
      args: !SimpleFlagArg
        name: PACKAGE_VERSION
      optional: true
    - !Flag
      description: "The version of the data (itself) being downloaded and processed\
        \ (EX: dbsnp-127) If there is no data version apparent we recommend you use\
        \ the date associated with the files or something else that can uniquely identify\
        \ the 'version' of the data"
      synonyms:
      - -dv
      - --data-version
      args: !SimpleFlagArg
        name: DATA_VERSION
      optional: true
    - !Flag
      description: 'The data provider where the data was accessed. (Example: UCSC,
        Ensembl, gnomAD, etc.)'
      synonyms:
      - -dp
      - --data-provider
      args: !SimpleFlagArg
        name: DATA_PROVIDER
      optional: true
    - !Flag
      description: A detailed comment describing the recipe
      synonyms:
      - --summary
      args: !SimpleFlagArg
        name: SUMMARY
      optional: true
    - !Flag
      description: A keyword to associate with the recipe. May be specified more that
        once. Please add enough keywords to better describe and distinguish the recipe
      synonyms:
      - -k
      - --keyword
      args: !SimpleFlagArg
        name: KEYWORD
      optional: true
    - !Flag
      description: The genomic coordinate basing for the file(s) in the recipe. That
        is, the coordianances start at genomic coordinate 0 or 1, and the end coordinate
        is either inclusive (everything up to and including the end coordinate) or
        exlcusive (everthing up to but not including the end coordinate) Files that
        do not have coordiante basing, like fasta files, specify NA for not applicable.
      synonyms:
      - -cb
      - --coordinate-base
      args: !ChoiceFlagArg
        choices: !!set
          ? 1-based-inclusive
          ? 0-based-exclusive
          ? 1-based-exclusive
          ? 0-based-inclusive
          ? NA
      optional: true
    - !Flag
      description: The sub-name of the recipe being created. (e.g. cpg- islands, pfam-domains,
        gaps, etc.) This will not be the final name of the recipe, but will describe
        what data the recipe gets
      synonyms:
      - -n
      - --name
      args: !SimpleFlagArg
        name: NAME
      optional: true
    command:
    - ggd
    - make-recipe
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: ggd make-recipe [-h] [-c {genomics}] [-d DEPENDENCY] [-e EXTRA_FILE]\n\
      \                       [-p {noarch,none}] -s\n                       {Canis_familiaris,Danio_rerio,Drosophila_melanogaster,Homo_sapiens,Mus_musculus}\n\
      \                       -g\n                       {GRCh37,GRCh38,GRCz10,GRCz11,canFam3,danRer10,danRer11,dm3,dm6,hg19,hg38,mm10,mm9}\n\
      \                       [--authors AUTHORS] -pv PACKAGE_VERSION -dv\n      \
      \                 DATA_VERSION -dp DATA_PROVIDER --summary SUMMARY -k\n    \
      \                   KEYWORD -cb\n                       {0-based-inclusive,0-based-exclusive,1-based-inclusive,1-based-exclusive,NA}\n\
      \                       -n NAME\n                       script\n\nMake a ggd\
      \ data recipe from a bash script\n\noptional arguments:\n  -h, --help      \
      \      show this help message and exit\n  -c {genomics}, --channel {genomics}\n\
      \                        the ggd channel to use. (Default = genomics)\n  -d\
      \ DEPENDENCY, --dependency DEPENDENCY\n                        any software\
      \ dependencies (in bioconda, conda-forge)\n                        or data-dependency\
      \ (in ggd). May be as many times as\n                        needed.\n  -e EXTRA_FILE,\
      \ --extra-file EXTRA_FILE\n                        any files that the recipe\
      \ creates that are not a *.gz\n                        and *.gz.tbi pair or\
      \ *.fa and *.fai pair. May be used\n                        more than once\n\
      \  -p {noarch,none}, --platform {noarch,none}\n                        Whether\
      \ to use noarch as the platfrom or the system\n                        platform.\
      \ If set to 'none' the system platform will be\n                        used.\
      \ (Default = noarch. Noarch means no architecture\n                        and\
      \ is platform agnostic.)\n\nrequired arguments:\n  -s {Canis_familiaris,Danio_rerio,Drosophila_melanogaster,Homo_sapiens,Mus_musculus},\
      \ --species {Canis_familiaris,Danio_rerio,Drosophila_melanogaster,Homo_sapiens,Mus_musculus}\n\
      \                        The species recipe is for\n  -g {GRCh37,GRCh38,GRCz10,GRCz11,canFam3,danRer10,danRer11,dm3,dm6,hg19,hg38,mm10,mm9},\
      \ --genome-build {GRCh37,GRCh38,GRCz10,GRCz11,canFam3,danRer10,danRer11,dm3,dm6,hg19,hg38,mm10,mm9}\n\
      \                        The genome build the recipe is for\n  --authors AUTHORS\
      \     The author(s) of the data recipe being created, (This\n              \
      \          recipe)\n  -pv PACKAGE_VERSION, --package-version PACKAGE_VERSION\n\
      \                        The version of the ggd package. (First time package\
      \ =\n                        1, updated package > 1)\n  -dv DATA_VERSION, --data-version\
      \ DATA_VERSION\n                        The version of the data (itself) being\
      \ downloaded and\n                        processed (EX: dbsnp-127) If there\
      \ is no data version\n                        apparent we recommend you use\
      \ the date associated with\n                        the files or something else\
      \ that can uniquely identify\n                        the 'version' of the data\n\
      \  -dp DATA_PROVIDER, --data-provider DATA_PROVIDER\n                      \
      \  The data provider where the data was accessed.\n                        (Example:\
      \ UCSC, Ensembl, gnomAD, etc.)\n  --summary SUMMARY     A detailed comment describing\
      \ the recipe\n  -k KEYWORD, --keyword KEYWORD\n                        A keyword\
      \ to associate with the recipe. May be\n                        specified more\
      \ that once. Please add enough keywords\n                        to better describe\
      \ and distinguish the recipe\n  -cb {0-based-inclusive,0-based-exclusive,1-based-inclusive,1-based-exclusive,NA},\
      \ --coordinate-base {0-based-inclusive,0-based-exclusive,1-based-inclusive,1-based-exclusive,NA}\n\
      \                        The genomic coordinate basing for the file(s) in the\n\
      \                        recipe. That is, the coordianances start at genomic\n\
      \                        coordinate 0 or 1, and the end coordinate is either\n\
      \                        inclusive (everything up to and including the end\n\
      \                        coordinate) or exlcusive (everthing up to but not\n\
      \                        including the end coordinate) Files that do not have\n\
      \                        coordiante basing, like fasta files, specify NA for\n\
      \                        not applicable.\n  -n NAME, --name NAME  The sub-name\
      \ of the recipe being created. (e.g. cpg-\n                        islands,\
      \ pfam-domains, gaps, etc.) This will not be\n                        the final\
      \ name of the recipe, but will describe what\n                        data the\
      \ recipe gets\n  script                bash script that contains the commands\
      \ to obtain and\n                        process the data\n"
    generated_using: *id002
  - *id003
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag: !Flag
    description: Installed version
    synonyms:
    - -v
    - --version
    args: !EmptyFlagArg {}
    optional: true
  help_text: "usage: ggd [-h] [-v]\n           {search,predict-path,install,uninstall,list,get-files,pkg-info,show-env,make-recipe,check-recipe}\n\
    \           ...\n\noptional arguments:\n  -h, --help            show this help\
    \ message and exit\n  -v, --version         Installed version\n\n[sub-commands]:\n\
    \  {search,predict-path,install,uninstall,list,get-files,pkg-info,show-env,make-recipe,check-recipe}\n\
    \    search              Search for a ggd data package\n    predict-path     \
    \   Predict the install file path of a data package that\n                   \
    \     hasn't been installed yet. (Use for workflows, such as\n               \
    \         Snakemake)\n    install             Install a ggd data package\n   \
    \ uninstall           Uninstall a ggd data data package\n    list            \
    \    List the ggd data package(s) that are currently\n                       \
    \ installed in a specific conda environment\n    get-files           Get the data\
    \ files for a specific installed ggd data\n                        package\n \
    \   pkg-info            List data package info for a specific installed ggd\n\
    \                        data package\n    show-env            Show ggd data package\
    \ environment variables available\n                        for the current conda\
    \ environment\n    make-recipe         Make a new ggd data recipe with a user\
    \ developed bash\n                        script\n    check-recipe        Build,\
    \ install, check, and test a ggd data recipe\n"
  generated_using: *id002
subcommands: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: ggd check-recipe [-h] [-d] [-du] recipe_path\n\nConvert a ggd recipe\
  \ created from `ggd make-recipe` into a data package. Test\nboth ggd data recipe\
  \ and data package\n\npositional arguments:\n  recipe_path           path to recipe\
  \ directory (can also be path to the\n                        .bz2)\n\noptional\
  \ arguments:\n  -h, --help            show this help message and exit\n  -d, --debug\
  \           (Optional) Set the stdout log level to debug\n  -du, --dont_uninstall\n\
  \                        (Optional) By default the newly installed local ggd\n \
  \                       data package is uninstalled after the check has\n      \
  \                  finished. To bypass this uninstall step (to keep the\n      \
  \                  local package installed) set this flag \"--\n               \
  \         dont_uninstall\"\n"
generated_using: *id002
