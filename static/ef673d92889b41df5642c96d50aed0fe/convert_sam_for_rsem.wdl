version 1.0

task Convertsamforrsem {
  input {
    Int? p_slash_num_threads
    String? memory_per_thread
    Boolean? h_slash_help
    String input_dots_am_slash_input_dot_bam_slash_input_dot_cram
    String output_file_name
  }
  command <<<
    convert_sam_for_rsem \
      ~{input_dots_am_slash_input_dot_bam_slash_input_dot_cram} \
      ~{output_file_name} \
      ~{if defined(p_slash_num_threads) then ("-p/--num-threads " +  '"' + p_slash_num_threads + '"') else ""} \
      ~{if defined(memory_per_thread) then ("--memory-per-thread " +  '"' + memory_per_thread + '"') else ""} \
      ~{if (h_slash_help) then "-h/--help" else ""}
  >>>
  parameter_meta {
    p_slash_num_threads: "Set the number of threads to be used for converting. (Default: 1)"
    memory_per_thread: "Set the maximum allowable memory per thread. <string> represents the\\nmemory and accepts suffices 'K/M/G'. (Default: 1G)"
    h_slash_help: "Show help information."
    input_dots_am_slash_input_dot_bam_slash_input_dot_cram: "The SAM/BAM/CRAM file generated by user's aligner. We require this\\nfile contains the header section."
    output_file_name: "The output name for the converted file. 'convert-sam-for-rsem' will\\noutput a BAM with the name 'output_file_name.bam'."
  }
  output {
    File out_stdout = stdout()
  }
}