!Command
command:
- PtR
positional: []
named: []
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "\n####################################################################################\
  \ \n#\n#######################\n# Inputs and Outputs: #\n#######################\n\
  #\n#  --matrix <string>        matrix.RAW.normalized.FPKM\n#\n#  Optional:\n#\n\
  #  Sample groupings:\n#\n#  --samples <string>      tab-delimited text file indicating\
  \ biological replicate relationships.\n#                                   ex.\n\
  #                                        cond_A    cond_A_rep1\n#              \
  \                          cond_A    cond_A_rep2\n#                            \
  \            cond_B    cond_B_rep1\n#                                        cond_B\
  \    cond_B_rep2\n#\n#  --gene_factors <string>   tab-delimited file containing\
  \ gene-to-factor relationships.\n#                               ex.\n#        \
  \                            liver_enriched <tab> gene1\n#                     \
  \               heart_enriched <tab> gene2\n#                                  \
  \  ...\n#                            (use of this data in plotting is noted for\
  \ corresponding plotting options)\n#\n#\n#  --output <string>        prefix for\
  \ output file (default: \"${matrix_file}.heatmap\")\n#\n#  --save              \
  \     save R session (as .RData file)\n#  --no_reuse               do not reuse\
  \ any existing .RData file on initial loading\n#\n#####################\n#  Plotting\
  \ Actions #\n#####################\n#\n#  --compare_replicates        provide scatter,\
  \ MA, QQ, and correlation plots to compare replicates.\n#\n#   \n#\n#  --barplot_sum_counts\
  \        generate a barplot that sums frag counts per replicate across all samples.\n\
  #\n#  --boxplot_log2_dist <float>        generate a boxplot showing the log2 dist\
  \ of counts where counts >= min fpkm\n#\n#  --sample_cor_matrix         generate\
  \ a sample correlation matrix plot\n#    --sample_cor_scale_limits <string>    ex.\
  \ \"-0.2,0.6\"\n#    --sample_cor_sum_gene_factor_expr <factor=string>    instead\
  \ of plotting the correlation value, plot the sum of expr according to gene factor\n\
  #                                                         requires --gene_factors\
  \ \n#\n#  --sample_cor_subset_matrix <string>  plot the sample correlation matrix,\
  \ but create a disjoint set for rows,cols.\n#                                  \
  \     The subset of the samples to provide as the columns is provided as parameter.\n\
  #\n#  --gene_cor_matrix           generate a gene-level correlation matrix plot\n\
  #\n#  --indiv_gene_cor <string>   generate a correlation matrix and heatmaps for\
  \ '--top_cor_gene_count' to specified genes (comma-delimited list)\n#      --top_cor_gene_count\
  \ <int>   (requires '--indiv_gene_cor with gene identifier specified')\n#      --min_gene_cor_val\
  \ <float>   (requires '--indiv_gene_cor with gene identifier specified')\n#\n# \
  \ --heatmap                   genes vs. samples heatmap plot\n#      --heatmap_scale_limits\
  \ \"<int,int>\"  cap scale intensity to low,high  (ie.  \"-5,5\")\n#      --heatmap_colorscheme\
  \ <string>  default is 'purple,black,yellow'\n#                                \
  \      a popular alternative is 'green,black,red'\n#                           \
  \           Specify a two-color gradient like so: \"black,yellow\".\n#\n#     #\
  \ sample (column) labeling order\n#      --lexical_column_ordering        order\
  \ samples by column name lexical order.\n#      --specified_column_ordering <string>\
  \  comma-delimited list of column names (must match matrix exactly!)\n#      --order_columns_by_samples_file\
  \  order the columns in the heatmap according to replicate name ordering in the\
  \ samples file.\n#\n#     # gene (row) labeling order\n#      --order_by_gene_factor\
  \           order the genes by their factor (given --gene_factors)\n#\n#  --gene_heatmaps\
  \ <string>    generate heatmaps for just one or more specified genes\n#        \
  \                      Requires a comma-delimited list of gene identifiers.\n# \
  \                             Plots one heatmap containing all specified genes,\
  \ then separate heatmaps for each gene.\n#                                 if --gene_factors\
  \ set, will include factor annotations as color panel.\n#                      \
  \           else if --prin_comp set, will include include principal component color\
  \ panel.\n#\n#  --prin_comp <int>           generate principal components, include\
  \ <int> top components in heatmap  \n#      --add_prin_comp_heatmaps <int>  draw\
  \ heatmaps for the top <int> features at each end of the prin. comp. axis.\n#  \
  \                                    (requires '--prin_comp') \n#      --add_top_loadings_pc_heatmap\
  \ <int>  draw a heatmap containing the <int> top feature loadings across all PCs.\n\
  #      --R_prin_comp_method <string>        options: princomp, prcomp (default:\
  \ prcomp)\n#\n#  --mean_vs_sd               expression variability plot. (highlight\
  \ specific genes by category via --gene_factors )\n#\n#  --var_vs_count_hist <vartype=string>\
  \        create histogram of counts of samples having feature expressed within a\
  \ given expression bin.\n#                                              vartype\
  \ can be any of 'sd|var|cv|fano'\n#      --count_hist_num_bins <int>  number of\
  \ bins to distribute counts in the histogram (default: 10)\n#      --count_hist_max_expr\
  \ <float>  maximum value for the expression histogram (default: max(data))\n#  \
  \    --count_hist_convert_percentages       convert the histogram counts to percentage\
  \ values.\n#\n#\n#  --per_gene_plots                   plot each gene as a separate\
  \ expression plot (barplot or lineplot)\n#    --per_gene_plot_width <float>    \
  \ default: 2.5\n#    --per_gene_plot_height <float>    default: 2.5\n#    --per_gene_plots_per_row\
  \ <int>   default: 1\n#    --per_gene_plots_per_col <int>   default: 2\n#    --per_gene_plots_incl_vioplot\
  \    include violin plots to show distribution of rep vals\n#\n########################################################\n\
  #  Data Filtering, in order of operation below:  #########################################################\n\
  #\n#\n## Column filters:\n#\n#  --restrict_samples <string>   comma-delimited list\
  \ of samples to restrict to (comma-delim list)\n#\n#  --top_rows <int>         only\
  \ include the top number of rows in the matrix, as ordered.\n#\n#  --min_colSums\
  \ <float>      min number of fragments, default: 0\n#\n#  --min_expressed_genes\
  \ <int>           minimum number of genes (rows) for a column (replicate) having\
  \ at least '--min_gene_expr_val'\n#       --min_gene_expr_val <float>   a gene must\
  \ be at least this value expressed across all samples.  (default: 1)\n#\n#\n## Row\
  \ Filters:\n#\n#  --min_rowSums <float>      min number of fragments, default: 0\n\
  #\n#  --gene_grep <string>     grep on string to restrict to genes\n#\n#  --min_across_ALL_samples_gene_expr_val\
  \ <int>   a gene must have this minimum expression value across ALL samples to be\
  \ retained.\n#\n#  --min_across_ANY_samples_gene_expr_val <int>   a gene must have\
  \ at least this expression value across ANY single sample to be retained.\n#\n#\
  \  --min_gene_prevalence <int>   gene must be found expressed in at least this number\
  \ of columns\n#       --min_gene_expr_val <float>   a gene must be at least this\
  \ value expressed across all samples.  (default: 1)\n#\n#  --minValAltNA <float>\
  \    minimum cell value after above transformations, otherwise convert to NA\n#\n\
  #  --top_genes <int>        use only the top number of most highly expressed transcripts\n\
  #\n#  --top_variable_genes <int>      Restrict to the those genes with highest coeff.\
  \ of variability across samples (use median of replicates)\n#\n#      --var_gene_method\
  \ <string>   method for ranking top variable genes ( 'coeffvar|anova', default:\
  \ 'anova' )\n#           --anova_maxFDR <float>    if anova chose, require FDR value\
  \ <= anova_maxFDR  (default: 0.05)\n#            or\n#           --anova_maxP <float>\
  \    if set, over-rides anova_maxQ  (default, off, uses --anova_maxQ)\n#\n#  --top_variable_via_stdev_and_mean_expr\
  \    perform filtering based on the stdev vs. mean expression plot.\n#      Requires\
  \ both:               (note, if you used --log2 and/or --Zscale, settings below\
  \ should use those transformed values)\n#         --min_stdev_expr <float>     \
  \  minimum standard deviation in expression\n#         --min_mean_expr  <float>\
  \       minimum mean expression value \n#\n######################################\n\
  #  Data transformations:             #\n######################################\n\
  #\n#  --CPM                    convert to counts per million (uses sum of totals\
  \ before filtering)\n#  --CPK                    convert to counts per thousand\n\
  #\n#  --binary                 all values > 0 are set to 1.  All values < 0 are\
  \ set to zero.\n#\n#  --log2\n#\n#  --center_rows            subtract row mean from\
  \ each data point. (only used under '--heatmap' )\n#\n#  --Zscale_rows         \
  \   Z-scale the values across the rows (genes)  \n#\n#########################\n\
  #  Clustering methods:  #\n#########################\n#\n#  --gene_dist <string>\
  \        Setting used for --heatmap (samples vs. genes)\n#                     \
  \             Options: euclidean, gene_cor\n#                                  \
  \         maximum, manhattan, canberra, binary, minkowski\n#                   \
  \               (default: 'euclidean')  Note: if using 'gene_cor', set method using\
  \ '--gene_cor' below.\n#\n#\n#  --sample_dist <string>      Setting used for --heatmap\
  \ (samples vs. genes)\n#                                  Options: euclidean, sample_cor\n\
  #                                           maximum, manhattan, canberra, binary,\
  \ minkowski\n#                                  (default: 'euclidean')  Note: if\
  \ using 'sample_cor', set method using '--sample_cor' below.\n#\n#\n#  --gene_clust\
  \ <string>       ward, single, complete, average, mcquitty, median, centroid, none\
  \ (default: complete)\n#  --sample_clust <string>     ward, single, complete, average,\
  \ mcquitty, median, centroid, none (default: complete)\n#\n#  --gene_cor <string>\
  \             Options: pearson, spearman  (default: pearson)\n#  --sample_cor <string>\
  \           Options: pearson, spearman  (default: pearson)\n#\n####################\n\
  #  Image settings: #\n####################\n#\n#\n#  --imgfmt <string>         \
  \  image type (pdf,svg) with default: pdf\n#\n#  --img_width <int>           image\
  \ width\n#  --img_height <int>          image height\n#\n################\n# Misc.\
  \ params #\n################\n#\n#  --write_intermediate_data_tables         writes\
  \ out the data table after each transformation.\n#\n#  --show_pipeline_flowchart\
  \                describe order of events and exit.\n#\n####################################################################################\n\
  \n\n\n"
generated_using:
- --help
docker_image: quay.io/biocontainers/trinity:2.12.0--h5ef6573_0
