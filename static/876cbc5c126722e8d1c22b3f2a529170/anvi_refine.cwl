class: CommandLineTool
id: anvi_refine.cwl
inputs:
- id: in_profile_db
  doc: Anvi'o profile database
  type: string?
  inputBinding:
    prefix: --profile-db
- id: in_contigs_db
  doc: "Anvi'o contigs database generated by 'anvi-gen-\ncontigs'"
  type: string?
  inputBinding:
    prefix: --contigs-db
- id: in_collection_name
  doc: Collection name.
  type: string?
  inputBinding:
    prefix: --collection-name
- id: in_bin_id
  doc: Bin name you are interested in.
  type: string?
  inputBinding:
    prefix: --bin-id
- id: in_bin_ids_file
  doc: "Text file for bins (each line should be a unique bin\nid)."
  type: File?
  inputBinding:
    prefix: --bin-ids-file
- id: in_find_from_split_name
  doc: "If you don't know the bin name you want to work with\nbut if you know the\
    \ split name it contains you can use\nthis parameter to tell anvi'o the split\
    \ name, and so\nit can find the bin for you automatically. This is\nsomething\
    \ extremely difficult for anvi'o to do, but it\ndoes it anyway because you."
  type: string?
  inputBinding:
    prefix: --find-from-split-name
- id: in_tree
  doc: NEWICK formatted tree structure
  type: string?
  inputBinding:
    prefix: --tree
- id: in_skip_hierarchical_clustering
  doc: "Skip hierarchical clustering for the splits in the\nrefined bin, if you skip\
    \ clustering you need to\nprovide your own newick formatted tree using --tree\n\
    parameter."
  type: boolean?
  inputBinding:
    prefix: --skip-hierarchical-clustering
- id: in_load_full_state
  doc: "Often the minimum and maximum values defined for the\nan entire profile database\
    \ that contains all contigs\ndo not scale well when you wish to work with a single\n\
    bin in the refine mode. For this reason, the default\nbehavior of anvi-refine\
    \ is to ignore min/max values\nset in the default state. This flag is your way\
    \ of\ntelling anvi'o to not do that, and load the state\nstored in the profile\
    \ database as is."
  type: boolean?
  inputBinding:
    prefix: --load-full-state
- id: in_additional_view
  doc: "A TAB-delimited file for an additional view to be used\nin the interface.\
    \ This file should contain all split\nnames, and values for each of them in all\
    \ samples.\nEach column in this file must correspond to a sample\nname. Content\
    \ of this file will be called 'user_view',\nwhich will be available as a new item\
    \ in the 'views'\ncombo box in the interface"
  type: File?
  inputBinding:
    prefix: --additional-view
- id: in_additional_layers
  doc: "A TAB-delimited file for additional layers for splits.\nThe first column of\
    \ this file must be split names, and\nthe remaining columns should be unique attributes.\
    \ The\nfile does not need to contain all split names, or\nvalues for each split\
    \ in every column. Anvi'o will try\nto deal with missing data nicely. Each column\
    \ in this\nfile will be visualized as a new layer in the tree."
  type: File?
  inputBinding:
    prefix: --additional-layers
- id: in_taxonomic_level
  doc: "The taxonomic level to use whenever relevant and/or\navailable. The default\
    \ taxonomic level is t_genus, but\nif you choose something specific, anvi'o will\
    \ focus on\nthat whenever possible."
  type: string?
  inputBinding:
    prefix: --taxonomic-level
- id: in_hide_outlier_sn_vs
  doc: "During profiling, anvi'o marks positions of single-\nnucleotide variations\
    \ (SNVs) that originate from\nplaces in contigs where coverage values are a bit\n\
    'sketchy'. If you would like to avoid SNVs in those\npositions of splits in applicable\
    \ projects you can use\nthis flag, and the interface would hide SNVs that are\n\
    marked as 'outlier' (although it is clearly the best\nto see everything, no one\
    \ will judge you if you end up\nusing this flag) (plus, there may or may not be\
    \ some\nhistorical data on this here:\nhttps://github.com/meren/anvio/issues/309)."
  type: boolean?
  inputBinding:
    prefix: --hide-outlier-SNVs
- id: in_title
  doc: "Title for the interface. If you are working with a\nRUNINFO dict, the title\
    \ will be determined based on\ninformation stored in that file. Regardless, you\
    \ can\noverride that value using this parameter."
  type: File?
  inputBinding:
    prefix: --title
- id: in_export_svg
  doc: The SVG output file path.
  type: File?
  inputBinding:
    prefix: --export-svg
- id: in_dry_run
  doc: "Don't do anything real. Test everything, and stop\nright before wherever the\
    \ developer said 'well, this\nis enough testing', and decided to print out results."
  type: boolean?
  inputBinding:
    prefix: --dry-run
- id: in_skip_in_it_functions
  doc: "When declared, function calls for genes will not be\ninitialized (therefore\
    \ will be missing from all\nrelevant interfaces or output files). The use of this\n\
    flag may reduce the memory fingerprint and processing\ntime for large datasets."
  type: boolean?
  inputBinding:
    prefix: --skip-init-functions
- id: in_skip_auto_ordering
  doc: "When declared, the attempt to include automatically\ngenerated orders of items\
    \ based on additional data is\nskipped. In case those buggers cause issues with\
    \ your\ndata, and you still want to see your stuff and deal\nwith the other issue\
    \ maybe later."
  type: boolean?
  inputBinding:
    prefix: --skip-auto-ordering
- id: in_ip_address
  doc: "IP address for the HTTP server. The default ip address\n(0.0.0.0) should work\
    \ just fine for most."
  type: double?
  inputBinding:
    prefix: --ip-address
- id: in_port_number
  doc: "Port number to use for anvi'o services. If nothing is\ndeclared, anvi'o will\
    \ try to find a suitable port\nnumber, starting from the default port number,\
    \ 8080."
  type: long?
  inputBinding:
    prefix: --port-number
- id: in_browser_path
  doc: "By default, anvi'o will use your default browser to\nlaunch the interactive\
    \ interface. If you would like to\nuse something else than your system default,\
    \ you can\nprovide a full path for an alternative browser using\nthis parameter,\
    \ and hope for the best. For instance we\nare using this parameter to call Google's\
    \ experimental\nbrowser, Canary, which performs better with demanding\nvisualizations."
  type: File?
  inputBinding:
    prefix: --browser-path
- id: in_read_only
  doc: "When the interactive interface is started with this\nflag, all 'database write'\
    \ operations will be\ndisabled."
  type: boolean?
  inputBinding:
    prefix: --read-only
- id: in_server_only
  doc: "The default behavior is to start the local server, and\nfire up a browser\
    \ that connects to the server. If you\nhave other plans, and want to start the\
    \ server without\ncalling the browser, this is the flag you need."
  type: boolean?
  inputBinding:
    prefix: --server-only
- id: in_password_protected
  doc: "If this flag is set, command line tool will ask you to\nenter a password and\
    \ interactive interface will be\nonly accessible after entering same password.\
    \ This\noption is recommended for shared machines like\nclusters or shared networks\
    \ where computers are not\nisolated.\n"
  type: boolean?
  inputBinding:
    prefix: --password-protected
- id: in_interface_dot
  doc: "--split-hmm-layers    When declared, this flag tells the interface to split\n\
    every gene found in HMM searches that were performed\nagainst non-singlecopy gene\
    \ HMM profiles into their\nown layer. Please see the documentation for details."
  type: string
  inputBinding:
    position: 0
outputs:
- id: out_stdout
  doc: Standard output stream
  type: stdout
- id: out_export_svg
  doc: The SVG output file path.
  type: File?
  outputBinding:
    glob: $(inputs.in_export_svg)
hints: []
cwlVersion: v1.1
baseCommand:
- anvi-refine
