from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, File, String, Boolean, Float

Wtpoa_Cns_V0_1_0 = CommandToolBuilder(tool="wtpoa_cns", base_command=["wtpoa-cns"], inputs=[ToolInput(tag="in_number_of_threads", input_type=Int(optional=True), prefix="-t", doc=InputDocumentation(doc="Number of threads, [4]")), ToolInput(tag="in_input_files_wtdbg", input_type=File(optional=True), prefix="-i", doc=InputDocumentation(doc="Input file(s) *.ctg.lay from wtdbg, +, [STDIN]")), ToolInput(tag="in_output_files", input_type=String(optional=True), prefix="-o", doc=InputDocumentation(doc="Output files, [STDOUT]")), ToolInput(tag="in_force_overwrite", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc="Force overwrite")), ToolInput(tag="in_expected_max_length", input_type=Int(optional=True), prefix="-j", doc=InputDocumentation(doc="Expected max length of node, or say the overlap length of two adjacent units in layout file, [1500] bp")), ToolInput(tag="in_match_score", input_type=Int(optional=True), prefix="-M", doc=InputDocumentation(doc="Match score, [2]")), ToolInput(tag="in_mismatch_score", input_type=Int(optional=True), prefix="-X", doc=InputDocumentation(doc="Mismatch score, [-5]")), ToolInput(tag="in_insertion_score", input_type=Int(optional=True), prefix="-I", doc=InputDocumentation(doc="Insertion score, [-2]")), ToolInput(tag="in_deletion_score", input_type=Int(optional=True), prefix="-D", doc=InputDocumentation(doc="Deletion score, [-4]")), ToolInput(tag="in_window_size_is", input_type=Int(optional=True), prefix="-W", doc=InputDocumentation(doc="Window size in the middle of the first read for fast align remaining reads, [200]\nIf $W is negative, will disable fast align, but use the abs($W) as Band align score cutoff")), ToolInput(tag="in_min_size_aligned", input_type=Int(optional=True), prefix="-w", doc=InputDocumentation(doc="Min size of aligned size in window, [$W * 0.5]")), ToolInput(tag="in_abort_tripoa_when", input_type=Boolean(optional=True), prefix="-A", doc=InputDocumentation(doc="Abort TriPOA when any read cannot be fast aligned, then try POA")), ToolInput(tag="in_realignment_bandwidth_disable", input_type=Int(optional=True), prefix="-R", doc=InputDocumentation(doc="Realignment bandwidth, 0: disable, [16]")), ToolInput(tag="in_min_count_call", input_type=Int(optional=True), prefix="-C", doc=InputDocumentation(doc="Min count of bases to call a consensus base, [3]")), ToolInput(tag="in_min_frequency_nongap", input_type=Float(optional=True), prefix="-F", doc=InputDocumentation(doc="Min frequency of non-gap bases to call a consensus base, [0.5]")), ToolInput(tag="in_max_number_going", input_type=Int(optional=True), prefix="-N", doc=InputDocumentation(doc="Max number of reads in PO-MSA, [20]\nKeep in mind that I am not going to generate high accurate consensus sequences here")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="Verbose"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Wtpoa_Cns_V0_1_0().translate("wdl", allow_empty_container=True)

