from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Directory, File, Int, String, Boolean

Tgene_V0_1_0 = CommandToolBuilder(tool="tgene", base_command=["tgene"], inputs=[ToolInput(tag="in_o", input_type=Directory(optional=True), prefix="--o", doc=InputDocumentation(doc="output to the specified directory; default: tgene_out")), ToolInput(tag="in_oc", input_type=Directory(optional=True), prefix="--oc", doc=InputDocumentation(doc="output to the specified directory; default: tgene_out")), ToolInput(tag="in_transcript_types", input_type=File(optional=True), prefix="--transcript-types", doc=InputDocumentation(doc="comma-separated list of types of transcript to use from annotation file;\ndefault: protein_coding,processed_transcript")), ToolInput(tag="in_max_link_distances", input_type=Int(optional=True), prefix="--max-link-distances", doc=InputDocumentation(doc="comma-separated list (no spaces) of maximum distances\nbetween an RE and its target; default: 500000\nNote: only one allowed if no histone/expression data given\nNote: there must be one distance for each histone name in <histones>")), ToolInput(tag="in_max_p_value", input_type=Int(optional=True), prefix="--max-pvalue", doc=InputDocumentation(doc="maximum p-value for including non-CT, non-CL links in output;\ndefault: 0.05")), ToolInput(tag="in_tissues", input_type=String(optional=True), prefix="--tissues", doc=InputDocumentation(doc="comma-separated list (no spaces) of tissue names that are the\nsources of the histone and expression data; default: None")), ToolInput(tag="in_histone_root", input_type=Directory(optional=True), prefix="--histone-root", doc=InputDocumentation(doc="histone root directory; default: None\nNote: histone files must be in subfolders '<hrd>/<t>'\nwhere <t> is one of the tissue names in <tissues>")), ToolInput(tag="in_histones", input_type=File(optional=True), prefix="--histones", doc=InputDocumentation(doc="comma-separated list (no spaces) of histone names; default: None\nNote: histone file names must match '<hrd>/<t>/*<hname>*[broad|narrow]Peak'\nwhere <t> is one of the tissue names in <tissues>\nand <hname> is one of the histone names listed in <histones>")), ToolInput(tag="in_rna_source", input_type=Boolean(optional=True), prefix="--rna-source", doc=InputDocumentation(doc="[Cage|LongPap]    type of expression data in expression files; default: None")), ToolInput(tag="in_expression_root", input_type=Directory(optional=True), prefix="--expression-root", doc=InputDocumentation(doc="expression root directory; default: None\nNote: expression files must be in subfolders '<erd>/<t>'\nwhere <t> is one of the tissue names in <tissues>, and have\nextension '.gtf'")), ToolInput(tag="in_use_gene_ids", input_type=Boolean(optional=True), prefix="--use-gene-ids", doc=InputDocumentation(doc="use the 'gene_id' field rather than 'transcript_id' field\nto associate expression file and annotation file entries;\ndefault: use 'transcript_id' field")), ToolInput(tag="in_lec_at", input_type=Int(optional=True), prefix="--lecat", doc=InputDocumentation(doc="scale correlation if maximum expression of transcript < <lecat>;\ndefault: 0")), ToolInput(tag="in_no_closest_locus", input_type=Boolean(optional=True), prefix="--no-closest-locus", doc=InputDocumentation(doc="don't include closest locus for all targets\nunless constraints are satisfied")), ToolInput(tag="in_no_closest_tss", input_type=Boolean(optional=True), prefix="--no-closest-tss", doc=InputDocumentation(doc="don't include closest TSS (target transcript) for all loci\nunless constraints are satisfied")), ToolInput(tag="in_no_noise", input_type=Boolean(optional=True), prefix="--no-noise", doc=InputDocumentation(doc="do not add noise to expression and histone zeros")), ToolInput(tag="in_seed", input_type=Int(optional=True), prefix="--seed", doc=InputDocumentation(doc="seed for random number generator for noise and null model\ndefault: 0")), ToolInput(tag="in_desc", input_type=String(optional=True), prefix="--desc", doc=InputDocumentation(doc="plain text description of the job")), ToolInput(tag="in_f_desc", input_type=File(optional=True), prefix="--fdesc", doc=InputDocumentation(doc="file containing plain text description of the job")), ToolInput(tag="in_verbosity", input_type=Int(optional=True), prefix="--verbosity", doc=InputDocumentation(doc="|2|3|4|5          level of information messages output to terminal")), ToolInput(tag="in_locus_file", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_annotation_file", input_type=String(), position=1, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_o", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_o", type_hint=File()), doc=OutputDocumentation(doc="output to the specified directory; default: tgene_out")), ToolOutput(tag="out_oc", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_oc", type_hint=File()), doc=OutputDocumentation(doc="output to the specified directory; default: tgene_out"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Tgene_V0_1_0().translate("wdl", allow_empty_container=True)

