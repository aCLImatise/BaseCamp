&id003 !Command
positional:
- !Positional
  description: Prints this usage information
  position: 0
  name: help
  optional: false
named:
- !Flag
  description: '--account switch in slurm. '
  synonyms:
  - --account
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: afterok switch in slurm. --afterok 123,134 will tell slurm to start
    this job after 123,134 have exited successfully [Multiple; Split by ","]
  synonyms:
  - --afterok
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: --cpus-per-task switch in slurm [Default:"4"; Integer]
  synonyms:
  - --cpus_per_task
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Slurm partition to submit jobs to.
  synonyms:
  - --partition
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Use this if you wish to run each job run one after another, with each
    job starting only after the previous has completed successfully [Flag]
  synonyms:
  - --serial
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Specify a job name, each job will be appended with its batch order
    [Default:"hpcjob_001"]
  synonyms:
  - --jobname
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Commands to run on each node. If you have a low number of jobs you
    can submit at a time you want this number much higher.  [Default:"1"; Integer]
  synonyms:
  - --commands_per_node
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: --ntasks switch in slurm. This is equal to the number of concurrent
    tasks on each node * the number of nodes, not the total number of tasks [ Default:"1";
    Integer]
  synonyms:
  - --ntasks
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Supply a memory limit [Default:"10GB"]
  synonyms:
  - --mem
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Number of nodes requested. You should only use this if submitting parallel
    jobs. [Default:"1"; Integer ]
  synonyms:
  - --nodes_count
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Do a dry run - do not submit to the scheduler. [ Flag]
  synonyms:
  - --dry_run
  - --dr
  args: !EmptyFlagArg {}
  optional: true
command:
- hpcrunner.pl
- submit_jobs
parent: &id001 !Command
  positional: []
  named:
  - !Flag
    description: Options for application plugins [Key-Value]
    synonyms:
    - --plugins_opts
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Load aplication plugins [Multiple; Split by ","]
    synonyms:
    - --plugins
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Basename of config files [Default:".hpcrunner"]
    synonyms:
    - --config_base
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: --no_configs tells HPC::Runner not to load any configs [Flag]
    synonyms:
    - --no_configs
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Override the search paths and supply your own config.
    synonyms:
    - --config
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Enable a search path for configs. Default is the home dir and your
      cwd. [Multiple]
    synonyms:
    - --search_path
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Search for config files in ~/.config.(ext) and in your current working
      directory. [Flag]
    synonyms:
    - --search
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: 'Give your jobnames an additional project name. #HPC jobname=gzip
      will be submitted as 001_project_gzip'
    synonyms:
    - --project
    - --pr
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Opt out of writing the tar archive of JSON stats. This may be desirable
      for especially large workflows. [Flag]
    synonyms:
    - --no_log_json
    args: !EmptyFlagArg {}
    optional: true
  command:
  - hpcrunner.pl
  parent:
  subcommands:
  - !Command
    positional:
    - !Positional
      description: Prints this usage information
      position: 0
      name: help
      optional: false
    named: []
    command:
    - hpcrunner.pl
    - archive
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: -?  Prints this usage information. [Flag]
      synonyms:
      - --help
      - -h
      - --usage
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage:\n    hpcrunner.pl archive [long options...]\n    hpcrunner.pl\
      \ help\n    hpcrunner.pl archive --help\n\ndescription:\n    Create an archive\
      \ of results. Default is to add all files in your current\n    working directory.Include\
      \ or exclude with --include_paths and --exclude_\n    paths. This requires tar\
      \ to be installed\n\noptions:\n    --include_paths --ip  Include files or directories\
      \ [Multiple]\n    --exclude_paths --ep  Files or directories to exclude [Multiple]\n\
      \    --archive             \n    --help -h --usage -?  Prints this usage information.\
      \ [Flag]\n\navailable subcommands:\n    help  Prints this usage information\n\
      \n"
    generated_using: &id002
    - --help
  - !Command
    positional:
    - !Positional
      description: Prints this usage information
      position: 0
      name: help
      optional: false
    named:
    - !Flag
      description: '[Default:"000_hpcrunner_logs"]'
      synonyms:
      - --logname
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Directory where logfiles are written. Defaults to current_working_directory/prunner_current_date_time
        /log1 .. log2 .. log3
      synonyms:
      - --logdir
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Show the process ID per logging message. This is useful when aggregating
        logs. [Flag]
      synonyms:
      - --show_processid
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Meta str passed from HPC::Runner::Command:: Scheduler'
      synonyms:
      - --metastr
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Annotate with tags. [Multiple; Split by ","]
      synonyms:
      - --tags
      - -t
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Always commit files. [Flag]
      synonyms:
      - --autocommit
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Message to use for git commit [Default:"hpcrunner commit"]
      synonyms:
      - --message
      - -m
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Run a job from a single node or workstation. [Flag]
      synonyms:
      - --single_node
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Options for job_plugins [Key-Value]
      synonyms:
      - --job_plugins_opts
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '[Default:"1"; Number]'
      synonyms:
      - --commands
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Load job execution plugins [Multiple; Split by ","]
      synonyms:
      - --job_plugins
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Specify a job name, each job will be appended with its batch order
      synonyms:
      - --jobname
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Counter to tell execute_array where to start reading in the infile
        [Required; Number]
      synonyms:
      - --batch_index_start
      args: !EmptyFlagArg {}
      optional: true
    command:
    - hpcrunner.pl
    - execute_array
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: -?  Prints this usage information. [Flag]
      synonyms:
      - --help
      - -h
      - --usage
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag: !Flag
      description: Submission version. Each version has a corresponding git tag. See
        the difference between tags with `git diff tag1 tag2`. Tags are always version
        numbers, starting with 0.01.
      synonyms:
      - --version
      args: !EmptyFlagArg {}
      optional: true
    help_text: "usage:\n    hpcrunner.pl execute_array [long options...]\n    hpcrunner.pl\
      \ help\n    hpcrunner.pl execute_array --help\n\ndescription:\n    Take the\
      \ parsed files from hpcrunner.pl submit_jobs and executes the code\n\noptions:\n\
      \    --plugins             Load aplication plugins [Multiple; Split by \",\"\
      ]\n    --plugins_opts        Options for application plugins [Key-Value]\n \
      \   --config_base         Basename of config files [Default:\".hpcrunner\"]\n\
      \    --no_configs          --no_configs tells HPC::Runner not to load any\n\
      \                          configs [Flag]\n    --config              Override\
      \ the search paths and supply your own\n                          config.\n\
      \    --search_path         Enable a search path for configs. Default is the\n\
      \                          home dir and your cwd. [Multiple]\n    --search \
      \             Search for config files in ~/.config.(ext) and in\n          \
      \                your current working directory. [Flag]\n    --project --pr\
      \        Give your jobnames an additional project name. #HPC\n             \
      \             jobname=gzip will be submitted as 001_project_gzip\n    --no_log_json\
      \         Opt out of writing the tar archive of JSON stats.\n              \
      \            This may be desirable for especially large\n                  \
      \        workflows. [Flag]\n    --data_dir            Data directory for hpcrunner\n\
      \    --outdir              Directory to write out files.\n    --poll_time --pt\
      \      Time in seconds to poll the process for memory\n                    \
      \      profiling. [Default:\"5\"; Number]\n    --memory_diff --md    Difference\
      \ from last memory profile in order to\n                          record. [Default:\"\
      0.1\"; Number]\n    --procs               Total number of concurrently running\
      \ jobs allowed\n                          at any time. [Default:\"1\"; Integer]\n\
      \    --infile -i           File of commands separated by newline. The command\n\
      \                          'wait' indicates all previous commands should\n \
      \                         finish before starting the next one. [Required]\n\
      \    --basedir             Base directory to write out files.\n    --process_table\
      \       \n    --logname             [Default:\"000_hpcrunner_logs\"]\n    --logdir\
      \              Directory where logfiles are written. Defaults to\n         \
      \                 current_working_directory/prunner_current_date_time\n    \
      \                      /log1 .. log2 .. log3\n    --show_processid      Show\
      \ the process ID per logging message. This is\n                          useful\
      \ when aggregating logs. [Flag]\n    --metastr             Meta str passed from\
      \ HPC::Runner::Command::\n                          Scheduler\n    --version\
      \             Submission version. Each version has a\n                     \
      \     corresponding git tag. See the difference between\n                  \
      \        tags with `git diff tag1 tag2`. Tags are always\n                 \
      \         version numbers, starting with 0.01.\n    --tags -t             Annotate\
      \ with tags. [Multiple; Split by \",\"]\n    --autocommit          Always commit\
      \ files. [Flag]\n    --message -m          Message to use for git commit [Default:\"\
      hpcrunner\n                          commit\"]\n    --single_node         Run\
      \ a job from a single node or workstation. [Flag]\n    --job_plugins_opts  \
      \  Options for job_plugins [Key-Value]\n    --commands            [Default:\"\
      1\"; Number]\n    --job_plugins         Load job execution plugins [Multiple;\
      \ Split by \",\"]\n    --jobname             Specify a job name, each job will\
      \ be appended with\n                          its batch order\n    --batch_index_start\
      \   Counter to tell execute_array where to start\n                         \
      \ reading in the infile [Required; Number]\n    --help -h --usage -?  Prints\
      \ this usage information. [Flag]\n\navailable subcommands:\n    help  Prints\
      \ this usage information\n\n"
    generated_using: *id002
  - !Command
    positional:
    - !Positional
      description: Prints this usage information
      position: 0
      name: help
      optional: false
    named:
    - !Flag
      description: 'Meta str passed from HPC::Runner::Command:: Scheduler'
      synonyms:
      - --metastr
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Show the process ID per logging message. This is useful when aggregating
        logs. [Flag]
      synonyms:
      - --show_processid
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '[Default:"000_hpcrunner_logs"]'
      synonyms:
      - --logname
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Annotate with tags. [Multiple; Split by ","]
      synonyms:
      - --tags
      - -t
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Message to use for git commit [Default:"hpcrunner commit"]
      synonyms:
      - --message
      - -m
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Always commit files. [Flag]
      synonyms:
      - --autocommit
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Run a job from a single node or workstation. [Flag]
      synonyms:
      - --single_node
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Load job execution plugins [Multiple; Split by ","]
      synonyms:
      - --job_plugins
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Specify a job name, each job will be appended with its batch order
      synonyms:
      - --jobname
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '[Default:"1"; Number]'
      synonyms:
      - --commands
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Options for job_plugins [Key-Value]
      synonyms:
      - --job_plugins_opts
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Counter to tell execute_array where to start reading in the infile.
        Omit this option in order to run in single node. [Number]
      synonyms:
      - --batch_index_start
      args: !EmptyFlagArg {}
      optional: true
    command:
    - hpcrunner.pl
    - execute_job
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: -?  Prints this usage information. [Flag]
      synonyms:
      - --help
      - -h
      - --usage
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag: !Flag
      description: Submission version. Each version has a corresponding git tag. See
        the difference between tags with `git diff tag1 tag2`. Tags are always version
        numbers, starting with 0.01.
      synonyms:
      - --version
      args: !EmptyFlagArg {}
      optional: true
    help_text: "usage:\n    hpcrunner.pl execute_job [long options...]\n    hpcrunner.pl\
      \ help\n    hpcrunner.pl execute_job --help\n\ndescription:\n    Take the parsed\
      \ files from hpcrunner.pl submit_jobs and executes the code\n\noptions:\n  \
      \  --plugins             Load aplication plugins [Multiple; Split by \",\"]\n\
      \    --plugins_opts        Options for application plugins [Key-Value]\n   \
      \ --search              Search for config files in ~/.config.(ext) and in\n\
      \                          your current working directory. [Flag]\n    --config\
      \              Override the search paths and supply your own\n             \
      \             config.\n    --search_path         Enable a search path for configs.\
      \ Default is the\n                          home dir and your cwd. [Multiple]\n\
      \    --config_base         Basename of config files [Default:\".hpcrunner\"\
      ]\n    --no_configs          --no_configs tells HPC::Runner not to load any\n\
      \                          configs [Flag]\n    --project --pr        Give your\
      \ jobnames an additional project name. #HPC\n                          jobname=gzip\
      \ will be submitted as 001_project_gzip\n    --no_log_json         Opt out of\
      \ writing the tar archive of JSON stats.\n                          This may\
      \ be desirable for especially large\n                          workflows. [Flag]\n\
      \    --data_dir            Data directory for hpcrunner\n    --outdir      \
      \        Directory to write out files.\n    --procs               Total number\
      \ of concurrently running jobs allowed\n                          at any time.\
      \ [Default:\"1\"; Integer]\n    --basedir             Base directory to write\
      \ out files.\n    --memory_diff --md    Difference from last memory profile\
      \ in order to\n                          record. [Default:\"0.1\"; Number]\n\
      \    --infile -i           File of commands separated by newline. The command\n\
      \                          'wait' indicates all previous commands should\n \
      \                         finish before starting the next one. [Required]\n\
      \    --poll_time --pt      Time in seconds to poll the process for memory\n\
      \                          profiling. [Default:\"5\"; Number]\n    --logdir\
      \              Directory where logfiles are written. Defaults to\n         \
      \                 current_working_directory/prunner_current_date_time\n    \
      \                      /log1 .. log2 .. log3\n    --process_table       \n \
      \   --metastr             Meta str passed from HPC::Runner::Command::\n    \
      \                      Scheduler\n    --show_processid      Show the process\
      \ ID per logging message. This is\n                          useful when aggregating\
      \ logs. [Flag]\n    --logname             [Default:\"000_hpcrunner_logs\"]\n\
      \    --tags -t             Annotate with tags. [Multiple; Split by \",\"]\n\
      \    --message -m          Message to use for git commit [Default:\"hpcrunner\n\
      \                          commit\"]\n    --version             Submission version.\
      \ Each version has a\n                          corresponding git tag. See the\
      \ difference between\n                          tags with `git diff tag1 tag2`.\
      \ Tags are always\n                          version numbers, starting with\
      \ 0.01.\n    --autocommit          Always commit files. [Flag]\n    --single_node\
      \         Run a job from a single node or workstation. [Flag]\n    --job_plugins\
      \         Load job execution plugins [Multiple; Split by \",\"]\n    --jobname\
      \             Specify a job name, each job will be appended with\n         \
      \                 its batch order\n    --commands            [Default:\"1\"\
      ; Number]\n    --job_plugins_opts    Options for job_plugins [Key-Value]\n \
      \   --batch_index_start   Counter to tell execute_array where to start\n   \
      \                       reading in the infile. Omit this option in order to\n\
      \                          run in single node. [Number]\n    --help -h --usage\
      \ -?  Prints this usage information. [Flag]\n\navailable subcommands:\n    help\
      \  Prints this usage information\n\n"
    generated_using: &id004
    - -h
  - !Command
    positional:
    - !Positional
      description: Prints this usage information
      position: 0
      name: help
      optional: false
    named:
    - !Flag
      description: Directory where logfiles are written. Defaults to current_working_directory/prunner_current_date_time
        /log1 .. log2 .. log3
      synonyms:
      - --logdir
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Always commit files. [Flag]
      synonyms:
      - --autocommit
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Message to use for git commit [Default:"hpcrunner commit"]
      synonyms:
      - --message
      - -m
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Annotate with tags. [Multiple; Split by ","]
      synonyms:
      - --tags
      - -t
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Options for job_plugins [Key-Value]
      synonyms:
      - --job_plugins_opts
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '[Default:"1"; Number]'
      synonyms:
      - --commands
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Load job execution plugins [Multiple; Split by ","]
      synonyms:
      - --job_plugins
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Specify a job name, each job will be appended with its batch order
      synonyms:
      - --jobname
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Run a job from a single node or workstation. [Flag]
      synonyms:
      - --single_node
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Counter to tell execute_array where to start reading in the infile.
        Omit this option in order to run in single node. [Number]
      synonyms:
      - --batch_index_start
      args: !EmptyFlagArg {}
      optional: true
    command:
    - hpcrunner.pl
    - single_node
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: -?  Prints this usage information. [Flag]
      synonyms:
      - --help
      - -h
      - --usage
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag: !Flag
      description: Submission version. Each version has a corresponding git tag. See
        the difference between tags with `git diff tag1 tag2`. Tags are always version
        numbers, starting with 0.01.
      synonyms:
      - --version
      args: !EmptyFlagArg {}
      optional: true
    help_text: "usage:\n    hpcrunner.pl single_node [long options...]\n    hpcrunner.pl\
      \ help\n    hpcrunner.pl single_node --help\n\ndescription:\n    Take the parsed\
      \ files from hpcrunner.pl submit_jobs and executes the code\n\noptions:\n  \
      \  --plugins_opts        Options for application plugins [Key-Value]\n    --plugins\
      \             Load aplication plugins [Multiple; Split by \",\"]\n    --config\
      \              Override the search paths and supply your own\n             \
      \             config.\n    --search              Search for config files in\
      \ ~/.config.(ext) and in\n                          your current working directory.\
      \ [Flag]\n    --config_base         Basename of config files [Default:\".hpcrunner\"\
      ]\n    --no_configs          --no_configs tells HPC::Runner not to load any\n\
      \                          configs [Flag]\n    --search_path         Enable\
      \ a search path for configs. Default is the\n                          home\
      \ dir and your cwd. [Multiple]\n    --project --pr        Give your jobnames\
      \ an additional project name. #HPC\n                          jobname=gzip will\
      \ be submitted as 001_project_gzip\n    --no_log_json         Opt out of writing\
      \ the tar archive of JSON stats.\n                          This may be desirable\
      \ for especially large\n                          workflows. [Flag]\n    --data_dir\
      \            Data directory for hpcrunner\n    --outdir              Directory\
      \ to write out files.\n    --memory_diff --md    Difference from last memory\
      \ profile in order to\n                          record. [Default:\"0.1\"; Number]\n\
      \    --basedir             Base directory to write out files.\n    --infile\
      \ -i           File of commands separated by newline. The command\n        \
      \                  'wait' indicates all previous commands should\n         \
      \                 finish before starting the next one. [Required]\n    --poll_time\
      \ --pt      Time in seconds to poll the process for memory\n               \
      \           profiling. [Default:\"5\"; Number]\n    --procs               Total\
      \ number of concurrently running jobs allowed\n                          at\
      \ any time. [Default:\"1\"; Integer]\n    --logname             [Default:\"\
      000_hpcrunner_logs\"]\n    --show_processid      Show the process ID per logging\
      \ message. This is\n                          useful when aggregating logs.\
      \ [Flag]\n    --metastr             Meta str passed from HPC::Runner::Command::\n\
      \                          Scheduler\n    --process_table       \n    --logdir\
      \              Directory where logfiles are written. Defaults to\n         \
      \                 current_working_directory/prunner_current_date_time\n    \
      \                      /log1 .. log2 .. log3\n    --version             Submission\
      \ version. Each version has a\n                          corresponding git tag.\
      \ See the difference between\n                          tags with `git diff\
      \ tag1 tag2`. Tags are always\n                          version numbers, starting\
      \ with 0.01.\n    --autocommit          Always commit files. [Flag]\n    --message\
      \ -m          Message to use for git commit [Default:\"hpcrunner\n         \
      \                 commit\"]\n    --tags -t             Annotate with tags. [Multiple;\
      \ Split by \",\"]\n    --job_plugins_opts    Options for job_plugins [Key-Value]\n\
      \    --commands            [Default:\"1\"; Number]\n    --job_plugins      \
      \   Load job execution plugins [Multiple; Split by \",\"]\n    --jobname   \
      \          Specify a job name, each job will be appended with\n            \
      \              its batch order\n    --single_node         Run a job from a single\
      \ node or workstation. [Flag]\n    --batch_index_start   Counter to tell execute_array\
      \ where to start\n                          reading in the infile. Omit this\
      \ option in order to\n                          run in single node. [Number]\n\
      \    --help -h --usage -?  Prints this usage information. [Flag]\n\navailable\
      \ subcommands:\n    help  Prints this usage information\n\n"
    generated_using: *id002
  - *id003
  help_flag: !Flag
    description: -?  Prints this usage information. [Flag]
    synonyms:
    - --help
    - -h
    - --usage
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage:\n    To create a new project\n    \n        hpcrunner.pl new\
    \ MyNewProject\n    \n    To submit jobs to a cluster\n    \n        hpcrunner.pl\
    \ submit_jobs --infile my_submission.sh\n    \n    To run jobs on an interactive\
    \ queue or workstation\n    \n        hpcrunner.pl single_node --infile my_submission.sh\n\
    \ndescription:\n    HPC::Runner::Command is a set of libraries for scaffolding\
    \ data analysis\n    projects, submitting and executing jobs on an HPC cluster\
    \ or workstation,\n    and obsessively logging results.\n    \n    Get help by\
    \ heading on over to github and raising an issue. GitHub | https\n    ://github.com/biosails/HPC-Runner-Command/issues.\n\
    \    \n    Please see the complete documentation at HPC::Runner::Command GitBooks\
    \ |\n    https://biosails.gitbooks.io/hpc-runner-command-docs/content/.\n\nglobal\
    \ options:\n    --plugins_opts        Options for application plugins [Key-Value]\n\
    \    --plugins             Load aplication plugins [Multiple; Split by \",\"]\n\
    \    --config_base         Basename of config files [Default:\".hpcrunner\"]\n\
    \    --no_configs          --no_configs tells HPC::Runner not to load any\n  \
    \                        configs [Flag]\n    --config              Override the\
    \ search paths and supply your own\n                          config.\n    --search_path\
    \         Enable a search path for configs. Default is the\n                 \
    \         home dir and your cwd. [Multiple]\n    --search              Search\
    \ for config files in ~/.config.(ext) and in\n                          your current\
    \ working directory. [Flag]\n    --project --pr        Give your jobnames an additional\
    \ project name. #HPC\n                          jobname=gzip will be submitted\
    \ as 001_project_gzip\n    --no_log_json         Opt out of writing the tar archive\
    \ of JSON stats.\n                          This may be desirable for especially\
    \ large\n                          workflows. [Flag]\n    --help -h --usage -?\
    \  Prints this usage information. [Flag]\n\navailable commands:\n    archive \
    \       Create an archive of results.\n    execute_array  Execute commands\n \
    \   execute_job    Execute commands\n    new            Create a new project\n\
    \    single_node    Execute commands\n    stats          Query submissions by\
    \ project, or jobname\n    submit_jobs    Submit jobs to the HPC system\n    help\
    \           Prints this usage information\n\n"
  generated_using: *id002
subcommands: []
help_flag: !Flag
  description: -?  Prints this usage information. [Flag]
  synonyms:
  - --help
  - -h
  - --usage
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage:\n    hpcrunner.pl submit_jobs [long options...]\n    hpcrunner.pl\
  \ help\n    hpcrunner.pl submit_jobs --help\n\ndescription:\n    This job parses\
  \ your input file and writes out one or\n    more templates to submit to the scheduler\
  \ of your choice (SLURM, PBS, etc)\n\noptions:\n    --plugins             Load aplication\
  \ plugins [Multiple; Split by \",\"]\n    --plugins_opts        Options for application\
  \ plugins [Key-Value]\n    --project --pr        Give your jobnames an additional\
  \ project name. #HPC\n                          jobname=gzip will be submitted as\
  \ 001_project_gzip\n    --no_log_json         Opt out of writing the tar archive\
  \ of JSON stats.\n                          This may be desirable for especially\
  \ large\n                          workflows. [Flag]\n    --hpc_plugins        \
  \ Load hpc_plugins [Multiple; Split by \",\"]\n    --hpc_plugins_opts    Options\
  \ for hpc_plugins [Key-Value]\n    --job_plugins         Load job execution plugins\
  \ [Multiple; Split by \",\"]\n    --job_plugins_opts    Options for job_plugins\
  \ [Key-Value]\n    --data_dir            Data directory for hpcrunner\n    --basedir\
  \             Base directory to write out files.\n    --infile -i           File\
  \ of commands separated by newline. The command\n                          'wait'\
  \ indicates all previous commands should\n                          finish before\
  \ starting the next one. [Required]\n    --poll_time --pt      Time in seconds to\
  \ poll the process for memory\n                          profiling. [Default:\"\
  5\"; Number]\n    --outdir              Directory to write out files.\n    --memory_diff\
  \ --md    Difference from last memory profile in order to\n                    \
  \      record. [Default:\"0.1\"; Number]\n    --procs               Total number\
  \ of concurrently running jobs allowed\n                          at any time. [Default:\"\
  1\"; Integer]\n    --process_table       \n    --metastr             Meta str passed\
  \ from HPC::Runner::Command::\n                          Scheduler\n    --logname\
  \             [Default:\"000_hpcrunner_logs\"]\n    --show_processid      Show the\
  \ process ID per logging message. This is\n                          useful when\
  \ aggregating logs. [Flag]\n    --logdir              Directory where logfiles are\
  \ written. Defaults to\n                          current_working_directory/prunner_current_date_time\n\
  \                          /log1 .. log2 .. log3\n    --version             Submission\
  \ version. Each version has a\n                          corresponding git tag.\
  \ See the difference between\n                          tags with `git diff tag1\
  \ tag2`. Tags are always\n                          version numbers, starting with\
  \ 0.01.\n    --tags -t             Annotate with tags. [Multiple; Split by \",\"\
  ]\n    --message -m          Message to use for git commit [Default:\"hpcrunner\n\
  \                          commit\"]\n    --autocommit          Always commit files.\
  \ [Flag]\n    --config_base         Basename of config files [Default:\".config\"\
  ]\n    --config              Override the search paths and supply your own\n   \
  \                       config.\n    --search              Search for config files\
  \ in ~/.config.(ext) and in\n                          your current working directory.\
  \ [Flag]\n    --no_configs          --no_configs tells HPC::Runner not to load any\n\
  \                          configs [Flag]\n    --search_path         Enable a search\
  \ path for configs. Default is the\n                          home dir and your\
  \ cwd. [Multiple]\n    --walltime            [Default:\"00:20:00\"]\n    --max_array_size\
  \      [Default:\"200\"; Integer]\n    --user                This defaults to your\
  \ current user ID. This can\n                          only be changed if running\
  \ as an admin user\n    --module              List of modules to load ex. R2, samtools,\
  \ etc [\n                          Multiple; Split by \",\"]\n    --ntasks_per_node\
  \     --ntasks-per-node switch in slurm. total concurrent\n                    \
  \      tasks on a node. [Default:\"1\"; Integer]\n    --use_batches         Switch\
  \ to use batches. The default is to use job\n                          arrays. Warning!\
  \ This was the default way of\n                          submitting before 3.0,\
  \ but is not well supported. [\n                          Flag]\n    --conda_env\
  \           Conda env to activate.\n    --custom_command      \n    --account  \
  \           --account switch in slurm. \n    --afterok             afterok switch\
  \ in slurm. --afterok 123,134 will\n                          tell slurm to start\
  \ this job after 123,134 have\n                          exited successfully [Multiple;\
  \ Split by \",\"]\n    --cpus_per_task       --cpus-per-task switch in slurm [Default:\"\
  4\";\n                          Integer]\n    --partition           Slurm partition\
  \ to submit jobs to.\n    --serial              Use this if you wish to run each\
  \ job run one after\n                          another, with each job starting only\
  \ after the\n                          previous has completed successfully [Flag]\n\
  \    --jobname             Specify a job name, each job will be appended with\n\
  \                          its batch order [Default:\"hpcjob_001\"]\n    --commands_per_node\
  \   Commands to run on each node. If you have a low\n                          number\
  \ of jobs you can submit at a time you want\n                          this number\
  \ much higher.  [Default:\"1\"; Integer]\n    --ntasks              --ntasks switch\
  \ in slurm. This is equal to the\n                          number of concurrent\
  \ tasks on each node * the\n                          number of nodes, not the total\
  \ number of tasks [\n                          Default:\"1\"; Integer]\n    --mem\
  \                 Supply a memory limit [Default:\"10GB\"]\n    --nodes_count  \
  \       Number of nodes requested. You should only use this\n                  \
  \        if submitting parallel jobs. [Default:\"1\"; Integer\n                \
  \          ]\n    --dry_run --dr        Do a dry run - do not submit to the scheduler.\
  \ [\n                          Flag]\n    --help -h --usage -?  Prints this usage\
  \ information. [Flag]\n\navailable subcommands:\n    help  Prints this usage information\n\
  \n"
generated_using: *id004
