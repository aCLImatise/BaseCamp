class: CommandLineTool
id: ../../../../home/ubuntu/BiocondaCli/plotPCA.cwl
inputs:
- id: transpose
  doc: Perform the PCA on the transposed matrix, (i.e., on the matrix where rows are
    samples and columns are bins/features. This then matches what is typically done
    in R.
  type: boolean
  inputBinding:
    prefix: --transpose
- id: row_center
  doc: When specified, each row (bin, gene, etc.) in the matrix is centered at 0 before
    the PCA is computed. This is useful only if you have a strong bin/gene/etc. correlation
    and the resulting principal component has samples stacked vertically. This option
    is not applicable if --transpose is specified.
  type: boolean
  inputBinding:
    prefix: --rowCenter
- id: cordata
  doc: Coverage file (generated by multiBamSummary or multiBigwigSummary)
  type: File
  inputBinding:
    prefix: --corData
- id: plot_file
  doc: 'File name to save the plot to. The extension determines the file format. For
    example: pca.pdf will save the PCA plot in PDF format. The available options are:
    .png, .eps, .pdf and .svg. If this option is omitted, then you MUST specify --outFileNameData'
  type: File
  inputBinding:
    prefix: --plotFile
- id: labels
  doc: sample2 [sample1 sample2 ...], -l sample1 sample2 [sample1 sample2 ...] User
    defined labels instead of default labels from file names. Multiple labels have
    to be separated by spaces, e.g. --labels sample1 sample2 sample3
  type: string
  inputBinding:
    prefix: --labels
- id: plot_title
  doc: 'Title of the plot, to be printed on top of the generated image. Leave blank
    for no title. (Default: )'
  type: string
  inputBinding:
    prefix: --plotTitle
- id: plot_file_format
  doc: 'Image format type. If given, this option overrides the image format based
    on the plotFile ending. The available options are: png, eps, pdf, plotly and svg.'
  type: File
  inputBinding:
    prefix: --plotFileFormat
- id: plot_height
  doc: 'Plot height in cm. (Default: 10)'
  type: string
  inputBinding:
    prefix: --plotHeight
- id: plot_width
  doc: 'Plot width in cm. The minimum value is 1 cm. (Default: 10)'
  type: string
  inputBinding:
    prefix: --plotWidth
- id: out_filename_data
  doc: File name to which the data underlying the plot should be saved, such as myPCA.tab.
    For untransposed data, this is the loading per-sample and PC as well as the eigenvalues.
    For transposed data, this is the rotation per-sample and PC and the eigenvalues.
    The projections are truncated to the number of eigenvalues for transposed data.
  type: File
  inputBinding:
    prefix: --outFileNameData
- id: ntop
  doc: 'Use only the top N most variable rows in the original matrix. Specifying 0
    will result in all rows being used. If the matrix is to be transposed, rows with
    0 variance are always excluded, even if a values of 0 is specified. The default
    is 1000. (Default: 1000)'
  type: string
  inputBinding:
    prefix: --ntop
- id: pcs
  doc: 'PCS         The principal components to plot. If specified, you must provide
    two different integers, greater than zero, separated by a space. An example (and
    the default) is "1 2". (Default: [1, 2])'
  type: string
  inputBinding:
    prefix: --PCs
- id: log_two
  doc: log2 transform the datapoints prior to computing the PCA. Note that 0.01 is
    added to all values to prevent 0 values from becoming -infinity. Using this option
    with input that contains negative values will result in an error.
  type: boolean
  inputBinding:
    prefix: --log2
- id: colors
  doc: 'A list of colors for the symbols. Color names and html hex string (e.g., #eeff22)
    are accepted. The color names should be space separated. For example, --colors
    red blue green. If not specified, the symbols will be given automatic colors.'
  type: string[]
  inputBinding:
    prefix: --colors
- id: markers
  doc: A list of markers for the symbols. (e.g., '<','>','o') are accepted. The marker
    values should be space separated. For example, --markers 's' 'o' 's' 'o'. If not
    specified, the symbols will be given automatic shapes.
  type: string[]
  inputBinding:
    prefix: --markers
outputs: []
cwlVersion: v1.1
baseCommand:
- plotPCA
