from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, Directory, File, Float, Array

Koeken_Py_V0_1_0 = CommandToolBuilder(tool="koeken.py", base_command=["koeken.py"], inputs=[ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="Enable debugging")), ToolInput(tag="in_input", input_type=String(optional=True), prefix="--input", doc=InputDocumentation(doc="Location of the OTU Table for main analysis. (Must be\n.biom format)")), ToolInput(tag="in_output", input_type=Directory(optional=True), prefix="--output", doc=InputDocumentation(doc="Location of the folder to place all resulting files.\nIf folder does not exist, the program will create it.")), ToolInput(tag="in_map", input_type=File(optional=True), prefix="--map", doc=InputDocumentation(doc="Location of the mapping file associated with OTU\nTable.")), ToolInput(tag="in_level", input_type=String(optional=True), prefix="--level", doc=InputDocumentation(doc="Level for which to use for summarize_taxa.py. [default\n= 6]")), ToolInput(tag="in_class", input_type=String(optional=True), prefix="--class", doc=InputDocumentation(doc="Location of the OTU Table for main analysis. (Must be\n.biom format)")), ToolInput(tag="in_subclass", input_type=Directory(optional=True), prefix="--subclass", doc=InputDocumentation(doc="Directory to place all the files.")), ToolInput(tag="in_subject", input_type=String(optional=True), prefix="--subject", doc=InputDocumentation(doc="Only change if your Sample-ID column names differs.\n[default] = #SampleID.")), ToolInput(tag="in_pval", input_type=Float(optional=True), prefix="--pval", doc=InputDocumentation(doc="Change alpha value for the Anova test (default 0.05)")), ToolInput(tag="in_effect", input_type=Float(optional=True), prefix="--effect", doc=InputDocumentation(doc="Change the cutoff for logarithmic LDA score (default\n2.0).")), ToolInput(tag="in_strict", input_type=String(optional=True), prefix="--strict", doc=InputDocumentation(doc="Change the strictness of the comparisons. Can be\nchanged to less strict (1). [default = 0](more-\nstrict).")), ToolInput(tag="in_compare", input_type=Array(t=String(), optional=True), prefix="--compare", doc=InputDocumentation(doc="Which groups should be kept to be compared against one\nanother. [default = all factors]")), ToolInput(tag="in_split", input_type=File(optional=True), prefix="--split", doc=InputDocumentation(doc="The name of the timepoint variable in you mapping\nfile. This variable will be used to split the table\nfor each value in this variable.")), ToolInput(tag="in_clade", input_type=Directory(optional=True), prefix="--clade", doc=InputDocumentation(doc="Plot Lefse Cladogram for each output time point.\nOutputs are placed in a new folder created in the\nlefse results location.")), ToolInput(tag="in_image", input_type=String(optional=True), prefix="--image", doc=InputDocumentation(doc="Set the file type for the image create when using\ncladogram setting")), ToolInput(tag="in_dpi", input_type=String(optional=True), prefix="--dpi", doc=InputDocumentation(doc="Set DPI resolution for cladogram")), ToolInput(tag="in_pic_rust", input_type=Boolean(optional=True), prefix="--picrust", doc=InputDocumentation(doc="Run analysis with PICRUSt biom file. Must use the\ncateogirze by function level 3. Next updates will\nreflect the difference levels.\n")), ToolInput(tag="in_v", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_clade", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_clade", type_hint=File()), doc=OutputDocumentation(doc="Plot Lefse Cladogram for each output time point.\nOutputs are placed in a new folder created in the\nlefse results location."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Koeken_Py_V0_1_0().translate("wdl", allow_empty_container=True)

