!Command
positional:
- !Positional
  description: ''
  position: 0
  name: mclpipeline
  optional: false
- !Positional
  description: ''
  position: 1
  name: file-name
  optional: false
named:
- !Flag
  description: shows only what would be done.
  synonyms:
  - --whatif
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: skip the parse step, assume needed files exist already.
  synonyms:
  - --start-assemble
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: start running mcl immediately, as above.
  synonyms:
  - --start-mcl
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: only (re)do the formatting stage, as above.
  synonyms:
  - --start-format
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: create the input file for mcl, then quit.
  synonyms:
  - --prepare-mcl
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: name of parse script
  synonyms:
  - --parser
  args: !SimpleFlagArg
    name: script
  optional: true
- !Flag
  description: tag of options to pass to parse script.
  synonyms:
  - --parser-tag
  args: !SimpleFlagArg
    name: str
  optional: true
- !Flag
  description: str in <add|max|mul|left|right>
  synonyms:
  - --ass-repeat
  args: !SimpleFlagArg
    name: str
  optional: true
- !Flag
  description: map file does not exist or should be ignored.
  synonyms:
  - --ass-nomap
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: <-opt[=val]> add '-opt [val]' to mcxassemble command line.
  synonyms:
  - --ass
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: number of expansion threads.
  synonyms:
  - --mcl-te
  args: !SimpleFlagArg
    name: num
  optional: true
- !Flag
  description: inflation value, MAIN mcl handle.
  synonyms:
  - --mcl-I
  args: !SimpleFlagArg
    name: float
  optional: true
- !Flag
  description: initial inflation value.
  synonyms:
  - --mcl-i
  args: !SimpleFlagArg
    name: float
  optional: true
- !Flag
  description: initial loop length.
  synonyms:
  - --mcl-l
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: pre-inflation value.
  synonyms:
  - --mcl-pi
  args: !SimpleFlagArg
    name: float
  optional: true
- !Flag
  description: center value.
  synonyms:
  - --mcl-c
  args: !SimpleFlagArg
    name: float
  optional: true
- !Flag
  description: i in 1..5, resource allocation level.
  synonyms:
  - --mcl-scheme
  args: !SimpleFlagArg
    name: i
  optional: true
- !Flag
  description: if you *need* to use this, I must be improved.
  synonyms:
  - --mcl-o
  args: !SimpleFlagArg
    name: fname
  optional: true
- !Flag
  description: <-opt[=val]> add '-opt [val]' to mcl command line, e.g. --mcl-v=all
    adds '-v all' to the mcl command line.
  synonyms:
  - --mcl
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: collect clusters of size lq <num> in a single file.
  synonyms:
  - --fmt-lump-size
  args: !SimpleFlagArg
    name: num
  optional: true
- !Flag
  description: make batches containing approximately <num> nodes.
  synonyms:
  - --fmt-lump-count
  args: !SimpleFlagArg
    name: num
  optional: true
- !Flag
  description: tab file does not exist or should be ignored.
  synonyms:
  - --fmt-notab
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: use tab file fname.
  synonyms:
  - --fmt-tab
  args: !SimpleFlagArg
    name: fname
  optional: true
- !Flag
  description: <-opt[=val]>       add '-opt [val]' to clmformat command line.
  synonyms:
  - --fmt
  args: !EmptyFlagArg {}
  optional: true
command:
- mclblastline
parent:
subcommands: []
help_flag: !Flag
  description: show this.
  synonyms:
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "mcxblastline wraps around the generic mclpipeline script. It fills in\
  \ the name\nof the BLAST parser (mcxdeblast) and the tag ('blast') used to propagate\n\
  mcxdeblast options through the pipeline to mcxdeblast itself.  You can freely\n\
  use all mclpipeline options other than --parser=<executable> and\n--parser-tag=<str>.\n\
  \nUsage: mclpipeline --parser=<executable> --parser-tag=<str> [options] file-name\n\
  \nThis will successively call four programs,\n   mcxdeblast , mcxassemble , mcl\
  \ , clmformat\nThese programs write by default to files with names sharing a common\
  \ base.\nThe parser should implement the behaviour expected by mclpipeline.\n,_______\
  \ global options:\n   --whatif          shows only what would be done.\n   --start-assemble\
  \  skip the parse step, assume needed files exist already.\n   --start-mcl     \
  \  start running mcl immediately, as above.\n   --start-format    only (re)do the\
  \ formatting stage, as above.\n   --prepare-mcl     create the input file for mcl,\
  \ then quit.\n   --help            show this.\n,_______ global options (affecting\
  \ shared base name of created files):\n   --xi=<suf>        strip <suf> from file-name\
  \ for use as base stem.\n   --xo-dat=<suf>    attach <suf> to parse result.\n  \
  \ --xo-ass=<suf>    attach <suf> to mcxassemble result.\n   --xo-mcl=<suf>    use\
  \ <suf> as mcl result attachment.\n   --xa-mcl=<suf>    append to mcl suffix.\n\
  \   --xe-mcl=<suf>    append to mcl file name.\n   --xo-fmt=<suf>    attach <suf>\
  \ to clmformat result.\n     mnemonics: eXtension In, Out, Append, Extra.\n,_______\
  \ parse options\n   --parser=<script> name of parse script\n   --parser-tag=<str>\
  \   tag of options to pass to parse script.\n,_______ mcxassemble options:\n   --ass-repeat=<str>str\
  \ in <add|max|mul|left|right>\n   --ass-nomap       map file does not exist or should\
  \ be ignored.\nand GENERALLY,\n   --ass<-opt[=val]> add '-opt [val]' to mcxassemble\
  \ command line.\n   --start-assemble=<base-name>  start running mcxassemble with\
  \ base-name.\n,_______ mcl options:\n   --mcl-te=<num>    number of expansion threads.\n\
  \   --mcl-I=<float>   inflation value, MAIN mcl handle.\n   --mcl-i=<float>   initial\
  \ inflation value.\n   --mcl-l=<int>     initial loop length.\n   --mcl-pi=<float>\
  \  pre-inflation value.\n   --mcl-c=<float>   center value.\n   --mcl-scheme=<i>\
  \  i in 1..5, resource allocation level.\n   --mcl-o=<fname>   if you *need* to\
  \ use this, I must be improved.\nand GENERALLY,\n   --mcl<-opt[=val]> add '-opt\
  \ [val]' to mcl command line, e.g.\n                           --mcl-v=all adds\
  \ '-v all' to the mcl command line.\n   --start-mcl=<file-name>\n              \
  \       start running mcl with file-name.  optionally combines\n               \
  \      with the --xi option.\n,_______ clmformat options:\n   --fmt-lump-size=<num>\
  \   collect clusters of size lq <num> in a single file.\n   --fmt-lump-count=<num>\
  \  make batches containing approximately <num> nodes.\n   --fmt-notab          \
  \   tab file does not exist or should be ignored.\n   --fmt-tab=<fname>       use\
  \ tab file fname.\nand GENERALLY,\n   --fmt<-opt[=val]>       add '-opt [val]' to\
  \ clmformat command line.\n________________\nThe above options are generic pipeline\
  \ options.  You can pass any mcxdeblast\noption by inserting the 'blast' tag in\
  \ front of that particular option. For\nexample, the mcxdeblast --score=x option\
  \ (where x is 'b' or 'e') should\nbe passed to mcxblastline as --blast-score=x.\n\
  \nThe mcxdeblast --xo-dat option is special; it must *not* be prefixed, as it is\n\
  shared with mclpipeline, as can be seen from the above listing.  The mcxdeblast\n\
  --xi-dat option should not be used, as it encapsulated by the mclpipeline --xi\n\
  option.\n"
generated_using:
- --help
