!Command
command:
- gcloud
- topic
- arg-files
positional:
- !Positional
  optional: false
  position: 0
  name: Composition
  description: 'A special include: [ARG_GROUP1, ...] syntax allows merging or composition'
- !Positional
  optional: false
  position: 0
  name: nesting.
  description: Precedence
- !Positional
  optional: false
  position: 0
  name: file.
  description: Any argument defined directly within a group will have higher precedence
named:
- !Flag
  optional: true
  synonyms:
  - --device-ids
  description: ',htc_m8,g3'
  args: !SimpleFlagArg
    name: shamu
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "NAME\n    gcloud topic arg-files - supplementary help for arg-files to\
  \ be used with\n        gcloud firebase test\n\nDESCRIPTION\n    Supplementary help\
  \ for arg-files to be used with gcloud firebase test.\n\n    All gcloud firebase\
  \ test android run arguments may be specified by flags on\n    the command line\
  \ and/or via a YAML-formatted ARG_FILE. The optional,\n    positional ARG_SPEC argument\
  \ on the command line is used to specify a\n    single ARG_FILE:ARG_GROUP_NAME pair,\
  \ where ARG_FILE is the path to the YAML\n    argument file, and ARG_GROUP_NAME\
  \ is the name of the argument group to load\n    and parse. The ARG_FILE must contain\
  \ valid YAML syntax or gcloud will\n    respond with an error.\n\n    The basic\
  \ format of a YAML argument file is:\n\n        arg-group1:\n          arg1: value1\
  \  # a comment\n          arg2: value2\n          ...\n\n        # Another comment\n\
  \        arg-group2:\n          arg3: value3\n          ...\n\n    List arguments\
  \ may be specified within square brackets:\n\n        directories-to-pull: [/sdcard/dir1,\
  \ /data/dir2]\n\n    or by using the alternate YAML list notation with one dash\
  \ per list item:\n\n        directories-to-pull:\n          - /sdcard/dir1\n   \
  \       - /data/dir2\n\n    If a list argument only contains a single value, you\
  \ may omit the square\n    brackets:\n\n        directories-to-pull: /sdcard/dir1\n\
  \n    Composition\n\n    A special include: [ARG_GROUP1, ...] syntax allows merging\
  \ or composition\n    of argument groups (see EXAMPLES below). Included argument\
  \ groups can\n    include: other argument groups within the same YAML file, with\
  \ unlimited\n    nesting.\n\n    Precedence\n\n    An argument which appears on\
  \ the command line has the highest precedence\n    and will override the same argument\
  \ if it is specified within an argument\n    file.\n\n    Any argument defined directly\
  \ within a group will have higher precedence\n    than an identical argument which\
  \ is merged into that group using the\n    include: keyword.\n\nEXAMPLES\n    Here\
  \ are the contents of a very simple YAML argument file which we'll\n    assume is\
  \ stored in a file named excelsior_args.yaml:\n\n        # Run a quick 'robo' test\
  \ on the 'Excelsior' app for\n        # 90 seconds using only the default Test Lab\
  \ device.\n        quick-robo-test:\n          app: path/to/excelsior.apk\n    \
  \      type: robo\n          max-steps: 100\n          timeout: 90s\n          async:\
  \ true\n\n    To invoke this test, run:\n\n        $ gcloud firebase test android\
  \ run \\\n            excelsior_args.yaml:quick-robo-test\n\n    To select which\
  \ device(s) you wish to test against in an argument file, use\n    device: to specify\
  \ one or more devices, with each device having one or more\n    dimensions. For\
  \ example, to specify the LG G3 device in the Chinese locale\n    and with landscape\
  \ orientation, use:\n\n        single-device-group:\n          device: [{model:\
  \ g3, orientation: landscape, locale: zh}]\n\n    To specify multiple devices, use\
  \ any of the following equivalent YAML\n    formats:\n\n        multi-device-group1:\n\
  \          device: [{model: flo}, {model: g3, version: 19, locale: zh}, {model:\
  \ mako, version: 21}]\n\n        multi-device-group2:\n          device:\n     \
  \       - {model: flo}\n            - {model: g3, version: 19, locale: zh}\n   \
  \         - {model: mako, version: 21}\n\n        multi-device-group3:\n       \
  \   device:\n            - model: flo\n            - model: g3\n              version:\
  \ 19\n              locale: zh\n            - model: mako\n              version:\
  \ 21\n\n    If your app has a login screen, or has additional UI elements which\
  \ require\n    input text, you may specify the resource names of the Android target\
  \ UI\n    elements, along with their corresponding input values, in the\n    'robo-directives'\
  \ map argument. You may also specify the elements which the\n    Robo test should\
  \ prioritize clicking. In the example below,\n    \"username_resource\" is the resource\
  \ name of the username field and\n    \"username\" is the input for that field (similarly\
  \ for password), and\n    \"signin_button_resource\" is the resource name of the\
  \ sign in button.\n\n        # Run a 'robo' test on the 'Excelsior' app with login\
  \ credentials.\n        robo-test-with-login:\n          app: path/to/excelsior.apk\n\
  \          type: robo\n          robo-directives:\n            \"text:username_resource\"\
  : username\n            \"text:password_resource\": password\n            \"click:sigin_button_resource\"\
  : \"\"\n\n    Assuming the above YAML text is appended to the arg-file named\n \
  \   excelsior_args.yaml, you may invoke the test by running:\n\n        $ gcloud\
  \ firebase test android run \\\n            excelsior_args.yaml:robo-test-with-login\n\
  \n    Here is a slightly more complicated example which demonstrates composition\n\
  \    of argument groups using the legacy device dimension arguments (device: is\n\
  \    now the preferred way to specify test devices). Assume the following YAML\n\
  \    text is appended to the arg-file shown above named excelsior_args.yaml:\n\n\
  \        # Specify some unit tests to be run against a test matrix\n        # with\
  \ one device type, two Android versions, and four\n        # locales, for a total\
  \ of eight test variations (1*2*4).\n        unit-tests:\n          type: instrumentation\n\
  \          app: path/to/excelsior.apk\n          test: path/to/excelsior-test.apk\
  \  # the unit tests\n          timeout: 10m\n          device-ids: NexusLowRes\n\
  \          include: [supported-versions, supported-locales]\n\n        supported-versions:\n\
  \          os-version-ids: [21, 22]\n\n        supported-locales:\n          locales:\
  \ [en, es, fr, it]\n\n    To invoke this test matrix, run:\n\n        $ gcloud firebase\
  \ test android run excelsior_args.yaml:unit-tests\n\n    To run these unit tests\
  \ with the same locales and os-version-ids, but\n    substituting a sampling of\
  \ three physical Android devices instead of the\n    single virtual NexusLowRes\
  \ device, run:\n\n        $ gcloud firebase test android run excelsior_args.yaml:unit-tests\
  \ \\\n            --device-ids shamu,htc_m8,g3\n\n    In the last example, the --device-ids\
  \ argument on the command line\n    overrides the device-ids: specification inside\
  \ the arg-file because\n    command-line arguments have higher precedence.\n"
generated_using:
- --help
docker_image:
