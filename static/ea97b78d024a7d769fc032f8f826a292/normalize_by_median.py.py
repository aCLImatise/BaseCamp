from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, String, File

Normalize_By_Median_Py_V0_1_0 = CommandToolBuilder(tool="normalize_by_median.py", base_command=["normalize-by-median.py"], inputs=[ToolInput(tag="in_info", input_type=Boolean(optional=True), prefix="--info", doc=InputDocumentation(doc="print citation information")), ToolInput(tag="in_k_size", input_type=Int(optional=True), prefix="--ksize", doc=InputDocumentation(doc="k-mer size to use (default: 32)")), ToolInput(tag="in_unique_km_ers", input_type=Int(optional=True), prefix="--unique-kmers", doc=InputDocumentation(doc="approximate number of unique kmers in the input set\n(default: 0)")), ToolInput(tag="in_fp_rate", input_type=String(optional=True), prefix="--fp-rate", doc=InputDocumentation(doc="Override the automatic FP rate setting for the current\nscript (default: None)")), ToolInput(tag="in_max_memory_usage", input_type=Int(optional=True), prefix="--max-memory-usage", doc=InputDocumentation(doc="maximum amount of memory to use for data structure\n(default: None)")), ToolInput(tag="in_small_count", input_type=Boolean(optional=True), prefix="--small-count", doc=InputDocumentation(doc="Reduce memory usage by using a smaller counter for\nindividual kmers. (default: False)")), ToolInput(tag="in_cut_off", input_type=Int(optional=True), prefix="--cutoff", doc=InputDocumentation(doc="when the median k-mer coverage level is above this\nnumber the read is not kept. (default: 20)")), ToolInput(tag="in_paired", input_type=Boolean(optional=True), prefix="--paired", doc=InputDocumentation(doc="require that all sequences be properly paired\n(default: False)")), ToolInput(tag="in_force_single", input_type=Boolean(optional=True), prefix="--force_single", doc=InputDocumentation(doc="treat all sequences as single-ended/unpaired (default:\nFalse)")), ToolInput(tag="in_unpaired_reads", input_type=File(optional=True), prefix="--unpaired-reads", doc=InputDocumentation(doc="include a file of unpaired reads to which -p/--paired\ndoes not apply. (default: None)")), ToolInput(tag="in_save_graph", input_type=File(optional=True), prefix="--savegraph", doc=InputDocumentation(doc="save the k-mer countgraph to disk after all reads are\nloaded. (default: None)")), ToolInput(tag="in_report", input_type=File(optional=True), prefix="--report", doc=InputDocumentation(doc="write progress report to report_filename (default:\nNone)")), ToolInput(tag="in_report_frequency", input_type=Int(optional=True), prefix="--report-frequency", doc=InputDocumentation(doc="report progress every report_frequency reads (default:\n100000)")), ToolInput(tag="in_force", input_type=Boolean(optional=True), prefix="--force", doc=InputDocumentation(doc="continue past file reading errors (default: False)")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="only output a single file with the specified filename;\nuse a single dash '-' to specify that output should go\nto STDOUT (the terminal) (default: None)")), ToolInput(tag="in_load_graph", input_type=File(optional=True), prefix="--loadgraph", doc=InputDocumentation(doc="load a precomputed k-mer graph from disk (default:\nNone)")), ToolInput(tag="in_gzip", input_type=Boolean(optional=True), prefix="--gzip", doc=InputDocumentation(doc="Compress output using gzip (default: False)")), ToolInput(tag="in_bzip", input_type=Boolean(optional=True), prefix="--bzip", doc=InputDocumentation(doc="Compress output using bzip2 (default: False)")), ToolInput(tag="in_input_sequence_filename", input_type=String(), position=0, doc=InputDocumentation(doc="Input FAST[AQ] sequence filename."))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="only output a single file with the specified filename;\nuse a single dash '-' to specify that output should go\nto STDOUT (the terminal) (default: None)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Normalize_By_Median_Py_V0_1_0().translate("wdl", allow_empty_container=True)

