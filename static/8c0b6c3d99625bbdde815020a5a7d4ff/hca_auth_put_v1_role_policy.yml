&id007 !Command
command:
- hca
- auth
- put-v1-role-policy
positional: []
named:
- !Flag
  description: ''
  synonyms:
  - --policy
  args: !SimpleFlagArg
    name: POLICY
  optional: true
- !Flag
  description: The name of the role.
  synonyms:
  - --role-id
  args: !SimpleFlagArg
    name: ROLE_ID
  optional: true
parent: &id005 !Command
  command:
  - hca
  - auth
  positional: []
  named: []
  parent: &id001 !Command
    command:
    - hca
    positional: []
    named:
    - !Flag
      description: "['DEBUG', 'INFO', 'WARNING', 'ERROR', 'CRITICAL']\n"
      synonyms:
      - --log-level
      args: !ChoiceFlagArg
        choices: !!set
          ERROR:
          INFO:
          DEBUG:
          WARNING:
          CRITICAL:
      optional: true
    parent:
    subcommands:
    - &id002 !Command
      command:
      - hca
      - dss
      positional: []
      named: []
      parent: *id001
      subcommands:
      - !Command
        command:
        - hca
        - dss
        - download-manifest
        positional: []
        named:
        - !Flag
          description: "The path to a TSV (tab-separated values) file listing files\
            \ to download. If the directory\nfor download already contains the manifest,\
            \ the manifest will be overwritten to include a column with paths\ninto\
            \ the filestore."
          synonyms:
          - --manifest
          args: !SimpleFlagArg
            name: MANIFEST
          optional: true
        - !Flag
          description: "The replica from which to download. The supported replicas\
            \ are: aws for Amazon Web\nServices, and gcp for Google Cloud Platform.\
            \ [aws, gcp]"
          synonyms:
          - --replica
          args: !SimpleFlagArg
            name: REPLICA
          optional: true
        - !Flag
          description: "The layout of the downloaded files. Currently two options\
            \ are supported, 'none' (the\ndefault), and 'bundle'."
          synonyms:
          - --layout
          args: !SimpleFlagArg
            name: LAYOUT
          optional: true
        - !Flag
          description: Exclude metadata files. Cannot be set when --metadata-filter
            is also set.
          synonyms:
          - --no-metadata
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: Exclude data files. Cannot be set when --data-filter is also
            set.
          synonyms:
          - --no-data
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "The initial quota of download failures to accept before exiting\
            \ due to\nfailures. The number of retries increase and decrease as file\
            \ chucks succeed and fail."
          synonyms:
          - --num-retries
          args: !SimpleFlagArg
            name: NUM_RETRIES
          optional: true
        - !Flag
          description: "The minimum number of seconds to wait in between retries for\
            \ downloading any\nfile"
          synonyms:
          - --min-delay-seconds
          args: !SimpleFlagArg
            name: MIN_DELAY_SECONDS
          optional: true
        - !Flag
          description: "The directory into which to download\n"
          synonyms:
          - --download-dir
          args: !SimpleFlagArg
            name: DOWNLOAD_DIR
          optional: true
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "usage: hca dss download-manifest [-h] --manifest MANIFEST --replica\
          \ REPLICA\n                                 [--layout LAYOUT] [--no-metadata]\
          \ [--no-data]\n                                 [--num-retries NUM_RETRIES]\n\
          \                                 [--min-delay-seconds MIN_DELAY_SECONDS]\n\
          \                                 [--download-dir DOWNLOAD_DIR]\n\nFiles\
          \ are always downloaded to a cache / filestore directory called '.hca'.\
          \ This directory is created in the\ncurrent directory where download is\
          \ initiated. A copy of the manifest used is also written to the current\n\
          directory. This manifest has an added column that lists the paths of the\
          \ files within the '.hca' filestore.\n\nThe default layout is none. In this\
          \ layout all of the files are downloaded to the filestore and the\nrecommended\
          \ way of accessing the files in by parsing the manifest copy that's written\
          \ to the download\ndirectory.\n\nThe bundle layout still downloads all of\
          \ files to the filestore. For each bundle mentioned in the\nmanifest a directory\
          \ is created. All relevant metadata files for each bundle are linked into\
          \ these\ndirectories in addition to relevant data files mentioned in the\
          \ manifest.\n\nEach row in the manifest represents one file in DSS. The\
          \ manifest must have a header row. The header row\nmust declare the following\
          \ columns:\n\n- bundle_uuid - the UUID of the bundle containing the file\
          \ in DSS.\n- bundle_version - the version of the bundle containing the file\
          \ in DSS.\n- file_name - the name of the file as specified in the bundle.\n\
          - file_uuid - the UUID of the file in the DSS.\n- file_sha256 - the SHA-256\
          \ hash of the file.\n- file_size - the size of the file.\n\nThe TSV may\
          \ have additional columns. Those columns will be ignored. The ordering of\
          \ the columns is\ninsignificant because the TSV is required to have a header\
          \ row.\n\nThis download format will serve as the main storage format for\
          \ downloaded files. If a user specifies a different\nformat for download\
          \ (coming in the future) the files will first be downloaded in this format,\
          \ then hard-linked\nto the user's preferred format.\n\nOptional Arguments:\n\
          \  -h, --help            show this help message and exit\n\nRequired Arguments:\n\
          \  --manifest MANIFEST   The path to a TSV (tab-separated values) file listing\
          \ files to download. If the directory\n                        for download\
          \ already contains the manifest, the manifest will be overwritten to include\
          \ a column with paths\n                        into the filestore.\n  --replica\
          \ REPLICA     The replica from which to download. The supported replicas\
          \ are: aws for Amazon Web\n                        Services, and gcp for\
          \ Google Cloud Platform. [aws, gcp]\n  --layout LAYOUT       The layout\
          \ of the downloaded files. Currently two options are supported, 'none' (the\n\
          \                        default), and 'bundle'.\n  --no-metadata      \
          \   Exclude metadata files. Cannot be set when --metadata-filter is also\
          \ set.\n  --no-data             Exclude data files. Cannot be set when --data-filter\
          \ is also set.\n  --num-retries NUM_RETRIES\n                        The\
          \ initial quota of download failures to accept before exiting due to\n \
          \                       failures. The number of retries increase and decrease\
          \ as file chucks succeed and fail.\n  --min-delay-seconds MIN_DELAY_SECONDS\n\
          \                        The minimum number of seconds to wait in between\
          \ retries for downloading any\n                        file\n  --download-dir\
          \ DOWNLOAD_DIR\n                        The directory into which to download\n\
          \n"
        generated_using: &id003
        - --help
      - !Command
        command:
        - hca
        - dss
        - delete-subscription
        positional: []
        named:
        - !Flag
          description: A RFC4122-compliant ID for the subscription.
          synonyms:
          - --uuid
          args: !SimpleFlagArg
            name: UUID
          optional: true
        - !Flag
          description: Replica to delete from.
          synonyms:
          - --replica
          args: !ChoiceFlagArg
            choices: !!set
              gcp:
              aws:
          optional: true
        - !Flag
          description: "type of subscriptions to fetch (elasticsearch or jmespath)\n"
          synonyms:
          - --subscription-type
          args: !ChoiceFlagArg
            choices: !!set
              elasticsearch:
              jmespath:
          optional: true
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "usage: hca dss delete-subscription [-h] --uuid UUID --replica\
          \ {aws,gcp}\n                                   [--subscription-type {elasticsearch,jmespath}]\n\
          \nDelete a registered event subscription. The associated query will no longer\
          \ trigger a callback if a matching document is added to the system.\n\n\
          Optional Arguments:\n  -h, --help            show this help message and\
          \ exit\n\nRequired Arguments:\n  --uuid UUID           A RFC4122-compliant\
          \ ID for the subscription.\n  --replica {aws,gcp}   Replica to delete from.\n\
          \  --subscription-type {elasticsearch,jmespath}\n                      \
          \  type of subscriptions to fetch (elasticsearch or jmespath)\n\n"
        generated_using: *id003
      - !Command
        command:
        - hca
        - dss
        - get-subscriptions
        positional: []
        named:
        - !Flag
          description: Replica to fetch from.
          synonyms:
          - --replica
          args: !ChoiceFlagArg
            choices: !!set
              gcp:
              aws:
          optional: true
        - !Flag
          description: "Type of subscriptions to fetch (elasticsearch or jmespath).\n"
          synonyms:
          - --subscription-type
          args: !ChoiceFlagArg
            choices: !!set
              elasticsearch:
              jmespath:
          optional: true
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "usage: hca dss get-subscriptions [-h] --replica {aws,gcp}\n  \
          \                               [--subscription-type {elasticsearch,jmespath}]\n\
          \nReturn a list of associated subscriptions.\n\nOptional Arguments:\n  -h,\
          \ --help            show this help message and exit\n\nRequired Arguments:\n\
          \  --replica {aws,gcp}   Replica to fetch from.\n  --subscription-type {elasticsearch,jmespath}\n\
          \                        Type of subscriptions to fetch (elasticsearch or\
          \ jmespath).\n\n"
        generated_using: *id003
      - !Command
        command:
        - hca
        - dss
        - get-collection
        positional: []
        named:
        - !Flag
          description: A RFC4122-compliant ID for the collection.
          synonyms:
          - --uuid
          args: !SimpleFlagArg
            name: UUID
          optional: true
        - !Flag
          description: Replica to fetch from.
          synonyms:
          - --replica
          args: !ChoiceFlagArg
            choices: !!set
              gcp:
              aws:
          optional: true
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag: !Flag
          description: Timestamp of collection creation in DSS_VERSION format.  If
            this is not provided, the latest version is returned.
          synonyms:
          - --version
          args: !SimpleFlagArg
            name: VERSION
          optional: true
        help_text: "usage: hca dss get-collection [-h] --uuid UUID --replica {aws,gcp}\n\
          \                              [--version VERSION]\n\nGiven a collection\
          \ UUID, return the associated collection object.\n\nOptional Arguments:\n\
          \  -h, --help           show this help message and exit\n\nRequired Arguments:\n\
          \  --uuid UUID          A RFC4122-compliant ID for the collection.\n  --replica\
          \ {aws,gcp}  Replica to fetch from.\n  --version VERSION    Timestamp of\
          \ collection creation in DSS_VERSION format.  If this is not provided, the\
          \ latest version is returned.\n\n"
        generated_using: *id003
      - !Command
        command:
        - hca
        - dss
        - get-bundles-checkout
        positional:
        - !Positional
          description: Use this route with the `checkout_job_id` identifier returned
            by `POST /bundles/{uuid}/checkout`.
          position: 0
          name: CHECKOUT_JOB_ID
          optional: false
        named:
        - !Flag
          description: Replica to fetch from.
          synonyms:
          - --replica
          args: !ChoiceFlagArg
            choices: !!set
              gcp:
              aws:
          optional: true
        - !Flag
          description: "A RFC4122-compliant ID for the checkout job request.\n"
          synonyms:
          - --checkout-job-id
          args: !SimpleFlagArg
            name: CHECKOUT_JOB_ID
          optional: true
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "usage: hca dss get-bundles-checkout [-h] --replica {aws,gcp} --checkout-job-id\n\
          \                                    CHECKOUT_JOB_ID\n\nUse this route with\
          \ the `checkout_job_id` identifier returned by `POST /bundles/{uuid}/checkout`.\n\
          \nOptional Arguments:\n  -h, --help            show this help message and\
          \ exit\n\nRequired Arguments:\n  --replica {aws,gcp}   Replica to fetch\
          \ from.\n  --checkout-job-id CHECKOUT_JOB_ID\n                        A\
          \ RFC4122-compliant ID for the checkout job request.\n\n"
        generated_using: *id003
      - !Command
        command:
        - hca
        - dss
        - download
        positional: []
        named:
        - !Flag
          description: if using the CLI or pass the no_data=True argument if calling
            the download() API method.
          synonyms:
          - --no-data
          args: !SimpleFlagArg
            name: flag
          optional: true
        - !Flag
          description: The uuid of the bundle to download
          synonyms:
          - --bundle-uuid
          args: !SimpleFlagArg
            name: BUNDLE_UUID
          optional: true
        - !Flag
          description: "the replica to download from. The supported replicas are:\
            \ aws for Amazon Web Services, and\ngcp for Google Cloud Platform. [aws,\
            \ gcp]"
          synonyms:
          - --replica
          args: !SimpleFlagArg
            name: REPLICA
          optional: true
        - !Flag
          description: The directory into which to download
          synonyms:
          - --download-dir
          args: !SimpleFlagArg
            name: DOWNLOAD_DIR
          optional: true
        - !Flag
          description: "One or more shell patterns against which all metadata files\
            \ in the bundle will\nbe matched case-sensitively. A file is considered\
            \ a metadata file if the\nindexed property in the manifest is set. If\
            \ and only if a metadata file\nmatches any of the patterns in metadata_files\
            \ will it be downloaded."
          synonyms:
          - --metadata-filter
          args: !RepeatFlagArg
            name: METADATA_FILTER
          optional: true
        - !Flag
          description: "One or more shell patterns against which all data files in\
            \ the bundle will be\nmatched case-sensitively. A file is considered a\
            \ data file if the indexed property\nin the manifest is not set. The file\
            \ will be downloaded only if a data file matches\nany of the patterns\
            \ in data_files will it be downloaded."
          synonyms:
          - --data-filter
          args: !RepeatFlagArg
            name: DATA_FILTER
          optional: true
        - !Flag
          description: Exclude metadata files. Cannot be set when --metadata-filter
            is also set.
          synonyms:
          - --no-metadata
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "The initial quota of download failures to accept before exiting\
            \ due to failures.\nThe number of retries increase and decrease as file\
            \ chucks succeed and fail."
          synonyms:
          - --num-retries
          args: !SimpleFlagArg
            name: NUM_RETRIES
          optional: true
        - !Flag
          description: "The minimum number of seconds to wait in between retries.\n"
          synonyms:
          - --min-delay-seconds
          args: !SimpleFlagArg
            name: MIN_DELAY_SECONDS
          optional: true
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag: !Flag
          description: "The version to download, else if not specified, download the\
            \ latest. The version is a\ntimestamp of bundle creation in RFC3339"
          synonyms:
          - --version
          args: !SimpleFlagArg
            name: VERSION
          optional: true
        help_text: "usage: hca dss download [-h] --bundle-uuid BUNDLE_UUID --replica\
          \ REPLICA\n                        [--version VERSION] [--download-dir DOWNLOAD_DIR]\n\
          \                        [--metadata-filter METADATA_FILTER [METADATA_FILTER\
          \ ...]]\n                        [--data-filter DATA_FILTER [DATA_FILTER\
          \ ...]]\n                        [--no-metadata] [--no-data]\n         \
          \               [--num-retries NUM_RETRIES]\n                        [--min-delay-seconds\
          \ MIN_DELAY_SECONDS]\n\nDownload a bundle and save it to the local filesystem\
          \ as a directory.\n\nBy default, all data and metadata files are downloaded.\
          \ To disable the downloading of data, use the\n--no-data flag if using the\
          \ CLI or pass the no_data=True argument if calling the download() API method.\n\
          Likewise, to disable the downloading of metadata, use the --no-metadata\
          \ flag for the CLI or pass the\nno_metadata=True argument if calling the\
          \ download() API method.\n\nIf a retryable exception occurs, we wait a bit\
          \ and retry again.  The delay increases each time we fail and\ndecreases\
          \ each time we successfully read a block.  We set a quota for the number\
          \ of failures that goes up with\nevery successful block read and down with\
          \ each failure.\n\nOptional Arguments:\n  -h, --help            show this\
          \ help message and exit\n\nRequired Arguments:\n  --bundle-uuid BUNDLE_UUID\n\
          \                        The uuid of the bundle to download\n  --replica\
          \ REPLICA     the replica to download from. The supported replicas are:\
          \ aws for Amazon Web Services, and\n                        gcp for Google\
          \ Cloud Platform. [aws, gcp]\n  --version VERSION     The version to download,\
          \ else if not specified, download the latest. The version is a\n       \
          \                 timestamp of bundle creation in RFC3339\n  --download-dir\
          \ DOWNLOAD_DIR\n                        The directory into which to download\n\
          \  --metadata-filter METADATA_FILTER [METADATA_FILTER ...]\n           \
          \             One or more shell patterns against which all metadata files\
          \ in the bundle will\n                        be matched case-sensitively.\
          \ A file is considered a metadata file if the\n                        indexed\
          \ property in the manifest is set. If and only if a metadata file\n    \
          \                    matches any of the patterns in metadata_files will\
          \ it be downloaded.\n  --data-filter DATA_FILTER [DATA_FILTER ...]\n   \
          \                     One or more shell patterns against which all data\
          \ files in the bundle will be\n                        matched case-sensitively.\
          \ A file is considered a data file if the indexed property\n           \
          \             in the manifest is not set. The file will be downloaded only\
          \ if a data file matches\n                        any of the patterns in\
          \ data_files will it be downloaded.\n  --no-metadata         Exclude metadata\
          \ files. Cannot be set when --metadata-filter is also set.\n  --no-data\
          \             Exclude data files. Cannot be set when --data-filter is also\
          \ set.\n  --num-retries NUM_RETRIES\n                        The initial\
          \ quota of download failures to accept before exiting due to failures.\n\
          \                        The number of retries increase and decrease as\
          \ file chucks succeed and fail.\n  --min-delay-seconds MIN_DELAY_SECONDS\n\
          \                        The minimum number of seconds to wait in between\
          \ retries.\n\n"
        generated_using: *id003
      - !Command
        command:
        - hca
        - dss
        - put-bundle
        positional: []
        named:
        - !Flag
          description: User ID who is creating this bundle.
          synonyms:
          - --creator-uid
          args: !SimpleFlagArg
            name: CREATOR_UID
          optional: true
        - !Flag
          description: "This is a list of dictionaries describing each of the files.\
            \ Each dictionary includes the fields: - The \"uuid\" of a file already\
            \ previously uploaded with \"PUT file/{uuid}\". - The \"version\" timestamp\
            \ of the file. - The \"name\" of the file. This can be most anything,\
            \ and is the name the file will have when downloaded. - The \"indexed\"\
            \ field, which specifies whether a file should be indexed or not.\nBundle\
            \ manifests exceeding 20,000 files will not be included in the Elasticsearch\
            \ index document.\nExample representing 2 files with dummy values: [{'uuid':\
            \ 'ce55fd51-7833-469b-be0b-5da88ebebfcd',\n'version': '2017-06-16T193604.240704Z',\n\
            'name': 'dinosaur_dna.fa',\n'indexed': False},\n{'uuid': 'ae55fd51-7833-469b-be0b-5da88ebebfca',\n\
            'version': '0303-04-23T193604.240704Z',\n'name': 'dragon_dna.fa',\n'indexed':\
            \ False}]"
          synonyms:
          - --files
          args: !RepeatFlagArg
            name: FILES
          optional: true
        - !Flag
          description: A RFC4122-compliant ID for the bundle.
          synonyms:
          - --uuid
          args: !SimpleFlagArg
            name: UUID
          optional: true
        - !Flag
          description: Replica to write to.
          synonyms:
          - --replica
          args: !ChoiceFlagArg
            choices: !!set
              gcp:
              aws:
          optional: true
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag: !Flag
          description: Timestamp of bundle creation in DSS_VERSION format.
          synonyms:
          - --version
          args: !SimpleFlagArg
            name: VERSION
          optional: true
        help_text: "usage: hca dss put-bundle [-h] --creator-uid CREATOR_UID --files\
          \ FILES\n                          [FILES ...] --uuid UUID --version VERSION\
          \ --replica\n                          {aws,gcp}\n\nCreate a new version\
          \ of a bundle with a given UUID.  The list of file UUID and versions to\
          \ be included must be provided.\n\nOptional Arguments:\n  -h, --help   \
          \         show this help message and exit\n\nRequired Arguments:\n  --creator-uid\
          \ CREATOR_UID\n                        User ID who is creating this bundle.\n\
          \  --files FILES [FILES ...]\n                        This is a list of\
          \ dictionaries describing each of the files. Each dictionary includes the\
          \ fields: - The \"uuid\" of a file already previously uploaded with \"PUT\
          \ file/{uuid}\". - The \"version\" timestamp of the file. - The \"name\"\
          \ of the file. This can be most anything, and is the name the file will\
          \ have when downloaded. - The \"indexed\" field, which specifies whether\
          \ a file should be indexed or not.\n                        Bundle manifests\
          \ exceeding 20,000 files will not be included in the Elasticsearch index\
          \ document.\n                        Example representing 2 files with dummy\
          \ values: [{'uuid': 'ce55fd51-7833-469b-be0b-5da88ebebfcd',\n          \
          \                'version': '2017-06-16T193604.240704Z',\n             \
          \             'name': 'dinosaur_dna.fa',\n                          'indexed':\
          \ False},\n                         {'uuid': 'ae55fd51-7833-469b-be0b-5da88ebebfca',\n\
          \                          'version': '0303-04-23T193604.240704Z',\n   \
          \                       'name': 'dragon_dna.fa',\n                     \
          \     'indexed': False}]\n  --uuid UUID           A RFC4122-compliant ID\
          \ for the bundle.\n  --version VERSION     Timestamp of bundle creation\
          \ in DSS_VERSION format.\n  --replica {aws,gcp}   Replica to write to.\n\
          \n"
        generated_using: *id003
      - !Command
        command:
        - hca
        - dss
        - get-subscription
        positional: []
        named:
        - !Flag
          description: A RFC4122-compliant ID for the subscription.
          synonyms:
          - --uuid
          args: !SimpleFlagArg
            name: UUID
          optional: true
        - !Flag
          description: Replica to fetch from.
          synonyms:
          - --replica
          args: !ChoiceFlagArg
            choices: !!set
              gcp:
              aws:
          optional: true
        - !Flag
          description: "type of subscriptions to fetch (elasticsearch or jmespath)\n"
          synonyms:
          - --subscription-type
          args: !ChoiceFlagArg
            choices: !!set
              elasticsearch:
              jmespath:
          optional: true
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "usage: hca dss get-subscription [-h] --uuid UUID --replica {aws,gcp}\n\
          \                                [--subscription-type {elasticsearch,jmespath}]\n\
          \nGiven a subscription UUID, return the associated subscription.\n\nOptional\
          \ Arguments:\n  -h, --help            show this help message and exit\n\n\
          Required Arguments:\n  --uuid UUID           A RFC4122-compliant ID for\
          \ the subscription.\n  --replica {aws,gcp}   Replica to fetch from.\n  --subscription-type\
          \ {elasticsearch,jmespath}\n                        type of subscriptions\
          \ to fetch (elasticsearch or jmespath)\n\n"
        generated_using: *id003
      - !Command
        command:
        - hca
        - dss
        - get-bundles-all
        positional: []
        named:
        - !Flag
          description: Replica to fetch from.
          synonyms:
          - --replica
          args: !ChoiceFlagArg
            choices: !!set
              gcp:
              aws:
          optional: true
        - !Flag
          description: "Used to specify the beginning of a particular bundle UUID.\
            \  Capitalized letters will be lower-cased as is done when users submit\
            \ a uuid (all uuids have lower-cased letters upon ingestion into the dss).\
            \  Characters other than letters, numbers, and dashes are not allowed\
            \ and will error.\nThe specified character(s) will return all available\
            \ bundle uuids starting with that character(s)."
          synonyms:
          - --prefix
          args: !SimpleFlagArg
            name: PREFIX
          optional: true
        - !Flag
          description: Token to manage retries.  End users constructing queries should
            not set this parameter.
          synonyms:
          - --token
          args: !SimpleFlagArg
            name: TOKEN
          optional: true
        - !Flag
          description: Max number of results to return per page.
          synonyms:
          - --per-page
          args: !SimpleFlagArg
            name: PER_PAGE
          optional: true
        - !Flag
          description: '**Search-After-Context**. An internal state pointer parameter
            for use with pagination. This parameter is referenced by the `Link` header
            as described in the "Pagination" section. The API client should not need
            to set this parameter directly; it should instead directly fetch the URL
            given in the `Link` header.'
          synonyms:
          - --search-after
          args: !SimpleFlagArg
            name: SEARCH_AFTER
          optional: true
        - !Flag
          description: Do not automatically page the responses
          synonyms:
          - --no-paginate
          args: !EmptyFlagArg {}
          optional: true
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "usage: hca dss get-bundles-all [-h] --replica {aws,gcp} [--prefix\
          \ PREFIX]\n                               [--token TOKEN] [--per-page PER_PAGE]\n\
          \                               [--search-after SEARCH_AFTER] [--no-paginate]\n\
          \nLists all the bundles available in the data-store, responses will be returned\
          \ in a paginated format, at most 500 values shall be returned at a time.\
          \ Tombstoned bundles will be omitted from the list of bundles available.\n\
          \nOptional Arguments:\n  -h, --help            show this help message and\
          \ exit\n\nRequired Arguments:\n  --replica {aws,gcp}   Replica to fetch\
          \ from.\n  --prefix PREFIX       Used to specify the beginning of a particular\
          \ bundle UUID.  Capitalized letters will be lower-cased as is done when\
          \ users submit a uuid (all uuids have lower-cased letters upon ingestion\
          \ into the dss).  Characters other than letters, numbers, and dashes are\
          \ not allowed and will error.\n                        The specified character(s)\
          \ will return all available bundle uuids starting with that character(s).\n\
          \  --token TOKEN         Token to manage retries.  End users constructing\
          \ queries should not set this parameter.\n  --per-page PER_PAGE   Max number\
          \ of results to return per page.\n  --search-after SEARCH_AFTER\n      \
          \                  **Search-After-Context**. An internal state pointer parameter\
          \ for use with pagination. This parameter is referenced by the `Link` header\
          \ as described in the \"Pagination\" section. The API client should not\
          \ need to set this parameter directly; it should instead directly fetch\
          \ the URL given in the `Link` header.\n  --no-paginate         Do not automatically\
          \ page the responses\n\n"
        generated_using: *id003
      - !Command
        command:
        - hca
        - dss
        - get-events
        positional: []
        named:
        - !Flag
          description: '[--per-page PER_PAGE]'
          synonyms:
          - --replica
          args: !ChoiceFlagArg
            choices: !!set
              gcp:
              aws:
          optional: true
        - !Flag
          description: Timestamp to begin replaying events, in DSS_VERSION format.  If
            this is not provided, replay from the earliest event.
          synonyms:
          - --from-date
          args: !SimpleFlagArg
            name: FROM_DATE
          optional: true
        - !Flag
          description: Timestamp to stop replaying events, in DSS_VERSION format.  If
            this is not provided, replay to the latest event.
          synonyms:
          - --to-date
          args: !SimpleFlagArg
            name: TO_DATE
          optional: true
        - !Flag
          description: Max number of results to return per page.
          synonyms:
          - --per-page
          args: !SimpleFlagArg
            name: PER_PAGE
          optional: true
        - !Flag
          description: Token to manage retries.  End users constructing queries should
            not set this parameter.
          synonyms:
          - --token
          args: !SimpleFlagArg
            name: TOKEN
          optional: true
        - !Flag
          description: Do not automatically page the responses
          synonyms:
          - --no-paginate
          args: !EmptyFlagArg {}
          optional: true
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "usage: hca dss get-events [-h] [--from-date FROM_DATE] [--to-date\
          \ TO_DATE]\n                          --replica {aws,gcp} [--per-page PER_PAGE]\n\
          \                          [--token TOKEN] [--no-paginate]\n\nReturn urls\
          \ where event data is available, with manifest of contents.\n\nOptional\
          \ Arguments:\n  -h, --help            show this help message and exit\n\
          \  --from-date FROM_DATE\n                        Timestamp to begin replaying\
          \ events, in DSS_VERSION format.  If this is not provided, replay from the\
          \ earliest event.\n  --to-date TO_DATE     Timestamp to stop replaying events,\
          \ in DSS_VERSION format.  If this is not provided, replay to the latest\
          \ event.\n\nRequired Arguments:\n  --replica {aws,gcp}   Replica to fetch\
          \ from.\n  --per-page PER_PAGE   Max number of results to return per page.\n\
          \  --token TOKEN         Token to manage retries.  End users constructing\
          \ queries should not set this parameter.\n  --no-paginate         Do not\
          \ automatically page the responses\n\n"
        generated_using: *id003
      - !Command
        command:
        - hca
        - dss
        - get-collections
        positional: []
        named:
        - !Flag
          description: Max number of results to return per page.
          synonyms:
          - --per-page
          args: !SimpleFlagArg
            name: PER_PAGE
          optional: true
        - !Flag
          description: An internal state pointer parameter for use with pagination.
            This parameter is referenced by the `Link` header as described in the
            "Pagination" section. The API client should not need to set this parameter
            directly; it should instead directly fetch the URL given in the `Link`
            header.
          synonyms:
          - --start-at
          args: !SimpleFlagArg
            name: START_AT
          optional: true
        - !Flag
          description: Do not automatically page the responses
          synonyms:
          - --no-paginate
          args: !EmptyFlagArg {}
          optional: true
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "usage: hca dss get-collections [-h] [--per-page PER_PAGE]\n  \
          \                             [--start-at START_AT] [--no-paginate]\n\n\
          Return a list of a user's collections.\nCollections are sets of links to\
          \ files, bundles, other collections, or fragments of JSON metadata files.\
          \ Each entry in the input set of links is checked for referential integrity\
          \ (the link target must exist in the replica referenced). Up to 1000 items\
          \ can be referenced in a new collection, or added or removed using `PATCH\
          \ /collections`. New collections are private to the authenticated user.\n\
          Collection items are de-duplicated (if an identical item is given multiple\
          \ times, it will only be added once).\nCollections are replicated across\
          \ storage replicas similarly to files and bundles.\n\nOptional Arguments:\n\
          \  -h, --help           show this help message and exit\n  --per-page PER_PAGE\
          \  Max number of results to return per page.\n  --start-at START_AT  An\
          \ internal state pointer parameter for use with pagination. This parameter\
          \ is referenced by the `Link` header as described in the \"Pagination\"\
          \ section. The API client should not need to set this parameter directly;\
          \ it should instead directly fetch the URL given in the `Link` header.\n\
          \  --no-paginate        Do not automatically page the responses\n\n"
        generated_using: *id003
      - !Command
        command:
        - hca
        - dss
        - put-file
        positional: []
        named:
        - !Flag
          description: User ID who is creating this file.
          synonyms:
          - --creator-uid
          args: !SimpleFlagArg
            name: CREATOR_UID
          optional: true
        - !Flag
          description: Cloud bucket URL for source data.  Example is "s3://bucket_name/serious_dna.fa"
            .
          synonyms:
          - --source-url
          args: !SimpleFlagArg
            name: SOURCE_URL
          optional: true
        - !Flag
          description: A RFC4122-compliant ID for the file.
          synonyms:
          - --uuid
          args: !SimpleFlagArg
            name: UUID
          optional: true
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag: !Flag
          description: Timestamp of file creation in DSS_VERSION format.  If this
            is not provided, the latest version is returned.
          synonyms:
          - --version
          args: !SimpleFlagArg
            name: VERSION
          optional: true
        help_text: "usage: hca dss put-file [-h] --creator-uid CREATOR_UID --source-url\
          \ SOURCE_URL\n                        --uuid UUID --version VERSION\n\n\
          Create a new version of a file with a given UUID. The contents of the file\
          \ are provided by the client by reference using a cloud object storage URL.\
          \ The file on the cloud object storage service must have metadata set listing\
          \ the file checksums and content-type.\nThe metadata fields required are:\n\
          - hca-dss-sha256: SHA-256 checksum of the file\n- hca-dss-sha1: SHA-1 checksum\
          \ of the file\n- hca-dss-s3_etag: S3 ETAG checksum of the file.  See https://stackoverflow.com/q/12186993\
          \ for the general algorithm for how checksum is calculated.  For files smaller\
          \ than 64MB, this is the MD5 checksum of the file.  For files larger than\
          \ 64MB but smaller than 640,000MB, we use 64MB chunks.  For files larger\
          \ than 640,000MB, we use a chunk size equal to the total file size divided\
          \ by 10000, rounded up to the nearest MB. MB, in this section, refers to\
          \ 1,048,576 bytes.  Note that 640,000MB is not the same as 640GB!\n- hca-dss-crc32c:\
          \ CRC-32C checksum of the file\n\nOptional Arguments:\n  -h, --help    \
          \        show this help message and exit\n\nRequired Arguments:\n  --creator-uid\
          \ CREATOR_UID\n                        User ID who is creating this file.\n\
          \  --source-url SOURCE_URL\n                        Cloud bucket URL for\
          \ source data.  Example is \"s3://bucket_name/serious_dna.fa\" .\n  --uuid\
          \ UUID           A RFC4122-compliant ID for the file.\n  --version VERSION\
          \     Timestamp of file creation in DSS_VERSION format.  If this is not\
          \ provided, the latest version is returned.\n\n"
        generated_using: *id003
      - !Command
        command:
        - hca
        - dss
        - get-event
        positional: []
        named:
        - !Flag
          description: Bundle unique ID.
          synonyms:
          - --uuid
          args: !SimpleFlagArg
            name: UUID
          optional: true
        - !Flag
          description: Replica to fetch from.
          synonyms:
          - --replica
          args: !ChoiceFlagArg
            choices: !!set
              gcp:
              aws:
          optional: true
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag: !Flag
          description: Timestamp of bundle creation in DSS_VERSION format.
          synonyms:
          - --version
          args: !SimpleFlagArg
            name: VERSION
          optional: true
        help_text: "usage: hca dss get-event [-h] --uuid UUID --version VERSION --replica\n\
          \                         {aws,gcp}\n\nGiven a bundle UUID and version,\
          \ return the bundle metadata document.\n\nOptional Arguments:\n  -h, --help\
          \           show this help message and exit\n\nRequired Arguments:\n  --uuid\
          \ UUID          Bundle unique ID.\n  --version VERSION    Timestamp of bundle\
          \ creation in DSS_VERSION format.\n  --replica {aws,gcp}  Replica to fetch\
          \ from.\n\n"
        generated_using: *id003
      - !Command
        command:
        - hca
        - dss
        - get-bundle
        positional: []
        named:
        - !Flag
          description: Bundle unique ID.
          synonyms:
          - --uuid
          args: !SimpleFlagArg
            name: UUID
          optional: true
        - !Flag
          description: Replica to fetch from.
          synonyms:
          - --replica
          args: !ChoiceFlagArg
            choices: !!set
              gcp:
              aws:
          optional: true
        - !Flag
          description: "When set to true, the response will contain API-specific URLs\
            \ that are tied to the specified replica, for example `gs://bucket/object`\
            \ or `s3://bucket/object`\nThis parameter is mutually exclusive with the\
            \ presigned urls parameter. The use of presigned URLs is recommended for\
            \ data access. Cloud native URLs are currently provided for a limited\
            \ set of use cases and may not be provided in the future. If cloud native\
            \ URLs are required, please contact the data store team regarding the\
            \ credentials necessary to use them."
          synonyms:
          - --directurls
          args: !SimpleFlagArg
            name: DIRECTURLS
          optional: true
        - !Flag
          description: Include presigned URLs in the response.  This is mutually exclusive
            with the directurls parameter.
          synonyms:
          - --presignedurls
          args: !SimpleFlagArg
            name: PRESIGNEDURLS
          optional: true
        - !Flag
          description: Token to manage retries.  End users constructing queries should
            not set this parameter.
          synonyms:
          - --token
          args: !SimpleFlagArg
            name: TOKEN
          optional: true
        - !Flag
          description: Max number of results to return per page.
          synonyms:
          - --per-page
          args: !SimpleFlagArg
            name: PER_PAGE
          optional: true
        - !Flag
          description: An internal state pointer parameter for use with pagination.
            This parameter is referenced by the `Link` header as described in the
            "Pagination" section. The API client should not need to set this parameter
            directly; it should instead directly fetch the URL given in the `Link`
            header.
          synonyms:
          - --start-at
          args: !SimpleFlagArg
            name: START_AT
          optional: true
        - !Flag
          description: Do not automatically page the responses
          synonyms:
          - --no-paginate
          args: !EmptyFlagArg {}
          optional: true
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag: !Flag
          description: Timestamp of bundle creation in DSS_VERSION format.
          synonyms:
          - --version
          args: !SimpleFlagArg
            name: VERSION
          optional: true
        help_text: "usage: hca dss get-bundle [-h] --uuid UUID [--version VERSION]\
          \ --replica\n                          {aws,gcp} [--directurls DIRECTURLS]\n\
          \                          [--presignedurls PRESIGNEDURLS] [--token TOKEN]\n\
          \                          [--per-page PER_PAGE] [--start-at START_AT]\n\
          \                          [--no-paginate]\n\nGiven a bundle UUID, return\
          \ the latest version of that bundle.  If the version is provided, that version\
          \ of the bundle is returned instead.\n\nOptional Arguments:\n  -h, --help\
          \            show this help message and exit\n\nRequired Arguments:\n  --uuid\
          \ UUID           Bundle unique ID.\n  --version VERSION     Timestamp of\
          \ bundle creation in DSS_VERSION format.\n  --replica {aws,gcp}   Replica\
          \ to fetch from.\n  --directurls DIRECTURLS\n                        When\
          \ set to true, the response will contain API-specific URLs that are tied\
          \ to the specified replica, for example `gs://bucket/object` or `s3://bucket/object`\n\
          \                        \n                        This parameter is mutually\
          \ exclusive with the presigned urls parameter. The use of presigned URLs\
          \ is recommended for data access. Cloud native URLs are currently provided\
          \ for a limited set of use cases and may not be provided in the future.\
          \ If cloud native URLs are required, please contact the data store team\
          \ regarding the credentials necessary to use them.\n  --presignedurls PRESIGNEDURLS\n\
          \                        Include presigned URLs in the response.  This is\
          \ mutually exclusive with the directurls parameter.\n  --token TOKEN   \
          \      Token to manage retries.  End users constructing queries should not\
          \ set this parameter.\n  --per-page PER_PAGE   Max number of results to\
          \ return per page.\n  --start-at START_AT   An internal state pointer parameter\
          \ for use with pagination. This parameter is referenced by the `Link` header\
          \ as described in the \"Pagination\" section. The API client should not\
          \ need to set this parameter directly; it should instead directly fetch\
          \ the URL given in the `Link` header.\n  --no-paginate         Do not automatically\
          \ page the responses\n\n"
        generated_using: *id003
      - !Command
        command:
        - hca
        - dss
        - delete-collection
        positional: []
        named:
        - !Flag
          description: A RFC4122-compliant ID for the collection.
          synonyms:
          - --uuid
          args: !SimpleFlagArg
            name: UUID
          optional: true
        - !Flag
          description: Replica to delete from.
          synonyms:
          - --replica
          args: !ChoiceFlagArg
            choices: !!set
              gcp:
              aws:
          optional: true
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "usage: hca dss delete-collection [-h] --uuid UUID --replica {aws,gcp}\n\
          \nDelete a collection.\n\nOptional Arguments:\n  -h, --help           show\
          \ this help message and exit\n\nRequired Arguments:\n  --uuid UUID     \
          \     A RFC4122-compliant ID for the collection.\n  --replica {aws,gcp}\
          \  Replica to delete from.\n\n"
        generated_using: *id003
      - !Command
        command:
        - hca
        - dss
        - put-subscription
        positional: []
        named:
        - !Flag
          description: ''
          synonyms:
          - --callback-url
          args: !SimpleFlagArg
            name: CALLBACK_URL
          optional: true
        - !Flag
          description: ''
          synonyms:
          - --replica
          args: !ChoiceFlagArg
            choices: !!set
              gcp:
              aws:
          optional: true
        - !Flag
          description: "The set of bundle metadata items to be included in the payload\
            \ of a notification request to a subscription endpoint. Each property\
            \ in this object represents an attachment to the notification payload.\
            \ Each attachment will be a child property of the `attachments` property\
            \ of the payload. The name of such a child property can be chosen freely\
            \ provided it does not start with an underscore.\nFor example, if the\
            \ subscription is\n```\n{\n\"attachments\": {\n\"taxon\": {\n\"type\"\
            : \"jmespath\",\n\"expression\": \"files.biomaterial_json.biomaterials[].content.biomaterial_core.ncbi_taxon_id[]\"\
            \n}\n}\n}\n```\nthe corresponding notification payload will contain the\
            \ following entry\n```\n\"attachments\": {\n\"taxon\": [9606, 9606]\n\
            }\n```\nIf a general error occurs during the processing of attachments,\
            \ the notification will be sent with `attachments` containing only the\
            \ reserved `_errors` attachment containing a string describing the error.\
            \ If an error occurs during the processing of a specific attachment, the\
            \ notification will be sent with all successfully processed attachments\
            \ and additionally the `_errors` attachment containing an object with\
            \ one property for each failed attachment. For example,\n```\n\"attachments\"\
            : {\n\"taxon\": [9606, 9606]\n\"_errors\" {\n\"biomaterial\": \"Some error\
            \ occurred\"\n}\n}\n```\nThe value of the `attachments` property must\
            \ be less than or equal to 128 KiB in size when serialized to JSON and\
            \ encoded as UTF-8. If it is not, the notification will be sent with\n\
            \"attachments\": {\n\"_errors\": \"Attachments too large (131073 bytes)\"\
            \n}"
          synonyms:
          - --attachments
          args: !SimpleFlagArg
            name: ATTACHMENTS
          optional: true
        - !Flag
          description: "The MIME type describing the encoding of the request body\
            \ * `application/json` - the HTTP request body is the notification payload\
            \ as JSON * `multipart/form-data` - the HTTP request body is a list of\
            \ form fields, each consisting of a name\nand a corresponding value. See\
            \ https://tools.ietf.org/html/rfc7578 for details on this encoding.\n\
            The actual notification payload will be placed as JSON into a field of\
            \ the name specified via\n`payload_form_field`."
          synonyms:
          - --encoding
          args: !ChoiceFlagArg
            choices: !!set
              application/json:
              multipart/form-data:
          optional: true
        - !Flag
          description: An Elasticsearch query for restricting the set of bundles for
            which the subscriber is notified. The subscriber will only be notified
            for newly indexed bundles that match the given query. If this parameter
            is present the subscription will be of type `elasticsearch`, otherwise
            it will be of type `jmespath`.
          synonyms:
          - --es-query
          args: !SimpleFlagArg
            name: ES_QUERY
          optional: true
        - !Flag
          description: "A collection of static form fields to be supplied in the request\
            \ body, alongside the actual notification payload. The value of each field\
            \ must be a string. For example, if the subscriptions has this property\
            \ set to `{\"foo\" : \"bar\"}`, the corresponding notification HTTP request\
            \ body will consist of a multipart frame with two frames,\n```\n----------------2769baffc4f24cbc83ced26aa0c2f712\n\
            Content-Disposition: form-data; name=\"foo\"\nbar\n----------------2769baffc4f24cbc83ced26aa0c2f712\n\
            Content-Disposition: form-data; name=\"payload\"\n{\"transaction_id\"\
            : \"301c9079-3b20-4311-a131-bcda9b7f08ba\", \"subscription_id\": ...\n\
            ```\nSince the type of this property is `object`, multi-valued fields\
            \ are not supported. This property is ignored unless `encoding` is `multipart/form-data`."
          synonyms:
          - --form-fields
          args: !SimpleFlagArg
            name: FORM_FIELDS
          optional: true
        - !Flag
          description: An optional key ID to use with `hmac_secret_key`.
          synonyms:
          - --hmac-key-id
          args: !SimpleFlagArg
            name: HMAC_KEY_ID
          optional: true
        - !Flag
          description: The key for signing requests to the subscriber's URL. The signature
            will be constructed according to https://tools.ietf.org/html/draft-cavage-http-signatures
            and transmitted in the HTTP `Authorization` header.
          synonyms:
          - --hmac-secret-key
          args: !SimpleFlagArg
            name: HMAC_SECRET_KEY
          optional: true
        - !Flag
          description: An JMESPath query for restricting the set of bundles for which
            the subscriber is notified. The subscriber will only be notified for new
            bundles that match the given query. If `es_query` is specified, the subscription
            will be of type `elasticsearch`. If `es_query` is not present, the subscription
            will be of type `jmespath`
          synonyms:
          - --jmespath-query
          args: !SimpleFlagArg
            name: JMESPATH_QUERY
          optional: true
        - !Flag
          description: The HTTP request method to use when delivering a notification
            to the subscriber.
          synonyms:
          - --method
          args: !ChoiceFlagArg
            choices: !!set
              POST:
              PUT:
          optional: true
        - !Flag
          description: The name of the form field that will hold the notification
            payload when the request is made. If the default name of the payload field
            collides with that of a field in `form_fields`, this porperty can be used
            to rename the payload and avoid the collision. This property is ignored
            unless `encoding` is `multipart/form-data`.
          synonyms:
          - --payload-form-field
          args: !SimpleFlagArg
            name: PAYLOAD_FORM_FIELD
          optional: true
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "usage: hca dss put-subscription [-h] [--attachments ATTACHMENTS]\n\
          \                                --callback-url CALLBACK_URL\n         \
          \                       [--encoding {application/json,multipart/form-data}]\n\
          \                                [--es-query ES_QUERY]\n               \
          \                 [--form-fields FORM_FIELDS]\n                        \
          \        [--hmac-key-id HMAC_KEY_ID]\n                                [--hmac-secret-key\
          \ HMAC_SECRET_KEY]\n                                [--jmespath-query JMESPATH_QUERY]\n\
          \                                [--method {POST,PUT}]\n               \
          \                 [--payload-form-field PAYLOAD_FORM_FIELD]\n          \
          \                      --replica {aws,gcp}\n\nRegister an HTTP endpoint\
          \ that is to be notified when a given event occurs.\nEach user is allowed\
          \ 100 subscriptions, a limit that may be increased in the future. Concerns\
          \ about notification service limitations should be routed to the DSS development\
          \ team.\n\nOptional Arguments:\n  -h, --help            show this help message\
          \ and exit\n  --attachments ATTACHMENTS\n                        The set\
          \ of bundle metadata items to be included in the payload of a notification\
          \ request to a subscription endpoint. Each property in this object represents\
          \ an attachment to the notification payload. Each attachment will be a child\
          \ property of the `attachments` property of the payload. The name of such\
          \ a child property can be chosen freely provided it does not start with\
          \ an underscore.\n                        For example, if the subscription\
          \ is\n                        ```\n                        {\n         \
          \                 \"attachments\": {\n                            \"taxon\"\
          : {\n                              \"type\": \"jmespath\",\n           \
          \                   \"expression\": \"files.biomaterial_json.biomaterials[].content.biomaterial_core.ncbi_taxon_id[]\"\
          \n                            }\n                          }\n         \
          \               }\n                        ```\n                       \
          \ the corresponding notification payload will contain the following entry\n\
          \                        ```\n                        \"attachments\": {\n\
          \                          \"taxon\": [9606, 9606]\n                   \
          \     }\n                        ```\n                        If a general\
          \ error occurs during the processing of attachments, the notification will\
          \ be sent with `attachments` containing only the reserved `_errors` attachment\
          \ containing a string describing the error. If an error occurs during the\
          \ processing of a specific attachment, the notification will be sent with\
          \ all successfully processed attachments and additionally the `_errors`\
          \ attachment containing an object with one property for each failed attachment.\
          \ For example,\n                        ```\n                        \"\
          attachments\": {\n                          \"taxon\": [9606, 9606]\n  \
          \                        \"_errors\" {\n                            \"biomaterial\"\
          : \"Some error occurred\"\n                          }\n               \
          \         }\n                        ```\n                        The value\
          \ of the `attachments` property must be less than or equal to 128 KiB in\
          \ size when serialized to JSON and encoded as UTF-8. If it is not, the notification\
          \ will be sent with\n                        \"attachments\": {\n      \
          \                    \"_errors\": \"Attachments too large (131073 bytes)\"\
          \n                        }\n\nRequired Arguments:\n  --callback-url CALLBACK_URL\n\
          \                        The subscriber's URL. An HTTP request is made to\
          \ the specified URL for every attempt to deliver a notification to the subscriber.\
          \ If the HTTP response code is 2XX, the delivery attempt is considered successful.\
          \ Otherwise, more attempts will be made with an exponentially increasing\
          \ delay between attempts, until an attempt is successful or the a maximum\
          \ number of attempts is reached.\n                        Occasionally,\
          \ duplicate notifications may be sent. It is up to the receiver of the notification\
          \ to tolerate duplicate notifications.\n  --encoding {application/json,multipart/form-data}\n\
          \                        The MIME type describing the encoding of the request\
          \ body * `application/json` - the HTTP request body is the notification\
          \ payload as JSON * `multipart/form-data` - the HTTP request body is a list\
          \ of form fields, each consisting of a name\n                          and\
          \ a corresponding value. See https://tools.ietf.org/html/rfc7578 for details\
          \ on this encoding.\n                          The actual notification payload\
          \ will be placed as JSON into a field of the name specified via\n      \
          \                    `payload_form_field`.\n  --es-query ES_QUERY   An Elasticsearch\
          \ query for restricting the set of bundles for which the subscriber is notified.\
          \ The subscriber will only be notified for newly indexed bundles that match\
          \ the given query. If this parameter is present the subscription will be\
          \ of type `elasticsearch`, otherwise it will be of type `jmespath`.\n  --form-fields\
          \ FORM_FIELDS\n                        A collection of static form fields\
          \ to be supplied in the request body, alongside the actual notification\
          \ payload. The value of each field must be a string. For example, if the\
          \ subscriptions has this property set to `{\"foo\" : \"bar\"}`, the corresponding\
          \ notification HTTP request body will consist of a multipart frame with\
          \ two frames,\n                        ```\n                        ----------------2769baffc4f24cbc83ced26aa0c2f712\n\
          \                        Content-Disposition: form-data; name=\"foo\"\n\
          \                        bar\n                        ----------------2769baffc4f24cbc83ced26aa0c2f712\n\
          \                        Content-Disposition: form-data; name=\"payload\"\
          \n                        {\"transaction_id\": \"301c9079-3b20-4311-a131-bcda9b7f08ba\"\
          , \"subscription_id\": ...\n                        ```\n              \
          \          Since the type of this property is `object`, multi-valued fields\
          \ are not supported. This property is ignored unless `encoding` is `multipart/form-data`.\n\
          \  --hmac-key-id HMAC_KEY_ID\n                        An optional key ID\
          \ to use with `hmac_secret_key`.\n  --hmac-secret-key HMAC_SECRET_KEY\n\
          \                        The key for signing requests to the subscriber's\
          \ URL. The signature will be constructed according to https://tools.ietf.org/html/draft-cavage-http-signatures\
          \ and transmitted in the HTTP `Authorization` header.\n  --jmespath-query\
          \ JMESPATH_QUERY\n                        An JMESPath query for restricting\
          \ the set of bundles for which the subscriber is notified. The subscriber\
          \ will only be notified for new bundles that match the given query. If `es_query`\
          \ is specified, the subscription will be of type `elasticsearch`. If `es_query`\
          \ is not present, the subscription will be of type `jmespath`\n  --method\
          \ {POST,PUT}   The HTTP request method to use when delivering a notification\
          \ to the subscriber.\n  --payload-form-field PAYLOAD_FORM_FIELD\n      \
          \                  The name of the form field that will hold the notification\
          \ payload when the request is made. If the default name of the payload field\
          \ collides with that of a field in `form_fields`, this porperty can be used\
          \ to rename the payload and avoid the collision. This property is ignored\
          \ unless `encoding` is `multipart/form-data`.\n  --replica {aws,gcp}   Replica\
          \ to write to.\n\n"
        generated_using: *id003
      - !Command
        command:
        - hca
        - dss
        - put-collection
        positional: []
        named:
        - !Flag
          description: ''
          synonyms:
          - --description
          - --details
          args: !SimpleFlagArg
            name: DESCRIPTION
          optional: true
        - !Flag
          description: ''
          synonyms:
          - --name
          - --replica
          - --uuid
          args: !SimpleFlagArg
            name: NAME
          optional: true
        - !Flag
          description: A list of objects describing links to files, bundles, other
            collections, and metadata fragments that are part of the collection.
          synonyms:
          - --contents
          args: !RepeatFlagArg
            name: CONTENTS
          optional: true
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag: !Flag
          description: Timestamp of collection creation in DSS_VERSION format.
          synonyms:
          - --version
          args: !SimpleFlagArg
            name: VERSION
          optional: true
        help_text: "usage: hca dss put-collection [-h] --contents CONTENTS [CONTENTS\
          \ ...]\n                              --description DESCRIPTION --details\
          \ DETAILS\n                              --name NAME --replica {aws,gcp}\
          \ --uuid UUID\n                              --version VERSION\n\nCreate\
          \ a new collection.\nCollections are sets of links to files, bundles, other\
          \ collections, or fragments of JSON metadata files. Each entry in the input\
          \ set of links is checked for referential integrity (the link target must\
          \ exist in the replica referenced). Up to 1000 items can be referenced in\
          \ a new collection, or added or removed using `PATCH /collections`. New\
          \ collections are private to the authenticated user.\nCollection items are\
          \ de-duplicated (if an identical item is given multiple times, it will only\
          \ be added once).\nCollections are replicated across storage replicas similarly\
          \ to files and bundles.\n\nOptional Arguments:\n  -h, --help           \
          \ show this help message and exit\n\nRequired Arguments:\n  --contents CONTENTS\
          \ [CONTENTS ...]\n                        A list of objects describing links\
          \ to files, bundles, other collections, and metadata fragments that are\
          \ part of the collection.\n  --description DESCRIPTION\n               \
          \         A long description of the collection, formatted in Markdown.\n\
          \  --details DETAILS     Supplementary JSON metadata for the collection.\n\
          \  --name NAME           A short name identifying the collection.\n  --replica\
          \ {aws,gcp}   Replica to write to.\n  --uuid UUID           A RFC4122-compliant\
          \ ID for the collection.\n  --version VERSION     Timestamp of collection\
          \ creation in DSS_VERSION format.\n\n"
        generated_using: *id003
      - !Command
        command:
        - hca
        - dss
        - patch-collection
        positional: []
        named:
        - !Flag
          description: List of new items to add to the collection. Items are de-duplicated
            (if an identical item is already present in the collection or given multiple
            times, it will only be added once).
          synonyms:
          - --add-contents
          args: !SimpleFlagArg
            name: ADD_CONTENTS
          optional: true
        - !Flag
          description: New description for the collection.
          synonyms:
          - --description
          args: !SimpleFlagArg
            name: DESCRIPTION
          optional: true
        - !Flag
          description: New details for the collection.
          synonyms:
          - --details
          args: !SimpleFlagArg
            name: DETAILS
          optional: true
        - !Flag
          description: New name for the collection.
          synonyms:
          - --name
          args: !SimpleFlagArg
            name: NAME
          optional: true
        - !Flag
          description: List of items to remove from the collection. Items must match
            exactly to be removed. Items not found in the collection are ignored.
          synonyms:
          - --remove-contents
          args: !SimpleFlagArg
            name: REMOVE_CONTENTS
          optional: true
        - !Flag
          description: A RFC4122-compliant ID of the collection to update.
          synonyms:
          - --uuid
          args: !SimpleFlagArg
            name: UUID
          optional: true
        - !Flag
          description: Replica to update the collection on. Updates are propagated
            to other replicas.
          synonyms:
          - --replica
          args: !ChoiceFlagArg
            choices: !!set
              gcp:
              aws:
          optional: true
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag: !Flag
          description: Timestamp of the collection to update in DSS_VERSION format
            format (required).
          synonyms:
          - --version
          args: !SimpleFlagArg
            name: VERSION
          optional: true
        help_text: "usage: hca dss patch-collection [-h] [--add-contents ADD_CONTENTS]\n\
          \                                [--description DESCRIPTION]\n         \
          \                       [--details DETAILS] [--name NAME]\n            \
          \                    [--remove-contents REMOVE_CONTENTS] --uuid\n      \
          \                          UUID --replica {aws,gcp} --version VERSION\n\n\
          Add or remove items from a collection. A specific version of the collection\
          \ to update must be provided, and a new version will be written.\n\nOptional\
          \ Arguments:\n  -h, --help            show this help message and exit\n\
          \  --add-contents ADD_CONTENTS\n                        List of new items\
          \ to add to the collection. Items are de-duplicated (if an identical item\
          \ is already present in the collection or given multiple times, it will\
          \ only be added once).\n  --description DESCRIPTION\n                  \
          \      New description for the collection.\n  --details DETAILS     New\
          \ details for the collection.\n  --name NAME           New name for the\
          \ collection.\n  --remove-contents REMOVE_CONTENTS\n                   \
          \     List of items to remove from the collection. Items must match exactly\
          \ to be removed. Items not found in the collection are ignored.\n\nRequired\
          \ Arguments:\n  --uuid UUID           A RFC4122-compliant ID of the collection\
          \ to update.\n  --replica {aws,gcp}   Replica to update the collection on.\
          \ Updates are propagated to other replicas.\n  --version VERSION     Timestamp\
          \ of the collection to update in DSS_VERSION format format (required).\n\
          \n"
        generated_using: *id003
      - !Command
        command:
        - hca
        - dss
        - logout
        positional:
        - !Positional
          description: ''
          position: 0
          name: hca
          optional: false
        named:
        - !Flag
          description: ''
          synonyms:
          - --log-level
          args: !ChoiceFlagArg
            choices: !!set
              ERROR:
              INFO:
              DEBUG:
              WARNING:
              CRITICAL:
          optional: true
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: ''
          synonyms:
          - -h
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag: !Flag
          description: ''
          synonyms:
          - --version
          args: !EmptyFlagArg {}
          optional: true
        help_text: "usage: hca [-h] [--version] [--log-level {INFO,WARNING,ERROR,DEBUG,CRITICAL}]\n\
          \           {clear-hca-cache,help,upload,dss,auth} ...\nhca: error: unrecognized\
          \ arguments: --usage\n"
        generated_using: &id004
        - --usage
      - !Command
        command:
        - hca
        - dss
        - download-collection
        positional: []
        named:
        - !Flag
          description: The uuid of the collection to download
          synonyms:
          - --uuid
          args: !SimpleFlagArg
            name: UUID
          optional: true
        - !Flag
          description: "the replica to download from. The supported\nreplicas are:\
            \ aws for Amazon Web Services, and gcp for\nGoogle Cloud Platform. [aws,\
            \ gcp]"
          synonyms:
          - --replica
          args: !SimpleFlagArg
            name: REPLICA
          optional: true
        - !Flag
          description: "The directory into which to download\n"
          synonyms:
          - --download-dir
          args: !SimpleFlagArg
            name: DOWNLOAD_DIR
          optional: true
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag: !Flag
          description: "The version to download, else if not specified,\ndownload\
            \ the latest. The version is a timestamp of bundle creation\nin RFC3339"
          synonyms:
          - --version
          args: !SimpleFlagArg
            name: VERSION
          optional: true
        help_text: "usage: hca dss download-collection [-h] --uuid UUID --replica\
          \ REPLICA\n                                   [--version VERSION]\n    \
          \                               [--download-dir DOWNLOAD_DIR]\n\nDownload\
          \ a bundle and save it to the local filesystem as a directory.\n\nOptional\
          \ Arguments:\n  -h, --help            show this help message and exit\n\n\
          Required Arguments:\n  --uuid UUID           The uuid of the collection\
          \ to download\n  --replica REPLICA     the replica to download from. The\
          \ supported\n                        replicas are: aws for Amazon Web Services,\
          \ and gcp for\n                        Google Cloud Platform. [aws, gcp]\n\
          \  --version VERSION     The version to download, else if not specified,\n\
          \                        download the latest. The version is a timestamp\
          \ of bundle creation\n                        in RFC3339\n  --download-dir\
          \ DOWNLOAD_DIR\n                        The directory into which to download\n\
          \n"
        generated_using: *id003
      - !Command
        command:
        - hca
        - dss
        - post-search
        positional: []
        named:
        - !Flag
          description: Elasticsearch query
          synonyms:
          - --es-query
          args: !SimpleFlagArg
            name: ES_QUERY
          optional: true
        - !Flag
          description: Specifies the output format. The default format, `summary`,
            is a list of UUIDs for bundles that match the query. Set this parameter
            to `raw` to get the verbatim JSON metadata for bundles that match the
            query. When using `output_format raw` the `per_page` size is limit to
            no more than 10 to avoid excessively large response sizes.
          synonyms:
          - --output-format
          args: !ChoiceFlagArg
            choices: !!set
              summary:
              raw:
          optional: true
        - !Flag
          description: Replica to search.
          synonyms:
          - --replica
          args: !ChoiceFlagArg
            choices: !!set
              gcp:
              aws:
          optional: true
        - !Flag
          description: Max number of results to return per page. When using `output_format
            raw` the `per_page` size is limit to no more than 10 to avoid excessively
            large response sizes.
          synonyms:
          - --per-page
          args: !SimpleFlagArg
            name: PER_PAGE
          optional: true
        - !Flag
          description: '**Search-After-Context**. An internal state pointer parameter
            for use with pagination. This parameter is referenced by the `Link` header
            as described in the "Pagination" section. The API client should not need
            to set this parameter directly; it should instead directly fetch the URL
            given in the `Link` header.'
          synonyms:
          - --search-after
          args: !SimpleFlagArg
            name: SEARCH_AFTER
          optional: true
        - !Flag
          description: Do not automatically page the responses
          synonyms:
          - --no-paginate
          args: !EmptyFlagArg {}
          optional: true
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "usage: hca dss post-search [-h] --es-query ES_QUERY\n        \
          \                   [--output-format {summary,raw}] --replica {aws,gcp}\n\
          \                           [--per-page PER_PAGE] [--search-after SEARCH_AFTER]\n\
          \                           [--no-paginate]\n\nAccepts Elasticsearch JSON\
          \ query and returns matching bundle identifiers\n# Index design\nThe metadata\
          \ seach index is implemented as a [document-oriented database](https://en.wikipedia.org/wiki/Document-oriented_database)\
          \ using [Elasticsearch](https://www.elastic.co/). The index stores all information\
          \ relevant to a bundle within each bundle document, largely eliminating\
          \ the need for [object-relational mapping](https://en.wikipedia.org/wiki/Object-relational_mapping).\
          \ This design is optimized for queries that filter the data.\n\nTo illustrate\
          \ this concept, say our index stored information on three entities, `foo`,\
          \ `bar`, and `baz`. A foo can have many bars and bars can have many bazes.\
          \ If we were to index bazes in a document-oriented design, the information\
          \ on the foo a bar comes from and the bazes it contains are combined into\
          \ a single document. A example sketch of this is shown below in [JSON-schema](https://en.wikipedia.org/wiki/JSON#JSON_Schema).\n\
          ```\n{\n  \"definitions\": {\n    \"bar\": {\n      \"type\": \"object\"\
          ,\n      \"properties\": {\n        \"uuid\": {\n          \"type\": \"\
          string\",\n          \"format\": \"uuid\"\n        },\n        \"foo\":\
          \ {\n          \"type\": \"object\",\n          \"properties\": {\n    \
          \        \"uuid\": {\n              \"type\": \"string\",\n            \
          \  \"format\": \"uuid\"\n            },\n            ...\n          }\n\
          \        },\n        \"bazes\": {\n          \"type\": \"array\",\n    \
          \      \"items\": {\n            \"type\": \"string\",\n            \"format\"\
          : \"uuid\"\n          }\n        },\n        ...\n      }\n    }\n  }\n\
          }\n```\nThis closely resembles the structure of DSS bundle documents: projects\
          \ have many bundles and bundles have many files. Each bundle document is\
          \ a concatenation of the metadata on the project it belongs to and the files\
          \ it contains.\n# Limitations to index design\nThere are limitations to\
          \ the design of DSS's metadata search index. A few important ones are listed\
          \ below.\n* [Joins](https://en.wikipedia.org/wiki/Join_(SQL)) between bundle\
          \ metadata must be conducted client-side\n* Querying is schema-specific;\
          \ fields or values changed between schema version will break queries that\
          \ use those fields and values\n* A new search index must be built for each\
          \ schema version\n* A lot of metadata is duplicated between documents\n\n\
          Optional Arguments:\n  -h, --help            show this help message and\
          \ exit\n\nRequired Arguments:\n  --es-query ES_QUERY   Elasticsearch query\n\
          \  --output-format {summary,raw}\n                        Specifies the\
          \ output format. The default format, `summary`, is a list of UUIDs for bundles\
          \ that match the query. Set this parameter to `raw` to get the verbatim\
          \ JSON metadata for bundles that match the query. When using `output_format\
          \ raw` the `per_page` size is limit to no more than 10 to avoid excessively\
          \ large response sizes.\n  --replica {aws,gcp}   Replica to search.\n  --per-page\
          \ PER_PAGE   Max number of results to return per page. When using `output_format\
          \ raw` the `per_page` size is limit to no more than 10 to avoid excessively\
          \ large response sizes.\n  --search-after SEARCH_AFTER\n               \
          \         **Search-After-Context**. An internal state pointer parameter\
          \ for use with pagination. This parameter is referenced by the `Link` header\
          \ as described in the \"Pagination\" section. The API client should not\
          \ need to set this parameter directly; it should instead directly fetch\
          \ the URL given in the `Link` header.\n  --no-paginate         Do not automatically\
          \ page the responses\n\n"
        generated_using: *id003
      - !Command
        command:
        - hca
        - dss
        - version.
        positional:
        - !Positional
          description: ''
          position: 0
          name: hca
          optional: false
        - !Positional
          description: ''
          position: 1
          name: dss
          optional: false
        named: []
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: ''
          synonyms:
          - -h
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "usage: hca dss [-h]\n               {get-bundles-all,get-bundles-checkout,delete-bundle,get-bundle,patch-bundle,put-bundle,post-bundles-checkout,get-collections,put-collection,delete-collection,get-collection,patch-collection,get-events,get-event,get-file,head-file,put-file,post-search,get-subscriptions,put-subscription,delete-subscription,get-subscription,login,logout,upload,download,download-manifest,create-version,download-collection}\n\
          \               ...\nhca dss: error: invalid choice: 'version.' (choose\
          \ from 'get-bundles-all', 'get-bundles-checkout', 'delete-bundle', 'get-bundle',\
          \ 'patch-bundle', 'put-bundle', 'post-bundles-checkout', 'get-collections',\
          \ 'put-collection', 'delete-collection', 'get-collection', 'patch-collection',\
          \ 'get-events', 'get-event', 'get-file', 'head-file', 'put-file', 'post-search',\
          \ 'get-subscriptions', 'put-subscription', 'delete-subscription', 'get-subscription',\
          \ 'login', 'logout', 'upload', 'download', 'download-manifest', 'create-version',\
          \ 'download-collection')\n"
        generated_using: *id003
      - !Command
        command:
        - hca
        - dss
        - upload
        positional: []
        named:
        - !Flag
          description: ''
          synonyms:
          - --staging-bucket
          args: !SimpleFlagArg
            name: STAGING_BUCKET
          optional: true
        - !Flag
          description: file path to a directory of files to upload to the replica.
          synonyms:
          - --src-dir
          args: !SimpleFlagArg
            name: SRC_DIR
          optional: true
        - !Flag
          description: "the replica to upload to. The supported replicas are: aws\
            \ for Amazon Web Services, and\ngcp for Google Cloud Platform. [aws, gcp]"
          synonyms:
          - --replica
          args: !SimpleFlagArg
            name: REPLICA
          optional: true
        - !Flag
          description: the time to wait for a file to upload to replica.
          synonyms:
          - --timeout-seconds
          args: !SimpleFlagArg
            name: TIMEOUT_SECONDS
          optional: true
        - !Flag
          description: "if set, will not report upload progress. Note that even if\
            \ this flag\nis not set, progress will not be reported if the logging\
            \ level is higher\nthan INFO or if the session is not interactive."
          synonyms:
          - --no-progress
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: ''
          synonyms:
          - --bundle-uuid
          args: !SimpleFlagArg
            name: BUNDLE_UUID
          optional: true
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "usage: hca dss upload [-h] --src-dir SRC_DIR --replica REPLICA\n\
          \                      --staging-bucket STAGING_BUCKET\n               \
          \       [--timeout-seconds TIMEOUT_SECONDS] [--no-progress]\n          \
          \            [--bundle-uuid BUNDLE_UUID]\n\nUpload a directory of files\
          \ from the local filesystem and create a bundle containing the uploaded\
          \ files.\nThis method requires the use of a client-controlled object storage\
          \ bucket to stage the data for upload.\n\nOptional Arguments:\n  -h, --help\
          \            show this help message and exit\n\nRequired Arguments:\n  --src-dir\
          \ SRC_DIR     file path to a directory of files to upload to the replica.\n\
          \  --replica REPLICA     the replica to upload to. The supported replicas\
          \ are: aws for Amazon Web Services, and\n                        gcp for\
          \ Google Cloud Platform. [aws, gcp]\n  --staging-bucket STAGING_BUCKET\n\
          \                        a client controlled AWS S3 storage bucket to upload\
          \ from.\n  --timeout-seconds TIMEOUT_SECONDS\n                        the\
          \ time to wait for a file to upload to replica.\n  --no-progress       \
          \  if set, will not report upload progress. Note that even if this flag\n\
          \                        is not set, progress will not be reported if the\
          \ logging level is higher\n                        than INFO or if the session\
          \ is not interactive.\n  --bundle-uuid BUNDLE_UUID\n\n"
        generated_using: *id003
      - !Command
        command:
        - hca
        - dss
        - login
        positional: []
        named:
        - !Flag
          description: ''
          synonyms:
          - --access-token
          args: !SimpleFlagArg
            name: ACCESS_TOKEN
          optional: true
        - !Flag
          description: ''
          synonyms:
          - --remote
          args: !EmptyFlagArg {}
          optional: true
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "usage: hca dss login [-h] [--access-token ACCESS_TOKEN] [--remote]\n\
          \nThis command may open a browser window to ask for your\nconsent to use\
          \ web service authentication credentials.\n\nUse --remote if using the CLI\
          \ in a remote environment\n\nOptional Arguments:\n  -h, --help         \
          \   show this help message and exit\n  --access-token ACCESS_TOKEN\n  --remote\n\
          \n"
        generated_using: *id003
      - !Command
        command:
        - hca
        - dss
        - post-bundles-checkout
        positional: []
        named:
        - !Flag
          description: User-owned destination storage bucket.
          synonyms:
          - --destination
          args: !SimpleFlagArg
            name: DESTINATION
          optional: true
        - !Flag
          description: An email address to send status updates to.
          synonyms:
          - --email
          args: !SimpleFlagArg
            name: EMAIL
          optional: true
        - !Flag
          description: A RFC4122-compliant ID for the bundle.
          synonyms:
          - --uuid
          args: !SimpleFlagArg
            name: UUID
          optional: true
        - !Flag
          description: Replica to fetch from.
          synonyms:
          - --replica
          args: !ChoiceFlagArg
            choices: !!set
              gcp:
              aws:
          optional: true
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag: !Flag
          description: Timestamp of file creation in DSS_VERSION format.  If this
            is not provided, the latest version is returned.
          synonyms:
          - --version
          args: !SimpleFlagArg
            name: VERSION
          optional: true
        help_text: "usage: hca dss post-bundles-checkout [-h] [--destination DESTINATION]\n\
          \                                     [--email EMAIL] --uuid UUID\n    \
          \                                 [--version VERSION] --replica {aws,gcp}\n\
          \nInitiate asynchronous checkout of a bundle. The response JSON contains\
          \ a field, `checkout_job_id`, that can be used to query the status of the\
          \ checkout via the `GET /bundles/checkout/{checkout_job_id}` API method.\
          \ FIXME: document the error code returned when the bundle or specified version\
          \ does not exist. TODO: After some time period, the data will be removed.\
          \ TBD: This could be based on initial checkout time or last access time.\n\
          \nOptional Arguments:\n  -h, --help            show this help message and\
          \ exit\n  --destination DESTINATION\n                        User-owned\
          \ destination storage bucket.\n  --email EMAIL         An email address\
          \ to send status updates to.\n\nRequired Arguments:\n  --uuid UUID     \
          \      A RFC4122-compliant ID for the bundle.\n  --version VERSION     Timestamp\
          \ of file creation in DSS_VERSION format.  If this is not provided, the\
          \ latest version is returned.\n  --replica {aws,gcp}   Replica to fetch\
          \ from.\n\n"
        generated_using: *id003
      - !Command
        command:
        - hca
        - dss
        - create-version
        positional:
        - !Positional
          description: ''
          position: 0
          name: hca
          optional: false
        named:
        - !Flag
          description: ''
          synonyms:
          - --log-level
          args: !ChoiceFlagArg
            choices: !!set
              ERROR:
              INFO:
              DEBUG:
              WARNING:
              CRITICAL:
          optional: true
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: ''
          synonyms:
          - -h
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag: !Flag
          description: ''
          synonyms:
          - --version
          args: !EmptyFlagArg {}
          optional: true
        help_text: "usage: hca [-h] [--version] [--log-level {CRITICAL,DEBUG,ERROR,INFO,WARNING}]\n\
          \           {clear-hca-cache,help,upload,dss,auth} ...\nhca: error: unrecognized\
          \ arguments: --usage\n"
        generated_using: *id004
      - !Command
        command:
        - hca
        - dss
        - delete-bundle
        positional: []
        named:
        - !Flag
          description: User-friendly reason for the bundle or timestamp-specfic bundle
            deletion.
          synonyms:
          - --reason
          args: !SimpleFlagArg
            name: REASON
          optional: true
        - !Flag
          description: A RFC4122-compliant ID for the bundle.
          synonyms:
          - --uuid
          args: !SimpleFlagArg
            name: UUID
          optional: true
        - !Flag
          description: Replica to write to.
          synonyms:
          - --replica
          args: !ChoiceFlagArg
            choices: !!set
              gcp:
              aws:
          optional: true
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag: !Flag
          description: Timestamp of bundle creation in DSS_VERSION format.
          synonyms:
          - --version
          args: !SimpleFlagArg
            name: VERSION
          optional: true
        help_text: "usage: hca dss delete-bundle [-h] --reason REASON --uuid UUID\
          \ --replica\n                             {aws,gcp} [--version VERSION]\n\
          \nDelete the bundle with the given UUID. This deletion is applied across\
          \ replicas.\n\nOptional Arguments:\n  -h, --help           show this help\
          \ message and exit\n\nRequired Arguments:\n  --reason REASON      User-friendly\
          \ reason for the bundle or timestamp-specfic bundle deletion.\n  --uuid\
          \ UUID          A RFC4122-compliant ID for the bundle.\n  --replica {aws,gcp}\
          \  Replica to write to.\n  --version VERSION    Timestamp of bundle creation\
          \ in DSS_VERSION format.\n\n"
        generated_using: *id003
      - !Command
        command:
        - hca
        - dss
        - head-file
        positional: []
        named:
        - !Flag
          description: A RFC4122-compliant ID for the file.
          synonyms:
          - --uuid
          args: !SimpleFlagArg
            name: UUID
          optional: true
        - !Flag
          description: Replica to fetch from.
          synonyms:
          - --replica
          args: !ChoiceFlagArg
            choices: !!set
              gcp:
              aws:
          optional: true
        parent: *id002
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag: !Flag
          description: Timestamp of file creation in DSS_VERSION format.  If this
            is not provided, the latest version is returned.
          synonyms:
          - --version
          args: !SimpleFlagArg
            name: VERSION
          optional: true
        help_text: "usage: hca dss head-file [-h] --uuid UUID --replica {aws,gcp}\n\
          \                         [--version VERSION]\n\nGiven a file UUID, return\
          \ the metadata for the latest version of that file.  If the version is provided,\
          \ that version's metadata is returned instead.  The metadata is returned\
          \ in the headers.\nNOTE When using the HCA CLI, this will stream the file\
          \ to stdout and may need to be piped.  For example,\n  `hca dss get-file\
          \ --uuid UUID --replica aws > result.txt`\n\nOptional Arguments:\n  -h,\
          \ --help           show this help message and exit\n\nRequired Arguments:\n\
          \  --uuid UUID          A RFC4122-compliant ID for the file.\n  --replica\
          \ {aws,gcp}  Replica to fetch from.\n  --version VERSION    Timestamp of\
          \ file creation in DSS_VERSION format.  If this is not provided, the latest\
          \ version is returned.\n\n"
        generated_using: *id003
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: hca dss [-h]\n               {get-bundles-all,get-bundles-checkout,delete-bundle,get-bundle,patch-bundle,put-bundle,post-bundles-checkout,get-collections,put-collection,delete-collection,get-collection,patch-collection,get-events,get-event,get-file,head-file,put-file,post-search,get-subscriptions,put-subscription,delete-subscription,get-subscription,login,logout,upload,download,download-manifest,create-version,download-collection}\n\
        \               ...\n\nPositional Arguments:\n  {get-bundles-all,get-bundles-checkout,delete-bundle,get-bundle,patch-bundle,put-bundle,post-bundles-checkout,get-collections,put-collection,delete-collection,get-collection,patch-collection,get-events,get-event,get-file,head-file,put-file,post-search,get-subscriptions,put-subscription,delete-subscription,get-subscription,login,logout,upload,download,download-manifest,create-version,download-collection}\n\
        \    get-bundles-all     List through all available bundles.\n    get-bundles-checkout\n\
        \                        Check the status of a checkout request.\n    delete-bundle\
        \       Delete a bundle or a specific bundle version\n    get-bundle     \
        \     Retrieve a bundle given a UUID and optionally a\n                  \
        \      version.\n    patch-bundle        Update a bundle.\n    put-bundle\
        \          Create a bundle\n    post-bundles-checkout\n                  \
        \      Check out a bundle to DSS-managed or user-managed\n               \
        \         cloud object storage destination\n    get-collections     Retrieve\
        \ a user's collections.\n    put-collection      Create a collection.\n  \
        \  delete-collection   Delete a collection.\n    get-collection      Retrieve\
        \ a collection given a UUID.\n    patch-collection    Update a collection.\n\
        \    get-events          Replay events\n    get-event           Retrieve a\
        \ bundle metadata document given a UUID and\n                        version.\n\
        \    get-file            Retrieve a file given a UUID and optionally a version.\n\
        \    head-file           Retrieve a file's metadata given an UUID and\n  \
        \                      optionally a version.\n    put-file            Create\
        \ a new version of a file\n    post-search         Find bundles by searching\
        \ their metadata with an\n                        Elasticsearch query\n  \
        \  get-subscriptions   Retrieve a user\\'s event subscriptions.\n    put-subscription\
        \    Create an event subscription.\n    delete-subscription\n            \
        \            Delete an event subscription.\n    get-subscription    Retrieve\
        \ an event subscription given a UUID.\n    login               Configure and\
        \ save hca dss authentication credentials.\n    logout              Clear\
        \ hca dss authentication credentials previously\n                        configured\
        \ with hca dss login.\n    upload              Upload a directory of files\
        \ from the local filesystem\n                        and create a bundle containing\
        \ the uploaded files.\n    download            Download a bundle and save\
        \ it to the local filesystem\n                        as a directory.\n  \
        \  download-manifest   Process the given manifest file in TSV (tab-separated\n\
        \                        values) format and download the files referenced\
        \ by\n                        it.\n    create-version      Prints a timestamp\
        \ that can be used for versioning\n    download-collection\n             \
        \           Download a bundle and save it to the local filesystem\n      \
        \                  as a directory.\n\nOptional Arguments:\n  -h, --help  \
        \          show this help message and exit\n\n"
      generated_using: *id003
    - *id005
    - !Command
      command:
      - hca
      - clear-hca-cache
      positional:
      - !Positional
        description: ''
        position: 0
        name: hca
        optional: false
      named:
      - !Flag
        description: ''
        synonyms:
        - --log-level
        args: !ChoiceFlagArg
          choices: !!set
            ERROR:
            INFO:
            DEBUG:
            WARNING:
            CRITICAL:
        optional: true
      parent: *id001
      subcommands: []
      usage: []
      help_flag: !Flag
        description: ''
        synonyms:
        - -h
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag: !Flag
        description: ''
        synonyms:
        - --version
        args: !EmptyFlagArg {}
        optional: true
      help_text: "usage: hca [-h] [--version] [--log-level {ERROR,DEBUG,WARNING,INFO,CRITICAL}]\n\
        \           {clear-hca-cache,help,upload,dss,auth} ...\nhca: error: unrecognized\
        \ arguments: --usage\n"
      generated_using: *id004
    - &id006 !Command
      command:
      - hca
      - upload
      positional: []
      named: []
      parent: *id001
      subcommands:
      - !Command
        command:
        - hca
        - upload
        - report
        positional: []
        named:
        - !Flag
          description: "Environment the upload area was created in (default is\nbased\
            \ on currently selected upload area)"
          synonyms:
          - --env
          args: !SimpleFlagArg
            name: ENV
          optional: true
        - !Flag
          description: "Full UUID of an upload area (default is based on\ncurrently\
            \ selected upload area)"
          synonyms:
          - --uuid
          args: !SimpleFlagArg
            name: UUID
          optional: true
        - !Flag
          description: "Name of output file (default is upload area name)\n"
          synonyms:
          - --output_file_name
          args: !SimpleFlagArg
            name: OUTPUT_FILE_NAME
          optional: true
        parent: *id006
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "usage: hca upload report [-h] [--env ENV] [--uuid UUID]\n    \
          \                     [--output_file_name OUTPUT_FILE_NAME]\n\nGenerate\
          \ file status report for upload area.\n\nOptional Arguments:\n  -h, --help\
          \            show this help message and exit\n  --env ENV             Environment\
          \ the upload area was created in (default is\n                        based\
          \ on currently selected upload area)\n  --uuid UUID           Full UUID\
          \ of an upload area (default is based on\n                        currently\
          \ selected upload area)\n  --output_file_name OUTPUT_FILE_NAME\n       \
          \                 Name of output file (default is upload area name)\n\n"
        generated_using: *id003
      - !Command
        command:
        - hca
        - upload
        - status
        positional:
        - !Positional
          description: File name
          position: 0
          name: filename
          optional: false
        named:
        - !Flag
          description: "Environment the upload area was created in (default is based\
            \ on\ncurrently selected upload area)"
          synonyms:
          - --env
          args: !SimpleFlagArg
            name: ENV
          optional: true
        - !Flag
          description: "Full UUID of an upload area (default is based on currently\n\
            selected upload area)\n"
          synonyms:
          - --uuid
          args: !SimpleFlagArg
            name: UUID
          optional: true
        parent: *id006
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "usage: hca upload status [-h] [--env ENV] [--uuid UUID] filename\n\
          \nPrint status of file in an upload area.\n\nPositional Arguments:\n  filename\
          \     File name\n\nOptional Arguments:\n  -h, --help   show this help message\
          \ and exit\n  --env ENV    Environment the upload area was created in (default\
          \ is based on\n               currently selected upload area)\n  --uuid\
          \ UUID  Full UUID of an upload area (default is based on currently\n   \
          \            selected upload area)\n\n"
        generated_using: *id003
      - !Command
        command:
        - hca
        - upload
        - areas
        positional:
        - !Positional
          description: ''
          position: 0
          name: hca
          optional: false
        named:
        - !Flag
          description: ''
          synonyms:
          - --log-level
          args: !ChoiceFlagArg
            choices: !!set
              ERROR:
              INFO:
              DEBUG:
              WARNING:
              CRITICAL:
          optional: true
        parent: *id006
        subcommands: []
        usage: []
        help_flag: !Flag
          description: ''
          synonyms:
          - -h
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag: !Flag
          description: ''
          synonyms:
          - --version
          args: !EmptyFlagArg {}
          optional: true
        help_text: "usage: hca [-h] [--version] [--log-level {CRITICAL,DEBUG,INFO,ERROR,WARNING}]\n\
          \           {clear-hca-cache,help,upload,dss,auth} ...\nhca: error: unrecognized\
          \ arguments: --usage\n"
        generated_using: *id004
      - !Command
        command:
        - hca
        - upload
        - list
        positional:
        - !Positional
          description: ''
          position: 0
          name: hca
          optional: false
        named:
        - !Flag
          description: ''
          synonyms:
          - --log-level
          args: !ChoiceFlagArg
            choices: !!set
              ERROR:
              INFO:
              DEBUG:
              WARNING:
              CRITICAL:
          optional: true
        parent: *id006
        subcommands: []
        usage: []
        help_flag: !Flag
          description: ''
          synonyms:
          - -h
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag: !Flag
          description: ''
          synonyms:
          - --version
          args: !EmptyFlagArg {}
          optional: true
        help_text: "usage: hca [-h] [--version] [--log-level {INFO,CRITICAL,ERROR,WARNING,DEBUG}]\n\
          \           {clear-hca-cache,help,upload,dss,auth} ...\nhca: error: unrecognized\
          \ arguments: --usage\n"
        generated_using: *id004
      - !Command
        command:
        - hca
        - upload
        - files
        positional: []
        named:
        - !Flag
          description: "Filename to use in upload area (if you wish to change\nit\
            \ during upload). Only valid when one file is being\nuploaded."
          synonyms:
          - -t
          - --target-filename
          args: !SimpleFlagArg
            name: filename
          optional: true
        - !Flag
          description: "File extension to limit which files should be uploaded\nOnly\
            \ valid when directories are targeted for upload."
          synonyms:
          - --file-extension
          args: !SimpleFlagArg
            name: fileextension
          optional: true
        - !Flag
          description: "Don't use Amazon S3 Transfer Acceleration. By default\nwe\
            \ using the aforementioned service to upload via an\nendpoint geographically\
            \ close to you, instead of\ndirectly to Virginia, USA. However, in some\
            \ situations\nthis can be slower. Use the S3 Transfer Acceleration\nSpeed\
            \ Comparison Tool to determine whether you should\nuse this option: https://s3-accelerate-\n\
            speedtest.s3-accelerate.amazonaws.com/en/accelerate-\nspeed-comparsion.html."
          synonyms:
          - --no-transfer-acceleration
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: Suppress normal output.
          synonyms:
          - -q
          - --quiet
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "If set to true, do not upload files to an area in\nwhich the\
            \ file has already been uploaded before\n"
          synonyms:
          - -s
          - --sync
          args: !EmptyFlagArg {}
          optional: true
        parent: *id006
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "usage: hca upload files [-h] [-t <filename>]\n               \
          \         [--file-extension <fileextension>]\n                        [--no-transfer-acceleration]\
          \ [-q] [-s]\n                        <upload_path> [<upload_path> ...]\n\
          \nUpload a file to the currently selected upload area.\n\nPositional Arguments:\n\
          \  <upload_path>         Path to files or directories to be uploaded.\n\n\
          Optional Arguments:\n  -h, --help            show this help message and\
          \ exit\n  -t <filename>, --target-filename <filename>\n                \
          \        Filename to use in upload area (if you wish to change\n       \
          \                 it during upload). Only valid when one file is being\n\
          \                        uploaded.\n  --file-extension <fileextension>\n\
          \                        File extension to limit which files should be uploaded\n\
          \                        Only valid when directories are targeted for upload.\n\
          \  --no-transfer-acceleration\n                        Don't use Amazon\
          \ S3 Transfer Acceleration. By default\n                        we using\
          \ the aforementioned service to upload via an\n                        endpoint\
          \ geographically close to you, instead of\n                        directly\
          \ to Virginia, USA. However, in some situations\n                      \
          \  this can be slower. Use the S3 Transfer Acceleration\n              \
          \          Speed Comparison Tool to determine whether you should\n     \
          \                   use this option: https://s3-accelerate-\n          \
          \              speedtest.s3-accelerate.amazonaws.com/en/accelerate-\n  \
          \                      speed-comparsion.html.\n  -q, --quiet           Suppress\
          \ normal output.\n  -s, --sync            If set to true, do not upload\
          \ files to an area in\n                        which the file has already\
          \ been uploaded before\n\n"
        generated_using: *id003
      - !Command
        command:
        - hca
        - upload
        - select
        positional:
        - !Positional
          description: S3 URI of an upload area, or short alias.
          position: 0
          name: uri_or_alias
          optional: false
        named: []
        parent: *id006
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "usage: hca upload select [-h] uri_or_alias\n\nSelect upload area\
          \ to which you wish to upload files.\n\nPositional Arguments:\n  uri_or_alias\
          \  S3 URI of an upload area, or short alias.\n\nOptional Arguments:\n  -h,\
          \ --help    show this help message and exit\n\n"
        generated_using: *id003
      - !Command
        command:
        - hca
        - upload
        - creds
        positional:
        - !Positional
          description: Full or partial (alias) UUID of an upload area.
          position: 0
          name: uuid_or_alias
          optional: false
        named: []
        parent: *id006
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "usage: hca upload creds [-h] uuid_or_alias\n\nGet/show AWS credentials\
          \ for access to upload area.\n\nPositional Arguments:\n  uuid_or_alias \
          \ Full or partial (alias) UUID of an upload area.\n\nOptional Arguments:\n\
          \  -h, --help     show this help message and exit\n\n"
        generated_using: *id003
      - !Command
        command:
        - hca
        - upload
        - forget
        positional:
        - !Positional
          description: Full or partial (alias) UUID of an upload area.
          position: 0
          name: uuid_or_alias
          optional: false
        named: []
        parent: *id006
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "usage: hca upload forget [-h] uuid_or_alias\n\nForget about upload\
          \ area.\n\nPositional Arguments:\n  uuid_or_alias  Full or partial (alias)\
          \ UUID of an upload area.\n\nOptional Arguments:\n  -h, --help     show\
          \ this help message and exit\n\n"
        generated_using: *id003
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: hca upload [-h]\n                  {help,select,files,list,areas,forget,creds,status,report}\n\
        \                  ...\n\nPositional Arguments:\n  {help,select,files,list,areas,forget,creds,status,report}\n\
        \    select              Select upload area to which you wish to upload files.\n\
        \    files               Upload a file to the currently selected upload area.\n\
        \    list                List contents of currently selected upload area.\n\
        \    areas               List upload areas the current user has access to.\
        \ Also\n                        see :py:class:`UploadArea`.\n    forget  \
        \            Forget about upload area.\n    creds               Get/show AWS\
        \ credentials for access to upload area.\n    status              Print status\
        \ of file in an upload area.\n    report              Generate file status\
        \ report for upload area.\n\nOptional Arguments:\n  -h, --help           \
        \ show this help message and exit\n\n"
      generated_using: *id003
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag: !Flag
      description: show program's version number and exit
      synonyms:
      - --version
      args: !EmptyFlagArg {}
      optional: true
    help_text: "usage: hca [-h] [--version] [--log-level {INFO,ERROR,DEBUG,WARNING,CRITICAL}]\n\
      \           {clear-hca-cache,help,upload,dss,auth} ...\n\nHuman Cell Atlas Command\
      \ Line Interface\n\nFor general help, run ``hca help``.\nFor help with individual\
      \ commands, run ``hca <command> --help``.\n\nPositional Arguments:\n  {clear-hca-cache,help,upload,dss,auth}\n\
      \    clear-hca-cache     Clear the cached HCA API definitions. This can help\
      \ resolve errors communicating with the API.\n    upload              Upload\
      \ data to DCP\n    dss                 Interact with the HCA Data Storage System\n\
      \    auth                Interact with the HCA authorization and authentication\
      \ system.\n\nOptional Arguments:\n  -h, --help            show this help message\
      \ and exit\n  --version             show program's version number and exit\n\
      \  --log-level {INFO,ERROR,DEBUG,WARNING,CRITICAL}\n                       \
      \ ['DEBUG', 'INFO', 'WARNING', 'ERROR', 'CRITICAL']\n\n"
    generated_using: *id003
  subcommands:
  - !Command
    command:
    - hca
    - auth
    - post-oauth-revoke
    positional: []
    named:
    - !Flag
      description: ''
      synonyms:
      - --client-id
      args: !SimpleFlagArg
        name: CLIENT_ID
      optional: true
    - !Flag
      description: The refresh token to revoke.
      synonyms:
      - --token
      args: !SimpleFlagArg
        name: TOKEN
      optional: true
    parent: *id005
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: hca auth post-oauth-revoke [-h] --client-id CLIENT_ID --token\
      \ TOKEN\n\nRevokes a refresh token from a client making all future token refresh\
      \ requests fail.\n\nOptional Arguments:\n  -h, --help            show this help\
      \ message and exit\n\nRequired Arguments:\n  --client-id CLIENT_ID\n  --token\
      \ TOKEN         The refresh token to revoke.\n\n"
    generated_using: *id003
  - !Command
    command:
    - hca
    - auth
    - delete-v1-group
    positional: []
    named:
    - !Flag
      description: The name of the group.
      synonyms:
      - --group-id
      args: !SimpleFlagArg
        name: GROUP_ID
      optional: true
    parent: *id005
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: hca auth delete-v1-group [-h] --group-id GROUP_ID\n\nRemove\
      \ all users, policies, and roles from the group, and delete the group.\n\nOptional\
      \ Arguments:\n  -h, --help           show this help message and exit\n\nRequired\
      \ Arguments:\n  --group-id GROUP_ID  The name of the group.\n\n"
    generated_using: *id003
  - !Command
    command:
    - hca
    - auth
    - get-v1-users
    positional: []
    named:
    - !Flag
      description: ''
      synonyms:
      - --next-token
      args: !SimpleFlagArg
        name: NEXT_TOKEN
      optional: true
    - !Flag
      description: ''
      synonyms:
      - --per-page
      args: !SimpleFlagArg
        name: PER_PAGE
      optional: true
    - !Flag
      description: Do not automatically page the responses
      synonyms:
      - --no-paginate
      args: !EmptyFlagArg {}
      optional: true
    parent: *id005
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: hca auth get-v1-users [-h] [--next-token NEXT_TOKEN]\n    \
      \                         [--per-page PER_PAGE] [--no-paginate]\n\nPaginate\
      \ through all users.\n\nOptional Arguments:\n  -h, --help            show this\
      \ help message and exit\n  --next-token NEXT_TOKEN\n  --per-page PER_PAGE\n\
      \  --no-paginate         Do not automatically page the responses\n\n"
    generated_using: *id003
  - !Command
    command:
    - hca
    - auth
    - put-v1-user-role
    positional: []
    named:
    - !Flag
      description: ''
      synonyms:
      - --action
      args: !SimpleFlagArg
        name: ACTION
      optional: true
    - !Flag
      description: ''
      synonyms:
      - --roles
      args: !SimpleFlagArg
        name: ROLES
      optional: true
    - !Flag
      description: User ID (email).
      synonyms:
      - --user-id
      args: !SimpleFlagArg
        name: USER_ID
      optional: true
    parent: *id005
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: hca auth put-v1-user-role [-h] [--roles ROLES] --user-id USER_ID\n\
      \                                 --action ACTION\n\nModify the role(s) attached\
      \ to a user.\n\nOptional Arguments:\n  -h, --help         show this help message\
      \ and exit\n  --roles ROLES\n\nRequired Arguments:\n  --user-id USER_ID  User\
      \ ID (email).\n  --action ACTION\n\n"
    generated_using: *id003
  - !Command
    command:
    - hca
    - auth
    - post-v1-policies-evaluate
    positional: []
    named:
    - !Flag
      description: Attested user identifier.
      synonyms:
      - --principal
      args: !SimpleFlagArg
        name: PRINCIPAL
      optional: true
    - !Flag
      description: The action the principal is attempting to perform.
      synonyms:
      - --action
      args: !RepeatFlagArg
        name: ACTION
      optional: true
    - !Flag
      description: "The resource the principal will perform the action against.\n"
      synonyms:
      - --resource
      args: !RepeatFlagArg
        name: RESOURCE
      optional: true
    parent: *id005
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: hca auth post-v1-policies-evaluate [-h] --principal PRINCIPAL\
      \ --action\n                                          ACTION [ACTION ...] --resource\n\
      \                                          RESOURCE [RESOURCE ...]\n\nGiven\
      \ a set of principals, actions, and resources, return a set of access control\
      \ decisions.\n\nOptional Arguments:\n  -h, --help            show this help\
      \ message and exit\n\nRequired Arguments:\n  --principal PRINCIPAL\n       \
      \                 Attested user identifier.\n  --action ACTION [ACTION ...]\n\
      \                        The action the principal is attempting to perform.\n\
      \  --resource RESOURCE [RESOURCE ...]\n                        The resource\
      \ the principal will perform the action against.\n\n"
    generated_using: *id003
  - !Command
    command:
    - hca
    - auth
    - provider.
    positional:
    - !Positional
      description: ''
      position: 0
      name: hca
      optional: false
    - !Positional
      description: ''
      position: 1
      name: auth
      optional: false
    named: []
    parent: *id005
    subcommands: []
    usage: []
    help_flag: !Flag
      description: ''
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: hca auth [-h]\n                {get-login,get-logout,get-openid-configuration,get-jwks.json,get-oauth-authorize,post-oauth-revoke,post-oauth-token,get-oauth-userinfo,post-oauth-userinfo,get-echo,post-v1-policies-evaluate,get-v1-users,post-v1-user,get-v1-user,put-v1-user,get-v1-user-owns,get-v1-user-groups,put-v1-user-group,get-v1-user-roles,put-v1-user-role,put-v1-user-policy,get-v1-groups,post-v1-group,get-v1-group,delete-v1-group,get-v1-group-roles,put-v1-group-role,get-v1-group-users,put-v1-group-user,put-v1-group-policy,get-v1-roles,post-v1-role,get-v1-role,delete-v1-role,put-v1-role-policy,login,logout}\n\
      \                ...\nhca auth: error: invalid choice: 'provider.' (choose from\
      \ 'get-login', 'get-logout', 'get-openid-configuration', 'get-jwks.json', 'get-oauth-authorize',\
      \ 'post-oauth-revoke', 'post-oauth-token', 'get-oauth-userinfo', 'post-oauth-userinfo',\
      \ 'get-echo', 'post-v1-policies-evaluate', 'get-v1-users', 'post-v1-user', 'get-v1-user',\
      \ 'put-v1-user', 'get-v1-user-owns', 'get-v1-user-groups', 'put-v1-user-group',\
      \ 'get-v1-user-roles', 'put-v1-user-role', 'put-v1-user-policy', 'get-v1-groups',\
      \ 'post-v1-group', 'get-v1-group', 'delete-v1-group', 'get-v1-group-roles',\
      \ 'put-v1-group-role', 'get-v1-group-users', 'put-v1-group-user', 'put-v1-group-policy',\
      \ 'get-v1-roles', 'post-v1-role', 'get-v1-role', 'delete-v1-role', 'put-v1-role-policy',\
      \ 'login', 'logout')\n"
    generated_using: *id003
  - !Command
    command:
    - hca
    - auth
    - post-v1-role
    positional: []
    named:
    - !Flag
      description: Used to identify users, groups, and roles.
      synonyms:
      - --role-id
      args: !SimpleFlagArg
        name: ROLE_ID
      optional: true
    - !Flag
      description: ''
      synonyms:
      - --policy
      args: !SimpleFlagArg
        name: POLICY
      optional: true
    parent: *id005
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: hca auth post-v1-role [-h] --role-id ROLE_ID --policy POLICY\n\
      \nCreate a new role and attach a IAM policy.\n\nOptional Arguments:\n  -h, --help\
      \         show this help message and exit\n\nRequired Arguments:\n  --role-id\
      \ ROLE_ID  Used to identify users, groups, and roles.\n  --policy POLICY\n\n"
    generated_using: *id003
  - !Command
    command:
    - hca
    - auth
    - put-v1-user-group
    positional: []
    named:
    - !Flag
      description: ''
      synonyms:
      - --action
      args: !SimpleFlagArg
        name: ACTION
      optional: true
    - !Flag
      description: ''
      synonyms:
      - --groups
      args: !SimpleFlagArg
        name: GROUPS
      optional: true
    - !Flag
      description: User ID (email).
      synonyms:
      - --user-id
      args: !SimpleFlagArg
        name: USER_ID
      optional: true
    parent: *id005
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: hca auth put-v1-user-group [-h] [--groups GROUPS] --user-id\
      \ USER_ID\n                                  --action ACTION\n\nModify group(s)\
      \ in which a user is a member.\n\nOptional Arguments:\n  -h, --help        \
      \ show this help message and exit\n  --groups GROUPS\n\nRequired Arguments:\n\
      \  --user-id USER_ID  User ID (email).\n  --action ACTION\n\n"
    generated_using: *id003
  - !Command
    command:
    - hca
    - auth
    - put-v1-user
    positional: []
    named:
    - !Flag
      description: User ID (email).
      synonyms:
      - --user-id
      args: !SimpleFlagArg
        name: USER_ID
      optional: true
    - !Flag
      description: ''
      synonyms:
      - --status
      args: !SimpleFlagArg
        name: STATUS
      optional: true
    parent: *id005
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: hca auth put-v1-user [-h] --user-id USER_ID --status STATUS\n\
      \nEnable or disable a user. A disabled user will return false for all evaluations\
      \ with that user as principal.\n\nOptional Arguments:\n  -h, --help        \
      \ show this help message and exit\n\nRequired Arguments:\n  --user-id USER_ID\
      \  User ID (email).\n  --status STATUS\n\n"
    generated_using: *id003
  - !Command
    command:
    - hca
    - auth
    - get-echo
    positional:
    - !Positional
      description: ''
      position: 0
      name: hca
      optional: false
    named:
    - !Flag
      description: ''
      synonyms:
      - --log-level
      args: !ChoiceFlagArg
        choices: !!set
          ERROR:
          INFO:
          DEBUG:
          WARNING:
          CRITICAL:
      optional: true
    parent: *id005
    subcommands: []
    usage: []
    help_flag: !Flag
      description: ''
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag: !Flag
      description: ''
      synonyms:
      - --version
      args: !EmptyFlagArg {}
      optional: true
    help_text: "usage: hca [-h] [--version] [--log-level {WARNING,ERROR,DEBUG,INFO,CRITICAL}]\n\
      \           {clear-hca-cache,help,upload,dss,auth} ...\nhca: error: unrecognized\
      \ arguments: --usage\n"
    generated_using: *id004
  - !Command
    command:
    - hca
    - auth
    - post-oauth-token
    positional:
    - !Positional
      description: ''
      position: 0
      name: hca
      optional: false
    named:
    - !Flag
      description: ''
      synonyms:
      - --log-level
      args: !ChoiceFlagArg
        choices: !!set
          ERROR:
          INFO:
          DEBUG:
          WARNING:
          CRITICAL:
      optional: true
    parent: *id005
    subcommands: []
    usage: []
    help_flag: !Flag
      description: ''
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag: !Flag
      description: ''
      synonyms:
      - --version
      args: !EmptyFlagArg {}
      optional: true
    help_text: "usage: hca [-h] [--version] [--log-level {WARNING,ERROR,DEBUG,CRITICAL,INFO}]\n\
      \           {clear-hca-cache,help,upload,dss,auth} ...\nhca: error: unrecognized\
      \ arguments: --usage\n"
    generated_using: *id004
  - !Command
    command:
    - hca
    - auth
    - get-login
    positional: []
    named:
    - !Flag
      description: Where to redirect to once login is complete.
      synonyms:
      - --redirect-uri
      args: !SimpleFlagArg
        name: REDIRECT_URI
      optional: true
    - !Flag
      description: An opaque parameter that is returned back to the `redirect_uri`.
      synonyms:
      - --state
      args: !SimpleFlagArg
        name: STATE
      optional: true
    parent: *id005
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: hca auth get-login [-h] --redirect-uri REDIRECT_URI [--state\
      \ STATE]\n\nSend the user agent to an identity provider selector and generate\
      \ a user account to establish the user's identity. This is a redirect endpoint.\n\
      \nOptional Arguments:\n  -h, --help            show this help message and exit\n\
      \nRequired Arguments:\n  --redirect-uri REDIRECT_URI\n                     \
      \   Where to redirect to once login is complete.\n  --state STATE         An\
      \ opaque parameter that is returned back to the `redirect_uri`.\n\n"
    generated_using: *id003
  - !Command
    command:
    - hca
    - auth
    - get-logout
    positional:
    - !Positional
      description: ''
      position: 0
      name: hca
      optional: false
    named:
    - !Flag
      description: ''
      synonyms:
      - --log-level
      args: !ChoiceFlagArg
        choices: !!set
          ERROR:
          INFO:
          DEBUG:
          WARNING:
          CRITICAL:
      optional: true
    parent: *id005
    subcommands: []
    usage: []
    help_flag: !Flag
      description: ''
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag: !Flag
      description: ''
      synonyms:
      - --version
      args: !EmptyFlagArg {}
      optional: true
    help_text: "usage: hca [-h] [--version] [--log-level {CRITICAL,INFO,WARNING,DEBUG,ERROR}]\n\
      \           {clear-hca-cache,help,upload,dss,auth} ...\nhca: error: unrecognized\
      \ arguments: --usage\n"
    generated_using: *id004
  - !Command
    command:
    - hca
    - auth
    - get-oauth-authorize
    positional: []
    named:
    - !Flag
      description: ''
      synonyms:
      - --redirect-uri
      args: !SimpleFlagArg
        name: REDIRECT_URI
      optional: true
    - !Flag
      description: ''
      synonyms:
      - --state
      args: !SimpleFlagArg
        name: STATE
      optional: true
    - !Flag
      description: ''
      synonyms:
      - --client-id
      args: !SimpleFlagArg
        name: CLIENT_ID
      optional: true
    - !Flag
      description: ''
      synonyms:
      - --scope
      args: !SimpleFlagArg
        name: SCOPE
      optional: true
    - !Flag
      description: ''
      synonyms:
      - --respone-type
      args: !SimpleFlagArg
        name: RESPONE_TYPE
      optional: true
    - !Flag
      description: ''
      synonyms:
      - --nonce
      args: !SimpleFlagArg
        name: NONCE
      optional: true
    - !Flag
      description: ''
      synonyms:
      - --prompt
      args: !SimpleFlagArg
        name: PROMPT
      optional: true
    parent: *id005
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: hca auth get-oauth-authorize [-h] [--redirect-uri REDIRECT_URI]\n\
      \                                    [--state STATE] [--client-id CLIENT_ID]\n\
      \                                    [--scope SCOPE]\n                     \
      \               [--respone-type RESPONE_TYPE]\n                            \
      \        [--nonce NONCE] [--prompt PROMPT]\n\nThis endpoint is part of OIDC\
      \ and is used to redirect to an openid provider. See [Auth Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest)\n\
      \nOptional Arguments:\n  -h, --help            show this help message and exit\n\
      \  --redirect-uri REDIRECT_URI\n  --state STATE\n  --client-id CLIENT_ID\n \
      \ --scope SCOPE\n  --respone-type RESPONE_TYPE\n  --nonce NONCE\n  --prompt\
      \ PROMPT\n\n"
    generated_using: *id003
  - !Command
    command:
    - hca
    - auth
    - delete-v1-role
    positional: []
    named:
    - !Flag
      description: The name of the role.
      synonyms:
      - --role-id
      args: !SimpleFlagArg
        name: ROLE_ID
      optional: true
    parent: *id005
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: hca auth delete-v1-role [-h] --role-id ROLE_ID\n\nRemove the\
      \ role from all users and groups, and finally delete the role.\n\nOptional Arguments:\n\
      \  -h, --help         show this help message and exit\n\nRequired Arguments:\n\
      \  --role-id ROLE_ID  The name of the role.\n\n"
    generated_using: *id003
  - !Command
    command:
    - hca
    - auth
    - credentials.
    positional:
    - !Positional
      description: ''
      position: 0
      name: hca
      optional: false
    - !Positional
      description: ''
      position: 1
      name: auth
      optional: false
    named: []
    parent: *id005
    subcommands: []
    usage: []
    help_flag: !Flag
      description: ''
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: hca auth [-h]\n                {get-login,get-logout,get-openid-configuration,get-jwks.json,get-oauth-authorize,post-oauth-revoke,post-oauth-token,get-oauth-userinfo,post-oauth-userinfo,get-echo,post-v1-policies-evaluate,get-v1-users,post-v1-user,get-v1-user,put-v1-user,get-v1-user-owns,get-v1-user-groups,put-v1-user-group,get-v1-user-roles,put-v1-user-role,put-v1-user-policy,get-v1-groups,post-v1-group,get-v1-group,delete-v1-group,get-v1-group-roles,put-v1-group-role,get-v1-group-users,put-v1-group-user,put-v1-group-policy,get-v1-roles,post-v1-role,get-v1-role,delete-v1-role,put-v1-role-policy,login,logout}\n\
      \                ...\nhca auth: error: invalid choice: 'credentials.' (choose\
      \ from 'get-login', 'get-logout', 'get-openid-configuration', 'get-jwks.json',\
      \ 'get-oauth-authorize', 'post-oauth-revoke', 'post-oauth-token', 'get-oauth-userinfo',\
      \ 'post-oauth-userinfo', 'get-echo', 'post-v1-policies-evaluate', 'get-v1-users',\
      \ 'post-v1-user', 'get-v1-user', 'put-v1-user', 'get-v1-user-owns', 'get-v1-user-groups',\
      \ 'put-v1-user-group', 'get-v1-user-roles', 'put-v1-user-role', 'put-v1-user-policy',\
      \ 'get-v1-groups', 'post-v1-group', 'get-v1-group', 'delete-v1-group', 'get-v1-group-roles',\
      \ 'put-v1-group-role', 'get-v1-group-users', 'put-v1-group-user', 'put-v1-group-policy',\
      \ 'get-v1-roles', 'post-v1-role', 'get-v1-role', 'delete-v1-role', 'put-v1-role-policy',\
      \ 'login', 'logout')\n"
    generated_using: *id003
  - !Command
    command:
    - hca
    - auth
    - post-oauth-userinfo
    positional:
    - !Positional
      description: ''
      position: 0
      name: hca
      optional: false
    named:
    - !Flag
      description: ''
      synonyms:
      - --log-level
      args: !ChoiceFlagArg
        choices: !!set
          ERROR:
          INFO:
          DEBUG:
          WARNING:
          CRITICAL:
      optional: true
    parent: *id005
    subcommands: []
    usage: []
    help_flag: !Flag
      description: ''
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag: !Flag
      description: ''
      synonyms:
      - --version
      args: !EmptyFlagArg {}
      optional: true
    help_text: "usage: hca [-h] [--version] [--log-level {WARNING,INFO,CRITICAL,DEBUG,ERROR}]\n\
      \           {clear-hca-cache,help,upload,dss,auth} ...\nhca: error: unrecognized\
      \ arguments: --usage\n"
    generated_using: *id004
  - *id007
  - !Command
    command:
    - hca
    - auth
    - get-v1-roles
    positional: []
    named:
    - !Flag
      description: ''
      synonyms:
      - --next-token
      args: !SimpleFlagArg
        name: NEXT_TOKEN
      optional: true
    - !Flag
      description: ''
      synonyms:
      - --per-page
      args: !SimpleFlagArg
        name: PER_PAGE
      optional: true
    - !Flag
      description: Do not automatically page the responses
      synonyms:
      - --no-paginate
      args: !EmptyFlagArg {}
      optional: true
    parent: *id005
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: hca auth get-v1-roles [-h] [--next-token NEXT_TOKEN]\n    \
      \                         [--per-page PER_PAGE] [--no-paginate]\n\nPaginate\
      \ through all roles.\n\nOptional Arguments:\n  -h, --help            show this\
      \ help message and exit\n  --next-token NEXT_TOKEN\n  --per-page PER_PAGE\n\
      \  --no-paginate         Do not automatically page the responses\n\n"
    generated_using: *id003
  - !Command
    command:
    - hca
    - auth
    - get-v1-group
    positional: []
    named:
    - !Flag
      description: The name of the group.
      synonyms:
      - --group-id
      args: !SimpleFlagArg
        name: GROUP_ID
      optional: true
    parent: *id005
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: hca auth get-v1-group [-h] --group-id GROUP_ID\n\nGet properties\
      \ of a group, including the group's IAM policy.\n\nOptional Arguments:\n  -h,\
      \ --help           show this help message and exit\n\nRequired Arguments:\n\
      \  --group-id GROUP_ID  The name of the group.\n\n"
    generated_using: *id003
  - !Command
    command:
    - hca
    - auth
    - get-oauth-userinfo
    positional:
    - !Positional
      description: ''
      position: 0
      name: hca
      optional: false
    named:
    - !Flag
      description: ''
      synonyms:
      - --log-level
      args: !ChoiceFlagArg
        choices: !!set
          ERROR:
          INFO:
          DEBUG:
          WARNING:
          CRITICAL:
      optional: true
    parent: *id005
    subcommands: []
    usage: []
    help_flag: !Flag
      description: ''
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag: !Flag
      description: ''
      synonyms:
      - --version
      args: !EmptyFlagArg {}
      optional: true
    help_text: "usage: hca [-h] [--version] [--log-level {INFO,DEBUG,CRITICAL,WARNING,ERROR}]\n\
      \           {clear-hca-cache,help,upload,dss,auth} ...\nhca: error: unrecognized\
      \ arguments: --usage\n"
    generated_using: *id004
  - !Command
    command:
    - hca
    - auth
    - get-v1-user-groups
    positional: []
    named:
    - !Flag
      description: User ID (email).
      synonyms:
      - --user-id
      args: !SimpleFlagArg
        name: USER_ID
      optional: true
    - !Flag
      description: ''
      synonyms:
      - --next-token
      args: !SimpleFlagArg
        name: NEXT_TOKEN
      optional: true
    - !Flag
      description: ''
      synonyms:
      - --per-page
      args: !SimpleFlagArg
        name: PER_PAGE
      optional: true
    - !Flag
      description: Do not automatically page the responses
      synonyms:
      - --no-paginate
      args: !EmptyFlagArg {}
      optional: true
    parent: *id005
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: hca auth get-v1-user-groups [-h] --user-id USER_ID\n      \
      \                             [--next-token NEXT_TOKEN]\n                  \
      \                 [--per-page PER_PAGE] [--no-paginate]\n\nPaginate through\
      \ a list of groups of which a user is a member.\n\nOptional Arguments:\n  -h,\
      \ --help            show this help message and exit\n\nRequired Arguments:\n\
      \  --user-id USER_ID     User ID (email).\n  --next-token NEXT_TOKEN\n  --per-page\
      \ PER_PAGE\n  --no-paginate         Do not automatically page the responses\n\
      \n"
    generated_using: *id003
  - !Command
    command:
    - hca
    - auth
    - get-v1-group-roles
    positional: []
    named:
    - !Flag
      description: The name of the group.
      synonyms:
      - --group-id
      args: !SimpleFlagArg
        name: GROUP_ID
      optional: true
    - !Flag
      description: ''
      synonyms:
      - --next-token
      args: !SimpleFlagArg
        name: NEXT_TOKEN
      optional: true
    - !Flag
      description: ''
      synonyms:
      - --per-page
      args: !SimpleFlagArg
        name: PER_PAGE
      optional: true
    - !Flag
      description: Do not automatically page the responses
      synonyms:
      - --no-paginate
      args: !EmptyFlagArg {}
      optional: true
    parent: *id005
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: hca auth get-v1-group-roles [-h] --group-id GROUP_ID\n    \
      \                               [--next-token NEXT_TOKEN]\n                \
      \                   [--per-page PER_PAGE] [--no-paginate]\n\nPaginate through\
      \ all roles assigned to the group.\n\nOptional Arguments:\n  -h, --help    \
      \        show this help message and exit\n\nRequired Arguments:\n  --group-id\
      \ GROUP_ID   The name of the group.\n  --next-token NEXT_TOKEN\n  --per-page\
      \ PER_PAGE\n  --no-paginate         Do not automatically page the responses\n\
      \n"
    generated_using: *id003
  - !Command
    command:
    - hca
    - auth
    - put-v1-group-user
    positional: []
    named:
    - !Flag
      description: ''
      synonyms:
      - --action
      args: !SimpleFlagArg
        name: ACTION
      optional: true
    - !Flag
      description: ''
      synonyms:
      - --users
      args: !SimpleFlagArg
        name: USERS
      optional: true
    - !Flag
      description: The name of the group.
      synonyms:
      - --group-id
      args: !SimpleFlagArg
        name: GROUP_ID
      optional: true
    parent: *id005
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: hca auth put-v1-group-user [-h] [--users USERS] --group-id\
      \ GROUP_ID\n                                  --action ACTION\n\nModify the\
      \ user(s) assigned to a group.\n\nOptional Arguments:\n  -h, --help        \
      \   show this help message and exit\n  --users USERS\n\nRequired Arguments:\n\
      \  --group-id GROUP_ID  The name of the group.\n  --action ACTION\n\n"
    generated_using: *id003
  - !Command
    command:
    - hca
    - auth
    - get-v1-user-roles
    positional: []
    named:
    - !Flag
      description: User ID (email).
      synonyms:
      - --user-id
      args: !SimpleFlagArg
        name: USER_ID
      optional: true
    - !Flag
      description: ''
      synonyms:
      - --next-token
      args: !SimpleFlagArg
        name: NEXT_TOKEN
      optional: true
    - !Flag
      description: ''
      synonyms:
      - --per-page
      args: !SimpleFlagArg
        name: PER_PAGE
      optional: true
    - !Flag
      description: Do not automatically page the responses
      synonyms:
      - --no-paginate
      args: !EmptyFlagArg {}
      optional: true
    parent: *id005
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: hca auth get-v1-user-roles [-h] --user-id USER_ID\n       \
      \                           [--next-token NEXT_TOKEN]\n                    \
      \              [--per-page PER_PAGE] [--no-paginate]\n\nPaginate through all\
      \ roles attached to a user.\n\nOptional Arguments:\n  -h, --help           \
      \ show this help message and exit\n\nRequired Arguments:\n  --user-id USER_ID\
      \     User ID (email).\n  --next-token NEXT_TOKEN\n  --per-page PER_PAGE\n \
      \ --no-paginate         Do not automatically page the responses\n\n"
    generated_using: *id003
  - !Command
    command:
    - hca
    - auth
    - put-v1-group-policy
    positional: []
    named:
    - !Flag
      description: ''
      synonyms:
      - --policy
      args: !SimpleFlagArg
        name: POLICY
      optional: true
    - !Flag
      description: The name of the group.
      synonyms:
      - --group-id
      args: !SimpleFlagArg
        name: GROUP_ID
      optional: true
    parent: *id005
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: hca auth put-v1-group-policy [-h] [--policy POLICY] --group-id\
      \ GROUP_ID\n\nModify or create a policy attached to a group.\n\nOptional Arguments:\n\
      \  -h, --help           show this help message and exit\n  --policy POLICY\n\
      \nRequired Arguments:\n  --group-id GROUP_ID  The name of the group.\n\n"
    generated_using: *id003
  - !Command
    command:
    - hca
    - auth
    - put-v1-user-policy
    positional: []
    named:
    - !Flag
      description: ''
      synonyms:
      - --policy
      args: !SimpleFlagArg
        name: POLICY
      optional: true
    - !Flag
      description: User ID (email).
      synonyms:
      - --user-id
      args: !SimpleFlagArg
        name: USER_ID
      optional: true
    parent: *id005
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: hca auth put-v1-user-policy [-h] [--policy POLICY] --user-id\
      \ USER_ID\n\nModify or add the user's IAM policy.\n\nOptional Arguments:\n \
      \ -h, --help         show this help message and exit\n  --policy POLICY\n\n\
      Required Arguments:\n  --user-id USER_ID  User ID (email).\n\n"
    generated_using: *id003
  - !Command
    command:
    - hca
    - auth
    - get-v1-group-users
    positional: []
    named:
    - !Flag
      description: The name of the group.
      synonyms:
      - --group-id
      args: !SimpleFlagArg
        name: GROUP_ID
      optional: true
    - !Flag
      description: ''
      synonyms:
      - --next-token
      args: !SimpleFlagArg
        name: NEXT_TOKEN
      optional: true
    - !Flag
      description: ''
      synonyms:
      - --per-page
      args: !SimpleFlagArg
        name: PER_PAGE
      optional: true
    - !Flag
      description: Do not automatically page the responses
      synonyms:
      - --no-paginate
      args: !EmptyFlagArg {}
      optional: true
    parent: *id005
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: hca auth get-v1-group-users [-h] --group-id GROUP_ID\n    \
      \                               [--next-token NEXT_TOKEN]\n                \
      \                   [--per-page PER_PAGE] [--no-paginate]\n\nPaginate through\
      \ all users in a group.\n\nOptional Arguments:\n  -h, --help            show\
      \ this help message and exit\n\nRequired Arguments:\n  --group-id GROUP_ID \
      \  The name of the group.\n  --next-token NEXT_TOKEN\n  --per-page PER_PAGE\n\
      \  --no-paginate         Do not automatically page the responses\n\n"
    generated_using: *id003
  - !Command
    command:
    - hca
    - auth
    - get-v1-user
    positional: []
    named:
    - !Flag
      description: User ID (email).
      synonyms:
      - --user-id
      args: !SimpleFlagArg
        name: USER_ID
      optional: true
    parent: *id005
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: hca auth get-v1-user [-h] --user-id USER_ID\n\nRetrieve information\
      \ about the user's status and the policies attached.\n\nOptional Arguments:\n\
      \  -h, --help         show this help message and exit\n\nRequired Arguments:\n\
      \  --user-id USER_ID  User ID (email).\n\n"
    generated_using: *id003
  - !Command
    command:
    - hca
    - auth
    - get-v1-groups
    positional: []
    named:
    - !Flag
      description: ''
      synonyms:
      - --next-token
      args: !SimpleFlagArg
        name: NEXT_TOKEN
      optional: true
    - !Flag
      description: ''
      synonyms:
      - --per-page
      args: !SimpleFlagArg
        name: PER_PAGE
      optional: true
    - !Flag
      description: Do not automatically page the responses
      synonyms:
      - --no-paginate
      args: !EmptyFlagArg {}
      optional: true
    parent: *id005
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: hca auth get-v1-groups [-h] [--next-token NEXT_TOKEN]\n   \
      \                           [--per-page PER_PAGE] [--no-paginate]\n\nPaginate\
      \ through all groups.\n\nOptional Arguments:\n  -h, --help            show this\
      \ help message and exit\n  --next-token NEXT_TOKEN\n  --per-page PER_PAGE\n\
      \  --no-paginate         Do not automatically page the responses\n\n"
    generated_using: *id003
  - !Command
    command:
    - hca
    - auth
    - post-v1-group
    positional: []
    named:
    - !Flag
      description: Used to identify users, groups, and roles.
      synonyms:
      - --group-id
      args: !SimpleFlagArg
        name: GROUP_ID
      optional: true
    - !Flag
      description: ''
      synonyms:
      - --policy
      args: !SimpleFlagArg
        name: POLICY
      optional: true
    - !Flag
      description: ''
      synonyms:
      - --roles
      args: !SimpleFlagArg
        name: ROLES
      optional: true
    parent: *id005
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: hca auth post-v1-group [-h] --group-id GROUP_ID [--policy POLICY]\n\
      \                              [--roles ROLES]\n\nCreate a new group, attach\
      \ an IAM policy, and assign roles.\n\nOptional Arguments:\n  -h, --help    \
      \       show this help message and exit\n\nRequired Arguments:\n  --group-id\
      \ GROUP_ID  Used to identify users, groups, and roles.\n  --policy POLICY\n\
      \  --roles ROLES\n\n"
    generated_using: *id003
  - !Command
    command:
    - hca
    - auth
    - login
    positional: []
    named:
    - !Flag
      description: ''
      synonyms:
      - --access-token
      args: !SimpleFlagArg
        name: ACCESS_TOKEN
      optional: true
    - !Flag
      description: ''
      synonyms:
      - --remote
      args: !EmptyFlagArg {}
      optional: true
    parent: *id005
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: hca auth login [-h] [--access-token ACCESS_TOKEN] [--remote]\n\
      \nThis command may open a browser window to ask for your\nconsent to use web\
      \ service authentication credentials.\n\nUse --remote if using the CLI in a\
      \ remote environment\n\nOptional Arguments:\n  -h, --help            show this\
      \ help message and exit\n  --access-token ACCESS_TOKEN\n  --remote\n\n"
    generated_using: *id003
  - !Command
    command:
    - hca
    - auth
    - put-v1-group-role
    positional: []
    named:
    - !Flag
      description: ''
      synonyms:
      - --action
      args: !SimpleFlagArg
        name: ACTION
      optional: true
    - !Flag
      description: ''
      synonyms:
      - --roles
      args: !SimpleFlagArg
        name: ROLES
      optional: true
    - !Flag
      description: The name of the group.
      synonyms:
      - --group-id
      args: !SimpleFlagArg
        name: GROUP_ID
      optional: true
    parent: *id005
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: hca auth put-v1-group-role [-h] [--roles ROLES] --group-id\
      \ GROUP_ID\n                                  --action ACTION\n\nModify the\
      \ role(s) assigned to a group.\n\nOptional Arguments:\n  -h, --help        \
      \   show this help message and exit\n  --roles ROLES\n\nRequired Arguments:\n\
      \  --group-id GROUP_ID  The name of the group.\n  --action ACTION\n\n"
    generated_using: *id003
  - !Command
    command:
    - hca
    - auth
    - get-jwks.json
    positional:
    - !Positional
      description: ''
      position: 0
      name: hca
      optional: false
    named:
    - !Flag
      description: ''
      synonyms:
      - --log-level
      args: !ChoiceFlagArg
        choices: !!set
          ERROR:
          INFO:
          DEBUG:
          WARNING:
          CRITICAL:
      optional: true
    parent: *id005
    subcommands: []
    usage: []
    help_flag: !Flag
      description: ''
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag: !Flag
      description: ''
      synonyms:
      - --version
      args: !EmptyFlagArg {}
      optional: true
    help_text: "usage: hca [-h] [--version] [--log-level {ERROR,WARNING,INFO,CRITICAL,DEBUG}]\n\
      \           {clear-hca-cache,help,upload,dss,auth} ...\nhca: error: unrecognized\
      \ arguments: --usage\n"
    generated_using: *id004
  - !Command
    command:
    - hca
    - auth
    - get-v1-role
    positional: []
    named:
    - !Flag
      description: The name of the role.
      synonyms:
      - --role-id
      args: !SimpleFlagArg
        name: ROLE_ID
      optional: true
    parent: *id005
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: hca auth get-v1-role [-h] --role-id ROLE_ID\n\nGet properties\
      \ of a role.\n\nOptional Arguments:\n  -h, --help         show this help message\
      \ and exit\n\nRequired Arguments:\n  --role-id ROLE_ID  The name of the role.\n\
      \n"
    generated_using: *id003
  - !Command
    command:
    - hca
    - auth
    - post-v1-user
    positional: []
    named:
    - !Flag
      description: Used to identify users, groups, and roles.
      synonyms:
      - --user-id
      args: !SimpleFlagArg
        name: USER_ID
      optional: true
    - !Flag
      description: ''
      synonyms:
      - --groups
      args: !SimpleFlagArg
        name: GROUPS
      optional: true
    - !Flag
      description: ''
      synonyms:
      - --roles
      args: !SimpleFlagArg
        name: ROLES
      optional: true
    - !Flag
      description: ''
      synonyms:
      - --policy
      args: !SimpleFlagArg
        name: POLICY
      optional: true
    parent: *id005
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: hca auth post-v1-user [-h] --user-id USER_ID [--groups GROUPS]\n\
      \                             [--roles ROLES] [--policy POLICY]\n\nCreate a\
      \ new user with the specified groups, roles, and iam policy.\n\nOptional Arguments:\n\
      \  -h, --help         show this help message and exit\n\nRequired Arguments:\n\
      \  --user-id USER_ID  Used to identify users, groups, and roles.\n  --groups\
      \ GROUPS\n  --roles ROLES\n  --policy POLICY\n\n"
    generated_using: *id003
  - !Command
    command:
    - hca
    - auth
    - get-v1-user-owns
    positional: []
    named:
    - !Flag
      description: User ID (email).
      synonyms:
      - --user-id
      args: !SimpleFlagArg
        name: USER_ID
      optional: true
    - !Flag
      description: ''
      synonyms:
      - --next-token
      args: !SimpleFlagArg
        name: NEXT_TOKEN
      optional: true
    - !Flag
      description: ''
      synonyms:
      - --per-page
      args: !SimpleFlagArg
        name: PER_PAGE
      optional: true
    - !Flag
      description: ''
      synonyms:
      - --resource-type
      args: !SimpleFlagArg
        name: RESOURCE_TYPE
      optional: true
    - !Flag
      description: Do not automatically page the responses
      synonyms:
      - --no-paginate
      args: !EmptyFlagArg {}
      optional: true
    parent: *id005
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: hca auth get-v1-user-owns [-h] --user-id USER_ID\n        \
      \                         [--next-token NEXT_TOKEN]\n                      \
      \           [--per-page PER_PAGE] --resource-type\n                        \
      \         RESOURCE_TYPE [--no-paginate]\n\nPaginate through a list of resources\
      \ owned by a user.\n\nOptional Arguments:\n  -h, --help            show this\
      \ help message and exit\n\nRequired Arguments:\n  --user-id USER_ID     User\
      \ ID (email).\n  --next-token NEXT_TOKEN\n  --per-page PER_PAGE\n  --resource-type\
      \ RESOURCE_TYPE\n  --no-paginate         Do not automatically page the responses\n\
      \n"
    generated_using: *id003
  usage: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: hca auth [-h]\n                {get-login,get-logout,get-openid-configuration,get-jwks.json,get-oauth-authorize,post-oauth-revoke,post-oauth-token,get-oauth-userinfo,post-oauth-userinfo,get-echo,post-v1-policies-evaluate,get-v1-users,post-v1-user,get-v1-user,put-v1-user,get-v1-user-owns,get-v1-user-groups,put-v1-user-group,get-v1-user-roles,put-v1-user-role,put-v1-user-policy,get-v1-groups,post-v1-group,get-v1-group,delete-v1-group,get-v1-group-roles,put-v1-group-role,get-v1-group-users,put-v1-group-user,put-v1-group-policy,get-v1-roles,post-v1-role,get-v1-role,delete-v1-role,put-v1-role-policy,login,logout}\n\
    \                ...\n\nPositional Arguments:\n  {get-login,get-logout,get-openid-configuration,get-jwks.json,get-oauth-authorize,post-oauth-revoke,post-oauth-token,get-oauth-userinfo,post-oauth-userinfo,get-echo,post-v1-policies-evaluate,get-v1-users,post-v1-user,get-v1-user,put-v1-user,get-v1-user-owns,get-v1-user-groups,put-v1-user-group,get-v1-user-roles,put-v1-user-role,put-v1-user-policy,get-v1-groups,post-v1-group,get-v1-group,delete-v1-group,get-v1-group-roles,put-v1-group-role,get-v1-group-users,put-v1-group-user,put-v1-group-policy,get-v1-roles,post-v1-role,get-v1-role,delete-v1-role,put-v1-role-policy,login,logout}\n\
    \    get-login           Establish the users identity using the OIDC provider\n\
    \    get-logout          Logout the user from current sessions with the OIDC\n\
    \                        provider.\n    get-openid-configuration\n           \
    \             See documentation at [Provider\n                        Config](https://openid.net/specs/openid-connect-\n\
    \                        discovery-1_0.html#ProviderConfig)\n    get-jwks.json\
    \       This endpoint is part of OIDC\n    get-oauth-authorize\n             \
    \           See [Auth Request](https://openid.net/specs/openid-\n            \
    \            connect-core-1_0.html#AuthRequest)\n    post-oauth-revoke   Revoke\
    \ a refresh token\n    post-oauth-token    Retrieve the authentications token\n\
    \    get-oauth-userinfo  See [User Info](https://openid.net/specs/openid-\n  \
    \                      connect-core-1_0.html#UserInfo)\n    post-oauth-userinfo\n\
    \                        See [User Info](https://openid.net/specs/openid-\n  \
    \                      connect-core-1_0.html#UserInfo)\n    get-echo         \
    \   echoes the response\n    post-v1-policies-evaluate\n                     \
    \   Evaluate a user's permissions\n    get-v1-users        List users\n    post-v1-user\
    \        Create a new user\n    get-v1-user         Retrieve information about\
    \ a user\n    put-v1-user         Modify user status\n    get-v1-user-owns   \
    \ Retrieve the resources owned by the user\n    get-v1-user-groups  Retrieve group(s)\
    \ for a user\n    put-v1-user-group   Add or remove a user from group(s)\n   \
    \ get-v1-user-roles   Retrieve roles a user is in\n    put-v1-user-role    Add\
    \ or remove user from role(s)\n    put-v1-user-policy  Modify policy\n    get-v1-groups\
    \       List groups\n    post-v1-group       Create a new group\n    get-v1-group\
    \        Get properties of a group\n    delete-v1-group     Remove a group from\
    \ the system\n    get-v1-group-roles  Retrieve role(s) for a group\n    put-v1-group-role\
    \   Add or remove a group from role(s)\n    get-v1-group-users  Retrieve user(s)\
    \ in a group\n    put-v1-group-user   Add or remove user(s) from a group\n   \
    \ put-v1-group-policy\n                        Modify policy\n    get-v1-roles\
    \        List roles\n    post-v1-role        Create a new role\n    get-v1-role\
    \         Get properties of a role\n    delete-v1-role      Remove a role from\
    \ the system\n    put-v1-role-policy  Modify policy\n    login               Configure\
    \ and save hca auth authentication\n                        credentials.\n   \
    \ logout              Clear hca auth authentication credentials previously\n \
    \                       configured with hca auth login.\n\nOptional Arguments:\n\
    \  -h, --help            show this help message and exit\n\n"
  generated_using: *id003
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: hca auth put-v1-role-policy [-h] [--policy POLICY] --role-id ROLE_ID\n\
  \nModify the IAM policy attached to the role.\n\nOptional Arguments:\n  -h, --help\
  \         show this help message and exit\n  --policy POLICY\n\nRequired Arguments:\n\
  \  --role-id ROLE_ID  The name of the role.\n\n"
generated_using: *id003
