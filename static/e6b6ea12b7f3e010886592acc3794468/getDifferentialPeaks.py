from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Directory

Getdifferentialpeaks_V0_1_0 = CommandToolBuilder(tool="getDifferentialPeaks", base_command=["getDifferentialPeaks"], inputs=[ToolInput(tag="in_fold_enrichment_background", input_type=Boolean(optional=True), prefix="-F", doc=InputDocumentation(doc="<#> (fold enrichment over background tag count, default: 4.0)")), ToolInput(tag="in_poisson_enrichment_pvalue", input_type=Boolean(optional=True), prefix="-P", doc=InputDocumentation(doc="<#> (poisson enrichment p-value over background tag count, default: 0.0001)")), ToolInput(tag="in_same", input_type=Boolean(optional=True), prefix="-same", doc=InputDocumentation(doc="(return similar peaks instead of different peaks)")), ToolInput(tag="in_rev", input_type=Boolean(optional=True), prefix="-rev", doc=InputDocumentation(doc="(return peaks with higher tag counts in background instead of target library)")), ToolInput(tag="in_size", input_type=Boolean(optional=True), prefix="-size", doc=InputDocumentation(doc="<#> (size of region around peak to count tags, default: -fixed)")), ToolInput(tag="in_fixed", input_type=Boolean(optional=True), prefix="-fixed", doc=InputDocumentation(doc="(Count tags relative to actual peak start and stop, default)\n'-size given' is the same as '-fixed'")), ToolInput(tag="in_strand", input_type=Boolean(optional=True), prefix="-strand", doc=InputDocumentation(doc="<both|+|-> (Strand [relative to peak] to count tags from, default:both)")), ToolInput(tag="in_tag_adjust", input_type=Boolean(optional=True), prefix="-tagAdjust", doc=InputDocumentation(doc="<#> (bp to shift tag positions to estimate fragment centers, default: auto)\n'-tagAdjust auto' uses half of the estimated tag fragment length")), ToolInput(tag="in_tag_adjust_bg", input_type=Boolean(optional=True), prefix="-tagAdjustBg", doc=InputDocumentation(doc="<#> (bp to shift background tag positions to estimate fragment centers, default: auto)\n'-tagAdjustBg auto' uses half of the estimated tag fragment length")), ToolInput(tag="in_tbp", input_type=Boolean(optional=True), prefix="-tbp", doc=InputDocumentation(doc="<#> (Maximum tags per bp to count, 0 = no limit, default: 0)")), ToolInput(tag="in_tbp_bg", input_type=Boolean(optional=True), prefix="-tbpBg", doc=InputDocumentation(doc="<#> (Maximum background tags per bp to count, 0 = no limit, default: 0)")), ToolInput(tag="in_peak_file", input_type=File(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_target_tag_directory", input_type=Directory(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_background_tag_directory", input_type=Directory(), position=2, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Getdifferentialpeaks_V0_1_0().translate("wdl", allow_empty_container=True)

