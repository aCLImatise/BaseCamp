from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean

Angsd_V0_1_0 = CommandToolBuilder(tool="angsd", base_command=["angsd"], inputs=[ToolInput(tag="in_n_threads", input_type=Boolean(optional=True), prefix="-nThreads", doc=InputDocumentation(doc="1       Number of threads to use")), ToolInput(tag="in_n_queue_size", input_type=Boolean(optional=True), prefix="-nQueueSize", doc=InputDocumentation(doc="Maximum number of queud elements")), ToolInput(tag="in_how_often", input_type=Boolean(optional=True), prefix="-howOften", doc=InputDocumentation(doc="100     How often should the program show progress")), ToolInput(tag="in_gl", input_type=Boolean(optional=True), prefix="-GL", doc=InputDocumentation(doc="Estimate genotype likelihoods")), ToolInput(tag="in_do_counts", input_type=Boolean(optional=True), prefix="-doCounts", doc=InputDocumentation(doc="Calculate various counts statistics")), ToolInput(tag="in_do_asso", input_type=Boolean(optional=True), prefix="-doAsso", doc=InputDocumentation(doc="Perform association study")), ToolInput(tag="in_do_maf", input_type=Boolean(optional=True), prefix="-doMaf", doc=InputDocumentation(doc="Estimate allele frequencies")), ToolInput(tag="in_do_error", input_type=Boolean(optional=True), prefix="-doError", doc=InputDocumentation(doc="Estimate the type specific error rates")), ToolInput(tag="in_do_anc_error", input_type=Boolean(optional=True), prefix="-doAncError", doc=InputDocumentation(doc="Estimate the errorrate based on perfect fastas")), ToolInput(tag="in_h_we_pval", input_type=Boolean(optional=True), prefix="-HWE_pval", doc=InputDocumentation(doc="Est inbreedning per site or use as filter")), ToolInput(tag="in_do_geno", input_type=Boolean(optional=True), prefix="-doGeno", doc=InputDocumentation(doc="Call genotypes")), ToolInput(tag="in_do_fast_a", input_type=Boolean(optional=True), prefix="-doFasta", doc=InputDocumentation(doc="Generate a fasta for a BAM file")), ToolInput(tag="in_do_abba_baba", input_type=Boolean(optional=True), prefix="-doAbbababa", doc=InputDocumentation(doc="Perform an ABBA-BABA test")), ToolInput(tag="in_sites", input_type=Boolean(optional=True), prefix="-sites", doc=InputDocumentation(doc="Analyse specific sites (can force major/minor)")), ToolInput(tag="in_do_saf", input_type=Boolean(optional=True), prefix="-doSaf", doc=InputDocumentation(doc="Estimate the SFS and/or neutrality tests genotype calling")), ToolInput(tag="in_do_het_plas", input_type=Boolean(optional=True), prefix="-doHetPlas", doc=InputDocumentation(doc="Estimate hetplasmy by calculating a pooled haploid frequency")), ToolInput(tag="in_bam", input_type=Boolean(optional=True), prefix="-bam", doc=InputDocumentation(doc="Options relating to bam reading")), ToolInput(tag="in_do_major_minor", input_type=Boolean(optional=True), prefix="-doMajorMinor", doc=InputDocumentation(doc="Infer the major/minor using different approaches")), ToolInput(tag="in_ref", input_type=Boolean(optional=True), prefix="-ref", doc=InputDocumentation(doc="Read reference or ancestral genome")), ToolInput(tag="in_do_snp_stat", input_type=Boolean(optional=True), prefix="-doSNPstat", doc=InputDocumentation(doc="Calculate various SNPstat")), ToolInput(tag="in_cig_stat", input_type=Boolean(optional=True), prefix="-cigstat", doc=InputDocumentation(doc="Printout CIGAR stat across readlength")), ToolInput(tag="in_do_bcf", input_type=Boolean(optional=True), prefix="-doBcf", doc=InputDocumentation(doc="Wrapper around -dopost -domajorminor -dofreq -gl -dovcf docounts"))], outputs=[], container="quay.io/biocontainers/angsd:0.935--hd2e4403_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Angsd_V0_1_0().translate("wdl")

