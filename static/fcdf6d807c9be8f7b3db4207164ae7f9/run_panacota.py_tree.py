from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Directory, String, Int, Boolean

Run_Panacota_Py_Tree_V0_1_0 = CommandToolBuilder(tool="run_panacota.py_tree", base_command=["run_panacota.py", "tree"], inputs=[ToolInput(tag="in_alignment_file_multifasta", input_type=File(optional=True), prefix="-a", doc=InputDocumentation(doc="Alignment file in multi-fasta: each header will be a\nleaf of the inferred tree.")), ToolInput(tag="in_directory_where_results", input_type=Directory(optional=True), prefix="-o", doc=InputDocumentation(doc="Directory where tree results will be saved.")), ToolInput(tag="in_soft", input_type=String(optional=True), prefix="--soft", doc=InputDocumentation(doc="Choose with which software you want to infer the\nphylogenetic tree. Default is IQtree2 (versions 2.x of\nIQtree). If you want version 1.x of IQtree, use '-s\niqtree'")), ToolInput(tag="in_boot", input_type=Int(optional=True), prefix="--boot", doc=InputDocumentation(doc="Indicate how many bootstraps you want to compute. By\ndefault, no bootstrap is calculated. For IQtree, it\nwill use ultrafast bootstrap (>=1000).")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="add this option if you want to parallelize on several\nthreads. Indicate on how many threads you want to\nparallelize. By default, it uses 1 thread. Put 0 if\nyou want to use all threads of your computer. Not\navailable with quicktree.")), ToolInput(tag="in_model", input_type=Int(optional=True), prefix="--model", doc=InputDocumentation(doc="Choose your DNA substitution model. Default for\nFastTree and IQtree: GTR. Default for FastME: TN93.\nFor FastTree, the choices are 'GTR' and 'JC'. For\nFastME, choices are: 'p-distance' (or 'p'), 'RY\nsymmetric' (or 'Y'), 'RY' (or 'R'), 'JC69' (or 'J'),\n'K2P' (or 'K'), 'F81' (or '1'), 'F84' (or '4'), 'TN93'\n(or 'T'), 'LogDet' (or 'L'). For IQtree, choices are\nHKY, JC, F81, K2P, K3P, K81uf, TNef, TIM, TIMef, TVM,\nTVMef, SYM, GTR.")), ToolInput(tag="in_add_option_you_want_write", input_type=Boolean(optional=True), prefix="-B", doc=InputDocumentation(doc="Add this option if you want to write all bootstrap\npseudo-trees. Only available with FastME and IQtree.")), ToolInput(tag="in_mem", input_type=String(optional=True), prefix="--mem", doc=InputDocumentation(doc="Maximal RAM usage in GB | MB. Only available with")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Increase verbosity in stdout/stderr.")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="Do not display anything to stdout/stderr. log files\nwill still be created.")), ToolInput(tag="in_iq_tree_dot", input_type=String(), position=0, doc=InputDocumentation(doc="-fast                 Use -fast option with iqtree."))], outputs=[], container="quay.io/biocontainers/panacota:1.2.0--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Run_Panacota_Py_Tree_V0_1_0().translate("wdl")

