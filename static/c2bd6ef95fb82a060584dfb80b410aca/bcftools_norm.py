from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, File, Int

Bcftools_Norm_V0_1_0 = CommandToolBuilder(tool="bcftools_norm", base_command=["bcftools", "norm"], inputs=[ToolInput(tag="in_atomize", input_type=Boolean(optional=True), prefix="--atomize", doc=InputDocumentation(doc="Decompose complex variants (e.g. MNVs become consecutive SNVs)")), ToolInput(tag="in_atom_overlaps", input_type=Boolean(optional=True), prefix="--atom-overlaps", doc=InputDocumentation(doc="'*'|.       Use the star allele (*) for overlapping alleles or set to missing (.) [*]")), ToolInput(tag="in_check_ref", input_type=String(optional=True), prefix="--check-ref", doc=InputDocumentation(doc="|w|x|s         Check REF alleles and exit (e), warn (w), exclude (x), or set (s) bad sites [e]")), ToolInput(tag="in_remove_duplicates", input_type=Boolean(optional=True), prefix="--remove-duplicates", doc=InputDocumentation(doc="Remove duplicate lines of the same type.")), ToolInput(tag="in_rm_dup", input_type=String(optional=True), prefix="--rm-dup", doc=InputDocumentation(doc="Remove duplicate snps|indels|both|all|exact")), ToolInput(tag="in_fast_a_ref", input_type=File(optional=True), prefix="--fasta-ref", doc=InputDocumentation(doc="Reference sequence")), ToolInput(tag="in_force", input_type=Boolean(optional=True), prefix="--force", doc=InputDocumentation(doc="Try to proceed even if malformed tags are encountered. Experimental, use at your own risk")), ToolInput(tag="in_keep_sum", input_type=Int(optional=True), prefix="--keep-sum", doc=InputDocumentation(doc=",..           Keep vector sum constant when splitting multiallelics (see github issue #360)")), ToolInput(tag="in_multi_allelic_s", input_type=Boolean(optional=True), prefix="--multiallelics", doc=InputDocumentation(doc="-|+TYPE     Split multiallelics (-) or join biallelics (+), type: snps|indels|both|any [both]")), ToolInput(tag="in_no_version", input_type=Boolean(optional=True), prefix="--no-version", doc=InputDocumentation(doc="Do not append version and command line to the header")), ToolInput(tag="in_do_not_normalize", input_type=Boolean(optional=True), prefix="--do-not-normalize", doc=InputDocumentation(doc="Do not normalize indels (with -m or -c s)")), ToolInput(tag="in_old_rec_tag", input_type=String(optional=True), prefix="--old-rec-tag", doc=InputDocumentation(doc="Annotate modified records with INFO/STR indicating the original variant")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="Write output to a file [standard output]")), ToolInput(tag="in_output_type", input_type=String(optional=True), prefix="--output-type", doc=InputDocumentation(doc="'b' compressed BCF; 'u' uncompressed BCF; 'z' compressed VCF; 'v' uncompressed VCF [v]")), ToolInput(tag="in_regions", input_type=String(optional=True), prefix="--regions", doc=InputDocumentation(doc="Restrict to comma-separated list of regions")), ToolInput(tag="in_regions_file", input_type=File(optional=True), prefix="--regions-file", doc=InputDocumentation(doc="Restrict to regions listed in a file")), ToolInput(tag="in_strict_filter", input_type=Boolean(optional=True), prefix="--strict-filter", doc=InputDocumentation(doc="When merging (-m+), merged site is PASS only if all sites being merged PASS")), ToolInput(tag="in_targets", input_type=String(optional=True), prefix="--targets", doc=InputDocumentation(doc="Similar to -r but streams rather than index-jumps")), ToolInput(tag="in_targets_file", input_type=File(optional=True), prefix="--targets-file", doc=InputDocumentation(doc="Similar to -R but streams rather than index-jumps")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Use multithreading with <int> worker threads [0]")), ToolInput(tag="in_site_win", input_type=Int(optional=True), prefix="--site-win", doc=InputDocumentation(doc="Buffer for sorting lines which changed position during realignment [1000]")), ToolInput(tag="in_in_dot_vcf_do_tgz", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="Write output to a file [standard output]"))], container="quay.io/biocontainers/bcftools:1.12--h3f113a9_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bcftools_Norm_V0_1_0().translate("wdl")

