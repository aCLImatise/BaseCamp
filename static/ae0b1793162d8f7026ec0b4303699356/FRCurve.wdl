version 1.0

task FRCurve {
  input {
    String? d
    String description
    String each
    String for
    String given
    String var_5
    String var_6
    String assembler
    String errors
    String http
    String? params
    String feature_response
    String any
    String var_as
    File var_file
    String more
    String a
    String contains
    String curve
    String details
    String format
    String set
    String characterizes
    String function
    String var_24
    String see
    String frcs
    String features
    String is
    String of
    String var_30
    String analyzed
    String computed
    String in
    String its
    String sensitivity
    String wiki
    Int three_columns
    String by
    String discrimination
    String page
    String at
    String threshold
    String amos_validate
    String pipeline
    String maximum
    Int number
  }
  command <<<
    FRCurve \
      ~{description} \
      ~{each} \
      ~{for} \
      ~{given} \
      ~{var_5} \
      ~{var_6} \
      ~{assembler} \
      ~{errors} \
      ~{http} \
      ~{params} \
      ~{feature_response} \
      ~{any} \
      ~{var_as} \
      ~{var_file} \
      ~{more} \
      ~{a} \
      ~{contains} \
      ~{curve} \
      ~{details} \
      ~{format} \
      ~{set} \
      ~{characterizes} \
      ~{function} \
      ~{var_24} \
      ~{see} \
      ~{frcs} \
      ~{features} \
      ~{is} \
      ~{of} \
      ~{var_30} \
      ~{analyzed} \
      ~{computed} \
      ~{in} \
      ~{its} \
      ~{sensitivity} \
      ~{wiki} \
      ~{three_columns} \
      ~{by} \
      ~{discrimination} \
      ~{page} \
      ~{at} \
      ~{threshold} \
      ~{amos_validate} \
      ~{pipeline} \
      ~{maximum} \
      ~{number} \
      ~{if defined(d) then ("-D " +  '"' + d + '"') else ""}
  >>>
  runtime {
    docker: "None"
  }
  parameter_meta {
    d: ""
    description: ""
    each: ""
    for: ""
    given: ""
    var_5: ""
    var_6: ""
    assembler: ""
    errors: ""
    http: ""
    params: ""
    feature_response: ""
    any: ""
    var_as: ""
    var_file: ""
    more: ""
    a: ""
    contains: ""
    curve: ""
    details: ""
    format: ""
    set: ""
    characterizes: ""
    function: ""
    var_24: ""
    see: ""
    frcs: ""
    features: ""
    is: ""
    of: ""
    var_30: ""
    analyzed: ""
    computed: ""
    in: ""
    its: ""
    sensitivity: ""
    wiki: ""
    three_columns: ""
    by: ""
    discrimination: ""
    page: ""
    at: ""
    threshold: ""
    amos_validate: ""
    pipeline: ""
    maximum: ""
    number: ""
  }
  output {
    File out_stdout = stdout()
  }
}