!Command
command:
- make_logitModel.py
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -c
  - --cgene
  description: "Protein coding transcripts (used to build logit model)\neither in\
    \ BED format or mRNA sequences in FASTA\nformat: If this is BED format file, '-r'\
    \ must be\nspecified; if this is mRNA sequence file in FASTA\nformat, ignore the\
    \ '-r' option. The input BED or FASTA\nfile could be regular text file or compressed\
    \ file\n(*.gz, *.bz2) or accessible url. NOTE: transcript ID\nshould be unique."
  args: !SimpleFlagArg
    name: CODING_FILE
- !Flag
  optional: true
  synonyms:
  - -n
  - --ngene
  description: "Non protein coding transcripts (used to build logit\nmodel) either\
    \ in BED format or mRNA sequences in FASTA\nformat: If this is BED format file,\
    \ '-r' must be\nspecified; if this is mRNA sequence file in FASTA\nformat, ignore\
    \ the '-r' option. The input BED or FASTA\nfile could be regular text file or\
    \ compressed file\n(*.gz, *.bz2) or accessible url.  NOTE: transcript ID\nshould\
    \ be unique."
  args: !SimpleFlagArg
    name: NONCODING_FILE
- !Flag
  optional: true
  synonyms:
  - -o
  - --outfile
  description: output prefix.
  args: !SimpleFlagArg
    name: OUT_FILE
- !Flag
  optional: true
  synonyms:
  - -x
  - --hex
  description: "Prebuilt hexamer frequency table (Human, Mouse, Fly,\nZebrafish).\
    \ Run 'make_hexamer_tab.py' to generate this\ntable."
  args: !SimpleFlagArg
    name: HEXAMER_DAT
- !Flag
  optional: true
  synonyms:
  - -r
  - --ref
  description: "Reference genome sequences in FASTA format. Ignore\nthis option if\
    \ mRNA sequences file was provided to\n'-g'. Reference genome file will be indexed\n\
    automatically (produce *.fai file along with the\noriginal *.fa file within the\
    \ same directory) if\nhasn't been done."
  args: !SimpleFlagArg
    name: REF_GENOME
- !Flag
  optional: true
  synonyms:
  - -s
  - --start
  description: "Start codon (DNA sequence, so use 'T' instead of 'U')\nused to define\
    \ open reading frame (ORF). default=ATG"
  args: !SimpleFlagArg
    name: START_CODONS
- !Flag
  optional: true
  synonyms:
  - -t
  - --stop
  description: "Stop codon (DNA sequence, so use 'T' instead of 'U')\nused to define\
    \ open reading frame (ORF). Multiple stop\ncodons should be separated by ','.\
    \ default=TAG,TAA,TGA\n"
  args: !SimpleFlagArg
    name: STOP_CODONS
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - --version
  description: show program's version number and exit
  args: !EmptyFlagArg {}
help_text: "Usage: \nmake_logitModel.py  [options]\n\nOptions:\n  --version      \
  \       show program's version number and exit\n  -h, --help            show this\
  \ help message and exit\n  -c CODING_FILE, --cgene=CODING_FILE\n               \
  \         Protein coding transcripts (used to build logit model)\n             \
  \           either in BED format or mRNA sequences in FASTA\n                  \
  \      format: If this is BED format file, '-r' must be\n                      \
  \  specified; if this is mRNA sequence file in FASTA\n                        format,\
  \ ignore the '-r' option. The input BED or FASTA\n                        file could\
  \ be regular text file or compressed file\n                        (*.gz, *.bz2)\
  \ or accessible url. NOTE: transcript ID\n                        should be unique.\n\
  \  -n NONCODING_FILE, --ngene=NONCODING_FILE\n                        Non protein\
  \ coding transcripts (used to build logit\n                        model) either\
  \ in BED format or mRNA sequences in FASTA\n                        format: If this\
  \ is BED format file, '-r' must be\n                        specified; if this is\
  \ mRNA sequence file in FASTA\n                        format, ignore the '-r' option.\
  \ The input BED or FASTA\n                        file could be regular text file\
  \ or compressed file\n                        (*.gz, *.bz2) or accessible url. \
  \ NOTE: transcript ID\n                        should be unique.\n  -o OUT_FILE,\
  \ --outfile=OUT_FILE\n                        output prefix.\n  -x HEXAMER_DAT,\
  \ --hex=HEXAMER_DAT\n                        Prebuilt hexamer frequency table (Human,\
  \ Mouse, Fly,\n                        Zebrafish). Run 'make_hexamer_tab.py' to\
  \ generate this\n                        table.\n  -r REF_GENOME, --ref=REF_GENOME\n\
  \                        Reference genome sequences in FASTA format. Ignore\n  \
  \                      this option if mRNA sequences file was provided to\n    \
  \                    '-g'. Reference genome file will be indexed\n             \
  \           automatically (produce *.fai file along with the\n                 \
  \       original *.fa file within the same directory) if\n                     \
  \   hasn't been done.\n  -s START_CODONS, --start=START_CODONS\n               \
  \         Start codon (DNA sequence, so use 'T' instead of 'U')\n              \
  \          used to define open reading frame (ORF). default=ATG\n  -t STOP_CODONS,\
  \ --stop=STOP_CODONS\n                        Stop codon (DNA sequence, so use 'T'\
  \ instead of 'U')\n                        used to define open reading frame (ORF).\
  \ Multiple stop\n                        codons should be separated by ','. default=TAG,TAA,TGA\n"
generated_using:
- --help
docker_image:
