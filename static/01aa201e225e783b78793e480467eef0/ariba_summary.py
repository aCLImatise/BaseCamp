from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Int, Boolean, Float

Ariba_Summary_V0_1_0 = CommandToolBuilder(tool="ariba_summary", base_command=["ariba", "summary"], inputs=[ToolInput(tag="in_fof_n", input_type=File(optional=True), prefix="--fofn", doc=InputDocumentation(doc="File of filenames of ariba reports to be summarised.\nMust be used if no input files listed after the\noutfile. The first column should be the filename. An\noptional second column can be used to specify a sample\nname for that file, which will be used instead of the\nfilename in output files. Columns separated by\nwhitespace.")), ToolInput(tag="in_preset", input_type=String(optional=True), prefix="--preset", doc=InputDocumentation(doc="|cluster_small|cluster_all|cluster_var_groups|all|all_no_filter\nShorthand for setting --cluster_cols,--col_filter,--\nrow_filter,--v_groups,--variants. Using this overrides\nthose options")), ToolInput(tag="in_cluster_cols", input_type=Int(optional=True), prefix="--cluster_cols", doc=InputDocumentation(doc=",col2,...\nComma separated list of cluster columns to include.\nChoose from: assembled, match, ref_seq, pct_id,\nctg_cov, known_var, novel_var [match]")), ToolInput(tag="in_col_filter", input_type=String(optional=True), prefix="--col_filter", doc=InputDocumentation(doc="|n      Choose whether columns where all values are 'no' or\n'NA' are removed [y]")), ToolInput(tag="in_no_tree", input_type=Boolean(optional=True), prefix="--no_tree", doc=InputDocumentation(doc="Do not make phandango tree")), ToolInput(tag="in_row_filter", input_type=String(optional=True), prefix="--row_filter", doc=InputDocumentation(doc="|n      Choose whether rows where all values are 'no' or 'NA'\nare removed [y]")), ToolInput(tag="in_min_id", input_type=Float(optional=True), prefix="--min_id", doc=InputDocumentation(doc="Minimum percent identity cutoff to count as assembled\n[90]")), ToolInput(tag="in_only_clusters", input_type=Int(optional=True), prefix="--only_clusters", doc=InputDocumentation(doc="Only report data for the given comma-separated list of\ncluster names, eg: cluster1,cluster2,cluster42")), ToolInput(tag="in_v_groups", input_type=Boolean(optional=True), prefix="--v_groups", doc=InputDocumentation(doc="Show a group column for each group of variants")), ToolInput(tag="in_known_variants", input_type=Boolean(optional=True), prefix="--known_variants", doc=InputDocumentation(doc="Report all known variants")), ToolInput(tag="in_novel_variants", input_type=Boolean(optional=True), prefix="--novel_variants", doc=InputDocumentation(doc="Report all novel variants")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Be verbose")), ToolInput(tag="in_out_prefix", input_type=String(), position=0, doc=InputDocumentation(doc="Prefix of output files")), ToolInput(tag="in_in_files", input_type=String(), position=1, doc=InputDocumentation(doc="Files to be summarised"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Ariba_Summary_V0_1_0().translate("wdl", allow_empty_container=True)

