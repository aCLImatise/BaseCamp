!Command
positional: []
named:
- !Flag
  description: Anvi'o contigs database generated by 'anvi-gen- contigs'
  synonyms:
  - -c
  - --contigs-db
  args: !SimpleFlagArg
    name: CONTIGS_DB
  optional: true
- !Flag
  description: Treat a given contigs database as a metagenome rather than treating
    it as a single genome.
  synonyms:
  - -m
  - --metagenome-mode
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Anvi'o profile database
  synonyms:
  - -p
  - --profile-db
  args: !SimpleFlagArg
    name: PROFILE_DB
  optional: true
- !Flag
  description: Collection name.
  synonyms:
  - -C
  - --collection-name
  args: !SimpleFlagArg
    name: COLLECTION_NAME
  optional: true
- !Flag
  description: "A two-column TAB-delimited flat text file. The header line must contain\
    \ these columns: 'name', 'contigs_db_path', and 'profile_db_path'. Each line should\
    \ list a single entry, where 'name' can be any name to describe the metagenome\
    \ stored in the anvi'o contigs database. In this context, the anvi'o profiles\
    \ associated with contigs database must be SINGLE PROFILES, as in generated by\
    \ the program `anvi- profile` and not `anvi-merge`."
  synonyms:
  - -M
  - --metagenomes
  args: !SimpleFlagArg
    name: FILE_PATH
  optional: true
- !Flag
  description: File path to store results.
  synonyms:
  - -o
  - --output-file
  args: !SimpleFlagArg
    name: FILE_PATH
  optional: true
- !Flag
  description: A prefix to be used while naming the output files (no file type extensions
    please; just a prefix).
  synonyms:
  - -O
  - --output-file-prefix
  args: !SimpleFlagArg
    name: FILENAME_PREFIX
  optional: true
- !Flag
  description: The taxonomic level to use whenever relevant and/or available. The
    default taxonomic level is None, but if you choose something specific, anvi'o
    will focus on that whenever possible.
  synonyms:
  - --taxonomic-level
  args: !ChoiceFlagArg
    choices: !!set
      t_species:
      t_domain:
      t_order:
      t_genus:
      t_class:
      t_phylum:
      t_family:
  optional: true
- !Flag
  description: If you want the reports to look like sparse matrices whenever possible,
    declare this flag. Matrices are especially good to use when you are working with
    internal/external genomes since they can show you quickly the distribution of
    each taxon across all metagenomes in programs like EXCEL. WELL TRY IT AND SEE.
  synonyms:
  - --matrix-format
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Just store the raw output without any processing of the primary data
    structure.
  synonyms:
  - --raw-output
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Maximum number of threads to use for multithreading whenever possible.
    Very conservatively, the default is 1. It is a good idea to not exceed the number
    of CPUs / cores on your system. Plus, please be careful with this option if you
    are running your commands on a SGE --if you are clusterizing your runs, and asking
    for multiple threads to use, you may deplete your resources very fast.
  synonyms:
  - -T
  - --num-threads
  args: !SimpleFlagArg
    name: NUM_THREADS
  optional: true
- !Flag
  description: When running in metagenome mode, anvi'o automatically chooses the most
    frequent single-copy core gene to estimate the taxonomic composition within a
    contigs database. If you have a different preference you can use this parameter
    to communicate that.
  synonyms:
  - -S
  - --scg-name-for-metagenome-mode
  args: !SimpleFlagArg
    name: SCG_NAME
  optional: true
- !Flag
  description: Report SCG frequencies in a TAB-delimited file and quit. This is a
    great way to decide which SCG name to use in metagenome mode (we often wish to
    use the most frequent SCG to increase the detection of taxa).
  synonyms:
  - --report-scg-frequencies
  args: !SimpleFlagArg
    name: FILE_PATH
  optional: true
- !Flag
  description: Don't bother me with questions or warnings, just do it.
  synonyms:
  - --just-do-it
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: The taxonomy output may include a large number of names that contain
    clade-specific code for not-yet- characterized taxa. With this flag you can simplify
    taxon names. This will influence all output files and displays as the use of this
    flag will on-the-fly trim taxonomic levels with clade-specific code names.
  synonyms:
  - --simplify-taxonomy-information
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: When this flag is declared, anvi'o will go back to the profile database
    to learn coverage statistics of single-copy core genes for which we have taxonomy
    information.
  synonyms:
  - --compute-scg-coverages
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: When anvi'o knows all both taxonomic affiliations and coverages across
    samples for single-copy core genes, it can, in theory add this information to
    the profile database. With this flag you can instruct anvi'o to do that and find
    information on taxonomy in the `layers` tab of your interactive interface.
  synonyms:
  - --update-profile-db-with-taxonomy
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Path to the directory that contains the BLAST databases for single-copy
    core genes. You will almost never need to use this parameter unless you are trying
    something very fancy. But when you do, you can tell anvi'o where to look for database
    files through this parameter.
  synonyms:
  - -r
  - --taxonomy-database
  args: !SimpleFlagArg
    name: PATH
  optional: true
command:
- anvi-estimate-scg-taxonomy
parent:
subcommands: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: anvi-estimate-scg-taxonomy [-h] [-c CONTIGS_DB] [-m] [-p PROFILE_DB]\n\
  \                                  [-C COLLECTION_NAME] [-M FILE_PATH]\n       \
  \                           [-o FILE_PATH] [-O FILENAME_PREFIX]\n              \
  \                    [--taxonomic-level {t_domain,t_phylum,t_class,t_order,t_family,t_genus,t_species}]\n\
  \                                  [--matrix-format] [--raw-output]\n          \
  \                        [-T NUM_THREADS] [-S SCG_NAME]\n                      \
  \            [--report-scg-frequencies FILE_PATH]\n                            \
  \      [--just-do-it]\n                                  [--simplify-taxonomy-information]\n\
  \                                  [--compute-scg-coverages]\n                 \
  \                 [--update-profile-db-with-taxonomy]\n                        \
  \          [-r PATH]\n\nEstimates taxonomy at genome and metagenome level. This\
  \ program is the entry\npoint to estimate taxonomy for a given set of contigs (i.e.,\
  \ all contigs in a\ncontigs database, or contigs described in collections as bins).\
  \ For this, it\nuses single-copy core gene sequences and the GTDB database.\n\n\
  optional arguments:\n  -h, --help            show this help message and exit\n\n\
  INPUT #1:\n  The minimum you must provide this program is a contigs database. In\
  \ which\n  case anvi'o will attempt to estimate taxonomy for all contigs in it,\n\
  \  assuming that the contigs database represents a single genome. If the\n  contigs\
  \ database is actually a metagenome, you should use the\n  `--metagenome` flag to\
  \ explicitly declare that.\n\n  -c CONTIGS_DB, --contigs-db CONTIGS_DB\n       \
  \                 Anvi'o contigs database generated by 'anvi-gen-\n            \
  \            contigs'\n  -m, --metagenome-mode\n                        Treat a\
  \ given contigs database as a metagenome rather\n                        than treating\
  \ it as a single genome.\n\nINPUT #2:\n  In addition, you can also point out a profile\
  \ database. In which case you\n  also must provide a collection name. When you do\
  \ that anvi'o will offer\n  taxonomy estimates for each bin in your collection.\n\
  \n  -p PROFILE_DB, --profile-db PROFILE_DB\n                        Anvi'o profile\
  \ database\n  -C COLLECTION_NAME, --collection-name COLLECTION_NAME\n          \
  \              Collection name.\n\nINPUT #3:\n  You can also work with a metagenomes\
  \ file, assuming that you have multiple\n  metagenomes with or without associated\
  \ mapping results, and anvi'o would\n  generate a singe output file for all.\n\n\
  \  -M FILE_PATH, --metagenomes FILE_PATH\n                        A two-column TAB-delimited\
  \ flat text file. The header\n                        line must contain these columns:\
  \ 'name',\n                        'contigs_db_path', and 'profile_db_path'. Each\
  \ line\n                        should list a single entry, where 'name' can be\
  \ any\n                        name to describe the metagenome stored in the anvi'o\n\
  \                        contigs database. In this context, the anvi'o profiles\n\
  \                        associated with contigs database must be SINGLE\n     \
  \                   PROFILES, as in generated by the program `anvi-\n          \
  \              profile` and not `anvi-merge`.\n\nOUTPUT AND FORMATTING:\n  Anvi'o\
  \ will do its best to offer you some fancy output tables for your\n  viewing pleasure\
  \ by default. But in addition to that, you can ask the\n  resulting information\
  \ to be stored in a TAB-delimited file (which is a\n  much better way to include\
  \ the results in your study as supplementary\n  information, or work with these\
  \ results using other analysis tools such as\n  R). Depending on the mode you are\
  \ running this program, anvi'o may ask you\n  to use an 'output file prefix' rather\
  \ than an 'output file path'.\n\n  -o FILE_PATH, --output-file FILE_PATH\n     \
  \                   File path to store results.\n  -O FILENAME_PREFIX, --output-file-prefix\
  \ FILENAME_PREFIX\n                        A prefix to be used while naming the\
  \ output files (no\n                        file type extensions please; just a\
  \ prefix).\n  --taxonomic-level {t_domain,t_phylum,t_class,t_order,t_family,t_genus,t_species}\n\
  \                        The taxonomic level to use whenever relevant and/or\n \
  \                       available. The default taxonomic level is None, but if\n\
  \                        you choose something specific, anvi'o will focus on\n \
  \                       that whenever possible.\n  --matrix-format       If you\
  \ want the reports to look like sparse matrices\n                        whenever\
  \ possible, declare this flag. Matrices are\n                        especially\
  \ good to use when you are working with\n                        internal/external\
  \ genomes since they can show you\n                        quickly the distribution\
  \ of each taxon across all\n                        metagenomes in programs like\
  \ EXCEL. WELL TRY IT AND\n                        SEE.\n  --raw-output         \
  \ Just store the raw output without any processing of\n                        the\
  \ primary data structure.\n\nPERFORMANCE:\n  We are not sure if allocating more\
  \ threads for this operation will change\n  anything. But hey. One can try.\n\n\
  \  -T NUM_THREADS, --num-threads NUM_THREADS\n                        Maximum number\
  \ of threads to use for multithreading\n                        whenever possible.\
  \ Very conservatively, the default is\n                        1. It is a good idea\
  \ to not exceed the number of CPUs\n                        / cores on your system.\
  \ Plus, please be careful with\n                        this option if you are running\
  \ your commands on a SGE\n                        --if you are clusterizing your\
  \ runs, and asking for\n                        multiple threads to use, you may\
  \ deplete your\n                        resources very fast.\n\nAUTHORITY:\n  Assert\
  \ your dominance.\n\n  -S SCG_NAME, --scg-name-for-metagenome-mode SCG_NAME\n  \
  \                      When running in metagenome mode, anvi'o automatically\n \
  \                       chooses the most frequent single-copy core gene to\n   \
  \                     estimate the taxonomic composition within a contigs\n    \
  \                    database. If you have a different preference you can\n    \
  \                    use this parameter to communicate that.\n  --report-scg-frequencies\
  \ FILE_PATH\n                        Report SCG frequencies in a TAB-delimited file\
  \ and\n                        quit. This is a great way to decide which SCG name\
  \ to\n                        use in metagenome mode (we often wish to use the most\n\
  \                        frequent SCG to increase the detection of taxa).\n  --just-do-it\
  \          Don't bother me with questions or warnings, just do\n               \
  \         it.\n\nADVANCED:\n  Very pro-like stuff.\n\n  --simplify-taxonomy-information\n\
  \                        The taxonomy output may include a large number of\n   \
  \                     names that contain clade-specific code for not-yet-\n    \
  \                    characterized taxa. With this flag you can simplify\n     \
  \                   taxon names. This will influence all output files and\n    \
  \                    displays as the use of this flag will on-the-fly trim\n   \
  \                     taxonomic levels with clade-specific code names.\n  --compute-scg-coverages\n\
  \                        When this flag is declared, anvi'o will go back to the\n\
  \                        profile database to learn coverage statistics of\n    \
  \                    single-copy core genes for which we have taxonomy\n       \
  \                 information.\n  --update-profile-db-with-taxonomy\n          \
  \              When anvi'o knows all both taxonomic affiliations and\n         \
  \               coverages across samples for single-copy core genes,\n         \
  \               it can, in theory add this information to the profile\n        \
  \                database. With this flag you can instruct anvi'o to do\n      \
  \                  that and find information on taxonomy in the `layers`\n     \
  \                   tab of your interactive interface.\n\nBORING:\n  Options that\
  \ you will likely never need.\n\n  -r PATH, --taxonomy-database PATH\n         \
  \               Path to the directory that contains the BLAST\n                \
  \        databases for single-copy core genes. You will almost\n               \
  \         never need to use this parameter unless you are trying\n             \
  \           something very fancy. But when you do, you can tell\n              \
  \          anvi'o where to look for database files through this\n              \
  \          parameter.\n"
generated_using:
- --help
