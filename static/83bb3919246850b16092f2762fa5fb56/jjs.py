from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean

Jjs_V0_1_0 = CommandToolBuilder(tool="jjs", base_command=["jjs"], inputs=[ToolInput(tag="in_dnamevalue_set_property", input_type=Boolean(optional=True), prefix="-D", doc=InputDocumentation(doc="(-Dname=value. Set a system property. This option can be repeated.)")), ToolInput(tag="in_add_modules", input_type=Boolean(optional=True), prefix="--add-modules", doc=InputDocumentation(doc="(--add-modules modules. Specify the root user java modules.)")), ToolInput(tag="in_classpath", input_type=Boolean(optional=True), prefix="-classpath", doc=InputDocumentation(doc="(-cp path. Specify where to find user class files.)")), ToolInput(tag="in_dump_on_error", input_type=Boolean(optional=True), prefix="-dump-on-error", doc=InputDocumentation(doc="(Dump a stack trace on errors.)\nparam: [true|false]   default: false")), ToolInput(tag="in_full_version", input_type=Boolean(optional=True), prefix="-fullversion", doc=InputDocumentation(doc="(Print full version info of Nashorn.)\nparam: [true|false]   default: false")), ToolInput(tag="in_fx", input_type=Boolean(optional=True), prefix="-fx", doc=InputDocumentation(doc="(Launch script as an fx application.)\nparam: [true|false]   default: false")), ToolInput(tag="in_language", input_type=Boolean(optional=True), prefix="--language", doc=InputDocumentation(doc="(Specify ECMAScript language version.)\nparam: [es5|es6]   default: es5")), ToolInput(tag="in_module_path", input_type=Boolean(optional=True), prefix="--module-path", doc=InputDocumentation(doc="(--module-path path. Specify where to find user java modules.)")), ToolInput(tag="in_no_deprecation_warning", input_type=Boolean(optional=True), prefix="--no-deprecation-warning", doc=InputDocumentation(doc="(Do not show nashorn deprecation warning.)\nparam: [true|false]   default: false")), ToolInput(tag="in_optimistic_types", input_type=Boolean(optional=True), prefix="--optimistic-types", doc=InputDocumentation(doc="(Use optimistic type assumptions with deoptimizing recompilation.\nThis makes the compiler try, for any program symbol whose type cannot\nbe proven at compile time, to type it as narrow and primitive as\npossible. If the runtime encounters an error because symbol type\nis too narrow, a wider method will be generated until steady stage\nis reached. While this produces as optimal Java Bytecode as possible,\nerroneous type guesses will lead to longer warmup. Optimistic typing\nis currently enabled by default, but can be disabled for faster\nstartup performance.)\nparam: [true|false]   default: true")), ToolInput(tag="in_scripting", input_type=Boolean(optional=True), prefix="-scripting", doc=InputDocumentation(doc="(Enable scripting features.)\nparam: [true|false]   default: false")), ToolInput(tag="in_strict", input_type=Boolean(optional=True), prefix="-strict", doc=InputDocumentation(doc="(Run scripts in strict mode.)\nparam: [true|false]   default: false")), ToolInput(tag="in_timezone", input_type=Boolean(optional=True), prefix="-timezone", doc=InputDocumentation(doc="(Set timezone for script execution.)\nparam: <timezone>   default: GMT")), ToolInput(tag="in_version", input_type=Boolean(optional=True), prefix="-version", doc=InputDocumentation(doc="(Print version info of Nashorn.)\nparam: [true|false]   default: false\n"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Jjs_V0_1_0().translate("wdl", allow_empty_container=True)

