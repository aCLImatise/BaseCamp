from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Directory, String, Int, Float, Boolean

Superfocus_V0_1_0 = CommandToolBuilder(tool="superfocus", base_command=["superfocus"], inputs=[ToolInput(tag="in_query", input_type=File(optional=True), prefix="--query", doc=InputDocumentation(doc="Path to FAST(A/Q) file or directory with these files.")), ToolInput(tag="in_output_directory", input_type=Directory(optional=True), prefix="--output_directory", doc=InputDocumentation(doc="Path to output files")), ToolInput(tag="in_output_prefix", input_type=String(optional=True), prefix="--output_prefix", doc=InputDocumentation(doc="Output prefix (Default: output).")), ToolInput(tag="in_aligner", input_type=String(optional=True), prefix="--aligner", doc=InputDocumentation(doc="aligner choice (rapsearch, diamond, or blast; default\nrapsearch).")), ToolInput(tag="in_minimum_identity", input_type=Int(optional=True), prefix="--minimum_identity", doc=InputDocumentation(doc="minimum identity (default 60 perc).")), ToolInput(tag="in_minimum_alignment", input_type=Int(optional=True), prefix="--minimum_alignment", doc=InputDocumentation(doc="minimum alignment (amino acids) (default: 15).")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number Threads used in the k-mer counting (Default:\n4).")), ToolInput(tag="in_evalue", input_type=Float(optional=True), prefix="--evalue", doc=InputDocumentation(doc="e-value (default 0.00001).")), ToolInput(tag="in_database", input_type=Int(optional=True), prefix="--database", doc=InputDocumentation(doc="database (DB_90, DB_95, DB_98, or DB_100; default\nDB_90)")), ToolInput(tag="in_amino_acid", input_type=Int(optional=True), prefix="--amino_acid", doc=InputDocumentation(doc="amino acid input; 0 nucleotides; 1 amino acids\n(default 0).")), ToolInput(tag="in_fast", input_type=Int(optional=True), prefix="--fast", doc=InputDocumentation(doc="runs RAPSearch2 or DIAMOND on fast mode - 0 (False) /\n1 (True) (default: 1).")), ToolInput(tag="in_normalise_output", input_type=Int(optional=True), prefix="--normalise_output", doc=InputDocumentation(doc="normalises each query counts based on number of hits;\n0 doesn't normalize; 1 normalizes (default: 1).")), ToolInput(tag="in_focus", input_type=Int(optional=True), prefix="--focus", doc=InputDocumentation(doc="runs FOCUS; 1 does run; 0 does not run: default 0.")), ToolInput(tag="in_alternate_directory", input_type=Directory(optional=True), prefix="--alternate_directory", doc=InputDocumentation(doc="Alternate directory for your databases.")), ToolInput(tag="in_delete_alignments", input_type=Boolean(optional=True), prefix="--delete_alignments", doc=InputDocumentation(doc="Delete alignments")), ToolInput(tag="in_log", input_type=File(optional=True), prefix="--log", doc=InputDocumentation(doc="Path to log file (Default: STDOUT).")), ToolInput(tag="in_v", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output_directory", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output_directory", type_hint=File()), doc=OutputDocumentation(doc="Path to output files"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Superfocus_V0_1_0().translate("wdl", allow_empty_container=True)

