from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File

Formatrpsdb_V0_1_0 = CommandToolBuilder(tool="formatrpsdb", base_command=["formatrpsdb"], inputs=[ToolInput(tag="in_title_database_file", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="Title for database file [String]  Optional")), ToolInput(tag="in_input_file_containing", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="Input file containing list of ASN.1 Scoremat filenames [File In]")), ToolInput(tag="in_logfile_name_formatrpsdblog", input_type=File(optional=True), prefix="-l", doc=InputDocumentation(doc="Logfile name [File Out]  Optional\ndefault = formatrpsdb.log")), ToolInput(tag="in_create_index_files", input_type=Boolean(optional=True), prefix="-o", doc=InputDocumentation(doc="Create index files for database [T/F]  Optional\ndefault = F")), ToolInput(tag="in_database_volume_size", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="Database volume size in millions of letters [Integer]  Optional\ndefault = 0\nrange from 0 to ?")), ToolInput(tag="in_scoremat_files_binary", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc="Scoremat files are binary [T/F]  Optional\ndefault = F")), ToolInput(tag="in_threshold_extending_hits", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc="Threshold for extending hits for RPS database [Real]  Optional\ndefault = 11.0")), ToolInput(tag="in_base_name_same", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="Base name of output database (same as input file if not specified) [String]  Optional")), ToolInput(tag="in_scoremats_contain_frequencies", input_type=Boolean(optional=True), prefix="-S", doc=InputDocumentation(doc="For scoremats that contain only residue frequencies, the scaling factor to apply when creating PSSMs [Real]  Optional\ndefault = 100.0")), ToolInput(tag="in_gap_opening_penalty", input_type=Boolean(optional=True), prefix="-G", doc=InputDocumentation(doc="The gap opening penalty (if not present in the scoremat) [Integer]  Optional\ndefault = 11")), ToolInput(tag="in_gap_extension_penalty", input_type=Boolean(optional=True), prefix="-E", doc=InputDocumentation(doc="The gap extension penalty (if not present in the scoremat) [Integer]  Optional\ndefault = 1")), ToolInput(tag="in_underlying_score_matrix", input_type=Boolean(optional=True), prefix="-U", doc=InputDocumentation(doc="Underlying score matrix (if not present in the scoremat) [String]  Optional\ndefault = BLOSUM62\n"))], outputs=[ToolOutput(tag="out_logfile_name_formatrpsdblog", output_type=File(optional=True), selector=InputSelector(input_to_select="in_logfile_name_formatrpsdblog", type_hint=File()), doc=OutputDocumentation(doc="Logfile name [File Out]  Optional\ndefault = formatrpsdb.log"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Formatrpsdb_V0_1_0().translate("wdl", allow_empty_container=True)

