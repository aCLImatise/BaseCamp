version 1.0

task Anviinteractive {
  input {
    String? profile_db
    String? contigs_db
    String? collection_name
    Boolean? manual_mode
    File? fast_a_file
    File? view_data
    String? tree
    File? items_order
    File? additional_view
    File? additional_layers
    Boolean? gene_mode
    Boolean? in_seq_stats
    String? bin_id
    File? title
    String? taxonomic_level
    Boolean? show_all_layers
    Boolean? split_hmm_layers
    Boolean? hide_outlier_sn_vs
    String? state_autoload
    String? collection_autoload
    File? export_svg
    Boolean? show_views
    Boolean? skip_check_names
    File? output_dir
    Boolean? dry_run
    Boolean? show_states
    Boolean? list_collections
    Boolean? skip_in_it_functions
    Boolean? skip_auto_ordering
    Boolean? skip_news
    String? distance
    String? linkage
    Float? ip_address
    Int? port_number
    File? browser_path
    Boolean? read_only
    Boolean? server_only
    Boolean? password_protected
    Boolean? user_server_shutdown
    String interface_dot
  }
  command <<<
    anvi_interactive \
      ~{interface_dot} \
      ~{if defined(profile_db) then ("--profile-db " +  '"' + profile_db + '"') else ""} \
      ~{if defined(contigs_db) then ("--contigs-db " +  '"' + contigs_db + '"') else ""} \
      ~{if defined(collection_name) then ("--collection-name " +  '"' + collection_name + '"') else ""} \
      ~{if (manual_mode) then "--manual-mode" else ""} \
      ~{if defined(fast_a_file) then ("--fasta-file " +  '"' + fast_a_file + '"') else ""} \
      ~{if defined(view_data) then ("--view-data " +  '"' + view_data + '"') else ""} \
      ~{if defined(tree) then ("--tree " +  '"' + tree + '"') else ""} \
      ~{if defined(items_order) then ("--items-order " +  '"' + items_order + '"') else ""} \
      ~{if defined(additional_view) then ("--additional-view " +  '"' + additional_view + '"') else ""} \
      ~{if defined(additional_layers) then ("--additional-layers " +  '"' + additional_layers + '"') else ""} \
      ~{if (gene_mode) then "--gene-mode" else ""} \
      ~{if (in_seq_stats) then "--inseq-stats" else ""} \
      ~{if defined(bin_id) then ("--bin-id " +  '"' + bin_id + '"') else ""} \
      ~{if defined(title) then ("--title " +  '"' + title + '"') else ""} \
      ~{if defined(taxonomic_level) then ("--taxonomic-level " +  '"' + taxonomic_level + '"') else ""} \
      ~{if (show_all_layers) then "--show-all-layers" else ""} \
      ~{if (split_hmm_layers) then "--split-hmm-layers" else ""} \
      ~{if (hide_outlier_sn_vs) then "--hide-outlier-SNVs" else ""} \
      ~{if defined(state_autoload) then ("--state-autoload " +  '"' + state_autoload + '"') else ""} \
      ~{if defined(collection_autoload) then ("--collection-autoload " +  '"' + collection_autoload + '"') else ""} \
      ~{if defined(export_svg) then ("--export-svg " +  '"' + export_svg + '"') else ""} \
      ~{if (show_views) then "--show-views" else ""} \
      ~{if (skip_check_names) then "--skip-check-names" else ""} \
      ~{if defined(output_dir) then ("--output-dir " +  '"' + output_dir + '"') else ""} \
      ~{if (dry_run) then "--dry-run" else ""} \
      ~{if (show_states) then "--show-states" else ""} \
      ~{if (list_collections) then "--list-collections" else ""} \
      ~{if (skip_in_it_functions) then "--skip-init-functions" else ""} \
      ~{if (skip_auto_ordering) then "--skip-auto-ordering" else ""} \
      ~{if (skip_news) then "--skip-news" else ""} \
      ~{if defined(distance) then ("--distance " +  '"' + distance + '"') else ""} \
      ~{if defined(linkage) then ("--linkage " +  '"' + linkage + '"') else ""} \
      ~{if defined(ip_address) then ("--ip-address " +  '"' + ip_address + '"') else ""} \
      ~{if defined(port_number) then ("--port-number " +  '"' + port_number + '"') else ""} \
      ~{if defined(browser_path) then ("--browser-path " +  '"' + browser_path + '"') else ""} \
      ~{if (read_only) then "--read-only" else ""} \
      ~{if (server_only) then "--server-only" else ""} \
      ~{if (password_protected) then "--password-protected" else ""} \
      ~{if (user_server_shutdown) then "--user-server-shutdown" else ""}
  >>>
  runtime {
    docker: "quay.io/biocontainers/anvio-minimal:7--py_0"
  }
  parameter_meta {
    profile_db: "Anvi'o profile database (default: None)"
    contigs_db: "Anvi'o contigs database generated by 'anvi-gen-\\ncontigs-database' (default: None)"
    collection_name: "If you have a collection in your profile database, you\\ncan use this flag to start the interactive interface\\nwith a tree showing your bins in your collection,\\ninstead of each split. This is very useful when you\\nhave imported your external binning results into\\nanvi'o, and want to see the distribution of your bins\\nacross samples. In these cases anvi'o will cluster\\nyour bins and based on multiple metrics. Because this\\nparticular clustering will be done on the fly within\\nanvi'o interactive class, you get to define a\\ndisntance metric and a linkage method using --linkage\\nand --distance parameters if you want! (default: None)"
    manual_mode: "Using this flag, you can run the interactive interface\\nin an ad hoc manner using input files you curated\\ninstead of standard output files generated by an\\nanvi'o run. In the manual mode you will be asked to\\nprovide a profile database. In this mode a profile\\ndatabase is only used to store 'state' of the\\ninteractive interface so you can reload your visual\\nsettings when you re-analyze the same files again. If\\nthe profile database you provide does not exist,\\nanvi'o will create an empty one for you. (default:\\nFalse)"
    fast_a_file: "A FASTA-formatted input file (default: None)"
    view_data: "A TAB-delimited file for view data (default: None)"
    tree: "NEWICK formatted tree structure (default: None)"
    items_order: "A flat file that contains the order of items you wish\\nthe display using the interactive interface. You may\\nwant to use this if you have a specific order of items\\nin your mind, and do not want to display a tree in the\\nmiddle (or simply you don't have one). The file format\\nis simple: each line should have an item name, and\\nthere should be no header. (default: None)"
    additional_view: "A TAB-delimited file for an additional view to be used\\nin the interface. This file should contain all split\\nnames, and values for each of them in all samples.\\nEach column in this file must correspond to a sample\\nname. Content of this file will be called 'user_view',\\nwhich will be available as a new item in the 'views'\\ncombo box in the interface (default: None)"
    additional_layers: "A TAB-delimited file for additional layers for splits.\\nThe first column of this file must be split names, and\\nthe remaining columns should be unique attributes. The\\nfile does not need to contain all split names, or\\nvalues for each split in every column. Anvi'o will try\\nto deal with missing data nicely. Each column in this\\nfile will be visualized as a new layer in the tree.\\n(default: None)"
    gene_mode: "Initiate the interactive interface in 'gene mode'. In\\nthis mode, the items are genes (instead of splits of\\ncontigs). The following views are available: detection\\n(the detection value of each gene in each sample). The\\nmean_coverage (the mean coverage of genes). The\\nnon_outlier_mean_coverage (the mean coverage of the\\nnon-outlier nucleotide positions of each gene in each\\nsample (median absolute deviation is used to remove\\noutliers per gene per sample)). The\\nnon_outlier_coverage_std view (standard deviation of\\nthe coverage of non-outlier positions of genes in\\nsamples). You can also choose to order items and\\nlayers according to each one of the aforementioned\\nviews. In addition, all layer ordering that are\\navailable in the regular mode (i.e. the full mode\\nwhere you have contigs/splits) are also available in\\n'gene mode', so that, for example, you can choose to\\norder the layers according to 'detection', and that\\nwould be the order according to the detection values\\nof splits, whereas if you choose 'genes_detections'\\nthen the order of layers would be according to the\\ndetection values of genes. Inspection and sequence\\nfunctionality are available (through the right-click\\nmenu), except now sequences are of the specific gene.\\nInspection has now two options available: 'Inspect\\nContext', which brings you to the inspection page of\\nthe split to which the gene belongs where the\\ninspected gene will be highlighted in yellow in the\\nbottom, and 'Inspect Gene', which opens the inspection\\npage only for the gene and 100 nts around each side of\\nit (the purpose of this option is to make the\\ninspection page load faster if you only want to look\\nat the nucleotide coverage of a specific gene).\\nNOTICE: You can't store states or collections in 'gene\\nmode'. However, you still can make fake selections,\\nand create fake bins for your viewing convenience only\\n(smiley). Search options are available, and you can\\neven search for functions if you have them in your\\ncontigs database. ANOTHER NOTICE: loading this mode\\nmight take a while if your bin has many genes, and\\nyour profile database has many samples, this is\\nbecause the gene coverages stats are computed in an\\nad-hoc manner when you load this mode, we know this is\\nnot ideal and we plan to improve that (along with\\nother things). If you have suggestions/complaints\\nregarding this mode please comment on this github\\nissue: https://goo.gl/yHhRei. Please refer to the\\nonline tutorial for more information. (default: False)"
    in_seq_stats: "Provide if working with INSeq/Tn-Seq genomic data.\\nWith this, all gene level coverage stats will be\\ncalculated using INSeq/Tn-Seq statistical methods.\\n(default: False)"
    bin_id: "Bin name you are interested in. (default: None)"
    title: "Title for the interface. If you are working with a\\nRUNINFO dict, the title will be determined based on\\ninformation stored in that file. Regardless, you can\\noverride that value using this parameter. (default:\\nNone)"
    taxonomic_level: "The taxonomic level to use whenever relevant and/or\\navailable. The default taxonomic level is t_genus, but\\nif you choose something specific, anvi'o will focus on\\nthat whenever possible."
    show_all_layers: "When declared, this flag tells the interface to show\\nevery additional layer even if there are no hits. By\\ndefault, anvi'o doesn't show layers if there are no\\nhits for any of your items. (default: False)"
    split_hmm_layers: "When declared, this flag tells the interface to split\\nevery gene found in HMM searches that were performed\\nagainst non-singlecopy gene HMM profiles into their\\nown layer. Please see the documentation for details.\\n(default: False)"
    hide_outlier_sn_vs: "During profiling, anvi'o marks positions of single-\\nnucleotide variations (SNVs) that originate from\\nplaces in contigs where coverage values are a bit\\n'sketchy'. If you would like to avoid SNVs in those\\npositions of splits in applicable projects you can use\\nthis flag, and the interface would hide SNVs that are\\nmarked as 'outlier' (although it is clearly the best\\nto see everything, no one will judge you if you end up\\nusing this flag) (plus, there may or may not be some\\nhistorical data on this here:\\nhttps://github.com/meren/anvio/issues/309). (default:\\nFalse)"
    state_autoload: "Automatically load previous saved state and draw tree.\\nTo see a list of available states, use --show-states\\nflag. (default: None)"
    collection_autoload: "Automatically load a collection and draw tree. To see\\na list of available collections, use --list-\\ncollections flag. (default: None)"
    export_svg: "The SVG output file path. (default: None)"
    show_views: "When declared, the program will show a list of\\navailable views, and exit. (default: False)"
    skip_check_names: "For debugging purposes. You should never really need\\nit. (default: False)"
    output_dir: "Directory path for output files (default: None)"
    dry_run: "Don't do anything real. Test everything, and stop\\nright before wherever the developer said 'well, this\\nis enough testing', and decided to print out results.\\n(default: False)"
    show_states: "When declared the program will print all available\\nstates and exit. (default: False)"
    list_collections: "Show available collections and exit. (default: False)"
    skip_in_it_functions: "When declared, function calls for genes will not be\\ninitialized (therefore will be missing from all\\nrelevant interfaces or output files). The use of this\\nflag may reduce the memory fingerprint and processing\\ntime for large datasets. (default: False)"
    skip_auto_ordering: "When declared, the attempt to include automatically\\ngenerated orders of items based on additional data is\\nskipped. In case those buggers cause issues with your\\ndata, and you still want to see your stuff and deal\\nwith the other issue maybe later. (default: False)"
    skip_news: "Don't try to read news content from upstream.\\n(default: False)"
    distance: "The distance metric for the hierarchical clustering.\\nOnly relevant if you are running the interactive\\ninterface in \\\"collection\\\" mode. The default is\\n\\\"euclidean\\\"."
    linkage: "The linkage method for the hierarchical clustering.\\nOnly relevant if you are running the interactive\\ninterface in \\\"collection\\\" mode. The default is \\\"ward\\\"."
    ip_address: "IP address for the HTTP server. The default ip address\\n(0.0.0.0) should work just fine for most."
    port_number: "Port number to use for anvi'o services. If nothing is\\ndeclared, anvi'o will try to find a suitable port\\nnumber, starting from the default port number, 8080.\\n(default: None)"
    browser_path: "By default, anvi'o will use your default browser to\\nlaunch the interactive interface. If you would like to\\nuse something else than your system default, you can\\nprovide a full path for an alternative browser using\\nthis parameter, and hope for the best. For instance we\\nare using this parameter to call Google's experimental\\nbrowser, Canary, which performs better with demanding\\nvisualizations. (default: None)"
    read_only: "When the interactive interface is started with this\\nflag, all 'database write' operations will be\\ndisabled. (default: False)"
    server_only: "The default behavior is to start the local server, and\\nfire up a browser that connects to the server. If you\\nhave other plans, and want to start the server without\\ncalling the browser, this is the flag you need.\\n(default: False)"
    password_protected: "If this flag is set, command line tool will ask you to\\nenter a password and interactive interface will be\\nonly accessible after entering same password. This\\noption is recommended for shared machines like\\nclusters or shared networks where computers are not\\nisolated. (default: False)"
    user_server_shutdown: "Allow users to shutdown an anvi'server via web\\ninterface. (default: False)"
    interface_dot: "--view NAME           Start the interface with a pre-selected view. To see a\\nlist of available views, use --show-views flag.\\n(default: None)"
  }
  output {
    File out_stdout = stdout()
    File out_export_svg = "${in_export_svg}"
    File out_output_dir = "${in_output_dir}"
  }
}