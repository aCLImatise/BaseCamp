from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File

Ref_Map_Pl_V0_1_0 = CommandToolBuilder(tool="ref_map.pl", base_command=["ref_map.pl"], inputs=[ToolInput(tag="in_samples", input_type=Boolean(optional=True), prefix="--samples", doc=InputDocumentation(doc=": path to the directory containing the samples BAM (or SAM) alignment files.")), ToolInput(tag="in_pop_map", input_type=Boolean(optional=True), prefix="--popmap", doc=InputDocumentation(doc=": path to a population map file (format is '<name> TAB <pop>', one sample per line).")), ToolInput(tag="in_spacer_file_names", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc=": spacer for file names: by default this is empty and the program looks for files\nnamed 'SAMPLE_NAME.bam'; if this option is given the program looks for files\nnamed 'SAMPLE_NAME.SPACER.bam'.")), ToolInput(tag="in_out_path", input_type=File(optional=True), prefix="--out-path", doc=InputDocumentation(doc=": path to an output directory.")), ToolInput(tag="in_additional_options_specific", input_type=Boolean(optional=True), prefix="-X", doc=InputDocumentation(doc=": additional options for specific pipeline components, e.g. -X 'populations: -p 3 -r 0.50'")), ToolInput(tag="in_number_use_default", input_type=Boolean(optional=True), prefix="-T", doc=InputDocumentation(doc=": the number of threads/CPUs to use (default: 1).")), ToolInput(tag="in_dry_run_actually", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc=": Dry run. Do not actually execute anything, just print the individual pipeline commands\nthat would be executed.")), ToolInput(tag="in_var_alpha", input_type=Boolean(optional=True), prefix="--var-alpha", doc=InputDocumentation(doc=": significance level at which to call variant sites (for gstacks; default: 0.05).")), ToolInput(tag="in_gt_alpha", input_type=Boolean(optional=True), prefix="--gt-alpha", doc=InputDocumentation(doc=": significance level at which to call genotypes (for gstacks; default: 0.05).")), ToolInput(tag="in_rm_pcr_duplicates", input_type=Boolean(optional=True), prefix="--rm-pcr-duplicates", doc=InputDocumentation(doc=": remove all but one copy of read pairs of the same sample that have\nthe same insert length.")), ToolInput(tag="in_ignore_pe_reads", input_type=Boolean(optional=True), prefix="--ignore-pe-reads", doc=InputDocumentation(doc=": ignore paired-end reads even if present in the input")), ToolInput(tag="in_unpaired", input_type=Boolean(optional=True), prefix="--unpaired", doc=InputDocumentation(doc=": ignore read pairing (for paired-end GBS; treat READ2's as if they were READ1's)")), ToolInput(tag="in_min_samples_per_pop", input_type=Boolean(optional=True), prefix="--min-samples-per-pop", doc=InputDocumentation(doc=": minimum percentage of individuals in a population required to process a locus for that population (for populations; default: 0)")), ToolInput(tag="in_min_populations", input_type=Boolean(optional=True), prefix="--min-populations", doc=InputDocumentation(doc=": minimum number of populations a locus must be present in to process a locus (for populations; default: 1)")), ToolInput(tag="in_time_components", input_type=Boolean(optional=True), prefix="--time-components", doc=InputDocumentation(doc="(for benchmarking)"))], outputs=[ToolOutput(tag="out_out_path", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_path", type_hint=File()), doc=OutputDocumentation(doc=": path to an output directory."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Ref_Map_Pl_V0_1_0().translate("wdl", allow_empty_container=True)

