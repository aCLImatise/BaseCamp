from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, Float, String, File

Stellar_V0_1_0 = CommandToolBuilder(tool="stellar", base_command=["stellar"], inputs=[ToolInput(tag="in_version_check", input_type=Boolean(optional=True), prefix="--version-check", doc=InputDocumentation(doc="Turn this option off to disable version update notifications of the\napplication. One of 1, ON, TRUE, T, YES, 0, OFF, FALSE, F, and NO.\nDefault: 1.")), ToolInput(tag="in_epsilon", input_type=Int(optional=True), prefix="--epsilon", doc=InputDocumentation(doc="Maximal error rate (max 0.25). In range [0.0000001..0.25]. Default:\n0.05.")), ToolInput(tag="in_minlength", input_type=Int(optional=True), prefix="--minLength", doc=InputDocumentation(doc="Minimal length of epsilon-matches. In range [0..inf]. Default: 100.")), ToolInput(tag="in_forward", input_type=Boolean(optional=True), prefix="--forward", doc=InputDocumentation(doc="Search only in forward strand of database.")), ToolInput(tag="in_reverse", input_type=Boolean(optional=True), prefix="--reverse", doc=InputDocumentation(doc="Search only in reverse complement of database.")), ToolInput(tag="in_alphabet", input_type=Int(optional=True), prefix="--alphabet", doc=InputDocumentation(doc="Alphabet type of input sequences (dna, rna, dna5, rna5, protein,\nchar). One of dna, dna5, rna, rna5, protein, and char.")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Set verbosity mode.")), ToolInput(tag="in_km_er", input_type=Int(optional=True), prefix="--kmer", doc=InputDocumentation(doc="Length of the q-grams (max 32). In range [1..32].")), ToolInput(tag="in_repeat_period", input_type=Int(optional=True), prefix="--repeatPeriod", doc=InputDocumentation(doc="Maximal period of low complexity repeats to be filtered. Default: 1.")), ToolInput(tag="in_repeat_length", input_type=Int(optional=True), prefix="--repeatLength", doc=InputDocumentation(doc="Minimal length of low complexity repeats to be filtered. Default:\n1000.")), ToolInput(tag="in_abundance_cut", input_type=Float(optional=True), prefix="--abundanceCut", doc=InputDocumentation(doc="k-mer overabundance cut ratio. In range [0..1]. Default: 1.")), ToolInput(tag="in_x_drop", input_type=Int(optional=True), prefix="--xDrop", doc=InputDocumentation(doc="Maximal x-drop for extension. Default: 5.")), ToolInput(tag="in_verification", input_type=String(optional=True), prefix="--verification", doc=InputDocumentation(doc="Verification strategy: exact or bestLocal or bandedGlobal One of\nexact, bestLocal, and bandedGlobal. Default: exact.")), ToolInput(tag="in_disable_thresh", input_type=Int(optional=True), prefix="--disableThresh", doc=InputDocumentation(doc="Maximal number of verified matches before disabling verification for\none query sequence (default infinity). In range [0..inf].")), ToolInput(tag="in_num_matches", input_type=Int(optional=True), prefix="--numMatches", doc=InputDocumentation(doc="Maximal number of kept matches per query and database. If STELLAR\nfinds more matches, only the longest ones are kept. Default: 50.")), ToolInput(tag="in_sort_thresh", input_type=Int(optional=True), prefix="--sortThresh", doc=InputDocumentation(doc="Number of matches triggering removal of duplicates. Choose a smaller\nvalue for saving space. Default: 500.")), ToolInput(tag="in_out", input_type=File(optional=True), prefix="--out", doc=InputDocumentation(doc="Name of output file. Valid filetypes are: .txt and .gff. Default:\nstellar.gff.")), ToolInput(tag="in_out_disabled", input_type=File(optional=True), prefix="--outDisabled", doc=InputDocumentation(doc="Name of output file for disabled query sequences. Valid filetypes\nare: .fasta and .fa. Default: stellar.disabled.fasta."))], outputs=[ToolOutput(tag="out_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out", type_hint=File()), doc=OutputDocumentation(doc="Name of output file. Valid filetypes are: .txt and .gff. Default:\nstellar.gff.")), ToolOutput(tag="out_out_disabled", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_disabled", type_hint=File()), doc=OutputDocumentation(doc="Name of output file for disabled query sequences. Valid filetypes\nare: .fasta and .fa. Default: stellar.disabled.fasta."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Stellar_V0_1_0().translate("wdl", allow_empty_container=True)

