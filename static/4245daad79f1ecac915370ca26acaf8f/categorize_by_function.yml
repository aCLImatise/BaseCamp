!Command
positional: []
named:
- !Flag
  description: the predicted metagenome table [REQUIRED]
  synonyms:
  - -i
  - --input_fp
  args: !SimpleFlagArg
    name: INPUT_FP
  optional: true
- !Flag
  description: the resulting table [REQUIRED]
  synonyms:
  - -o
  - --output_fp
  args: !SimpleFlagArg
    name: OUTPUT_FP
  optional: true
- !Flag
  description: 'the metadata category that describes the hierarchy (e.g. KEGG_Pathways,
    COG_Category, etc.). Note: RFAM predictions can not be collapsed because there
    are no categories to group them into. [REQUIRED]'
  synonyms:
  - -c
  - --metadata_category
  args: !SimpleFlagArg
    name: METADATA_CATEGORY
  optional: true
- !Flag
  description: the level in the hierarchy to collapse to. A value of 0 is not allowed,
    a value of 1 is the highest level, and any higher value nears the leaves of the
    hierarchy. For instance, if the hierarchy contains 4 levels, specifying 3 would
    collapse at one level above being fully specified. [REQUIRED]
  synonyms:
  - -l
  - --level
  args: !SimpleFlagArg
    name: LEVEL
  optional: true
command:
- categorize_by_function.py
parent:
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "Usage: categorize_by_function.py [options] {-i/--input_fp INPUT_FP -o/--output_fp\
  \ OUTPUT_FP -c/--metadata_category METADATA_CATEGORY -l/--level LEVEL}\n\n[] indicates\
  \ optional input (order unimportant)\n{} indicates required input (order unimportant)\n\
  \nThis script collapses hierarchical data to a specified level. For instance, often\
  \ it is useful to examine KEGG results from a higher level within the pathway hierarchy.\
  \ Many genes are sometimes involved in multiple pathways, and in these circumstances\
  \ (also know as a one-to-many relationship), the gene is counted for each pathway.\
  \ This has a side effect of increasing the total count of genes in the table.\n\n\
  Example usage: \nPrint help message and exit\n categorize_by_function.py -h\n\n\
  Collapse predicted metagenome using KEGG Pathway metadata.\n categorize_by_function.py\
  \ -i predicted_metagenomes.biom -c KEGG_Pathways -l 3 -o predicted_metagenomes.L3.biom\n\
  \nChange output to tab-delimited format (instead of BIOM).\n categorize_by_function.py\
  \ -f -i predicted_metagenomes.biom -c KEGG_Pathways -l 3 -o predicted_metagenomes.L3.txt\n\
  \nCollapse COG Categories.\n categorize_by_function.py -i cog_predicted_metagenomes.biom\
  \ -c COG_Category -l 2 -o cog_predicted_metagenomes.L2.biom\n\nCollapse predicted\
  \ metagenome using taxonomy metadata (not one-to-many).\n categorize_by_function.py\
  \ -i observation_table.biom -c taxonomy -l 1 -o observation_table.L1.biom\n\nOptions:\n\
  \  --version             show program's version number and exit\n  -h, --help  \
  \          show this help message and exit\n  -v, --verbose         Print information\
  \ during execution -- useful for\n                        debugging [default: False]\n\
  \  --ignore=IGNORE       Ignore the comma separated list of names. For\n       \
  \                 instance, specifying\n                        --ignore_unknown=unknown,unclassified\
  \ will ignore\n                        those labels while collapsing. The default\
  \ is to not\n                        ignore anything. [default: none]\n  -f, --format_tab_delimited\n\
  \                        output the predicted metagenome table in tab-delimited\n\
  \                        format [default: False]\n\n  REQUIRED options:\n    The\
  \ following options must be provided under all circumstances.\n\n    -i INPUT_FP,\
  \ --input_fp=INPUT_FP\n                        the predicted metagenome table [REQUIRED]\n\
  \    -o OUTPUT_FP, --output_fp=OUTPUT_FP\n                        the resulting\
  \ table [REQUIRED]\n    -c METADATA_CATEGORY, --metadata_category=METADATA_CATEGORY\n\
  \                        the metadata category that describes the hierarchy\n  \
  \                      (e.g. KEGG_Pathways, COG_Category, etc.). Note: RFAM\n  \
  \                      predictions can not be collapsed because there are no\n \
  \                       categories to group them into. [REQUIRED]\n    -l LEVEL,\
  \ --level=LEVEL\n                        the level in the hierarchy to collapse\
  \ to. A value of\n                        0 is not allowed, a value of 1 is the\
  \ highest level,\n                        and any higher value nears the leaves\
  \ of the\n                        hierarchy. For instance, if the hierarchy contains\
  \ 4\n                        levels, specifying 3 would collapse at one level above\n\
  \                        being fully specified. [REQUIRED]\n"
generated_using:
- --help
