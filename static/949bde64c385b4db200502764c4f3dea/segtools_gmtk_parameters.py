from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Float, String

Segtools_Gmtk_Parameters_V0_1_0 = CommandToolBuilder(tool="segtools_gmtk_parameters", base_command=["segtools-gmtk-parameters"], inputs=[ToolInput(tag="in_clobber", input_type=Boolean(optional=True), prefix="--clobber", doc=InputDocumentation(doc="Overwrite any existing output files.")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="Do not print diagnostic messages.")), ToolInput(tag="in_no_plot", input_type=Boolean(optional=True), prefix="--noplot", doc=InputDocumentation(doc="Do not generate any plots.")), ToolInput(tag="in_no_graph", input_type=Boolean(optional=True), prefix="--nograph", doc=InputDocumentation(doc="Do not generate transition graph.")), ToolInput(tag="in_create_mnemonics", input_type=Boolean(optional=True), prefix="--create-mnemonics", doc=InputDocumentation(doc="If mnemonics are not specified, they will be created\nand used for plotting")), ToolInput(tag="in_allow_regex", input_type=Boolean(optional=True), prefix="--allow-regex", doc=InputDocumentation(doc="If a file is specified with --trackname-translation,\nthe mappings in this file will be interpreted as\nregular expressions instead of exact mappings. Thus,\nall underscores could be converted to periods with the\nsingle line: `_<TAB>.`. Mappings will be applied\nsequentially, so a second line of: `\.<TAB>#` would\n(together with the first line) convert all periods and\nunderscores to pounds.")), ToolInput(tag="in_mnemonic_file", input_type=File(optional=True), prefix="--mnemonic-file", doc=InputDocumentation(doc="If specified, labels will be shown using mnemonics\nfound in FILE")), ToolInput(tag="in_outdir", input_type=File(optional=True), prefix="--outdir", doc=InputDocumentation(doc="File output directory (will be created if it does not\nexist) [default: gmtk_parameters]")), ToolInput(tag="in_track_name_translation", input_type=File(optional=True), prefix="--trackname-translation", doc=InputDocumentation(doc="Should be a file with rows <old-trackname><TAB><new-\ntrackname>. Tracknames will be translated using this\nmapping before plotting the stats plot. By default,\n<old-trackname> must exactly match the name of a\ntrack, but --allow-regex provides more flexibility.")), ToolInput(tag="in_prob_threshold", input_type=Float(optional=True), prefix="--prob-threshold", doc=InputDocumentation(doc="ignore all transitions with probabilities below this\nabsolute threshold [default: 0.15]")), ToolInput(tag="in_quantile_threshold", input_type=Float(optional=True), prefix="--quantile-threshold", doc=InputDocumentation(doc="ignore transitions with probabilities below this\nprobability quantile [default: 0.0]")), ToolInput(tag="in_gene_graph", input_type=Boolean(optional=True), prefix="--gene-graph", doc=InputDocumentation(doc="Make each node of the graph a reference to a .ps image\nan 'image' subdirectory. Currently, these .ps files\nneed to be made separately.")), ToolInput(tag="in_val_pass_val", input_type=String(optional=True), prefix="-R", doc=InputDocumentation(doc="=VAL        Pass VAL for PARAM when calling R functions. May be\nspecified multiple times.\n")), ToolInput(tag="in_params_file", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_outdir", output_type=File(optional=True), selector=InputSelector(input_to_select="in_outdir", type_hint=File()), doc=OutputDocumentation(doc="File output directory (will be created if it does not\nexist) [default: gmtk_parameters]"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Segtools_Gmtk_Parameters_V0_1_0().translate("wdl", allow_empty_container=True)

