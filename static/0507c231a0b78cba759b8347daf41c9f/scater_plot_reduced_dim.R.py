from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, String

Scater_Plot_Reduced_Dim_R_V0_1_0 = CommandToolBuilder(tool="scater_plot_reduced_dim.R", base_command=["scater-plot-reduced-dim.R"], inputs=[ToolInput(tag="in_input_object_file", input_type=File(optional=True), prefix="--input-object-file", doc=InputDocumentation(doc="singleCellExperiment object containing expression values and experimental information. Must have been appropriately prepared.")), ToolInput(tag="in_use_dim_red", input_type=Int(optional=True), prefix="--use-dimred", doc=InputDocumentation(doc="A string or integer scalar indicating the reduced dimension result in reducedDims(object) to plot.")), ToolInput(tag="in_n_components", input_type=Int(optional=True), prefix="--ncomponents", doc=InputDocumentation(doc="A numeric scalar indicating the number of dimensions to plot, starting from the first dimension. Alternatively, a comma-separated specifying the dimensions to be plotted.")), ToolInput(tag="in_percent_var", input_type=String(optional=True), prefix="--percent-var", doc=InputDocumentation(doc="A comma-separated string giving the proportion of variance in expression explained by each reduced dimension. Only expected to be used in PCA settings, e.g., in the plotPCA function.")), ToolInput(tag="in_colour_by", input_type=String(optional=True), prefix="--colour-by", doc=InputDocumentation(doc="Specification of a column metadata field or a feature to colour by.")), ToolInput(tag="in_shape_by", input_type=String(optional=True), prefix="--shape-by", doc=InputDocumentation(doc="Specification of a column metadata field or a feature to shape by.")), ToolInput(tag="in_size_by", input_type=Int(optional=True), prefix="--size-by", doc=InputDocumentation(doc="Specification of a column metadata field or a feature to shape by.")), ToolInput(tag="in_by_exprs_values", input_type=Int(optional=True), prefix="--by_exprs-values", doc=InputDocumentation(doc="A string or integer scalar specifying which assay to obtain expression values from, for use in point aesthetics.")), ToolInput(tag="in_by_show_single", input_type=String(optional=True), prefix="--by_show_single", doc=InputDocumentation(doc="Logical scalar specifying whether single-level factors should be used for point aesthetics.")), ToolInput(tag="in_png_width", input_type=String(optional=True), prefix="--png-width", doc=InputDocumentation(doc="Width of png (px).")), ToolInput(tag="in_png_height", input_type=File(optional=True), prefix="--png-height", doc=InputDocumentation(doc="Height of png file (px).")), ToolInput(tag="in_output_image_file", input_type=File(optional=True), prefix="--output-image-file", doc=InputDocumentation(doc="File name in which to save the PCA image"))], outputs=[ToolOutput(tag="out_output_image_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_image_file", type_hint=File()), doc=OutputDocumentation(doc="File name in which to save the PCA image"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Scater_Plot_Reduced_Dim_R_V0_1_0().translate("wdl", allow_empty_container=True)

