!Command
command:
- tripaille
- analysis
- load_gff3
positional:
- !Positional
  optional: false
  position: 0
  name: GFF
  description: ''
named:
- !Flag
  optional: true
  synonyms:
  - --organism
  description: Organism common name or abbreviation
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --organism_id
  description: Organism ID
  args: !SimpleFlagArg
    name: INTEGER
- !Flag
  optional: true
  synonyms:
  - --analysis
  description: Analysis name
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --analysis_id
  description: Analysis ID
  args: !SimpleFlagArg
    name: INTEGER
- !Flag
  optional: true
  synonyms:
  - --import_mode
  description: "Import mode (add_only=existing features won't\nbe touched, update=existing\
    \ features will be\nupdated and obsolete attributes kept)')\n[default: update]"
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --target_organism
  description: "In case of Target attribute in the GFF3,\nchoose the organism abbreviation\
    \ or common\nname to which target sequences belong. Select\nthis only if target\
    \ sequences belong to a\ndifferent organism than the one specified with\n--organism-id.\
    \ And only choose an organism\nhere if all of the target sequences belong to\n\
    the same species. If the targets in the GFF\nfile belong to multiple different\
    \ species then\nthe organism must be specified using the\n'target_organism=genus:species'\
    \ attribute in\nthe GFF file.')"
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --target_organism_id
  description: "In case of Target attribute in the GFF3,\nchoose the organism ID to\
    \ which target\nsequences belong. Select this only if target\nsequences belong\
    \ to a different organism than\nthe one specified with --organism-id. And only\n\
    choose an organism here if all of the target\nsequences belong to the same species.\
    \ If the\ntargets in the GFF file belong to multiple\ndifferent species then the\
    \ organism must be\nspecified using the\n'target_organism=genus:species' attribute\
    \ in\nthe GFF file.')"
  args: !SimpleFlagArg
    name: INTEGER
- !Flag
  optional: true
  synonyms:
  - --target_type
  description: "In case of Target attribute in the GFF3, if\nthe unique name for a\
    \ target sequence is not\nunique (e.g. a protein and an mRNA have the\nsame name)\
    \ then you must specify the type for\nall targets in the GFF file. If the targets\n\
    are of different types then the type must be\nspecified using the 'target_type=type'\n\
    attribute in the GFF file. This must be a\nvalid Sequence Ontology (SO) term.')"
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --target_create
  description: "In case of Target attribute in the GFF3, if\nthe target feature cannot\
    \ be found, create one\nusing the organism and type specified above,\nor using\
    \ the 'target_organism' and\n'target_type' fields specified in the GFF\nfile.\
    \ Values specified in the GFF file take\nprecedence over those specified above.')"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --start_line
  description: "The line in the GFF file where importing\nshould start"
  args: !SimpleFlagArg
    name: INTEGER
- !Flag
  optional: true
  synonyms:
  - --landmark_type
  description: "A Sequence Ontology type for the landmark\nsequences in the GFF fie\
    \ (e.g. 'chromosome')."
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --alt_id_attr
  description: "When ID attribute is absent, specify which\nother attribute can uniquely\
    \ identify the\nfeature."
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --create_organism
  description: "Create organisms when encountering organism\nattribute (these lines\
    \ will be skip otherwise)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --re_mrna
  description: Regular expression for the mRNA name
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --re_protein
  description: Replacement string for the protein name
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --job_name
  description: Name of the job
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --no_wait
  description: Do not wait for job to complete
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: Show this message and exit.
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "Usage: tripaille analysis load_gff3 [OPTIONS] GFF\n\n  Load GFF3 file\n\
  \n  Output:\n\n      Loading information\n\nOptions:\n  --organism TEXT        \
  \       Organism common name or abbreviation\n  --organism_id INTEGER         Organism\
  \ ID\n  --analysis TEXT               Analysis name\n  --analysis_id INTEGER   \
  \      Analysis ID\n  --import_mode TEXT            Import mode (add_only=existing\
  \ features won't\n                                be touched, update=existing features\
  \ will be\n                                updated and obsolete attributes kept)')\n\
  \                                [default: update]\n  --target_organism TEXT   \
  \     In case of Target attribute in the GFF3,\n                               \
  \ choose the organism abbreviation or common\n                                name\
  \ to which target sequences belong. Select\n                                this\
  \ only if target sequences belong to a\n                                different\
  \ organism than the one specified with\n                                --organism-id.\
  \ And only choose an organism\n                                here if all of the\
  \ target sequences belong to\n                                the same species.\
  \ If the targets in the GFF\n                                file belong to multiple\
  \ different species then\n                                the organism must be specified\
  \ using the\n                                'target_organism=genus:species' attribute\
  \ in\n                                the GFF file.')\n  --target_organism_id INTEGER\
  \  In case of Target attribute in the GFF3,\n                                choose\
  \ the organism ID to which target\n                                sequences belong.\
  \ Select this only if target\n                                sequences belong to\
  \ a different organism than\n                                the one specified with\
  \ --organism-id. And only\n                                choose an organism here\
  \ if all of the target\n                                sequences belong to the\
  \ same species. If the\n                                targets in the GFF file\
  \ belong to multiple\n                                different species then the\
  \ organism must be\n                                specified using the\n      \
  \                          'target_organism=genus:species' attribute in\n      \
  \                          the GFF file.')\n  --target_type TEXT            In case\
  \ of Target attribute in the GFF3, if\n                                the unique\
  \ name for a target sequence is not\n                                unique (e.g.\
  \ a protein and an mRNA have the\n                                same name) then\
  \ you must specify the type for\n                                all targets in\
  \ the GFF file. If the targets\n                                are of different\
  \ types then the type must be\n                                specified using the\
  \ 'target_type=type'\n                                attribute in the GFF file.\
  \ This must be a\n                                valid Sequence Ontology (SO) term.')\n\
  \  --target_create               In case of Target attribute in the GFF3, if\n \
  \                               the target feature cannot be found, create one\n\
  \                                using the organism and type specified above,\n\
  \                                or using the 'target_organism' and\n          \
  \                      'target_type' fields specified in the GFF\n             \
  \                   file. Values specified in the GFF file take\n              \
  \                  precedence over those specified above.')\n  --start_line INTEGER\
  \          The line in the GFF file where importing\n                          \
  \      should start\n  --landmark_type TEXT          A Sequence Ontology type for\
  \ the landmark\n                                sequences in the GFF fie (e.g. 'chromosome').\n\
  \  --alt_id_attr TEXT            When ID attribute is absent, specify which\n  \
  \                              other attribute can uniquely identify the\n     \
  \                           feature.\n  --create_organism             Create organisms\
  \ when encountering organism\n                                attribute (these lines\
  \ will be skip otherwise)\n  --re_mrna TEXT                Regular expression for\
  \ the mRNA name\n  --re_protein TEXT             Replacement string for the protein\
  \ name\n  --job_name TEXT               Name of the job\n  --no_wait           \
  \          Do not wait for job to complete\n  -h, --help                    Show\
  \ this message and exit.\n"
generated_using:
- --help
docker_image:
