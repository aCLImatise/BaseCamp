!Command
positional:
- !Positional
  description: query molfile
  position: 0
  name: query
  optional: false
named:
- !Flag
  description: Query molecule index in SD file if not the first
  synonyms:
  - --qmolidx
  args: !SimpleFlagArg
    name: QMOLIDX
  optional: true
- !Flag
  description: Use Crippen (logP) contributions
  synonyms:
  - --crippen
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: score cuttoff relative to alignment of query to itself
  synonyms:
  - -t
  - --threshold
  args: !SimpleFlagArg
    name: THRESHOLD
  optional: true
- !Flag
  description: number of conformers to generate, if None then input structures are
    assumed to already be 3D
  synonyms:
  - -n
  - --num
  args: !SimpleFlagArg
    name: NUM
  optional: true
- !Flag
  description: number of attempts to generate conformers
  synonyms:
  - -a
  - --attempts
  args: !SimpleFlagArg
    name: ATTEMPTS
  optional: true
- !Flag
  description: prune RMSD threshold for excluding conformers
  synonyms:
  - -r
  - --rmsd
  args: !SimpleFlagArg
    name: RMSD
  optional: true
- !Flag
  description: energy minimisation iterations for generated conformers (default of
    0 means none)
  synonyms:
  - -e
  - --emin
  args: !SimpleFlagArg
    name: EMIN
  optional: true
- !Flag
  description: Input file, if not defined the STDIN is used
  synonyms:
  - -i
  - --input
  args: !SimpleFlagArg
    name: INPUT
  optional: true
- !Flag
  description: Input format. When using STDIN this must be specified.
  synonyms:
  - -if
  - --informat
  args: !ChoiceFlagArg
    choices: !!set
      ? sdf
      ? json
  optional: true
- !Flag
  description: Base name for output file (no extension). If not defined then SDTOUT
    is used for the structures and output is used as base name of the other files.
  synonyms:
  - -o
  - --output
  args: !SimpleFlagArg
    name: OUTPUT
  optional: true
- !Flag
  description: Output format. Defaults to 'sdf'.
  synonyms:
  - -of
  - --outformat
  args: !ChoiceFlagArg
    choices: !!set
      ? sdf
      ? json
  optional: true
- !Flag
  description: Write metadata and metrics files
  synonyms:
  - --meta
  args: !EmptyFlagArg {}
  optional: true
command:
- o3dAlign
parent:
subcommands: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: o3dAlign [-h] [--qmolidx QMOLIDX] [--crippen] [-t THRESHOLD] [-n\
  \ NUM]\n                [-a ATTEMPTS] [-r RMSD] [-e EMIN] [-i INPUT] [-if {sdf,json}]\n\
  \                [-o OUTPUT] [-of {sdf,json}] [--meta]\n                query\n\n\
  Open3DAlign with RDKit\n\npositional arguments:\n  query                 query molfile\n\
  \noptional arguments:\n  -h, --help            show this help message and exit\n\
  \  --qmolidx QMOLIDX     Query molecule index in SD file if not the first\n  --crippen\
  \             Use Crippen (logP) contributions\n  -t THRESHOLD, --threshold THRESHOLD\n\
  \                        score cuttoff relative to alignment of query to itself\n\
  \  -n NUM, --num NUM     number of conformers to generate, if None then input\n\
  \                        structures are assumed to already be 3D\n  -a ATTEMPTS,\
  \ --attempts ATTEMPTS\n                        number of attempts to generate conformers\n\
  \  -r RMSD, --rmsd RMSD  prune RMSD threshold for excluding conformers\n  -e EMIN,\
  \ --emin EMIN  energy minimisation iterations for generated\n                  \
  \      conformers (default of 0 means none)\n  -i INPUT, --input INPUT\n       \
  \                 Input file, if not defined the STDIN is used\n  -if {sdf,json},\
  \ --informat {sdf,json}\n                        Input format. When using STDIN\
  \ this must be specified.\n  -o OUTPUT, --output OUTPUT\n                      \
  \  Base name for output file (no extension). If not\n                        defined\
  \ then SDTOUT is used for the structures and\n                        output is\
  \ used as base name of the other files.\n  -of {sdf,json}, --outformat {sdf,json}\n\
  \                        Output format. Defaults to 'sdf'.\n  --meta           \
  \     Write metadata and metrics files\n"
generated_using:
- --help
