from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Int, Boolean

Anvi_Compute_Completeness_V0_1_0 = CommandToolBuilder(tool="anvi_compute_completeness", base_command=["anvi-compute-completeness"], inputs=[ToolInput(tag="in_splits_of_interest", input_type=File(optional=True), prefix="--splits-of-interest", doc=InputDocumentation(doc="A file with split names. There should be only one\ncolumn in the file, and each line should correspond to\na unique split name. (default: None)")), ToolInput(tag="in_contigs_db", input_type=String(optional=True), prefix="--contigs-db", doc=InputDocumentation(doc="Anvi'o contigs database generated by 'anvi-gen-\ncontigs-database' (default: None)")), ToolInput(tag="in_min_e_value", input_type=Int(optional=True), prefix="--min-e-value", doc=InputDocumentation(doc="Minimum significance score of an HMM find to be\nconsidered as a valid hit. Default is 1e-15.")), ToolInput(tag="in_list_completeness_sources", input_type=Boolean(optional=True), prefix="--list-completeness-sources", doc=InputDocumentation(doc="Show available sources and exit. (default: False)")), ToolInput(tag="in_completeness_source", input_type=String(optional=True), prefix="--completeness-source", doc=InputDocumentation(doc="Single-copy gene source to use to estimate\ncompleteness. (default: None)"))], outputs=[], container="quay.io/biocontainers/anvio-minimal:7--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Anvi_Compute_Completeness_V0_1_0().translate("wdl")

