from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, Float, Directory, Array, Int

Dnapi_Py_V0_1_0 = CommandToolBuilder(tool="dnapi.py", base_command=["dnapi.py"], inputs=[ToolInput(tag="in_range_predict_adaptersdefault", input_type=Boolean(optional=True), prefix="-k", doc=InputDocumentation(doc="[KMER_BEG:KMER_END:INCREMENT | KMER_LEN]\nrange of kmers or a single kmer to predict 3'adapters\n(default: 9:11:2)")), ToolInput(tag="in_range_single_ratio", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="[RATIO_BEG:RATIO_END:INTCREMENT | RATIO]\nrange of ratios or a single ratio to filter less\nabundant kmers (default: 1.2:1.4:0.1)")), ToolInput(tag="in_show_all", input_type=Boolean(optional=True), prefix="--show-all", doc=InputDocumentation(doc="show other candidates if any")), ToolInput(tag="in_map_command", input_type=String(optional=True), prefix="--map-command", doc=InputDocumentation(doc="read mapping command to be tested")), ToolInput(tag="in_subsample_rate", input_type=Float(optional=True), prefix="--subsample-rate", doc=InputDocumentation(doc="subsampling fraction of reads (default: 1.0)")), ToolInput(tag="in_output_dir", input_type=Directory(optional=True), prefix="--output-dir", doc=InputDocumentation(doc="output directory to write report and cleansed reads\n(default: ./dnapi_out)")), ToolInput(tag="in_no_output_files", input_type=Boolean(optional=True), prefix="--no-output-files", doc=InputDocumentation(doc="only display report and suppress output files")), ToolInput(tag="in_temp_dir", input_type=Directory(optional=True), prefix="--temp-dir", doc=InputDocumentation(doc="place to make temporary directory (default: /tmp)")), ToolInput(tag="in_adapter_seq", input_type=Array(t=String(), optional=True), prefix="--adapter-seq", doc=InputDocumentation(doc="list of 3'adapters for evaluation")), ToolInput(tag="in_prefix_match", input_type=Int(optional=True), prefix="--prefix-match", doc=InputDocumentation(doc="3'adapter match length to trim (default: 7)")), ToolInput(tag="in_min_len", input_type=Int(optional=True), prefix="--min-len", doc=InputDocumentation(doc="minimum read length to keep for mapping (default: 16)")), ToolInput(tag="in_max_len", input_type=Int(optional=True), prefix="--max-len", doc=InputDocumentation(doc="maximum read length to keep for mapping (default: 36)")), ToolInput(tag="in_trim_five_p", input_type=Int(optional=True), prefix="--trim-5p", doc=InputDocumentation(doc="trim specified number of bases from 5'ends after\nadapter removal (default: 0)")), ToolInput(tag="in_trim_three_p", input_type=Int(optional=True), prefix="--trim-3p", doc=InputDocumentation(doc="trim specified number of bases from 3'ends after\nadapter removal (default: 0)")), ToolInput(tag="in_fast_q", input_type=String(), position=0, doc=InputDocumentation(doc="including stdin or compressed file {zip,gz,tar,bz}"))], outputs=[ToolOutput(tag="out_output_dir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output_dir", type_hint=File()), doc=OutputDocumentation(doc="output directory to write report and cleansed reads\n(default: ./dnapi_out)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Dnapi_Py_V0_1_0().translate("wdl", allow_empty_container=True)

