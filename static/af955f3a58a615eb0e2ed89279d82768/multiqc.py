from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, File, String

Multiqc_V0_1_0 = CommandToolBuilder(tool="multiqc", base_command=["multiqc"], inputs=[ToolInput(tag="in_force", input_type=Boolean(optional=True), prefix="--force", doc=InputDocumentation(doc="Overwrite any existing reports")), ToolInput(tag="in_dirs", input_type=Boolean(optional=True), prefix="--dirs", doc=InputDocumentation(doc="Prepend directory to sample names")), ToolInput(tag="in_dirs_depth", input_type=Int(optional=True), prefix="--dirs-depth", doc=InputDocumentation(doc="Prepend [INT] directories to sample names.\nNegative number to take from start of path.")), ToolInput(tag="in_full_names", input_type=Boolean(optional=True), prefix="--fullnames", doc=InputDocumentation(doc="Do not clean the sample names (leave as full\nfile name)")), ToolInput(tag="in_title", input_type=File(optional=True), prefix="--title", doc=InputDocumentation(doc="Report title. Printed as page header, used\nfor filename if not otherwise specified.")), ToolInput(tag="in_comment", input_type=String(optional=True), prefix="--comment", doc=InputDocumentation(doc="Custom comment, will be printed at the top\nof the report.")), ToolInput(tag="in_filename", input_type=File(optional=True), prefix="--filename", doc=InputDocumentation(doc="Report filename. Use 'stdout' to print to\nstandard out.")), ToolInput(tag="in_outdir", input_type=String(optional=True), prefix="--outdir", doc=InputDocumentation(doc="Create report in the specified output")), ToolInput(tag="in_tag", input_type=String(optional=True), prefix="--tag", doc=InputDocumentation(doc="Use only modules which tagged with this\nkeyword, eg. RNA")), ToolInput(tag="in_view_tags", input_type=Boolean(optional=True), prefix="--view-tags", doc=InputDocumentation(doc="View the available tags and which modules\nthey load")), ToolInput(tag="in_ignore", input_type=String(optional=True), prefix="--ignore", doc=InputDocumentation(doc="Ignore analysis files (glob expression)")), ToolInput(tag="in_ignore_samples", input_type=String(optional=True), prefix="--ignore-samples", doc=InputDocumentation(doc="Ignore sample names (glob expression)")), ToolInput(tag="in_ignore_symlinks", input_type=Boolean(optional=True), prefix="--ignore-symlinks", doc=InputDocumentation(doc="Ignore symlinked directories and files")), ToolInput(tag="in_sample_names", input_type=File(optional=True), prefix="--sample-names", doc=InputDocumentation(doc="File containing alternative sample names")), ToolInput(tag="in_sample_filters", input_type=File(optional=True), prefix="--sample-filters", doc=InputDocumentation(doc="File containing show/hide patterns for the")), ToolInput(tag="in_exclude", input_type=Boolean(optional=True), prefix="--exclude", doc=InputDocumentation(doc="[module name]     Do not use this module. Can specify multiple")), ToolInput(tag="in_export", input_type=Boolean(optional=True), prefix="--export", doc=InputDocumentation(doc="Export plots as static images in addition to\nthe report")), ToolInput(tag="in_flat", input_type=Boolean(optional=True), prefix="--flat", doc=InputDocumentation(doc="Use only flat plots (static images)")), ToolInput(tag="in_interactive", input_type=Boolean(optional=True), prefix="--interactive", doc=InputDocumentation(doc="Use only interactive plots (HighCharts\nJavascript)")), ToolInput(tag="in_lint", input_type=Boolean(optional=True), prefix="--lint", doc=InputDocumentation(doc="Use strict linting (validation) to help code")), ToolInput(tag="in_no_mega_qc_upload", input_type=Boolean(optional=True), prefix="--no-megaqc-upload", doc=InputDocumentation(doc="Don't upload generated report to MegaQC,\neven if MegaQC options are found")), ToolInput(tag="in_config", input_type=File(optional=True), prefix="--config", doc=InputDocumentation(doc="Specific config file to load, after those in\nMultiQC dir / home dir / working dir.")), ToolInput(tag="in_cl_config", input_type=String(optional=True), prefix="--cl-config", doc=InputDocumentation(doc="Specify MultiQC config YAML on the command")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="Only show log warnings")), ToolInput(tag="in_profile_runtime", input_type=Boolean(optional=True), prefix="--profile-runtime", doc=InputDocumentation(doc="Add analysis of how long MultiQC takes to\nrun to the report")), ToolInput(tag="in_no_ansi", input_type=Boolean(optional=True), prefix="--no-ansi", doc=InputDocumentation(doc="Disable coloured log output")), ToolInput(tag="in_report", input_type=String(), position=0, doc=InputDocumentation(doc="-l, --file-list                 Supply a file containing a list of file")), ToolInput(tag="in_tsv", input_type=String(), position=0, doc=InputDocumentation(doc="-z, --zip-data-dir              Compress the data directory.")), ToolInput(tag="in_development", input_type=String(), position=1, doc=InputDocumentation(doc="--pdf                           Creates PDF report with 'simple' template.")), ToolInput(tag="in_line", input_type=String(), position=0, doc=InputDocumentation(doc="-v, --verbose                   Increase output verbosity."))], outputs=[ToolOutput(tag="out_filename", output_type=File(optional=True), selector=InputSelector(input_to_select="in_filename", type_hint=File()), doc=OutputDocumentation(doc="Report filename. Use 'stdout' to print to\nstandard out."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Multiqc_V0_1_0().translate("wdl", allow_empty_container=True)

