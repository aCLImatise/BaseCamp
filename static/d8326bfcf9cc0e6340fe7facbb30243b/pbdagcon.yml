!Command
command:
- pbdagcon
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -v
  - --verbose
  description: Turns on verbose logging
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -a
  - --align
  description: Align sequences before adding to consensus
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -t
  - --trim
  description: Trim alignments on either size
  args: !SimpleFlagArg
    name: uint
- !Flag
  optional: true
  synonyms:
  - -m
  - --min-length
  description: Minimum length for correction
  args: !SimpleFlagArg
    name: uint
- !Flag
  optional: true
  synonyms:
  - -c
  - --min-coverage
  description: Minimum coverage for correction
  args: !SimpleFlagArg
    name: uint
- !Flag
  optional: true
  synonyms:
  - -j
  - --threads
  description: Number of consensus threads
  args: !SimpleFlagArg
    name: int
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: Displays usage information and exits.
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - --version
  description: Displays version information and exits.
  args: !EmptyFlagArg {}
help_text: "\nUSAGE: \n\n   pbdagcon  [-v] [-a] [-t <uint>] [-m <uint>] [-c <uint>]\
  \ [-j <int>] [--]\n             [--version] [-h] <either file path or stdin>\n\n\
  \nWhere: \n\n   -v,  --verbose\n     Turns on verbose logging\n\n   -a,  --align\n\
  \     Align sequences before adding to consensus\n\n   -t <uint>,  --trim <uint>\n\
  \     Trim alignments on either size\n\n   -m <uint>,  --min-length <uint>\n   \
  \  Minimum length for correction\n\n   -c <uint>,  --min-coverage <uint>\n     Minimum\
  \ coverage for correction\n\n   -j <int>,  --threads <int>\n     Number of consensus\
  \ threads\n\n   --,  --ignore_rest\n     Ignores the rest of the labeled arguments\
  \ following this flag.\n\n   --version\n     Displays version information and exits.\n\
  \n   -h,  --help\n     Displays usage information and exits.\n\n   <either file\
  \ path or stdin>\n     (required)  Input data\n\n\n   PBI consensus module\n\n"
generated_using:
- --help
docker_image:
