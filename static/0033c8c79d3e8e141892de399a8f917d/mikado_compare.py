from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, String, File

Mikado_Compare_V0_1_0 = CommandToolBuilder(tool="mikado_compare", base_command=["mikado", "compare"], inputs=[ToolInput(tag="in_no_shm", input_type=Boolean(optional=True), prefix="--no-shm", doc=InputDocumentation(doc="Switch off /dev/shm usage.")), ToolInput(tag="in_shm", input_type=Boolean(optional=True), prefix="--shm", doc=InputDocumentation(doc="Switch on /dev/shm usage.")), ToolInput(tag="in_distance", input_type=Int(optional=True), prefix="--distance", doc=InputDocumentation(doc="Maximum distance for a transcript to be considered a\npolymerase run-on. Default: 2000")), ToolInput(tag="in_protein_coding", input_type=Boolean(optional=True), prefix="--protein-coding", doc=InputDocumentation(doc="Flag. If set, only transcripts with a CDS (both in\nreference and prediction) will be considered.")), ToolInput(tag="in_out", input_type=String(optional=True), prefix="--out", doc=InputDocumentation(doc="Prefix for the output files. Default: mikado_compare")), ToolInput(tag="in_fuzzy_intron_match", input_type=Int(optional=True), prefix="--fuzzy-intron-match", doc=InputDocumentation(doc="This parameter controls whether an intron should be\nconsidered as 'matched' even if its splices are within\nN bases from the annotated splice junctions. By\ndefault this is set to 0 (ie only proper matches\ncount).")), ToolInput(tag="in_lenient", input_type=Boolean(optional=True), prefix="--lenient", doc=InputDocumentation(doc="If set, exonic statistics will be calculated leniently\nin the TMAP as well - ie they will consider an exon as\nmatch even if only the internal junction has been\nrecovered.")), ToolInput(tag="in_do_not_report_fusions", input_type=Boolean(optional=True), prefix="--do-not-report-fusions", doc=InputDocumentation(doc="Flag. If invoked, Mikado compare will not report\nfusions in the input. Useful when the reference\ntranscripts have not been clustered properly into\ngenes (e.g. a Mikado prepare run).")), ToolInput(tag="in_exclude_utr", input_type=Boolean(optional=True), prefix="--exclude-utr", doc=InputDocumentation(doc="Flag. If set, reference and prediction transcripts\nwill be stripped of their UTRs (if they are coding).")), ToolInput(tag="in_no_save_index", input_type=Boolean(optional=True), prefix="--no-save-index", doc=InputDocumentation(doc="Unless this flag is set, compare will save an index of\nthe reference to quicken multiple calls.")), ToolInput(tag="in_extended_ref_map", input_type=Boolean(optional=True), prefix="--extended-refmap", doc=InputDocumentation(doc="Flag. If set, the RefMap will also contain recall and\nprecision statistics - not just the F1.")), ToolInput(tag="in_use_prediction_alias", input_type=Boolean(optional=True), prefix="--use-prediction-alias", doc=InputDocumentation(doc="Flag. If set, Mikado Compare will use the alias -\nrather than the transcript ID - to report the results\nfor prediction transcripts in the TMAP and REFMAP\nfiles.")), ToolInput(tag="in_verbose", input_type=String(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Flag. If set, TMAP and REFMAP files will be GZipped.")), ToolInput(tag="in_reference", input_type=File(optional=True), prefix="--reference", doc=InputDocumentation(doc="Reference annotation file. By default, an index will\nbe crated and saved with the suffix '.midx'.")), ToolInput(tag="in_prediction", input_type=File(optional=True), prefix="--prediction", doc=InputDocumentation(doc="Prediction annotation file.")), ToolInput(tag="in_self", input_type=Boolean(optional=True), prefix="--self", doc=InputDocumentation(doc="Flag. If set, the reference will be compared with\nitself. Useful for understanding how the reference\ntranscripts interact with each other. If this option\nis selected, the stats file will not be produced.")), ToolInput(tag="in_internal", input_type=Boolean(optional=True), prefix="--internal", doc=InputDocumentation(doc="Flag. If set, for each gene with more than one\ntranscript isoform each will be compared to the\nothers. Useful for understanding the structural\nrelationships between the transcripts in each gene.")), ToolInput(tag="in_index", input_type=Boolean(optional=True), prefix="--index", doc=InputDocumentation(doc="Flag. If set, compare will stop after having generated\nthe GFF index for the reference.\n"))], outputs=[], container="quay.io/biocontainers/mikado:2.2.4--py38h803c66d_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Mikado_Compare_V0_1_0().translate("wdl")

