from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Array, String, Boolean, Int, File

Nanoraw_Write_Wiggles_V0_1_0 = CommandToolBuilder(tool="nanoraw_write_wiggles", base_command=["nanoraw", "write_wiggles"], inputs=[ToolInput(tag="in_base_call_subgroups", input_type=Array(t=String(), optional=True), prefix="--basecall-subgroups", doc=InputDocumentation(doc="FAST5 subgroup (under Analyses/[corrected-group])\nwhere individual template and/or complement reads are\nstored. Default: ['BaseCalled_template']")), ToolInput(tag="in_two_d", input_type=Boolean(optional=True), prefix="--2d", doc=InputDocumentation(doc="Input contains 2D reads. Equivalent to `--basecall-\nsubgroups BaseCalled_template BaseCalled_complement`")), ToolInput(tag="in_fast_five_based_irs", input_type=Array(t=Int(), optional=True), prefix="--fast5-basedirs", doc=InputDocumentation(doc="Directories containing fast5 files.")), ToolInput(tag="in_fast_five_based_irs_two", input_type=Array(t=Int(), optional=True), prefix="--fast5-basedirs2", doc=InputDocumentation(doc="Second set of directories containing fast5 files to\ncompare.")), ToolInput(tag="in_wiggle_basename", input_type=Int(optional=True), prefix="--wiggle-basename", doc=InputDocumentation(doc="Basename for output files. Two files (plus and minus\nstrand) will be produced for each --wiggle-types\nsupplied. Filenames will be formatted as '[wiggle-\nbasename].[wiggle-type].[group1/2]?.[plus/minus].wig'.\nDefault: Nanopore_data")), ToolInput(tag="in_wiggle_types", input_type=String(optional=True), prefix="--wiggle-types", doc=InputDocumentation(doc="[{coverage,signal,signal_sd,length,pvals,qvals,difference} ...]\nData types for which wiggles should be created (select\none or more data types). Choices: coverage, signal,\nsignal_sd, length, pvals, qvals (both negative log10),\ndifference. Note that signal, signal_sd and length\n(number of observations per base) are means over all\nreads at each base. Default: 'coverage, pvals'")), ToolInput(tag="in_corrected_group", input_type=Int(optional=True), prefix="--corrected-group", doc=InputDocumentation(doc="FAST5 group to access/plot created by\ngenome_resquiggle script. Default:\nRawGenomeCorrected_000")), ToolInput(tag="in_obs_per_base_filter", input_type=Array(t=String(), optional=True), prefix="--obs-per-base-filter", doc=InputDocumentation(doc="Filter reads for plotting baseed on threshold of\npercentiles of the number of observations assigned to\na base (default no filter). Format thresholds as\n'percentile:thresh [pctl2:thresh2 ...]' E.g. reads\nwith 99th pctl <200 obs and max <5k obs would be\n'99:200 100:5000'.")), ToolInput(tag="in_test_type", input_type=String(optional=True), prefix="--test-type", doc=InputDocumentation(doc="Type of significance test to apply. Choices are:\nmw_utest (default; mann-whitney u-test), ttest.")), ToolInput(tag="in_fishers_method_offset", input_type=Int(optional=True), prefix="--fishers-method-offset", doc=InputDocumentation(doc="Offset up and downstream over which to compute\ncombined p-values using Fisher's method. Default: 2.")), ToolInput(tag="in_minimum_test_reads", input_type=Int(optional=True), prefix="--minimum-test-reads", doc=InputDocumentation(doc="Number of reads required from both samples to test for\nsignificant difference in signal level. Default: 5")), ToolInput(tag="in_statistics_filename", input_type=File(optional=True), prefix="--statistics-filename", doc=InputDocumentation(doc="Filename to save/load base by base signal difference\nstatistics. If file exists it will try to be loaded,\nif it does not exist it will be created to save\nstatistics. Default: Don't save/load.")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="Don't print status information."))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Nanoraw_Write_Wiggles_V0_1_0().translate("wdl", allow_empty_container=True)

