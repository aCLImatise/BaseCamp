from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, String, Float, Boolean

Pxseqgen_V0_1_0 = CommandToolBuilder(tool="pxseqgen", base_command=["pxseqgen"], inputs=[ToolInput(tag="in_tree_f", input_type=File(optional=True), prefix="--treef", doc=InputDocumentation(doc="input treefile, STDIN otherwise")), ToolInput(tag="in_out_f", input_type=File(optional=True), prefix="--outf", doc=InputDocumentation(doc="output seq file, STOUT otherwise")), ToolInput(tag="in_length", input_type=Int(optional=True), prefix="--length", doc=InputDocumentation(doc="length of sequences to generate. default is 1000")), ToolInput(tag="in_base_f", input_type=String(optional=True), prefix="--basef", doc=InputDocumentation(doc="comma-delimited base freqs in order: A,C,G,T. default is equal")), ToolInput(tag="in_gamma", input_type=Int(optional=True), prefix="--gamma", doc=InputDocumentation(doc="gamma shape value. default is no rate variation")), ToolInput(tag="in_pin_var", input_type=Float(optional=True), prefix="--pinvar", doc=InputDocumentation(doc="proportion of invariable sites. default is 0.0")), ToolInput(tag="in_rate_mat", input_type=Int(optional=True), prefix="--ratemat", doc=InputDocumentation(doc="comma-delimited input values for rate matrix. default is JC69\norder: A<->C,A<->G,A<->T,C<->G,C<->T,G<->T")), ToolInput(tag="in_aa_rate_mat", input_type=String(optional=True), prefix="--aaratemat", doc=InputDocumentation(doc="comma-delimited amino acid rate matrix. default is all freqs equal\norder is ARNDCQEGHILKMFPSTWYV")), ToolInput(tag="in_aa_base_freq", input_type=String(optional=True), prefix="--aabasefreq", doc=InputDocumentation(doc="AA frequencies, order: ARNDCQEGHILKMFPSTWYV")), ToolInput(tag="in_protein", input_type=Boolean(optional=True), prefix="--protein", doc=InputDocumentation(doc="run as amino acid")), ToolInput(tag="in_n_reps", input_type=Int(optional=True), prefix="--nreps", doc=InputDocumentation(doc="number of replicates")), ToolInput(tag="in_seed", input_type=Int(optional=True), prefix="--seed", doc=InputDocumentation(doc="random number seed, clock otherwise")), ToolInput(tag="in_ancestors", input_type=Boolean(optional=True), prefix="--ancestors", doc=InputDocumentation(doc="print the ancestral node sequences. default is no\nuse -p for the nodes labels")), ToolInput(tag="in_print_node_labels", input_type=Boolean(optional=True), prefix="--printnodelabels", doc=InputDocumentation(doc="print newick with internal node labels. default is no")), ToolInput(tag="in_multi_model", input_type=Float(optional=True), prefix="--multimodel", doc=InputDocumentation(doc="specify multiple models across tree\ninput is as follows:\nA<->C,A<->G,A<->T,C<->G,C<->T,G<->T,Node#,A<->C,A<->G,A<->T,C<->G,C<->T,G<->T\nEX:.3,.3,.3,.3,.3,1,.3,.3,.2,.5,.4")), ToolInput(tag="in_root_seq", input_type=String(optional=True), prefix="--rootseq", doc=InputDocumentation(doc="set root sequence. default is random (from basefreqs)")), ToolInput(tag="in_citation", input_type=Boolean(optional=True), prefix="--citation", doc=InputDocumentation(doc="display phyx citation and exit"))], outputs=[ToolOutput(tag="out_out_f", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_f", type_hint=File()), doc=OutputDocumentation(doc="output seq file, STOUT otherwise"))], container="quay.io/biocontainers/phyx:1.1--h937addc_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Pxseqgen_V0_1_0().translate("wdl")

