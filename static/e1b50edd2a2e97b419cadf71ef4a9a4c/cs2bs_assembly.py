from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean

Cs2Bs_Assembly_V0_1_0 = CommandToolBuilder(tool="cs2bs_assembly", base_command=["cs2bs_assembly"], inputs=[ToolInput(tag="in_fast_a", input_type=Boolean(optional=True), prefix="-fasta", doc=InputDocumentation(doc="(string)         Double encoded color space assembly in FASTA format.")), ToolInput(tag="in_sam", input_type=Boolean(optional=True), prefix="-sam", doc=InputDocumentation(doc="(string)         Double encoded mapped reads into the double encoded assembly (it requires pass_v1.7 or later)")), ToolInput(tag="in_int_minimum_contigs", input_type=Boolean(optional=True), prefix="-l", doc=InputDocumentation(doc="(int)           Minimum contigs length [100]")), ToolInput(tag="in_float_maximum_fraction", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="(float)          Maximum tolerated fraction of Ns for each contig. [1]")), ToolInput(tag="in_validate_anchored_bases", input_type=Boolean(optional=True), prefix="-C", doc=InputDocumentation(doc="(int)           Minimum coverage required to validate anchored bases. [1]")), ToolInput(tag="in_operate_assembly_correction", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="(int)           Minimum coverage required to operate the assembly correction. [1]")), ToolInput(tag="in_erode", input_type=Boolean(optional=True), prefix="-erode", doc=InputDocumentation(doc="(int)           Minimum coverage considered to erode contig ends [2]")), ToolInput(tag="in_float_zscore_required", input_type=Boolean(optional=True), prefix="-z", doc=InputDocumentation(doc="(float)          z-score required to calculate the coverage threshold basing on coverage analysis")), ToolInput(tag="in_clean", input_type=Boolean(optional=True), prefix="-clean", doc=InputDocumentation(doc="(int)           Basing on a threshold number of Ns it splits putative chimeric contigs")), ToolInput(tag="in_de_scaffolding", input_type=Boolean(optional=True), prefix="-descaffolding", doc=InputDocumentation(doc="(int, string) it splits scaffolds into contigs considering Ns STRETCH (>= 1st set number) and\nit includes a suffix tag in the contigs name")), ToolInput(tag="in_erosion", input_type=Boolean(optional=True), prefix="-erosion", doc=InputDocumentation(doc="it doesn't erodes contig ends basing on sequence coverage and undefined bases")), ToolInput(tag="in_log", input_type=Boolean(optional=True), prefix="-log", doc=InputDocumentation(doc="(string)         log file."))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Cs2Bs_Assembly_V0_1_0().translate("wdl", allow_empty_container=True)

