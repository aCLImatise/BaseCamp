from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Float, String, Boolean

Phylophlan_Strain_Finder_V0_1_0 = CommandToolBuilder(tool="phylophlan_strain_finder", base_command=["phylophlan_strain_finder"], inputs=[ToolInput(tag="in_input", input_type=File(optional=True), prefix="--input", doc=InputDocumentation(doc="Specify the file of the phylogenetic tree as generated\nfrom phylophlan.py (default: None)")), ToolInput(tag="in_mutation_rates", input_type=File(optional=True), prefix="--mutation_rates", doc=InputDocumentation(doc="Specify the file of the mutation rates as generated\nfrom phylophlan.py (default: None)")), ToolInput(tag="in_phylo_thr", input_type=Float(optional=True), prefix="--phylo_thr", doc=InputDocumentation(doc="Maximum phylogenetic distance threshold for every pair\nof nodes in the same subtree (inclusive) (default:\n0.05)")), ToolInput(tag="in_mut_rate_thr", input_type=Float(optional=True), prefix="--mutrate_thr", doc=InputDocumentation(doc="Maximum mutation rate ratio for every pair of nodes in\nthe same subtree (inclusive) (default: 0.05)")), ToolInput(tag="in_tree_format", input_type=String(optional=True), prefix="--tree_format", doc=InputDocumentation(doc="Specify the format of the input tree (default: newick)")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="Specify the output filename, if not specified will be\nstdout (default: None)")), ToolInput(tag="in_overwrite", input_type=File(optional=True), prefix="--overwrite", doc=InputDocumentation(doc="Overwrite the output file if exists (default: False)")), ToolInput(tag="in_specify_separator_use", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="{;,,,      }, --separator {;,,,    }\nSpecify the separator to use in the output (default: )")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Write more stuff (default: False)"))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="Specify the output filename, if not specified will be\nstdout (default: None)")), ToolOutput(tag="out_overwrite", output_type=File(optional=True), selector=InputSelector(input_to_select="in_overwrite", type_hint=File()), doc=OutputDocumentation(doc="Overwrite the output file if exists (default: False)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Phylophlan_Strain_Finder_V0_1_0().translate("wdl", allow_empty_container=True)

