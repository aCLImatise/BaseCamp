from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String, Int

Generate_Bed_File_Of_Endpoints_Py_V0_1_0 = CommandToolBuilder(tool="generate_BED_file_of_endpoints.py", base_command=["generate_BED_file_of_endpoints.py"], inputs=[ToolInput(tag="in_reverse", input_type=Boolean(optional=True), prefix="--reverse", doc=InputDocumentation(doc="The original bam file is the reverse complement of the\nRNA. (default: False)")), ToolInput(tag="in_summary", input_type=File(optional=True), prefix="--summary", doc=InputDocumentation(doc="Print only reads that are found to be significant in\nthis summary file. (default: None)")), ToolInput(tag="in_gene_name", input_type=String(optional=True), prefix="--gene_name", doc=InputDocumentation(doc="Print reads involve only this gene (EcoCyc ID),\napplies only with -s (default: None)")), ToolInput(tag="in_rand_score", input_type=Boolean(optional=True), prefix="--rand_score", doc=InputDocumentation(doc="Set a random score (0-1000) for each read, this will\nallow to present some of the reads in UCSC genome\nbrowser. (default: False)")), ToolInput(tag="in_pos_first", input_type=Int(optional=True), prefix="--pos_first", doc=InputDocumentation(doc="Color of first part, positive strand. (default:\n255,0,0)")), ToolInput(tag="in_pos_second", input_type=Int(optional=True), prefix="--pos_second", doc=InputDocumentation(doc="Color of second part, positive strand. (default:\n51,102,255)")), ToolInput(tag="in_rev_first", input_type=Int(optional=True), prefix="--rev_first", doc=InputDocumentation(doc="Color of first part, reverse strand. (default:\n255,0,0)")), ToolInput(tag="in_rev_second", input_type=Int(optional=True), prefix="--rev_second", doc=InputDocumentation(doc="Color of second part, reverse strand. (default:\n51,102,255)")), ToolInput(tag="in_bc_chr_list", input_type=File(optional=True), prefix="--BC_chrlist", doc=InputDocumentation(doc="A comma separated dictionary of chromosome names from\nthe BioCyc names to the bam file names. The names in\nthe bam file should be the same as the UCSC genome\nbrowser (they will be printed). (default:\nCOLI-K12,chr)\n")), ToolInput(tag="in_genome", input_type=String(), position=0, doc=InputDocumentation(doc="genome fasta file.")), ToolInput(tag="in_list_reads", input_type=String(), position=1, doc=InputDocumentation(doc="File with list of reads and their fused positions.")), ToolInput(tag="in_track_name", input_type=String(), position=2, doc=InputDocumentation(doc="Name of track")), ToolInput(tag="in_track_desc", input_type=String(), position=3, doc=InputDocumentation(doc="Description of the track")), ToolInput(tag="in_bam_files", input_type=String(), position=4, doc=InputDocumentation(doc="The original bam file (or several files) with the full")), ToolInput(tag="in_reads_dot", input_type=String(), position=5, doc=InputDocumentation(doc="optional arguments:"))], outputs=[], container="quay.io/biocontainers/rilseq:0.81--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Generate_Bed_File_Of_Endpoints_Py_V0_1_0().translate("wdl")

