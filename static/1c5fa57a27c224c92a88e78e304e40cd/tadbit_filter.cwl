class: CommandLineTool
id: ../../../../home/ubuntu/BiocondaCli/tadbit_filter.cwl
inputs:
- id: force
  doc: overwrite previously run job
  type: boolean
  inputBinding:
    prefix: --force
- id: resume
  doc: use filters of previously run job
  type: boolean
  inputBinding:
    prefix: --resume
- id: workdir
  doc: path to working directory (generated with the tool tadbit mapper)
  type: File
  inputBinding:
    prefix: --workdir
- id: cpus
  doc: '[8] Maximum number of CPU cores available in the execution host. If higher
    than 1, tasks with multi-threading capabilities will enabled (if 0 all available)
    cores will be used'
  type: string
  inputBinding:
    prefix: --cpus
- id: nox
  doc: no display server (X screen)
  type: boolean
  inputBinding:
    prefix: --noX
- id: tmp_db
  doc: if provided uses this directory to manipulate the database
  type: File
  inputBinding:
    prefix: --tmpdb
- id: path_ids
  doc: Use as input data generated by a job under a given pathids. Use tadbit describe
    to find out which. To filter an intersected file produced with tadbit map --fast_fragment
    only one PATHid is needed otherwise one per read is needed, first for read 1,
    second for read 2.
  type: long[]
  inputBinding:
    prefix: --pathids
- id: compress_input
  doc: Compress input mapped files when parsing is done. This is done in background,
    while next MAP file is processed, or while reads are sorted.
  type: boolean
  inputBinding:
    prefix: --compress_input
- id: sam_tools
  doc: path samtools binary
  type: File
  inputBinding:
    prefix: --samtools
- id: format
  doc: '[mid] for compression into pseudo-BAM format. Short contains only positions
    of reads mapped, mid everything but restriction sites.'
  type: string
  inputBinding:
    prefix: --format
- id: valid
  doc: stores only valid-pairs discards filtered out reads.
  type: boolean
  inputBinding:
    prefix: --valid
- id: clean
  doc: 'remove intermediate files. WARNING: together with format "short" or valid
    options, this may results in losing data'
  type: boolean
  inputBinding:
    prefix: --clean
- id: apply
  doc: "[[1, 2, 3, 4, 6, 7, 9, 10]] Use filters to define a set os valid pair of reads\
    \ e.g.: '--apply 1 2 3 4 6 7 8 9'. Where these numberscorrespond to: 1: self-circle,\
    \ 2: dangling-end, 3: error, 4: extra dangling-end, 5: too close from RES, 6:\
    \ too short, 7: too large, 8: over-represented, 9: duplicated, 10: random breaks"
  type: long[]
  inputBinding:
    prefix: --apply
- id: over_represented
  doc: '[0.001%] percentage of restriction-enzyme (RE) genomic fragments with more
    coverage to exclude (possible PCR artifact).'
  type: string
  inputBinding:
    prefix: --over_represented
- id: max_frag_size
  doc: '[100000] to exclude large genomic RE fragments (probably resulting from gaps
    in the reference genome)'
  type: string
  inputBinding:
    prefix: --max_frag_size
- id: min_frag_size
  doc: '[50] to exclude small genomic RE fragments (smaller than sequenced reads)'
  type: string
  inputBinding:
    prefix: --min_frag_size
- id: re_proximity
  doc: '[5] to exclude read-ends falling too close from RE site (pseudo- dangling-ends)'
  type: string
  inputBinding:
    prefix: --re_proximity
outputs: []
cwlVersion: v1.1
baseCommand:
- tadbit
- filter
