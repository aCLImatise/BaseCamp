from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, Boolean, String

Samtools_Coverage_V0_1_0 = CommandToolBuilder(tool="samtools_coverage", base_command=["samtools", "coverage"], inputs=[ToolInput(tag="in_bam_list", input_type=File(optional=True), prefix="--bam-list", doc=InputDocumentation(doc="list of input BAM filenames, one per line")), ToolInput(tag="in_min_read_len", input_type=Int(optional=True), prefix="--min-read-len", doc=InputDocumentation(doc="ignore reads shorter than INT bp [0]")), ToolInput(tag="in_min_mq", input_type=Int(optional=True), prefix="--min-MQ", doc=InputDocumentation(doc="base quality threshold [0]")), ToolInput(tag="in_min_bq", input_type=Int(optional=True), prefix="--min-BQ", doc=InputDocumentation(doc="mapping quality threshold [0]")), ToolInput(tag="in_rf", input_type=Int(optional=True), prefix="--rf", doc=InputDocumentation(doc="required flags: skip reads with mask bits unset []")), ToolInput(tag="in_ff", input_type=Int(optional=True), prefix="--ff", doc=InputDocumentation(doc="filter flags: skip reads with mask bits set\n[UNMAP,SECONDARY,QCFAIL,DUP]")), ToolInput(tag="in_histogram", input_type=Boolean(optional=True), prefix="--histogram", doc=InputDocumentation(doc="show histogram instead of tabular output")), ToolInput(tag="in_ascii", input_type=Boolean(optional=True), prefix="--ascii", doc=InputDocumentation(doc="show only ASCII characters in histogram")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="write output to FILE [stdout]")), ToolInput(tag="in_no_header", input_type=Boolean(optional=True), prefix="--no-header", doc=InputDocumentation(doc="don't print a header in tabular mode")), ToolInput(tag="in_n_bins", input_type=Int(optional=True), prefix="--n-bins", doc=InputDocumentation(doc="number of bins in histogram [terminal width - 40]")), ToolInput(tag="in_region", input_type=String(optional=True), prefix="--region", doc=InputDocumentation(doc="show specified region. Format: chr:start-end.")), ToolInput(tag="in_input_fmt_option", input_type=File(optional=True), prefix="--input-fmt-option", doc=InputDocumentation(doc="[=VAL]\nSpecify a single input file format option in the form\nof OPTION or OPTION=VALUE")), ToolInput(tag="in_reference", input_type=File(optional=True), prefix="--reference", doc=InputDocumentation(doc="Reference sequence FASTA FILE [null]")), ToolInput(tag="in_verbosity", input_type=Int(optional=True), prefix="--verbosity", doc=InputDocumentation(doc="Set level of verbosity")), ToolInput(tag="in_r_name", input_type=String(), position=0, doc=InputDocumentation(doc="Reference name / chromosome")), ToolInput(tag="in_startpos", input_type=String(), position=1, doc=InputDocumentation(doc="Start position")), ToolInput(tag="in_endpos", input_type=String(), position=2, doc=InputDocumentation(doc="End position (or sequence length)")), ToolInput(tag="in_num_reads", input_type=String(), position=3, doc=InputDocumentation(doc="Number reads aligned to the region (after filtering)")), ToolInput(tag="in_cov_bases", input_type=String(), position=4, doc=InputDocumentation(doc="Number of covered bases with depth >= 1")), ToolInput(tag="in_coverage", input_type=String(), position=5, doc=InputDocumentation(doc="Proportion of covered bases [0..1]")), ToolInput(tag="in_mean_depth", input_type=String(), position=6, doc=InputDocumentation(doc="Mean depth of coverage")), ToolInput(tag="in_mean_base_q", input_type=String(), position=7, doc=InputDocumentation(doc="Mean baseQ in covered region")), ToolInput(tag="in_mean_mapq", input_type=String(), position=8, doc=InputDocumentation(doc="Mean mapQ of selected reads"))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="write output to FILE [stdout]"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Samtools_Coverage_V0_1_0().translate("wdl", allow_empty_container=True)

