from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Int, String

Asmqc_V0_1_0 = CommandToolBuilder(tool="asmQC", base_command=["asmQC"], inputs=[ToolInput(tag="in_bank", input_type=Boolean(optional=True), prefix="-bank", doc=InputDocumentation(doc="bank where assembly is stored")), ToolInput(tag="in_sc_aff", input_type=Boolean(optional=True), prefix="-scaff", doc=InputDocumentation(doc="take into account scaffolds when reporting results")), ToolInput(tag="in_feat", input_type=Boolean(optional=True), prefix="-feat", doc=InputDocumentation(doc="write contig features into the bank")), ToolInput(tag="in_recompute", input_type=Boolean(optional=True), prefix="-recompute", doc=InputDocumentation(doc="recompute library sizes")), ToolInput(tag="in_update", input_type=Boolean(optional=True), prefix="-update", doc=InputDocumentation(doc="update bank with recomputed library sizes")), ToolInput(tag="in_per_insert", input_type=File(optional=True), prefix="-perinsert", doc=InputDocumentation(doc="output per-insert information in <file>")), ToolInput(tag="in_min_obs", input_type=Int(optional=True), prefix="-minobs", doc=InputDocumentation(doc="minimum number of good mate-pairs required to recompute\nlibrary sizes")), ToolInput(tag="in_num_sd", input_type=Int(optional=True), prefix="-numsd", doc=InputDocumentation(doc="mate-pairs within <n> standard deviations of the mean library\nsize are considered good. <n> can be fractional")), ToolInput(tag="in_good_cvg", input_type=String(optional=True), prefix="-goodcvg", doc=InputDocumentation(doc="report regions with good mate coverage less than <n>")), ToolInput(tag="in_cest_at", input_type=Boolean(optional=True), prefix="-cestat", doc=InputDocumentation(doc="report regions with unusual CE stat (more than <numsd>\nstandard errors from mean). cestat implies -recompute and\ninvalidates -shortcvg and -longcvg")), ToolInput(tag="in_short_cvg", input_type=String(optional=True), prefix="-shortcvg", doc=InputDocumentation(doc="report regions with short mate coverage greater than <n>")), ToolInput(tag="in_long_cvg", input_type=String(optional=True), prefix="-longcvg", doc=InputDocumentation(doc="report regions with long mate coverage greater than <n>")), ToolInput(tag="in_same_cvg", input_type=String(optional=True), prefix="-samecvg", doc=InputDocumentation(doc="report regions with coverage by mates with same orientation\ngreater than <n>")), ToolInput(tag="in_out_iec_vg", input_type=String(optional=True), prefix="-outiecvg", doc=InputDocumentation(doc="report regions with outie coverage greater than <n>")), ToolInput(tag="in_linking", input_type=String(optional=True), prefix="-linking", doc=InputDocumentation(doc="report regions with linking read coverage greater than <n>")), ToolInput(tag="in_single_mate", input_type=String(optional=True), prefix="-singlemate", doc=InputDocumentation(doc="report regions with singleton mate coverage > than <n>")), ToolInput(tag="in_me_a_change", input_type=String(optional=True), prefix="-meachange", doc=InputDocumentation(doc="libraries whose mean changed by less than <n> will be\nconsidered unchanged")), ToolInput(tag="in_sd_change", input_type=String(optional=True), prefix="-sdchange", doc=InputDocumentation(doc="libraries whose stdev. changed by less than <n> will be\nconsidered unchanged")), ToolInput(tag="in_ce_plot", input_type=File(optional=True), prefix="-ceplot", doc=InputDocumentation(doc="file to output CE statistic plot to")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="-debug", doc=InputDocumentation(doc="output status for each mate-pair to STDERR"))], outputs=[ToolOutput(tag="out_per_insert", output_type=File(optional=True), selector=InputSelector(input_to_select="in_per_insert", type_hint=File()), doc=OutputDocumentation(doc="output per-insert information in <file>")), ToolOutput(tag="out_ce_plot", output_type=File(optional=True), selector=InputSelector(input_to_select="in_ce_plot", type_hint=File()), doc=OutputDocumentation(doc="file to output CE statistic plot to"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Asmqc_V0_1_0().translate("wdl", allow_empty_container=True)

