from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, String, Float, Boolean, File

Filter_Single_Py_V0_1_0 = CommandToolBuilder(tool="Filter_Single.py", base_command=["Filter_Single.py"], inputs=[ToolInput(tag="in_p_one", input_type=Int(optional=True), prefix="--p1", doc=InputDocumentation(doc="Input file (.fastq, .fq)")), ToolInput(tag="in_msz", input_type=Int(optional=True), prefix="--msz", doc=InputDocumentation(doc="filter the reads which are lesser than minimum size")), ToolInput(tag="in_q_fmt", input_type=Int(optional=True), prefix="--qfmt", doc=InputDocumentation(doc="Quality value format\n1= Illumina 1.8\n2= Illumina 1.3\n3= Sanger")), ToolInput(tag="in_nb", input_type=Int(optional=True), prefix="--nb", doc=InputDocumentation(doc="filter the reads containing given % of N")), ToolInput(tag="in_adp", input_type=String(optional=True), prefix="--adp", doc=InputDocumentation(doc="Trim the adapter sequence and truncate the read sequence [adapter sequence]")), ToolInput(tag="in_per", input_type=Float(optional=True), prefix="--per", doc=InputDocumentation(doc="Truncate the read sequence if it matches to adapter sequence equal or more than given percent (0.0-1.0) [default=0.9]")), ToolInput(tag="in_q_thr", input_type=Int(optional=True), prefix="--qthr", doc=InputDocumentation(doc="Filter the read sequence if average quality of bases in reads is lower than threshold (1-40) [default:20]")), ToolInput(tag="in_trim", input_type=Boolean(optional=True), prefix="--trim", doc=InputDocumentation(doc="If trim option set to true, the reads with low quality (as defined by option --qthr) will be trimmed instead of discarding [default: False]")), ToolInput(tag="in_ws_z", input_type=Int(optional=True), prefix="--wsz", doc=InputDocumentation(doc="The window size for trimming (5'->3') the reads. This option should always set when -trim option is defined.\nThe recommended windowsize for best result should be between 2-5 [default:5]")), ToolInput(tag="in_mlk", input_type=Int(optional=True), prefix="--mlk", doc=InputDocumentation(doc="The minimum length of the reads to retain after trimming")), ToolInput(tag="in_cpu", input_type=Boolean(optional=True), prefix="--cpu", doc=InputDocumentation(doc="Number of CPU [default:2]")), ToolInput(tag="in_of_mt", input_type=File(optional=True), prefix="--ofmt", doc=InputDocumentation(doc="Output file format (fastq/fasta) [default:fastq]")), ToolInput(tag="in_no_vis", input_type=Boolean(optional=True), prefix="--no-vis", doc=InputDocumentation(doc="No figures will be produced [yes|no] [default:no]")), ToolInput(tag="in_filter_s", input_type=Boolean(optional=True), prefix="-filter-s", doc=InputDocumentation(doc="")), ToolInput(tag="in_s_rap", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_of_mt", output_type=File(optional=True), selector=InputSelector(input_to_select="in_of_mt", type_hint=File()), doc=OutputDocumentation(doc="Output file format (fastq/fasta) [default:fastq]"))], container="quay.io/biocontainers/htseqqc:v1.0--pyh5bfb8f1_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Filter_Single_Py_V0_1_0().translate("wdl")

