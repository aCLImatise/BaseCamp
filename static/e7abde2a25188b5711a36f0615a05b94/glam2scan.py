from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Directory, Boolean, String, Int

Glam2Scan_V0_1_0 = CommandToolBuilder(tool="glam2scan", base_command=["glam2scan"], inputs=[ToolInput(tag="in_output_directory_clobber", input_type=Directory(optional=True), prefix="-o", doc=InputDocumentation(doc=": output directory; will not clobber existing files")), ToolInput(tag="in_output_directory_allow", input_type=Directory(optional=True), prefix="-O", doc=InputDocumentation(doc=": output directory (glam2scan_out); allow clobbering")), ToolInput(tag="in_output_text_only", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc=": output text only to stdout")), ToolInput(tag="in_number_alignments_report", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc=": number of alignments to report (25)")), ToolInput(tag="in_examine_strands_forward", input_type=Boolean(optional=True), prefix="-2", doc=InputDocumentation(doc=": examine both strands - forward and reverse complement")), ToolInput(tag="in__deletion_pseudocount", input_type=Boolean(optional=True), prefix="-D", doc=InputDocumentation(doc=": deletion pseudocount (0.1)")), ToolInput(tag="in__nodeletion_pseudocount", input_type=Boolean(optional=True), prefix="-E", doc=InputDocumentation(doc=": no-deletion pseudocount (2.0)")), ToolInput(tag="in__insertion_pseudocount", input_type=Boolean(optional=True), prefix="-I", doc=InputDocumentation(doc=": insertion pseudocount (0.02)")), ToolInput(tag="in__noinsertion_pseudocount", input_type=Boolean(optional=True), prefix="-J", doc=InputDocumentation(doc=": no-insertion pseudocount (1.0)")), ToolInput(tag="in_dirichlet_mixture_file", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc=": Dirichlet mixture file")), ToolInput(tag="in_print_version_exit", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc=": print version and exit (also accepts --version)")), ToolInput(tag="in_alphabet", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_my_motif_dot_glam_two", input_type=Int(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_my_seqs_dot_fa", input_type=String(), position=2, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output_directory_clobber", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output_directory_clobber", type_hint=File()), doc=OutputDocumentation(doc=": output directory; will not clobber existing files")), ToolOutput(tag="out_output_directory_allow", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output_directory_allow", type_hint=File()), doc=OutputDocumentation(doc=": output directory (glam2scan_out); allow clobbering"))], container="quay.io/biocontainers/meme:5.3.0--py38pl526hc1f1133_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Glam2Scan_V0_1_0().translate("wdl")

