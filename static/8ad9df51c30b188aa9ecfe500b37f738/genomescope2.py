from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Directory, Int, String, Boolean

Genomescope2_V0_1_0 = CommandToolBuilder(tool="genomescope2", base_command=["genomescope2"], inputs=[ToolInput(tag="in_input", input_type=File(optional=True), prefix="--input", doc=InputDocumentation(doc="input histogram file")), ToolInput(tag="in_output", input_type=Directory(optional=True), prefix="--output", doc=InputDocumentation(doc="output directory name")), ToolInput(tag="in_ploidy", input_type=Int(optional=True), prefix="--ploidy", doc=InputDocumentation(doc="ploidy (1, 2, 3, 4, 5, or 6) for model to use [default\n2]")), ToolInput(tag="in_km_er_length", input_type=Int(optional=True), prefix="--kmer_length", doc=InputDocumentation(doc="kmer length used to calculate kmer spectra [default\n21]")), ToolInput(tag="in_name_prefix", input_type=String(optional=True), prefix="--name_prefix", doc=InputDocumentation(doc="optional name_prefix for output files")), ToolInput(tag="in_k_merco_v", input_type=String(optional=True), prefix="--kmercov", doc=InputDocumentation(doc="optional initial kmercov estimate for model to use")), ToolInput(tag="in_max_k_merco_v", input_type=Int(optional=True), prefix="--max_kmercov", doc=InputDocumentation(doc="optional maximum kmer coverage threshold (kmers with\ncoverage greater than max_kmercov are ignored by the\nmodel)")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="optional flag to print messages during execution")), ToolInput(tag="in_no_unique_sequence", input_type=Boolean(optional=True), prefix="--no_unique_sequence", doc=InputDocumentation(doc="optional flag to turn off yellow unique sequence line\nin plots")), ToolInput(tag="in_topology", input_type=String(optional=True), prefix="--topology", doc=InputDocumentation(doc="ADVANCED: flag for topology for model to use")), ToolInput(tag="in_initial_repetitiveness", input_type=String(optional=True), prefix="--initial_repetitiveness", doc=InputDocumentation(doc="ADVANCED: flag to set initial value for repetitiveness")), ToolInput(tag="in_initial_hetero_zygo_sities", input_type=String(optional=True), prefix="--initial_heterozygosities", doc=InputDocumentation(doc="ADVANCED: flag to set initial values for nucleotide\nheterozygosity rates")), ToolInput(tag="in_transform_exp", input_type=Int(optional=True), prefix="--transform_exp", doc=InputDocumentation(doc="ADVANCED: parameter for the exponent when fitting a\ntransformed (x**transform_exp*y vs. x) kmer histogram\n[default 1]")), ToolInput(tag="in_testing", input_type=Boolean(optional=True), prefix="--testing", doc=InputDocumentation(doc="ADVANCED: flag to create testing.tsv file with model")), ToolInput(tag="in_trace_flag", input_type=Boolean(optional=True), prefix="--trace_flag", doc=InputDocumentation(doc="ADVANCED: flag to turn on printing of iteration\nprogress of nlsLM function")), ToolInput(tag="in_num_rounds", input_type=Int(optional=True), prefix="--num_rounds", doc=InputDocumentation(doc="ADVANCED: parameter for the number of optimization\nrounds\n")), ToolInput(tag="in_parameters", input_type=String(), position=0, doc=InputDocumentation(doc="--true_params TRUE_PARAMS"))], outputs=[ToolOutput(tag="out_output", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="output directory name"))], container="quay.io/biocontainers/genomescope2:2.0--r40_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Genomescope2_V0_1_0().translate("wdl")

