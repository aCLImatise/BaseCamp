from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, File, Int, Float

Trnascan_Se_V0_1_0 = CommandToolBuilder(tool="tRNAscan_SE", base_command=["tRNAscan-SE"], inputs=[ToolInput(tag="in_search_eukaryotic_trnas", input_type=Boolean(optional=True), prefix="-E", doc=InputDocumentation(doc=": search for eukaryotic tRNAs (default)")), ToolInput(tag="in_search_bacterial_trnas", input_type=Boolean(optional=True), prefix="-B", doc=InputDocumentation(doc=": search for bacterial tRNAs")), ToolInput(tag="in_search_archaeal_trnas", input_type=Boolean(optional=True), prefix="-A", doc=InputDocumentation(doc=": search for archaeal tRNAs")), ToolInput(tag="in_search_mitochondrial_trnasoptions", input_type=String(optional=True), prefix="-M", doc=InputDocumentation(doc=": search for mitochondrial tRNAs\noptions: mammal, vert")), ToolInput(tag="in_search_other_organellar", input_type=Boolean(optional=True), prefix="-O", doc=InputDocumentation(doc=": search for other organellar tRNAs")), ToolInput(tag="in_use_general_trnas", input_type=Boolean(optional=True), prefix="-G", doc=InputDocumentation(doc=": use general tRNA model (cytoslic tRNAs from all 3 domains included)")), ToolInput(tag="in_mt", input_type=String(optional=True), prefix="--mt", doc=InputDocumentation(doc=": use mito tRNA models for cytosolic/mito detemination\n(if not specified, only cytosolic isotype-specific model scan will be performed)")), ToolInput(tag="in_search_using_infernaldefault", input_type=Boolean(optional=True), prefix="-I", doc=InputDocumentation(doc=": search using Infernal\ndefault use with -E, -B, -A, or -G; optional for -O")), ToolInput(tag="in_max", input_type=Boolean(optional=True), prefix="--max", doc=InputDocumentation(doc=": maximum sensitivity mode - search using Infernal without hmm filter (very slow)")), ToolInput(tag="in_search_using_method", input_type=Boolean(optional=True), prefix="-L", doc=InputDocumentation(doc=": search using the legacy method (tRNAscan, EufindtRNA, and COVE)\nuse with -E, -B, -A or -G")), ToolInput(tag="in_cove", input_type=Boolean(optional=True), prefix="--cove", doc=InputDocumentation(doc=": search using COVE analysis only (legacy, extremely slow)\ndefault use with -O")), ToolInput(tag="in_breakdown", input_type=Boolean(optional=True), prefix="--breakdown", doc=InputDocumentation(doc=": show breakdown of primary and secondary structure components to\ncovariance model bit scores")), ToolInput(tag="in_no_pseudo", input_type=Boolean(optional=True), prefix="--nopseudo", doc=InputDocumentation(doc=": disable pseudogene checking")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc=": save final results in <file>")), ToolInput(tag="in_struct", input_type=File(optional=True), prefix="--struct", doc=InputDocumentation(doc=": save tRNA secondary structures to <file>")), ToolInput(tag="in_iso_specific", input_type=File(optional=True), prefix="--isospecific", doc=InputDocumentation(doc=": save results using isotype-specific models in <file>")), ToolInput(tag="in_stats", input_type=File(optional=True), prefix="--stats", doc=InputDocumentation(doc=": save statistics summary for run in <file>\n(speed, # tRNAs found in each part of search, etc)")), ToolInput(tag="in_bed", input_type=File(optional=True), prefix="--bed", doc=InputDocumentation(doc=": save results in BED file format of <file>")), ToolInput(tag="in_fast_a", input_type=File(optional=True), prefix="--fasta", doc=InputDocumentation(doc=": save predicted tRNA sequences in FASTA file format of <file>")), ToolInput(tag="in_log", input_type=File(optional=True), prefix="--log", doc=InputDocumentation(doc=": save log of program progress in <file>")), ToolInput(tag="in_detail", input_type=Boolean(optional=True), prefix="--detail", doc=InputDocumentation(doc=": display prediction outputs in detailed view")), ToolInput(tag="in_brief", input_type=Boolean(optional=True), prefix="--brief", doc=InputDocumentation(doc=": brief output format (no column headers)")), ToolInput(tag="in_prefix", input_type=File(optional=True), prefix="--prefix", doc=InputDocumentation(doc=": use <label> prefix for all default output file names")), ToolInput(tag="in_progress", input_type=Boolean(optional=True), prefix="--progress", doc=InputDocumentation(doc=": display program progress messages")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc=": quiet mode (credits & run option selections suppressed)")), ToolInput(tag="in_hit_src", input_type=Boolean(optional=True), prefix="--hitsrc", doc=InputDocumentation(doc=": show origin of hits (Ts=tRNAscan 1.4, Eu=EufindtRNA,\nBo=Both Ts and Eu, Inf=Infernal)")), ToolInput(tag="in_score", input_type=Int(optional=True), prefix="--score", doc=InputDocumentation(doc=": set cutoff score (in bits) for reporting tRNAs (default=20)")), ToolInput(tag="in_gen_code", input_type=File(optional=True), prefix="--gencode", doc=InputDocumentation(doc=": use alternate genetic codes specified in <file> for\ndetermining tRNA type")), ToolInput(tag="in_pad", input_type=Int(optional=True), prefix="--pad", doc=InputDocumentation(doc=": use <number> nucleotides padding when passing first-pass\ntRNA bounds predictions to CM analysis (default=8)")), ToolInput(tag="in_len", input_type=Int(optional=True), prefix="--len", doc=InputDocumentation(doc=": set max length of tRNA intron+variable region for legacy search mode\n(default=116bp)")), ToolInput(tag="in_conf", input_type=File(optional=True), prefix="--conf", doc=InputDocumentation(doc=": tRNAscan-SE configuration file (default: tRNAscan-SE.conf)")), ToolInput(tag="in_force_ow", input_type=Boolean(optional=True), prefix="--forceow", doc=InputDocumentation(doc=": do not prompt user before overwriting pre-existing\nresult files  (for batch processing)")), ToolInput(tag="in_match", input_type=String(optional=True), prefix="--match", doc=InputDocumentation(doc=": search only sequences with names matching <EXPR> string\n(<EXPR> may contain * or ? wildcard chars)")), ToolInput(tag="in_search", input_type=File(optional=True), prefix="--search", doc=InputDocumentation(doc=": start search at sequence with name matching <EXPR> string\nand continue to end of input sequence file(s)")), ToolInput(tag="in_search_trnas_alternate", input_type=Boolean(optional=True), prefix="-U", doc=InputDocumentation(doc=": search for tRNAs with alternate models defined in configuration file")), ToolInput(tag="in_ts_can", input_type=Boolean(optional=True), prefix="--tscan", doc=InputDocumentation(doc=": search using tRNAscan only (defaults to strict params)")), ToolInput(tag="in_t_mode", input_type=Float(optional=True), prefix="--tmode", doc=InputDocumentation(doc=": explicitly set tRNAscan params, where <mode>=R or S\n(R=relaxed, S=strict tRNAscan v1.3 params)")), ToolInput(tag="in_verbose", input_type=File(optional=True), prefix="--verbose", doc=InputDocumentation(doc=": save verbose tRNAscan 1.3 output to <file>")), ToolInput(tag="in_no_merge", input_type=Boolean(optional=True), prefix="--nomerge", doc=InputDocumentation(doc=": Keep redundant tRNAscan 1.3 hits (don't filter out multiple\npredictions per tRNA identification)")), ToolInput(tag="in_eu_find", input_type=Boolean(optional=True), prefix="--eufind", doc=InputDocumentation(doc=": search using Eukaryotic tRNA finder (EufindtRNA) only\n(defaults to Normal seach parameters when run alone,\nor to Relaxed search params when run with Cove)")), ToolInput(tag="in_e_mode", input_type=String(optional=True), prefix="--emode", doc=InputDocumentation(doc=": explicitly set EufindtRNA params, where <mode>=R, N, or S\n(relaxed, normal, or strict)")), ToolInput(tag="in_is_core", input_type=String(optional=True), prefix="--iscore", doc=InputDocumentation(doc=": manually set 'intermediate' cutoff score for EufindtRNA")), ToolInput(tag="in_fs_res", input_type=File(optional=True), prefix="--fsres", doc=InputDocumentation(doc=": save first-pass scan results from EufindtRNA, tRNAscan, or\nInfernal hmm in <file> in tabular results format")), ToolInput(tag="in_mid", input_type=Boolean(optional=True), prefix="--mid", doc=InputDocumentation(doc=": fast scan mode - search using Infernal with mid-level strictness of hmm filter")), ToolInput(tag="in_false_pos", input_type=File(optional=True), prefix="--falsepos", doc=InputDocumentation(doc=": save first-pass candidate tRNAs in <file> that were then\nfound to be false positives by second-pass analysis")), ToolInput(tag="in_missed", input_type=File(optional=True), prefix="--missed", doc=InputDocumentation(doc=": save all seqs that do NOT have at least one\ntRNA prediction in them (aka 'missed' seqs)")), ToolInput(tag="in_thread", input_type=Int(optional=True), prefix="--thread", doc=InputDocumentation(doc=": number of threads used for running infernal (default is to use available threads)")), ToolInput(tag="in_options", input_type=Boolean(optional=True), prefix="-options", doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_prefix", output_type=File(optional=True), selector=InputSelector(input_to_select="in_prefix", type_hint=File()), doc=OutputDocumentation(doc=": use <label> prefix for all default output file names")), ToolOutput(tag="out_verbose", output_type=File(optional=True), selector=InputSelector(input_to_select="in_verbose", type_hint=File()), doc=OutputDocumentation(doc=": save verbose tRNAscan 1.3 output to <file>"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Trnascan_Se_V0_1_0().translate("wdl", allow_empty_container=True)

