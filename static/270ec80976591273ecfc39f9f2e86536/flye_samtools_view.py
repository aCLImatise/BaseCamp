from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String, Int, Float

Flye_Samtools_View_V0_1_0 = CommandToolBuilder(tool="flye_samtools_view", base_command=["flye-samtools", "view"], inputs=[ToolInput(tag="in_output_bam", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc="output BAM")), ToolInput(tag="in_output_cram_requires", input_type=Boolean(optional=True), prefix="-C", doc=InputDocumentation(doc="output CRAM (requires -T)")), ToolInput(tag="in_use_compression_implies", input_type=Boolean(optional=True), prefix="-1", doc=InputDocumentation(doc="use fast BAM compression (implies -b)")), ToolInput(tag="in_uncompressed_bam_output", input_type=Boolean(optional=True), prefix="-u", doc=InputDocumentation(doc="uncompressed BAM output (implies -b)")), ToolInput(tag="in_print_sam_header", input_type=Boolean(optional=True), prefix="-H", doc=InputDocumentation(doc="print SAM header only (no alignments)")), ToolInput(tag="in_print_only_count", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="print only the count of matching records")), ToolInput(tag="in_output_file_name", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="output file name [stdout]")), ToolInput(tag="in_output_reads_selected", input_type=File(optional=True), prefix="-U", doc=InputDocumentation(doc="output reads not selected by filters to FILE [null]")), ToolInput(tag="in_file_listing_names", input_type=File(optional=True), prefix="-t", doc=InputDocumentation(doc="FILE listing reference names and lengths (see long help) [null]")), ToolInput(tag="in_only_include_reads_overlapping", input_type=File(optional=True), prefix="-L", doc=InputDocumentation(doc="only include reads overlapping this BED FILE [null]")), ToolInput(tag="in_only_include_reads_read_str", input_type=String(optional=True), prefix="-r", doc=InputDocumentation(doc="only include reads in read group STR [null]")), ToolInput(tag="in_only_include_reads_read", input_type=File(optional=True), prefix="-R", doc=InputDocumentation(doc="only include reads with read group listed in FILE [null]")), ToolInput(tag="in_only_include_reads_mapping_int", input_type=Int(optional=True), prefix="-q", doc=InputDocumentation(doc="only include reads with mapping quality >= INT [0]")), ToolInput(tag="in_only_include_reads_library_str", input_type=String(optional=True), prefix="-l", doc=InputDocumentation(doc="only include reads in library STR [null]")), ToolInput(tag="in_only_include_reads_number_int", input_type=Int(optional=True), prefix="-m", doc=InputDocumentation(doc="only include reads with number of CIGAR operations consuming\nquery sequence >= INT [0]")), ToolInput(tag="in_only_include_reads_flags_present", input_type=Int(optional=True), prefix="-f", doc=InputDocumentation(doc="only include reads with all  of the FLAGs in INT present [0]")), ToolInput(tag="in_only_include_reads_none_present", input_type=Int(optional=True), prefix="-F", doc=InputDocumentation(doc="only include reads with none of the FLAGS in INT present [0]")), ToolInput(tag="in_only_exclude_reads", input_type=Int(optional=True), prefix="-G", doc=InputDocumentation(doc="only EXCLUDE reads with all  of the FLAGs in INT present [0]")), ToolInput(tag="in_subsample_reads_given", input_type=Float(optional=True), prefix="-s", doc=InputDocumentation(doc="subsample reads (given INT.FRAC option value, 0.FRAC is the\nfraction of templates/read pairs to keep; INT part sets seed)")), ToolInput(tag="in_use_multiregion_iterator", input_type=Boolean(optional=True), prefix="-M", doc=InputDocumentation(doc="use the multi-region iterator (increases the speed, removes\nduplicates and outputs the reads as they are ordered in the file)")), ToolInput(tag="in_read_tag_strip", input_type=String(optional=True), prefix="-x", doc=InputDocumentation(doc="read tag to strip (repeatable) [null]")), ToolInput(tag="in_collapse_cigar_operation", input_type=Boolean(optional=True), prefix="-B", doc=InputDocumentation(doc="collapse the backward CIGAR operation")), ToolInput(tag="in_ignored_input_format", input_type=Boolean(optional=True), prefix="-S", doc=InputDocumentation(doc="ignored (input format is auto-detected)")), ToolInput(tag="in_input_fmt_option", input_type=File(optional=True), prefix="--input-fmt-option", doc=InputDocumentation(doc="[=VAL]\nSpecify a single input file format option in the form\nof OPTION or OPTION=VALUE")), ToolInput(tag="in_output_fmt", input_type=String(optional=True), prefix="--output-fmt", doc=InputDocumentation(doc="[,OPT[=VAL]]...\nSpecify output format (SAM, BAM, CRAM)")), ToolInput(tag="in_output_fmt_option", input_type=File(optional=True), prefix="--output-fmt-option", doc=InputDocumentation(doc="[=VAL]\nSpecify a single output file format option in the form\nof OPTION or OPTION=VALUE")), ToolInput(tag="in_reference", input_type=File(optional=True), prefix="--reference", doc=InputDocumentation(doc="Reference sequence FASTA FILE [null]")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of additional threads to use [0]\n")), ToolInput(tag="in_sam_tools", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_view", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_in_dot_bam", input_type=String(), position=2, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output_file_name", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_file_name", type_hint=File()), doc=OutputDocumentation(doc="output file name [stdout]")), ToolOutput(tag="out_output_reads_selected", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_reads_selected", type_hint=File()), doc=OutputDocumentation(doc="output reads not selected by filters to FILE [null]")), ToolOutput(tag="out_output_fmt_option", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_fmt_option", type_hint=File()), doc=OutputDocumentation(doc="[=VAL]\nSpecify a single output file format option in the form\nof OPTION or OPTION=VALUE"))], container="quay.io/biocontainers/flye:2.8.3--py38h1c8e9b9_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Flye_Samtools_View_V0_1_0().translate("wdl")

