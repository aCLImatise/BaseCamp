&id001 !Command
positional: []
named: []
command:
- mikado
parent:
subcommands:
- !Command
  positional: []
  named:
  - !Flag
    description: List of labels for which splitting will be disabled (eg long reads
      such as PacBio)
    synonyms:
    - --skip-split
    args: !RepeatFlagArg
      name: SKIP_SPLIT
    optional: true
  - !Flag
    description: 'Output will be in JSON (default: inferred by filename, with TOML
      as fallback).'
    synonyms:
    - -j
    - --json
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: 'Output will be in YAML (default: inferred by filename, with TOML
      as fallback).'
    synonyms:
    - -y
    - --yaml
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: 'Output will be in TOML (default: inferred by filename, with TOML
      as fallback).'
    synonyms:
    - --toml
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Destination directory for the output.
    synonyms:
    - -od
    - --out-dir
    args: !SimpleFlagArg
      name: OUT_DIR
    optional: true
  - !Flag
    description: Minimum cDNA length for transcripts.
    synonyms:
    - --minimum-cdna-length
    args: !SimpleFlagArg
      name: MINIMUM_CDNA_LENGTH
    optional: true
  - !Flag
    description: Maximum intron length for transcripts.
    synonyms:
    - --max-intron-length
    args: !SimpleFlagArg
      name: MAX_INTRON_LENGTH
    optional: true
  - !Flag
    description: 'Scoring file to use. Mikado provides the following: mammalian.yaml,
      plant.yaml, HISTORIC/worm.yaml, HISTORIC/athaliana_scoring.yaml, HISTORIC/celegans_scoring.yaml,
      HISTORIC/scerevisiae.yaml, HISTORIC/insects.yaml, HISTORIC/dmelanogaster_scoring.yaml,
      HISTORIC/human.yaml, HISTORIC/plants.yaml, HISTORIC/hsapiens_scoring.yaml'
    synonyms:
    - --scoring
    args: !SimpleFlagArg
      name: SCORING
    optional: true
  - !Flag
    description: File into which to copy the selected scoring file, for modification.
    synonyms:
    - --copy-scoring
    args: !SimpleFlagArg
      name: COPY_SCORING
    optional: true
  - !Flag
    description: 'INTRON_RANGE, --intron-range INTRON_RANGE INTRON_RANGE Range into
      which intron lengths should fall, as a couple of integers. Transcripts with
      intron lengths outside of this range will be penalised. Default: (60, 900)'
    synonyms:
    - -i
    args: !SimpleFlagArg
      name: INTRON_RANGE
    optional: true
  - !Flag
    description: Name of the optional subloci output. By default, this will not be
      produced.
    synonyms:
    - --subloci-out
    args: !SimpleFlagArg
      name: SUBLOCI_OUT
    optional: true
  - !Flag
    description: Name of the optional monoloci output. By default, this will not be
      produced.
    synonyms:
    - --monoloci-out
    args: !SimpleFlagArg
      name: MONOLOCI_OUT
    optional: true
  - !Flag
    description: Disable transcript padding. On by default.
    synonyms:
    - --no-pad
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: 'Flag. If switched on, Mikado will only keep loci where at least
      one of the transcripts     is marked as "reference". CAUTION: new and experimental.
      If no transcript has been marked as reference,     the output will be completely
      empty!'
    synonyms:
    - --only-reference-update
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: 'Exclude all retained intron alternative splicing events from the
      final output. Default: False. Retained intron events that do not dirsupt the
      CDS are kept by Mikado in the final output.'
    synonyms:
    - -eri
    - --exclude-retained-introns
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: 'Keep in the final output transcripts whose CDS is most probably
      disrupted by a retained intron event. Default: False. Mikado will try to detect
      these instances and exclude them from the final output.'
    synonyms:
    - -kdc
    - --keep-disrupted-cds
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: 'Flag. If switched on, Mikado will also check reference models against
      the general transcript requirements, and will also consider them as potential
      fragments. This is useful in the context of e.g. updating an *ab-initio* results
      with data from RNASeq, protein alignments, etc. '
    synonyms:
    - --check-references
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: 'Scheduler to use. Default: None - ie, either execute everything
      on the local machine or use DRMAA to submit and control jobs (recommended).'
    synonyms:
    - --scheduler
    args: !ChoiceFlagArg
      choices: !!set
        LSF:
        SLURM:
        PBS:
        local:
    optional: true
  - !Flag
    description: Configuration file for the executables.
    synonyms:
    - --exe
    args: !SimpleFlagArg
      name: EXE
    optional: true
  - !Flag
    description: Cluster configuration file to write to.
    synonyms:
    - -c
    - --cluster_config
    args: !SimpleFlagArg
      name: CLUSTER_CONFIG
    optional: true
  - !Flag
    description: ''
    synonyms:
    - --full
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: ''
    synonyms:
    - --seed
    args: !SimpleFlagArg
      name: SEED
    optional: true
  command:
  - mikado
  - configure
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: ''
    synonyms:
    - -h
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: Mikado configure [-h] [--full] [--seed SEED]\n              \
    \          [--minimum-cdna-length MINIMUM_CDNA_LENGTH]\n                     \
    \   [--max-intron-length MAX_INTRON_LENGTH]\n                        [--scoring\
    \ SCORING] [--copy-scoring COPY_SCORING]\n                        [-i INTRON_RANGE\
    \ INTRON_RANGE]\n                        [--subloci-out SUBLOCI_OUT]\n       \
    \                 [--monoloci-out MONOLOCI_OUT] [--no-pad]\n                 \
    \       [--only-reference-update] [-eri] [-kdc]\n                        [--check-references]\
    \ [--strand-specific]\n                        [--no-files | --gff GFF | --list\
    \ LIST]\n                        [--reference REFERENCE] [--junctions JUNCTIONS]\n\
    \                        [-bt BLAST_TARGETS]\n                        [--strand-specific-assemblies\
    \ STRAND_SPECIFIC_ASSEMBLIES]\n                        [--labels LABELS] [--external\
    \ EXTERNAL] [--daijin]\n                        [-bc BLAST_CHUNKS] [--use-blast]\
    \ [--use-transdecoder]\n                        [--mode {nosplit,stringent,lenient,permissive,split}\
    \ [{nosplit,stringent,lenient,permissive,split} ...]]\n                      \
    \  [--scheduler {local,SLURM,LSF,PBS}] [--exe EXE]\n                        [-c\
    \ CLUSTER_CONFIG] [-t THREADS]\n                        [--skip-split SKIP_SPLIT\
    \ [SKIP_SPLIT ...]]\n                        [-j | -y | --toml] [-od OUT_DIR]\n\
    \                        [out]\n\nConfiguration utility for Mikado\n\npositional\
    \ arguments:\n  out\n\noptional arguments:\n  -h, --help            show this\
    \ help message and exit\n  --full\n  --seed SEED           Random seed number.\n\
    \  --strand-specific     Boolean flag indicating whether all the assemblies are\
    \ strand-specific.\n  --no-files            Remove all files-specific options\
    \ from the printed configuration file.\n                                     \
    \          Invoking the \"--gff\" option will disable this flag.\n  --gff GFF\
    \             Input GFF/GTF file(s), separated by comma\n  --list LIST       \
    \    Tab-delimited file containing rows with the following format:\n         \
    \               <file>  <label> <strandedness> <score(optional)> <is_reference(optional)>\
    \ <always_keep(optional)\n                        strandedness, is_reference and\
    \ always_keep must be boolean values (True, False)\n                        score\
    \ must be a valid floating number.\n  --reference REFERENCE\n                \
    \        Fasta genomic reference.\n  --strand-specific-assemblies STRAND_SPECIFIC_ASSEMBLIES\n\
    \                        List of strand-specific assemblies among the inputs.\n\
    \  --labels LABELS       Labels to attach to the IDs of the transcripts of the\
    \ input files,\n                                separated by comma.\n  --external\
    \ EXTERNAL   External configuration file to overwrite/add values from.\n     \
    \                       Parameters specified on the command line will take precedence\
    \ over those present in the configuration file.\n  -t THREADS, --threads THREADS\n\
    \  --skip-split SKIP_SPLIT [SKIP_SPLIT ...]\n                        List of labels\
    \ for which splitting will be disabled (eg long reads such as PacBio)\n  -j, --json\
    \            Output will be in JSON (default: inferred by filename, with TOML\
    \ as fallback).\n  -y, --yaml            Output will be in YAML (default: inferred\
    \ by filename, with TOML as fallback).\n  --toml                Output will be\
    \ in TOML (default: inferred by filename, with TOML as fallback).\n  -od OUT_DIR,\
    \ --out-dir OUT_DIR\n                        Destination directory for the output.\n\
    \nOptions related to the prepare stage.:\n  --minimum-cdna-length MINIMUM_CDNA_LENGTH\n\
    \                        Minimum cDNA length for transcripts.\n  --max-intron-length\
    \ MAX_INTRON_LENGTH\n                        Maximum intron length for transcripts.\n\
    \nOptions related to the scoring system:\n  --scoring SCORING     Scoring file\
    \ to use. Mikado provides the following:\n                        mammalian.yaml,\n\
    \                        plant.yaml,\n                        HISTORIC/worm.yaml,\n\
    \                        HISTORIC/athaliana_scoring.yaml,\n                  \
    \      HISTORIC/celegans_scoring.yaml,\n                        HISTORIC/scerevisiae.yaml,\n\
    \                        HISTORIC/insects.yaml,\n                        HISTORIC/dmelanogaster_scoring.yaml,\n\
    \                        HISTORIC/human.yaml,\n                        HISTORIC/plants.yaml,\n\
    \                        HISTORIC/hsapiens_scoring.yaml\n  --copy-scoring COPY_SCORING\n\
    \                        File into which to copy the selected scoring file, for\
    \ modification.\n\nOptions related to the picking:\n  -i INTRON_RANGE INTRON_RANGE,\
    \ --intron-range INTRON_RANGE INTRON_RANGE\n                        Range into\
    \ which intron lengths should fall, as a couple of integers.\n               \
    \                                      Transcripts with intron lengths outside\
    \ of this range will be penalised.\n                                         \
    \            Default: (60, 900)\n  --subloci-out SUBLOCI_OUT\n               \
    \         Name of the optional subloci output. By default, this will not be produced.\n\
    \  --monoloci-out MONOLOCI_OUT\n                        Name of the optional monoloci\
    \ output. By default, this will not be produced.\n  --no-pad              Disable\
    \ transcript padding. On by default.\n  --only-reference-update\n            \
    \            Flag. If switched on, Mikado will only keep loci where at least one\
    \ of the transcripts     is marked as \"reference\". CAUTION: new and experimental.\
    \ If no transcript has been marked as reference,     the output will be completely\
    \ empty!\n  -eri, --exclude-retained-introns\n                        Exclude\
    \ all retained intron alternative splicing events from the final output. Default:\
    \ False. Retained intron events that do not dirsupt the CDS are kept by Mikado\
    \ in the final output.\n  -kdc, --keep-disrupted-cds\n                       \
    \ Keep in the final output transcripts whose CDS is most probably disrupted by\
    \ a retained intron event. Default: False. Mikado will try to detect these instances\
    \ and exclude them from the final output.\n  --check-references    Flag. If switched\
    \ on, Mikado will also check reference models against the general\n          \
    \                  transcript requirements, and will also consider them as potential\
    \ fragments. This is useful in the context of e.g.\n                         \
    \   updating an *ab-initio* results with data from RNASeq, protein alignments,\
    \ etc. \n                            \n\nOptions related to the serialisation\
    \ step:\n  --junctions JUNCTIONS\n  -bt BLAST_TARGETS, --blast_targets BLAST_TARGETS\n\
    \nOptions related to configuring a Daijin run.:\n  --daijin              Flag.\
    \ If set, the configuration file will be also valid for Daijin.\n  -bc BLAST_CHUNKS,\
    \ --blast-chunks BLAST_CHUNKS\n                        Number of parallel DIAMOND/BLAST\
    \ jobs to run. Default: 10.\n  --use-blast           Flag. If switched on, Mikado\
    \ will use BLAST instead of DIAMOND.\n  --use-transdecoder    Flag. If switched\
    \ on, Mikado will use TransDecoder instead of Prodigal.\n  --mode {nosplit,stringent,lenient,permissive,split}\
    \ [{nosplit,stringent,lenient,permissive,split} ...]\n                       \
    \ Mode(s) in which Mikado will treat transcripts with multiple ORFs.\n       \
    \                 - nosplit: keep the transcripts whole.\n                   \
    \     - stringent: split multi-orf transcripts if two consecutive ORFs have both\
    \ BLAST hits\n                                     and none of those hits is against\
    \ the same target.\n                        - lenient: split multi-orf transcripts\
    \ as in stringent, and additionally, also when\n                             \
    \      either of the ORFs lacks a BLAST hit (but not both).\n                \
    \        - permissive: like lenient, but also split when both ORFs lack BLAST\
    \ hits\n                        - split: split multi-orf transcripts regardless\
    \ of what BLAST data is available.\n                        If multiple modes\
    \ are specified, Mikado will create a Daijin-compatible configuration file.\n\
    \  --scheduler {local,SLURM,LSF,PBS}\n                        Scheduler to use.\
    \ Default: None - ie, either execute everything on the local machine or use DRMAA\
    \ to submit and control jobs (recommended).\n  --exe EXE             Configuration\
    \ file for the executables.\n  -c CLUSTER_CONFIG, --cluster_config CLUSTER_CONFIG\n\
    \                        Cluster configuration file to write to.\n"
  generated_using: &id002
  - --help
- !Command
  positional:
  - !Positional
    description: Input GFF/GTF file(s).
    position: 0
    name: gff
    optional: false
  named:
  - !Flag
    description: Multiprocessing start method.
    synonyms:
    - --start-method
    args: !ChoiceFlagArg
      choices: !!set
        forkserver:
        spawn:
        fork:
    optional: true
  - !Flag
    description: Flag. If set, monoexonic transcripts will be left on their strand
      rather than being moved to the unknown strand.
    synonyms:
    - -s
    - --strand-specific
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Comma-delimited list of strand specific assemblies.
    synonyms:
    - -sa
    - --strand-specific-assemblies
    args: !SimpleFlagArg
      name: STRAND_SPECIFIC_ASSEMBLIES
    optional: true
  - !Flag
    description: 'Tab-delimited file containing rows with the following format: <file>
      <label> <strandedness> <score(optional)> <is_reference(optional)> <always_keep(optional)
      strandedness, is_reference and always_keep must be boolean values (True, False)
      score must be a valid floating number.'
    synonyms:
    - --list
    args: !SimpleFlagArg
      name: LIST
    optional: true
  - !Flag
    description: Log file. Optional.
    synonyms:
    - -l
    - --log
    args: !SimpleFlagArg
      name: LOG
    optional: true
  - !Flag
    description: Flag. If set, transcripts with only non-canonical splices will be
      output as well.
    synonyms:
    - --lenient
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: 'Minimum length for transcripts. Default: 200 bps.'
    synonyms:
    - -m
    - --minimum-cdna-length
    args: !SimpleFlagArg
      name: MINIMUM_CDNA_LENGTH
    optional: true
  - !Flag
    description: 'Maximum intron length for transcripts. Default: 1,000,000 bps.'
    synonyms:
    - -MI
    - --max-intron-size
    args: !SimpleFlagArg
      name: MAX_INTRON_LENGTH
    optional: true
  - !Flag
    description: Number of processors to use (default None)
    synonyms:
    - -p
    - --procs
    args: !SimpleFlagArg
      name: PROCS
    optional: true
  - !Flag
    description: Boolean flag. If set, ignores any CDS/UTR segment.
    synonyms:
    - -scds
    - --strip_cds
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Labels to attach to the IDs of the transcripts of the input files,
      separated by comma.
    synonyms:
    - --labels
    args: !SimpleFlagArg
      name: LABELS
    optional: true
  - !Flag
    description: Disable multi-threading. Useful for debugging.
    synonyms:
    - --single
    - --single-thread
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: 'Output directory. Default: current working directory'
    synonyms:
    - -od
    - --output-dir
    args: !SimpleFlagArg
      name: OUTPUT_DIR
    optional: true
  - !Flag
    description: 'Output file. Default: mikado_prepared.gtf.'
    synonyms:
    - -o
    - --out
    args: !SimpleFlagArg
      name: OUT
    optional: true
  - !Flag
    description: 'Output file. Default: mikado_prepared.fasta.'
    synonyms:
    - -of
    - --out_fasta
    args: !SimpleFlagArg
      name: OUT_FASTA
    optional: true
  - !Flag
    description: Configuration file.
    synonyms:
    - --json-conf
    args: !SimpleFlagArg
      name: JSON_CONF
    optional: true
  - !Flag
    description: Boolean flag. If invoked, Mikado prepare will retain redundant models.
    synonyms:
    - -k
    - --keep-redundant
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Random seed number.
    synonyms:
    - --seed
    args: !SimpleFlagArg
      name: SEED
    optional: true
  - !Flag
    description: ''
    synonyms:
    - --fasta
    args: !SimpleFlagArg
      name: FASTA
    optional: true
  command:
  - mikado
  - prepare
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: ''
    synonyms:
    - -h
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: Mikado prepare [-h] [--fasta FASTA] [-v | -q]\n             \
    \         [--start-method {fork,spawn,forkserver}]\n                      [-s\
    \ | -sa STRAND_SPECIFIC_ASSEMBLIES] [--list LIST]\n                      [-l LOG]\
    \ [--lenient] [-m MINIMUM_CDNA_LENGTH]\n                      [-MI MAX_INTRON_LENGTH]\
    \ [-p PROCS] [-scds]\n                      [--labels LABELS] [--single] [-od\
    \ OUTPUT_DIR] [-o OUT]\n                      [-of OUT_FASTA] [--json-conf JSON_CONF]\
    \ [-k]\n                      [--seed SEED]\n                      [gff [gff ...]]\n\
    \npositional arguments:\n  gff                   Input GFF/GTF file(s).\n\noptional\
    \ arguments:\n  -h, --help            show this help message and exit\n  --fasta\
    \ FASTA         Genome FASTA file. Required.\n  -v, --verbose\n  -q, --quiet\n\
    \  --start-method {fork,spawn,forkserver}\n                        Multiprocessing\
    \ start method.\n  -s, --strand-specific\n                        Flag. If set,\
    \ monoexonic transcripts will be left on\n                        their strand\
    \ rather than being moved to the unknown\n                        strand.\n  -sa\
    \ STRAND_SPECIFIC_ASSEMBLIES, --strand-specific-assemblies STRAND_SPECIFIC_ASSEMBLIES\n\
    \                        Comma-delimited list of strand specific assemblies.\n\
    \  --list LIST           Tab-delimited file containing rows with the following\n\
    \                        format: <file> <label> <strandedness>\n             \
    \           <score(optional)> <is_reference(optional)>\n                     \
    \   <always_keep(optional) strandedness, is_reference and\n                  \
    \      always_keep must be boolean values (True, False) score\n              \
    \          must be a valid floating number.\n  -l LOG, --log LOG     Log file.\
    \ Optional.\n  --lenient             Flag. If set, transcripts with only non-canonical\n\
    \                        splices will be output as well.\n  -m MINIMUM_CDNA_LENGTH,\
    \ --minimum-cdna-length MINIMUM_CDNA_LENGTH\n                        Minimum length\
    \ for transcripts. Default: 200 bps.\n  -MI MAX_INTRON_LENGTH, --max-intron-size\
    \ MAX_INTRON_LENGTH\n                        Maximum intron length for transcripts.\
    \ Default:\n                        1,000,000 bps.\n  -p PROCS, --procs PROCS\n\
    \                        Number of processors to use (default None)\n  -scds,\
    \ --strip_cds    Boolean flag. If set, ignores any CDS/UTR segment.\n  --labels\
    \ LABELS       Labels to attach to the IDs of the transcripts of the\n       \
    \                 input files, separated by comma.\n  --single, --single-thread\n\
    \                        Disable multi-threading. Useful for debugging.\n  -od\
    \ OUTPUT_DIR, --output-dir OUTPUT_DIR\n                        Output directory.\
    \ Default: current working directory\n  -o OUT, --out OUT     Output file. Default:\
    \ mikado_prepared.gtf.\n  -of OUT_FASTA, --out_fasta OUT_FASTA\n             \
    \           Output file. Default: mikado_prepared.fasta.\n  --json-conf JSON_CONF\n\
    \                        Configuration file.\n  -k, --keep-redundant  Boolean\
    \ flag. If invoked, Mikado prepare will retain\n                        redundant\
    \ models.\n  --seed SEED           Random seed number.\n"
  generated_using: *id002
- &id003 !Command
  positional: []
  named: []
  command:
  - mikado
  - serialise
  parent: *id001
  subcommands:
  - !Command
    positional:
    - !Positional
      description: 'Optional output database. Default: derived from json_conf'
      position: 0
      name: db
      optional: false
    named:
    - !Flag
      description: '[LOG], --log [LOG] Optional log file. Default: stderr'
      synonyms:
      - -l
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Log level. Default: derived from the configuration; if absent,
        INFO'
      synonyms:
      - -lv
      - --log-level
      args: !ChoiceFlagArg
        choices: !!set
          INFO:
          WARN:
          ERROR:
          DEBUG:
      optional: true
    - !Flag
      description: Random seed number.
      synonyms:
      - --seed
      args: !SimpleFlagArg
        name: SEED
      optional: true
    - !Flag
      description: ''
      synonyms:
      - --start-method
      args: !ChoiceFlagArg
        choices: !!set
          forkserver:
          spawn:
          fork:
      optional: true
    command:
    - mikado
    - serialise
    - Mikado
    parent: *id003
    subcommands: []
    help_flag: !Flag
      description: ''
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: Mikado serialise [-h] [--start-method {fork,spawn,forkserver}]\n\
      \                        [--orfs ORFS] [--transcripts TRANSCRIPTS]\n       \
      \                 [-mr MAX_REGRESSION] [--codon-table CODON_TABLE]\n       \
      \                 [-nsa] [--max-target-seqs MAX_TARGET_SEQS]\n             \
      \           [-bt BLAST_TARGETS] [--xml XML] [-p PROCS]\n                   \
      \     [--single-thread] [--genome_fai GENOME_FAI]\n                        [--junctions\
      \ JUNCTIONS]\n                        [--external-scores EXTERNAL_SCORES] [-mo\
      \ MAX_OBJECTS]\n                        [-f] [--json-conf JSON_CONF] [-l [LOG]]\n\
      \                        [-od OUTPUT_DIR] [-lv {DEBUG,INFO,WARN,ERROR}]\n  \
      \                      [--seed SEED]\n                        [db]\n\noptional\
      \ arguments:\n  -h, --help            show this help message and exit\n  --start-method\
      \ {fork,spawn,forkserver}\n                        Multiprocessing start method.\n\
      \  -od OUTPUT_DIR, --output-dir OUTPUT_DIR\n                        Output directory.\
      \ Default: current working directory\n\n  --orfs ORFS           ORF BED file(s),\
      \ separated by commas\n  --transcripts TRANSCRIPTS\n                       \
      \ Transcript FASTA file(s) used for ORF calling and\n                      \
      \  BLAST queries, separated by commas. If multiple files\n                 \
      \       are given, they must be in the same order of the ORF\n             \
      \           files. E.g. valid command lines are:\n                        --transcript_fasta\
      \ all_seqs1.fasta --orfs all_orfs.bed\n                        --transcript_fasta\
      \ seq1.fasta,seq2.fasta --orfs\n                        orfs1.bed,orf2.bed --transcript_fasta\
      \ all_seqs.fasta\n                        --orfs orfs1.bed,orf2.bed These are\
      \ invalid instead: #\n                        Inverted order --transcript_fasta\n\
      \                        seq1.fasta,seq2.fasta --orfs orfs2.bed,orf1.bed #Two\n\
      \                        transcript files, one ORF file --transcript_fasta\n\
      \                        seq1.fasta,seq2.fasta --orfs all_orfs.bed\n  -mr MAX_REGRESSION,\
      \ --max-regression MAX_REGRESSION\n                        \"Amount of sequence\
      \ in the ORF (in %) to backtrack in\n                        order to find a\
      \ valid START codon, if one is absent.\n                        Default: None\n\
      \  --codon-table CODON_TABLE\n                        Codon table to use. Default:\
      \ 0 (ie Standard, NCBI #1,\n                        but only ATG is considered\
      \ a valid start codon.\n  -nsa, --no-start-adjustment\n                    \
      \    Disable the start adjustment algorithm. Useful when\n                 \
      \       using e.g. TransDecoder vs 5+.\n\n  --max-target-seqs MAX_TARGET_SEQS\n\
      \                        Maximum number of target sequences.\n  -bt BLAST_TARGETS,\
      \ --blast-targets BLAST_TARGETS, --blast_targets BLAST_TARGETS\n           \
      \             Target sequences\n  --xml XML, --tsv XML  BLAST file(s) to parse.\
      \ They can be provided in three\n                        ways: - a comma-separated\
      \ list - as a base folder -\n                        using bash-like name expansion\
      \ (*,?, etc.). In this\n                        case, you have to enclose the\
      \ filename pattern in\n                        double quotes. Multiple folders/file\
      \ patterns can be\n                        given, separated by a comma. BLAST\
      \ files must be\n                        either of two formats: - BLAST XML\
      \ - BLAST tabular\n                        format, with the following **custom**\
      \ fields: qseqid\n                        sseqid pident length mismatch gapopen\
      \ qstart qend\n                        sstart send evalue bitscore ppos btop\n\
      \  -p PROCS, --procs PROCS\n                        Number of threads to use\
      \ for analysing the BLAST\n                        files. This number should\
      \ not be higher than the total\n                        number of XML files.\n\
      \  --single-thread       Force serialise to run with a single thread,\n    \
      \                    irrespective of other configuration options.\n\n  --genome_fai\
      \ GENOME_FAI\n  --junctions JUNCTIONS\n\n  --external-scores EXTERNAL_SCORES\n\
      \                        Tabular file containing external scores for the\n \
      \                       transcripts. Each column should have a distinct name,\n\
      \                        and transcripts have to be listed on the first column.\n\
      \n  -mo MAX_OBJECTS, --max-objects MAX_OBJECTS\n                        Maximum\
      \ number of objects to cache in memory before\n                        committing\
      \ to the database. Default: 100,000 i.e.\n                        approximately\
      \ 450MB RAM usage for Drosophila.\n  -f, --force           Flag. If set, an\
      \ existing databse will be deleted\n                        (sqlite) or dropped\
      \ (MySQL/PostGreSQL) before\n                        beginning the serialisation.\n\
      \  --json-conf JSON_CONF\n  -l [LOG], --log [LOG]\n                        Optional\
      \ log file. Default: stderr\n  -lv {DEBUG,INFO,WARN,ERROR}, --log-level {DEBUG,INFO,WARN,ERROR}\n\
      \                        Log level. Default: derived from the configuration;\
      \ if\n                        absent, INFO\n  db                    Optional\
      \ output database. Default: derived from\n                        json_conf\n\
      \  --seed SEED           Random seed number.\n"
    generated_using: *id002
  help_flag: !Flag
    description: ''
    synonyms:
    - -h
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag: !Flag
    description: ''
    synonyms:
    - --version
    args: !EmptyFlagArg {}
    optional: true
  help_text: "usage: Mikado [-h] [--version]\n              {configure,prepare,serialise,pick,compare,util}\
    \ ...\nMikado: error: unrecognized arguments: --usage\n"
  generated_using:
  - --usage
- !Command
  positional: []
  named:
  - !Flag
    description: ''
    synonyms:
    - --fasta
    args: !SimpleFlagArg
      name: FASTA
    optional: true
  command:
  - mikado
  - pick
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: ''
    synonyms:
    - -h
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: Mikado pick [-h] [--fasta FASTA]\n                   [--start-method\
    \ {fork,spawn,forkserver}] [--shm] [-p PROCS]\n                   --json-conf\
    \ JSON_CONF [--scoring-file SCORING_FILE]\n                   [-i INTRON_RANGE\
    \ INTRON_RANGE] [--no-pad | --pad]\n                   [--pad-max-splices PAD_MAX_SPLICES]\n\
    \                   [--pad-max-distance PAD_MAX_DISTANCE] [-r REGIONS]\n     \
    \              [--subloci-out SUBLOCI_OUT] [--monoloci-out MONOLOCI_OUT]\n   \
    \                [--loci-out LOCI_OUT] [--prefix PREFIX] [--source SOURCE]\n \
    \                  [--no_cds] [--flank FLANK]\n                   [--max-intron-length\
    \ MAX_INTRON_LENGTH] [--no-purge]\n                   [--cds-only] [--only-reference-update]\
    \ [-eri] [-kdc]\n                   [--check-references] [-db SQLITE_DB] [-od\
    \ OUTPUT_DIR]\n                   [--single] [-l LOG] [-v | -nv]\n           \
    \        [-lv {DEBUG,INFO,WARNING,ERROR,CRITICAL}]\n                   [--mode\
    \ {nosplit,stringent,lenient,permissive,split}]\n                   [--seed SEED]\n\
    \                   [gff]\nMikado pick: error: the following arguments are required:\
    \ --json-conf\n"
  generated_using: &id005 []
- !Command
  positional: []
  named:
  - !Flag
    description: Reference annotation file. By default, an index will be crated and
      saved with the suffix ".midx".
    synonyms:
    - -r
    - --reference
    args: !SimpleFlagArg
      name: REFERENCE
    optional: true
  - !Flag
    description: Prediction annotation file.
    synonyms:
    - -p
    - --prediction
    args: !SimpleFlagArg
      name: PREDICTION
    optional: true
  - !Flag
    description: Flag. If set, the reference will be compared with itself. Useful
      for understanding how the reference transcripts interact with each other. If
      this option is selected, the stats file will not be produced.
    synonyms:
    - --self
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Flag. If set, for each gene with more than one transcript isoform
      each will be compared to the others. Useful for understanding the structural
      relationships between the transcripts in each gene.
    synonyms:
    - --internal
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Flag. If set, compare will stop after having generated the GFF index
      for the reference.
    synonyms:
    - --index
    args: !EmptyFlagArg {}
    optional: true
  command:
  - mikado
  - compare
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: ''
    synonyms:
    - -h
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: Mikado compare [-h] -r REFERENCE\n                      (-p PREDICTION\
    \ | --self | --internal | --index)\n                      [--distance DISTANCE]\
    \ [-pc] [-o OUT] [-fm FUZZYMATCH]\n                      [--lenient] [-nF] [-eu]\
    \ [-n] [-erm] [-upa] [-l LOG] [-v]\n                      [-z] [--processes PROCESSES]\n\
    \noptional arguments:\n  -h, --help            show this help message and exit\n\
    \  --distance DISTANCE   Maximum distance for a transcript to be considered a\n\
    \                        polymerase run-on. Default: 2000\n  -pc, --protein-coding\n\
    \                        Flag. If set, only transcripts with a CDS (both in\n\
    \                        reference and prediction) will be considered.\n  -o OUT,\
    \ --out OUT     Prefix for the output files. Default: mikado_compare\n  -fm FUZZYMATCH,\
    \ --fuzzy-intron-match FUZZYMATCH\n                        This parameter controls\
    \ whether an intron should be\n                        considered as \"matched\"\
    \ even if its splices are within\n                        N bases from the annotated\
    \ splice junctions. By\n                        default this is set to 0 (ie only\
    \ proper matches\n                        count).\n  --lenient             If\
    \ set, exonic statistics will be calculated leniently\n                      \
    \  in the TMAP as well - ie they will consider an exon as\n                  \
    \      match even if only the internal junction has been\n                   \
    \     recovered.\n  -nF, --do-not-report-fusions\n                        Flag.\
    \ If invoked, Mikado compare will not report\n                        fusions\
    \ in the input. Useful when the reference\n                        transcripts\
    \ have not been clustered properly into\n                        genes (e.g. a\
    \ Mikado prepare run).\n  -eu, --exclude-utr    Flag. If set, reference and prediction\
    \ transcripts\n                        will be stripped of their UTRs (if they\
    \ are coding).\n  -n, --no-index, --no-save-index\n                        Unless\
    \ this flag is set, compare will save an index of\n                        the\
    \ reference to quicken multiple calls.\n  -erm, --extended-refmap\n          \
    \              Flag. If set, the RefMap will also contain recall and\n       \
    \                 precision statistics - not just the F1.\n  -upa, --use-prediction-alias\n\
    \                        Flag. If set, Mikado Compare will use the alias -\n \
    \                       rather than the transcript ID - to report the results\n\
    \                        for prediction transcripts in the TMAP and REFMAP\n \
    \                       files.\n  -l LOG, --log LOG\n  -v, --verbose\n  -z, --gzip\
    \            Flag. If set, TMAP and REFMAP files will be GZipped.\n  --processes\
    \ PROCESSES\n\nPrediction and annotation files.:\n  -r REFERENCE, --reference\
    \ REFERENCE\n                        Reference annotation file. By default, an\
    \ index will\n                        be crated and saved with the suffix \".midx\"\
    .\n  -p PREDICTION, --prediction PREDICTION\n                        Prediction\
    \ annotation file.\n  --self                Flag. If set, the reference will be\
    \ compared with\n                        itself. Useful for understanding how\
    \ the reference\n                        transcripts interact with each other.\
    \ If this option\n                        is selected, the stats file will not\
    \ be produced.\n  --internal            Flag. If set, for each gene with more\
    \ than one\n                        transcript isoform each will be compared to\
    \ the\n                        others. Useful for understanding the structural\n\
    \                        relationships between the transcripts in each gene.\n\
    \  --index               Flag. If set, compare will stop after having generated\n\
    \                        the GFF index for the reference.\n"
  generated_using: *id002
- &id004 !Command
  positional: []
  named: []
  command:
  - mikado
  - util
  parent: *id001
  subcommands:
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: Mikado
      optional: false
    - !Positional
      description: ''
      position: 1
      name: util
      optional: false
    named: []
    command:
    - mikado
    - util
    - util
    parent: *id004
    subcommands: []
    help_flag: !Flag
      description: ''
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: Mikado util [-h]\n                   {awk_gtf,class_codes,convert,grep,metrics,stats,trim}\
      \ ...\nMikado util: error: invalid choice: 'util' (choose from 'awk_gtf', 'class_codes',\
      \ 'convert', 'grep', 'metrics', 'stats', 'trim')\n"
    generated_using: *id002
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: util [-h] {awk_gtf,class_codes,convert,grep,metrics,stats,trim}\
    \ ...\n\nCollection of utilities for managing GTF/GFF files.\n\npositional arguments:\n\
    \  {awk_gtf,class_codes,convert,grep,metrics,stats,trim}\n\noptional arguments:\n\
    \  -h, --help            show this help message and exit\n"
  generated_using: *id005
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: Print Mikado current version and exit.
  synonyms:
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "usage: Mikado [-h] [--version]\n              {configure,prepare,serialise,pick,compare,util}\
  \ ...\n\nMikado is a program to analyse RNA-Seq data and determine the best transcript\n\
  for each locus in accordance to user-specified criteria.\n\noptional arguments:\n\
  \  -h, --help            show this help message and exit\n  --version          \
  \   Print Mikado current version and exit.\n\nComponents:\n  {configure,prepare,serialise,pick,compare,util}\n\
  \                        These are the various components of Mikado:\n    configure\
  \           This utility guides the user through the process of\n              \
  \          creating a configuration file for Mikado.\n    prepare             Mikado\
  \ prepare analyses an input GTF file and prepares\n                        it for\
  \ the picking analysis by sorting its transcripts\n                        and performing\
  \ some simple consistency checks.\n    serialise           Mikado serialise creates\
  \ the database used by the pick\n                        program. It handles Junction\
  \ and ORF BED12 files as\n                        well as BLAST XML results.\n \
  \   pick                Mikado pick analyses a sorted GTF/GFF files in order\n \
  \                       to identify its loci and choose the best transcripts\n \
  \                       according to user-specified criteria. It is dependent\n\
  \                        on files produced by the \"prepare\" and \"serialise\"\n\
  \                        components.\n    compare             Mikado compare produces\
  \ a detailed comparison of\n                        reference and prediction files.\
  \ It has been directly\n                        inspired by Cufflinks's cuffcompare\
  \ and ParsEval.\n    util                Miscellaneous utilities\n"
generated_using: *id002
