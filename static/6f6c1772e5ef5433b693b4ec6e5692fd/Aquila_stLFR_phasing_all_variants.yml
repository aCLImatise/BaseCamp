!Command
command:
- Aquila_stLFR_phasing_all_variants
positional:
- !Positional
  optional: false
  position: 0
  name: xzhou15@cs.stanford.edu
  description: 'optional arguments:'
named:
- !Flag
  optional: true
  synonyms:
  - --assembly_vcf
  - -v_assembled
  description: vcf file
  args: !SimpleFlagArg
    name: ASSEMBLY_VCF
- !Flag
  optional: true
  synonyms:
  - --vcf_file
  - -v
  description: vcf file
  args: !SimpleFlagArg
    name: VCF_FILE
- !Flag
  optional: true
  synonyms:
  - --chr_start
  - -start
  description: chromosome start from
  args: !SimpleFlagArg
    name: CHR_START
- !Flag
  optional: true
  synonyms:
  - --chr_end
  - -end
  description: chromosome end by
  args: !SimpleFlagArg
    name: CHR_END
- !Flag
  optional: true
  synonyms:
  - --out_dir
  - -o
  description: Directory to store output
  args: !SimpleFlagArg
    name: OUT_DIR
- !Flag
  optional: true
  synonyms:
  - --assembly_dir
  - -a_dir
  description: folder to store assembled results
  args: !SimpleFlagArg
    name: ASSEMBLY_DIR
- !Flag
  optional: true
  synonyms:
  - --block_len_use
  - -bl
  description: "phase block len threshold\n"
  args: !SimpleFlagArg
    name: BLOCK_LEN_USE
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "usage: use \"python3 Aquila_stLFR_phasing_all_variants --help\" for more\
  \ information\n\nAuthor: xzhou15@cs.stanford.edu\n\noptional arguments:\n  -h, --help\
  \            show this help message and exit\n  --assembly_vcf ASSEMBLY_VCF, -v_assembled\
  \ ASSEMBLY_VCF\n                        vcf file\n  --vcf_file VCF_FILE, -v VCF_FILE\n\
  \                        vcf file\n  --chr_start CHR_START, -start CHR_START\n \
  \                       chromosome start from\n  --chr_end CHR_END, -end CHR_END\n\
  \                        chromosome end by\n  --out_dir OUT_DIR, -o OUT_DIR\n  \
  \                      Directory to store output\n  --assembly_dir ASSEMBLY_DIR,\
  \ -a_dir ASSEMBLY_DIR\n                        folder to store assembled results\n\
  \  --block_len_use BLOCK_LEN_USE, -bl BLOCK_LEN_USE\n                        phase\
  \ block len threshold\n"
generated_using:
- --help
docker_image:
