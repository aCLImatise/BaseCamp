from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, File, Float

Bs_Call_V0_1_0 = CommandToolBuilder(tool="bs_call", base_command=["bs_call"], inputs=[ToolInput(tag="in_no_split", input_type=Boolean(optional=True), prefix="--no-split", doc=InputDocumentation(doc="Do not split output on contig")), ToolInput(tag="in_haploid", input_type=Boolean(optional=True), prefix="--haploid", doc=InputDocumentation(doc="Assume genome is haploid")), ToolInput(tag="in_keep_duplicates", input_type=Boolean(optional=True), prefix="--keep-duplicates", doc=InputDocumentation(doc="Don't merge duplicate reads")), ToolInput(tag="in_ignore_duplicates", input_type=Boolean(optional=True), prefix="--ignore-duplicates", doc=InputDocumentation(doc="Ignore duplicate flag from SAM/BAM files")), ToolInput(tag="in_keep_unmatched", input_type=Boolean(optional=True), prefix="--keep-unmatched", doc=InputDocumentation(doc="Don't discard reads that don't form proper pairs")), ToolInput(tag="in_extra_stats", input_type=Boolean(optional=True), prefix="--extra-stats", doc=InputDocumentation(doc="Generate extra stats files")), ToolInput(tag="in_right_trim", input_type=Boolean(optional=True), prefix="--right-trim", doc=InputDocumentation(doc="Bases to trim from right of read pair")), ToolInput(tag="in_left_trim", input_type=Boolean(optional=True), prefix="--left-trim", doc=InputDocumentation(doc="Bases to trim from left of read pair")), ToolInput(tag="in_blank_trim", input_type=Boolean(optional=True), prefix="--blank-trim", doc=InputDocumentation(doc="Don't use trimmed bases for genotype estimation")), ToolInput(tag="in_mapq_threshold", input_type=Int(optional=True), prefix="--mapq-threshold", doc=InputDocumentation(doc="Set MAPQ threshold for selecting reads (default 20)")), ToolInput(tag="in_bq_threshold", input_type=Int(optional=True), prefix="--bq-threshold", doc=InputDocumentation(doc="Set base quality threshold for calling (default 20)")), ToolInput(tag="in_max_template_length", input_type=Int(optional=True), prefix="--max-template-length", doc=InputDocumentation(doc="Set maximum template length for a pair (default 1000)")), ToolInput(tag="in_realign_tolerance", input_type=Int(optional=True), prefix="--realign-tolerance", doc=InputDocumentation(doc="Tolerance for realignment positions (default 8)")), ToolInput(tag="in_no_compress", input_type=File(optional=True), prefix="--no-compress", doc=InputDocumentation(doc="SAMPLE")), ToolInput(tag="in_contig_bed", input_type=File(optional=True), prefix="--contig-bed", doc=InputDocumentation(doc="(BED)")), ToolInput(tag="in_dbsnp", input_type=File(optional=True), prefix="--dbsnp", doc=InputDocumentation(doc="(dbSNP processed file)")), ToolInput(tag="in_conversion", input_type=Float(optional=True), prefix="--conversion", doc=InputDocumentation(doc=",<float> Set under and over conversion rates (default 0.01,0.05)")), ToolInput(tag="in_reference_bias", input_type=Float(optional=True), prefix="--reference-bias", doc=InputDocumentation(doc="Set bias to reference homozygote (default 2)"))], outputs=[ToolOutput(tag="out_no_compress", output_type=File(optional=True), selector=InputSelector(input_to_select="in_no_compress", type_hint=File()), doc=OutputDocumentation(doc="SAMPLE"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bs_Call_V0_1_0().translate("wdl", allow_empty_container=True)

