!Command
command:
- filter-stoptags.py
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - --info
  description: print citation information
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -k
  - --ksize
  description: 'k-mer size (default: 32)'
  args: !SimpleFlagArg
    name: KSIZE
- !Flag
  optional: true
  synonyms:
  - -f
  - --force
  description: 'Overwrite output file if it exists (default: False)'
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - --version
  description: show program's version number and exit
  args: !EmptyFlagArg {}
help_text: "usage: filter-stoptags.py [--version] [--info] [-h] [-k KSIZE] [-f]\n\
  \                          input_stoptags_filename input_sequence_filename\n   \
  \                       [input_sequence_filename ...]\n\nTrim sequences at stoptags.\n\
  \npositional arguments:\n  input_stoptags_filename\n  input_sequence_filename\n\n\
  optional arguments:\n  --version             show program's version number and exit\n\
  \  --info                print citation information\n  -h, --help            show\
  \ this help message and exit\n  -k KSIZE, --ksize KSIZE\n                      \
  \  k-mer size (default: 32)\n  -f, --force           Overwrite output file if it\
  \ exists (default: False)\n\nLoad stoptags in from the given `.stoptags` file and\
  \ use them to trim or remove\nthe sequences in `<file1-N>`.  Trimmed sequences will\
  \ be placed in\n`<fileN>.stopfilt`.\n"
generated_using:
- --help
docker_image:
