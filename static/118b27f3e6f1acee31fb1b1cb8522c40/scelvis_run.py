from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, File, Directory, Int

Scelvis_Run_V0_1_0 = CommandToolBuilder(tool="scelvis_run", base_command=["scelvis", "run"], inputs=[ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="Enable debug mode")), ToolInput(tag="in_host", input_type=String(optional=True), prefix="--host", doc=InputDocumentation(doc="Server host")), ToolInput(tag="in_port", input_type=String(optional=True), prefix="--port", doc=InputDocumentation(doc="Server port")), ToolInput(tag="in_fake_data", input_type=Boolean(optional=True), prefix="--fake-data", doc=InputDocumentation(doc="Enable display of fake data set (for demo purposes).")), ToolInput(tag="in_data_source", input_type=File(optional=True), prefix="--data-source", doc=InputDocumentation(doc="Path to data source(s)")), ToolInput(tag="in_public_url_prefix", input_type=String(optional=True), prefix="--public-url-prefix", doc=InputDocumentation(doc="The prefix that this app will be served under (e.g.,\nif behind a reverse proxy.)")), ToolInput(tag="in_cache_dir", input_type=File(optional=True), prefix="--cache-dir", doc=InputDocumentation(doc="Path to cache directory, default is to autocreate one.")), ToolInput(tag="in_cache_red_is_url", input_type=String(optional=True), prefix="--cache-redis-url", doc=InputDocumentation(doc="Redis URL to use for caching, enables Redis cache")), ToolInput(tag="in_cache_default_timeout", input_type=String(optional=True), prefix="--cache-default-timeout", doc=InputDocumentation(doc="Default timeout for cache")), ToolInput(tag="in_cache_preload_data", input_type=Boolean(optional=True), prefix="--cache-preload-data", doc=InputDocumentation(doc="whether to preload data at startup")), ToolInput(tag="in_upload_dir", input_type=Directory(optional=True), prefix="--upload-dir", doc=InputDocumentation(doc="Directory for visualization uploads, default is to\ncreate temporary directory")), ToolInput(tag="in_max_upload_data_size", input_type=Int(optional=True), prefix="--max-upload-data-size", doc=InputDocumentation(doc="Maximal size for data upload in bytes")), ToolInput(tag="in_disable_upload", input_type=Boolean(optional=True), prefix="--disable-upload", doc=InputDocumentation(doc="Whether or not to disable visualization uploads")), ToolInput(tag="in_disable_conversion", input_type=Boolean(optional=True), prefix="--disable-conversion", doc=InputDocumentation(doc="Directory for visualization uploads, default is to\ncreate temporary directory")), ToolInput(tag="in_custom_home_md", input_type=File(optional=True), prefix="--custom-home-md", doc=InputDocumentation(doc="Use custom markdown file for home screen")), ToolInput(tag="in_custom_static_folder", input_type=Directory(optional=True), prefix="--custom-static-folder", doc=InputDocumentation(doc="Use custom static folder for files included in home\nscreen markdown file")), ToolInput(tag="in_i_rods_client_server_negotiation", input_type=String(optional=True), prefix="--irods-client-server-negotiation", doc=InputDocumentation(doc="IRODS setting")), ToolInput(tag="in_i_rods_client_server_policy", input_type=String(optional=True), prefix="--irods-client-server-policy", doc=InputDocumentation(doc="IRODS setting")), ToolInput(tag="in_i_rods_ssl_verify_server", input_type=String(optional=True), prefix="--irods-ssl-verify-server", doc=InputDocumentation(doc="IRODS setting")), ToolInput(tag="in_i_rods_encryption_algorithm", input_type=String(optional=True), prefix="--irods-encryption-algorithm", doc=InputDocumentation(doc="IRODS setting")), ToolInput(tag="in_i_rods_encryption_key_size", input_type=Int(optional=True), prefix="--irods-encryption-key-size", doc=InputDocumentation(doc="IRODS setting")), ToolInput(tag="in_i_rods_encryption_num_hash_rounds", input_type=Int(optional=True), prefix="--irods-encryption-num-hash-rounds", doc=InputDocumentation(doc="IRODS setting")), ToolInput(tag="in_i_rods_encryption_salt_size", input_type=Int(optional=True), prefix="--irods-encryption-salt-size", doc=InputDocumentation(doc="IRODS setting\n"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Scelvis_Run_V0_1_0().translate("wdl", allow_empty_container=True)

