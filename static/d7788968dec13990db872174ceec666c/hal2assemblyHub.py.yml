!Command
command:
- hal2assemblyHub.py
positional:
- !Positional
  optional: false
  position: 0
  name: halFile
  description: ''
- !Positional
  optional: false
  position: 1
  name: outputDirectory
  description: ''
named:
- !Flag
  optional: true
  synonyms:
  - --cpHalFileToOut
  description: "If specified, copy the input halfile to the output\ndirectory (instead\
    \ of just make a softlink).\nDefault=False"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --ucscNames
  description: "Assume that sequence headers use the UCSC naming\nconvention, (i.e.\
    \ \"genome.chr\"), and  attempt to\nrename the sequences so that their names will\
    \ end up\nas \"chr\""
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --hub
  description: "a single-word name of the directory containing the\ntrack hub files.\
    \ Not displayed to hub users.\nDefault=myHub"
  args: !SimpleFlagArg
    name: HUBLABEL
- !Flag
  optional: true
  synonyms:
  - --shortLabel
  description: "the short name for the track hub. Suggested maximum\nlength is 17\
    \ characters. Displayed as the hub name on\nthe Track Hubs page and the track\
    \ group name on the\nbrowser tracks page. Default=my hub"
  args: !SimpleFlagArg
    name: SHORTLABEL
- !Flag
  optional: true
  synonyms:
  - --longLabel
  description: "a longer descriptive label for the track hub.\nSuggested maximum length\
    \ is 80 characters. Displayed\nin the description field on the Track Hubs page.\n\
    Default=my hub"
  args: !SimpleFlagArg
    name: LONGLABEL
- !Flag
  optional: true
  synonyms:
  - --email
  description: "the contact to whom questions regarding the track hub\nshould be directed.\
    \ Default=NoEmail"
  args: !SimpleFlagArg
    name: EMAIL
- !Flag
  optional: true
  synonyms:
  - --genomes
  description: "File specified list of genomes to make browser for. If\nspecified,\
    \ only create browsers for these genomes in\nthe order provided by the list. Otherwise\
    \ create\nbrowsers for all genomes in the input hal file"
  args: !SimpleFlagArg
    name: GENOMES
- !Flag
  optional: true
  synonyms:
  - --rename
  description: "File that maps halfile genomeNames to names displayed\non the browser.\
    \ Format:\n<halGenomeName>\\t<genomeNameToDisplayOnBrowser>.\nDefault=none"
  args: !SimpleFlagArg
    name: RENAME
- !Flag
  optional: true
  synonyms:
  - --tree
  description: "Newick binary tree. The order of the tracks and the\ndefault track\
    \ layout will be based on this tree if\noption \"genomes\" is not specified. If\
    \ not specified,\ntry to extract the newick tree from the input halfile."
  args: !SimpleFlagArg
    name: TREEFILE
- !Flag
  optional: true
  synonyms:
  - --url
  description: Public url of the hub location
  args: !SimpleFlagArg
    name: URL
- !Flag
  optional: true
  synonyms:
  - --twobitdir
  description: "Optional. Directory containing the 2bit files of each\ngenomes. Default:\
    \ extract from the input hal file."
  args: !SimpleFlagArg
    name: TWOBITDIR
- !Flag
  optional: true
  synonyms:
  - --lod
  description: "If specified, create \"level of detail\" (lod) hal files\nand will\
    \ put the lod.txt at the bigUrl instead of the\noriginal hal file. Default=False"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --lodTxtFile
  description: "\"hal Level of detail\" lod text file. If specified,\nwill put this\
    \ at the bigUrl instead of the hal file.\nDefault=none"
  args: !SimpleFlagArg
    name: LODTXTFILE
- !Flag
  optional: true
  synonyms:
  - --lodDir
  description: "\"hal Level of detail\" lod dir. If specified, will put\nthis at the\
    \ bigUrl instead of the hal file.\nDefault=none"
  args: !SimpleFlagArg
    name: LODDIR
- !Flag
  optional: true
  synonyms:
  - --lodMaxBlock
  description: "Maximum number of blocks to display in a hal level of\ndetail (see\
    \ halLodInterpolate.py --help for the\ndefault value)."
  args: !SimpleFlagArg
    name: LODMAXBLOCK
- !Flag
  optional: true
  synonyms:
  - --lodScale
  description: "Scaling factor between two successive levels of detail\n(see halLodInterpolate.py\
    \ --help for the default\nvalue)."
  args: !SimpleFlagArg
    name: LODSCALE
- !Flag
  optional: true
  synonyms:
  - --lodMaxDNA
  description: "Maximum query length such that its hal level of detail\nwill contain\
    \ nucleotide information. Default=none (see\nhalLodInterpolate.py --help for the\
    \ default value)."
  args: !SimpleFlagArg
    name: LODMAXDNA
- !Flag
  optional: true
  synonyms:
  - --lodInMemory
  description: "Load entire hal file into memory when generating\nlevels of detail\
    \ instead of using hdf5 cache. Could\nresult in drastic speedup. Default=False."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --lodMinSeqFrac
  description: "Minumum sequence length to sample as fraction of step\nsize for level\
    \ of detail generation: ie sequences with\nlength <= floor(minSeqFrac * step)\
    \ are ignored (see\nhalLodExtract --help for default value)."
  args: !SimpleFlagArg
    name: LODMINSEQFRAC
- !Flag
  optional: true
  synonyms:
  - --lodMinCovFrac
  description: "Minimum fraction of a genome that must be covered by\nsequences that\
    \ exceed --minSeqFrac * step.  LODs that\nwould violate this threshold will not\
    \ be generated (or\ndisplayed in  the browser).  This is seen a better\nthan the\
    \ alternative, which is to produce unreasonably\nsparse LODs because half the\
    \ sequences were not\nsampled (see halLodInterpolate.py --help for default\nvalue)."
  args: !SimpleFlagArg
    name: LODMINCOVFRAC
- !Flag
  optional: true
  synonyms:
  - --lodChunk
  description: "HDF5 chunk size for generated levels of detail (see\nhalLodExtract\
    \ --help for default value)."
  args: !SimpleFlagArg
    name: LODCHUNK
- !Flag
  optional: true
  synonyms:
  - --bedDirs
  description: "comma separated list of directories containing bed\nfiles of the input\
    \ genomes. Each directory represents\na type of annotation. The annotations of\
    \ each genome\nwill then be liftovered to all other genomes in the\nMSA. Example:\
    \ \"genes,genomicIsland,tRNA\". Format of\neach directory: bedDir/ then genome1/\
    \ then chr1.bed,\nchr2.bed... Default=none"
  args: !SimpleFlagArg
    name: BEDDIRS
- !Flag
  optional: true
  synonyms:
  - --finalBigBedDirs
  description: "comma separated list of directories containing final\nbig bed files\
    \ to be displayed. No liftover will be\ndone for these files. Each directory represents\
    \ a type\nof annotation. Example: \"genes,genomicIsland,tRNA\".\nFormat of each\
    \ directory: bbDir/ then queryGenome/\nthen targetGenome1.bb, targetGenome2.bb\
    \ ... (so\nannotation of queryGenome has been mapped to\ntargetGenomes and will\
    \ be display on the targetGenome\nbrowsers). Default=none"
  args: !SimpleFlagArg
    name: BBDIRS
- !Flag
  optional: true
  synonyms:
  - --bedDirs2
  description: "Similar to --bedDirs, except these tracks will be kept\nseparately\
    \ and out of the composite track.\nDefault=none"
  args: !SimpleFlagArg
    name: BEDDIRS2
- !Flag
  optional: true
  synonyms:
  - --finalBigBedDirs2
  description: "Similar to --finalBigBedDirs, except these tracks will\nbe kept separately\
    \ and out of the composite track.\nDefault=none"
  args: !SimpleFlagArg
    name: BBDIRS2
- !Flag
  optional: true
  synonyms:
  - --noBedLiftover
  description: "If specified, will not lift over the bed annotations.\nDefault=False"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --tabBed
  description: "If specified, treat tab as the delimiter of all the\nbed files. Default:\
    \ any white space."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --wigDirs
  description: "comma separated list of directories containing wig\nfiles of the input\
    \ genomes. Each directory represents\na type of annotation. The annotations of\
    \ each genome\nwill then be liftovered to all other genomes in the\nMSA. Example:\
    \ \"genes,genomicIsland,tRNA\". Format of\neach directory: wigDir/ then genome1/\
    \ then chr1.wig,\nchr2.wig... Default=none"
  args: !SimpleFlagArg
    name: WIGDIRS
- !Flag
  optional: true
  synonyms:
  - --finalBigwigDirs
  description: "comma separated list of directories containing final\nbig wig files\
    \ to be displayed. No liftover will be\ndone for these files. Each directory represents\
    \ a type\nof annotation. Example: \"readCoverage,\". Format of\neach directory:\
    \ bwDir/ then queryGenome/ then\ntargetGenome1.bw, targetGenome2.bw ... (so annotation\n\
    of queryGenome has been mapped to targetGenomes and\nwill be display on the targetGenome\
    \ browsers).\nDefault=none"
  args: !SimpleFlagArg
    name: BWDIRS
- !Flag
  optional: true
  synonyms:
  - --nowigLiftover
  description: "If specified, will not lift over the wig annotations.\nDefault=False"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --rmskDir
  description: "Directory containing repeatMasker's output files for\neach genome.\
    \ Format: rmskDir/ then genome1/ then\ngenome.rmsk.SINE.bb, genome.rmsk.LINE.bb,\
    \ ...\nDefault=none"
  args: !SimpleFlagArg
    name: RMSKDIR
- !Flag
  optional: true
  synonyms:
  - --gcContent
  description: If specified, make GC-content tracks. Default=False
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --alignability
  description: "If specified, make Alignability (aka Alignment Depth)\ntracks. Default=False"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --conservation
  description: "Bed file providing regions to calculate the\nconservation tracks."
  args: !SimpleFlagArg
    name: CONSERVATION
- !Flag
  optional: true
  synonyms:
  - --conservationDir
  description: "Optional. Directory contains conservation bigwigs if\navailable. These\
    \ bigwigs will be used. If this is not\nspecified, the program will compute the\
    \ conservation\ntracks."
  args: !SimpleFlagArg
    name: CONSERVATIONDIR
- !Flag
  optional: true
  synonyms:
  - --conservationGenomeName
  description: "Name of the genome of the bed file provided in the \"--\nconversation\"\
    \ option"
  args: !SimpleFlagArg
    name: CONSERVATIONGENOMENAME
- !Flag
  optional: true
  synonyms:
  - --conservationTree
  description: Optional. Newick tree for the conservation track
  args: !SimpleFlagArg
    name: CONSERVATIONTREE
- !Flag
  optional: true
  synonyms:
  - --conservationNumProc
  description: Optional. Number of processors to run conservation
  args: !SimpleFlagArg
    name: CONSERVATIONNUMPROC
- !Flag
  optional: true
  synonyms:
  - --cladeExclusiveRegions
  description: "If specified, will generate tracks of regions that are\nexclusive\
    \ to each branch (including leaf \"branches\",\nwhich will be genome-exclusive\
    \ regions) on the tree.\nDefault=False"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --maxOutgroupGenomes
  description: "Maximum number of outgroup genomes that a region is\nallowed to be\
    \ in. Default=0"
  args: !SimpleFlagArg
    name: MAXOUT
- !Flag
  optional: true
  synonyms:
  - --minIngroupGenomes
  description: "Minimum number of ingroup genomes that a region must\nappear in. Default=all\
    \ ingroup genomes (branch node\nand all its children)."
  args: !SimpleFlagArg
    name: MININ
- !Flag
  optional: true
  synonyms:
  - --selfAlignmentSnakes
  description: Produce a self-alignment snake track for every genome
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --logOff
  description: Turn off logging. (default is CRITICAL)
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --logInfo
  description: Turn on logging at INFO level. (default is CRITICAL)
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --logDebug
  description: Turn on logging at DEBUG level. (default is CRITICAL)
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --logLevel
  description: "Log at level (may be either OFF/INFO/DEBUG/CRITICAL).\n(default is\
    \ CRITICAL)"
  args: !SimpleFlagArg
    name: LOGLEVEL
- !Flag
  optional: true
  synonyms:
  - --logFile
  description: File to log in
  args: !SimpleFlagArg
    name: LOGFILE
- !Flag
  optional: true
  synonyms:
  - --rotatingLogging
  description: "Turn on rotating logging, which prevents log files\ngetting too big."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --jobTree
  description: "Directory in which to place job management files and\nthe global accessed\
    \ temporary file directories(this\nneeds to be globally accessible by all machines\n\
    running jobs). If you pass an existing directory it\nwill check if it's a valid\
    \ existing job tree, then try\nand restart the jobs in it. The default=./jobTree"
  args: !SimpleFlagArg
    name: JOBTREE
- !Flag
  optional: true
  synonyms:
  - --stats
  description: "Records statistics about the job-tree to be used by\njobTreeStats.\
    \ default=False"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --batchSystem
  description: "The type of batch system to run the job(s) with,\ncurrently can be\
    \ 'singleMachine'/'parasol'/'acidTest'/\n'gridEngine'/'lsf'. default=singleMachine"
  args: !SimpleFlagArg
    name: BATCHSYSTEM
- !Flag
  optional: true
  synonyms:
  - --maxThreads
  description: "The maximum number of threads (technically processes\nat this point)\
    \ to use when running in single machine\nmode. Increasing this will allow more\
    \ jobs to run\nconcurrently when running on a single machine.\ndefault=4"
  args: !SimpleFlagArg
    name: MAXTHREADS
- !Flag
  optional: true
  synonyms:
  - --parasolCommand
  description: The command to run the parasol program default=parasol
  args: !SimpleFlagArg
    name: PARASOLCOMMAND
- !Flag
  optional: true
  synonyms:
  - --defaultMemory
  description: "The default amount of memory to request for a job (in\nbytes), by\
    \ default is 2^31 = 2 gigabytes,\ndefault=2147483648"
  args: !SimpleFlagArg
    name: DEFAULTMEMORY
- !Flag
  optional: true
  synonyms:
  - --defaultCpu
  description: "The default the number of cpus to dedicate a job.\ndefault=1"
  args: !SimpleFlagArg
    name: DEFAULTCPU
- !Flag
  optional: true
  synonyms:
  - --maxCpus
  description: "The maximum number of cpus to request from the batch\nsystem at any\
    \ one time. default=9223372036854775807"
  args: !SimpleFlagArg
    name: MAXCPUS
- !Flag
  optional: true
  synonyms:
  - --maxMemory
  description: "The maximum amount of memory to request from the batch\nsystem at\
    \ any one time. default=9223372036854775807"
  args: !SimpleFlagArg
    name: MAXMEMORY
- !Flag
  optional: true
  synonyms:
  - --retryCount
  description: "Number of times to retry a failing job before giving\nup and labeling\
    \ job failed. default=0"
  args: !SimpleFlagArg
    name: RETRYCOUNT
- !Flag
  optional: true
  synonyms:
  - --maxJobDuration
  description: "Maximum runtime of a job (in seconds) before we kill\nit (this is\
    \ a lower bound, and the actual time before\nkilling the job may be longer).\n\
    default=9223372036854775807"
  args: !SimpleFlagArg
    name: MAXJOBDURATION
- !Flag
  optional: true
  synonyms:
  - --rescueJobsFrequency
  description: "Period of time to wait (in seconds) between checking\nfor missing/overlong\
    \ jobs, that is jobs which get lost\nby the batch system. Expert parameter. (default\
    \ is set\nby the batch system)"
  args: !SimpleFlagArg
    name: RESCUEJOBSFREQUENCY
- !Flag
  optional: true
  synonyms:
  - --bigBatchSystem
  description: "The batch system to run for jobs with larger\nmemory/cpus requests,\
    \ currently can be\n'singleMachine'/'parasol'/'acidTest'/'gridEngine'.\ndefault=none"
  args: !SimpleFlagArg
    name: BIGBATCHSYSTEM
- !Flag
  optional: true
  synonyms:
  - --bigMemoryThreshold
  description: "The memory threshold above which to submit to the big\nqueue. default=9223372036854775807"
  args: !SimpleFlagArg
    name: BIGMEMORYTHRESHOLD
- !Flag
  optional: true
  synonyms:
  - --bigCpuThreshold
  description: "The cpu threshold above which to submit to the big\nqueue. default=9223372036854775807"
  args: !SimpleFlagArg
    name: BIGCPUTHRESHOLD
- !Flag
  optional: true
  synonyms:
  - --bigMaxCpus
  description: "The maximum number of big batch system cpus to allow\nat one time\
    \ on the big queue.\ndefault=9223372036854775807"
  args: !SimpleFlagArg
    name: BIGMAXCPUS
- !Flag
  optional: true
  synonyms:
  - --bigMaxMemory
  description: "The maximum amount of memory to request from the big\nbatch system\
    \ at any one time.\ndefault=9223372036854775807"
  args: !SimpleFlagArg
    name: BIGMAXMEMORY
- !Flag
  optional: true
  synonyms:
  - --jobTime
  description: "The approximate time (in seconds) that you'd like a\nlist of child\
    \ jobs to be run serially before being\nparallelized. This parameter allows one\
    \ to avoid over\nparallelizing tiny jobs, and therefore paying\nsignificant scheduling\
    \ overhead, by running tiny jobs\nin series on a single node/core of the cluster.\n\
    default=30"
  args: !SimpleFlagArg
    name: JOBTIME
- !Flag
  optional: true
  synonyms:
  - --maxLogFileSize
  description: "The maximum size of a job log file to keep (in bytes),\nlog files\
    \ larger than this will be truncated to the\nlast X bytes. Default is 50 kilobytes,\
    \ default=50120"
  args: !SimpleFlagArg
    name: MAXLOGFILESIZE
- !Flag
  optional: true
  synonyms:
  - --command
  description: "The command to run (which will generate subsequent\njobs). This is\
    \ deprecated\n"
  args: !SimpleFlagArg
    name: COMMAND
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "Usage: hal2assemblyHub.py <halFile> <outputDirectory> [options]\n\nOptions:\n\
  \  -h, --help            show this help message and exit\n  --cpHalFileToOut   \
  \   If specified, copy the input halfile to the output\n                       \
  \ directory (instead of just make a softlink).\n                        Default=False\n\
  \  --ucscNames           Assume that sequence headers use the UCSC naming\n    \
  \                    convention, (i.e. \"genome.chr\"), and  attempt to\n      \
  \                  rename the sequences so that their names will end up\n      \
  \                  as \"chr\"\n\n  HUB INFORMATION:\n    --hub=HUBLABEL      a single-word\
  \ name of the directory containing the\n                        track hub files.\
  \ Not displayed to hub users.\n                        Default=myHub\n    --shortLabel=SHORTLABEL\n\
  \                        the short name for the track hub. Suggested maximum\n \
  \                       length is 17 characters. Displayed as the hub name on\n\
  \                        the Track Hubs page and the track group name on the\n \
  \                       browser tracks page. Default=my hub\n    --longLabel=LONGLABEL\n\
  \                        a longer descriptive label for the track hub.\n       \
  \                 Suggested maximum length is 80 characters. Displayed\n       \
  \                 in the description field on the Track Hubs page.\n           \
  \             Default=my hub\n    --email=EMAIL       the contact to whom questions\
  \ regarding the track hub\n                        should be directed. Default=NoEmail\n\
  \    --genomes=GENOMES   File specified list of genomes to make browser for. If\n\
  \                        specified, only create browsers for these genomes in\n\
  \                        the order provided by the list. Otherwise create\n    \
  \                    browsers for all genomes in the input hal file\n    --rename=RENAME\
  \     File that maps halfile genomeNames to names displayed\n                  \
  \      on the browser. Format:\n                        <halGenomeName>\\t<genomeNameToDisplayOnBrowser>.\n\
  \                        Default=none\n    --tree=TREEFILE     Newick binary tree.\
  \ The order of the tracks and the\n                        default track layout\
  \ will be based on this tree if\n                        option \"genomes\" is not\
  \ specified. If not specified,\n                        try to extract the newick\
  \ tree from the input halfile.\n    --url=URL           Public url of the hub location\n\
  \    --twobitdir=TWOBITDIR\n                        Optional. Directory containing\
  \ the 2bit files of each\n                        genomes. Default: extract from\
  \ the input hal file.\n\n  LEVEL OF DETAILS:\n    Level-of-detail (LOD) options.\n\
  \n    --lod               If specified, create \"level of detail\" (lod) hal files\n\
  \                        and will put the lod.txt at the bigUrl instead of the\n\
  \                        original hal file. Default=False\n    --lodTxtFile=LODTXTFILE\n\
  \                        \"hal Level of detail\" lod text file. If specified,\n\
  \                        will put this at the bigUrl instead of the hal file.\n\
  \                        Default=none\n    --lodDir=LODDIR     \"hal Level of detail\"\
  \ lod dir. If specified, will put\n                        this at the bigUrl instead\
  \ of the hal file.\n                        Default=none\n    --lodMaxBlock=LODMAXBLOCK\n\
  \                        Maximum number of blocks to display in a hal level of\n\
  \                        detail (see halLodInterpolate.py --help for the\n     \
  \                   default value).\n    --lodScale=LODSCALE\n                 \
  \       Scaling factor between two successive levels of detail\n               \
  \         (see halLodInterpolate.py --help for the default\n                   \
  \     value).\n    --lodMaxDNA=LODMAXDNA\n                        Maximum query\
  \ length such that its hal level of detail\n                        will contain\
  \ nucleotide information. Default=none (see\n                        halLodInterpolate.py\
  \ --help for the default value).\n    --lodInMemory       Load entire hal file into\
  \ memory when generating\n                        levels of detail instead of using\
  \ hdf5 cache. Could\n                        result in drastic speedup. Default=False.\n\
  \    --lodMinSeqFrac=LODMINSEQFRAC\n                        Minumum sequence length\
  \ to sample as fraction of step\n                        size for level of detail\
  \ generation: ie sequences with\n                        length <= floor(minSeqFrac\
  \ * step) are ignored (see\n                        halLodExtract --help for default\
  \ value).\n    --lodMinCovFrac=LODMINCOVFRAC\n                        Minimum fraction\
  \ of a genome that must be covered by\n                        sequences that exceed\
  \ --minSeqFrac * step.  LODs that\n                        would violate this threshold\
  \ will not be generated (or\n                        displayed in  the browser).\
  \  This is seen a better\n                        than the alternative, which is\
  \ to produce unreasonably\n                        sparse LODs because half the\
  \ sequences were not\n                        sampled (see halLodInterpolate.py\
  \ --help for default\n                        value).\n    --lodChunk=LODCHUNK\n\
  \                        HDF5 chunk size for generated levels of detail (see\n \
  \                       halLodExtract --help for default value).\n\n  BED-FORMATTED\
  \ ANNOTATIONS:\n    All annotations in bed or bigbed formats.\n\n    --bedDirs=BEDDIRS\
  \   comma separated list of directories containing bed\n                       \
  \ files of the input genomes. Each directory represents\n                      \
  \  a type of annotation. The annotations of each genome\n                      \
  \  will then be liftovered to all other genomes in the\n                       \
  \ MSA. Example: \"genes,genomicIsland,tRNA\". Format of\n                      \
  \  each directory: bedDir/ then genome1/ then chr1.bed,\n                      \
  \  chr2.bed... Default=none\n    --finalBigBedDirs=BBDIRS\n                    \
  \    comma separated list of directories containing final\n                    \
  \    big bed files to be displayed. No liftover will be\n                      \
  \  done for these files. Each directory represents a type\n                    \
  \    of annotation. Example: \"genes,genomicIsland,tRNA\".\n                   \
  \     Format of each directory: bbDir/ then queryGenome/\n                     \
  \   then targetGenome1.bb, targetGenome2.bb ... (so\n                        annotation\
  \ of queryGenome has been mapped to\n                        targetGenomes and will\
  \ be display on the targetGenome\n                        browsers). Default=none\n\
  \    --bedDirs2=BEDDIRS2\n                        Similar to --bedDirs, except these\
  \ tracks will be kept\n                        separately and out of the composite\
  \ track.\n                        Default=none\n    --finalBigBedDirs2=BBDIRS2\n\
  \                        Similar to --finalBigBedDirs, except these tracks will\n\
  \                        be kept separately and out of the composite track.\n  \
  \                      Default=none\n    --noBedLiftover     If specified, will\
  \ not lift over the bed annotations.\n                        Default=False\n  \
  \  --tabBed            If specified, treat tab as the delimiter of all the\n   \
  \                     bed files. Default: any white space.\n\n  WIGGLE-FORMATTED\
  \ ANNOTATIONS:\n    All annotations in wiggle or bigWig formats.\n\n    --wigDirs=WIGDIRS\
  \   comma separated list of directories containing wig\n                       \
  \ files of the input genomes. Each directory represents\n                      \
  \  a type of annotation. The annotations of each genome\n                      \
  \  will then be liftovered to all other genomes in the\n                       \
  \ MSA. Example: \"genes,genomicIsland,tRNA\". Format of\n                      \
  \  each directory: wigDir/ then genome1/ then chr1.wig,\n                      \
  \  chr2.wig... Default=none\n    --finalBigwigDirs=BWDIRS\n                    \
  \    comma separated list of directories containing final\n                    \
  \    big wig files to be displayed. No liftover will be\n                      \
  \  done for these files. Each directory represents a type\n                    \
  \    of annotation. Example: \"readCoverage,\". Format of\n                    \
  \    each directory: bwDir/ then queryGenome/ then\n                        targetGenome1.bw,\
  \ targetGenome2.bw ... (so annotation\n                        of queryGenome has\
  \ been mapped to targetGenomes and\n                        will be display on the\
  \ targetGenome browsers).\n                        Default=none\n    --nowigLiftover\
  \     If specified, will not lift over the wig annotations.\n                  \
  \      Default=False\n\n  REPEATMASKER:\n    --rmskDir=RMSKDIR   Directory containing\
  \ repeatMasker's output files for\n                        each genome. Format:\
  \ rmskDir/ then genome1/ then\n                        genome.rmsk.SINE.bb, genome.rmsk.LINE.bb,\
  \ ...\n                        Default=none\n\n  GC PERCENT:\n    --gcContent  \
  \       If specified, make GC-content tracks. Default=False\n\n  ALIGNABILITY:\n\
  \    --alignability      If specified, make Alignability (aka Alignment Depth)\n\
  \                        tracks. Default=False\n\n  CONSERVATION TRACKS:\n    Necessary\
  \ information for computing conservation tracks\n\n    --conservation=CONSERVATION\n\
  \                        Bed file providing regions to calculate the\n         \
  \               conservation tracks.\n    --conservationDir=CONSERVATIONDIR\n  \
  \                      Optional. Directory contains conservation bigwigs if\n  \
  \                      available. These bigwigs will be used. If this is not\n \
  \                       specified, the program will compute the conservation\n \
  \                       tracks.\n    --conservationGenomeName=CONSERVATIONGENOMENAME\n\
  \                        Name of the genome of the bed file provided in the \"--\n\
  \                        conversation\" option\n    --conservationTree=CONSERVATIONTREE\n\
  \                        Optional. Newick tree for the conservation track\n    --conservationNumProc=CONSERVATIONNUMPROC\n\
  \                        Optional. Number of processors to run conservation\n\n\
  \  CLADE EXCLUSIVE REGIONS:\n    Requirements of regions that are exclusive to subgroup\
  \ of genomes.\n\n    --cladeExclusiveRegions\n                        If specified,\
  \ will generate tracks of regions that are\n                        exclusive to\
  \ each branch (including leaf \"branches\",\n                        which will\
  \ be genome-exclusive regions) on the tree.\n                        Default=False\n\
  \    --maxOutgroupGenomes=MAXOUT\n                        Maximum number of outgroup\
  \ genomes that a region is\n                        allowed to be in. Default=0\n\
  \    --minIngroupGenomes=MININ\n                        Minimum number of ingroup\
  \ genomes that a region must\n                        appear in. Default=all ingroup\
  \ genomes (branch node\n                        and all its children).\n\n  SNAKE\
  \ TRACKS:\n    Snake track options\n\n    --selfAlignmentSnakes\n              \
  \          Produce a self-alignment snake track for every genome\n\n  Logging options:\n\
  \    Options that control logging\n\n    --logOff            Turn off logging. (default\
  \ is CRITICAL)\n    --logInfo           Turn on logging at INFO level. (default\
  \ is CRITICAL)\n    --logDebug          Turn on logging at DEBUG level. (default\
  \ is CRITICAL)\n    --logLevel=LOGLEVEL\n                        Log at level (may\
  \ be either OFF/INFO/DEBUG/CRITICAL).\n                        (default is CRITICAL)\n\
  \    --logFile=LOGFILE   File to log in\n    --rotatingLogging   Turn on rotating\
  \ logging, which prevents log files\n                        getting too big.\n\n\
  \  jobTree core options:\n    Options to specify the location of the jobTree and\
  \ turn on stats\n    collation about the performance of jobs.\n\n    --jobTree=JOBTREE\
  \   Directory in which to place job management files and\n                     \
  \   the global accessed temporary file directories(this\n                      \
  \  needs to be globally accessible by all machines\n                        running\
  \ jobs). If you pass an existing directory it\n                        will check\
  \ if it's a valid existing job tree, then try\n                        and restart\
  \ the jobs in it. The default=./jobTree\n    --stats             Records statistics\
  \ about the job-tree to be used by\n                        jobTreeStats. default=False\n\
  \n  jobTree options for specifying the batch system:\n    Allows the specification\
  \ of the batch system, and arguments to the\n    batch system/big batch system (see\
  \ below).\n\n    --batchSystem=BATCHSYSTEM\n                        The type of\
  \ batch system to run the job(s) with,\n                        currently can be\
  \ 'singleMachine'/'parasol'/'acidTest'/\n                        'gridEngine'/'lsf'.\
  \ default=singleMachine\n    --maxThreads=MAXTHREADS\n                        The\
  \ maximum number of threads (technically processes\n                        at this\
  \ point) to use when running in single machine\n                        mode. Increasing\
  \ this will allow more jobs to run\n                        concurrently when running\
  \ on a single machine.\n                        default=4\n    --parasolCommand=PARASOLCOMMAND\n\
  \                        The command to run the parasol program default=parasol\n\
  \n  jobTree options for cpu/memory requirements:\n    The options to specify default\
  \ cpu/memory requirements (if not\n    specified by the jobs themselves), and to\
  \ limit the total amount of\n    memory/cpu requested from the batch system.\n\n\
  \    --defaultMemory=DEFAULTMEMORY\n                        The default amount of\
  \ memory to request for a job (in\n                        bytes), by default is\
  \ 2^31 = 2 gigabytes,\n                        default=2147483648\n    --defaultCpu=DEFAULTCPU\n\
  \                        The default the number of cpus to dedicate a job.\n   \
  \                     default=1\n    --maxCpus=MAXCPUS   The maximum number of cpus\
  \ to request from the batch\n                        system at any one time. default=9223372036854775807\n\
  \    --maxMemory=MAXMEMORY\n                        The maximum amount of memory\
  \ to request from the batch\n                        system at any one time. default=9223372036854775807\n\
  \n  jobTree options for rescuing/killing/restarting jobs:\n    The options for jobs\
  \ that either run too long/fail or get lost (some\n    batch systems have issues!)\n\
  \n    --retryCount=RETRYCOUNT\n                        Number of times to retry\
  \ a failing job before giving\n                        up and labeling job failed.\
  \ default=0\n    --maxJobDuration=MAXJOBDURATION\n                        Maximum\
  \ runtime of a job (in seconds) before we kill\n                        it (this\
  \ is a lower bound, and the actual time before\n                        killing\
  \ the job may be longer).\n                        default=9223372036854775807\n\
  \    --rescueJobsFrequency=RESCUEJOBSFREQUENCY\n                        Period of\
  \ time to wait (in seconds) between checking\n                        for missing/overlong\
  \ jobs, that is jobs which get lost\n                        by the batch system.\
  \ Expert parameter. (default is set\n                        by the batch system)\n\
  \n  jobTree big batch system options:\n    jobTree can employ a secondary batch\
  \ system for running large\n    memory/cpu jobs using the following arguments:\n\
  \n    --bigBatchSystem=BIGBATCHSYSTEM\n                        The batch system\
  \ to run for jobs with larger\n                        memory/cpus requests, currently\
  \ can be\n                        'singleMachine'/'parasol'/'acidTest'/'gridEngine'.\n\
  \                        default=none\n    --bigMemoryThreshold=BIGMEMORYTHRESHOLD\n\
  \                        The memory threshold above which to submit to the big\n\
  \                        queue. default=9223372036854775807\n    --bigCpuThreshold=BIGCPUTHRESHOLD\n\
  \                        The cpu threshold above which to submit to the big\n  \
  \                      queue. default=9223372036854775807\n    --bigMaxCpus=BIGMAXCPUS\n\
  \                        The maximum number of big batch system cpus to allow\n\
  \                        at one time on the big queue.\n                       \
  \ default=9223372036854775807\n    --bigMaxMemory=BIGMAXMEMORY\n               \
  \         The maximum amount of memory to request from the big\n               \
  \         batch system at any one time.\n                        default=9223372036854775807\n\
  \n  jobTree miscellaneous options:\n    Miscellaneous options\n\n    --jobTime=JOBTIME\
  \   The approximate time (in seconds) that you'd like a\n                      \
  \  list of child jobs to be run serially before being\n                        parallelized.\
  \ This parameter allows one to avoid over\n                        parallelizing\
  \ tiny jobs, and therefore paying\n                        significant scheduling\
  \ overhead, by running tiny jobs\n                        in series on a single\
  \ node/core of the cluster.\n                        default=30\n    --maxLogFileSize=MAXLOGFILESIZE\n\
  \                        The maximum size of a job log file to keep (in bytes),\n\
  \                        log files larger than this will be truncated to the\n \
  \                       last X bytes. Default is 50 kilobytes, default=50120\n \
  \   --command=COMMAND   The command to run (which will generate subsequent\n   \
  \                     jobs). This is deprecated\n"
generated_using:
- --help
docker_image:
