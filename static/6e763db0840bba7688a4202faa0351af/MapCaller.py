from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Boolean, Int, Float

Mapcaller_V0_1_0 = CommandToolBuilder(tool="MapCaller", base_command=["MapCaller"], inputs=[ToolInput(tag="in_bwtindexprefix", input_type=String(optional=True), prefix="-i", doc=InputDocumentation(doc="BWT_Index_Prefix")), ToolInput(tag="in_reference_filename_formatfa", input_type=File(optional=True), prefix="-r", doc=InputDocumentation(doc="Reference filename (format:fa)")), ToolInput(tag="in_f", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc="files with #1 mates reads (format:fa, fq, fq.gz)")), ToolInput(tag="in_f_two", input_type=Boolean(optional=True), prefix="-f2", doc=InputDocumentation(doc="files with #2 mates reads (format:fa, fq, fq.gz)")), ToolInput(tag="in_number_of_threads", input_type=Int(optional=True), prefix="-t", doc=InputDocumentation(doc="number of threads [16]")), ToolInput(tag="in_size", input_type=Boolean(optional=True), prefix="-size", doc=InputDocumentation(doc="sequencing fragment size [500]")), ToolInput(tag="in_in_del", input_type=Int(optional=True), prefix="-indel", doc=InputDocumentation(doc="maximal indel size [30]")), ToolInput(tag="in_ad", input_type=Int(optional=True), prefix="-ad", doc=InputDocumentation(doc="minimal ALT allele count [5]")), ToolInput(tag="in_dup", input_type=Int(optional=True), prefix="-dup", doc=InputDocumentation(doc="maximal PCR duplicates [5]")), ToolInput(tag="in_max_mm", input_type=Float(optional=True), prefix="-maxmm", doc=InputDocumentation(doc="maximal mismatch rate in read alignment [0.05]")), ToolInput(tag="in_max_clip", input_type=Int(optional=True), prefix="-maxclip", doc=InputDocumentation(doc="maximal clip size at either ends [5]")), ToolInput(tag="in_sam", input_type=File(optional=True), prefix="-sam", doc=InputDocumentation(doc="SAM output filename [NULL]")), ToolInput(tag="in_bam", input_type=File(optional=True), prefix="-bam", doc=InputDocumentation(doc="BAM output filename [NULL]")), ToolInput(tag="in_alg", input_type=Int(optional=True), prefix="-alg", doc=InputDocumentation(doc="gapped alignment algorithm (option: nw|ksw2)")), ToolInput(tag="in_vcf", input_type=File(optional=True), prefix="-vcf", doc=InputDocumentation(doc="VCF output filename [output.vcf]")), ToolInput(tag="in_gvc_f", input_type=Boolean(optional=True), prefix="-gvcf", doc=InputDocumentation(doc="GVCF mode [false]")), ToolInput(tag="in_log", input_type=File(optional=True), prefix="-log", doc=InputDocumentation(doc="log filename [job.log]")), ToolInput(tag="in_monomorphic", input_type=Boolean(optional=True), prefix="-monomorphic", doc=InputDocumentation(doc="report all loci which do not have any potential alternates.")), ToolInput(tag="in_min_cnv", input_type=Int(optional=True), prefix="-min_cnv", doc=InputDocumentation(doc="the minimal cnv size to be reported [50].")), ToolInput(tag="in_min_gap", input_type=Int(optional=True), prefix="-min_gap", doc=InputDocumentation(doc="the minimal gap(unmapped) size to be reported [50].")), ToolInput(tag="in_ploidy", input_type=Int(optional=True), prefix="-ploidy", doc=InputDocumentation(doc="number of sets of chromosomes in a cell (1:monoploid, 2:diploid) [2]")), ToolInput(tag="in_output_multiple_alignments", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="output multiple alignments")), ToolInput(tag="in_somatic", input_type=Boolean(optional=True), prefix="-somatic", doc=InputDocumentation(doc="detect somatic mutations [false]")), ToolInput(tag="in_no_vcf", input_type=Boolean(optional=True), prefix="-no_vcf", doc=InputDocumentation(doc="No VCF output [false]")), ToolInput(tag="in_pairedend_reads_interlaced", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="paired-end reads are interlaced in the same file")), ToolInput(tag="in_filter", input_type=Boolean(optional=True), prefix="-filter", doc=InputDocumentation(doc="apply variant filters (under test) [false]")), ToolInput(tag="in_version", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="version"))], outputs=[ToolOutput(tag="out_sam", output_type=File(optional=True), selector=InputSelector(input_to_select="in_sam", type_hint=File()), doc=OutputDocumentation(doc="SAM output filename [NULL]")), ToolOutput(tag="out_bam", output_type=File(optional=True), selector=InputSelector(input_to_select="in_bam", type_hint=File()), doc=OutputDocumentation(doc="BAM output filename [NULL]")), ToolOutput(tag="out_vcf", output_type=File(optional=True), selector=InputSelector(input_to_select="in_vcf", type_hint=File()), doc=OutputDocumentation(doc="VCF output filename [output.vcf]"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Mapcaller_V0_1_0().translate("wdl", allow_empty_container=True)

