from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Float, Int, File

Cpgcdifenrich_V0_1_0 = CommandToolBuilder(tool="cpgcdifenrich", base_command=["cpgcdifenrich"], inputs=[ToolInput(tag="in_arg_comparison_files", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="[ --compfile ] arg           Comparison files. The comparison file is\ngenerated by `MCOMP` in MOABS. For example,\n`-c H001VsNL -c H002VsNL`.")), ToolInput(tag="in_arg_specific_chromosome", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="[ --chrom ] arg              A specific chromosome for analysis. Can be\nspecified multiple times for multiple\nchromosomes. The size can be encoded for a\nchromosome. For example, `-c chr1:248956422\n-c chr2:242193529`. The size can be used to\nsplit a chromosome for running in small\nbatches. Default: all chromosomes appear in\ncomparison files.")), ToolInput(tag="in_arg_split_length", input_type=Boolean(optional=True), prefix="-l", doc=InputDocumentation(doc="[ --length ] arg (=20000000) Split length of coordinates in a chromomsome.\nThis is necessary for many replicates with a\nlimited memory. To enable small-batch\nrunning, size info should be specificed by\n`-r|--chrom`. Because the size of chr1 in\nhg38 is >200 million, 1/10th (20M) can be\ngood to go. Default: 20000000.")), ToolInput(tag="in_arg_number_default", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc="[ --numbins ] arg (=100)     Number of bins. Default: 100.")), ToolInput(tag="in_arg_number_threads", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="[ --numthreads ] arg (=10)   Number of threads. Default: 10.")), ToolInput(tag="in_kld_thr", input_type=Float(optional=True), prefix="--kldthr", doc=InputDocumentation(doc="(=0.67957)         KL-divergence threshold for a DMC. A quarter\nof nats. Default: 0.67957.")), ToolInput(tag="in_cd_if_thr", input_type=Float(optional=True), prefix="--cdifthr", doc=InputDocumentation(doc="(=0.2)            CDIF threshold for a DMC. Default: 0.2.")), ToolInput(tag="in_max_zero_cd_if", input_type=Float(optional=True), prefix="--maxzerocdif", doc=InputDocumentation(doc="(=0.05)       Maximum percent of zero CDIFs for a DMC. A\nCpG with both positive and negative CDIFs\nwill be ignored. A negative value will not\ncheck zero CDIFs. Default: 5%.")), ToolInput(tag="in_max_dist_dmcs", input_type=Int(optional=True), prefix="--maxdistdmcs", doc=InputDocumentation(doc="(=300)        Maximum distance between consecutive DMCs for\na DMR. Default: 300.")), ToolInput(tag="in_mind_mc", input_type=Int(optional=True), prefix="--mindmc", doc=InputDocumentation(doc="(=3)               Minimum number ofDMCs in a DMR. Default: 3.")), ToolInput(tag="in_arg_output_file", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="[ --outfile ] arg            Output file."))], outputs=[ToolOutput(tag="out_arg_output_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_arg_output_file", type_hint=File()), doc=OutputDocumentation(doc="[ --outfile ] arg            Output file."))], container="quay.io/biocontainers/mmult:0.0.0.2--r40h8b68381_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Cpgcdifenrich_V0_1_0().translate("wdl")

