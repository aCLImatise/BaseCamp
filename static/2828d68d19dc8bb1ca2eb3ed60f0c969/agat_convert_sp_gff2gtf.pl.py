from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Float, String, Int

Agat_Convert_Sp_Gff2Gtf_Pl_V0_1_0 = CommandToolBuilder(tool="agat_convert_sp_gff2gtf.pl", base_command=["agat_convert_sp_gff2gtf.pl"], inputs=[ToolInput(tag="in_gff", input_type=File(optional=True), prefix="--gff", doc=InputDocumentation(doc="Input GFF file that will be read")), ToolInput(tag="in_gtf_version", input_type=Float(optional=True), prefix="--gtf_version", doc=InputDocumentation(doc="of the GTF output. Default 3 (for GTF3)\nGTF3 (9 feature types accepted): gene, transcript, exon, CDS,\nSelenocysteine, start_codon, stop_codon, three_prime_utr and\nfive_prime_utr\nGTF2.5 (8 feature types accepted): gene, transcript, exon, CDS,\nUTR, start_codon, stop_codon, Selenocysteine\nGTF2.2 (9 feature types accepted): CDS, start_codon, stop_codon,\n5UTR, 3UTR, inter, inter_CNS, intron_CNS and exon\nGTF2.1 (6 feature types accepted): CDS, start_codon, stop_codon,\nexon, 5UTR, 3UTR\nGTF2 (4 feature types accepted): CDS, start_codon, stop_codon,\nexon\nGTF1 (5 feature types accepted): CDS, start_codon, stop_codon,\nexon, intron")), ToolInput(tag="in_relax", input_type=String(optional=True), prefix="--relax", doc=InputDocumentation(doc="option avoid to apply strict GTF format specification. All\nfeature type will be kept. No modification e.g. mRNA to\ntranscript. No filtering i.e. feature type not accepted by GTF\nformat are kept. gene_id and transcript_id attributes will be\nadded, and the attributes will follow the GTF formating.")), ToolInput(tag="in_outfile", input_type=File(optional=True), prefix="--outfile", doc=InputDocumentation(doc="Output GTF file. If no output file is specified, the output will\nbe written to STDOUT.")), ToolInput(tag="in_title", input_type=String(), position=0, doc=InputDocumentation(doc=": _gff25_string")), ToolInput(tag="in_usage", input_type=String(), position=1, doc=InputDocumentation(doc=": $gffstr = $gffio->_gff2_string")), ToolInput(tag="in_args", input_type=String(), position=0, doc=InputDocumentation(doc=": A Bio::SeqFeatureI implementing object to be GFF2.5-stringified")), ToolInput(tag="in_agat_convert_sp_gfftwogtfdotpl", input_type=Int(), position=0, doc=InputDocumentation(doc="Description:"))], outputs=[ToolOutput(tag="out_outfile", output_type=File(optional=True), selector=InputSelector(input_to_select="in_outfile", type_hint=File()), doc=OutputDocumentation(doc="Output GTF file. If no output file is specified, the output will\nbe written to STDOUT."))], container="quay.io/biocontainers/agat:0.6.1--pl5262r35hdfd78af_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Agat_Convert_Sp_Gff2Gtf_Pl_V0_1_0().translate("wdl")

