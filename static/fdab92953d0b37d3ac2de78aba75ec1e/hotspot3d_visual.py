from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Directory

Hotspot3D_Visual_V0_1_0 = CommandToolBuilder(tool="hotspot3d_visual", base_command=["hotspot3d", "visual"], inputs=[ToolInput(tag="in_clusters_file", input_type=Boolean(optional=True), prefix="--clusters-file", doc=InputDocumentation(doc="Clusters file")), ToolInput(tag="in_pdb", input_type=Boolean(optional=True), prefix="--pdb", doc=InputDocumentation(doc="PDB ID on which to view clusters\nAT LEAST ONE")), ToolInput(tag="in_pairwise_file", input_type=Boolean(optional=True), prefix="--pairwise-file", doc=InputDocumentation(doc="A .pairwise file")), ToolInput(tag="in_mu_sites_file", input_type=Boolean(optional=True), prefix="--musites-file", doc=InputDocumentation(doc="A .musites file")), ToolInput(tag="in_sites_file", input_type=Boolean(optional=True), prefix="--sites-file", doc=InputDocumentation(doc="A .sites file")), ToolInput(tag="in_drug_pairs_file", input_type=Boolean(optional=True), prefix="--drug-pairs-file", doc=InputDocumentation(doc="A .drug*clean file (either target or nontarget)\nOPTIONAL")), ToolInput(tag="in_output_file", input_type=File(optional=True), prefix="--output-file", doc=InputDocumentation(doc="Output filename for single PyMol script, default: hotspot3d.visual.pml")), ToolInput(tag="in_pymol", input_type=Boolean(optional=True), prefix="--pymol", doc=InputDocumentation(doc="PyMoL program location, default: /usr/bin/pymol")), ToolInput(tag="in_output_dir", input_type=Directory(optional=True), prefix="--output-dir", doc=InputDocumentation(doc="Output directory for multiple PyMol scripts, current working directory")), ToolInput(tag="in_pdb_dir", input_type=Boolean(optional=True), prefix="--pdb-dir", doc=InputDocumentation(doc="PDB file directory, default: current working directory")), ToolInput(tag="in_bg_color", input_type=Boolean(optional=True), prefix="--bg-color", doc=InputDocumentation(doc="background color, default: white")), ToolInput(tag="in_mut_color", input_type=Boolean(optional=True), prefix="--mut-color", doc=InputDocumentation(doc="mutation color, default: red")), ToolInput(tag="in_mut_style", input_type=Boolean(optional=True), prefix="--mut-style", doc=InputDocumentation(doc="mutation style, default: spheres")), ToolInput(tag="in_site_color", input_type=Boolean(optional=True), prefix="--site-color", doc=InputDocumentation(doc="site color, default: blue")), ToolInput(tag="in_site_style", input_type=Boolean(optional=True), prefix="--site-style", doc=InputDocumentation(doc="site style, default: sticks")), ToolInput(tag="in_compound_color", input_type=Boolean(optional=True), prefix="--compound-color", doc=InputDocumentation(doc="compound color, default: util.cbag")), ToolInput(tag="in_compound_style", input_type=Boolean(optional=True), prefix="--compound-style", doc=InputDocumentation(doc="compound style, default: sticks if compound-color, util.cbag otherwise")), ToolInput(tag="in_script_only", input_type=File(optional=True), prefix="--script-only", doc=InputDocumentation(doc="If included (on), pymol is not run with new <output-file> when finished, default: off")), ToolInput(tag="in_clusters_file_type", input_type=Boolean(optional=True), prefix="--clusters-file-type", doc=InputDocumentation(doc="which clustering module created your clusters-file? network or density, default: network"))], outputs=[ToolOutput(tag="out_output_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_file", type_hint=File()), doc=OutputDocumentation(doc="Output filename for single PyMol script, default: hotspot3d.visual.pml")), ToolOutput(tag="out_output_dir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output_dir", type_hint=File()), doc=OutputDocumentation(doc="Output directory for multiple PyMol scripts, current working directory")), ToolOutput(tag="out_script_only", output_type=File(optional=True), selector=InputSelector(input_to_select="in_script_only", type_hint=File()), doc=OutputDocumentation(doc="If included (on), pymol is not run with new <output-file> when finished, default: off"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Hotspot3D_Visual_V0_1_0().translate("wdl", allow_empty_container=True)

