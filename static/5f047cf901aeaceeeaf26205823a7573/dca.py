from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, Boolean, String, Float, File

Dca_V0_1_0 = CommandToolBuilder(tool="dca", base_command=["dca"], inputs=[ToolInput(tag="in_norm_type", input_type=Int(optional=True), prefix="--normtype", doc=InputDocumentation(doc="Type of size factor estimation. Possible values:\ndeseq, zheng. (default: zheng)")), ToolInput(tag="in_transpose", input_type=Boolean(optional=True), prefix="--transpose", doc=InputDocumentation(doc="Transpose input matrix (default: False)")), ToolInput(tag="in_test_split", input_type=Boolean(optional=True), prefix="--testsplit", doc=InputDocumentation(doc="Use one fold as a test set (default: False)")), ToolInput(tag="in_type", input_type=String(optional=True), prefix="--type", doc=InputDocumentation(doc="Type of autoencoder. Possible values: normal, poisson,\nnb, nb-shared, nb-conddisp (default), nb-fork, zinb,\nzinb-shared, zinb-conddisp( zinb-fork")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of threads for training (default is all cores)")), ToolInput(tag="in_batch_size", input_type=Int(optional=True), prefix="--batchsize", doc=InputDocumentation(doc="Batch size (default:32)")), ToolInput(tag="in_size_factors", input_type=Boolean(optional=True), prefix="--sizefactors", doc=InputDocumentation(doc="Normalize means by library size (default: True)")), ToolInput(tag="in_no_size_factors", input_type=Boolean(optional=True), prefix="--nosizefactors", doc=InputDocumentation(doc="Do not normalize means by library size")), ToolInput(tag="in_norm_input", input_type=Boolean(optional=True), prefix="--norminput", doc=InputDocumentation(doc="Zero-mean normalize input (default: True)")), ToolInput(tag="in_no_norm_input", input_type=Boolean(optional=True), prefix="--nonorminput", doc=InputDocumentation(doc="Do not zero-mean normalize inputs")), ToolInput(tag="in_login_put", input_type=Boolean(optional=True), prefix="--loginput", doc=InputDocumentation(doc="Log-transform input (default: True)")), ToolInput(tag="in_no_login_put", input_type=Boolean(optional=True), prefix="--nologinput", doc=InputDocumentation(doc="Do not log-transform inputs")), ToolInput(tag="in_dropout_rate", input_type=Int(optional=True), prefix="--dropoutrate", doc=InputDocumentation(doc="Dropout rate (default: 0)")), ToolInput(tag="in_batch_norm", input_type=Boolean(optional=True), prefix="--batchnorm", doc=InputDocumentation(doc="Batchnorm (default: True)")), ToolInput(tag="in_no_batch_norm", input_type=Boolean(optional=True), prefix="--nobatchnorm", doc=InputDocumentation(doc="Do not use batchnorm")), ToolInput(tag="in_l_two", input_type=Int(optional=True), prefix="--l2", doc=InputDocumentation(doc="L2 regularization coefficient (default: 0.0)")), ToolInput(tag="in_lone", input_type=Int(optional=True), prefix="--l1", doc=InputDocumentation(doc="L1 regularization coefficient (default: 0.0)")), ToolInput(tag="in_l_two_enc", input_type=Int(optional=True), prefix="--l2enc", doc=InputDocumentation(doc="Encoder-specific L2 regularization coefficient\n(default: 0.0)")), ToolInput(tag="in_lone_enc", input_type=Int(optional=True), prefix="--l1enc", doc=InputDocumentation(doc="Encoder-specific L1 regularization coefficient\n(default: 0.0)")), ToolInput(tag="in_ridge", input_type=Float(optional=True), prefix="--ridge", doc=InputDocumentation(doc="L2 regularization coefficient for dropout\nprobabilities (default: 0.0)")), ToolInput(tag="in_grad_clip", input_type=Float(optional=True), prefix="--gradclip", doc=InputDocumentation(doc="Clip grad values (default: 5.0)")), ToolInput(tag="in_activation", input_type=String(optional=True), prefix="--activation", doc=InputDocumentation(doc="Activation function of hidden units (default: relu)")), ToolInput(tag="in_optimizer", input_type=String(optional=True), prefix="--optimizer", doc=InputDocumentation(doc="Optimization method (default: RMSprop)")), ToolInput(tag="in_in_it", input_type=String(optional=True), prefix="--init", doc=InputDocumentation(doc="Initialization method for weights (default:\nglorot_uniform)")), ToolInput(tag="in_epochs", input_type=Int(optional=True), prefix="--epochs", doc=InputDocumentation(doc="Max number of epochs to continue training in case of\nno improvement on validation loss (default: 300)")), ToolInput(tag="in_early_stop", input_type=Int(optional=True), prefix="--earlystop", doc=InputDocumentation(doc="Number of epochs to stop training if no improvement in\nloss occurs (default: 15)")), ToolInput(tag="in_reduce_lr", input_type=Int(optional=True), prefix="--reducelr", doc=InputDocumentation(doc="Number of epochs to reduce learning rate if no\nimprovement in loss occurs (default: 10)")), ToolInput(tag="in_hidden_size", input_type=Int(optional=True), prefix="--hiddensize", doc=InputDocumentation(doc="Size of hidden layers (default: 64,32,64)")), ToolInput(tag="in_input_dropout", input_type=String(optional=True), prefix="--inputdropout", doc=InputDocumentation(doc="Input layer dropout probability")), ToolInput(tag="in_learning_rate", input_type=Float(optional=True), prefix="--learningrate", doc=InputDocumentation(doc="Learning rate (default: 0.001)")), ToolInput(tag="in_save_weights", input_type=Boolean(optional=True), prefix="--saveweights", doc=InputDocumentation(doc="Save weights (default: False)")), ToolInput(tag="in_no_save_weights", input_type=Boolean(optional=True), prefix="--no-saveweights", doc=InputDocumentation(doc="Do not save weights")), ToolInput(tag="in_hyper", input_type=Boolean(optional=True), prefix="--hyper", doc=InputDocumentation(doc="Optimizer hyperparameters (default: False)")), ToolInput(tag="in_hyper_n", input_type=Int(optional=True), prefix="--hypern", doc=InputDocumentation(doc="Number of samples drawn from hyperparameter\ndistributions during optimization. (default: 1000)")), ToolInput(tag="in_hyper_epoch", input_type=Int(optional=True), prefix="--hyperepoch", doc=InputDocumentation(doc="Number of epochs used in each hyperpar optimization\niteration. (default: 100)")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="Enable debugging. Checks whether every term in loss\nfunctions is finite. (default: False)")), ToolInput(tag="in_tensor_board", input_type=Boolean(optional=True), prefix="--tensorboard", doc=InputDocumentation(doc="Use tensorboard for saving weight distributions and\nvisualization. (default: False)")), ToolInput(tag="in_check_counts", input_type=Boolean(optional=True), prefix="--checkcounts", doc=InputDocumentation(doc="Check if the expression matrix has raw (unnormalized)\ncounts (default: True)")), ToolInput(tag="in_no_check_counts", input_type=Boolean(optional=True), prefix="--nocheckcounts", doc=InputDocumentation(doc="Do not check if the expression matrix has raw\n(unnormalized) counts")), ToolInput(tag="in_de_noise_subset", input_type=File(optional=True), prefix="--denoisesubset", doc=InputDocumentation(doc="Perform denoising only for the subset of genes in the\ngiven file. Gene names should be line separated.\n")), ToolInput(tag="in_input", input_type=String(), position=0, doc=InputDocumentation(doc="Input is raw count data in TSV/CSV or H5AD (anndata)\nformat. Row/col names are mandatory. Note that TSV/CSV\nfiles must be in gene x cell layout where rows are\ngenes and cols are cells (scRNA-seq convention).Use\nthe -t/--transpose option if your count matrix in cell\nx gene layout. H5AD files must be in cell x gene\nformat (stats and scanpy convention).")), ToolInput(tag="in_output_dir", input_type=String(), position=1, doc=InputDocumentation(doc="The path of the output directory"))], outputs=[], container="quay.io/biocontainers/dca:0.3.2--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Dca_V0_1_0().translate("wdl")

