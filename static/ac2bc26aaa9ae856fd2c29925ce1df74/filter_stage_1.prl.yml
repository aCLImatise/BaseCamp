!Command
command:
- filter-stage-1.prl
positional:
- !Positional
  optional: false
  position: 0
  name: output.
  description: SYNOPSIS
- !Positional
  optional: false
  position: 0
  name: executable.
  description: DESCRIPTION
named: []
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "NAME\n    filter-stage-1.prl -- a first stage post-processing tool for\
  \ RepeatScout\n    output.\n\nSYNOPSIS\n    cat repeats.fa | filter-stage-1.prl\
  \ > repeats-filtered.prl\n\nOPTIONS\n    none other than \"-h\" (the output of which\
  \ you're reading), but you will\n    either want trf and dustmasker in your PATH,\
  \ or you will want to set the\n    environment variables TRF_COMMAND and DUSTMASKER_COMMAND\
  \ to provide the\n    executable.\n\nDESCRIPTION\n    This tool takes a repeat library,\
  \ which is a Fasta-formatted sequence\n    file, and filters out any sequence that\
  \ is deemed to be more than 50%\n    low-complexity by either TRF or dustmasker\
  \ or both. Note that one\n    algorithm needs to make the determination; we don't\
  \ check the total\n    number of unique bases masked out by TRF and dustmasker individually.\n\
  \nENVIRONMENT VARIABLES\n    In order for this program to find TRF and dustmasker,\
  \ you need to either\n    place said programs in your PATH, or you need to add the\
  \ environment\n    variables TRF_COMMAND and DUSTMASKER_COMMAND. The value of those\n\
  \    variables should be the path at which the respective program can be\n    found.\n\
  \n"
generated_using:
- -h
docker_image:
