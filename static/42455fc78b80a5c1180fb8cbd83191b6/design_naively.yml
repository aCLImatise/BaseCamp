!Command
positional:
- !Positional
  description: Label for the target dataset
  position: 0
  name: dataset
  optional: false
named:
- !Flag
  description: Add to the output the reverse complement of each probe
  synonyms:
  - --add-reverse-complements
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: (Optional) Use only the first N target genomes in the dataset
  synonyms:
  - --limit-target-genomes
  args: !SimpleFlagArg
    name: LIMIT_TARGET_GENOMES
  optional: true
- !Flag
  description: (Optional) Randomly select N target genomes in the dataset with replacement
  synonyms:
  - --limit-target-genomes-randomly-with-replacement
  args: !SimpleFlagArg
    name: LIMIT_TARGET_GENOMES_RANDOMLY_WITH_REPLACEMENT
  optional: true
- !Flag
  description: Print analysis of the probe set's coverage
  synonyms:
  - --print-analysis
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Debug output
  synonyms:
  - --debug
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Verbose output
  synonyms:
  - --verbose
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ''
  synonyms:
  - -pl
  args: !SimpleFlagArg
    name: PROBE_LENGTH
  optional: true
- !Flag
  description: ''
  synonyms:
  - -ps
  args: !SimpleFlagArg
    name: PROBE_STRIDE
  optional: true
command:
- design_naively.py
parent:
subcommands: []
help_flag: !Flag
  description: ''
  synonyms:
  - -h
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: show program's version number and exit
  synonyms:
  - -V
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "usage: design_naively.py [-h] [-pl PROBE_LENGTH] [-ps PROBE_STRIDE]\n\
  \                         [-nrf NAIVE_REDUNDANT_FILTER NAIVE_REDUNDANT_FILTER]\n\
  \                         [-dsf DOMINATING_SET_FILTER DOMINATING_SET_FILTER]\n \
  \                        [--add-reverse-complements]\n                         [--limit-target-genomes\
  \ LIMIT_TARGET_GENOMES]\n                         [--limit-target-genomes-randomly-with-replacement\
  \ LIMIT_TARGET_GENOMES_RANDOMLY_WITH_REPLACEMENT]\n                         [--print-analysis]\
  \ [--debug] [--verbose] [-V]\n                         dataset\n\npositional arguments:\n\
  \  dataset               Label for the target dataset\n\noptional arguments:\n \
  \ -h, --help            show this help message and exit\n  -pl PROBE_LENGTH, --probe-length\
  \ PROBE_LENGTH\n                        (Optional) The number of bp in each probe\n\
  \  -ps PROBE_STRIDE, --probe-stride PROBE_STRIDE\n                        (Optional)\
  \ Generate candidate probes from the input\n                        that are separated\
  \ by this number of bp\n  -nrf NAIVE_REDUNDANT_FILTER NAIVE_REDUNDANT_FILTER, --naive-redundant-filter\
  \ NAIVE_REDUNDANT_FILTER NAIVE_REDUNDANT_FILTER\n                        Args: <MISMATCHES>\
  \ <LCF_THRES>. Use the 'naive\n                        redundant filter' -- i.e.,\
  \ iterate through a list of\n                        probes and, for each probe\
  \ p, remove the following\n                        probes that are redundant to\
  \ p. Deem one probe\n                        redundant to another if the longest\
  \ common substring\n                        between them, up to MISMATCHES mismatches,\
  \ is >=\n                        LCF_THRES.\n  -dsf DOMINATING_SET_FILTER DOMINATING_SET_FILTER,\
  \ --dominating-set-filter DOMINATING_SET_FILTER DOMINATING_SET_FILTER\n        \
  \                Args: <MISMATCHES> <LCF_THRES>. Use the 'dominating\n         \
  \               set filter' -- i.e., filter redundant probes by\n              \
  \          constructing a graph connecting redundant probes and\n              \
  \          approximating the smallest dominating set. Deem one\n               \
  \         probe redundant to another if the longest common\n                   \
  \     substring between them, up to MISMATCHES mismatches,\n                   \
  \     is >= LCF_THRES.\n  --add-reverse-complements\n                        Add\
  \ to the output the reverse complement of each probe\n  --limit-target-genomes LIMIT_TARGET_GENOMES\n\
  \                        (Optional) Use only the first N target genomes in the\n\
  \                        dataset\n  --limit-target-genomes-randomly-with-replacement\
  \ LIMIT_TARGET_GENOMES_RANDOMLY_WITH_REPLACEMENT\n                        (Optional)\
  \ Randomly select N target genomes in the\n                        dataset with\
  \ replacement\n  --print-analysis      Print analysis of the probe set's coverage\n\
  \  --debug               Debug output\n  --verbose             Verbose output\n\
  \  -V, --version         show program's version number and exit\n"
generated_using:
- --help
