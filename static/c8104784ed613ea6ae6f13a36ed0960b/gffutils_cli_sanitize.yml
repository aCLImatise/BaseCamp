!Command
command:
- gffutils-cli
- sanitize
positional:
- !Positional
  optional: false
  position: 0
  name: filename
  description: GFF or GTF file to use (or GFF database.)
named:
- !Flag
  optional: true
  synonyms:
  - --in-memory
  description: 'Load GFF into memory for processing. (default: True)'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --in-place
  description: "Sanitize file in-place: overwrites current file with sanitized\nversion.\
    \ (default: False)\n"
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "usage: gffutils-cli sanitize [-h] [--in-memory] [--in-place] filename\n\
  \n    Sanitize a GFF file. Might get merged with clean feature later.\n\n    Cleans\
  \ and adds useful annotations to a GFF file:\n\n      - Ensures that start > end\
  \ in all entries\n      - Adds an entry id (eid) to each entry to make files grep-able\n\
  \n    Outputs result to stdout unless asked to sanitize in place.\n    \n\npositional\
  \ arguments:\n  filename     GFF or GTF file to use (or GFF database.)\n\noptional\
  \ arguments:\n  -h, --help   show this help message and exit\n  --in-memory  Load\
  \ GFF into memory for processing. (default: True)\n  --in-place   Sanitize file\
  \ in-place: overwrites current file with sanitized\n               version. (default:\
  \ False)\n"
generated_using:
- --help
docker_image:
