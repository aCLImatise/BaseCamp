from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Datamash_V0_1_0 = CommandToolBuilder(tool="datamash", base_command=["datamash"], inputs=[ToolInput(tag="in_full", input_type=Boolean(optional=True), prefix="--full", doc=InputDocumentation(doc="print entire input line before op results\n(default: print only the grouped keys)")), ToolInput(tag="in_group", input_type=String(optional=True), prefix="--group", doc=InputDocumentation(doc="[,Y,Z]       group via fields X,[Y,Z];\nequivalent to primary operation 'groupby'")), ToolInput(tag="in_header_in", input_type=Boolean(optional=True), prefix="--header-in", doc=InputDocumentation(doc="first input line is column headers")), ToolInput(tag="in_header_out", input_type=Boolean(optional=True), prefix="--header-out", doc=InputDocumentation(doc="print column headers as first line")), ToolInput(tag="in_headers", input_type=Boolean(optional=True), prefix="--headers", doc=InputDocumentation(doc="same as '--header-in --header-out'")), ToolInput(tag="in_ignore_case", input_type=Boolean(optional=True), prefix="--ignore-case", doc=InputDocumentation(doc="ignore upper/lower case when comparing text;\nthis affects grouping, and string operations")), ToolInput(tag="in_sort", input_type=Boolean(optional=True), prefix="--sort", doc=InputDocumentation(doc="sort the input before grouping; this removes the\nneed to manually pipe the input through 'sort'")), ToolInput(tag="in_no_strict", input_type=Boolean(optional=True), prefix="--no-strict", doc=InputDocumentation(doc="allow lines with varying number of fields")), ToolInput(tag="in_filler", input_type=String(optional=True), prefix="--filler", doc=InputDocumentation(doc="fill missing values with X (default %s)")), ToolInput(tag="in_field_separator", input_type=String(optional=True), prefix="--field-separator", doc=InputDocumentation(doc="use X instead of TAB as field delimiter")), ToolInput(tag="in_narm", input_type=Boolean(optional=True), prefix="--narm", doc=InputDocumentation(doc="skip NA/NaN values")), ToolInput(tag="in_whitespace", input_type=Boolean(optional=True), prefix="--whitespace", doc=InputDocumentation(doc="use whitespace (one or more spaces and/or tabs)\nfor field delimiters")), ToolInput(tag="in_zero_terminated", input_type=Boolean(optional=True), prefix="--zero-terminated", doc=InputDocumentation(doc="end lines with 0 byte, not newline")), ToolInput(tag="in_op", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_fld", input_type=String(optional=True), position=1, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Datamash_V0_1_0().translate("wdl", allow_empty_container=True)

