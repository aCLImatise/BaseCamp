!Command
command:
- get_count_vectors
positional: []
named:
- !Flag
  description: 'Prefix to prepend to output files (default: no prefix)'
  synonyms:
  - --out_prefix
  args: !SimpleFlagArg
    name: OUT_PREFIX
  optional: true
- !Flag
  description: "printf-style format string for output (default:\n'%.8f')"
  synonyms:
  - --format
  args: !SimpleFlagArg
    name: FORMAT
  optional: true
- !Flag
  description: Suppress all warning messages. Cannot use with '-v'.
  synonyms:
  - -q
  - --quiet
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Increase verbosity. With '-v', show every warning.\nWith '-vv', turn\
    \ warnings into exceptions. Cannot use\nwith '-q'. (Default: show each type of\
    \ warning once)"
  synonyms:
  - -v
  - --verbose
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "One or more count or alignment file(s) from a single\nsample or set\
    \ of samples to be pooled."
  synonyms:
  - --count_files
  args: !RepeatFlagArg
    name: COUNT_FILES
  optional: true
- !Flag
  description: "Format of file containing alignments or counts\n(Default: BAM)"
  synonyms:
  - --countfile_format
  args: !ChoiceFlagArg
    choices: !!set
      wiggle:
      bowtie:
      BAM:
      bigwig:
  optional: true
- !Flag
  description: "Whether counts should be normalized to counts per\nmillion (usually\
    \ not. default: False)"
  synonyms:
  - --normalize
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Sum used in normalization of counts and RPKM/RPNT\ncalculations (Default:\
    \ total mapped reads/counts in\ndataset)"
  synonyms:
  - --sum
  args: !SimpleFlagArg
    name: SUM
  optional: true
- !Flag
  description: "Minimum read length required to be included (BAM &\nbowtie files only.\
    \ Default: 25)"
  synonyms:
  - --min_length
  args: !SimpleFlagArg
    name: N
  optional: true
- !Flag
  description: "Maximum read length permitted to be included (BAM &\nbowtie files\
    \ only. Default: 100)"
  synonyms:
  - --max_length
  args: !SimpleFlagArg
    name: N
  optional: true
- !Flag
  description: "Use slower but memory-efficient implementation for big\ngenomes or\
    \ for memory-limited computers. For wiggle &\nbowtie files only."
  synonyms:
  - --big_genome
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Map read alignment to a variable offset from 5'\nposition of read,\
    \ with offset determined by read\nlength. Requires `--offset` below"
  synonyms:
  - --fiveprime_variable
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Map read alignment to 5' position.
  synonyms:
  - --fiveprime
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Map read alignment to 3' position
  synonyms:
  - --threeprime
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Subtract N positions from each end of read, and add\n1/(length-N),\
    \ to each remaining position, where N is\nspecified by `--nibble`"
  synonyms:
  - --center
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "For `--fiveprime` or `--threeprime`, provide an\ninteger representing\
    \ the offset into the read,\nstarting from either the 5' or 3' end, at which data\n\
    should be plotted. For `--fiveprime_variable`, provide\nthe filename of a two-column\
    \ tab-delimited text file,\nin which first column represents read length or the\n\
    special keyword `'default'`, and the second column\nrepresents the offset from\
    \ the five prime end of that\nread length at which the read should be mapped.\n\
    (Default: 0)"
  synonyms:
  - --offset
  args: !SimpleFlagArg
    name: OFFSET
  optional: true
- !Flag
  description: "For use with `--center` only. nt to remove from each\nend of read\
    \ before mapping (Default: 0)"
  synonyms:
  - --nibble
  args: !SimpleFlagArg
    name: N
  optional: true
- !Flag
  description: "[BED | BigBed | GTF2 | GFF3] [infile.[BED | BigBed | GTF2 | GFF3]\
    \ ...]\nZero or more annotation files (max 1 file if BigBed)"
  synonyms:
  - --annotation_files
  args: !SimpleFlagArg
    name: infile.
  optional: true
- !Flag
  description: "Format of annotation_files (Default: GTF2). Note: GFF3\nassembly assumes\
    \ SO v.2.5.2 feature ontologies, which\nmay or may not match your specific file."
  synonyms:
  - --annotation_format
  args: !ChoiceFlagArg
    choices: !!set
      BED:
      BigBed:
      GTF2:
      GFF3:
  optional: true
- !Flag
  description: "If supplied, coding regions will be extended by 3\nnucleotides at\
    \ their 3' ends (except for GTF2 files\nthat explicitly include `stop_codon` features).\
    \ Use if\nyour annotation file excludes stop codons from CDS."
  synonyms:
  - --add_three
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "annotation_files are tabix-compressed and indexed\n(Default: False).\
    \ Ignored for BigBed files."
  synonyms:
  - --tabix
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "annotation_files are sorted by chromosomal position\n(Default: False)"
  synonyms:
  - --sorted
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Number of extra columns in BED file (e.g. in custom\nENCODE formats)\
    \ or list of names for those columns.\n(Default: 0)."
  synonyms:
  - --bed_extra_columns
  args: !RepeatFlagArg
    name: BED_EXTRA_COLUMNS
  optional: true
- !Flag
  description: "Number of extra columns in BED file (e.g. in custom\nENCODE formats)\
    \ or list of names for those columns.\n(Default: 0)."
  synonyms:
  - --mask_bed_extra_columns
  args: !RepeatFlagArg
    name: MASK_BED_EXTRA_COLUMNS
  optional: true
- !Flag
  description: "Maximum desired memory footprint in MB to devote to\nBigBed/BigWig\
    \ files. May be exceeded by large queries.\n(Default: 0, No maximum)"
  synonyms:
  - --maxmem
  args: !SimpleFlagArg
    name: MAXMEM
  optional: true
- !Flag
  description: "Maximum desired memory footprint in MB to devote to\nBigBed/BigWig\
    \ files. May be exceeded by large queries.\n(Default: 0, No maximum)"
  synonyms:
  - --mask_maxmem
  args: !SimpleFlagArg
    name: MASK_MAXMEM
  optional: true
- !Flag
  description: "GFF3 feature types to include as transcripts, even if\nno exons are\
    \ present (for GFF3 only; default: use SO\nv2.5.3 specification)"
  synonyms:
  - --gff_transcript_types
  args: !RepeatFlagArg
    name: GFF_TRANSCRIPT_TYPES
  optional: true
- !Flag
  description: "GFF3 feature types to include as exons (for GFF3 only;\ndefault: use\
    \ SO v2.5.3 specification)"
  synonyms:
  - --gff_exon_types
  args: !RepeatFlagArg
    name: GFF_EXON_TYPES
  optional: true
- !Flag
  description: "GFF3 feature types to include as CDS (for GFF3 only;\ndefault: use\
    \ SO v2.5.3 specification)"
  synonyms:
  - --gff_cds_types
  args: !RepeatFlagArg
    name: GFF_CDS_TYPES
  optional: true
- !Flag
  description: "GFF3 feature types to include as transcripts, even if\nno exons are\
    \ present (for GFF3 only; default: use SO\nv2.5.3 specification)"
  synonyms:
  - --mask_gff_transcript_types
  args: !RepeatFlagArg
    name: MASK_GFF_TRANSCRIPT_TYPES
  optional: true
- !Flag
  description: "GFF3 feature types to include as exons (for GFF3 only;\ndefault: use\
    \ SO v2.5.3 specification)"
  synonyms:
  - --mask_gff_exon_types
  args: !RepeatFlagArg
    name: MASK_GFF_EXON_TYPES
  optional: true
- !Flag
  description: "GFF3 feature types to include as CDS (for GFF3 only;\ndefault: use\
    \ SO v2.5.3 specification)"
  synonyms:
  - --mask_gff_cds_types
  args: !RepeatFlagArg
    name: MASK_GFF_CDS_TYPES
  optional: true
- !Flag
  description: "[BED | BigBed | GTF2 | GFF3 | PSL] [infile.[BED | BigBed | GTF2 |\
    \ GFF3 | PSL] ...]\nZero or more annotation files (max 1 file if BigBed)"
  synonyms:
  - --mask_annotation_files
  args: !SimpleFlagArg
    name: infile.
  optional: true
- !Flag
  description: "Format of mask_annotation_files (Default: GTF2). Note:\nGFF3 assembly\
    \ assumes SO v.2.5.2 feature ontologies,\nwhich may or may not match your specific\
    \ file."
  synonyms:
  - --mask_annotation_format
  args: !ChoiceFlagArg
    choices: !!set
      BED:
      GTF2:
      GFF3:
      PSL:
      BigBed:
  optional: true
- !Flag
  description: "If supplied, coding regions will be extended by 3\nnucleotides at\
    \ their 3' ends (except for GTF2 files\nthat explicitly include `stop_codon` features).\
    \ Use if\nyour annotation file excludes stop codons from CDS."
  synonyms:
  - --mask_add_three
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "mask_annotation_files are tabix-compressed and indexed\n(Default:\
    \ False). Ignored for BigBed files."
  synonyms:
  - --mask_tabix
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "mask_annotation_files are sorted by chromosomal\nposition (Default:\
    \ False)\n"
  synonyms:
  - --mask_sorted
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: get_count_vectors [-h] [-q] [-v]\n                         [--count_files\
  \ COUNT_FILES [COUNT_FILES ...]]\n                         [--countfile_format {BAM,bigwig,bowtie,wiggle}]\n\
  \                         [--normalize] [--sum SUM] [--min_length N]\n         \
  \                [--max_length N] [--big_genome]\n                         [--fiveprime_variable]\
  \ [--fiveprime] [--threeprime]\n                         [--center] [--offset OFFSET]\
  \ [--nibble N]\n                         [--annotation_files infile.[BED | BigBed\
  \ | GTF2 | GFF3]\n                         [infile.[BED | BigBed | GTF2 | GFF3]\
  \ ...]]\n                         [--annotation_format {BED,BigBed,GTF2,GFF3}]\n\
  \                         [--add_three] [--tabix] [--sorted]\n                 \
  \        [--bed_extra_columns BED_EXTRA_COLUMNS [BED_EXTRA_COLUMNS ...]]\n     \
  \                    [--maxmem MAXMEM]\n                         [--gff_transcript_types\
  \ GFF_TRANSCRIPT_TYPES [GFF_TRANSCRIPT_TYPES ...]]\n                         [--gff_exon_types\
  \ GFF_EXON_TYPES [GFF_EXON_TYPES ...]]\n                         [--gff_cds_types\
  \ GFF_CDS_TYPES [GFF_CDS_TYPES ...]]\n                         [--mask_annotation_files\
  \ infile.[BED | BigBed | GTF2 | GFF3 | PSL]\n                         [infile.[BED\
  \ | BigBed | GTF2 | GFF3 | PSL] ...]]\n                         [--mask_annotation_format\
  \ {BED,BigBed,GTF2,GFF3,PSL}]\n                         [--mask_add_three] [--mask_tabix]\
  \ [--mask_sorted]\n                         [--mask_bed_extra_columns MASK_BED_EXTRA_COLUMNS\
  \ [MASK_BED_EXTRA_COLUMNS ...]]\n                         [--mask_maxmem MASK_MAXMEM]\n\
  \                         [--mask_gff_transcript_types MASK_GFF_TRANSCRIPT_TYPES\
  \ [MASK_GFF_TRANSCRIPT_TYPES ...]]\n                         [--mask_gff_exon_types\
  \ MASK_GFF_EXON_TYPES [MASK_GFF_EXON_TYPES ...]]\n                         [--mask_gff_cds_types\
  \ MASK_GFF_CDS_TYPES [MASK_GFF_CDS_TYPES ...]]\n                         [--out_prefix\
  \ OUT_PREFIX] [--format FORMAT]\n                         out_folder\n\n------------------------------------------------------------------------------\n\
  \nFetch vectors of counts at each nucleotide position in one or more\nregions of\
  \ interest (ROIs).\n\nOutput files\n------------\nVectors are saved as individual\
  \ line-delimited files -- one position per line --\nin a user-specified output folder.\
  \ Each file is named for the ROI to which it\ncorresponds. If a mask file -- e.g.\
  \ from  ~plastid.bin.crossmap\n-- is provided, masked positions will be have value\
  \ `nan` in output.\n\n------------------------------------------------------------------------------\n\
  \npositional arguments:\n  out_folder            Folder in which to save output\
  \ vectors\n\noptional arguments:\n  -h, --help            show this help message\
  \ and exit\n  --out_prefix OUT_PREFIX\n                        Prefix to prepend\
  \ to output files (default: no prefix)\n  --format FORMAT       printf-style format\
  \ string for output (default:\n                        '%.8f')\n\nwarning/error\
  \ options:\n  -q, --quiet           Suppress all warning messages. Cannot use with\
  \ '-v'.\n  -v, --verbose         Increase verbosity. With '-v', show every warning.\n\
  \                        With '-vv', turn warnings into exceptions. Cannot use\n\
  \                        with '-q'. (Default: show each type of warning once)\n\n\
  count & alignment file options:\n  Open alignment or count files and optionally\
  \ set mapping rules\n\n  --count_files COUNT_FILES [COUNT_FILES ...]\n         \
  \               One or more count or alignment file(s) from a single\n         \
  \               sample or set of samples to be pooled.\n  --countfile_format {BAM,bigwig,bowtie,wiggle}\n\
  \                        Format of file containing alignments or counts\n      \
  \                  (Default: BAM)\n  --normalize           Whether counts should\
  \ be normalized to counts per\n                        million (usually not. default:\
  \ False)\n  --sum SUM             Sum used in normalization of counts and RPKM/RPNT\n\
  \                        calculations (Default: total mapped reads/counts in\n \
  \                       dataset)\n  --min_length N        Minimum read length required\
  \ to be included (BAM &\n                        bowtie files only. Default: 25)\n\
  \  --max_length N        Maximum read length permitted to be included (BAM &\n \
  \                       bowtie files only. Default: 100)\n  --big_genome       \
  \   Use slower but memory-efficient implementation for big\n                   \
  \     genomes or for memory-limited computers. For wiggle &\n                  \
  \      bowtie files only.\n\nalignment mapping functions (BAM & bowtie files only):\n\
  \  For BAM or bowtie files, one of the mutually exclusive read mapping functions\n\
  \  is required:\n\n  --fiveprime_variable  Map read alignment to a variable offset\
  \ from 5'\n                        position of read, with offset determined by read\n\
  \                        length. Requires `--offset` below\n  --fiveprime      \
  \     Map read alignment to 5' position.\n  --threeprime          Map read alignment\
  \ to 3' position\n  --center              Subtract N positions from each end of\
  \ read, and add\n                        1/(length-N), to each remaining position,\
  \ where N is\n                        specified by `--nibble`\n\nfiltering and alignment\
  \ mapping options:\n  \n  The remaining arguments are optional and affect the behavior\
  \ of specific\n  mapping functions:\n\n  --offset OFFSET       For `--fiveprime`\
  \ or `--threeprime`, provide an\n                        integer representing the\
  \ offset into the read,\n                        starting from either the 5' or\
  \ 3' end, at which data\n                        should be plotted. For `--fiveprime_variable`,\
  \ provide\n                        the filename of a two-column tab-delimited text\
  \ file,\n                        in which first column represents read length or\
  \ the\n                        special keyword `'default'`, and the second column\n\
  \                        represents the offset from the five prime end of that\n\
  \                        read length at which the read should be mapped.\n     \
  \                   (Default: 0)\n  --nibble N            For use with `--center`\
  \ only. nt to remove from each\n                        end of read before mapping\
  \ (Default: 0)\n\nannotation file options (one or more annotation files required):\n\
  \  Open one or more genome annotation files\n\n  --annotation_files infile.[BED\
  \ | BigBed | GTF2 | GFF3] [infile.[BED | BigBed | GTF2 | GFF3] ...]\n          \
  \              Zero or more annotation files (max 1 file if BigBed)\n  --annotation_format\
  \ {BED,BigBed,GTF2,GFF3}\n                        Format of annotation_files (Default:\
  \ GTF2). Note: GFF3\n                        assembly assumes SO v.2.5.2 feature\
  \ ontologies, which\n                        may or may not match your specific\
  \ file.\n  --add_three           If supplied, coding regions will be extended by\
  \ 3\n                        nucleotides at their 3' ends (except for GTF2 files\n\
  \                        that explicitly include `stop_codon` features). Use if\n\
  \                        your annotation file excludes stop codons from CDS.\n \
  \ --tabix               annotation_files are tabix-compressed and indexed\n    \
  \                    (Default: False). Ignored for BigBed files.\n  --sorted   \
  \           annotation_files are sorted by chromosomal position\n              \
  \          (Default: False)\n\nBED-specific options:\n  --bed_extra_columns BED_EXTRA_COLUMNS\
  \ [BED_EXTRA_COLUMNS ...]\n                        Number of extra columns in BED\
  \ file (e.g. in custom\n                        ENCODE formats) or list of names\
  \ for those columns.\n                        (Default: 0).\n  --mask_bed_extra_columns\
  \ MASK_BED_EXTRA_COLUMNS [MASK_BED_EXTRA_COLUMNS ...]\n                        Number\
  \ of extra columns in BED file (e.g. in custom\n                        ENCODE formats)\
  \ or list of names for those columns.\n                        (Default: 0).\n\n\
  BigBed-specific options:\n  --maxmem MAXMEM       Maximum desired memory footprint\
  \ in MB to devote to\n                        BigBed/BigWig files. May be exceeded\
  \ by large queries.\n                        (Default: 0, No maximum)\n  --mask_maxmem\
  \ MASK_MAXMEM\n                        Maximum desired memory footprint in MB to\
  \ devote to\n                        BigBed/BigWig files. May be exceeded by large\
  \ queries.\n                        (Default: 0, No maximum)\n\nGFF3-specific options:\n\
  \  --gff_transcript_types GFF_TRANSCRIPT_TYPES [GFF_TRANSCRIPT_TYPES ...]\n    \
  \                    GFF3 feature types to include as transcripts, even if\n   \
  \                     no exons are present (for GFF3 only; default: use SO\n   \
  \                     v2.5.3 specification)\n  --gff_exon_types GFF_EXON_TYPES [GFF_EXON_TYPES\
  \ ...]\n                        GFF3 feature types to include as exons (for GFF3\
  \ only;\n                        default: use SO v2.5.3 specification)\n  --gff_cds_types\
  \ GFF_CDS_TYPES [GFF_CDS_TYPES ...]\n                        GFF3 feature types\
  \ to include as CDS (for GFF3 only;\n                        default: use SO v2.5.3\
  \ specification)\n  --mask_gff_transcript_types MASK_GFF_TRANSCRIPT_TYPES [MASK_GFF_TRANSCRIPT_TYPES\
  \ ...]\n                        GFF3 feature types to include as transcripts, even\
  \ if\n                        no exons are present (for GFF3 only; default: use\
  \ SO\n                        v2.5.3 specification)\n  --mask_gff_exon_types MASK_GFF_EXON_TYPES\
  \ [MASK_GFF_EXON_TYPES ...]\n                        GFF3 feature types to include\
  \ as exons (for GFF3 only;\n                        default: use SO v2.5.3 specification)\n\
  \  --mask_gff_cds_types MASK_GFF_CDS_TYPES [MASK_GFF_CDS_TYPES ...]\n          \
  \              GFF3 feature types to include as CDS (for GFF3 only;\n          \
  \              default: use SO v2.5.3 specification)\n\nmask file options (optional):\n\
  \  Add mask file(s) that annotate regions that should be excluded from analyses\n\
  \  (e.g. repetitive genomic regions).\n\n  --mask_annotation_files infile.[BED |\
  \ BigBed | GTF2 | GFF3 | PSL] [infile.[BED | BigBed | GTF2 | GFF3 | PSL] ...]\n\
  \                        Zero or more annotation files (max 1 file if BigBed)\n\
  \  --mask_annotation_format {BED,BigBed,GTF2,GFF3,PSL}\n                       \
  \ Format of mask_annotation_files (Default: GTF2). Note:\n                     \
  \   GFF3 assembly assumes SO v.2.5.2 feature ontologies,\n                     \
  \   which may or may not match your specific file.\n  --mask_add_three      If supplied,\
  \ coding regions will be extended by 3\n                        nucleotides at their\
  \ 3' ends (except for GTF2 files\n                        that explicitly include\
  \ `stop_codon` features). Use if\n                        your annotation file excludes\
  \ stop codons from CDS.\n  --mask_tabix          mask_annotation_files are tabix-compressed\
  \ and indexed\n                        (Default: False). Ignored for BigBed files.\n\
  \  --mask_sorted         mask_annotation_files are sorted by chromosomal\n     \
  \                   position (Default: False)\n"
generated_using:
- --help
