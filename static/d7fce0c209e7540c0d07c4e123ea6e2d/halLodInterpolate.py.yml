!Command
command:
- halLodInterpolate.py
positional:
- !Positional
  description: input hal
  position: 0
  name: hal
  optional: false
- !Positional
  description: "output text file with links to interpolated hal files.\nwith each\
    \ file is associated a value stating its\nminimum suggested query range (in bases)"
  position: 1
  name: outLodFile
  optional: false
named:
- !Flag
  description: "maximum desired number of blocks to ever display at\nonce. (default:\
    \ 223)"
  synonyms:
  - --maxBlock
  args: !SimpleFlagArg
    name: MAXBLOCK
  optional: true
- !Flag
  description: "scaling factor between two successive levels of detail\n(default:\
    \ 2.5)"
  synonyms:
  - --scale
  args: !SimpleFlagArg
    name: SCALE
  optional: true
- !Flag
  description: "path of directory where interpolated hal files are\nstored. By default\
    \ they will be stored in the same\ndirectory as the input file (default: None)"
  synonyms:
  - --outHalDir
  args: !SimpleFlagArg
    name: OUTHALDIR
  optional: true
- !Flag
  description: "do not overwrite existing hal lod files if they exist.\n(default:\
    \ False)"
  synonyms:
  - --resume
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "maximum DNA sequence query. Generated levels of detail\nwith associated\
    \ minimum query ranges > maxDNA will not\ncontain sequence information. -1 can\
    \ be used to\nspecify that all levels will get sequence (default: 0)"
  synonyms:
  - --maxDNA
  args: !SimpleFlagArg
    name: MAXDNA
  optional: true
- !Flag
  description: "write absolute path of created HAL files in the\noutLodFile. By default,\
    \ the paths are relative to the\npath of the outLodFile. (default: False)"
  synonyms:
  - --absPath
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Generate level of detail X from X-1. By default, all\nlevels of detail\
    \ are generated from the original HAL\n(X=0) (default: False)"
  synonyms:
  - --trans
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Load entire hdf5 arrays into memory, overriding cache.\n(default:\
    \ False)"
  synonyms:
  - --inMemory
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Fraction of bases in step-interval to sample while\nlooking for most\
    \ aligned column. Use default from\nhalLodExtract if not set. To see default value,\
    \ use\nhalLodExtract --help (default: None)"
  synonyms:
  - --probeFrac
  args: !SimpleFlagArg
    name: PROBEFRAC
  optional: true
- !Flag
  description: "Minumum sequence length to sample as fraction of step\nsize: ie sequences\
    \ with length <= floor(minSeqFrac *\nstep) are ignored.Use default from halLodExtract\
    \ if\nnot set. To see default value, use halLodExtract\n--help (default: 0.5)"
  synonyms:
  - --minSeqFrac
  args: !SimpleFlagArg
    name: MINSEQFRAC
  optional: true
- !Flag
  description: "Minimum fraction of a genome that must be covered by\nsequences that\
    \ exceed --minSeqFrac * step. LODs that\nwould violate this threshold will not\
    \ be generated (or\ndisplayed in the browser). This is seen a better than\nthe\
    \ alternative, which is to produce unreasonably\nsparse LODs because half the\
    \ sequences were not\nsampled (default: 0.9)"
  synonyms:
  - --minCovFrac
  args: !SimpleFlagArg
    name: MINCOVFRAC
  optional: true
- !Flag
  description: "Correction factor for scaling. Assume that scaling by\n(X * scaleCorFactor)\
    \ is required to reduce the number\nof blocks by X. (default: 1.0)"
  synonyms:
  - --scaleCorFac
  args: !SimpleFlagArg
    name: SCALECORFAC
  optional: true
- !Flag
  description: 'Number of concurrent processes (default: 1)'
  synonyms:
  - --numProc
  args: !SimpleFlagArg
    name: NUMPROC
  optional: true
- !Flag
  description: 'Chunk size of output hal files. (default: None)'
  synonyms:
  - --chunk
  args: !SimpleFlagArg
    name: CHUNK
  optional: true
- !Flag
  description: "Override other parameters to ensure that Lod0\n(original hal) gets\
    \ range from 0 to at least the\nspecified value (default: 0)"
  synonyms:
  - --minLod0
  args: !SimpleFlagArg
    name: MINLOD0
  optional: true
- !Flag
  description: "Cut-off fraction for determining highest level of\ndetail. Normally,\
    \ --maxBlocks is used to determine the\nstep-size for each LOD, but the exponential\
    \ scaling\ncan cause this to create final (highest) LODs that are\ntoo sparse.\
    \ The lowerthis parameter is (must stay >\n0), the sooner the LOD generation process\
    \ will be cut\noff, and the more fine-grained the highest LOD will be\n(default:\
    \ 0.75)\n"
  synonyms:
  - --cutOff
  args: !SimpleFlagArg
    name: CUTOFF
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: halLodInterpolate.py [-h] [--maxBlock MAXBLOCK] [--scale SCALE]\n\
  \                            [--outHalDir OUTHALDIR] [--resume]\n              \
  \              [--maxDNA MAXDNA] [--absPath] [--trans]\n                       \
  \     [--inMemory] [--probeFrac PROBEFRAC]\n                            [--minSeqFrac\
  \ MINSEQFRAC]\n                            [--minCovFrac MINCOVFRAC]\n         \
  \                   [--scaleCorFac SCALECORFAC] [--numProc NUMPROC]\n          \
  \                  [--chunk CHUNK] [--minLod0 MINLOD0]\n                       \
  \     [--cutOff CUTOFF]\n                            hal outLodFile\n\nGenerate\
  \ a series of HAL files at progressively coarse levels of detail from\nan input\
  \ file by calling halLodExtract\n\npositional arguments:\n  hal                \
  \   input hal\n  outLodFile            output text file with links to interpolated\
  \ hal files.\n                        with each file is associated a value stating\
  \ its\n                        minimum suggested query range (in bases)\n\noptional\
  \ arguments:\n  -h, --help            show this help message and exit\n  --maxBlock\
  \ MAXBLOCK   maximum desired number of blocks to ever display at\n             \
  \           once. (default: 223)\n  --scale SCALE         scaling factor between\
  \ two successive levels of detail\n                        (default: 2.5)\n  --outHalDir\
  \ OUTHALDIR\n                        path of directory where interpolated hal files\
  \ are\n                        stored. By default they will be stored in the same\n\
  \                        directory as the input file (default: None)\n  --resume\
  \              do not overwrite existing hal lod files if they exist.\n        \
  \                (default: False)\n  --maxDNA MAXDNA       maximum DNA sequence\
  \ query. Generated levels of detail\n                        with associated minimum\
  \ query ranges > maxDNA will not\n                        contain sequence information.\
  \ -1 can be used to\n                        specify that all levels will get sequence\
  \ (default: 0)\n  --absPath             write absolute path of created HAL files\
  \ in the\n                        outLodFile. By default, the paths are relative\
  \ to the\n                        path of the outLodFile. (default: False)\n  --trans\
  \               Generate level of detail X from X-1. By default, all\n         \
  \               levels of detail are generated from the original HAL\n         \
  \               (X=0) (default: False)\n  --inMemory            Load entire hdf5\
  \ arrays into memory, overriding cache.\n                        (default: False)\n\
  \  --probeFrac PROBEFRAC\n                        Fraction of bases in step-interval\
  \ to sample while\n                        looking for most aligned column. Use\
  \ default from\n                        halLodExtract if not set. To see default\
  \ value, use\n                        halLodExtract --help (default: None)\n  --minSeqFrac\
  \ MINSEQFRAC\n                        Minumum sequence length to sample as fraction\
  \ of step\n                        size: ie sequences with length <= floor(minSeqFrac\
  \ *\n                        step) are ignored.Use default from halLodExtract if\n\
  \                        not set. To see default value, use halLodExtract\n    \
  \                    --help (default: 0.5)\n  --minCovFrac MINCOVFRAC\n        \
  \                Minimum fraction of a genome that must be covered by\n        \
  \                sequences that exceed --minSeqFrac * step. LODs that\n        \
  \                would violate this threshold will not be generated (or\n      \
  \                  displayed in the browser). This is seen a better than\n     \
  \                   the alternative, which is to produce unreasonably\n        \
  \                sparse LODs because half the sequences were not\n             \
  \           sampled (default: 0.9)\n  --scaleCorFac SCALECORFAC\n              \
  \          Correction factor for scaling. Assume that scaling by\n             \
  \           (X * scaleCorFactor) is required to reduce the number\n            \
  \            of blocks by X. (default: 1.0)\n  --numProc NUMPROC     Number of concurrent\
  \ processes (default: 1)\n  --chunk CHUNK         Chunk size of output hal files.\
  \ (default: None)\n  --minLod0 MINLOD0     Override other parameters to ensure that\
  \ Lod0\n                        (original hal) gets range from 0 to at least the\n\
  \                        specified value (default: 0)\n  --cutOff CUTOFF       Cut-off\
  \ fraction for determining highest level of\n                        detail. Normally,\
  \ --maxBlocks is used to determine the\n                        step-size for each\
  \ LOD, but the exponential scaling\n                        can cause this to create\
  \ final (highest) LODs that are\n                        too sparse. The lowerthis\
  \ parameter is (must stay >\n                        0), the sooner the LOD generation\
  \ process will be cut\n                        off, and the more fine-grained the\
  \ highest LOD will be\n                        (default: 0.75)\n"
generated_using:
- --help
