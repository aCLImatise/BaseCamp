from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, Directory, Boolean

Msi_V0_1_0 = CommandToolBuilder(tool="msi", base_command=["msi"], inputs=[ToolInput(tag="in_toplevel_directory_nanopore", input_type=File(optional=True), prefix="-i", doc=InputDocumentation(doc="- toplevel directory with the nanopore data. fastq files will be searched in $tl_dir/*.fastq.gz. It is expected one file per library/barcode.")), ToolInput(tag="in_minimum_length_reads", input_type=Int(optional=True), prefix="-m", doc=InputDocumentation(doc="- minimum length of the reads")), ToolInput(tag="in_maximum_length_reads", input_type=Int(optional=True), prefix="-M", doc=InputDocumentation(doc="- maximum length of the reads")), ToolInput(tag="in__minimum_quality", input_type=Int(optional=True), prefix="-q", doc=InputDocumentation(doc="- minimum quality")), ToolInput(tag="in__metadata_file", input_type=File(optional=True), prefix="-I", doc=InputDocumentation(doc="- metadata file*")), ToolInput(tag="in_minimum_number_reads", input_type=Int(optional=True), prefix="-C", doc=InputDocumentation(doc="- minimum number of reads that a cluster should have (Default=1)")), ToolInput(tag="in__output_folder", input_type=Directory(optional=True), prefix="-o", doc=InputDocumentation(doc="-  output folder")), ToolInput(tag="in_path_blast_database", input_type=File(optional=True), prefix="-b", doc=InputDocumentation(doc="- path to the blast database")), ToolInput(tag="in_value_passed_", input_type=Int(optional=True), prefix="-B", doc=InputDocumentation(doc="- value passed to blast (minimum % id - value between 0 and 100)")), ToolInput(tag="in_value_minimum_evalue", input_type=Int(optional=True), prefix="-E", doc=InputDocumentation(doc="- value passed to blast (minimum e-value - value < 1)")), ToolInput(tag="in_minimum_cluster_identity", input_type=Int(optional=True), prefix="-T", doc=InputDocumentation(doc="minimum cluster identity (sequences with a value greater or equal are clustered together - value between 0 and 1)")), ToolInput(tag="in_maximum_number_threads", input_type=Int(optional=True), prefix="-t", doc=InputDocumentation(doc="- maximum number of threads")), ToolInput(tag="in_file_overrides_passed", input_type=File(optional=True), prefix="-c", doc=InputDocumentation(doc="- file with default parameters values (overrides values passed in the command line)")), ToolInput(tag="in_run_fastqc_generate", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="- run fastqc to generate qc reports for the fastq files")), ToolInput(tag="in_stop_execution_running", input_type=Boolean(optional=True), prefix="-S", doc=InputDocumentation(doc="- stop execution before running blast")), ToolInput(tag="in__increase_verbosity", input_type=Boolean(optional=True), prefix="-V", doc=InputDocumentation(doc="- increase verbosity"))], outputs=[ToolOutput(tag="out__output_folder", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in__output_folder", type_hint=File()), doc=OutputDocumentation(doc="-  output folder"))], container="quay.io/biocontainers/msi:0.3.5--1", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Msi_V0_1_0().translate("wdl")

