from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean, Int, String

Cmfinder04_V0_1_0 = CommandToolBuilder(tool="cmfinder04", base_command=["cmfinder04"], inputs=[ToolInput(tag="in_input_alignment_file", input_type=File(optional=True), prefix="-a", doc=InputDocumentation(doc=": input alignment file (.sto)")), ToolInput(tag="in_output_alignment_file", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc=": output alignment file (.sto)")), ToolInput(tag="in_degen_rand", input_type=Boolean(optional=True), prefix="--degen-rand", doc=InputDocumentation(doc=": randomize degenerate nucs like CMfinder 0.3")), ToolInput(tag="in_degen_keep", input_type=Boolean(optional=True), prefix="--degen-keep", doc=InputDocumentation(doc=": keep degenerate nucs and marginalize  [default]")), ToolInput(tag="in_fragmentary", input_type=Boolean(optional=True), prefix="--fragmentary", doc=InputDocumentation(doc=": allow truncated hits (independent of --degen-X, unlike pscore)")), ToolInput(tag="in_non_frag_avg_bp_pr", input_type=Boolean(optional=True), prefix="--non-frag-avg-bppr", doc=InputDocumentation(doc=": ignore --fragmentary for calculating average base pair probs")), ToolInput(tag="in_wgs_c", input_type=Boolean(optional=True), prefix="--wgsc", doc=InputDocumentation(doc=": use GSC alg to weight sequences for redundancy")), ToolInput(tag="in_wpb", input_type=Boolean(optional=True), prefix="--wpb", doc=InputDocumentation(doc=": use PB alg to weight sequences for redundancy")), ToolInput(tag="in_ints_like_zero_three", input_type=Boolean(optional=True), prefix="--ints-like-03", doc=InputDocumentation(doc=": use ints for mutual info and partition func, like CMfinder 0.3 did")), ToolInput(tag="in_min_seq_weight", input_type=Int(optional=True), prefix="--min-seq-weight", doc=InputDocumentation(doc=": eliminate seqs from MSA whose TCM weight is below this value  [0.01]")), ToolInput(tag="in_no_elim_iden_seq", input_type=Boolean(optional=True), prefix="--no-elim-iden-seq", doc=InputDocumentation(doc=": don't eliminate identical sequences as candidate members")), ToolInput(tag="in_no_elim_iden_subseq", input_type=Boolean(optional=True), prefix="--no-elim-iden-subseq", doc=InputDocumentation(doc=": don't eliminate identical sub-sequences of other sequences as candidate members")), ToolInput(tag="in_allow_untested_code", input_type=Boolean(optional=True), prefix="--allow-untested-code", doc=InputDocumentation(doc=": run code that was never exercized in tests; don't abort to allow testing")), ToolInput(tag="in_min_c_and_score_in_final", input_type=Int(optional=True), prefix="--min-cand-score-in-final", doc=InputDocumentation(doc=": min cmsearch score to put a seq into the saved MSA.  [0]")), ToolInput(tag="in_bg_score_size", input_type=Int(optional=True), prefix="--bg-score-size", doc=InputDocumentation(doc=": create this many randomized seqs for each input seq to get background score, below which candidates are rejected  [0]")), ToolInput(tag="in_bg_score_evalue", input_type=Int(optional=True), prefix="--bg-score-evalue", doc=InputDocumentation(doc=": try to get an EVD from --bg-score-size, and apply this E-value  [-1]")), ToolInput(tag="in_bg_score_scan_thresh", input_type=Int(optional=True), prefix="--bg-score-scan-thresh", doc=InputDocumentation(doc=": bitscore threshold (-T in cmsearch) to use for scanning --bg-score-size data.  [0]")), ToolInput(tag="in_bg_score_non_frag", input_type=Boolean(optional=True), prefix="--bg-score-non-frag", doc=InputDocumentation(doc=": prevent --bg-score-size scans from using fragmentary modes -- force --nontrunc")), ToolInput(tag="in_filter_non_frag", input_type=Boolean(optional=True), prefix="--filter-non-frag", doc=InputDocumentation(doc=": first run cmsearch with --notrunc, then run normal cmsearch only on the hits from --notrunc")), ToolInput(tag="in_filter_non_frag_pad", input_type=Int(optional=True), prefix="--filter-non-frag-pad", doc=InputDocumentation(doc=": with --filter-non-frag, add this many nucs on 5' and 3' side of the non-frag hits  [20]")), ToolInput(tag="in_max_degen_per_hit", input_type=Int(optional=True), prefix="--max-degen-per-hit", doc=InputDocumentation(doc=": eliminate hits with this many degen nucs or more")), ToolInput(tag="in_max_degen_flanking_n_ucs", input_type=Int(optional=True), prefix="--max-degen-flanking-nucs", doc=InputDocumentation(doc=": consider this many nucs beyond the 5' and 3' ends of each hit in counting degen nucs for --max-degen-per-hit")), ToolInput(tag="in_bad_distal_pairs_to_loop", input_type=Boolean(optional=True), prefix="--bad-distal-pairs-to-loop", doc=InputDocumentation(doc=": shift non-canon pairs in distal part of stems to the terminal loop")), ToolInput(tag="in_bad_distal_pairs_to_loop_only", input_type=Boolean(optional=True), prefix="--bad-distal-pairs-to-loop-only", doc=InputDocumentation(doc=": just run the input msa (-a flag) thru --bad-distal-pairs-to-loop-test and save to output msa (-o flag)")), ToolInput(tag="in_min_term_loop_n_ucs", input_type=Int(optional=True), prefix="--min-term-loop-nucs", doc=InputDocumentation(doc=": only with --bad-distal-pairs-to-loop, move even good base pairs into loop if there are fewer than this many nucs in term loop.  But leave it alone if bp is truncated (with --fragmentary)")), ToolInput(tag="in_seed", input_type=Int(optional=True), prefix="--seed", doc=InputDocumentation(doc=": set random number generator's seed to <n>  [0]  (n>=0)")), ToolInput(tag="in_evalue", input_type=String(optional=True), prefix="--evalue", doc=InputDocumentation(doc=": use this E-value in ScanCand, in addition to a threshold (note: implies running internal cmcalibrate, which will be very slow)")), ToolInput(tag="in_create_file_on_success", input_type=File(optional=True), prefix="--create-file-on-success", doc=InputDocumentation(doc=": create this file, empty, upon successful completion of the program, for convenience elsewhere")), ToolInput(tag="in_save_after_first_m_step", input_type=Boolean(optional=True), prefix="--save-after-first-M-step", doc=InputDocumentation(doc=": for debugging.  program exits after saving the file")), ToolInput(tag="in_save_in_progress", input_type=Boolean(optional=True), prefix="--save-in-progress", doc=InputDocumentation(doc=": for debugging, save MSA's as we processed")), ToolInput(tag="in_timer_append", input_type=File(optional=True), prefix="--timer-append", doc=InputDocumentation(doc=": append timing stats to tab-delimited file")), ToolInput(tag="in_tail_n", input_type=String(optional=True), prefix="--tailn", doc=InputDocumentation(doc=": pass --gtailn or --ltailn as appropriate to cmcalibrate (default: accept cmcalibrate's default)")), ToolInput(tag="in_local", input_type=Boolean(optional=True), prefix="--local", doc=InputDocumentation(doc=": local mode, i.e. don't pass -g to internal cmsearch")), ToolInput(tag="in_n_off_our_f_five", input_type=Boolean(optional=True), prefix="--noF4F5", doc=InputDocumentation(doc=": set --noF4 and --noF5 (env def) to avoid glocal hmm")), ToolInput(tag="in_max", input_type=Boolean(optional=True), prefix="--max", doc=InputDocumentation(doc=": pass --max to cmsearch (and skip calibrations in cmbuild)")), ToolInput(tag="in_amaa", input_type=Boolean(optional=True), prefix="--amaa", doc=InputDocumentation(doc=": use maximal-alignment accuracy in cmsearch, i.e. don't pass --acyk")), ToolInput(tag="in_cpu", input_type=Int(optional=True), prefix="--cpu", doc=InputDocumentation(doc=": pass to internal cmsearch/cmcalibrate.  --cpu -1 means use all CPUs (default is --cpu 0, which is single-threaded)  [0]  (n>=-1)")), ToolInput(tag="in_p_five_six", input_type=Boolean(optional=True), prefix="--p56", doc=InputDocumentation(doc=": use the default prior from Infernal v0.56 through v1.0.2")), ToolInput(tag="in_prior", input_type=File(optional=True), prefix="--prior", doc=InputDocumentation(doc=": read priors from file <f>")), ToolInput(tag="in_e_ent", input_type=Boolean(optional=True), prefix="--eent", doc=InputDocumentation(doc=": adjust eff seq # to achieve relative entropy target  [default]")), ToolInput(tag="in_en_one", input_type=Boolean(optional=True), prefix="--enone", doc=InputDocumentation(doc=": no effective seq # weighting: just use nseq")), ToolInput(tag="in_emn", input_type=Int(optional=True), prefix="--EmN", doc=InputDocumentation(doc=": number of sampled seqs to use for p7 local MSV calibration  [200]  (n>0)")), ToolInput(tag="in_evn", input_type=Int(optional=True), prefix="--EvN", doc=InputDocumentation(doc=": number of sampled seqs to use for p7 local Vit calibration  [200]  (n>0)")), ToolInput(tag="in_elf_n", input_type=Int(optional=True), prefix="--ElfN", doc=InputDocumentation(doc=": number of sampled seqs to use for p7 local Fwd calibration  [200]  (n>0)")), ToolInput(tag="in_eg_fn", input_type=Int(optional=True), prefix="--EgfN", doc=InputDocumentation(doc=": number of sampled seqs to use for p7 glocal Fwd calibration  [200]  (n>0)")), ToolInput(tag="in_summarize", input_type=Boolean(optional=True), prefix="--summarize", doc=InputDocumentation(doc=": perform functionality like 'summarize' program.  commandline has the .sto file")), ToolInput(tag="in_summarize_gsc", input_type=Boolean(optional=True), prefix="--summarize-gsc", doc=InputDocumentation(doc=": use GSC alg weighting for --summarize")), ToolInput(tag="in_summarize_save_msa", input_type=String(optional=True), prefix="--summarize-save-msa", doc=InputDocumentation(doc=": save MSA used by --summarize, for debugging modifications on loading")), ToolInput(tag="in_input_sto_file", input_type=File(), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output_alignment_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_alignment_file", type_hint=File()), doc=OutputDocumentation(doc=": output alignment file (.sto)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Cmfinder04_V0_1_0().translate("wdl", allow_empty_container=True)

