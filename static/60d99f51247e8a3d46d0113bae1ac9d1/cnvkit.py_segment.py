from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Int, Boolean

Cnvkit_Py_Segment_V0_1_0 = CommandToolBuilder(tool="cnvkit.py_segment", base_command=["cnvkit.py", "segment"], inputs=[ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="Output table file name (CNR-like table of segments,\n.cns).")), ToolInput(tag="in_data_frame", input_type=File(optional=True), prefix="--dataframe", doc=InputDocumentation(doc="File name to save the raw R dataframe emitted by CBS\nor Fused Lasso. (Useful for debugging.)")), ToolInput(tag="in_method", input_type=String(optional=True), prefix="--method", doc=InputDocumentation(doc="Segmentation method (see docs), or 'none' for\nchromosome arm-level averages as segments. [Default:\ncbs]")), ToolInput(tag="in_threshold", input_type=Int(optional=True), prefix="--threshold", doc=InputDocumentation(doc="Significance threshold (p-value or FDR, depending on\nmethod) to accept breakpoints during segmentation. For\nHMM methods, this is the smoothing window size.")), ToolInput(tag="in_drop_low_coverage", input_type=Boolean(optional=True), prefix="--drop-low-coverage", doc=InputDocumentation(doc="Drop very-low-coverage bins before segmentation to\navoid false-positive deletions in poor-quality tumor\nsamples.")), ToolInput(tag="in_drop_outliers", input_type=Int(optional=True), prefix="--drop-outliers", doc=InputDocumentation(doc="Drop outlier bins more than this many multiples of the\n95th quantile away from the average within a rolling\nwindow. Set to 0 for no outlier filtering. [Default:\n10]")), ToolInput(tag="in_r_script_path", input_type=File(optional=True), prefix="--rscript-path", doc=InputDocumentation(doc="Path to the Rscript excecutable to use for running R\ncode. Use this option to specify a non-default R\ninstallation. [Default: Rscript]")), ToolInput(tag="in_number_subprocesses_segment", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="[PROCESSES], --processes [PROCESSES]\nNumber of subprocesses to segment in parallel. Give 0\nor a negative value to use the maximum number of\navailable CPUs. [Default: use 1 process]")), ToolInput(tag="in_smooth_cbs", input_type=Boolean(optional=True), prefix="--smooth-cbs", doc=InputDocumentation(doc="Perform an additional smoothing before CBS\nsegmentation, which in some cases may increase the\nsensitivity. Used only for CBS method.")), ToolInput(tag="in_vcf", input_type=File(optional=True), prefix="--vcf", doc=InputDocumentation(doc="VCF file name containing variants for segmentation by\nallele frequencies.")), ToolInput(tag="in_sample_id", input_type=String(optional=True), prefix="--sample-id", doc=InputDocumentation(doc="Specify the name of the sample in the VCF (-v/--vcf)\nto use for b-allele frequency extraction and as the\ndefault plot title.")), ToolInput(tag="in_normal_id", input_type=String(optional=True), prefix="--normal-id", doc=InputDocumentation(doc="Corresponding normal sample ID in the input VCF\n(-v/--vcf). This sample is used to select only\ngermline SNVs to plot b-allele frequencies.")), ToolInput(tag="in_min_variant_depth", input_type=Int(optional=True), prefix="--min-variant-depth", doc=InputDocumentation(doc="Minimum read depth for a SNV to be displayed in the\nb-allele frequency plot. [Default: 20]")), ToolInput(tag="in_ignore_vcfs_genotypes", input_type=Boolean(optional=True), prefix="-z", doc=InputDocumentation(doc="[ALT_FREQ], --zygosity-freq [ALT_FREQ]\nIgnore VCF's genotypes (GT field) and instead infer\nzygosity from allele frequencies. [Default if used\nwithout a number: 0.25]\n"))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="Output table file name (CNR-like table of segments,\n.cns)."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Cnvkit_Py_Segment_V0_1_0().translate("wdl", allow_empty_container=True)

