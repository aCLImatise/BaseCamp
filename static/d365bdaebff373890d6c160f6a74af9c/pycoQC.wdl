version 1.0

task PycoQC {
  input {
    Boolean? verbose
    Boolean? quiet
    Boolean? summary_file
    Boolean? barcode_file
    Boolean? bam_file
    String? html_outfile
    String? json_outfile
    Int? min_pass_qual
    Int? min_pass_len
    Boolean? filter_calibration
    Boolean? filter_duplicated
    Int? min_barcode_percent
    String? report_title
    String? template_file
    String? config_file
    String? sample
    Boolean? default_config
  }
  command <<<
    pycoQC \
      ~{true="--verbose" false="" verbose} \
      ~{true="--quiet" false="" quiet} \
      ~{true="--summary_file" false="" summary_file} \
      ~{true="--barcode_file" false="" barcode_file} \
      ~{true="--bam_file" false="" bam_file} \
      ~{if defined(html_outfile) then ("--html_outfile " +  '"' + html_outfile + '"') else ""} \
      ~{if defined(json_outfile) then ("--json_outfile " +  '"' + json_outfile + '"') else ""} \
      ~{if defined(min_pass_qual) then ("--min_pass_qual " +  '"' + min_pass_qual + '"') else ""} \
      ~{if defined(min_pass_len) then ("--min_pass_len " +  '"' + min_pass_len + '"') else ""} \
      ~{true="--filter_calibration" false="" filter_calibration} \
      ~{true="--filter_duplicated" false="" filter_duplicated} \
      ~{if defined(min_barcode_percent) then ("--min_barcode_percent " +  '"' + min_barcode_percent + '"') else ""} \
      ~{if defined(report_title) then ("--report_title " +  '"' + report_title + '"') else ""} \
      ~{if defined(template_file) then ("--template_file " +  '"' + template_file + '"') else ""} \
      ~{if defined(config_file) then ("--config_file " +  '"' + config_file + '"') else ""} \
      ~{if defined(sample) then ("--sample " +  '"' + sample + '"') else ""} \
      ~{true="--default_config" false="" default_config}
  >>>
  parameter_meta {
    verbose: "Increase verbosity"
    quiet: "Reduce verbosity"
    summary_file: "[SUMMARY_FILE [SUMMARY_FILE ...]], -f [SUMMARY_FILE [SUMMARY_FILE ...]] Path to a sequencing_summary generated by Albacore 1.0.0 + (read_fast5_basecaller.py) / Guppy 2.1.3+ (guppy_basecaller). One can also pass multiple space separated file paths or a UNIX style regex matching multiple files (Required)"
    barcode_file: "[BARCODE_FILE [BARCODE_FILE ...]], -b [BARCODE_FILE [BARCODE_FILE ...]] Path to the barcode_file generated by Guppy 2.1.3+ (guppy_barcoder) or Deepbinner 0.2.0+. This is not a required file. One can also pass multiple space separated file paths or a UNIX style regex matching multiple files (optional)"
    bam_file: "[BAM_FILE [BAM_FILE ...]], -a [BAM_FILE [BAM_FILE ...]] Path to a Bam file corresponding to reads in the summary_file. Preferably aligned with Minimap2 One can also pass multiple space separated file paths or a UNIX style regex matching multiple files (optional)"
    html_outfile: "Path to an output html file report (required if json_outfile not given)"
    json_outfile: "Path to an output json file report (required if html_outfile not given)"
    min_pass_qual: "Minimum quality to consider a read as 'pass' (default: 7)"
    min_pass_len: "Minimum read length to consider a read as 'pass' (default: 0)"
    filter_calibration: "If given, reads flagged as calibration strand by the basecaller are removed (default: False)"
    filter_duplicated: "If given, duplicated read_ids are removed but the first occurence is kept (Guppy sometimes outputs the same read multiple times) (default: False)"
    min_barcode_percent: "Minimal percent of total reads to retain barcode label. If below, the barcode value is set as `unclassified` (default: 0.1)"
    report_title: "Title to use in the html report (default: PycoQC report)"
    template_file: "Jinja2 html template for the html report (default: )"
    config_file: "Path to a JSON configuration file for the html report. If not provided, looks for it in ~/.pycoQC and ~/.config/pycoQC/config. If it's still not found, falls back to default parameters. The first level keys are the names of the plots to be included. The second level keys are the parameters to pass to each plotting function (default: )\")"
    sample: "If not None a n number of reads will be randomly selected instead of the entire dataset for ploting function (deterministic sampling) (default: 100000)"
    default_config: "Print default configuration file. Can be used to generate a template JSON file (default: False)"
  }
}