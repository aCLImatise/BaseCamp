class: CommandLineTool
id: pythonsh.cwl
inputs:
- id: in_write_files_also
  doc: ": don't write .py[co] files on import; also PYTHONDONTWRITEBYTECODE=x"
  type: boolean?
  inputBinding:
    prefix: -B
- id: in_program_passed_string
  doc: ': program passed in as string (terminates option list)'
  type: string?
  inputBinding:
    prefix: -c
- id: in_debug_output_also
  doc: ': debug output from parser; also PYTHONDEBUG=x'
  type: boolean?
  inputBinding:
    prefix: -d
- id: in_ignore_python_variables
  doc: ': ignore PYTHON* environment variables (such as PYTHONPATH)'
  type: boolean?
  inputBinding:
    prefix: -E
- id: in_inspect_interactively_evenif
  doc: ": inspect interactively after running script; forces a prompt even\nif stdin\
    \ does not appear to be a terminal; also PYTHONINSPECT=x"
  type: boolean?
  inputBinding:
    prefix: -i
- id: in_run_library_module
  doc: ': run library module as a script (terminates option list)'
  type: string?
  inputBinding:
    prefix: -m
- id: in_optimize_generated_bytecode
  doc: ': optimize generated bytecode slightly; also PYTHONOPTIMIZE=x'
  type: boolean?
  inputBinding:
    prefix: -O
- id: in_oo
  doc: ': remove doc-strings in addition to the -O optimizations'
  type: boolean?
  inputBinding:
    prefix: -OO
- id: in_use_pseudorandom_salt
  doc: ": use a pseudo-random salt to make hash() values of various types be\nunpredictable\
    \ between separate invocations of the interpreter, as\na defense against denial-of-service\
    \ attacks"
  type: boolean?
  inputBinding:
    prefix: -R
- id: in_division_options_qold
  doc: ': division options: -Qold (default), -Qwarn, -Qwarnall, -Qnew'
  type: string?
  inputBinding:
    prefix: -Q
- id: in_add_site_directory
  doc: ": don't add user site directory to sys.path; also PYTHONNOUSERSITE"
  type: boolean?
  inputBinding:
    prefix: -s
- id: in__don_initialization
  doc: ": don't imply 'import site' on initialization"
  type: boolean?
  inputBinding:
    prefix: -S
- id: in_issue_warnings_inconsistent
  doc: ': issue warnings about inconsistent tab usage (-tt: issue errors)'
  type: boolean?
  inputBinding:
    prefix: -t
- id: in_unbuffered_binary_stdout
  doc: ": unbuffered binary stdout and stderr; also PYTHONUNBUFFERED=x\nsee man page\
    \ for details on internal buffering relating to '-u'"
  type: boolean?
  inputBinding:
    prefix: -u
- id: in_verbose_trace_import
  doc: ": verbose (trace import statements); also PYTHONVERBOSE=x\ncan be supplied\
    \ multiple times to increase verbosity"
  type: boolean?
  inputBinding:
    prefix: -v
- id: in_print_python_number
  doc: ': print the Python version number and exit (also --version)'
  type: boolean?
  inputBinding:
    prefix: -V
- id: in_warning_control_arg
  doc: ": warning control; arg is action:message:category:module:lineno\nalso PYTHONWARNINGS=arg"
  type: string?
  inputBinding:
    prefix: -W
- id: in_skip_first_line
  doc: ': skip first line of source, allowing use of non-Unix forms of #!cmd'
  type: boolean?
  inputBinding:
    prefix: -x
- id: in_warn_python_incompatibilities
  doc: ': warn about Python 3.x incompatibilities that 2to3 cannot trivially fix'
  type: boolean?
  inputBinding:
    prefix: '-3'
outputs:
- id: out_stdout
  doc: Standard output stream
  type: stdout
hints: []
cwlVersion: v1.1
baseCommand:
- pythonsh
