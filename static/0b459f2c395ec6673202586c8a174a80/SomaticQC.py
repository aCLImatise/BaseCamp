from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean, Int

Somaticqc_V0_1_0 = CommandToolBuilder(tool="SomaticQC", base_command=["SomaticQC"], inputs=[ToolInput(tag="in_tumor_bam", input_type=File(optional=True), prefix="-tumor_bam", doc=InputDocumentation(doc="Input tumor BAM/CRAM file.")), ToolInput(tag="in_normal_bam", input_type=File(optional=True), prefix="-normal_bam", doc=InputDocumentation(doc="Input normal BAM/CRAM file.")), ToolInput(tag="in_somatic_vcf", input_type=File(optional=True), prefix="-somatic_vcf", doc=InputDocumentation(doc="Input somatic VCF file.")), ToolInput(tag="in_out", input_type=File(optional=True), prefix="-out", doc=InputDocumentation(doc="Output qcML file. If unset, writes to STDOUT.\nDefault value: ''")), ToolInput(tag="in_links", input_type=File(optional=True), prefix="-links", doc=InputDocumentation(doc="Files that appear in the link part of the qcML file.\nDefault value: ''")), ToolInput(tag="in_target_bed", input_type=File(optional=True), prefix="-target_bed", doc=InputDocumentation(doc="Target file used for tumor and normal experiment.\nDefault value: ''")), ToolInput(tag="in_target_exons", input_type=File(optional=True), prefix="-target_exons", doc=InputDocumentation(doc="BED file containing target exons, neccessary for TMB calculation. Please provide a file that contains the coordinates of all exons in the reference genome.\nDefault value: ''")), ToolInput(tag="in_blacklist", input_type=File(optional=True), prefix="-blacklist", doc=InputDocumentation(doc="BED file containing regions which are ignored in TMB calculation.\nDefault value: ''")), ToolInput(tag="in_tsg_bed", input_type=File(optional=True), prefix="-tsg_bed", doc=InputDocumentation(doc="BED file containing regions of tumor suppressor genes for TMB calculation.\nDefault value: ''")), ToolInput(tag="in_ref", input_type=File(optional=True), prefix="-ref", doc=InputDocumentation(doc="Reference genome FASTA file. If unset 'reference_genome' from the 'settings.ini' file is used.\nDefault value: ''")), ToolInput(tag="in_skip_plots", input_type=Boolean(optional=True), prefix="-skip_plots", doc=InputDocumentation(doc="Skip plots (intended to increase speed of automated tests).\nDefault value: 'false'")), ToolInput(tag="in_build", input_type=Int(optional=True), prefix="-build", doc=InputDocumentation(doc="Genome build used to generate the input.\nDefault value: 'hg19'\nValid: 'hg19,hg38'")), ToolInput(tag="in_ref_cram", input_type=File(optional=True), prefix="-ref_cram", doc=InputDocumentation(doc="Reference genome for CRAM support (mandatory if CRAM is used). If set, it is used for tumor and normal file.\nDefault value: ''")), ToolInput(tag="in_changelog", input_type=Boolean(optional=True), prefix="--changelog", doc=InputDocumentation(doc="Prints changeloge and exits.")), ToolInput(tag="in_tdx", input_type=Boolean(optional=True), prefix="--tdx", doc=InputDocumentation(doc="Writes a Tool Definition Xml file. The file name is the application name with the suffix '.tdx'."))], outputs=[ToolOutput(tag="out_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out", type_hint=File()), doc=OutputDocumentation(doc="Output qcML file. If unset, writes to STDOUT.\nDefault value: ''"))], container="quay.io/biocontainers/ngs-bits:2021_03--py39h5902420_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Somaticqc_V0_1_0().translate("wdl")

