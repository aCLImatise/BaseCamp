from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean

Pfsearch_V0_1_0 = CommandToolBuilder(tool="pfsearch", base_command=["pfsearch"], inputs=[ToolInput(tag="in_report_optimal_alignment", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc=": report optimal alignment for all sequences.")), ToolInput(tag="in_search_complementary_strand", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc=": search complementary strand of DNA sequences.")), ToolInput(tag="in_input_sequence_file", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc=": input sequence file is in FASTA format.")), ToolInput(tag="in_indicate_level_number", input_type=Boolean(optional=True), prefix="-l", doc=InputDocumentation(doc=": indicate highest cut-off level (number).")), ToolInput(tag="in_indicate_level_text", input_type=Boolean(optional=True), prefix="-L", doc=InputDocumentation(doc=": indicate highest cut-off level (text).")), ToolInput(tag="in_report_individual_matches", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc=": report individual matches for circular profiles.")), ToolInput(tag="in_use_raw_score", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc=": use raw score.")), ToolInput(tag="in_force_profile_disjointness", input_type=Boolean(optional=True), prefix="-u", doc=InputDocumentation(doc=": force profile disjointness to UNIQUE.")), ToolInput(tag="in_valuecutoff_value_forces", input_type=Boolean(optional=True), prefix="-C", doc=InputDocumentation(doc="<value>:\ncut-off value. An integer value forces -r. Same as parameter C.")), ToolInput(tag="in_valueset_normalization_mode", input_type=Boolean(optional=True), prefix="-M", doc=InputDocumentation(doc="<value>:\nset the normalization mode to use for the score computation.\nOverrides the profile PRIORITY parameter.")), ToolInput(tag="in_impose_length_limit", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc=": impose length limit on sequence description.")), ToolInput(tag="in_using_keywordvalue_pairs", input_type=Boolean(optional=True), prefix="-k", doc=InputDocumentation(doc=": output using the xPSA header (using keyword=value pairs).")), ToolInput(tag="in_adding_sequence_matched", input_type=Boolean(optional=True), prefix="-j", doc=InputDocumentation(doc=": output using the xPSA header adding the sequence matched by itself.")), ToolInput(tag="in_list_sequences_matched", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc=": list sequences of the matched regions.")), ToolInput(tag="in_suppress_warnings_stderr", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc=": suppress warnings on stderr.")), ToolInput(tag="in_list_alignments_psa", input_type=Boolean(optional=True), prefix="-x", doc=InputDocumentation(doc=": list alignments in PSA format.")), ToolInput(tag="in_list_alignments_human", input_type=Boolean(optional=True), prefix="-y", doc=InputDocumentation(doc=": list alignments in human readable form.")), ToolInput(tag="in_indicate_profile_start", input_type=Boolean(optional=True), prefix="-z", doc=InputDocumentation(doc=": indicate profile start and stop positions.")), ToolInput(tag="in_valuespecifies_output_width", input_type=Boolean(optional=True), prefix="-W", doc=InputDocumentation(doc="<value>:\nspecifies the output width. Same as parameter W.")), ToolInput(tag="in_abcdfhllmmkrsuvwxyz", input_type=Boolean(optional=True), prefix="-abCdfhlLmMkrsuvWxyz", doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Pfsearch_V0_1_0().translate("wdl", allow_empty_container=True)

