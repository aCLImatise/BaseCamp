!Command
command:
- tr
positional:
- !Positional
  optional: false
  position: 0
  name: CHAR1-CHAR2
  description: all characters from CHAR1 to CHAR2 in ascending order
named:
- !Flag
  optional: true
  synonyms:
  - -c
  - -C
  - --complement
  description: use the complement of SET1
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -d
  - --delete
  description: delete characters in SET1, do not translate
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -s
  - --squeeze-repeats
  description: "replace each sequence of a repeated character\nthat is listed in the\
    \ last specified SET,\nwith a single occurrence of that character"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -t
  - --truncate-set1
  description: first truncate SET1 to length of SET2
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - --help
  description: display this help and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - --version
  description: output version information and exit
  args: !EmptyFlagArg {}
help_text: "Usage: tr [OPTION]... SET1 [SET2]\nTranslate, squeeze, and/or delete characters\
  \ from standard input,\nwriting to standard output.\n\n  -c, -C, --complement  \
  \  use the complement of SET1\n  -d, --delete            delete characters in SET1,\
  \ do not translate\n  -s, --squeeze-repeats   replace each sequence of a repeated\
  \ character\n                            that is listed in the last specified SET,\n\
  \                            with a single occurrence of that character\n  -t, --truncate-set1\
  \     first truncate SET1 to length of SET2\n      --help     display this help\
  \ and exit\n      --version  output version information and exit\n\nSETs are specified\
  \ as strings of characters.  Most represent themselves.\nInterpreted sequences are:\n\
  \n  \\NNN            character with octal value NNN (1 to 3 octal digits)\n  \\\\\
  \              backslash\n  \\a              audible BEL\n  \\b              backspace\n\
  \  \\f              form feed\n  \\n              new line\n  \\r              return\n\
  \  \\t              horizontal tab\n  \\v              vertical tab\n  CHAR1-CHAR2\
  \     all characters from CHAR1 to CHAR2 in ascending order\n  [CHAR*]         in\
  \ SET2, copies of CHAR until length of SET1\n  [CHAR*REPEAT]   REPEAT copies of\
  \ CHAR, REPEAT octal if starting with 0\n  [:alnum:]       all letters and digits\n\
  \  [:alpha:]       all letters\n  [:blank:]       all horizontal whitespace\n  [:cntrl:]\
  \       all control characters\n  [:digit:]       all digits\n  [:graph:]      \
  \ all printable characters, not including space\n  [:lower:]       all lower case\
  \ letters\n  [:print:]       all printable characters, including space\n  [:punct:]\
  \       all punctuation characters\n  [:space:]       all horizontal or vertical\
  \ whitespace\n  [:upper:]       all upper case letters\n  [:xdigit:]      all hexadecimal\
  \ digits\n  [=CHAR=]        all characters which are equivalent to CHAR\n\nTranslation\
  \ occurs if -d is not given and both SET1 and SET2 appear.\n-t may be used only\
  \ when translating.  SET2 is extended to length of\nSET1 by repeating its last character\
  \ as necessary.  Excess characters\nof SET2 are ignored.  Only [:lower:] and [:upper:]\
  \ are guaranteed to\nexpand in ascending order; used in SET2 while translating,\
  \ they may\nonly be used in pairs to specify case conversion.  -s uses the last\n\
  specified SET, and occurs after translation or deletion.\n\nGNU coreutils online\
  \ help: <https://www.gnu.org/software/coreutils/>\nReport any translation bugs to\
  \ <https://translationproject.org/team/>\nFull documentation <https://www.gnu.org/software/coreutils/tr>\n\
  or available locally via: info '(coreutils) tr invocation'\n"
generated_using:
- --help
docker_image:
