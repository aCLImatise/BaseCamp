from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean, Int, String

Libis_V0_1_0 = CommandToolBuilder(tool="LiBis", base_command=["LiBis"], inputs=[ToolInput(tag="in_file", input_type=File(optional=True), prefix="--file", doc=InputDocumentation(doc="Enter a number, 0 means using parameter to set up, 1\nmeans using text file to set up")), ToolInput(tag="in_setting_file", input_type=File(optional=True), prefix="--settingfile", doc=InputDocumentation(doc="Setting txt file name. Ignore if -f is 0.")), ToolInput(tag="in_required_fastq_file", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="[NAME [NAME ...]], --name [NAME [NAME ...]]\nRequired. Fastq file name.")), ToolInput(tag="in_clip", input_type=Int(optional=True), prefix="--clip", doc=InputDocumentation(doc="Clip mode. 0 means close. 1 means open. default: 0")), ToolInput(tag="in_labels_for_samples", input_type=Boolean(optional=True), prefix="-l", doc=InputDocumentation(doc="[LABEL [LABEL ...]], --label [LABEL [LABEL ...]]\nLabels for samples")), ToolInput(tag="in_genome", input_type=Int(optional=True), prefix="--genome", doc=InputDocumentation(doc="Genome the reference belong to.(Use for plotting)\nhg18/hg19/mm10/mm9 and so on. Plotting script will not\navaliable if leave it blank. default=hg38.")), ToolInput(tag="in_window", input_type=Int(optional=True), prefix="--window", doc=InputDocumentation(doc="Window length for clipping mode, default=30")), ToolInput(tag="in_step", input_type=Int(optional=True), prefix="--step", doc=InputDocumentation(doc="Step size for clipping mode.")), ToolInput(tag="in_process", input_type=Int(optional=True), prefix="--process", doc=InputDocumentation(doc="Process using for one pipeline. Normally bsmap will\ncost 8 cpu number. So total will be 8p.")), ToolInput(tag="in_ref", input_type=File(optional=True), prefix="--ref", doc=InputDocumentation(doc="Required. Reference genome file name.")), ToolInput(tag="in_quality_control", input_type=Boolean(optional=True), prefix="--QualityControl", doc=InputDocumentation(doc="Do quality control")), ToolInput(tag="in_trim", input_type=Boolean(optional=True), prefix="--trim", doc=InputDocumentation(doc="Do trimming.")), ToolInput(tag="in_binsize", input_type=Int(optional=True), prefix="--binsize", doc=InputDocumentation(doc="Plot setting. Set the bin size for averaging\nmethylation ratio among samples, default=1000k")), ToolInput(tag="in_filter", input_type=Int(optional=True), prefix="--filter", doc=InputDocumentation(doc="Minimal length for recombined reads")), ToolInput(tag="in_bam", input_type=File(optional=True), prefix="--bam", doc=InputDocumentation(doc="Processed bam file for the first step. If bam files\nare offered here, the first step of bsmap will be\nskipped. BAM files can only be generated by BSMAP.\nDifferent files should be seperated by ','. If there's\nno bam file for part of the samples, leave the space\nblank. For example: a.bam,b.bam,,,,f.bam")), ToolInput(tag="in_m_call", input_type=Boolean(optional=True), prefix="--mcall", doc=InputDocumentation(doc="Run mcall for mapped bams or not")), ToolInput(tag="in_plot", input_type=Boolean(optional=True), prefix="--plot", doc=InputDocumentation(doc="Generate the final report or not")), ToolInput(tag="in_no_check", input_type=Boolean(optional=True), prefix="--nocheck", doc=InputDocumentation(doc="Skip the checking step for result folders. Using this\nparameter may rewrite the previous results.")), ToolInput(tag="in_moab_s_module", input_type=Boolean(optional=True), prefix="--MOABSmodule", doc=InputDocumentation(doc="Run LiBis as MOABS module. Please only apply this when\nintegrating LiBis to MOABS.")), ToolInput(tag="in_multiple_mapping", input_type=Boolean(optional=True), prefix="--multiplemapping", doc=InputDocumentation(doc="Apply multiple mapping after first around bsmap")), ToolInput(tag="in_pair_end_filter", input_type=Boolean(optional=True), prefix="--pairendfilter", doc=InputDocumentation(doc="Apply pairend filter for all LiBis rescued reads. Only\nkeep reads have uniquely mapped pair by BSMAP or\nLiBis.")), ToolInput(tag="in_bam_u", input_type=Boolean(optional=True), prefix="--bamu", doc=InputDocumentation(doc="Given processed bam file contains unmapped reads. Only\nuse with -bam is open.")), ToolInput(tag="in_gzip", input_type=Boolean(optional=True), prefix="--gzip", doc=InputDocumentation(doc="Temporary files are in gz format.")), ToolInput(tag="in_full_mode", input_type=Boolean(optional=True), prefix="--fullmode", doc=InputDocumentation(doc="Keep all temp files.")), ToolInput(tag="in_name", input_type=String(optional=True), position=0, doc=InputDocumentation(doc=""))], outputs=[], container="quay.io/biocontainers/libis:0.1.6--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Libis_V0_1_0().translate("wdl")

