from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean

Msisensor_Pro_Pro_V0_1_0 = CommandToolBuilder(tool="msisensor_pro_pro", base_command=["msisensor-pro", "pro"], inputs=[ToolInput(tag="in_string_homopolymer_microsates", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc="<string>   homopolymer and microsates file")), ToolInput(tag="in_string_bam_file", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="<string>   tumor bam file")), ToolInput(tag="in_string_output_prefix", input_type=Boolean(optional=True), prefix="-o", doc=InputDocumentation(doc="<string>   output prefix")), ToolInput(tag="in_string_file_optional", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc="<string>   bed file, optional")), ToolInput(tag="in_double_minimal_threshold", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="<double>   minimal threshold for instable sites detection (just for tumor only data), default=0.1")), ToolInput(tag="in_int_coverage_threshold", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="<int>      coverage threshold for msi analysis, WXS: 20; WGS: 15, default=1")), ToolInput(tag="in_string_choose_format", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="<string>   choose one region, format: 1:10000000-20000000")), ToolInput(tag="in_int_minimal_homopolymer", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="<int>      minimal homopolymer size for distribution analysis, default=10")), ToolInput(tag="in_int_maximal_homopolymer", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="<int>      maximal homopolymer size for distribution analysis, default=50")), ToolInput(tag="in_int_minimal_microsatellite", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="<int>      minimal microsatellite size for distribution analysis, default=5")), ToolInput(tag="in_int_maximal_size", input_type=Boolean(optional=True), prefix="-w", doc=InputDocumentation(doc="<int>      maximal microsatellite size for distribution analysis, default=40")), ToolInput(tag="in_int_span_size", input_type=Boolean(optional=True), prefix="-u", doc=InputDocumentation(doc="<int>      span size around window for extracting reads, default=500")), ToolInput(tag="in_int_threads_number", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc="<int>      threads number for parallel computing, default=1")), ToolInput(tag="in_int_output_homopolymer", input_type=Boolean(optional=True), prefix="-x", doc=InputDocumentation(doc="<int>      output homopolymer only, 0: no; 1: yes, default=0")), ToolInput(tag="in_int_output_microsatellite", input_type=Boolean(optional=True), prefix="-y", doc=InputDocumentation(doc="<int>      output microsatellite only, 0: no; 1: yes, default=0")), ToolInput(tag="in_int_output_site", input_type=Boolean(optional=True), prefix="-0", doc=InputDocumentation(doc="<int>      output site have no read coverage, 1: no; 0: yes, default=0"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Msisensor_Pro_Pro_V0_1_0().translate("wdl", allow_empty_container=True)

