!Command
positional:
- !Positional
  description: ''
  position: 0
  name: OPTION
  optional: true
named:
- !Flag
  description: same as -dR --preserve=all
  synonyms:
  - -a
  - --archive
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: don't copy the file data, just the attributes
  synonyms:
  - --attributes-only
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '[=CONTROL]       make a backup of each existing destination file'
  synonyms:
  - --backup
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: like --backup but does not accept an argument
  synonyms:
  - -b
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: copy contents of special files when recursive
  synonyms:
  - --copy-contents
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: same as --no-dereference --preserve=links
  synonyms:
  - -d
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: if an existing destination file cannot be opened, remove it and try
    again (this option is ignored when the -n option is also used)
  synonyms:
  - -f
  - --force
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: prompt before overwrite (overrides a previous -n option)
  synonyms:
  - -i
  - --interactive
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: follow command-line symbolic links in SOURCE
  synonyms:
  - -H
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: hard link files instead of copying
  synonyms:
  - -l
  - --link
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: always follow symbolic links in SOURCE
  synonyms:
  - -L
  - --dereference
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: do not overwrite an existing file (overrides a previous -i option)
  synonyms:
  - -n
  - --no-clobber
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: never follow symbolic links in SOURCE
  synonyms:
  - -P
  - --no-dereference
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: same as --preserve=mode,ownership,timestamps
  synonyms:
  - -p
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '[=ATTR_LIST]   preserve the specified attributes (default: mode,ownership,timestamps),
    if possible additional attributes: context, links, xattr, all'
  synonyms:
  - --preserve
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: don't preserve the specified attributes
  synonyms:
  - --no-preserve
  args: !SimpleFlagArg
    name: ATTR_LIST
  optional: true
- !Flag
  description: full source file name under DIRECTORY
  synonyms:
  - --parents
  args: !SimpleFlagArg
    name: use
  optional: true
- !Flag
  description: copy directories recursively
  synonyms:
  - -R
  - -r
  - --recursive
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '[=WHEN]         control clone/CoW copies. See below'
  synonyms:
  - --reflink
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: remove each existing destination file before attempting to open it
    (contrast with --force)
  synonyms:
  - --remove-destination
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: control creation of sparse files. See below
  synonyms:
  - --sparse
  args: !SimpleFlagArg
    name: WHEN
  optional: true
- !Flag
  description: remove any trailing slashes from each SOURCE argument
  synonyms:
  - --strip-trailing-slashes
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: symbolic links instead of copying
  synonyms:
  - -s
  - --symbolic-link
  args: !SimpleFlagArg
    name: make
  optional: true
- !Flag
  description: override the usual backup suffix
  synonyms:
  - -S
  - --suffix
  args: !SimpleFlagArg
    name: SUFFIX
  optional: true
- !Flag
  description: copy all SOURCE arguments into DIRECTORY
  synonyms:
  - -t
  - --target-directory
  args: !SimpleFlagArg
    name: DIRECTORY
  optional: true
- !Flag
  description: DEST as a normal file
  synonyms:
  - -T
  - --no-target-directory
  args: !SimpleFlagArg
    name: treat
  optional: true
- !Flag
  description: only when the SOURCE file is newer than the destination file or when
    the destination file is missing
  synonyms:
  - -u
  - --update
  args: !SimpleFlagArg
    name: copy
  optional: true
- !Flag
  description: what is being done
  synonyms:
  - -v
  - --verbose
  args: !SimpleFlagArg
    name: explain
  optional: true
- !Flag
  description: on this file system
  synonyms:
  - -x
  - --one-file-system
  args: !SimpleFlagArg
    name: stay
  optional: true
- !Flag
  description: set SELinux security context of destination file to default type
  synonyms:
  - -Z
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '[=CTX]          like -Z, or if CTX is specified then set the SELinux
    or SMACK security context to CTX'
  synonyms:
  - --context
  args: !EmptyFlagArg {}
  optional: true
command:
- cp
parent:
subcommands: []
help_flag: !Flag
  description: this help and exit
  synonyms:
  - --help
  args: !SimpleFlagArg
    name: display
  optional: true
usage_flag:
version_flag: !Flag
  description: version information and exit
  synonyms:
  - --version
  args: !SimpleFlagArg
    name: output
  optional: true
help_text: "Usage: cp [OPTION]... [-T] SOURCE DEST\n  or: cp [OPTION]... SOURCE...\
  \ DIRECTORY\n  or: cp [OPTION]... -t DIRECTORY SOURCE...\nCopy SOURCE to DEST, or\
  \ multiple SOURCE(s) to DIRECTORY.\n\nMandatory arguments to long options are mandatory\
  \ for short options too.\n  -a, --archive                same as -dR --preserve=all\n\
  \      --attributes-only        don't copy the file data, just the attributes\n\
  \      --backup[=CONTROL]       make a backup of each existing destination file\n\
  \  -b                           like --backup but does not accept an argument\n\
  \      --copy-contents          copy contents of special files when recursive\n\
  \  -d                           same as --no-dereference --preserve=links\n  -f,\
  \ --force                  if an existing destination file cannot be\n         \
  \                        opened, remove it and try again (this option\n        \
  \                         is ignored when the -n option is also used)\n  -i, --interactive\
  \            prompt before overwrite (overrides a previous -n\n                \
  \                  option)\n  -H                           follow command-line symbolic\
  \ links in SOURCE\n  -l, --link                   hard link files instead of copying\n\
  \  -L, --dereference            always follow symbolic links in SOURCE\n  -n, --no-clobber\
  \             do not overwrite an existing file (overrides\n                   \
  \              a previous -i option)\n  -P, --no-dereference         never follow\
  \ symbolic links in SOURCE\n  -p                           same as --preserve=mode,ownership,timestamps\n\
  \      --preserve[=ATTR_LIST]   preserve the specified attributes (default:\n  \
  \                               mode,ownership,timestamps), if possible\n      \
  \                           additional attributes: context, links, xattr,\n    \
  \                             all\n      --no-preserve=ATTR_LIST don't preserve\
  \ the specified attributes\n      --parents use full source file name under DIRECTORY\n\
  \  -R, -r, --recursive          copy directories recursively\n      --reflink[=WHEN]\
  \         control clone/CoW copies. See below\n      --remove-destination     remove\
  \ each existing destination file before\n                                 attempting\
  \ to open it (contrast with --force)\n      --sparse=WHEN            control creation\
  \ of sparse files. See below\n      --strip-trailing-slashes  remove any trailing\
  \ slashes from each SOURCE\n                                 argument\n  -s, --symbolic-link\
  \ make symbolic links instead of copying\n  -S, --suffix=SUFFIX override the usual\
  \ backup suffix\n  -t, --target-directory=DIRECTORY copy all SOURCE arguments into\
  \ DIRECTORY\n  -T, --no-target-directory treat DEST as a normal file\n  -u, --update\
  \ copy only when the SOURCE file is newer\n                                 than\
  \ the destination file or when the\n                                 destination\
  \ file is missing\n  -v, --verbose explain what is being done\n  -x, --one-file-system\
  \ stay on this file system\n  -Z                           set SELinux security\
  \ context of destination\n                                 file to default type\n\
  \      --context[=CTX]          like -Z, or if CTX is specified then set the\n \
  \                                SELinux or SMACK security context to CTX\n    \
  \  --help display this help and exit\n      --version output version information\
  \ and exit\n\nBy default, sparse SOURCE files are detected by a crude heuristic\
  \ and the\ncorresponding DEST file is made sparse as well.  That is the behavior\n\
  selected by --sparse=auto.  Specify --sparse=always to create a sparse DEST\nfile\
  \ whenever the SOURCE file contains a long enough sequence of zero bytes.\nUse --sparse=never\
  \ to inhibit creation of sparse files.\n\nWhen --reflink[=always] is specified,\
  \ perform a lightweight copy, where the\ndata blocks are copied only when modified.\
  \  If this is not possible the copy\nfails, or if --reflink=auto is specified, fall\
  \ back to a standard copy.\n\nThe backup suffix is '~', unless set with --suffix\
  \ or SIMPLE_BACKUP_SUFFIX.\nThe version control method may be selected via the --backup\
  \ option or through\nthe VERSION_CONTROL environment variable.  Here are the values:\n\
  \n  none, off never make backups (even if --backup is given)\n  numbered, t make\
  \ numbered backups\n  existing, nil numbered if numbered backups exist, simple otherwise\n\
  \  simple, never always make simple backups\n\nAs a special case, cp makes a backup\
  \ of SOURCE when the force and backup\noptions are given and SOURCE and DEST are\
  \ the same name for an existing,\nregular file.\n\nGNU coreutils online help: <http://www.gnu.org/software/coreutils/>\n\
  Full documentation at: <http://www.gnu.org/software/coreutils/cp>\nor available\
  \ locally via: info '(coreutils) cp invocation'\n"
generated_using:
- --help
