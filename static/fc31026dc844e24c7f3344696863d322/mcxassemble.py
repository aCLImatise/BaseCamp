from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Int, Boolean

Mcxassemble_V0_1_0 = CommandToolBuilder(tool="mcxassemble", base_command=["mcxassemble"], inputs=[ToolInput(tag="in_use_baseraw_basehdr", input_type=String(optional=True), prefix="-b", doc=InputDocumentation(doc="use base.raw, base.hdr, and optionally base.map")), ToolInput(tag="in_hdr", input_type=File(optional=True), prefix="-hdr", doc=InputDocumentation(doc="read header file")), ToolInput(tag="in_raw", input_type=File(optional=True), prefix="-raw", doc=InputDocumentation(doc="read raw data file")), ToolInput(tag="in_read_single_data", input_type=File(optional=True), prefix="-i", doc=InputDocumentation(doc="read from single data file")), ToolInput(tag="in_write_file_fname", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="write to file fname")), ToolInput(tag="in_digits", input_type=Int(optional=True), prefix="-digits", doc=InputDocumentation(doc="precision to use in interchange format")), ToolInput(tag="in_xo", input_type=String(optional=True), prefix="-xo", doc=InputDocumentation(doc="write to base.suf (default .sym)")), ToolInput(tag="in_write_binary", input_type=Boolean(optional=True), prefix="--write-binary", doc=InputDocumentation(doc="write result matrices in binary format")), ToolInput(tag="in_write_default_result", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="do not write default symmetrized result")), ToolInput(tag="in_map", input_type=File(optional=True), prefix="-map", doc=InputDocumentation(doc="apply row/col map in file")), ToolInput(tag="in_cmap", input_type=File(optional=True), prefix="-cmap", doc=InputDocumentation(doc="apply col map in file")), ToolInput(tag="in_rtag", input_type=String(optional=True), prefix="-rtag", doc=InputDocumentation(doc="apply row map in base.tag")), ToolInput(tag="in_r_map", input_type=Boolean(optional=True), prefix="--rmap", doc=InputDocumentation(doc="apply row map in base.cmap")), ToolInput(tag="in_tag", input_type=String(optional=True), prefix="-tag", doc=InputDocumentation(doc="apply row/col map in base.tag")), ToolInput(tag="in_ctag", input_type=String(optional=True), prefix="-ctag", doc=InputDocumentation(doc="apply col map in base.tag")), ToolInput(tag="in_skw", input_type=File(optional=True), prefix="-skw", doc=InputDocumentation(doc="write skew matrix to file")), ToolInput(tag="in_prm", input_type=File(optional=True), prefix="-prm", doc=InputDocumentation(doc="write primary result to file")), ToolInput(tag="in_check_result_symmetry", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="check primary result symmetry by creating skew matrix")), ToolInput(tag="in_raw_tf", input_type=Boolean(optional=True), prefix="-raw-tf", doc=InputDocumentation(doc="<func(arg)[, func(arg)]*> apply unary transformations to raw values")), ToolInput(tag="in_prm_tf", input_type=Boolean(optional=True), prefix="-prm-tf", doc=InputDocumentation(doc="<func(arg)[, func(arg)]*> apply unary transformations to primary matrix")), ToolInput(tag="in_sym_tf", input_type=Boolean(optional=True), prefix="-sym-tf", doc=InputDocumentation(doc="<func(arg)[, func(arg)]*> apply unary transformations to symmetrified matrix")), ToolInput(tag="in_rv", input_type=Int(optional=True), prefix="-rv", doc=InputDocumentation(doc="action for repeated vectors")), ToolInput(tag="in_re", input_type=Int(optional=True), prefix="-re", doc=InputDocumentation(doc="action for repeated entries")), ToolInput(tag="in_ri", input_type=Int(optional=True), prefix="-ri", doc=InputDocumentation(doc="action for adding image with mirror")), ToolInput(tag="in_same_entries_matrix", input_type=Int(optional=True), prefix="-r", doc=InputDocumentation(doc="same for entries and vectors and matrix")), ToolInput(tag="in_quiet_re", input_type=Boolean(optional=True), prefix="--quiet-re", doc=InputDocumentation(doc="do not warn for repeated entries")), ToolInput(tag="in_quiet_rv", input_type=Boolean(optional=True), prefix="--quiet-rv", doc=InputDocumentation(doc="do not warn for repeated vectors")), ToolInput(tag="in_the_two_combined", input_type=Boolean(optional=True), prefix="-q", doc=InputDocumentation(doc="the two above combined")), ToolInput(tag="in_help", input_type=Boolean(optional=True), prefix="--help", doc=InputDocumentation(doc="print this help"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Mcxassemble_V0_1_0().translate("wdl", allow_empty_container=True)

