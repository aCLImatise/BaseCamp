from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Int, Boolean, Directory

Prefetch_Orig_2_10_9_V0_1_0 = CommandToolBuilder(tool="prefetch_orig.2.10.9", base_command=["prefetch-orig.2.10.9"], inputs=[ToolInput(tag="in_type", input_type=File(optional=True), prefix="--type", doc=InputDocumentation(doc="Specify file type to download. Default: sra")), ToolInput(tag="in_transport", input_type=String(optional=True), prefix="--transport", doc=InputDocumentation(doc="Transport: one of: fasp; http; both\n[default]. (fasp only; http only; first try\nfasp (ascp), use http if cannot download\nusing fasp).")), ToolInput(tag="in_location", input_type=String(optional=True), prefix="--location", doc=InputDocumentation(doc="Location of data.")), ToolInput(tag="in_min_size", input_type=Int(optional=True), prefix="--min-size", doc=InputDocumentation(doc="Minimum file size to download in KB\n(inclusive).")), ToolInput(tag="in_max_size", input_type=Int(optional=True), prefix="--max-size", doc=InputDocumentation(doc="Maximum file size to download in KB\n(exclusive). Default: 20G")), ToolInput(tag="in_force", input_type=String(optional=True), prefix="--force", doc=InputDocumentation(doc="Force object download: one of: no, yes,\nall, ALL. no [default]: skip download if the\nobject if found and complete; yes: download\nit even if it is found and is complete; all:\nignore lock files (stale locks or it is\nbeing downloaded by another process use\nat your own risk!); ALL: ignore lock files,\nrestart download from beginning.")), ToolInput(tag="in_resume", input_type=String(optional=True), prefix="--resume", doc=InputDocumentation(doc="Resume partial downloads: one of: no, yes\n[default].")), ToolInput(tag="in_verify", input_type=String(optional=True), prefix="--verify", doc=InputDocumentation(doc="Verify after download one of: no, yes\n[default].")), ToolInput(tag="in_progress", input_type=Boolean(optional=True), prefix="--progress", doc=InputDocumentation(doc="Show progress.")), ToolInput(tag="in_heartbeat", input_type=Int(optional=True), prefix="--heartbeat", doc=InputDocumentation(doc="Time period in minutes to display download\nprogress. (0: no progress), default: 1")), ToolInput(tag="in_eliminate_quals", input_type=Boolean(optional=True), prefix="--eliminate-quals", doc=InputDocumentation(doc="Don't download QUALITY column.")), ToolInput(tag="in_check_all", input_type=Boolean(optional=True), prefix="--check-all", doc=InputDocumentation(doc="Double-check all refseqs.")), ToolInput(tag="in_order", input_type=Int(optional=True), prefix="--order", doc=InputDocumentation(doc="Kart prefetch order when downloading\nkart: one of: kart, size. (in kart order, by\nfile size: smallest first), default: size.")), ToolInput(tag="in_rows", input_type=String(optional=True), prefix="--rows", doc=InputDocumentation(doc="Kart rows to download (default all). Row\nlist should be ordered.")), ToolInput(tag="in_perm", input_type=File(optional=True), prefix="--perm", doc=InputDocumentation(doc="PATH to jwt cart file.")), ToolInput(tag="in_ngc", input_type=File(optional=True), prefix="--ngc", doc=InputDocumentation(doc="PATH to ngc file.")), ToolInput(tag="in_cart", input_type=File(optional=True), prefix="--cart", doc=InputDocumentation(doc="To read kart file.")), ToolInput(tag="in_ascp_path", input_type=File(optional=True), prefix="--ascp-path", doc=InputDocumentation(doc="Path to ascp program and\nprivate key file (asperaweb_id_dsa.putty)")), ToolInput(tag="in_ascp_options", input_type=String(optional=True), prefix="--ascp-options", doc=InputDocumentation(doc="Arbitrary options to pass to ascp command")), ToolInput(tag="in_output_directory", input_type=Directory(optional=True), prefix="--output-directory", doc=InputDocumentation(doc="Save files to DIRECTORY/")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Increase the verbosity of the program\nstatus messages. Use multiple times for more\nverbosity. Negates quiet.")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="Turn off all status messages for the\nprogram. Negated by verbose.")), ToolInput(tag="in_option_file", input_type=File(optional=True), prefix="--option-file", doc=InputDocumentation(doc="Read more options and parameters from the")), ToolInput(tag="in_line_dot", input_type=String(), position=0, doc=InputDocumentation(doc="-o|--output-file <FILE>          Write file to FILE when downloading ")), ToolInput(tag="in_quit_dot", input_type=String(), position=0, doc=InputDocumentation(doc="-L|--log-level <level>           Logging level as number or enum string. One ")), ToolInput(tag="in_file_dot", input_type=File(), position=0, doc=InputDocumentation(doc="prefetch-orig.2.10.9 : 2.10.9"))], outputs=[ToolOutput(tag="out_output_directory", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output_directory", type_hint=File()), doc=OutputDocumentation(doc="Save files to DIRECTORY/"))], container="quay.io/biocontainers/sra-tools:2.10.9--pl526haddd2b5_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Prefetch_Orig_2_10_9_V0_1_0().translate("wdl")

