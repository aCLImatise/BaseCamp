!Command
command:
- laser-core
positional:
- !Positional
  optional: false
  position: 0
  name: alignment.
  description: '--interchromosomal                    Search for interchromosomal
    split '
- !Positional
  optional: false
  position: 1
  name: reads.
  description: --interchrom_split_cost arg (=60)     PHRED like cost of an inter-chromosomal
- !Positional
  optional: false
  position: 2
  name: split.
  description: --inversions                          Search for inversion split reads.
- !Positional
  optional: false
  position: 3
  name: pairings.
  description: --anchor_length_increment arg (=4)    Number of characters to increase
    anchor
- !Positional
  optional: false
  position: 0
  name: found.
  description: '--max_anchor_length arg (=30)         Maximal anchor length (if reached
    it '
- !Positional
  optional: false
  position: 0
  name: anchors.
  description: -o [ --anchor_distance ] arg (=600)   Regions size for searching for
    anchors.
- !Positional
  optional: false
  position: 1
  name: header.
  description: '--read_group_sample arg               Sample information for read
    group '
named:
- !Flag
  optional: true
  synonyms:
  - -v
  description: "[ --verbose ]                      Be (very) verbose. CAUTION: produces\
    \ a\nlot of output to stderr."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --single-end
  description: "Process single end reads (instead of\npaired end)."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -X
  description: "[ --skip_non_xa ]                  Skip reads for which other alignments\n\
    exist (i.e. X0+X1>1), but no XA tag is\npresent. Turn on when using BWA."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --max_input_aln
  description: "(=-1)             Maximum number of input anchor\nalignments. If more\
    \ are given, skip\nthis anchor (but not the whole read)."
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - -I
  description: "[ --ignore_wrong_X_tags ]          Do not abort when wrongly set X0/X1\n\
    tags are encountered."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -p
  description: "[ --phred_offset ] arg (=33)       Value to subtract from ASCII code\
    \ to\nget the PHRED quality."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -m
  description: "[ --max_mapping ] arg (=10)        Maximum number of mappings for\
    \ each\nread in a pair. If more mappings are\nfound, the read is skipped."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -c
  description: "[ --cost_threshold ] arg (=115)    Maximum PHRED sum allowed for (split)\n\
    read alignments."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -i
  description: '[ --indel_cost ] arg (=30)         PHRED like cost of an indel.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --affine_gapcosts
  description: "Use affine gapcosts (instead of linear\ngapcosts). If enabled, gap\
    \ open costs\nare given by --indel_cost and gap\nextend costs are given by\n--gap_extend_cost,\
    \ i.e. a gap of length\nk costs indel_cost+k*gap_extend_cost."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --gap_extend_cost
  description: "(=10)           Gap extend cost. Only effective in\nconnection with\
    \ --affine_gapcosts."
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - -s
  description: '[ --split_cost ] arg (=25)         PHRED like cost of splitting an'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --inversion_split_cost
  description: (=45)      PHRED like cost of an inversion split.
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - -d
  description: "[ --secondary_aln_phred_diff ] arg (=29)\nReport/evaluate split alignments\
    \ with a\ndifference of at most this value to the\nbest split alignment."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -a
  description: "[ --min_anchor_length ] arg (=8)   Minimal number of nucleotides on\
    \ each\nsides of a split."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -n
  description: "[ --max_span ] arg (=1000)         Maximal allowed span (i.e. length\
    \ on\nreference) of a split read alignment."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --max_anchors
  description: "(=100)              Maximal allowed anchors per read\nsuffix/prefix."
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - --max_anchor_pairs
  description: (=500)         Maximal allowed number of anchor
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - -N
  description: "[ --max_insert ] arg (=50000)      Maximal allowed internal segment\
    \ size\nwhen pairing alignments for a read\npair."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -S
  description: '[ --output_secondary ]             Also output secondary alignments.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -A
  description: "[ --anchor_search_length ] arg (=20)\nLength of anchor used for searching."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -e
  description: '[ --anchor_errors ] arg (=2)       Allowed errors when searching for'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -t
  description: '[ --anchor_search_iter ] arg (=3)  Anchor search iterations.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -P
  description: "[ --putative_variations ] arg      Filename to write a list of all\n\
    variation candidates to. All candidates\nare written, no matter how weak the\n\
    evidence for them to be true."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -l
  description: "[ --input_length_dist_in ] arg     File with known internal segment\
    \ length\nhistogram to be used to score\nalignments."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -L
  description: "[ --input_length_dist_out ] arg    File to write internal segment\
    \ length\nhistogram for uniquely mappable reads\nto."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -R
  description: "[ --insertion_length_dist ] arg    File to write insertion length\n\
    histogram for uniquely mappable reads\nto."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -D
  description: "[ --deletion_length_dist ] arg     File to write deletion length histogram\n\
    for uniquely mappable reads to."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -T
  description: "[ --threads ] arg (=0)             Number of threads (default: 0 =\n\
    strictly single-threaded)."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -M
  description: "[ --m_in_cigar ]                   Use M for matches and mismatches\
    \ in\nCIGAR strings (instead of '=' and 'X')."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --snp
  description: "Filename to store putative SNP\npositions to."
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - -w
  description: "[ --snp_weight_cutoff ] arg (=3)   Weight cutoff for SNPs to be written\
    \ to\nfilename given as parameter --snp."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --indel_weight_cutoff
  description: "(=3)        Weight cutoff for indels to be written\nto filename given\
    \ as parameter -P."
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - --rightmost
  description: "Report rightmost deletions/insertions\n(default: leftmost)."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --soft_clip
  description: Allow reads to be soft-clipped.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --soft_clip_open_cost
  description: (=35)       Cost for soft clipping a read.
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - --soft_clip_extend_cost
  description: "(=3)      Cost for \"extending\" a soft clip; i.e.,\nsoftclipping\
    \ k characters from a read\nwill cost soft_clip_open_cost+k*soft_cl\nip_extend_cost."
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - --read_group
  description: Read group for all reads.
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - --read_group_library
  description: Library information for read group
  args: !SimpleFlagArg
    name: arg
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "laser-core version: v2.4\nUsage: laser-core [options] <reference.fasta(.gz)>\
  \ <unsplit.1.fastq(.gz)> <unsplit.2.fastq(.gz)>\n       laser-core [options] --single-end\
  \ <reference.fasta(.gz)> <unsplit.fastq(.gz)>\n\nReads BAM format of aligned split\
  \ reads from stdin, joins them,\nand outputs a alignments in BAM format to stdout.\n\
  \n<insert-length-dist>: Insert length distribution as obtained by running\n    \
  \                  insert-length-histogram on a BAM file.\n\nAllowed options:\n\
  \  -v [ --verbose ]                      Be (very) verbose. CAUTION: produces a\
  \ \n                                        lot of output to stderr.\n  --single-end\
  \                          Process single end reads (instead of \n             \
  \                           paired end).\n  -X [ --skip_non_xa ]               \
  \   Skip reads for which other alignments \n                                   \
  \     exist (i.e. X0+X1>1), but no XA tag is \n                                \
  \        present. Turn on when using BWA.\n  --max_input_aln arg (=-1)         \
  \    Maximum number of input anchor \n                                        alignments.\
  \ If more are given, skip \n                                        this anchor\
  \ (but not the whole read).\n  -I [ --ignore_wrong_X_tags ]          Do not abort\
  \ when wrongly set X0/X1 \n                                        tags are encountered.\n\
  \  -p [ --phred_offset ] arg (=33)       Value to subtract from ASCII code to \n\
  \                                        get the PHRED quality.\n  -m [ --max_mapping\
  \ ] arg (=10)        Maximum number of mappings for each \n                    \
  \                    read in a pair. If more mappings are \n                   \
  \                     found, the read is skipped.\n  -c [ --cost_threshold ] arg\
  \ (=115)    Maximum PHRED sum allowed for (split) \n                           \
  \             read alignments.\n  -i [ --indel_cost ] arg (=30)         PHRED like\
  \ cost of an indel.\n  --affine_gapcosts                     Use affine gapcosts\
  \ (instead of linear \n                                        gapcosts). If enabled,\
  \ gap open costs \n                                        are given by --indel_cost\
  \ and gap \n                                        extend costs are given by \n\
  \                                        --gap_extend_cost, i.e. a gap of length\n\
  \                                        k costs indel_cost+k*gap_extend_cost.\n\
  \  --gap_extend_cost arg (=10)           Gap extend cost. Only effective in \n \
  \                                       connection with --affine_gapcosts.\n  -s\
  \ [ --split_cost ] arg (=25)         PHRED like cost of splitting an \n        \
  \                                alignment.\n  --interchromosomal              \
  \      Search for interchromosomal split \n                                    \
  \    reads.\n  --interchrom_split_cost arg (=60)     PHRED like cost of an inter-chromosomal\n\
  \                                        split.\n  --inversions                \
  \          Search for inversion split reads.\n  --inversion_split_cost arg (=45)\
  \      PHRED like cost of an inversion split.\n  -d [ --secondary_aln_phred_diff\
  \ ] arg (=29)\n                                        Report/evaluate split alignments\
  \ with a\n                                        difference of at most this value\
  \ to the\n                                        best split alignment.\n  -a [\
  \ --min_anchor_length ] arg (=8)   Minimal number of nucleotides on each \n    \
  \                                    sides of a split.\n  -n [ --max_span ] arg\
  \ (=1000)         Maximal allowed span (i.e. length on \n                      \
  \                  reference) of a split read alignment.\n  --max_anchors arg (=100)\
  \              Maximal allowed anchors per read \n                             \
  \           suffix/prefix.\n  --max_anchor_pairs arg (=500)         Maximal allowed\
  \ number of anchor \n                                        pairings.\n  --anchor_length_increment\
  \ arg (=4)    Number of characters to increase anchor\n                        \
  \                length by if too many anchors are \n                          \
  \              found.\n  --max_anchor_length arg (=30)         Maximal anchor length\
  \ (if reached it \n                                        will not be increased\
  \ any further.\n  -N [ --max_insert ] arg (=50000)      Maximal allowed internal\
  \ segment size \n                                        when pairing alignments\
  \ for a read \n                                        pair.\n  -S [ --output_secondary\
  \ ]             Also output secondary alignments.\n  -A [ --anchor_search_length\
  \ ] arg (=20)\n                                        Length of anchor used for\
  \ searching.\n  -e [ --anchor_errors ] arg (=2)       Allowed errors when searching\
  \ for \n                                        anchors.\n  -o [ --anchor_distance\
  \ ] arg (=600)   Regions size for searching for anchors.\n  -t [ --anchor_search_iter\
  \ ] arg (=3)  Anchor search iterations.\n  -P [ --putative_variations ] arg    \
  \  Filename to write a list of all \n                                        variation\
  \ candidates to. All candidates\n                                        are written,\
  \ no matter how weak the \n                                        evidence for\
  \ them to be true.\n  -l [ --input_length_dist_in ] arg     File with known internal\
  \ segment length\n                                        histogram to be used to\
  \ score \n                                        alignments.\n  -L [ --input_length_dist_out\
  \ ] arg    File to write internal segment length \n                            \
  \            histogram for uniquely mappable reads \n                          \
  \              to.\n  -R [ --insertion_length_dist ] arg    File to write insertion\
  \ length \n                                        histogram for uniquely mappable\
  \ reads \n                                        to.\n  -D [ --deletion_length_dist\
  \ ] arg     File to write deletion length histogram\n                          \
  \              for uniquely mappable reads to.\n  -T [ --threads ] arg (=0)    \
  \         Number of threads (default: 0 = \n                                   \
  \     strictly single-threaded).\n  -M [ --m_in_cigar ]                   Use M\
  \ for matches and mismatches in \n                                        CIGAR\
  \ strings (instead of '=' and 'X').\n  --snp arg                             Filename\
  \ to store putative SNP \n                                        positions to.\n\
  \  -w [ --snp_weight_cutoff ] arg (=3)   Weight cutoff for SNPs to be written to\n\
  \                                        filename given as parameter --snp.\n  --indel_weight_cutoff\
  \ arg (=3)        Weight cutoff for indels to be written \n                    \
  \                    to filename given as parameter -P.\n  --rightmost         \
  \                  Report rightmost deletions/insertions \n                    \
  \                    (default: leftmost).\n  --soft_clip                       \
  \    Allow reads to be soft-clipped.\n  --soft_clip_open_cost arg (=35)       Cost\
  \ for soft clipping a read.\n  --soft_clip_extend_cost arg (=3)      Cost for \"\
  extending\" a soft clip; i.e.,\n                                        softclipping\
  \ k characters from a read \n                                        will cost soft_clip_open_cost+k*soft_cl\n\
  \                                        ip_extend_cost.\n  --read_group arg   \
  \                   Read group for all reads.\n  --read_group_library arg      \
  \        Library information for read group \n                                 \
  \       header.\n  --read_group_sample arg               Sample information for\
  \ read group \n                                        header.\n\n"
generated_using:
- --help
docker_image:
