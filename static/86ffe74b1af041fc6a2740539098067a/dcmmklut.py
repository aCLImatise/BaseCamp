from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Dcmmklut_V0_1_0 = CommandToolBuilder(tool="dcmmklut", base_command=["dcmmklut"], inputs=[ToolInput(tag="in_arguments", input_type=Boolean(optional=True), prefix="--arguments", doc=InputDocumentation(doc="print expanded command line arguments")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="quiet mode, print no warnings and errors")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="verbose mode, print processing details")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="debug mode, print debug information")), ToolInput(tag="in_log_level", input_type=Boolean(optional=True), prefix="--log-level", doc=InputDocumentation(doc="[l]evel: string constant\n(fatal, error, warn, info, debug, trace)\nuse level l for the logger")), ToolInput(tag="in_log_config", input_type=Boolean(optional=True), prefix="--log-config", doc=InputDocumentation(doc="[f]ilename: string\nuse config file f for the logger")), ToolInput(tag="in_min_density", input_type=Boolean(optional=True), prefix="--min-density", doc=InputDocumentation(doc="[v]alue: integer (0..65535, default: 20)\nset min density to v (in hundreds of OD)")), ToolInput(tag="in_max_density", input_type=Boolean(optional=True), prefix="--max-density", doc=InputDocumentation(doc="[v]alue: integer (0..65535, default: 300)\nset max density to v (in hundreds of OD)")), ToolInput(tag="in_bits", input_type=Boolean(optional=True), prefix="--bits", doc=InputDocumentation(doc="[n]umber: integer\ncreate LUT with n bit values (8..16, default: 16)")), ToolInput(tag="in_entries", input_type=Boolean(optional=True), prefix="--entries", doc=InputDocumentation(doc="[n]umber: integer\ncreate LUT with n entries (1..65536, default: 256)")), ToolInput(tag="in_first_mapped", input_type=Boolean(optional=True), prefix="--first-mapped", doc=InputDocumentation(doc="[n]umber: integer\nfirst input value mapped (-31768..65535, default: 0)")), ToolInput(tag="in_random", input_type=Boolean(optional=True), prefix="--random", doc=InputDocumentation(doc="[n]umber: unsigned integer\nperform n randomly selected permutations on the LUT")), ToolInput(tag="in_random_seed", input_type=Boolean(optional=True), prefix="--random-seed", doc=InputDocumentation(doc="[n]umber: unsigned integer\ninitialize the random-number generator with n\n(default: 0, for reproducible results)")), ToolInput(tag="in_order", input_type=Boolean(optional=True), prefix="--order", doc=InputDocumentation(doc="[n]umber: integer\nuse polynomial curve fitting algorithm with order n\n(0..99, default: 5)")), ToolInput(tag="in_explanation", input_type=Boolean(optional=True), prefix="--explanation", doc=InputDocumentation(doc="[n]ame: string\nLUT explanation (default: automatically created)")), ToolInput(tag="in_byte_align", input_type=Boolean(optional=True), prefix="--byte-align", doc=InputDocumentation(doc="create byte-aligned LUT\n(default for and only with 8 bit values)")), ToolInput(tag="in_dcm_img_out", input_type=String(), position=0, doc=InputDocumentation(doc="DICOM output filename"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Dcmmklut_V0_1_0().translate("wdl", allow_empty_container=True)

