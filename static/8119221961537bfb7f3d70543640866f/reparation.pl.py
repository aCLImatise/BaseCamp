from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, Int, Float

Reparation_Pl_V0_1_0 = CommandToolBuilder(tool="reparation.pl", base_command=["reparation.pl"], inputs=[ToolInput(tag="in_bam", input_type=Boolean(optional=True), prefix="-bam", doc=InputDocumentation(doc="Ribosome alignment file (bam)")), ToolInput(tag="in_genome_fasta_file", input_type=Boolean(optional=True), prefix="-g", doc=InputDocumentation(doc="Genome fasta file. This should be the same genome fasta file used in\nthe alignment of the Ribo-seq reads.")), ToolInput(tag="in_sdir", input_type=Boolean(optional=True), prefix="-sdir", doc=InputDocumentation(doc="The 'scripts' directory (avialable within the REPARATION directory),\ndefaults to directory of reparation.pl script")), ToolInput(tag="in_db", input_type=String(optional=True), prefix="-db", doc=InputDocumentation(doc="database of curated bacteria protein sequences")), ToolInput(tag="in_gtf", input_type=Boolean(optional=True), prefix="-gtf", doc=InputDocumentation(doc="GTF genome annotation file")), ToolInput(tag="in_wdir", input_type=Boolean(optional=True), prefix="-wdir", doc=InputDocumentation(doc="working directory (defaults to current directory)")), ToolInput(tag="in_en", input_type=String(optional=True), prefix="-en", doc=InputDocumentation(doc="name")), ToolInput(tag="in_ribosome_profiling_read", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="Ribosome profiling read p site assignment strategy, 1 = plastid\nP-site estimation ((default), 3 = 3 prime of read, 5 prime of the\nread")), ToolInput(tag="in_mn", input_type=Int(optional=True), prefix="-mn", doc=InputDocumentation(doc="ribosome profiling reads shorter than these values are\neliminated from the ananlysis (default = 22)")), ToolInput(tag="in_mx", input_type=Int(optional=True), prefix="-mx", doc=InputDocumentation(doc="ribosome profiling reads longerer than these values are\neliminated from the ananlysis (default = 40)")), ToolInput(tag="in_mo", input_type=Int(optional=True), prefix="-mo", doc=InputDocumentation(doc="length of open reading frame considered for prediction\n(default = 30 value in nucleotides)")), ToolInput(tag="in_mr", input_type=Int(optional=True), prefix="-mr", doc=InputDocumentation(doc="reading frames with less than these number of ribosome\nprofiling reads are eliminated from analysis (default = 3)")), ToolInput(tag="in_ost", input_type=Boolean(optional=True), prefix="-ost", doc=InputDocumentation(doc="Start region length in nucleotides (default = 45nts). This value is\nused to calculate features specific to the start region.")), ToolInput(tag="in_osp", input_type=Boolean(optional=True), prefix="-osp", doc=InputDocumentation(doc="Stop region length in nucleotides (default = 21nts). This value is\nused to calculate features specific to the stop region.")), ToolInput(tag="in_osd", input_type=Boolean(optional=True), prefix="-osd", doc=InputDocumentation(doc="Distance of Shine dalgarno sequence from start codon (defualt =\n5nts).")), ToolInput(tag="in_seed", input_type=Boolean(optional=True), prefix="-seed", doc=InputDocumentation(doc="Shine dalgarno sequence (default = GGAGG). The shine dalgarno\nsequence used for Ribosome binind site energy calculation.")), ToolInput(tag="in_sd", input_type=String(optional=True), prefix="-sd", doc=InputDocumentation(doc="ribosome binding site (RBS) energy in the open reading frame\nprediction (Y = use RBS energy (default), N = donot use RBS engergy)")), ToolInput(tag="in_id", input_type=String(optional=True), prefix="-id", doc=InputDocumentation(doc="UNI STUTT Minimum identify score for BLAST protein")), ToolInput(tag="in_ev", input_type=Float(optional=True), prefix="-ev", doc=InputDocumentation(doc="e-vlaue for BLAST protein sequence search (default = 1e-5)")), ToolInput(tag="in_pg", input_type=Int(optional=True), prefix="-pg", doc=InputDocumentation(doc="for initial positive set generation (1 = prodigal (default),\n2 = glimmer)")), ToolInput(tag="in_cdn", input_type=Boolean(optional=True), prefix="-cdn", doc=InputDocumentation(doc="Comma separted list of start codons (default = ATG,GTG,TTG)")), ToolInput(tag="in_n_cdn", input_type=Boolean(optional=True), prefix="-ncdn", doc=InputDocumentation(doc="Start codon for negative set (default = CTG)")), ToolInput(tag="in_p_cdn", input_type=Boolean(optional=True), prefix="-pcdn", doc=InputDocumentation(doc="Start codon for positive set (default = ATG,GTG,TTG). Should be a\nsubset of the standard genetic code for bacteria")), ToolInput(tag="in_g_code", input_type=Boolean(optional=True), prefix="-gcode", doc=InputDocumentation(doc="Genetic code to use for initail positive set generation. Valid when\n-pg is 1. (default = 11, takes value between 1-25)")), ToolInput(tag="in_by", input_type=Int(optional=True), prefix="-by", doc=InputDocumentation(doc="to determine if prodigal should bypass Shine-Dalgarno trainer\nand force a full motif scan (default = N). (Y = yes, N = no) Valid\nonly for -pg 1")), ToolInput(tag="in_score", input_type=Boolean(optional=True), prefix="-score", doc=InputDocumentation(doc="Random forest classification probability score threshold to define\nas ORF are protein coding, the minimum (defualt is 0.5)\n")), ToolInput(tag="in_bacteria_genome_fast_a_file", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_curated_protein_db", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Reparation_Pl_V0_1_0().translate("wdl", allow_empty_container=True)

