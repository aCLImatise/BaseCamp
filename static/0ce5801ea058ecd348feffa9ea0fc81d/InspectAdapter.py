from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean, Directory, String, Int, Float

Inspectadapter_V0_1_0 = CommandToolBuilder(tool="InspectAdapter", base_command=["InspectAdapter"], inputs=[ToolInput(tag="in_in", input_type=File(optional=True), prefix="-in", doc=InputDocumentation(doc="*                      Input file in mzXML or mzData format.\nNote: In mode 'inspect_out' an Inspect results file is read. (valid formats: 'mzXML', 'mzData')")), ToolInput(tag="in_out", input_type=File(optional=True), prefix="-out", doc=InputDocumentation(doc="*                     Output file in idXML format.\nNote: In mode 'inspect_in' an Inspect input file is written. (valid formats: 'idXML')")), ToolInput(tag="in_inspect_in", input_type=Boolean(optional=True), prefix="-inspect_in", doc=InputDocumentation(doc="If this flag is set the InspectAdapter will read in mzXML,\nwrite an Inspect input file and generate a trie database")), ToolInput(tag="in_inspect_out", input_type=Boolean(optional=True), prefix="-inspect_out", doc=InputDocumentation(doc="If this flag is set the InspectAdapter will read in a Inspect results file\nand write idXML")), ToolInput(tag="in_inspect_directory", input_type=Directory(optional=True), prefix="-inspect_directory", doc=InputDocumentation(doc="The directory in which Inspect is located")), ToolInput(tag="in_temp_data_directory", input_type=Directory(optional=True), prefix="-temp_data_directory", doc=InputDocumentation(doc="A directory in which some temporary files can be stored")), ToolInput(tag="in_dbs", input_type=File(optional=True), prefix="-dbs", doc=InputDocumentation(doc="Name(s) of database(s) to search in (FASTA and SwissProt supported)")), ToolInput(tag="in_trie_dbs", input_type=File(optional=True), prefix="-trie_dbs", doc=InputDocumentation(doc="Name(s) of databases(s) to search in (trie-format)")), ToolInput(tag="in_new_db", input_type=File(optional=True), prefix="-new_db", doc=InputDocumentation(doc="Name of the merged trie database")), ToolInput(tag="in_instrument", input_type=String(optional=True), prefix="-instrument", doc=InputDocumentation(doc="The instrument that was used to measure the spectra\n(If set to QTOF, uses a QTOF-derived fragmentation model,\nand does not attempt to correct the parent mass.) (valid: 'ESI-ION-TRAP', 'QTOF', 'FT-Hybrid')")), ToolInput(tag="in_precursor_mass_tolerance", input_type=Int(optional=True), prefix="-precursor_mass_tolerance", doc=InputDocumentation(doc="The precursor mass tolerance (default: '2')")), ToolInput(tag="in_peak_mass_tolerance", input_type=Int(optional=True), prefix="-peak_mass_tolerance", doc=InputDocumentation(doc="The peak mass tolerance (default: '1')")), ToolInput(tag="in_list_modifications", input_type=Boolean(optional=True), prefix="-list_modifications", doc=InputDocumentation(doc="Show a list of the available modifications")), ToolInput(tag="in_modifications", input_type=Float(optional=True), prefix="-modifications", doc=InputDocumentation(doc="The colon-separated modifications; may be\n<name>,<type>, e.g.: Deamidation,opt or\n<composition>,<residues>,<type>,<name>, e.g.: H2C2O,KCS,opt,Acetyl or\n<mass>,<residues>,<type>,<name>, e.g.: 42.0367,KCS,opt,Acetyl or\nValid values for type are 'fix' and 'opt' (default)\nIf you want terminal PTMs, write 'cterm' or 'nterm' instead of residues")), ToolInput(tag="in_use_mono_isotopic_mod_mass", input_type=Boolean(optional=True), prefix="-use_monoisotopic_mod_mass", doc=InputDocumentation(doc="Use monoisotopic masses for the modifications")), ToolInput(tag="in_modifications_xml_file", input_type=File(optional=True), prefix="-modifications_xml_file", doc=InputDocumentation(doc="Name of an XML file with the modifications")), ToolInput(tag="in_cleavage", input_type=String(optional=True), prefix="-cleavage", doc=InputDocumentation(doc="The enzyme used for digestion (default: 'Trypsin')")), ToolInput(tag="in_inspect_output", input_type=File(optional=True), prefix="-inspect_output", doc=InputDocumentation(doc="Name for the output file of Inspect (may only be used in a full run)")), ToolInput(tag="in_inspect_input", input_type=File(optional=True), prefix="-inspect_input", doc=InputDocumentation(doc="Name for the input file of Inspect (may only be used in a full run)")), ToolInput(tag="in_multi_charge", input_type=Boolean(optional=True), prefix="-multicharge", doc=InputDocumentation(doc="Attempt to guess the precursor charge and mass,\nand consider multiple charge states if feasible")), ToolInput(tag="in_max_modifications_pp", input_type=Int(optional=True), prefix="-max_modifications_pp", doc=InputDocumentation(doc="Number of PTMs permitted in a single peptide. (default: '-1')")), ToolInput(tag="in_tag_count", input_type=Int(optional=True), prefix="-tag_count", doc=InputDocumentation(doc="Number of tags to generate (default: '-1')")), ToolInput(tag="in_no_tmp_dbs", input_type=Boolean(optional=True), prefix="-no_tmp_dbs", doc=InputDocumentation(doc="No temporary databases are used")), ToolInput(tag="in_p_value", input_type=Int(optional=True), prefix="-p_value", doc=InputDocumentation(doc="Annotations with inferior p-value are ignored (default: '1')")), ToolInput(tag="in_contact_name", input_type=String(optional=True), prefix="-contact_name", doc=InputDocumentation(doc="Name of the contact (default: 'unknown')")), ToolInput(tag="in_contact_institution", input_type=String(optional=True), prefix="-contact_institution", doc=InputDocumentation(doc="Name of the contact institution (default: 'unknown')")), ToolInput(tag="in_contact_info", input_type=String(optional=True), prefix="-contact_info", doc=InputDocumentation(doc="Some information about the contact (default: 'unknown')")), ToolInput(tag="in_ini", input_type=File(optional=True), prefix="-ini", doc=InputDocumentation(doc="Use the given TOPP INI file")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="-threads", doc=InputDocumentation(doc="Sets the number of threads allowed to be used by the TOPP tool (default: '1')")), ToolInput(tag="in_write_ini", input_type=File(optional=True), prefix="-write_ini", doc=InputDocumentation(doc="Writes the default configuration file")), ToolInput(tag="in_helphelp", input_type=Boolean(optional=True), prefix="--helphelp", doc=InputDocumentation(doc="Shows all options (including advanced)"))], outputs=[ToolOutput(tag="out_inspect_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_inspect_output", type_hint=File()), doc=OutputDocumentation(doc="Name for the output file of Inspect (may only be used in a full run)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Inspectadapter_V0_1_0().translate("wdl", allow_empty_container=True)

