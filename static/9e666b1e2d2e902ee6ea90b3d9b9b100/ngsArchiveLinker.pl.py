from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Directory, String

Ngsarchivelinker_Pl_V0_1_0 = CommandToolBuilder(tool="ngsArchiveLinker.pl", base_command=["ngsArchiveLinker.pl"], inputs=[ToolInput(tag="in_project_id", input_type=Boolean(optional=True), prefix="--projectId", doc=InputDocumentation(doc="[ARG]\nThe ID of the project to get data from. (required)")), ToolInput(tag="in_output", input_type=Directory(optional=True), prefix="--output", doc=InputDocumentation(doc="[ARG]\nA directory to output the collection of links. (Default: Current\nworking directory)")), ToolInput(tag="in_config", input_type=Boolean(optional=True), prefix="--config", doc=InputDocumentation(doc="[ARG]\nThe location of the config file. Not required if --baseURL\noption is used. (Default: $HOME/.irida/ngs-archive-linker.conf,\n/etc/irida/ngs-archive-linker.conf)")), ToolInput(tag="in_baseurl", input_type=Boolean(optional=True), prefix="--baseURL", doc=InputDocumentation(doc="[ARG]\nThe base URL for the NGS Archive REST API. Overrides config file\nsetting.")), ToolInput(tag="in_sample", input_type=Boolean(optional=True), prefix="--sample", doc=InputDocumentation(doc="[ARG]\nA sample id to get sequence files for. Not required. Multiple\nsamples may be listed as -s 1 -s 2 -s 3...")), ToolInput(tag="in_type", input_type=Boolean(optional=True), prefix="--type", doc=InputDocumentation(doc="[ARG]\nType of file to link or download. Not required. Available\noptions: 'fastq', 'assembly'. Default 'fastq'. To get both\ntypes, you can enter --type fastq,assembly")), ToolInput(tag="in_ignore", input_type=Boolean(optional=True), prefix="--ignore", doc=InputDocumentation(doc="Ignore creating links for files that already exist.")), ToolInput(tag="in_rename", input_type=Boolean(optional=True), prefix="--rename", doc=InputDocumentation(doc="Rename existing files with _# suffix. Useful for topup runs with\nsimilar filenames. NOTE: This option overrides the --ignore\noption.")), ToolInput(tag="in_flat", input_type=Boolean(optional=True), prefix="--flat", doc=InputDocumentation(doc="Create links or files in a flat directory under the project name\nrather than in sample directories.")), ToolInput(tag="in_username", input_type=Boolean(optional=True), prefix="--username", doc=InputDocumentation(doc="The username to use for API requests. Note: if this option is\nnot entered it will be requested during running of the script.")), ToolInput(tag="in_password", input_type=Boolean(optional=True), prefix="--password", doc=InputDocumentation(doc="The password to use for API requests. Note: if this option is\nnot entered it will be requested during running of the script.")), ToolInput(tag="in_download", input_type=Boolean(optional=True), prefix="--download", doc=InputDocumentation(doc="Option to download files from the REST API instead of\nsoftlinking. Note: Files may be quite large. This option is not\nrecommended if you have access to the sequencing filesystem.")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Print verbose messages.")), ToolInput(tag="in_sample_id", input_type=String(optional=True), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="[ARG]\nA directory to output the collection of links. (Default: Current\nworking directory)"))], container="quay.io/biocontainers/irida-linker:1.1.1--1", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Ngsarchivelinker_Pl_V0_1_0().translate("wdl")

