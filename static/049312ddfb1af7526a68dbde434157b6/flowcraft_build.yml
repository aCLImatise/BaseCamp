!Command
command:
- flowcraft
- build
positional:
- !Positional
  optional: false
  position: 0
  name: exit.
  description: -L, --component-list  Print a detailed description for all the currently
- !Positional
  optional: false
  position: 0
  name: recipes
  description: -cr, --check-recipe   Check tasks that the recipe contain and their
    flow.
- !Positional
  optional: false
  position: 0
  name: option.
  description: --export-params       Only export the parameters for the provided components
named:
- !Flag
  optional: true
  synonyms:
  - -t
  - --tasks
  description: Space separated tasks of the pipeline
  args: !SimpleFlagArg
    name: TASKS
- !Flag
  optional: true
  synonyms:
  - -r
  - --recipe
  description: Use one of the available recipes
  args: !SimpleFlagArg
    name: RECIPE
- !Flag
  optional: true
  synonyms:
  - -o
  description: Name of the pipeline file
  args: !SimpleFlagArg
    name: OUTPUT_NF
- !Flag
  optional: true
  synonyms:
  - -n
  description: Provide a name for your pipeline.
  args: !SimpleFlagArg
    name: PIPELINE_NAME
- !Flag
  optional: true
  synonyms:
  - --merge-params
  description: "Merges identical parameters from multiple components\ninto the same\
    \ one. Otherwise, the parameters will be\nseparated and unique to each component."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --pipeline-only
  description: "Write only the pipeline files and not the templates,\nbin, and lib\
    \ folders."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -nd
  - --no-dependecy
  description: Do not automatically add dependencies to the pipeline.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -c
  - --check-pipeline
  description: Check only the validity of the pipeline string and
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -l
  - --component-list-short
  description: "Print a short list of the currently available\nprocesses."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --recipe-list
  description: Print a short list of the currently available recipes.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --recipe-list-short
  description: Print a condensed list of the currently available
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --export-directives
  description: "Only export the directives for the provided components\n(via -t option)\
    \ in JSON format to stdout. No pipeline\nwill be generated with this option."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -ft
  - --fetch-tags
  description: "Allows to fetch all docker tags for the components\nlisted with the\
    \ -t flag.\n"
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "usage: flowcraft build [-h] [-t TASKS] [-r RECIPE] [-o OUTPUT_NF]\n  \
  \                     [-n PIPELINE_NAME] [--merge-params] [--pipeline-only]\n  \
  \                     [-nd] [-c]\n                       [-L | -l | --recipe-list\
  \ | --recipe-list-short] [-cr]\n                       [--export-params] [--export-directives]\
  \ [-ft]\n\noptional arguments:\n  -h, --help            show this help message and\
  \ exit\n  -t TASKS, --tasks TASKS\n                        Space separated tasks\
  \ of the pipeline\n  -r RECIPE, --recipe RECIPE\n                        Use one\
  \ of the available recipes\n  -o OUTPUT_NF          Name of the pipeline file\n\
  \  -n PIPELINE_NAME      Provide a name for your pipeline.\n  --merge-params   \
  \     Merges identical parameters from multiple components\n                   \
  \     into the same one. Otherwise, the parameters will be\n                   \
  \     separated and unique to each component.\n  --pipeline-only       Write only\
  \ the pipeline files and not the templates,\n                        bin, and lib\
  \ folders.\n  -nd, --no-dependecy   Do not automatically add dependencies to the\
  \ pipeline.\n  -c, --check-pipeline  Check only the validity of the pipeline string\
  \ and\n                        exit.\n  -L, --component-list  Print a detailed description\
  \ for all the currently\n                        available processes.\n  -l, --component-list-short\n\
  \                        Print a short list of the currently available\n       \
  \                 processes.\n  --recipe-list         Print a short list of the\
  \ currently available recipes.\n  --recipe-list-short   Print a condensed list of\
  \ the currently available\n                        recipes\n  -cr, --check-recipe\
  \   Check tasks that the recipe contain and their flow.\n                      \
  \  This option might be useful if a user wants to change\n                     \
  \   some components of a given recipe, by using the -t\n                       \
  \ option.\n  --export-params       Only export the parameters for the provided components\n\
  \                        (via -t option) in JSON format to stdout. No pipeline\n\
  \                        will be generated with this option.\n  --export-directives\
  \   Only export the directives for the provided components\n                   \
  \     (via -t option) in JSON format to stdout. No pipeline\n                  \
  \      will be generated with this option.\n  -ft, --fetch-tags     Allows to fetch\
  \ all docker tags for the components\n                        listed with the -t\
  \ flag.\n"
generated_using:
- --help
docker_image:
