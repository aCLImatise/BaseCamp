!Command
command:
- kmerposition.sh
positional:
- !Positional
  optional: false
  position: 0
  name: in
  description: ''
named:
- !Flag
  optional: true
  synonyms:
  - -Xmx
  description: "This will set Java's memory usage, overriding autodetection.\n-Xmx20g\
    \ will specify 20 gigs of RAM, and -Xmx200m will\nspecify 200 megs. The max is\
    \ typically 85% of physical memory."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -eoom
  description: "This flag will cause the process to exit if an out-of-memory\nexception\
    \ occurs.  Requires Java 8u92+."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -da
  description: Disable assertions.
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "\nWritten by Jasper Toscani Field\nLast modified June 11, 2020\n\nDescription:\
  \  Counts positional occurrences of reference kmers in reads.\n\nUsage:  kmerposition.sh\
  \ in=<input file> out=<output file> ref=<reference file> k=<kmer length>\n\nInput\
  \ may be fasta or fastq, compressed or uncompressed.\n\nStandard parameters:\nin=<file>\
  \       Primary input, or read 1 input.\nin2=<file>      Read 2 input if reads are\
  \ in two files.\nref=<file>      Reference file.\nout=<file>      Primary output,\
  \ statistics on found kmers.\n\nProcessing parameters:\nk=19            Kmer length.\n\
  rcomp=t         If true, also match for reverse-complements.\n\nJava Parameters:\n\
  -Xmx            This will set Java's memory usage, overriding autodetection.\n \
  \               -Xmx20g will specify 20 gigs of RAM, and -Xmx200m will\n       \
  \         specify 200 megs. The max is typically 85% of physical memory.\n-eoom\
  \           This flag will cause the process to exit if an out-of-memory\n     \
  \           exception occurs.  Requires Java 8u92+.\n-da             Disable assertions.\n\
  \nPlease contact Brian Bushnell at bbushnell@lbl.gov if you encounter any problems.\n\
  \n"
generated_using:
- --help
docker_image:
