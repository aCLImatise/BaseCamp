version 1.0

task Anvimcgclassifier {
  input {
    String? profile_db
    String? contigs_db
    File? output_file_prefix
    String? collection_name
    String? bin_id
    File? bin_ids_file
    File? exclude_samples
    File? include_samples
    Boolean? gen_figures
    Boolean? get_samples_stats_only
    Boolean? overwrite_output_destinations
    Int? genome_detection_uncertainty
    Int? outliers_threshold
    Boolean? zeros_are_outliers
  }
  command <<<
    anvi_mcg_classifier \
      ~{if defined(profile_db) then ("--profile-db " +  '"' + profile_db + '"') else ""} \
      ~{if defined(contigs_db) then ("--contigs-db " +  '"' + contigs_db + '"') else ""} \
      ~{if defined(output_file_prefix) then ("--output-file-prefix " +  '"' + output_file_prefix + '"') else ""} \
      ~{if defined(collection_name) then ("--collection-name " +  '"' + collection_name + '"') else ""} \
      ~{if defined(bin_id) then ("--bin-id " +  '"' + bin_id + '"') else ""} \
      ~{if defined(bin_ids_file) then ("--bin-ids-file " +  '"' + bin_ids_file + '"') else ""} \
      ~{if defined(exclude_samples) then ("--exclude-samples " +  '"' + exclude_samples + '"') else ""} \
      ~{if defined(include_samples) then ("--include-samples " +  '"' + include_samples + '"') else ""} \
      ~{if (gen_figures) then "--gen-figures" else ""} \
      ~{if (get_samples_stats_only) then "--get-samples-stats-only" else ""} \
      ~{if (overwrite_output_destinations) then "--overwrite-output-destinations" else ""} \
      ~{if defined(genome_detection_uncertainty) then ("--genome-detection-uncertainty " +  '"' + genome_detection_uncertainty + '"') else ""} \
      ~{if defined(outliers_threshold) then ("--outliers-threshold " +  '"' + outliers_threshold + '"') else ""} \
      ~{if (zeros_are_outliers) then "--zeros-are-outliers" else ""}
  >>>
  runtime {
    docker: "None"
  }
  parameter_meta {
    profile_db: "Anvi'o profile database"
    contigs_db: "Anvi'o contigs database generated by 'anvi-gen-\\ncontigs'"
    output_file_prefix: "A prefix to be used while naming the output files (no\\nfile type extensions please; just a prefix)."
    collection_name: "Collection name."
    bin_id: "Bin name you are interested in."
    bin_ids_file: "Text file for bins (each line should be a unique bin\\nid)."
    exclude_samples: "List of samples to exclude for the analysis."
    include_samples: "List of samples to include for the analysis."
    gen_figures: "For those of you who wish to dig deeper, a collection\\nof figures could be created to allow you to get\\ninsight into how the classification was generated.\\nThis is especially useful to identify cases in which\\nyou shouldn't trust the classification (for example\\ndue to a large number of outliers). NOTICE: if you ask\\nanvi'o to generate these figures then it will\\nsignificantly extend the execution time. To learn\\nabout which figures are created and what they mean,\\ncontact your nearest anvi'o developer, because\\ncurrently it is a well-hidden secret."
    get_samples_stats_only: "If you only wish to get statistics regarding the\\noccurrence of bins in samples, then use this flag.\\nEspecially when dealing with many samples or large\\ngenomes, gene stats could be a long time to compute.\\nBy using this flag you could save a lot of computation\\ntime."
    overwrite_output_destinations: "Overwrite if the output files and/or directories\\nexist."
    genome_detection_uncertainty: "Determines the range of sample detection values that\\nare considered negative, ambiguous or positive. Min of\\n0 and smaller than 0.5, default of 0.25. For exmaple\\nfor the default samples with detection below 0.5-0.25\\n= 0.25 will be considered negative (i.e. donot contain\\nthe genome), samples with detection between 0.25 and\\n0.75 would be ambiguous (and hence would not be used\\nfor the classification), and samples with detection\\nabove 0.75 would be considered positive (i.e. contain\\nthe genome)."
    outliers_threshold: "Threshold to use for the outlier detection. The\\ndefault value is '1.5'. Absolute deviation around the\\nmedian is used. To read more about the method please\\nrefer to: 'How to Detect and Handle Outliers' by Boris\\nIglewicz and David Hoaglin\\n(doi:10.1016/j.jesp.2013.03.013)."
    zeros_are_outliers: "If you want all zero coverage positions to be treated\\nlike outliers then use this flag. The reason to treat\\nzero coverage as outliers is because when mapping\\nreads to a reference we could get many zero positions\\ndue to accessory genes. These positions then skew the\\naverage values that we compute.\\n"
  }
  output {
    File out_stdout = stdout()
    File out_output_file_prefix = "${in_output_file_prefix}"
  }
}