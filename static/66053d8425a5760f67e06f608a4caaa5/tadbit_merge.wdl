version 1.0

task TadbitMerge {
  input {
    File? workdir
    File? workdir_one
    File? workdir_two
    File? bam_one
    Boolean? nox
    File? bam_two
    Int? cpus
    Int? resolution
    Boolean? skip_comparison
    Boolean? skip_merge
    Array[String] save
    Int? jobid_one
    Int? jobid_two
    Boolean? force
    Boolean? norm
    File? biases_one
    File? biases_two
    Array[Int] filter
    File? sam_tools
    File? tmp_db
  }
  command <<<
    tadbit merge \
      ~{if defined(workdir) then ("--workdir " +  '"' + workdir + '"') else ""} \
      ~{if defined(workdir_one) then ("--workdir1 " +  '"' + workdir_one + '"') else ""} \
      ~{if defined(workdir_two) then ("--workdir2 " +  '"' + workdir_two + '"') else ""} \
      ~{if defined(bam_one) then ("--bam1 " +  '"' + bam_one + '"') else ""} \
      ~{if (nox) then "--noX" else ""} \
      ~{if defined(bam_two) then ("--bam2 " +  '"' + bam_two + '"') else ""} \
      ~{if defined(cpus) then ("--cpus " +  '"' + cpus + '"') else ""} \
      ~{if defined(resolution) then ("--resolution " +  '"' + resolution + '"') else ""} \
      ~{if (skip_comparison) then "--skip_comparison" else ""} \
      ~{if (skip_merge) then "--skip_merge" else ""} \
      ~{if defined(save) then ("--save " +  '"' + save + '"') else ""} \
      ~{if defined(jobid_one) then ("--jobid1 " +  '"' + jobid_one + '"') else ""} \
      ~{if defined(jobid_two) then ("--jobid2 " +  '"' + jobid_two + '"') else ""} \
      ~{if (force) then "--force" else ""} \
      ~{if (norm) then "--norm" else ""} \
      ~{if defined(biases_one) then ("--biases1 " +  '"' + biases_one + '"') else ""} \
      ~{if defined(biases_two) then ("--biases2 " +  '"' + biases_two + '"') else ""} \
      ~{if defined(filter) then ("--filter " +  '"' + filter + '"') else ""} \
      ~{if defined(sam_tools) then ("--samtools " +  '"' + sam_tools + '"') else ""} \
      ~{if defined(tmp_db) then ("--tmpdb " +  '"' + tmp_db + '"') else ""}
  >>>
  runtime {
    docker: "quay.io/biocontainers/tadbit:1.0.1--py38h6ed170a_0"
  }
  parameter_meta {
    workdir: "path to a new output folder"
    workdir_one: "path to working directory of the first HiC data sample to merge"
    workdir_two: "path to working directory of the second HiC data sample to merge"
    bam_one: "path to the first TADbit-generated BAM file with all reads (other\\nwise the tool will guess from the working directory database)"
    nox: "no display server (X screen)"
    bam_two: "path to the second TADbit-generated BAM file with all reads (other\\nwise the tool will guess from the working directory database)"
    cpus: "[8] Maximum number of CPU cores available in the execution host. If\\nhigher than 1, tasks with multi-threading capabilities will enabled\\n(if 0 all available) cores will be used"
    resolution: "resolution at which to do the comparison, and generate the matrices."
    skip_comparison: "skip the comparison between replicates (faster). Comparisons are\\nperformed at 3 levels 1- comparing first diagonals of each\\nexperiment (and generating SCC score and standard deviation see\\nhttps://doi.org/10.1101/gr.220640.117) 2- Comparing the first\\neigenvectors of input experiments 3- Generates reproducibility score\\nusing function from https://doi.org/10.1093/bioinformatics/btx152"
    skip_merge: "skip the merge of replicates (faster)."
    save: "[genome] save genomic or chromosomic matrix."
    jobid_one: "Use as input data generated by a job with a given jobid. Use tadbit\\ndescribe to find out which."
    jobid_two: "Use as input data generated by a job with a given jobid. Use tadbit\\ndescribe to find out which."
    force: "overwrite previously run job"
    norm: "compare normalized matrices"
    biases_one: "path to file with precalculated biases by columns"
    biases_two: "path to file with precalculated biases by columns"
    filter: "[[1, 2, 3, 4, 6, 7, 9, 10]] Use filters to define a set os valid\\npair of reads e.g.: '--apply 1 2 3 4 8 9 10'. Where these\\nnumberscorrespond to: 1: self-circle, 2: dangling-end, 3: error, 4:\\nextra dangling-end, 5: too close from RES, 6: too short, 7: too\\nlarge, 8: over-represented, 9: duplicated, 10: random breaks, 11:\\ntrans-chromosomic"
    sam_tools: "path samtools binary"
    tmp_db: "if provided uses this directory to manipulate the database"
  }
  output {
    File out_stdout = stdout()
    File out_workdir = "${in_workdir}"
  }
}