!Command
command:
- ssu-cmalign
positional:
- !Positional
  optional: false
  position: 0
  name: cmfile
  description: ''
- !Positional
  optional: false
  position: 1
  name: sequence file
  description: ''
named:
- !Flag
  optional: true
  synonyms:
  - -o
  description: ': output the alignment to file <f>, not stdout'
  args: !SimpleFlagArg
    name: f
- !Flag
  optional: true
  synonyms:
  - -l
  description: ': align locally w.r.t. the model'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -q
  description: ': quiet; suppress banner and scores, print only the alignment'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -M
  description: ': meta-cm mode: <cmfile> is a meta-cm built from aln in <f>'
  args: !SimpleFlagArg
    name: f
- !Flag
  optional: true
  synonyms:
  - --ileaved
  description: ': output alnment in interleaved Stockholm format (not 1 line/seq)'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --no-prob
  description: ': do not append posterior probabilities to alignment'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --informat
  description: ': specify the input file is in format <x>, not FASTA'
  args: !SimpleFlagArg
    name: s
- !Flag
  optional: true
  synonyms:
  - --chunk
  description: ': num seqs for each temp alnment, for saving memory  [1000]'
  args: !SimpleFlagArg
    name: n
- !Flag
  optional: true
  synonyms:
  - --devhelp
  description: ': show list of undocumented developer options'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --optacc
  description: ': align with the Holmes/Durbin optimal accuracy algorithm'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --cyk
  description: ': align with the CYK algorithm'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --sample
  description: ': sample alignment of each seq from posterior distribution'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -s
  description: ': w/--sample, set RNG seed to <n> (if 0: one-time arbitrary seed)'
  args: !SimpleFlagArg
    name: n
- !Flag
  optional: true
  synonyms:
  - --viterbi
  description: ': align to a CM Plan 9 HMM with the Viterbi algorithm'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --sub
  description: ': build sub CM for columns b/t HMM predicted start/end points'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --small
  description: ': use divide and conquer (d&c) alignment algorithm'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --hbanded
  description: ': accelerate using CM plan 9 HMM derived bands  [default]'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --nonbanded
  description: ': do not use bands to accelerate aln algorithm'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --tau
  description: ': set tail loss prob for --hbanded to <x>  [1E-7]  (0<x<1)'
  args: !SimpleFlagArg
    name: x
- !Flag
  optional: true
  synonyms:
  - --mxsize
  description: ': set maximum allowable DP matrix size to <x> Mb  [2048.0]  (x>0.)'
  args: !SimpleFlagArg
    name: x
- !Flag
  optional: true
  synonyms:
  - --rna
  description: ': output alignment as RNA sequence data'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --dna
  description: ': output alignment as DNA (not RNA) sequence data'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --matchonly
  description: ': include only match columns in output alignment'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --withali
  description: ': incl. alignment in <f> (must be aln <cm file> was built from)'
  args: !SimpleFlagArg
    name: f
- !Flag
  optional: true
  synonyms:
  - --withpknots
  description: ': incl. structure (w/pknots) from <f> from --withali <f>'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --rf
  description: ': --rf was originally used with cmbuild'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --gapthresh
  description: ': --gapthresh <x> was originally used with cmbuild  [0.5]'
  args: !SimpleFlagArg
    name: x
- !Flag
  optional: true
  synonyms:
  - --cm-idx
  description: ': only align seqs with CM number <n>    in the CM file  (n>0)'
  args: !SimpleFlagArg
    name: n
- !Flag
  optional: true
  synonyms:
  - --cm-name
  description: ': only align seqs with the CM named <s> in the CM file'
  args: !SimpleFlagArg
    name: s
- !Flag
  optional: true
  synonyms:
  - --tfile
  description: ': dump individual sequence parsetrees to file <f>'
  args: !SimpleFlagArg
    name: f
- !Flag
  optional: true
  synonyms:
  - --ifile
  description: ': dump information on per-sequence inserts to file <f>'
  args: !SimpleFlagArg
    name: f
- !Flag
  optional: true
  synonyms:
  - --elfile
  description: ': dump information on per-sequence EL inserts to file <f>'
  args: !SimpleFlagArg
    name: f
- !Flag
  optional: true
  synonyms:
  - --sfile
  description: ': dump alignment score information to file <f>'
  args: !SimpleFlagArg
    name: f
- !Flag
  optional: true
  synonyms:
  - -options
  description: ''
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  description: ': show brief help on version and usage'
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "# ssu-cmalign :: align sequences to an RNA CM\n# INFERNAL s0.1.1 (Feb\
  \ 2016)\n# Copyright (C) 2016 Howard Hughes Medical Institute.\n# Freely distributed\
  \ under the BSD open source license.\n# - - - - - - - - - - - - - - - - - - - -\
  \ - - - - - - - - - - - - - - - -\nUsage: ssu-cmalign [-options] <cmfile> <sequence\
  \ file>\n\nwhere basic options are:\n  -h             : show brief help on version\
  \ and usage\n  -o <f>         : output the alignment to file <f>, not stdout\n \
  \ -l             : align locally w.r.t. the model\n  -q             : quiet; suppress\
  \ banner and scores, print only the alignment\n  -M <f>         : meta-cm mode:\
  \ <cmfile> is a meta-cm built from aln in <f>\n  --ileaved      : output alnment\
  \ in interleaved Stockholm format (not 1 line/seq)\n  --no-prob      : do not append\
  \ posterior probabilities to alignment\n  --informat <s> : specify the input file\
  \ is in format <x>, not FASTA\n  --chunk <n>    : num seqs for each temp alnment,\
  \ for saving memory  [1000]\n  --devhelp      : show list of undocumented developer\
  \ options\n\nalignment algorithm related options:\n  --optacc  : align with the\
  \ Holmes/Durbin optimal accuracy algorithm\n  --cyk     : align with the CYK algorithm\n\
  \  --sample  : sample alignment of each seq from posterior distribution\n  -s <n>\
  \    : w/--sample, set RNG seed to <n> (if 0: one-time arbitrary seed)\n  --viterbi\
  \ : align to a CM Plan 9 HMM with the Viterbi algorithm\n  --sub     : build sub\
  \ CM for columns b/t HMM predicted start/end points\n  --small   : use divide and\
  \ conquer (d&c) alignment algorithm\n\nbanded dynamic programming acceleration options:\n\
  \  --hbanded    : accelerate using CM plan 9 HMM derived bands  [default]\n  --nonbanded\
  \  : do not use bands to accelerate aln algorithm\n  --tau <x>    : set tail loss\
  \ prob for --hbanded to <x>  [1E-7]  (0<x<1)\n  --mxsize <x> : set maximum allowable\
  \ DP matrix size to <x> Mb  [2048.0]  (x>0.)\n\noutput options:\n  --rna       :\
  \ output alignment as RNA sequence data\n  --dna       : output alignment as DNA\
  \ (not RNA) sequence data\n  --matchonly : include only match columns in output\
  \ alignment\n\noptions for including a fixed alignment within output alignment:\n\
  \  --withali <f>   : incl. alignment in <f> (must be aln <cm file> was built from)\n\
  \  --withpknots    : incl. structure (w/pknots) from <f> from --withali <f>\n  --rf\
  \            : --rf was originally used with cmbuild\n  --gapthresh <x> : --gapthresh\
  \ <x> was originally used with cmbuild  [0.5]\n\nusing a single CM from a multi-CM\
  \ file:\n  --cm-idx <n>  : only align seqs with CM number <n>    in the CM file\
  \  (n>0)\n  --cm-name <s> : only align seqs with the CM named <s> in the CM file\n\
  \nverbose output files and debugging:\n  --tfile <f>  : dump individual sequence\
  \ parsetrees to file <f>\n  --ifile <f>  : dump information on per-sequence inserts\
  \ to file <f>\n  --elfile <f> : dump information on per-sequence EL inserts to file\
  \ <f>\n  --sfile <f>  : dump alignment score information to file <f>\n"
generated_using:
- -h
docker_image:
