!Command
command:
- anvi-help
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - --requires
  - -r
  description: Restrict to programs that require this search term
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --provides
  - -p
  description: Restrict to programs that provide this search term
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --name
  - -n
  description: "Restrict to programs that contain this search term in\ntheir name"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --report
  - -R
  description: "Which information would you like to be in the report?\nMess with this\
    \ if you are disappointed with the\ndefault. Possibles are Description, Tags,\
    \ Requires,\nProvides, Status, and Resources. Add multiple of them\nwith commas\
    \ (no whitespace). For example, if you\nwanted Description and Resources, you\
    \ would put here\nDescription,Resources\n"
  args: !SimpleFlagArg
    name: REPORT
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "usage: anvi-help [-h] [--requires] [--provides] [--name] [--report REPORT]\n\
  \                 search-term\n\nSearch for anvi'o programs by keyword, inputs/outputs,\
  \ etc.\n\npositional arguments:\n  search-term           Find programs associated\
  \ with this search term. if you\n                        want all programs, use\
  \ 'ALL'\n\noptional arguments:\n  -h, --help            show this help message and\
  \ exit\n  --requires, -r        Restrict to programs that require this search term\n\
  \  --provides, -p        Restrict to programs that provide this search term\n  --name,\
  \ -n            Restrict to programs that contain this search term in\n        \
  \                their name\n  --report REPORT, -R REPORT\n                    \
  \    Which information would you like to be in the report?\n                   \
  \     Mess with this if you are disappointed with the\n                        default.\
  \ Possibles are Description, Tags, Requires,\n                        Provides,\
  \ Status, and Resources. Add multiple of them\n                        with commas\
  \ (no whitespace). For example, if you\n                        wanted Description\
  \ and Resources, you would put here\n                        Description,Resources\n"
generated_using:
- --help
docker_image:
