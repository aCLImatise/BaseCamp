from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, Int, File

Fgwas_V0_1_0 = CommandToolBuilder(tool="fgwas", base_command=["fgwas"], inputs=[ToolInput(tag="in_input_file_zscores", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="[file name] input file w/ Z-scores")), ToolInput(tag="in_stem_names_output", input_type=Boolean(optional=True), prefix="-o", doc=InputDocumentation(doc="[string] stem for names of output files")), ToolInput(tag="in_annotations_use_annotations", input_type=Boolean(optional=True), prefix="-w", doc=InputDocumentation(doc="[string] which annotation(s) to use. Separate multiple annotations with plus signs")), ToolInput(tag="in_dists", input_type=Boolean(optional=True), prefix="-dists", doc=InputDocumentation(doc="[string:string] the name of the distance annotation(s) and the file(s) containing the distance model(s)")), ToolInput(tag="in_block_size_number", input_type=Boolean(optional=True), prefix="-k", doc=InputDocumentation(doc="[integer] block size in number of SNPs (5000)")), ToolInput(tag="in_bed", input_type=Boolean(optional=True), prefix="-bed", doc=InputDocumentation(doc="[string] read block positions from a .bed file")), ToolInput(tag="in_variance_prior_normalized", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="[float] variance of prior on normalized effect size. To average priors, separate with commas (0.01,0.1,0.5)")), ToolInput(tag="in_penalty_sum_squared", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="[float] penalty on sum of squared lambdas, only relevant for -print (0.2)")), ToolInput(tag="in_print", input_type=String(optional=True), prefix="-print", doc=InputDocumentation(doc="the per-SNP output")), ToolInput(tag="in_xv", input_type=Int(optional=True), prefix="-xv", doc=InputDocumentation(doc="10-fold cross-validation")), ToolInput(tag="in_dens", input_type=Boolean(optional=True), prefix="-dens", doc=InputDocumentation(doc="[string float float] model segment probability according to quantiles of an annotation")), ToolInput(tag="in_cc", input_type=File(optional=True), prefix="-cc", doc=InputDocumentation(doc="is a case-control study, which implies a different input file format")), ToolInput(tag="in_fine", input_type=File(optional=True), prefix="-fine", doc=InputDocumentation(doc="is a fine mapping study, which implies a different input file format")), ToolInput(tag="in_only_p", input_type=String(optional=True), prefix="-onlyp", doc=InputDocumentation(doc="do optimization under penalized likelihood")), ToolInput(tag="in_cond", input_type=Boolean(optional=True), prefix="-cond", doc=InputDocumentation(doc="[string] estimate the effect size of an annotation conditional on the others in the model"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Fgwas_V0_1_0().translate("wdl", allow_empty_container=True)

