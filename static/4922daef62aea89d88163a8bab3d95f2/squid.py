from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Squid_V0_1_0 = CommandToolBuilder(tool="squid", base_command=["squid"], inputs=[ToolInput(tag="in_bwa", input_type=Boolean(optional=True), prefix="--bwa", doc=InputDocumentation(doc="If input BAM is generated by BWA or SpeedSeq aligner (default assuming STAR aligner)")), ToolInput(tag="in_string_bam_alignment", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="string  Chimeric BAM alignment (Required if using STAR aligner)")), ToolInput(tag="in_string_genome_fasta", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc="string  Genome FASTA file")), ToolInput(tag="in_pt", input_type=Boolean(optional=True), prefix="-pt", doc=InputDocumentation(doc="bool    Phred type: 0 for Phred33, 1 for Phred64 (0)")), ToolInput(tag="in_pl", input_type=Boolean(optional=True), prefix="-pl", doc=InputDocumentation(doc="int     Maximum Length of low Phred score to filter alignment (10)")), ToolInput(tag="in_pm", input_type=Boolean(optional=True), prefix="-pm", doc=InputDocumentation(doc="int     Low Phred score threshold (4)")), ToolInput(tag="in_mq", input_type=Boolean(optional=True), prefix="-mq", doc=InputDocumentation(doc="int     Mapping quality to filter alignment (1)")), ToolInput(tag="in_dp", input_type=Boolean(optional=True), prefix="-dp", doc=InputDocumentation(doc="int     Maximum distance of aligning positions for concordant alignment (50000)")), ToolInput(tag="in_di", input_type=Boolean(optional=True), prefix="-di", doc=InputDocumentation(doc="int     Maximum distance of segment indexes for concordant alignment (20)")), ToolInput(tag="in_int_edge_weight", input_type=Boolean(optional=True), prefix="-w", doc=InputDocumentation(doc="int     Minimum edge weight (5)")), ToolInput(tag="in_double_discordant_edge", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="double  Discordant edge ratio multiplier / normal tumor cell ratio (8)")), ToolInput(tag="in_int_max_allowed", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="int     Max allowed degree (5)")), ToolInput(tag="in_bool_output_gragh", input_type=Boolean(optional=True), prefix="-G", doc=InputDocumentation(doc="bool    Output gragh file (0)")), ToolInput(tag="in_co", input_type=Boolean(optional=True), prefix="-CO", doc=InputDocumentation(doc="bool    Output ordering of connected components (0)")), ToolInput(tag="in_to", input_type=Boolean(optional=True), prefix="-TO", doc=InputDocumentation(doc="bool    Output ordering of all segments (0)")), ToolInput(tag="in_rg", input_type=Boolean(optional=True), prefix="-RG", doc=InputDocumentation(doc="bool    Output rearranged genome sequence (0)")), ToolInput(tag="in_o", input_type=String(optional=True), prefix="-o", doc=InputDocumentation(doc="")), ToolInput(tag="in_b", input_type=String(optional=True), prefix="-b", doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Squid_V0_1_0().translate("wdl", allow_empty_container=True)

