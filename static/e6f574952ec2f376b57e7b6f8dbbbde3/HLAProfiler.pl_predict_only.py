from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Directory, String

Hlaprofiler_Pl_Predict_Only_V0_1_0 = CommandToolBuilder(tool="HLAProfiler.pl_predict_only", base_command=["HLAProfiler.pl", "predict_only"], inputs=[ToolInput(tag="in_counts_directory", input_type=Boolean(optional=True), prefix="-counts_directory", doc=InputDocumentation(doc="|cd            location of directory containing filtered and paired read counts files. To generate these files from fastq files please run HLAProfiler.pl filter followed by HLAProfiler.pl count_reads (required)")), ToolInput(tag="in_reads_directory", input_type=Boolean(optional=True), prefix="-reads_directory", doc=InputDocumentation(doc="|cd             location of directory containing filtered and paired read fastqs.(required)")), ToolInput(tag="in_profile_directory", input_type=Boolean(optional=True), prefix="-profile_directory", doc=InputDocumentation(doc="|sdir         path to directory containing the profile files (required)")), ToolInput(tag="in_sample_name", input_type=Boolean(optional=True), prefix="-sample_name", doc=InputDocumentation(doc="|sn                 name of the sample. This must perfect match the prefix of each of the read count files. i.e. The sample name for file NA12878.200.B_1.uniq.cnt would be NA12878.200 (required)")), ToolInput(tag="in_reference", input_type=Boolean(optional=True), prefix="-reference", doc=InputDocumentation(doc="|r                    HLA reference fasta. There must also be an allele map file in the sample directory as the reference fa. (required)")), ToolInput(tag="in_allele_refinement", input_type=Boolean(optional=True), prefix="-allele_refinement", doc=InputDocumentation(doc="|ar   Specifies the level to which the predicted alleles are to be refined based on the observed reads (default:all)\nPossible values:\nrefine_only             Refines the allelle call by looking predicting the true allele sequence using observed reads and looking for a better match in the reference\npredict_only            Reports if the observe reads support a novel allele sequence not found in the reference\nrefineAndPredict        Refines the allele call (-refine_only) and report novel alleles (-novel_only)\nall                     Refines the allele call (-refine_only) and report novel alleles (-novel_only), creates a profile for the refined/novel allele sequence and calculates prediction metrics.\nnone                    Turns off refinement and novel allele prediction.")), ToolInput(tag="in_kraken_db", input_type=Boolean(optional=True), prefix="-kraken_db", doc=InputDocumentation(doc="|db           base directory of kraken database.")), ToolInput(tag="in_kraken_path", input_type=Boolean(optional=True), prefix="-kraken_path", doc=InputDocumentation(doc="|kp         base directory of kraken installation. (default:base directory of path returned by `which kraken`)")), ToolInput(tag="in_minimum_reads", input_type=Boolean(optional=True), prefix="-minimum_reads", doc=InputDocumentation(doc="|min      minimum number of reads from a gene before attempting to call HLA types.(default:100)")), ToolInput(tag="in_output_dir", input_type=Directory(optional=True), prefix="-output_dir", doc=InputDocumentation(doc="|od          output directory(default:'.')")), ToolInput(tag="in_threads", input_type=Boolean(optional=True), prefix="-threads", doc=InputDocumentation(doc="|c              number of threads (default:1)")), ToolInput(tag="in_perl", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_hla_profiler_do_tpl", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_predict", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_options", input_type=String(), position=3, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output_dir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output_dir", type_hint=File()), doc=OutputDocumentation(doc="|od          output directory(default:'.')"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Hlaprofiler_Pl_Predict_Only_V0_1_0().translate("wdl", allow_empty_container=True)

