&id001 !Command
positional: []
named:
- !Flag
  description: ''
  synonyms:
  - --debug
  args: !EmptyFlagArg {}
  optional: true
command:
- deepbgc
- download
parent: &id002 !Command
  positional: []
  named: []
  command:
  - deepbgc
  parent:
  subcommands:
  - *id001
  - !Command
    positional:
    - !Positional
      description: Input sequence file path(s) (FASTA/GenBank)
      position: 0
      name: inputs
      optional: false
    named:
    - !Flag
      description: Process only specific record ID. Can be provided multiple times
      synonyms:
      - --limit-to-record
      args: !SimpleFlagArg
        name: LIMIT_TO_RECORD
      optional: true
    - !Flag
      description: Run Prodigal in '-p meta' mode to enable detecting genes in short
        contigs
      synonyms:
      - --prodigal-meta-mode
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Accept amino-acid protein sequences as input (experimental). Will
        treat each file as a single record with multiple proteins.
      synonyms:
      - --protein
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Output GenBank file path
      synonyms:
      - --output-gbk
      args: !SimpleFlagArg
        name: OUTPUT_GBK
      optional: true
    - !Flag
      description: Output TSV file path
      synonyms:
      - --output-tsv
      args: !SimpleFlagArg
        name: OUTPUT_TSV
      optional: true
    - !Flag
      description: ''
      synonyms:
      - --debug
      args: !EmptyFlagArg {}
      optional: true
    command:
    - deepbgc
    - prepare
    parent: *id002
    subcommands: []
    help_flag: !Flag
      description: ''
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: deepbgc prepare [-h] [--debug] [--limit-to-record LIMIT_TO_RECORD]\n\
      \                       [--prodigal-meta-mode] [--protein]\n               \
      \        [--output-gbk OUTPUT_GBK] [--output-tsv OUTPUT_TSV]\n             \
      \          inputs [inputs ...]\n\nPrepare genomic sequence by annotating proteins\
      \ and Pfam domains.\n    \nExamples:\n    \n  # Show detailed help \n  deepbgc\
      \ prepare --help \n    \n  # Detect proteins and pfam domains in a FASTA sequence\
      \ and save the result as GenBank file \n  deepbgc prepare --output sequence.prepared.gbk\
      \ sequence.fa\n  \n\npositional arguments:\n  inputs                Input sequence\
      \ file path(s) (FASTA/GenBank)\n\noptional arguments:\n  -h, --help        \
      \    show this help message and exit\n  --debug\n  --limit-to-record LIMIT_TO_RECORD\n\
      \                        Process only specific record ID. Can be provided multiple\
      \ times\n\nrequired arguments:\n\n  --prodigal-meta-mode  Run Prodigal in '-p\
      \ meta' mode to enable detecting genes in short contigs\n  --protein       \
      \      Accept amino-acid protein sequences as input (experimental). Will treat\
      \ each file as a single record with multiple proteins.\n  --output-gbk OUTPUT_GBK\n\
      \                        Output GenBank file path\n  --output-tsv OUTPUT_TSV\n\
      \                        Output TSV file path\n"
    generated_using: &id003
    - --help
  - !Command
    positional:
    - !Positional
      description: Input sequence file path (FASTA, GenBank, Pfam CSV)
      position: 0
      name: inputs
      optional: false
    named:
    - !Flag
      description: Custom output directory path
      synonyms:
      - -o
      - --output
      args: !SimpleFlagArg
        name: OUTPUT
      optional: true
    - !Flag
      description: Process only specific record ID. Can be provided multiple times
      synonyms:
      - --limit-to-record
      args: !SimpleFlagArg
        name: LIMIT_TO_RECORD
      optional: true
    - !Flag
      description: Produce minimal output with just the GenBank sequence file
      synonyms:
      - --minimal-output
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Run Prodigal in '-p meta' mode to enable detecting genes in short
        contigs
      synonyms:
      - --prodigal-meta-mode
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Accept amino-acid protein sequences as input (experimental). Will
        treat each file as a single record with multiple proteins.
      synonyms:
      - --protein
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Trained detection model name (deepbgc) or path to trained model
        pickle file. Can be provided multiple times (-d first -d second)
      synonyms:
      - -d
      - --detector
      args: !SimpleFlagArg
        name: DETECTORS
      optional: true
    - !Flag
      description: Disable BGC detection
      synonyms:
      - --no-detector
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Label for detected clusters (equal to --detector by default). If
        multiple detectors are provided, a label should be provided for each one
      synonyms:
      - -l
      - --label
      args: !SimpleFlagArg
        name: LABELS
      optional: true
    - !Flag
      description: 'Average protein-wise DeepBGC score threshold for extracting BGC
        regions from Pfam sequences (default: 0.5)'
      synonyms:
      - -s
      - --score
      args: !SimpleFlagArg
        name: SCORE
      optional: true
    - !Flag
      description: 'Merge detected BGCs within given number of proteins (default:
        0)'
      synonyms:
      - --merge-max-protein-gap
      args: !SimpleFlagArg
        name: MERGE_MAX_PROTEIN_GAP
      optional: true
    - !Flag
      description: 'Merge detected BGCs within given number of nucleotides (default:
        0)'
      synonyms:
      - --merge-max-nucl-gap
      args: !SimpleFlagArg
        name: MERGE_MAX_NUCL_GAP
      optional: true
    - !Flag
      description: 'Minimum BGC nucleotide length (default: 1)'
      synonyms:
      - --min-nucl
      args: !SimpleFlagArg
        name: MIN_NUCL
      optional: true
    - !Flag
      description: 'Minimum number of proteins in a BGC (default: 1)'
      synonyms:
      - --min-proteins
      args: !SimpleFlagArg
        name: MIN_PROTEINS
      optional: true
    - !Flag
      description: 'Minimum number of protein domains in a BGC (default: 1)'
      synonyms:
      - --min-domains
      args: !SimpleFlagArg
        name: MIN_DOMAINS
      optional: true
    - !Flag
      description: 'Minimum number of known biosynthetic (as defined by antiSMASH)
        protein domains in a BGC (default: 0)'
      synonyms:
      - --min-bio-domains
      args: !SimpleFlagArg
        name: MIN_BIO_DOMAINS
      optional: true
    - !Flag
      description: Trained classification model name (run "deepbgc download" to download
        models) or path to trained model pickle file. Can be provided multiple times
        (-c first -c second)
      synonyms:
      - -c
      - --classifier
      args: !SimpleFlagArg
        name: CLASSIFIERS
      optional: true
    - !Flag
      description: Disable BGC classification
      synonyms:
      - --no-classifier
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'DeepBGC classification score threshold for assigning classes to
        BGCs (default: 0.5)'
      synonyms:
      - --classifier-score
      args: !SimpleFlagArg
        name: CLASSIFIER_SCORE
      optional: true
    - !Flag
      description: ''
      synonyms:
      - --debug
      args: !EmptyFlagArg {}
      optional: true
    command:
    - deepbgc
    - pipeline
    parent: *id002
    subcommands: []
    help_flag: !Flag
      description: ''
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: deepbgc pipeline [-h] [--debug] [-o OUTPUT]\n             \
      \           [--limit-to-record LIMIT_TO_RECORD] [--minimal-output]\n       \
      \                 [--prodigal-meta-mode] [--protein] [-d DETECTORS]\n      \
      \                  [--no-detector] [-l LABELS] [-s SCORE]\n                \
      \        [--merge-max-protein-gap MERGE_MAX_PROTEIN_GAP]\n                 \
      \       [--merge-max-nucl-gap MERGE_MAX_NUCL_GAP]\n                        [--min-nucl\
      \ MIN_NUCL] [--min-proteins MIN_PROTEINS]\n                        [--min-domains\
      \ MIN_DOMAINS]\n                        [--min-bio-domains MIN_BIO_DOMAINS]\
      \ [-c CLASSIFIERS]\n                        [--no-classifier]\n            \
      \            [--classifier-score CLASSIFIER_SCORE]\n                       \
      \ inputs [inputs ...]\n\nRun DeepBGC pipeline: Preparation, BGC detection, BGC\
      \ classification and generate the report directory.\n    \nExamples:\n    \n\
      \  # Show detailed help \n  deepbgc pipeline --help \n    \n  # Detect BGCs\
      \ in a nucleotide FASTA sequence using DeepBGC model \n  deepbgc pipeline sequence.fa\n\
      \  \n  # Detect BGCs using the ClusterFinder GeneBorder detection model and\
      \ a higher score threshold\n  deepbgc pipeline --detector clusterfinder_geneborder\
      \ --score 0.8 sequence.fa\n  \n  # Add additional clusters detected using DeepBGC\
      \ model with a strict score threshold\n  deepbgc pipeline --continue --output\
      \ sequence/ --label deepbgc_90_score --score 0.9 sequence/sequence.full.gbk\n\
      \  \n\npositional arguments:\n  inputs                Input sequence file path\
      \ (FASTA, GenBank, Pfam CSV)\n\noptional arguments:\n  -h, --help          \
      \  show this help message and exit\n  --debug\n  -o OUTPUT, --output OUTPUT\n\
      \                        Custom output directory path\n  --limit-to-record LIMIT_TO_RECORD\n\
      \                        Process only specific record ID. Can be provided multiple\
      \ times\n  --minimal-output      Produce minimal output with just the GenBank\
      \ sequence file\n  --prodigal-meta-mode  Run Prodigal in '-p meta' mode to enable\
      \ detecting genes in short contigs\n  --protein             Accept amino-acid\
      \ protein sequences as input (experimental). Will treat each file as a single\
      \ record with multiple proteins.\n\nBGC detection options:\n\n  -d DETECTORS,\
      \ --detector DETECTORS\n                        Trained detection model name\
      \ (deepbgc) or path to trained model pickle file. Can be provided multiple times\
      \ (-d first -d second)\n  --no-detector         Disable BGC detection\n  -l\
      \ LABELS, --label LABELS\n                        Label for detected clusters\
      \ (equal to --detector by default). If multiple detectors are provided, a label\
      \ should be provided for each one\n  -s SCORE, --score SCORE\n             \
      \           Average protein-wise DeepBGC score threshold for extracting BGC\
      \ regions from Pfam sequences (default: 0.5)\n  --merge-max-protein-gap MERGE_MAX_PROTEIN_GAP\n\
      \                        Merge detected BGCs within given number of proteins\
      \ (default: 0)\n  --merge-max-nucl-gap MERGE_MAX_NUCL_GAP\n                \
      \        Merge detected BGCs within given number of nucleotides (default: 0)\n\
      \  --min-nucl MIN_NUCL   Minimum BGC nucleotide length (default: 1)\n  --min-proteins\
      \ MIN_PROTEINS\n                        Minimum number of proteins in a BGC\
      \ (default: 1)\n  --min-domains MIN_DOMAINS\n                        Minimum\
      \ number of protein domains in a BGC (default: 1)\n  --min-bio-domains MIN_BIO_DOMAINS\n\
      \                        Minimum number of known biosynthetic (as defined by\
      \ antiSMASH) protein domains in a BGC (default: 0)\n\nBGC classification options:\n\
      \n  -c CLASSIFIERS, --classifier CLASSIFIERS\n                        Trained\
      \ classification model name (run \"deepbgc download\" to download models) or\
      \ path to trained model pickle file. Can be provided multiple times (-c first\
      \ -c second)\n  --no-classifier       Disable BGC classification\n  --classifier-score\
      \ CLASSIFIER_SCORE\n                        DeepBGC classification score threshold\
      \ for assigning classes to BGCs (default: 0.5)\n"
    generated_using: *id003
  - !Command
    positional:
    - !Positional
      description: Training sequences (Pfam TSV) file paths
      position: 0
      name: inputs
      optional: false
    named:
    - !Flag
      description: Path to JSON model config file
      synonyms:
      - -m
      - --model
      args: !SimpleFlagArg
        name: MODEL
      optional: true
    - !Flag
      description: Target column to predict in sequence prediction
      synonyms:
      - -t
      - --target
      args: !SimpleFlagArg
        name: TARGET
      optional: true
    - !Flag
      description: Output trained model file path
      synonyms:
      - -o
      - --output
      args: !SimpleFlagArg
        name: OUTPUT
      optional: true
    - !Flag
      description: Progress log output path (e.g. TensorBoard)
      synonyms:
      - -l
      - --log
      args: !SimpleFlagArg
        name: LOG
      optional: true
    - !Flag
      description: Class TSV file path - train a sequence classifier using provided
        classes (binary columns), indexed by sequence_id column
      synonyms:
      - -c
      - --classes
      args: !SimpleFlagArg
        name: CLASSES
      optional: true
    - !Flag
      description: CONFIG Variables in model JSON file to replace (e.g. --config PFAM2VEC
        path/to/pfam2vec.csv)
      synonyms:
      - --config
      args: !SimpleFlagArg
        name: CONFIG
      optional: true
    - !Flag
      description: Validation sequence file path. Repeat to specify multiple files
      synonyms:
      - -v
      - --validation
      args: !SimpleFlagArg
        name: VALIDATION
      optional: true
    - !Flag
      description: 'Verbosity level: 0=none, 1=progress bar, 2=once per epoch (default:
        2)'
      synonyms:
      - --verbose
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: ''
      synonyms:
      - --debug
      args: !EmptyFlagArg {}
      optional: true
    command:
    - deepbgc
    - train
    parent: *id002
    subcommands: []
    help_flag: !Flag
      description: ''
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: deepbgc train [-h] [--debug] -m MODEL [-t TARGET] -o OUTPUT\
      \ [-l LOG]\n                     [-c CLASSES] [--config CONFIG CONFIG] [-v VALIDATION]\n\
      \                     [--verbose INT]\n                     inputs [inputs ...]\n\
      \nTrain a BGC detector/classifier on a set of BGC samples.\n    \nExamples:\n\
      \    \n  # Train a detector using pre-processed samples in Pfam CSV format.\
      \ \n  deepbgc train --model deepbgc.json --output MyDeepBGCDetector.pkl BGCs.pfam.tsv\
      \ negatives.pfam.tsv\n    \n  # Train a BGC classifier using a TSV classes file\
      \ and a set of BGC samples in Pfam TSV format and save the trained classifier\
      \ to a file. \n  deepbgc train --model random_forest.json --output MyDeepBGCClassifier.pkl\
      \ --classes path/to/BGCs.classes.csv BGCs.pfam.tsv\n  \n\npositional arguments:\n\
      \  inputs                Training sequences (Pfam TSV) file paths\n\noptional\
      \ arguments:\n  -h, --help            show this help message and exit\n  --debug\n\
      \  -m MODEL, --model MODEL\n                        Path to JSON model config\
      \ file\n  -t TARGET, --target TARGET\n                        Target column\
      \ to predict in sequence prediction\n  -o OUTPUT, --output OUTPUT\n        \
      \                Output trained model file path\n  -l LOG, --log LOG     Progress\
      \ log output path (e.g. TensorBoard)\n  -c CLASSES, --classes CLASSES\n    \
      \                    Class TSV file path - train a sequence classifier using\
      \ provided classes (binary columns), indexed by sequence_id column\n  --config\
      \ CONFIG CONFIG\n                        Variables in model JSON file to replace\
      \ (e.g. --config PFAM2VEC path/to/pfam2vec.csv)\n  -v VALIDATION, --validation\
      \ VALIDATION\n                        Validation sequence file path. Repeat\
      \ to specify multiple files\n  --verbose INT         Verbosity level: 0=none,\
      \ 1=progress bar, 2=once per epoch (default: 2)\n"
    generated_using: *id003
  - !Command
    positional: []
    named:
    - !Flag
      description: ''
      synonyms:
      - --debug
      args: !EmptyFlagArg {}
      optional: true
    command:
    - deepbgc
    - info
    parent: *id002
    subcommands: []
    help_flag: !Flag
      description: ''
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: deepbgc info [-h] [--debug]\n\nShow DeepBGC summary information\
      \ about downloaded models and dependencies.\n\noptional arguments:\n  -h, --help\
      \  show this help message and exit\n  --debug\n"
    generated_using: *id003
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: deepbgc [-h] COMMAND ...\n\nDeepBGC - Biosynthetic Gene Cluster\
    \ detection and classification\n\noptional arguments:\n  -h, --help  show this\
    \ help message and exit\n\nAvailable Commands:\n  COMMAND     Use: deepbgc COMMAND\
    \ --help for command-specific help\n    download  \n                  Download\
    \ trained models and other file dependencies to the DeepBGC downloads directory.\n\
    \                  \n                  By default, files are downloaded to: '/home/ubuntu/.local/share/deepbgc/data'\n\
    \                  Set DEEPBGC_DOWNLOADS_DIR env variable to specify a different\
    \ downloads directory.\"\n                  \n    prepare   Prepare genomic sequence\
    \ by annotating proteins and Pfam domains.\n                  \n             \
    \ Examples:\n                  \n                # Show detailed help \n     \
    \           deepbgc prepare --help \n                  \n                # Detect\
    \ proteins and pfam domains in a FASTA sequence and save the result as GenBank\
    \ file \n                deepbgc prepare --output sequence.prepared.gbk sequence.fa\n\
    \                \n    pipeline  Run DeepBGC pipeline: Preparation, BGC detection,\
    \ BGC classification and generate the report directory.\n                  \n\
    \              Examples:\n                  \n                # Show detailed\
    \ help \n                deepbgc pipeline --help \n                  \n      \
    \          # Detect BGCs in a nucleotide FASTA sequence using DeepBGC model \n\
    \                deepbgc pipeline sequence.fa\n                \n            \
    \    # Detect BGCs using the ClusterFinder GeneBorder detection model and a higher\
    \ score threshold\n                deepbgc pipeline --detector clusterfinder_geneborder\
    \ --score 0.8 sequence.fa\n                \n                # Add additional\
    \ clusters detected using DeepBGC model with a strict score threshold\n      \
    \          deepbgc pipeline --continue --output sequence/ --label deepbgc_90_score\
    \ --score 0.9 sequence/sequence.full.gbk\n                \n    train     Train\
    \ a BGC detector/classifier on a set of BGC samples.\n                  \n   \
    \           Examples:\n                  \n                # Train a detector\
    \ using pre-processed samples in Pfam CSV format. \n                deepbgc train\
    \ --model deepbgc.json --output MyDeepBGCDetector.pkl BGCs.pfam.tsv negatives.pfam.tsv\n\
    \                  \n                # Train a BGC classifier using a TSV classes\
    \ file and a set of BGC samples in Pfam TSV format and save the trained classifier\
    \ to a file. \n                deepbgc train --model random_forest.json --output\
    \ MyDeepBGCClassifier.pkl --classes path/to/BGCs.classes.csv BGCs.pfam.tsv\n \
    \               \n    info      Show DeepBGC summary information about downloaded\
    \ models and dependencies.\n"
  generated_using: *id003
subcommands: []
help_flag: !Flag
  description: ''
  synonyms:
  - -h
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: deepbgc download [-h] [--debug]\n\n    Download trained models\
  \ and other file dependencies to the DeepBGC downloads directory.\n    \n    By\
  \ default, files are downloaded to: '/home/ubuntu/.local/share/deepbgc/data'\n \
  \   Set DEEPBGC_DOWNLOADS_DIR env variable to specify a different downloads directory.\"\
  \n    \n\noptional arguments:\n  -h, --help  show this help message and exit\n \
  \ --debug\n"
generated_using: *id003
