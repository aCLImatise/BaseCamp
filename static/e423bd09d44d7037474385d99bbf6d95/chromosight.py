from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Boolean, Int, Directory, File

Chromosight_V0_1_0 = CommandToolBuilder(tool="chromosight", base_command=["chromosight"], inputs=[ToolInput(tag="in_preset", input_type=String(optional=True), prefix="--preset", doc=InputDocumentation(doc="Generate a preset config for the given pattern.\nPreset configs available are 'loops' and\n'borders'. [default: loops]")), ToolInput(tag="in_click", input_type=String(optional=True), prefix="--click", doc=InputDocumentation(doc="Show input contact map and uses double clicks from\nuser to build the kernel. Warning: memory-heavy,\nreserve for small genomes or subsetted matrices.")), ToolInput(tag="in_name", input_type=String(optional=True), prefix="--name", doc=InputDocumentation(doc="Only show information related to a particular\nkernel.[default: all]")), ToolInput(tag="in_long", input_type=Boolean(optional=True), prefix="--long", doc=InputDocumentation(doc="Show default parameters in addition to kernel names.")), ToolInput(tag="in_mat", input_type=Boolean(optional=True), prefix="--mat", doc=InputDocumentation(doc="Prints an ascii representation of the kernel matrix.")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Displays the logo.")), ToolInput(tag="in_norm", input_type=String(optional=True), prefix="--norm", doc=InputDocumentation(doc="Normalization / balancing behaviour. auto: weights\npresent in the cool file are used. raw: raw contact\nvalues are used. force: recompute weights and\noverwrite existing values. raw[default: auto]")), ToolInput(tag="in_inter", input_type=Boolean(optional=True), prefix="--inter", doc=InputDocumentation(doc="Enable to consider interchromosomal contacts.\nWarning: Experimental feature with high memory\nconsumption, only use with small matrices.")), ToolInput(tag="in_min_dist", input_type=Int(optional=True), prefix="--min-dist", doc=InputDocumentation(doc="Minimum distance from the diagonal (in base pairs).\nat which detection should operate. [default: auto]")), ToolInput(tag="in_max_dist", input_type=Int(optional=True), prefix="--max-dist", doc=InputDocumentation(doc="Maximum distance from the diagonal (in base pairs)\nfor detection. [default: auto]")), ToolInput(tag="in_pattern", input_type=String(optional=True), prefix="--pattern", doc=InputDocumentation(doc="Which pattern to detect. This will use preset\nconfigurations for the given pattern. Possible\nvalues are: loops, loops_small, borders, hairpins and\ncentromeres. [default: loops]")), ToolInput(tag="in_pearson", input_type=String(optional=True), prefix="--pearson", doc=InputDocumentation(doc="Pearson correlation threshold when detecting patterns\nin the contact map. Lower values leads to potentially\nmore detections, but more false positives. [default: auto]")), ToolInput(tag="in_subsample", input_type=Int(optional=True), prefix="--subsample", doc=InputDocumentation(doc="If greater than 1, subsample INT contacts from the\nmatrix. If between 0 and 1, subsample a proportion of\ncontacts instead. Useful when comparing matrices with\ndifferent coverages. [default: no]")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of CPUs to use in parallel. [default: 1]")), ToolInput(tag="in_perc_undetected", input_type=String(optional=True), prefix="--perc-undetected", doc=InputDocumentation(doc="Maximum percentage of non-detectable pixels (nan) in\nwindows allowed to report patterns. [default: auto]")), ToolInput(tag="in_perc_zero", input_type=Int(optional=True), prefix="--perc-zero", doc=InputDocumentation(doc="Maximum percentage of empty (0) pixels in windows\nallowed to report patterns. [default: auto]")), ToolInput(tag="in_dump", input_type=Directory(optional=True), prefix="--dump", doc=InputDocumentation(doc="Directory where to save matrix dumps during\nprocessing and detection. Each dump is saved as\na compressed npz of a sparse matrix and can be\nloaded using scipy.sparse.load_npz.")), ToolInput(tag="in_iterations", input_type=Int(optional=True), prefix="--iterations", doc=InputDocumentation(doc="How many iterations to perform after the first\ntemplate-based pass. [default: 1]")), ToolInput(tag="in_kernel_config", input_type=File(optional=True), prefix="--kernel-config", doc=InputDocumentation(doc="Optionally give a path to a custom JSON kernel\nconfig path. Use this to override pattern if\nyou do not want to use one of the preset\npatterns.")), ToolInput(tag="in_no_plotting", input_type=Boolean(optional=True), prefix="--no-plotting", doc=InputDocumentation(doc="Disable generation of pileup plots.")), ToolInput(tag="in_n_mads", input_type=Int(optional=True), prefix="--n-mads", doc=InputDocumentation(doc="Maximum number of median absolute deviations below\nthe median of the bin sums distribution allowed to\nconsider detectable bins. [default: 5]")), ToolInput(tag="in_min_separation", input_type=Int(optional=True), prefix="--min-separation", doc=InputDocumentation(doc="Minimum distance required between patterns, in\nbasepairs. If two patterns are closer than this\ndistance in both axes, the one with the lowest\nscore is discarded. [default: auto]")), ToolInput(tag="in_smooth_trend", input_type=Boolean(optional=True), prefix="--smooth-trend", doc=InputDocumentation(doc="Use isotonic regression when detrending to reduce\nnoise at long ranges. Do not enable this for circular\ngenomes.")), ToolInput(tag="in_t_svd", input_type=Boolean(optional=True), prefix="--tsvd", doc=InputDocumentation(doc="Enable kernel factorisation via truncated svd.\nAccelerates detection, at the cost of slight\ninaccuracies. Singular matrices are truncated to\nretain 99.9% of the information in the kernel.")), ToolInput(tag="in_win_fmt", input_type=String(optional=True), prefix="--win-fmt", doc=InputDocumentation(doc="File format used to store individual windows\naround each pattern. Window order matches\npatterns inside the associated text file.\nPossible formats are json and npy. [default: json]")), ToolInput(tag="in_win_size", input_type=Int(optional=True), prefix="--win-size", doc=InputDocumentation(doc="Window size (width), in pixels, to use for the\nkernel when computing correlations. The pattern\nkernel will be resized to match this size. Linear\nlinear interpolation is used to fill between pixels.\nIf not specified, the default kernel size will\nbe used instead. [default: auto]\n")), ToolInput(tag="in_convolution_dot", input_type=String(), position=0, doc=InputDocumentation(doc="quantify:")), ToolInput(tag="in_hic_contact_map", input_type=String(), position=0, doc=InputDocumentation(doc="The Hi-C contact map to detect patterns on, in\nbedgraph2d or cool format.")), ToolInput(tag="in_prefix", input_type=String(), position=1, doc=InputDocumentation(doc="Common path prefix used to generate output files.\nExtensions will be added for each file.")), ToolInput(tag="in_bed_two_d", input_type=Int(), position=0, doc=InputDocumentation(doc="Tab-separated text files with columns chrom1, start1\nend1, chrom2, start2, end2. Each line correspond to\na pair of positions (i.e. a position in the matrix).")), ToolInput(tag="in_path_contact_map", input_type=String(), position=1, doc=InputDocumentation(doc="Path to the contact map, in bedgraph2d or\ncool format."))], outputs=[], container="quay.io/biocontainers/chromosight:1.4.1--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Chromosight_V0_1_0().translate("wdl")

