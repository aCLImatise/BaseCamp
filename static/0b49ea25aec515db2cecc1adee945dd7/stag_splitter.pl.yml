!Command
command:
- stag-splitter.pl
positional:
- !Positional
  optional: false
  position: 0
  name: filename
  description: "eg; if we have\n<top>\n<a>\n<b>foo</b>\n<c>yah</c>\n<d>\n<e>xxx</e>\n\
    </d>\n</a>\n<a>\n<b>bar</b>\n<d>\n<e>wibble</e>\n</d>\n</a>\n</top>"
named:
- !Flag
  optional: true
  synonyms:
  - -p
  description: "|parser FORMAT\nFORMAT is one of xml, sxpr or itext, or the name of\
    \ a perl module\nxml assumed as default"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -w
  description: "|writer FORMAT\nFORMAT is one of xml, sxpr or itext, or the name of\
    \ a perl module"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -split
  description: "|s NODE\nnode to split on"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -name
  description: "|n NODE\nfield/element to use when naming files\nwill use surrogate\
    \ IDs if this argument not specified"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -dir
  description: "|d DIR\nwrite files to this directory\n"
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "NAME\n    stag-splitter - splits a stag file into multiple files\n\nSYNOPSIS\n\
  \      stag-splitter -split person -name social_security_no file.xml\n\nDESCRIPTION\n\
  \    Splits a file using a user specified parser (default xml) around a\n    specified\
  \ split node, naming each file according to the name argument\n\n    the files will\
  \ be named anonymously, unless the '-name' switch is\n    specified; this will use\
  \ the value of the specified element as the\n    filename\n\n    eg; if we have\n\
  \n      <top>\n        <a>\n          <b>foo</b>\n          <c>yah</c>\n       \
  \   <d>\n            <e>xxx</e>\n          </d>\n        </a>\n        <a>\n   \
  \       <b>bar</b>\n          <d>\n            <e>wibble</e>\n          </d>\n \
  \       </a>\n      </top>\n\n    if we run\n\n      stag-splitter -split a -name\
  \ b\n\n    it will generate two files, \"foo.xml\" and \"bar.xml\"\n\n    input\
  \ format can be 'xml', 'sxpr' or 'itext' - if this is left blank the\n    format\
  \ will be guessed from the file suffix\n\n    the output format defaults to the\
  \ same as the input format, but another\n    can be chosen.\n\n    files go in the\
  \ current directory, but this can be overridden with the\n    '-dir' switch\n\n\
  USAGE\n       stag-splitter [-split <ELEMENT-NAME>] [-name <ELEMENT-NAME>] [-dir\
  \ <DIR>] [-format <INPUT-FORMAT>] [-outformat <OUTPUT-FORMAT>] <FILENAMES>\n\n \
  \   -p|parser FORMAT\n        FORMAT is one of xml, sxpr or itext, or the name of\
  \ a perl module\n\n        xml assumed as default\n\n    -w|writer FORMAT\n    \
  \    FORMAT is one of xml, sxpr or itext, or the name of a perl module\n\n    -split|s\
  \ NODE\n        node to split on\n\n    -name|n NODE\n        field/element to use\
  \ when naming files\n\n        will use surrogate IDs if this argument not specified\n\
  \n    -dir|d DIR\n        write files to this directory\n\n"
generated_using:
- --help
docker_image:
