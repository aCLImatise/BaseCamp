from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, File, Directory, Boolean, String

Haphpipe_Cliquesnv_V0_1_0 = CommandToolBuilder(tool="haphpipe_cliquesnv", base_command=["haphpipe", "cliquesnv"], inputs=[ToolInput(tag="in_fq_one", input_type=Int(optional=True), prefix="--fq1", doc=InputDocumentation(doc="Fastq file with read 1")), ToolInput(tag="in_fq_two", input_type=Int(optional=True), prefix="--fq2", doc=InputDocumentation(doc="Fastq file with read 2")), ToolInput(tag="in_f_qu", input_type=File(optional=True), prefix="--fqU", doc=InputDocumentation(doc="Fastq file with unpaired reads")), ToolInput(tag="in_ref_fa", input_type=File(optional=True), prefix="--ref_fa", doc=InputDocumentation(doc="Reference FASTA file")), ToolInput(tag="in_outdir", input_type=Directory(optional=True), prefix="--outdir", doc=InputDocumentation(doc="Output directory (default: .)")), ToolInput(tag="in_jar_dir", input_type=File(optional=True), prefix="--jardir", doc=InputDocumentation(doc="Path to clique-snv.jar (existing) (Default: current\ndirectory) (default: .)")), ToolInput(tag="in_o_two_two_min", input_type=Int(optional=True), prefix="--O22min", doc=InputDocumentation(doc="minimum threshold for O22 value")), ToolInput(tag="in_o_two_two_min_freq", input_type=Int(optional=True), prefix="--O22minfreq", doc=InputDocumentation(doc="minimum threshold for O22 frequency relative to read\ncoverage")), ToolInput(tag="in_print_log", input_type=Boolean(optional=True), prefix="--printlog", doc=InputDocumentation(doc="Print log data to console (default: False)")), ToolInput(tag="in_merging", input_type=String(optional=True), prefix="--merging", doc=InputDocumentation(doc="Cliques merging algorithm: accurate or fast")), ToolInput(tag="in_fast_a_format", input_type=Int(optional=True), prefix="--fasta_format", doc=InputDocumentation(doc="Fasta defline format: short or extended, add number at\nend to adjust precision of frequency (default:\nextended4)")), ToolInput(tag="in_output_start", input_type=String(optional=True), prefix="--outputstart", doc=InputDocumentation(doc="Output start position")), ToolInput(tag="in_output_end", input_type=String(optional=True), prefix="--outputend", doc=InputDocumentation(doc="Output end position")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="Do not write output to console (silence stdout and\nstderr) (default: False)")), ToolInput(tag="in_log_file", input_type=File(optional=True), prefix="--logfile", doc=InputDocumentation(doc="Name for log file (output)")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="Print commands but do not run (default: False)")), ToolInput(tag="in_n_cpu", input_type=Int(optional=True), prefix="--ncpu", doc=InputDocumentation(doc="Number of CPU to use (default: 1)")), ToolInput(tag="in_keep_tmp", input_type=Boolean(optional=True), prefix="--keep_tmp", doc=InputDocumentation(doc="Do not delete temporary directory (default: False)"))], outputs=[ToolOutput(tag="out_outdir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_outdir", type_hint=File()), doc=OutputDocumentation(doc="Output directory (default: .)")), ToolOutput(tag="out_log_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_log_file", type_hint=File()), doc=OutputDocumentation(doc="Name for log file (output)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Haphpipe_Cliquesnv_V0_1_0().translate("wdl", allow_empty_container=True)

