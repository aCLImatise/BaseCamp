&id002 !Command
positional:
- !Positional
  description: ''
  position: 0
  name: input_obj
  optional: false
- !Positional
  description: ''
  position: 1
  name: output_obj
  optional: false
named:
- !Flag
  description: '[anndata|loom] Input object format.  [default: anndata]'
  synonyms:
  - -f
  - --input-format
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '[anndata|loom|zarr] Output object format.  [default: anndata]'
  synonyms:
  - -F
  - --output-format
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Chunk size for writing output in zarr format.  [default: 1000]'
  synonyms:
  - -z
  - --zarr-chunk-size
  args: !SimpleFlagArg
    name: INTEGER
  optional: true
- !Flag
  description: When specified, using it as prefix for exporting mtx files. If not
    empty and not ending with "/" or "_", a "_" will be appended.
  synonyms:
  - -X
  - --export-mtx
  args: !SimpleFlagArg
    name: PATH
  optional: true
- !Flag
  description: '[stdout|stderr]      Print output object summary info to specified
    stream.'
  synonyms:
  - --show-obj
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Export embeddings in a tab-separated text table.
  synonyms:
  - --export-cluster
  args: !SimpleFlagArg
    name: FILE
  optional: true
- !Flag
  description: 'Slot name under `.uns` that contains the KNN graph of which sparse
    adjacency matrix is used for clustering.  [default: neighbors]'
  synonyms:
  - --use-graph
  args: !SimpleFlagArg
    name: TEXT
  optional: true
- !Flag
  description: '/ --undirected       Interpret the adjacency matrix as directed graph.  [default:
    True]'
  synonyms:
  - --directed
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Use weights from KNN graph.  [default: False]'
  synonyms:
  - --use-weights
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '<TEXT TEXT[,TEXT...]>... Restrict the clustering to the categories
    within the key for sample annotation, in the form of "obs_key list_of_categories".
    [default: None, None]'
  synonyms:
  - --restrict-to
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Seed for random number generator.  [default: 0]'
  synonyms:
  - -S
  - --random-state
  args: !SimpleFlagArg
    name: INTEGER
  optional: true
- !Flag
  description: Key under which to add the computed results
  synonyms:
  - --key-added
  args: !OptionalFlagArg
    names:
    - TEXT
    - TEXT...
    separator: ','
  optional: true
- !Flag
  description: "A parameter value controlling the coarseness of the clustering. Higher\
    \ values lead to more clusters. Set to \"None\" if overriding --partition_type\
    \ to one that doesn't accept `resolution_parameter`.  [default: 1]"
  synonyms:
  - -r
  - --resolution
  args: !OptionalFlagArg
    names:
    - FLOAT
    - FLOAT...
    separator: ','
  optional: true
- !Flag
  description: 'How many iterations of the Leiden clustering algorithm to perform.
    -1 has the algorithm run until it reaches its optimal clustering. [default: -1]'
  synonyms:
  - --n-iterations
  args: !SimpleFlagArg
    name: INTEGER
  optional: true
command:
- scanpy-find-cluster
- leiden
parent: &id001 !Command
  positional: []
  named: []
  command:
  - scanpy-find-cluster
  parent:
  subcommands:
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: input_obj
      optional: false
    - !Positional
      description: ''
      position: 1
      name: output_obj
      optional: false
    named:
    - !Flag
      description: '[anndata|loom] Input object format.  [default: anndata]'
      synonyms:
      - -f
      - --input-format
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '[anndata|loom|zarr] Output object format.  [default: anndata]'
      synonyms:
      - -F
      - --output-format
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Chunk size for writing output in zarr format.  [default: 1000]'
      synonyms:
      - -z
      - --zarr-chunk-size
      args: !SimpleFlagArg
        name: INTEGER
      optional: true
    - !Flag
      description: When specified, using it as prefix for exporting mtx files. If
        not empty and not ending with "/" or "_", a "_" will be appended.
      synonyms:
      - -X
      - --export-mtx
      args: !SimpleFlagArg
        name: PATH
      optional: true
    - !Flag
      description: '[stdout|stderr]      Print output object summary info to specified
        stream.'
      synonyms:
      - --show-obj
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export embeddings in a tab-separated text table.
      synonyms:
      - --export-cluster
      args: !SimpleFlagArg
        name: FILE
      optional: true
    - !Flag
      description: 'Slot name under `.uns` that contains the KNN graph of which sparse
        adjacency matrix is used for clustering.  [default: neighbors]'
      synonyms:
      - --use-graph
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    - !Flag
      description: '/ --undirected       Interpret the adjacency matrix as directed
        graph.  [default: True]'
      synonyms:
      - --directed
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Use weights from KNN graph.  [default: False]'
      synonyms:
      - --use-weights
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '<TEXT TEXT[,TEXT...]>... Restrict the clustering to the categories
        within the key for sample annotation, in the form of "obs_key list_of_categories".
        [default: None, None]'
      synonyms:
      - --restrict-to
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Seed for random number generator.  [default: 0]'
      synonyms:
      - -S
      - --random-state
      args: !SimpleFlagArg
        name: INTEGER
      optional: true
    - !Flag
      description: Key under which to add the computed results
      synonyms:
      - --key-added
      args: !OptionalFlagArg
        names:
        - TEXT
        - TEXT...
        separator: ','
      optional: true
    - !Flag
      description: '[vtraag|igraph]        Choose between two packages for computing
        the clustering. "vtraag" is much powerful, and the default.  [default: vtraag]'
      synonyms:
      - --flavor
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'For the default flavor "vtraag", you can provide a resolution.
        Higher resolution means finding more and smaller clusters. [default: 1]'
      synonyms:
      - -r
      - --resolution
      args: !OptionalFlagArg
        names:
        - FLOAT
        - FLOAT...
        separator: ','
      optional: true
    command:
    - scanpy-find-cluster
    - louvain
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: scanpy-find-cluster louvain [OPTIONS] <input_obj> <output_obj>\n\
      \n  Find clusters by Louvain algorithm.\n\n  <input_obj>:   input file in format\
      \ specfied by --input-format\n  <output_obj>:  output file in format specfied\
      \ by --output-format\n\nOptions:\n  -f, --input-format [anndata|loom]\n    \
      \                              Input object format.  [default: anndata]\n  -F,\
      \ --output-format [anndata|loom|zarr]\n                                  Output\
      \ object format.  [default: anndata]\n  -z, --zarr-chunk-size INTEGER   Chunk\
      \ size for writing output in zarr\n                                  format.\
      \  [default: 1000]\n\n  -X, --export-mtx PATH           When specified, using\
      \ it as prefix for\n                                  exporting mtx files. If\
      \ not empty and not\n                                  ending with \"/\" or\
      \ \"_\", a \"_\" will be\n                                  appended.\n\n  --show-obj\
      \ [stdout|stderr]      Print output object summary info to\n               \
      \                   specified stream.\n\n  --export-cluster FILE           Export\
      \ embeddings in a tab-separated text\n                                  table.\n\
      \n  --use-graph TEXT                Slot name under `.uns` that contains the\
      \ KNN\n                                  graph of which sparse adjacency matrix\
      \ is\n                                  used for clustering.  [default: neighbors]\n\
      \n  --directed / --undirected       Interpret the adjacency matrix as directed\n\
      \                                  graph.  [default: True]\n\n  --use-weights\
      \                   Use weights from KNN graph.  [default:\n               \
      \                   False]\n\n  --restrict-to <TEXT TEXT[,TEXT...]>...\n   \
      \                               Restrict the clustering to the categories\n\
      \                                  within the key for sample annotation, in\
      \ the\n                                  form of \"obs_key list_of_categories\"\
      .\n                                  [default: None, None]\n\n  -S, --random-state\
      \ INTEGER      Seed for random number generator.  [default:\n              \
      \                    0]\n\n  --key-added TEXT[,TEXT...]      Key under which\
      \ to add the computed results\n  --flavor [vtraag|igraph]        Choose between\
      \ two packages for computing\n                                  the clustering.\
      \ \"vtraag\" is much powerful,\n                                  and the default.\
      \  [default: vtraag]\n\n  -r, --resolution FLOAT[,FLOAT...]\n              \
      \                    For the default flavor \"vtraag\", you can\n          \
      \                        provide a resolution. Higher resolution\n         \
      \                         means finding more and smaller clusters.\n       \
      \                           [default: 1]\n\n  --help                       \
      \   Show this message and exit.\n"
    generated_using: &id003
    - --help
  - *id002
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Usage: scanpy-find-cluster [OPTIONS] COMMAND [ARGS]...\n\n  Cluster\
    \ cells into sub-populations.\n\nOptions:\n  --help  Show this message and exit.\n\
    \nCommands:\n  louvain  Find clusters by Louvain algorithm.\n  leiden   Find clusters\
    \ by Leiden algorithm.\n"
  generated_using: *id003
subcommands: []
help_flag: !Flag
  description: Show this message and exit.
  synonyms:
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "Usage: scanpy-find-cluster leiden [OPTIONS] <input_obj> <output_obj>\n\
  \n  Find clusters by Leiden algorithm.\n\n  <input_obj>:   input file in format\
  \ specfied by --input-format\n  <output_obj>:  output file in format specfied by\
  \ --output-format\n\nOptions:\n  -f, --input-format [anndata|loom]\n           \
  \                       Input object format.  [default: anndata]\n  -F, --output-format\
  \ [anndata|loom|zarr]\n                                  Output object format. \
  \ [default: anndata]\n  -z, --zarr-chunk-size INTEGER   Chunk size for writing output\
  \ in zarr\n                                  format.  [default: 1000]\n\n  -X, --export-mtx\
  \ PATH           When specified, using it as prefix for\n                      \
  \            exporting mtx files. If not empty and not\n                       \
  \           ending with \"/\" or \"_\", a \"_\" will be\n                      \
  \            appended.\n\n  --show-obj [stdout|stderr]      Print output object\
  \ summary info to\n                                  specified stream.\n\n  --export-cluster\
  \ FILE           Export embeddings in a tab-separated text\n                   \
  \               table.\n\n  --use-graph TEXT                Slot name under `.uns`\
  \ that contains the KNN\n                                  graph of which sparse\
  \ adjacency matrix is\n                                  used for clustering.  [default:\
  \ neighbors]\n\n  --directed / --undirected       Interpret the adjacency matrix\
  \ as directed\n                                  graph.  [default: True]\n\n  --use-weights\
  \                   Use weights from KNN graph.  [default:\n                   \
  \               False]\n\n  --restrict-to <TEXT TEXT[,TEXT...]>...\n           \
  \                       Restrict the clustering to the categories\n            \
  \                      within the key for sample annotation, in the\n          \
  \                        form of \"obs_key list_of_categories\".\n             \
  \                     [default: None, None]\n\n  -S, --random-state INTEGER    \
  \  Seed for random number generator.  [default:\n                              \
  \    0]\n\n  --key-added TEXT[,TEXT...]      Key under which to add the computed\
  \ results\n  -r, --resolution FLOAT[,FLOAT...]\n                               \
  \   A parameter value controlling the coarseness\n                             \
  \     of the clustering. Higher values lead to\n                               \
  \   more clusters. Set to \"None\" if overriding\n                             \
  \     --partition_type to one that doesn't accept\n                            \
  \      `resolution_parameter`.  [default: 1]\n\n  --n-iterations INTEGER       \
  \   How many iterations of the Leiden clustering\n                             \
  \     algorithm to perform. -1 has the algorithm\n                             \
  \     run until it reaches its optimal clustering.\n                           \
  \       [default: -1]\n\n  --help                          Show this message and\
  \ exit.\n"
generated_using: *id003
