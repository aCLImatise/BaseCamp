!Command
positional: []
named:
- !Flag
  description: Append TOKEN to the path variable named 'VAR'
  synonyms:
  - -A
  args: !SimpleFlagArg
    name: TOKEN
  optional: true
- !Flag
  description: =newdir     Change <olddir> to <newdir> within 'VAR'
  synonyms:
  - -C
  args: !SimpleFlagArg
    name: olddir
  optional: true
- !Flag
  description: Prepend TOKEN to the path variable named 'VAR'
  synonyms:
  - -P
  args: !SimpleFlagArg
    name: TOKEN
  optional: true
- !Flag
  description: ",(-|+)TOKEN]   Insert TOKEN before (-) or after (+) 'dir' in VAR"
  synonyms:
  - -I
  args: !SimpleFlagArg
    name: dir
  optional: true
- !Flag
  description: '[VAR]             List specified pathvar(s) in one-entry-per-line
    fmt'
  synonyms:
  - -L
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Remove entries which don't exist
  synonyms:
  - -N
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Remove specified dir from path
  synonyms:
  - -R
  args: !SimpleFlagArg
    name: TOKEN
  optional: true
- !Flag
  description: '[VAR]             Print specified pathvars in form suitable for `eval`'
  synonyms:
  - -S
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Remove redundant entries from path
  synonyms:
  - -U
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Like 'whence' ksh builtin - look for 'file' on PATH
  synonyms:
  - -W
  args: !SimpleFlagArg
    name: file
  optional: true
command:
- envpath
subcommands: []
help_flag: !Flag
  description: Print this message and exit
  synonyms:
  - -help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
