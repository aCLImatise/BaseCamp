from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, Boolean, File, String

Swarm_V0_1_0 = CommandToolBuilder(tool="swarm", base_command=["swarm"], inputs=[ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="number of threads to use (1)")), ToolInput(tag="in_differences", input_type=Int(optional=True), prefix="--differences", doc=InputDocumentation(doc="resolution (1)")), ToolInput(tag="in_no_otu_breaking", input_type=Boolean(optional=True), prefix="--no-otu-breaking", doc=InputDocumentation(doc="never break OTUs (not recommended!)")), ToolInput(tag="in_boundary", input_type=Int(optional=True), prefix="--boundary", doc=InputDocumentation(doc="min mass of large OTUs (3)")), ToolInput(tag="in_ceiling", input_type=Int(optional=True), prefix="--ceiling", doc=InputDocumentation(doc="max memory in MB for Bloom filter (unlim.)")), ToolInput(tag="in_fastidious", input_type=Boolean(optional=True), prefix="--fastidious", doc=InputDocumentation(doc="link nearby low-abundance swarms")), ToolInput(tag="in_bloom_bits", input_type=Int(optional=True), prefix="--bloom-bits", doc=InputDocumentation(doc="bits used per Bloom filter entry (16)")), ToolInput(tag="in_append_abundance", input_type=Int(optional=True), prefix="--append-abundance", doc=InputDocumentation(doc="value to use when abundance is missing")), ToolInput(tag="in_internal_structure", input_type=File(optional=True), prefix="--internal-structure", doc=InputDocumentation(doc="write internal OTU structure to file")), ToolInput(tag="in_log", input_type=File(optional=True), prefix="--log", doc=InputDocumentation(doc="log to file, not to stderr")), ToolInput(tag="in_output_file", input_type=File(optional=True), prefix="--output-file", doc=InputDocumentation(doc="output result to file (stdout)")), ToolInput(tag="in_mo_thur", input_type=Boolean(optional=True), prefix="--mothur", doc=InputDocumentation(doc="output using mothur-like format")), ToolInput(tag="in_statistics_file", input_type=File(optional=True), prefix="--statistics-file", doc=InputDocumentation(doc="dump OTU statistics to file")), ToolInput(tag="in_uc_lust_file", input_type=File(optional=True), prefix="--uclust-file", doc=InputDocumentation(doc="output using UCLUST-like format to file")), ToolInput(tag="in_seeds", input_type=File(optional=True), prefix="--seeds", doc=InputDocumentation(doc="write OTU representatives to FASTA file")), ToolInput(tag="in_u_search_abundance", input_type=Boolean(optional=True), prefix="--usearch-abundance", doc=InputDocumentation(doc="abundance annotation in usearch style")), ToolInput(tag="in_match_reward", input_type=Int(optional=True), prefix="--match-reward", doc=InputDocumentation(doc="reward for nucleotide match (5)")), ToolInput(tag="in_mismatch_penalty", input_type=Int(optional=True), prefix="--mismatch-penalty", doc=InputDocumentation(doc="penalty for nucleotide mismatch (4)")), ToolInput(tag="in_gap_opening_penalty", input_type=Int(optional=True), prefix="--gap-opening-penalty", doc=InputDocumentation(doc="gap open penalty (12)")), ToolInput(tag="in_gap_extension_penalty", input_type=Int(optional=True), prefix="--gap-extension-penalty", doc=InputDocumentation(doc="gap extension penalty (4)")), ToolInput(tag="in_fast_a_file", input_type=String(optional=True), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_file", type_hint=File()), doc=OutputDocumentation(doc="output result to file (stdout)")), ToolOutput(tag="out_uc_lust_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_uc_lust_file", type_hint=File()), doc=OutputDocumentation(doc="output using UCLUST-like format to file"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Swarm_V0_1_0().translate("wdl", allow_empty_container=True)

