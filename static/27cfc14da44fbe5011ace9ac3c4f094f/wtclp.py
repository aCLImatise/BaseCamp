from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Float, String, Boolean, File, Int

Wtclp_V0_1_0 = CommandToolBuilder(tool="wtclp", base_command=["wtclp"], inputs=[ToolInput(tag="in_overlap_file_readsttlentbegtendtreadsttlentbegtendtscoretidentityfloattmattmistinstdeltcigar", input_type=Float(optional=True), prefix="-i", doc=InputDocumentation(doc="Overlap file from wtzmo, +, *\nFormat: reads1\t+/-\tlen1\tbeg1\tend1\treads2\t+/-\tlen2\tbeg2\tend2\tscore\tidentity<float>\tmat\tmis\tins\tdel\tcigar")), ToolInput(tag="in_long_reads_region", input_type=String(optional=True), prefix="-b", doc=InputDocumentation(doc="Long reads retained region, often from wtobt/wtcyc, +\nFormat: read_name\toffset\tlength\toriginal_len")), ToolInput(tag="in_ouput_reads_regions", input_type=Boolean(optional=True), prefix="-o", doc=InputDocumentation(doc="Ouput of reads' regions after clipping, -:stdout, *\nFormat: read_name\toffset\tlength")), ToolInput(tag="in_force_overwrite_output", input_type=File(optional=True), prefix="-f", doc=InputDocumentation(doc="Force overwrite output file")), ToolInput(tag="in_keep_full_length", input_type=Boolean(optional=True), prefix="-F", doc=InputDocumentation(doc="Keep full length or clip all")), ToolInput(tag="in_minimum_length_alignment", input_type=Int(optional=True), prefix="-s", doc=InputDocumentation(doc="Minimum length of alignment, [1000]")), ToolInput(tag="in_minimum_identity_alignment", input_type=Float(optional=True), prefix="-m", doc=InputDocumentation(doc="Minimum identity of alignment, [0.6]")), ToolInput(tag="in_trun_specical_reservation", input_type=Boolean(optional=True), prefix="-C", doc=InputDocumentation(doc="Trun off specical reservation for reads contained by others\nDefault: one read (A) will not be trimmed when it is contained by another read (B).")), ToolInput(tag="in_bin_size", input_type=Int(optional=True), prefix="-k", doc=InputDocumentation(doc="Bin size, [50]")), ToolInput(tag="in_window_size_used", input_type=Int(optional=True), prefix="-w", doc=InputDocumentation(doc="Window size used in chimera detection, [1000]")), ToolInput(tag="in_min_number_solid", input_type=Int(optional=True), prefix="-d", doc=InputDocumentation(doc="Min number of solid overlaps in a suspecting region to reject chimeric, [3]")), ToolInput(tag="in_max_turns_iterations", input_type=Int(optional=True), prefix="-n", doc=InputDocumentation(doc="Max turns of iterations, [5]")), ToolInput(tag="in_treat_read_path", input_type=Boolean(optional=True), prefix="-T", doc=InputDocumentation(doc="Treat read as a path of many blocks broken by possible chimeric sites, and test whether the path is valid\nwill disable iteration, connection checking")), ToolInput(tag="in_debug_chimera_checking", input_type=Int(optional=True), prefix="-x", doc=InputDocumentation(doc="For debug. 1: chimera checking; 2: conntection checking; 4: clip high error ending [7]")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="Verbose")), ToolInput(tag="in_print_message_special", input_type=Int(optional=True), prefix="-8", doc=InputDocumentation(doc="Print message for special read"))], outputs=[ToolOutput(tag="out_force_overwrite_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_force_overwrite_output", type_hint=File()), doc=OutputDocumentation(doc="Force overwrite output file"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Wtclp_V0_1_0().translate("wdl", allow_empty_container=True)

