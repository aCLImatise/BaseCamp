!Command
command:
- partial_least_squares.py
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -i
  - --input
  description: Input dataset in wide format.
  args: !SimpleFlagArg
    name: INPUT
- !Flag
  optional: true
  synonyms:
  - -d
  - --design
  description: Design file.
  args: !SimpleFlagArg
    name: DESIGN
- !Flag
  optional: true
  synonyms:
  - -id
  - --ID
  description: Name of the column with unique identifiers.
  args: !SimpleFlagArg
    name: UNIQID
- !Flag
  optional: true
  synonyms:
  - -g
  - --group
  description: Name of the column with groups.
  args: !SimpleFlagArg
    name: GROUP
- !Flag
  optional: true
  synonyms:
  - -l
  - --levels
  description: Different groups to sort by separeted by commas.
  args: !SimpleFlagArg
    name: LEVELS
- !Flag
  optional: true
  synonyms:
  - -t
  - --toCompare
  description: Name of the elements to compare in group col.
  args: !SimpleFlagArg
    name: TOCOMPARE
- !Flag
  optional: true
  synonyms:
  - -cv
  - --cross_validation
  description: "Choice of cross-validation procedure for the -nc\ndeterminantion:\
    \ none, single, double."
  args: !SimpleFlagArg
    name: CROSS_VALIDATION
- !Flag
  optional: true
  synonyms:
  - -n
  - --nComp
  description: Number of components.
  args: !SimpleFlagArg
    name: NCOMP
- !Flag
  optional: true
  synonyms:
  - -os
  - --outScores
  description: Name of output file to store loadings. TSV format.
  args: !SimpleFlagArg
    name: OUTSCORES
- !Flag
  optional: true
  synonyms:
  - -ow
  - --outWeights
  description: Name of output file to store weights. TSV format.
  args: !SimpleFlagArg
    name: OUTWEIGHTS
- !Flag
  optional: true
  synonyms:
  - -oc
  - --outClassification
  description: "Name of output file to store classification. TSV\nformat."
  args: !SimpleFlagArg
    name: OUTCLASSIFICATION
- !Flag
  optional: true
  synonyms:
  - -oca
  - --outClassificationAccuracy
  description: "Name of output file to store classification accuracy.\nTSV format."
  args: !SimpleFlagArg
    name: OUTCLASSIFICATIONACCURACY
- !Flag
  optional: true
  synonyms:
  - -f
  - --figure
  description: Name of output file to store scatter plots for scores
  args: !SimpleFlagArg
    name: FIGURE
- !Flag
  optional: true
  synonyms:
  - -pal
  - --palette
  description: Name of the palette to use.
  args: !SimpleFlagArg
    name: PALETTE
- !Flag
  optional: true
  synonyms:
  - -col
  - --color
  description: Name of a valid color scheme on the selected palette
  args: !SimpleFlagArg
    name: COLOR
- !Flag
  optional: true
  synonyms:
  - --debug
  description: Add debugging log output.
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "usage: partial_least_squares.py [-h] -i INPUT -d DESIGN -id UNIQID -g\
  \ GROUP\n                                [-l LEVELS] -t TOCOMPARE -cv CROSS_VALIDATION\n\
  \                                [-n NCOMP] -os OUTSCORES -ow OUTWEIGHTS -oc\n \
  \                               OUTCLASSIFICATION -oca\n                       \
  \         OUTCLASSIFICATIONACCURACY [-f FIGURE]\n                              \
  \  [-pal PALETTE] [-col COLOR] [--debug]\n\n  \n    This script performs Partial\
  \ Least Squares Discriminant Analysis (PLS-DA) for the selected groups\n\n    \n\
  \noptional arguments:\n  -h, --help            show this help message and exit\n\
  \nStandard input:\n  Standard input for SECIM tools.\n\n  -i INPUT, --input INPUT\n\
  \                        Input dataset in wide format.\n  -d DESIGN, --design DESIGN\n\
  \                        Design file.\n  -id UNIQID, --ID UNIQID\n             \
  \           Name of the column with unique identifiers.\n  -g GROUP, --group GROUP\n\
  \                        Name of the column with groups.\n  -l LEVELS, --levels\
  \ LEVELS\n                        Different groups to sort by separeted by commas.\n\
  \nTool specific input:\n  Input specific for this tool.\n\n  -t TOCOMPARE, --toCompare\
  \ TOCOMPARE\n                        Name of the elements to compare in group col.\n\
  \  -cv CROSS_VALIDATION, --cross_validation CROSS_VALIDATION\n                 \
  \       Choice of cross-validation procedure for the -nc\n                     \
  \   determinantion: none, single, double.\n  -n NCOMP, --nComp NCOMP\n         \
  \               Number of components.\n\nRequired output:\n  -os OUTSCORES, --outScores\
  \ OUTSCORES\n                        Name of output file to store loadings. TSV\
  \ format.\n  -ow OUTWEIGHTS, --outWeights OUTWEIGHTS\n                        Name\
  \ of output file to store weights. TSV format.\n  -oc OUTCLASSIFICATION, --outClassification\
  \ OUTCLASSIFICATION\n                        Name of output file to store classification.\
  \ TSV\n                        format.\n  -oca OUTCLASSIFICATIONACCURACY, --outClassificationAccuracy\
  \ OUTCLASSIFICATIONACCURACY\n                        Name of output file to store\
  \ classification accuracy.\n                        TSV format.\n  -f FIGURE, --figure\
  \ FIGURE\n                        Name of output file to store scatter plots for\
  \ scores\n\nPlot options:\n  -pal PALETTE, --palette PALETTE\n                 \
  \       Name of the palette to use.\n  -col COLOR, --color COLOR\n             \
  \           Name of a valid color scheme on the selected palette\n\nDevelopment\
  \ Settings:\n  --debug               Add debugging log output.\n"
generated_using:
- --help
docker_image:
