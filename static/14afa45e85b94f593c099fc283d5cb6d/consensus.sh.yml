!Command
command:
- consensus.sh
positional:
- !Positional
  description: ''
  position: 0
  name: in
  optional: false
named:
- !Flag
  description: "This will set Java's memory usage, overriding autodetection.\n-Xmx20g\
    \ will specify 20 gigs of RAM, and -Xmx200m will\nspecify 200 megs. The max is\
    \ typically 85% of physical memory."
  synonyms:
  - -Xmx
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "This flag will cause the process to exit if an out-of-memory\nexception\
    \ occurs.  Requires Java 8u92+."
  synonyms:
  - -eoom
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Disable assertions.
  synonyms:
  - -da
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "\nWritten by Brian Bushnell\nLast modified February 10, 2020\n\nDescription:\
  \  Generates the consensus sequence of a reference\nusing aligned sequences.  This\
  \ can be used for polishing assemblies,\nmaking representative ribosomal sub units,\
  \ correcting PacBio reads, etc.\n\nIf unaligned sequences are used as input, they\
  \ should be in fasta or fastq\nformat, and they will be aligned to the first reference\
  \ sequence.\n\nUsage:  consensus.sh in=mapped.sam ref=ref.fa out=consensus.fa\n\n\
  Recommended settings for assembly polishing via Illumina reads:  mafsub=0.5\n\n\n\
  Standard parameters:\nin=<file>       Reads mapped to the reference; should be sam\
  \ or bam.\nref=<file>      Reference; may be fasta or fastq.\nout=<file>      Modified\
  \ reference; may be fasta or fastq.\noutm=<file>     Optional output for binary\
  \ model file.\n                Preferred extension is .alm.\ninm=<file>      Optional\
  \ input model file for statistics.\nhist=<file>     Optional score histogram output.\n\
  overwrite=f     (ow) Set to false to force the program to abort rather than\n  \
  \              overwrite an existing file.\n\nProcessing parameters:\nmindepth=2\
  \      Do not change to alleles present at depth below this.\nmafsub=0.25     Do\
  \ not incorporate substitutions below this allele fraction.\nmafdel=0.50     Do\
  \ not incorporate deletions below this allele fraction.\nmafins=0.50     Do not\
  \ incorporate insertions below this allele fraction.\nmafn=0.40       Do not change\
  \ Ns (noref) to calls below this allele fraction.\nusemapq=f       Include mapq\
  \ as a positive factor in edge weight.\nnonly=f         Only change Ns to different\
  \ bases.\nnoindels=f      Don't allow indels.\nceiling=        If set, alignments\
  \ will be weighted by their inverse identity.\n                For example, at ceiling=105,\
  \ a read with 96% identity will get\n                bonus weight of 105-96=9 while\
  \ a read with 70% identity will\n                get 105-70=35.  This favors low-identity\
  \ reads.\nname=           Set the output sequence name (for a single output sequence).\n\
  \nJava Parameters:\n-Xmx            This will set Java's memory usage, overriding\
  \ autodetection.\n                -Xmx20g will specify 20 gigs of RAM, and -Xmx200m\
  \ will\n                specify 200 megs. The max is typically 85% of physical memory.\n\
  -eoom           This flag will cause the process to exit if an out-of-memory\n \
  \               exception occurs.  Requires Java 8u92+.\n-da             Disable\
  \ assertions.\n\nPlease contact Brian Bushnell at bbushnell@lbl.gov if you encounter\
  \ any problems.\n\n"
generated_using:
- --help
