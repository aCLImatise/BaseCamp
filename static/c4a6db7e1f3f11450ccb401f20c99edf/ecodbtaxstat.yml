!Command
command:
- ecodbtaxstat
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - --DEBUG
  description: Set logging in debug mode
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --without-progress-bar
  description: desactivate progress bar
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --rank
  description: "The taxonomic rank at which frequencies have to be\ncomputed. Possible\
    \ values are: class, family, forma,\ngenus, infraclass, infraorder, kingdom, order,\n\
    parvorder, phylum, species, species group, species\nsubgroup, subclass, subfamily,\
    \ subgenus, subkingdom,\nsuborder, subphylum, subspecies, subtribe, superclass,\n\
    superfamily, superkingdom, superorder, superphylum,\ntribe or varietas. (Default:\
    \ species)"
  args: !SimpleFlagArg
    name: taxonomic rank
- !Flag
  optional: true
  synonyms:
  - -d
  - --database
  description: ecoPCR taxonomy Database name
  args: !SimpleFlagArg
    name: FILENAME
- !Flag
  optional: true
  synonyms:
  - -t
  - --taxonomy-dump
  description: NCBI Taxonomy dump repository name
  args: !SimpleFlagArg
    name: FILENAME
- !Flag
  optional: true
  synonyms:
  - --require-rank
  description: "select sequence with taxid tag containing a parent of\nrank <RANK_NAME>"
  args: !SimpleFlagArg
    name: RANK_NAME
- !Flag
  optional: true
  synonyms:
  - -r
  - --required
  description: "Select the sequences having the ancestor of taxid\n<TAXID>. If several\
    \ ancestors are specified (with  '-r\ntaxid1 -r taxid2'), the sequences having\
    \ at least one\nof them are selected"
  args: !SimpleFlagArg
    name: TAXID
- !Flag
  optional: true
  synonyms:
  - -i
  - --ignore
  description: "ignored taxid\n"
  args: !SimpleFlagArg
    name: TAXID
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "Usage: \n:py:mod:`ecodbtaxstat`: gives taxonomic rank frequency of a given\
  \ ``ecopcr`` database   \n=====================================================================================\n\
  \n.. codeauthor:: Eric Coissac <eric.coissac@metabarcoding.org>\n\nThe :py:mod:`ecodbtaxstat`\
  \ command requires an ``ecopcr`` database and a taxonomic rank \n(specified by the\
  \ ``--rank`` option, default *species*). The command outputs first \nthe total number\
  \ of sequence records in the database having taxonomic information at this rank,\
  \ \nand then the number of sequence records for each value of this rank.\n\n\n\n\
  ***********\n* Options *\n***********\n  -h, --help            show this help message\
  \ and exit\n  --DEBUG               Set logging in debug mode\n  --without-progress-bar\n\
  \                        desactivate progress bar\n\n  ********************************\n\
  \  * ecodbtaxstat specific option *\n  ********************************\n    --rank=<taxonomic\
  \ rank>\n                        The taxonomic rank at which frequencies have to\
  \ be\n                        computed. Possible values are: class, family, forma,\n\
  \                        genus, infraclass, infraorder, kingdom, order,\n      \
  \                  parvorder, phylum, species, species group, species\n        \
  \                subgroup, subclass, subfamily, subgenus, subkingdom,\n        \
  \                suborder, subphylum, subspecies, subtribe, superclass,\n      \
  \                  superfamily, superkingdom, superorder, superphylum,\n       \
  \                 tribe or varietas. (Default: species)\n\n  ****************************\n\
  \  * Taxonomy loading options *\n  ****************************\n    -d <FILENAME>,\
  \ --database=<FILENAME>\n                        ecoPCR taxonomy Database name\n\
  \    -t <FILENAME>, --taxonomy-dump=<FILENAME>\n                        NCBI Taxonomy\
  \ dump repository name\n\n  **************************************\n  * Taxonomy-related\
  \ filtering options *\n  **************************************\n    --require-rank=<RANK_NAME>\n\
  \                        select sequence with taxid tag containing a parent of\n\
  \                        rank <RANK_NAME>\n    -r <TAXID>, --required=<TAXID>\n\
  \                        Select the sequences having the ancestor of taxid\n   \
  \                     <TAXID>. If several ancestors are specified (with  '-r\n \
  \                       taxid1 -r taxid2'), the sequences having at least one\n\
  \                        of them are selected\n    -i <TAXID>, --ignore=<TAXID>\n\
  \                        ignored taxid\n"
generated_using:
- --help
docker_image:
