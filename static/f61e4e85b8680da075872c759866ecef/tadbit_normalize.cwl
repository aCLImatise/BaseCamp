class: CommandLineTool
id: ../../../../home/ubuntu/BiocondaCli/tadbit_normalize.cwl
inputs:
- id: workdir
  doc: path to working directory (generated with the tool tadbit mapper)
  type: File
  inputBinding:
    prefix: --workdir
- id: resolution
  doc: resolution at which to output matrices
  type: long
  inputBinding:
    prefix: --resolution
- id: bam
  doc: path to a TADbit-generated BAM file with all reads (other wise the tool will
    guess from the working directory database)
  type: File
  inputBinding:
    prefix: --bam
- id: jobid
  doc: Use as input data generated by a job with a given jobid. Use tadbit describe
    to find out which.
  type: long
  inputBinding:
    prefix: --jobid
- id: max_n_jobs
  doc: '[100] Define maximum number of jobs for reading BAM file (set to higher numbers
    for large files and low RAM memory).'
  type: long
  inputBinding:
    prefix: --max_njobs
- id: force
  doc: overwrite previously run job
  type: boolean
  inputBinding:
    prefix: --force
- id: tmp_db
  doc: if provided uses this directory to manipulate the database
  type: File
  inputBinding:
    prefix: --tmpdb
- id: cpus
  doc: '[8] Maximum number of CPU cores available in the execution host. If higher
    than 1, tasks with multi-threading capabilities will enabled (if 0 all available)
    cores will be used'
  type: string
  inputBinding:
    prefix: --cpus
- id: normalize_only
  doc: skip calculation of Cis-percentage and decay
  type: boolean
  inputBinding:
    prefix: --normalize_only
- id: nox
  doc: no display server (X screen)
  type: boolean
  inputBinding:
    prefix: --noX
- id: perc_zeros
  doc: '[95%] maximum percentage of zeroes allowed per column.'
  type: double
  inputBinding:
    prefix: --perc_zeros
- id: min_count
  doc: '[None] minimum number of reads mapped to a bin (recommended value could be
    2500). If set this option overrides the perc_zero filtering... This option is
    slightly slower.'
  type: long
  inputBinding:
    prefix: --min_count
- id: min_perc
  doc: '[None] lower percentile from which consider bins as good.'
  type: long
  inputBinding:
    prefix: --min_perc
- id: max_perc
  doc: '[None] upper percentile until which consider bins as good.'
  type: long
  inputBinding:
    prefix: --max_perc
- id: filter_only
  doc: skip normalization
  type: boolean
  inputBinding:
    prefix: --filter_only
- id: fast_filter
  doc: only filter according to the percentage of zero count or minimum count of reads
  type: boolean
  inputBinding:
    prefix: --fast_filter
- id: pospos_extra_regions
  doc: ':POS1-POS2 [CHR:POS1-POS2 ...], --badcols CHR:POS1-POS2 [CHR:POS1-POS2 ...]
    extra regions to be added to bad-columns (ingenomic position). e.g.: --badcols
    1:150000000-160000000 2:1200000-1300000'
  type: string
  inputBinding:
    prefix: -B
- id: filter
  doc: "[[1, 2, 3, 4, 6, 7, 9, 10]] Use filters to define a set os valid pair of reads\
    \ e.g.: '--apply 1 2 3 4 8 9 10'. Where these numberscorrespond to: 1: self-circle,\
    \ 2: dangling-end, 3: error, 4: extra dangling-end, 5: too close from RES, 6:\
    \ too short, 7: too large, 8: over-represented, 9: duplicated, 10: random breaks,\
    \ 11: trans-chromosomic"
  type: long[]
  inputBinding:
    prefix: --filter
- id: valid
  doc: input BAM file contains only valid pairs (already filtered).
  type: boolean
  inputBinding:
    prefix: --valid
- id: normalization
  doc: '[Vanilla] normalization(s) to apply. Order matters. Choices: Vanilla, ICE,
    SQRT, oneD, custom'
  type: string
  inputBinding:
    prefix: --normalization
- id: biases_path
  doc: 'biases file to compute decay. REQUIRED with "custom" normalization. Format:
    single column with header'
  type: string
  inputBinding:
    prefix: --biases_path
- id: mapp_ability
  doc: 'Path to mappability bedGraph file, required for oneD normalization. Mappability
    file can be generated with GEM (example from the genomic FASTA file hg38.fa):
    gem-indexer -i hg38.fa -o hg38 gem-mappability -I hg38.gem -l 50 -o hg38.50mer
    -T 8 gem-2-wig -I hg38.gem -i hg38.50mer.mappability -o hg38.50mer wigToBigWig
    hg38.50mer.wig hg38.50mer.sizes hg38.50mer.bw bigWigToBedGraph hg38.50mer.bw  hg38.50mer.bedGraph'
  type: File
  inputBinding:
    prefix: --mappability
- id: fast_a
  doc: Path to FASTA file with genome sequence, to compute GC content and number of
    restriction sites per bin. Required for oneD normalization
  type: File
  inputBinding:
    prefix: --fasta
- id: renz
  doc: restriction enzyme name(s). Required for oneD normalization
  type: string
  inputBinding:
    prefix: --renz
- id: factor
  doc: '[1] target mean value of a cell after normalization (can be used to weight
    experiments before merging)'
  type: string
  inputBinding:
    prefix: --factor
- id: prop_data
  doc: '[1] Only for oneD normalization: proportion of data to be used in fitting
    (for very large datasets). Number between 0 and 1.'
  type: double
  inputBinding:
    prefix: --prop_data
- id: seed
  doc: '[1] Only for oneD normalization: seed number for the random picking of data
    when using the "prop_data" parameter'
  type: long
  inputBinding:
    prefix: --seed
outputs: []
cwlVersion: v1.1
baseCommand:
- tadbit
- normalize
