from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Boolean, Int, File

Rsat_Retrieve_Ensembl_Seq_V0_1_0 = CommandToolBuilder(tool="rsat_retrieve_ensembl_seq", base_command=["rsat", "retrieve-ensembl-seq"], inputs=[ToolInput(tag="in_org", input_type=String(optional=True), prefix="-org", doc=InputDocumentation(doc="underscore between words (eg 'homo_sapiens')\nIf this option is not used, the option -dbname must be used\ninstead.\n(type 'supported-organisms | grep EnsEMBL' to obtain the list of supported\norganisms)")), ToolInput(tag="in_ensembl_host", input_type=Boolean(optional=True), prefix="-ensemblhost", doc=InputDocumentation(doc="address of ensembl database server (default is EBI server)")), ToolInput(tag="in_dbname", input_type=String(optional=True), prefix="-dbname", doc=InputDocumentation(doc="of EnsEMBL database\n(alternative to organism)")), ToolInput(tag="in_db_version", input_type=Boolean(optional=True), prefix="-dbversion", doc=InputDocumentation(doc="version of ensembl database (example: 47)")), ToolInput(tag="in_feat_type", input_type=Boolean(optional=True), prefix="-feattype", doc=InputDocumentation(doc="Feature type.\nSupported: cds,exon,gene,intron,mrna,transcript,utr\nDefaut: mrna")), ToolInput(tag="in_type", input_type=Boolean(optional=True), prefix="-type", doc=InputDocumentation(doc="sequence type\nCurrently supported sequence types\nupstream (default)\ndownstream\nfeature")), ToolInput(tag="in_utr", input_type=Int(optional=True), prefix="-utr", doc=InputDocumentation(doc="Type(s) of UTR (untranslated region) to return.\nSupported: all | 5prime | 3prime")), ToolInput(tag="in_query_be_gene", input_type=Int(optional=True), prefix="-q", doc=InputDocumentation(doc="The query should be an EnsEMBL gene identifier (eg 'ENSG00000177799').\nMultiple queries can be entered by reiteratively using the -q\noption.")), ToolInput(tag="in_query_file_taken", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="query file. The first word of each line is taken as a query.\nThis option is incompatible with -q.")), ToolInput(tag="in_all", input_type=Boolean(optional=True), prefix="-all", doc=InputDocumentation(doc="return all genomic upstream/downstream regions")), ToolInput(tag="in_name_output_file", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="name of the output file")), ToolInput(tag="in_from", input_type=Boolean(optional=True), prefix="-from", doc=InputDocumentation(doc="#1 -to #2\nwhere #1 and #2 are numbers. #2 should be higher than #1.\nlimits of the region to extract, relative to feattype start or end\n(=position 0). Use negative values for upstream sequence.\nexample: -from -800 -to -1\nwill extract the 800 bp upstream the feattype start or end.\n(this is the default")), ToolInput(tag="in_no_orf", input_type=Boolean(optional=True), prefix="-noorf", doc=InputDocumentation(doc="the upstream/downstream sequence can only contain non-coding sequence.\ni.e. the -from values is modified if a predicted orf\nis encountered within its range.\nThe weaknesses of using this option are that\n- all predicted orf do not correspond to real orf,\n- there is no a priori reason to exclude a regulatory site\nwhich would overlap the upstream coding sequence.")), ToolInput(tag="in_no_gene", input_type=String(optional=True), prefix="-nogene", doc=InputDocumentation(doc="upstream/downstream sequence can only contain non-transcribed sequence.")), ToolInput(tag="in_mask_coding", input_type=Boolean(optional=True), prefix="-maskcoding", doc=InputDocumentation(doc="all coding sequence is replaced by N in the retrieved sequence")), ToolInput(tag="in_rm", input_type=Boolean(optional=True), prefix="-rm", doc=InputDocumentation(doc="Use the repeat masked version of the genome.  Attention :\nrepeated regions are annotated for some genomes only.")), ToolInput(tag="in_all_transcripts", input_type=Boolean(optional=True), prefix="-alltranscripts", doc=InputDocumentation(doc="Get sequences for all transcripts of genes.\nUse -uniqseqs if you do motif discovery afterwards")), ToolInput(tag="in_uniq_seqs", input_type=Boolean(optional=True), prefix="-uniqseqs", doc=InputDocumentation(doc="With -alltranscripts, returns only non-redondant sequences")), ToolInput(tag="in_first_intron", input_type=Boolean(optional=True), prefix="-firstintron", doc=InputDocumentation(doc="With feattype intron, get only first intron sequence")), ToolInput(tag="in_noncoding", input_type=Boolean(optional=True), prefix="-noncoding", doc=InputDocumentation(doc="With feattype exon, get only non-coding (part of) exons")), ToolInput(tag="in_chrom", input_type=Boolean(optional=True), prefix="-chrom", doc=InputDocumentation(doc="Chromosome name or number (to use with -left and -right)")), ToolInput(tag="in_left", input_type=Boolean(optional=True), prefix="-left", doc=InputDocumentation(doc="Left limit of sequence to retrieve")), ToolInput(tag="in_right", input_type=Boolean(optional=True), prefix="-right", doc=InputDocumentation(doc="Right limit of sequence to retrieve")), ToolInput(tag="in_strand", input_type=Int(optional=True), prefix="-strand", doc=InputDocumentation(doc="of sequence to retrieve when using -left and -right. Values: 1, -1")), ToolInput(tag="in_ft_file", input_type=File(optional=True), prefix="-ftfile", doc=InputDocumentation(doc="file")), ToolInput(tag="in_ft_file_format", input_type=Boolean(optional=True), prefix="-ftfileformat", doc=InputDocumentation(doc="Feature file format. Supported: ft, gft")), ToolInput(tag="in_ortho", input_type=Boolean(optional=True), prefix="-ortho", doc=InputDocumentation(doc="Retrieve homologous sequences from EnsEMBL Compara databases")), ToolInput(tag="in_ortho_type", input_type=Int(optional=True), prefix="-ortho_type", doc=InputDocumentation(doc="Filter on homology type. (example: ortholog, ortholog_one2one)")), ToolInput(tag="in_homologs_table", input_type=File(optional=True), prefix="-homologs_table", doc=InputDocumentation(doc="name\nPrints homology info to a tab delimited file")), ToolInput(tag="in_tax_on", input_type=String(optional=True), prefix="-taxon", doc=InputDocumentation(doc="Filter on taxonomic level (example: Mammalia)")), ToolInput(tag="in_header_org", input_type=Boolean(optional=True), prefix="-header_org", doc=InputDocumentation(doc="Type of organism name to use in the fasta header (scientific, common or none).\nDefault is scientific. Common name is only accessible with -ortho.")), ToolInput(tag="in_label", input_type=String(optional=True), prefix="-label", doc=InputDocumentation(doc="Information used as sequence label in the fasta header.\nSupported label types:\n-label query\nuse as sequence label the identifier or name used as query.\n")), ToolInput(tag="in_genomics", input_type=String(), position=0, doc=InputDocumentation(doc="sequences"))], outputs=[ToolOutput(tag="out_name_output_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_name_output_file", type_hint=File()), doc=OutputDocumentation(doc="name of the output file"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Rsat_Retrieve_Ensembl_Seq_V0_1_0().translate("wdl", allow_empty_container=True)

