from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, Float, String, Boolean

Busco_V0_1_0 = CommandToolBuilder(tool="busco", base_command=["busco"], inputs=[ToolInput(tag="in_file__fasta", input_type=File(optional=True), prefix="-i", doc=InputDocumentation(doc="FILE, --in FASTA FILE\nInput sequence file in FASTA format. Can be an assembled genome or transcriptome (DNA), or protein sequences from an annotated gene set.")), ToolInput(tag="in_cpu", input_type=Int(optional=True), prefix="--cpu", doc=InputDocumentation(doc="Specify the number (N=integer) of threads/cores to use.")), ToolInput(tag="in_out", input_type=File(optional=True), prefix="--out", doc=InputDocumentation(doc="Give your analysis run a recognisable short name. Output folders and files will be labelled with this name. WARNING: do not provide a path")), ToolInput(tag="in_out_path", input_type=File(optional=True), prefix="--out_path", doc=InputDocumentation(doc="Optional location for results folder, excluding results folder name. Default is current working directory.")), ToolInput(tag="in_evalue", input_type=Float(optional=True), prefix="--evalue", doc=InputDocumentation(doc="E-value cutoff for BLAST searches. Allowed formats, 0.001 or 1e-03 (Default: 1e-03)")), ToolInput(tag="in_specify_busco_mode", input_type=String(optional=True), prefix="--mode", doc=InputDocumentation(doc="Specify which BUSCO analysis mode to run.\nThere are three valid modes:\n- geno or genome, for genome assemblies (DNA)\n- tran or transcriptome, for transcriptome assemblies (DNA)\n- prot or proteins, for annotated gene sets (protein)")), ToolInput(tag="in_lineage_dataset", input_type=String(optional=True), prefix="--lineage_dataset", doc=InputDocumentation(doc="Specify the name of the BUSCO lineage to be used.")), ToolInput(tag="in_force", input_type=Boolean(optional=True), prefix="--force", doc=InputDocumentation(doc="Force rewriting of existing files. Must be used when output files with the provided name already exist.")), ToolInput(tag="in_limit", input_type=Int(optional=True), prefix="--limit", doc=InputDocumentation(doc="How many candidate regions (contig or transcript) to consider per BUSCO (default: 3)")), ToolInput(tag="in_long", input_type=Boolean(optional=True), prefix="--long", doc=InputDocumentation(doc="Optimization mode Augustus self-training (Default: Off) adds considerably to the run time, but can improve results for some non-model organisms")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="Disable the info logs, displays only errors")), ToolInput(tag="in_augustus_parameters", input_type=Int(optional=True), prefix="--augustus_parameters", doc=InputDocumentation(doc="Pass additional arguments to Augustus. All arguments should be contained within a single pair of quotation marks, separated by commas. E.g. '--param1=1,--param2=2'")), ToolInput(tag="in_augustus_species", input_type=String(optional=True), prefix="--augustus_species", doc=InputDocumentation(doc="Specify a species for Augustus training.")), ToolInput(tag="in_auto_lineage", input_type=Boolean(optional=True), prefix="--auto-lineage", doc=InputDocumentation(doc="Run auto-lineage to find optimum lineage path")), ToolInput(tag="in_auto_lineage_prok", input_type=Boolean(optional=True), prefix="--auto-lineage-prok", doc=InputDocumentation(doc="Run auto-lineage just on non-eukaryote trees to find optimum lineage path")), ToolInput(tag="in_auto_lineage_e_uk", input_type=Boolean(optional=True), prefix="--auto-lineage-euk", doc=InputDocumentation(doc="Run auto-placement just on eukaryote tree to find optimum lineage path")), ToolInput(tag="in_update_data", input_type=Boolean(optional=True), prefix="--update-data", doc=InputDocumentation(doc="Download and replace with last versions all lineages datasets and files necessary to their automated selection")), ToolInput(tag="in_offline", input_type=Boolean(optional=True), prefix="--offline", doc=InputDocumentation(doc="To indicate that BUSCO cannot attempt to download files")), ToolInput(tag="in_config", input_type=File(optional=True), prefix="--config", doc=InputDocumentation(doc="Provide a config file")), ToolInput(tag="in_list_datasets", input_type=Boolean(optional=True), prefix="--list-datasets", doc=InputDocumentation(doc="Print the list of available BUSCO datasets")), ToolInput(tag="in_sequence_file", input_type=String(optional=True), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_lineage", input_type=String(optional=True), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_output_name", input_type=String(optional=True), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_var_23", input_type=String(optional=True), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_other", input_type=String(optional=True), position=4, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out", type_hint=File()), doc=OutputDocumentation(doc="Give your analysis run a recognisable short name. Output folders and files will be labelled with this name. WARNING: do not provide a path")), ToolOutput(tag="out_out_path", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_path", type_hint=File()), doc=OutputDocumentation(doc="Optional location for results folder, excluding results folder name. Default is current working directory."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Busco_V0_1_0().translate("wdl", allow_empty_container=True)

