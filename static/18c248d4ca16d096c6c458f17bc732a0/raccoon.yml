!Command
command:
- raccoon
positional: []
named:
- !Flag
  description: ": doesn't show the Vision splash screen (works only if registered)"
  synonyms:
  - -s
  - --noSplash
  args: !SimpleFlagArg
    name: or
  optional: true
- !Flag
  description: ": vision provides its own shell (under menu 'Edit')\ninstead of the\
    \ terminal"
  synonyms:
  - -t
  - --noTerminal
  args: !SimpleFlagArg
    name: or
  optional: true
- !Flag
  description: ': stores resource file under .name (defaults to .mgltools)'
  synonyms:
  - --resourceFolder
  args: !SimpleFlagArg
    name: foldername
  optional: true
- !Flag
  description: ': create an ipython shell instead of a python shell'
  synonyms:
  - -p
  - --ipython
  args: !SimpleFlagArg
    name: or
  optional: true
- !Flag
  description: ': run the networks on the command line'
  synonyms:
  - -r
  - --run
  args: !SimpleFlagArg
    name: or
  optional: true
- !Flag
  description: ': run the networks and exit'
  synonyms:
  - -e
  - --runAndExit
  args: !SimpleFlagArg
    name: or
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: ': print this message'
  synonyms:
  - -h
  - --help
  args: !SimpleFlagArg
    name: or
  optional: true
usage_flag:
version_flag:
help_text: "usage: /usr/local/MGLToolsPckgs/CADD/Raccoon2/bin/raccoonLauncher <options>\
  \ <filenames>\n\n    Files filenames ending in \"net.py\" will be laoded as networks\
  \ in vision.\n    Other files will be executed as Python scripts in which \"ed\"\
  \ refers\n    to the VisualProgrammingEnvironment instance.\n    \n            -h\
  \ or --help : print this message\n            -s or --noSplash : doesn't show the\
  \ Vision splash screen (works only if registered)\n            -t or --noTerminal\
  \ : vision provides its own shell (under menu 'Edit') \n                       \
  \    instead of the terminal\n            --resourceFolder foldername  : stores\
  \ resource file under .name (defaults to .mgltools)    \n            -p or --ipython\
  \ : create an ipython shell instead of a python shell        \n            -r or\
  \ --run  : run the networks on the command line\n            -e or --runAndExit\
  \ : run the networks and exit\n\n            port values can be passed on the command\
  \ line (but not to macros):\n                             Network_net.py nodeName:portName:value\n\
  \n    \n"
generated_using:
- --help
