from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Array, Int, Directory, Boolean

Pancake_Core_V0_1_0 = CommandToolBuilder(tool="pancake_core", base_command=["pancake", "core"], inputs=[ToolInput(tag="in_pan_file", input_type=File(optional=True), prefix="--panfile", doc=InputDocumentation(doc="Name of PanCake Data Object File (required)")), ToolInput(tag="in_ref_chrom", input_type=String(optional=True), prefix="--ref_chrom", doc=InputDocumentation(doc="Reference CHROMOSOME (define either ONE reference\nchromosome OR ONE reference genome)")), ToolInput(tag="in_ref_genome", input_type=String(optional=True), prefix="--ref_genome", doc=InputDocumentation(doc="Reference GENOME (define either ONE reference\nchromosome OR ONE reference genome)")), ToolInput(tag="in_non_ref_chrom_s", input_type=Array(t=String(), optional=True), prefix="--non_ref_chroms", doc=InputDocumentation(doc="Names of non-reference CHROMOSOMES (DEFAULT: ALL non-\nreference chromosomes)")), ToolInput(tag="in_non_ref_genomes", input_type=Array(t=String(), optional=True), prefix="--non_ref_genomes", doc=InputDocumentation(doc="Names of non-reference GENOMES (DEFAULT: ALL non-\nreference genomes)")), ToolInput(tag="in_exclude_genomes", input_type=Array(t=String(), optional=True), prefix="--exclude_genomes", doc=InputDocumentation(doc="Names of GENOMES to exclude from core analysis\n(DEFAULT: No genomes excluded)")), ToolInput(tag="in_exclude_chromosomes", input_type=Array(t=String(), optional=True), prefix="--exclude_chromosomes", doc=InputDocumentation(doc="Names of CHROMOSOMES to exclude from core analysis\n(DEFAULT: No chromosomes excluded)")), ToolInput(tag="in_max_non_core_frac", input_type=Int(optional=True), prefix="--max_non_core_frac", doc=InputDocumentation(doc="Maximum fraction of non-core sequence regions within\neach included sequence (FLOAT, DEAFULT=0.05)")), ToolInput(tag="in_min_len", input_type=Int(optional=True), prefix="--min_len", doc=InputDocumentation(doc="minimum length of regions to identify as part of core\ngenome (INTEGER, DEFAULT=25)")), ToolInput(tag="in_output", input_type=Directory(optional=True), prefix="--output", doc=InputDocumentation(doc="directory to which .fasta files of core regions are\nwritten (DEFAULT: core_{REF_CHROM|REF_GENOME})")), ToolInput(tag="in_no_output", input_type=Boolean(optional=True), prefix="--no_output", doc=InputDocumentation(doc="if set, supress .fasta output of core regions")), ToolInput(tag="in_bed_file", input_type=File(optional=True), prefix="--bed_file", doc=InputDocumentation(doc=".bed file to which core regions are written (DEFAULT=\ncore_{REF_CHROM|REF_GENOME}.bed)")), ToolInput(tag="in_max_space", input_type=Int(optional=True), prefix="--max_space", doc=InputDocumentation(doc="maximum non-core space allowed within a core region\n(DEFAULT=25)\n"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Pancake_Core_V0_1_0().translate("wdl", allow_empty_container=True)

