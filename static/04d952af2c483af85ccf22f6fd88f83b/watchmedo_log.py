from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Boolean, Float

Watchmedo_Log_V0_1_0 = CommandToolBuilder(tool="watchmedo_log", base_command=["watchmedo", "log"], inputs=[ToolInput(tag="in_patterns", input_type=String(optional=True), prefix="--patterns", doc=InputDocumentation(doc="matches event paths with these patterns (separated by\n;). (default: '*')")), ToolInput(tag="in_ignore_patterns", input_type=String(optional=True), prefix="--ignore-patterns", doc=InputDocumentation(doc="ignores event paths with these patterns (separated by\n;). (default: '')")), ToolInput(tag="in_ignore_directories", input_type=Boolean(optional=True), prefix="--ignore-directories", doc=InputDocumentation(doc="ignores events for directories (default: False)")), ToolInput(tag="in_recursive", input_type=Boolean(optional=True), prefix="--recursive", doc=InputDocumentation(doc="monitors the directories recursively (default: False)")), ToolInput(tag="in_interval", input_type=Float(optional=True), prefix="--interval", doc=InputDocumentation(doc="use this as the polling interval/blocking timeout\n(default: 1.0)")), ToolInput(tag="in_trace", input_type=Boolean(optional=True), prefix="--trace", doc=InputDocumentation(doc="dumps complete dispatching trace (default: False)")), ToolInput(tag="in_debug_force_polling", input_type=Boolean(optional=True), prefix="--debug-force-polling", doc=InputDocumentation(doc="[debug] forces polling (default: False)")), ToolInput(tag="in_debug_force_kqueue", input_type=Boolean(optional=True), prefix="--debug-force-kqueue", doc=InputDocumentation(doc="[debug] forces BSD kqueue(2) (default: False)")), ToolInput(tag="in_debug_force_winapi", input_type=Boolean(optional=True), prefix="--debug-force-winapi", doc=InputDocumentation(doc="[debug] forces Windows API (default: False)")), ToolInput(tag="in_debug_force_winapi_async", input_type=Boolean(optional=True), prefix="--debug-force-winapi-async", doc=InputDocumentation(doc="[debug] forces Windows API + I/O completion (default:\nFalse)")), ToolInput(tag="in_debug_force_fs_events", input_type=Boolean(optional=True), prefix="--debug-force-fsevents", doc=InputDocumentation(doc="[debug] forces Mac OS X FSEvents (default: False)")), ToolInput(tag="in_debug_force_i_notify", input_type=Boolean(optional=True), prefix="--debug-force-inotify", doc=InputDocumentation(doc="[debug] forces Linux inotify(7) (default: False)\n")), ToolInput(tag="in_directories", input_type=String(), position=0, doc=InputDocumentation(doc="directories to watch. (default: '.')"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Watchmedo_Log_V0_1_0().translate("wdl", allow_empty_container=True)

