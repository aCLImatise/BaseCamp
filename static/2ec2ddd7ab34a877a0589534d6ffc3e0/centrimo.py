from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Directory, String, File, Int, Float, Boolean

Centrimo_V0_1_0 = CommandToolBuilder(tool="centrimo", base_command=["centrimo"], inputs=[ToolInput(tag="in_output_directory_default", input_type=Directory(optional=True), prefix="--o", doc=InputDocumentation(doc="output directory; default: 'centrimo_out'")), ToolInput(tag="in_oc", input_type=String(optional=True), prefix="--oc", doc=InputDocumentation(doc="allow overwriting; default: 'centrimo_out'")), ToolInput(tag="in_neg", input_type=File(optional=True), prefix="--neg", doc=InputDocumentation(doc="plot motif distributions in this set as well\nin the <sequence file> (positive sequences)\nand compute the relative enrichment")), ToolInput(tag="in_x_alph", input_type=File(optional=True), prefix="--xalph", doc=InputDocumentation(doc="name of the file containing a custom alphabet,\nwhich specifies that motifs should be converted;")), ToolInput(tag="in_b_file", input_type=Int(optional=True), prefix="--bfile", doc=InputDocumentation(doc="0-order background frequency model for PWMs;\ndefault: base frequencies in input sequences")), ToolInput(tag="in_motif_pseudo", input_type=Int(optional=True), prefix="--motif-pseudo", doc=InputDocumentation(doc="pseudo-count to use creating PWMs;\ndefault: 5")), ToolInput(tag="in_inc", input_type=String(optional=True), prefix="--inc", doc=InputDocumentation(doc="name pattern to select as motif; may be\nrepeated; default: all motifs are used")), ToolInput(tag="in_exc", input_type=String(optional=True), prefix="--exc", doc=InputDocumentation(doc="name pattern to exclude as motif; may be\nrepeated; default: all motifs are used")), ToolInput(tag="in_seq_len", input_type=Int(optional=True), prefix="--seqlen", doc=InputDocumentation(doc="use sequences with this length; default: use\nsequences with the same length as the first")), ToolInput(tag="in_score", input_type=Float(optional=True), prefix="--score", doc=InputDocumentation(doc="score threshold for PWMs, in bits;\nsequences without a site with score >= <S>\nare ignored;\ndefault: 0.1")), ToolInput(tag="in_use_lo_fraction", input_type=Boolean(optional=True), prefix="--use-lo-fraction", doc=InputDocumentation(doc="score threshold <S> is fraction of maximum log-odds")), ToolInput(tag="in_use_p_values", input_type=Boolean(optional=True), prefix="--use-pvalues", doc=InputDocumentation(doc="use p-values instead of PWM scores")), ToolInput(tag="in_norc", input_type=Boolean(optional=True), prefix="--norc", doc=InputDocumentation(doc="do not scan with the reverse complement motif")), ToolInput(tag="in_sep", input_type=Boolean(optional=True), prefix="--sep", doc=InputDocumentation(doc="scan separately with reverse complement motif;\n(implies --norc)")), ToolInput(tag="in_flip", input_type=Boolean(optional=True), prefix="--flip", doc=InputDocumentation(doc="'flip' sequences so that matches on the\nreverse strand are 'reflected' around center;\ndefault: do not flip sequences")), ToolInput(tag="in_optimize_score", input_type=Boolean(optional=True), prefix="--optimize-score", doc=InputDocumentation(doc="search for optimized score above the threshold\ngiven by '--score' argument. Slow computation\ndue to multiple tests.\ndefault: use fixed score threshold")), ToolInput(tag="in_max_reg", input_type=Int(optional=True), prefix="--maxreg", doc=InputDocumentation(doc="maximum width of any region to consider;\ndefault: use the sequence length")), ToolInput(tag="in_min_reg", input_type=Int(optional=True), prefix="--minreg", doc=InputDocumentation(doc="minimum width of any region to consider;\nmust be less than <maxreg>;\ndefault: 1 bp")), ToolInput(tag="in_local", input_type=Boolean(optional=True), prefix="--local", doc=InputDocumentation(doc="compute the enrichment of all regions;\ndefault: enrichment of central regions only")), ToolInput(tag="in_cd", input_type=Boolean(optional=True), prefix="--cd", doc=InputDocumentation(doc="distance to sequence center enrichment;\ndefault: region enrichment")), ToolInput(tag="in_e_thresh", input_type=Int(optional=True), prefix="--ethresh", doc=InputDocumentation(doc="evalue threshold for including in results;\ndefault: 10")), ToolInput(tag="in_desc", input_type=String(optional=True), prefix="--desc", doc=InputDocumentation(doc="include the description in the output;\ndefault: no description")), ToolInput(tag="in_d_file", input_type=File(optional=True), prefix="--dfile", doc=InputDocumentation(doc="use the file content as the description;\ndefault: no descriptionn")), ToolInput(tag="in_no_seq", input_type=Boolean(optional=True), prefix="--noseq", doc=InputDocumentation(doc="do not store sequence IDs in HTML output;\ndefault: IDs are stored in the HTML output")), ToolInput(tag="in_verbosity", input_type=Boolean(optional=True), prefix="--verbosity", doc=InputDocumentation(doc="[1|2|3|4]    verbosity of output: 1 (quiet) - 4 (dump);\ndefault: 2")), ToolInput(tag="in_sequence_file", input_type=File(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_motif_file", input_type=File(), position=1, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output_directory_default", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output_directory_default", type_hint=File()), doc=OutputDocumentation(doc="output directory; default: 'centrimo_out'"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Centrimo_V0_1_0().translate("wdl", allow_empty_container=True)

