from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Boolean, Int, Directory, File

Galaxy_Tool_Test_V0_1_0 = CommandToolBuilder(tool="galaxy_tool_test", base_command=["galaxy-tool-test"], inputs=[ToolInput(tag="in_galaxy_url", input_type=String(optional=True), prefix="--galaxy-url", doc=InputDocumentation(doc="Galaxy URL")), ToolInput(tag="in_key", input_type=String(optional=True), prefix="--key", doc=InputDocumentation(doc="Galaxy User API Key")), ToolInput(tag="in_admin_key", input_type=String(optional=True), prefix="--admin-key", doc=InputDocumentation(doc="Galaxy Admin API Key")), ToolInput(tag="in_force_path_paste", input_type=Boolean(optional=True), prefix="--force_path_paste", doc=InputDocumentation(doc="This requires Galaxy-side config option\n'allow_path_paste' enabled. Allows for fetching test\ndata locally. Only for admins.")), ToolInput(tag="in_tool_id", input_type=String(optional=True), prefix="--tool-id", doc=InputDocumentation(doc="Tool ID")), ToolInput(tag="in_tool_version", input_type=String(optional=True), prefix="--tool-version", doc=InputDocumentation(doc="Tool Version (if tool id supplied). Defaults to just\nlatest version, use * to test all versions")), ToolInput(tag="in_test_index", input_type=Int(optional=True), prefix="--test-index", doc=InputDocumentation(doc="Tool Test Index (starting at 0) - by default all tests\nwill run.")), ToolInput(tag="in_output", input_type=Directory(optional=True), prefix="--output", doc=InputDocumentation(doc="directory to dump outputs to")), ToolInput(tag="in_append", input_type=Boolean(optional=True), prefix="--append", doc=InputDocumentation(doc="Extend a test record json (created with --output-json)\nwith additional tests.")), ToolInput(tag="in_skip_previously_executed", input_type=Boolean(optional=True), prefix="--skip-previously-executed", doc=InputDocumentation(doc="When used with --append, skip any test previously\nexecuted.")), ToolInput(tag="in_skip_previously_successful", input_type=Boolean(optional=True), prefix="--skip-previously-successful", doc=InputDocumentation(doc="When used with --append, skip any test previously\nexecuted successfully.")), ToolInput(tag="in_output_json", input_type=String(optional=True), prefix="--output-json", doc=InputDocumentation(doc="output metadata json")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Verbose logging.")), ToolInput(tag="in_client_test_config", input_type=String(optional=True), prefix="--client-test-config", doc=InputDocumentation(doc="Test config YAML to help with client testing")), ToolInput(tag="in_suite_name", input_type=String(optional=True), prefix="--suite-name", doc=InputDocumentation(doc="Suite name for tool test output")), ToolInput(tag="in_skip_with_reference_data", input_type=Boolean(optional=True), prefix="--skip-with-reference-data", doc=InputDocumentation(doc="Skip tests the Galaxy server believes use data tables\nor loc files.")), ToolInput(tag="in_history_per_suite", input_type=Boolean(optional=True), prefix="--history-per-suite", doc=InputDocumentation(doc="Create new history per test suite (all tests in same\nhistory).")), ToolInput(tag="in_history_per_test_case", input_type=Boolean(optional=True), prefix="--history-per-test-case", doc=InputDocumentation(doc="Create new history per test case.")), ToolInput(tag="in_no_history_cleanup", input_type=Boolean(optional=True), prefix="--no-history-cleanup", doc=InputDocumentation(doc="Perserve histories created for testing.")), ToolInput(tag="in_publish_history", input_type=Boolean(optional=True), prefix="--publish-history", doc=InputDocumentation(doc="Publish test history. Useful for CI testing.")), ToolInput(tag="in_parallel_tests", input_type=String(optional=True), prefix="--parallel-tests", doc=InputDocumentation(doc="Parallel tests.")), ToolInput(tag="in_retries", input_type=String(optional=True), prefix="--retries", doc=InputDocumentation(doc="Retry failed tests.")), ToolInput(tag="in_page_size", input_type=Int(optional=True), prefix="--page-size", doc=InputDocumentation(doc="If positive, use pagination and just run one 'page' to\ntool tests.")), ToolInput(tag="in_page_number", input_type=Int(optional=True), prefix="--page-number", doc=InputDocumentation(doc="If page size is used, run this 'page' of tests -\nstarts with 0.")), ToolInput(tag="in_download_attempts", input_type=Int(optional=True), prefix="--download-attempts", doc=InputDocumentation(doc="Galaxy may return a transient 500 status code for\ndownload if test results are written but not yet\naccessible.")), ToolInput(tag="in_download_sleep", input_type=Int(optional=True), prefix="--download-sleep", doc=InputDocumentation(doc="If download attempts is greater than 1, the amount to\nsleep between download attempts.")), ToolInput(tag="in_test_data", input_type=File(optional=True), prefix="--test-data", doc=InputDocumentation(doc="Add local test data path to search for missing test\ndata\n"))], outputs=[], container="quay.io/biocontainers/galaxy-tool-util:21.1.0--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Galaxy_Tool_Test_V0_1_0().translate("wdl")

