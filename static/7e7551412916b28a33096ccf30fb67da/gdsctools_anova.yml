!Command
positional:
- !Positional
  description: ''
  position: 0
  name: '1.'
  optional: false
- !Positional
  description: ''
  position: 1
  name: analyse
  optional: false
- !Positional
  description: ''
  position: 2
  name: all
  optional: false
- !Positional
  description: ''
  position: 3
  name: IC50s
  optional: false
- !Positional
  description: ''
  position: 4
  name: data
  optional: false
- !Positional
  description: ''
  position: 5
  name: contained
  optional: false
- !Positional
  description: ''
  position: 6
  name: in
  optional: false
- !Positional
  description: ''
  position: 7
  name: filename
  optional: false
- !Positional
  description: ''
  position: 8
  name: and
  optional: false
- !Positional
  description: ''
  position: 9
  name: open
  optional: false
- !Positional
  description: ''
  position: 10
  name: and
  optional: false
- !Positional
  description: ''
  position: 11
  name: HTML
  optional: false
- !Positional
  description: ''
  position: 12
  name: page
  optional: false
named:
- !Flag
  description: A file in TSV format with IC50s. First column should be the COSMIC
    identifiers Following columns contain the IC50s for a set of drugs. The header
    must be COSMIC_ID, Drug_1_IC50, Drug_2_IC50, ...
  synonyms:
  - -I
  - --input-ic50
  args: !SimpleFlagArg
    name: INPUT_IC50
  optional: true
- !Flag
  description: A matrix of genomic features. One column with COSMIC identifiers should
    match those from the IC50s matrix. Then columns named TISSUE_FACTOR, MSI_FACTOR,
    MEDIA_FACTOR should be provided. Finally, other columns will be considered as
    genomic features (e.g., mutation)
  synonyms:
  - -F
  - --input-features
  args: !SimpleFlagArg
    name: INPUT_FEATURES
  optional: true
- !Flag
  description: a decoder file
  synonyms:
  - -D
  - --input-drug-decode
  args: !SimpleFlagArg
    name: INPUT_DRUG_DECODE
  optional: true
- !Flag
  description: directory where to save images and HTML files.
  synonyms:
  - --output-directory
  args: !SimpleFlagArg
    name: DIRECTORY
  optional: true
- !Flag
  description: verbose option.
  synonyms:
  - --verbose
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: By default, opens the index.html page. Set this option if you do not
    want to open the html page automatically.
  synonyms:
  - --do-not-open-report
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: The name of a valid drug identifier to be found in the header of the
    IC50 matrix
  synonyms:
  - -d
  - --drug
  args: !SimpleFlagArg
    name: DRUG
  optional: true
- !Flag
  description: The name of a valid feature to be found in the Genomic Feature matrix
  synonyms:
  - -f
  - --feature
  args: !SimpleFlagArg
    name: FEATURE
  optional: true
- !Flag
  description: Print the drug names
  synonyms:
  - --print-drug-names
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Print the features names
  synonyms:
  - --print-feature-names
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Print the unique tissue names
  synonyms:
  - --print-tissue-names
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: The name of a specific cancer type i.e., tissue to restrict the analysis
    to.
  synonyms:
  - -t
  - --tissue
  args: !SimpleFlagArg
    name: TISSUE
  optional: true
- !Flag
  description: FDR (False discovery Rate) used in the multitesting analysis to correct
    the pvalues
  synonyms:
  - --FDR-threshold
  args: !SimpleFlagArg
    name: FDR_THRESHOLD
  optional: true
- !Flag
  description: Include msi factor in the analysis
  synonyms:
  - --exclude-msi
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Save settings into a json file
  synonyms:
  - --save-settings
  args: !SimpleFlagArg
    name: SAVE_SETTINGS
  optional: true
- !Flag
  description: Read settings from a json file. Type --save-settings <filename.json>
    to create an example. Note that the FDR-threshold and include_MSI_factor will
    be replaced if --exclude-msi or fdr-threshold are used.
  synonyms:
  - --read-settings
  args: !SimpleFlagArg
    name: SETTINGS
  optional: true
- !Flag
  description: Print summary about the data (e.g., tissue)
  synonyms:
  - --summary
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Use a small IC50 data set and run the one-drug-one- feature analyse
    with a couple of unit tests.
  synonyms:
  - --test
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: If set, no images or HTML are created. For testing only
  synonyms:
  - --no-html
  args: !EmptyFlagArg {}
  optional: true
command:
- gdsctools_anova
parent:
subcommands: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: print current version of this application
  synonyms:
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "Welcome to GDSCTools standalone\n===============================================\n\
  None\n['/tmp/tmpnis6pi4s/bin/gdsctools_anova', '-h']\n['/tmp/tmpnis6pi4s/bin/gdsctools_anova',\
  \ '-h']\nusage: \n\n1. analyse all IC50s data contained in <filename> and open and\
  \ HTML page\n   in a browser. This can be very long (5 minutes to several hours)\
  \ depending\n   on the size of the files:\n\n    gdsctools_anova --input-ic50 <filename>\n\
  \n2. on the same data as above, analyse only one association for a given\n   drug\
  \ <drug> and a given genomic features <feature>. The drug name should\n   match\
  \ one to be found in the header of <filename>. The feature name\n   should match\
  \ one of the header of the genomic feature file or if you use\n   the default file,\
  \ one of the feature in the default file (e.g., BRAF_mut)\n\n   gdsctools_anova\
  \ --input-ic50 <filename> --drug <drug> --feature <feature>\n\n3. on the same data\
  \ as above, analyse one drug across all features.\n\n    gdsctools_anova --input-ic50\
  \ <filename> --drug <drug>\n\nto obtain more help about the parameters, please type\n\
  \n    gdsctools_anova --help\n    \n\nGeneral Description:\n\noptional arguments:\n\
  \  -h, --help            show this help message and exit\n\nGeneral:\n  General\
  \ options (compulsary or not)\n\n  -I INPUT_IC50, --input-ic50 INPUT_IC50\n    \
  \                    A file in TSV format with IC50s. First column should\n    \
  \                    be the COSMIC identifiers Following columns contain\n     \
  \                   the IC50s for a set of drugs. The header must be\n         \
  \               COSMIC_ID, Drug_1_IC50, Drug_2_IC50, ...\n  -F INPUT_FEATURES, --input-features\
  \ INPUT_FEATURES\n                        A matrix of genomic features. One column\
  \ with COSMIC\n                        identifiers should match those from the IC50s\
  \ matrix.\n                        Then columns named TISSUE_FACTOR, MSI_FACTOR,\n\
  \                        MEDIA_FACTOR should be provided. Finally, other\n     \
  \                   columns will be considered as genomic features (e.g.,\n    \
  \                    mutation)\n  -D INPUT_DRUG_DECODE, --input-drug-decode INPUT_DRUG_DECODE\n\
  \                        a decoder file\n  --output-directory DIRECTORY\n      \
  \                  directory where to save images and HTML files.\n  --verbose \
  \            verbose option.\n  --do-not-open-report  By default, opens the index.html\
  \ page. Set this option\n                        if you do not want to open the\
  \ html page\n                        automatically.\n  -d DRUG, --drug DRUG  The\
  \ name of a valid drug identifier to be found in the\n                        header\
  \ of the IC50 matrix\n  -f FEATURE, --feature FEATURE\n                        The\
  \ name of a valid feature to be found in the Genomic\n                        Feature\
  \ matrix\n  --print-drug-names    Print the drug names\n  --print-feature-names\n\
  \                        Print the features names\n  --print-tissue-names  Print\
  \ the unique tissue names\n  -t TISSUE, --tissue TISSUE\n                      \
  \  The name of a specific cancer type i.e., tissue to\n                        restrict\
  \ the analysis to.\n  --FDR-threshold FDR_THRESHOLD\n                        FDR\
  \ (False discovery Rate) used in the multitesting\n                        analysis\
  \ to correct the pvalues\n  --exclude-msi         Include msi factor in the analysis\n\
  \  --save-settings SAVE_SETTINGS\n                        Save settings into a json\
  \ file\n  --read-settings SETTINGS\n                        Read settings from a\
  \ json file. Type --save-settings\n                        <filename.json> to create\
  \ an example. Note that the\n                        FDR-threshold and include_MSI_factor\
  \ will be replaced\n                        if --exclude-msi or fdr-threshold are\
  \ used.\n  --summary             Print summary about the data (e.g., tissue)\n \
  \ --test                Use a small IC50 data set and run the one-drug-one-\n  \
  \                      feature analyse with a couple of unit tests.\n  --no-html\
  \             If set, no images or HTML are created. For testing\n             \
  \           only\n  --version             print current version of this application\n\
  \nAuthor(s): Thomas Cokelaer (GDSCtools) and authors from the GDSCtools repository.\n\
  \nHow to contribute ? : Visit https://github.com/CancerRxGene/gdsctools\nIssues\
  \ or bug report ? Please fill an issue on\nhttp://github.com/CancerRxGene/gdsctools/issues\
  \ \n"
generated_using:
- -h
