from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, File, Int

Metametamerge_Py_V0_1_0 = CommandToolBuilder(tool="MetaMetaMerge.py", base_command=["MetaMetaMerge.py"], inputs=[ToolInput(tag="in_input_binning_files", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="[<input_files> [<input_files> ...]], --input-files [<input_files> [<input_files> ...]]\nInput (binning or profiling) files. Bioboxes or tsv\nformat (see README)")), ToolInput(tag="in_database_profiles_same", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc="[<database_profiles> [<database_profiles> ...]], --database-profiles [<database_profiles> [<database_profiles> ...]]\nDatabase profiles on the same order of the input files\n(see README)")), ToolInput(tag="in_tool_identifier", input_type=String(optional=True), prefix="--tool-identifier", doc=InputDocumentation(doc="Comma-separated identifiers on the same order of the\ninput files")), ToolInput(tag="in_tool_method", input_type=String(optional=True), prefix="--tool-method", doc=InputDocumentation(doc="Comma-separated methods on the same order of the input\nfiles (p -> profiling / b -> binning)")), ToolInput(tag="in_names_file", input_type=File(optional=True), prefix="--names-file", doc=InputDocumentation(doc="names.dmp from the NCBI Taxonomy database")), ToolInput(tag="in_nodes_file", input_type=File(optional=True), prefix="--nodes-file", doc=InputDocumentation(doc="nodes.dmp from the NCBI Taxonomy database")), ToolInput(tag="in_merged_file", input_type=File(optional=True), prefix="--merged-file", doc=InputDocumentation(doc="merged.dmp from the NCBI Taxonomy database")), ToolInput(tag="in_bins", input_type=Int(optional=True), prefix="--bins", doc=InputDocumentation(doc="Number of bins. Default: 4")), ToolInput(tag="in_cut_off", input_type=Int(optional=True), prefix="--cutoff", doc=InputDocumentation(doc="Minimum abundance/Maximum results for each taxonomic\nlevel (0: off / 0-1: minimum relative abundance / >=1:\nmaximum number of identifications). Default: 0.0001")), ToolInput(tag="in_mode", input_type=String(optional=True), prefix="--mode", doc=InputDocumentation(doc="Result mode (precise, very-precise, linear, sensitive,\nvery-sensitive, no-cutoff). Default: linear")), ToolInput(tag="in_ranks", input_type=String(optional=True), prefix="--ranks", doc=InputDocumentation(doc="Comma-separated list of ranks to be independently\nmerged (superkingdom,phylum,class,order,family,genus,s\npecies,all). Default: species")), ToolInput(tag="in_output_file", input_type=File(optional=True), prefix="--output-file", doc=InputDocumentation(doc="Output file")), ToolInput(tag="in_output_type", input_type=String(optional=True), prefix="--output-type", doc=InputDocumentation(doc="Output type (tsv, bioboxes). Default: bioboxes")), ToolInput(tag="in_output_parsed_profiles", input_type=Boolean(optional=True), prefix="--output-parsed-profiles", doc=InputDocumentation(doc="Output parsed and converted profiles for all input\nfiles (without cutoff)")), ToolInput(tag="in_detailed", input_type=Boolean(optional=True), prefix="--detailed", doc=InputDocumentation(doc="Generate an additional detailed output with individual\nnormalized abundances for each tool, where: 0 -> not\nidentified but present in the database, -1 not present\nin the database.")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Verbose output log")), ToolInput(tag="in_input_files", input_type=String(optional=True), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_file", type_hint=File()), doc=OutputDocumentation(doc="Output file"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Metametamerge_Py_V0_1_0().translate("wdl", allow_empty_container=True)

