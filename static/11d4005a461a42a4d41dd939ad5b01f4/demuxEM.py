from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, File, Float, Boolean, String

Demuxem_V0_1_0 = CommandToolBuilder(tool="demuxEM", base_command=["demuxEM"], inputs=[ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of threads. [default: 1]")), ToolInput(tag="in_genome", input_type=File(optional=True), prefix="--genome", doc=InputDocumentation(doc="Reference genome name. If not provided, we will infer it from the expression matrix file.")), ToolInput(tag="in_alpha_on_samples", input_type=Float(optional=True), prefix="--alpha-on-samples", doc=InputDocumentation(doc="The Dirichlet prior concentration parameter (alpha) on samples. An alpha value < 1.0 will make the prior sparse. [default: 0.0]")), ToolInput(tag="in_min_num_genes", input_type=Int(optional=True), prefix="--min-num-genes", doc=InputDocumentation(doc="We only demultiplex cells/nuclei with at least <number> of expressed genes. [default: 100]")), ToolInput(tag="in_min_num_um_is", input_type=Int(optional=True), prefix="--min-num-umis", doc=InputDocumentation(doc="We only demultiplex cells/nuclei with at least <number> of UMIs. [default: 100]")), ToolInput(tag="in_min_signal_hash_tag", input_type=Int(optional=True), prefix="--min-signal-hashtag", doc=InputDocumentation(doc="Any cell/nucleus with less than <count> hashtags from the signal will be marked as unknown. [default: 10.0]")), ToolInput(tag="in_random_state", input_type=Int(optional=True), prefix="--random-state", doc=InputDocumentation(doc="The random seed used in the KMeans algorithm to separate empty ADT droplets from others. [default: 0]")), ToolInput(tag="in_generate_diagnostic_plots", input_type=Boolean(optional=True), prefix="--generate-diagnostic-plots", doc=InputDocumentation(doc="Generate a series of diagnostic plots, including the background/signal between HTO counts, estimated background probabilities, HTO distributions of cells and non-cells etc.")), ToolInput(tag="in_generate_gender_plot", input_type=String(optional=True), prefix="--generate-gender-plot", doc=InputDocumentation(doc="Generate violin plots using gender-specific genes (e.g. Xist). <gene> is a comma-separated list of gene names.")), ToolInput(tag="in_v", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="")), ToolInput(tag="in_input_raw_gene_bc_matrices_h_five", input_type=Int(), position=0, doc=InputDocumentation(doc="Input raw RNA expression matrix in 10x hdf5 format.")), ToolInput(tag="in_input_h_to_csv_file", input_type=String(), position=1, doc=InputDocumentation(doc="Input HTO (antibody tag) count matrix in CSV format.")), ToolInput(tag="in_output_name", input_type=String(), position=2, doc=InputDocumentation(doc="Output name. All outputs will use it as the prefix.")), ToolInput(tag="in_output_name_demux_dot_zarr_dot_zip", input_type=String(), position=0, doc=InputDocumentation(doc="RNA expression matrix with demultiplexed sample identities in Zarr format.")), ToolInput(tag="in_output_name_dot_out_dotdemuxemdotzarrdotzip", input_type=String(), position=1, doc=InputDocumentation(doc="DemuxEM-calculated results in Zarr format, containing two datasets, one for HTO and one for RNA.")), ToolInput(tag="in_output_name_dot_ambient_hash_tag_do_this_tdot_pdf", input_type=String(), position=2, doc=InputDocumentation(doc="Optional output. A histogram plot depicting hashtag distributions of empty droplets and non-empty droplets.")), ToolInput(tag="in_output_name_dot_background_probabilities_dot_bardot_pdf", input_type=String(), position=3, doc=InputDocumentation(doc="Optional output. A bar plot visualizing the estimated hashtag background probability distribution.")), ToolInput(tag="in_output_name_dot_real_content_do_this_tdot_pdf", input_type=String(), position=4, doc=InputDocumentation(doc="Optional output. A histogram plot depicting hashtag distributions of not-real-cells and real-cells as defined by total number of expressed genes in the RNA assay.")), ToolInput(tag="in_output_name_do_trna_demux_do_this_tdot_pdf", input_type=String(), position=5, doc=InputDocumentation(doc="Optional output. This figure consists of two plots. The first one is a horizontal bar plot depicting the percentage of RNA barcodes with at least one HTO count. The second plot is a histogram plot depicting RNA UMI distribution for singlets, doublets and unknown cells.")), ToolInput(tag="in_output_name_dot_gene_name_dot_violin_dot_pdf", input_type=String(), position=6, doc=InputDocumentation(doc="Optional outputs. Violin plots depicting gender-specific gene expression across samples. We can have multiple plots if a gene list is provided in '--generate-gender-plot' option."))], outputs=[], container="quay.io/biocontainers/demuxem:0.1.5.post1--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Demuxem_V0_1_0().translate("wdl")

