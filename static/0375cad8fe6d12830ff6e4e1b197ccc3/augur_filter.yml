!Command
command:
- augur
- filter
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - --metadata
  description: 'sequence metadata, as CSV or TSV (default: None)'
  args: !SimpleFlagArg
    name: FILE
- !Flag
  optional: true
  synonyms:
  - --sequences
  - -s
  description: 'sequences in FASTA or VCF format (default: None)'
  args: !SimpleFlagArg
    name: SEQUENCES
- !Flag
  optional: true
  synonyms:
  - --sequence-index
  description: "sequence composition report generated by augur index.\nIf not provided,\
    \ an index will be created on the fly.\n(default: None)"
  args: !SimpleFlagArg
    name: SEQUENCE_INDEX
- !Flag
  optional: true
  synonyms:
  - --query
  description: "Filter samples by attribute. Uses Pandas Dataframe\nquerying, see\
    \ https://pandas.pydata.org/pandas-\ndocs/stable/user_guide/indexing.html#indexing-query\n\
    for syntax. (e.g., --query \"country == 'Colombia'\" or\n--query \"(country ==\
    \ 'USA' & (division ==\n'Washington'))\") (default: None)"
  args: !SimpleFlagArg
    name: QUERY
- !Flag
  optional: true
  synonyms:
  - --min-date
  description: "minimal cutoff for date, the cutoff date is inclusive;\nmay be specified\
    \ as an Augur-style numeric date (with\nthe year as the integer part) or YYYY-MM-DD\
    \ (default:\nNone)"
  args: !SimpleFlagArg
    name: MIN_DATE
- !Flag
  optional: true
  synonyms:
  - --max-date
  description: "maximal cutoff for date, the cutoff date is inclusive;\nmay be specified\
    \ as an Augur-style numeric date (with\nthe year as the integer part) or YYYY-MM-DD\
    \ (default:\nNone)"
  args: !SimpleFlagArg
    name: MAX_DATE
- !Flag
  optional: true
  synonyms:
  - --exclude-ambiguous-dates-by
  description: "Exclude ambiguous dates by day (e.g., 2020-09-XX),\nmonth (e.g., 2020-XX-XX),\
    \ year (e.g., 200X-10-01), or\nany date fields. An ambiguous year makes the\n\
    corresponding month and day ambiguous, too, even if\nthose fields have unambiguous\
    \ values (e.g.,\n\"201X-10-01\"). Similarly, an ambiguous month makes the\ncorresponding\
    \ day ambiguous (e.g., \"2010-XX-01\").\n(default: None)"
  args: !ChoiceFlagArg
    choices: !!set
      any:
      month:
      year:
      day:
- !Flag
  optional: true
  synonyms:
  - --exclude
  description: "file(s) with list of strains to exclude (default:\nNone)"
  args: !RepeatFlagArg
    name: EXCLUDE
- !Flag
  optional: true
  synonyms:
  - --exclude-where
  description: "Exclude samples matching these conditions. Ex:\n\"host=rat\" or \"\
    host!=rat\". Multiple values are\nprocessed as OR (matching any of those specified\
    \ will\nbe excluded), not AND (default: None)"
  args: !RepeatFlagArg
    name: EXCLUDE_WHERE
- !Flag
  optional: true
  synonyms:
  - --exclude-all
  description: "exclude all strains by default. Use this with the\ninclude arguments\
    \ to select a specific subset of\nstrains. (default: False)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --include
  description: "file(s) with list of strains to include regardless of\npriorities\
    \ or subsampling (default: None)"
  args: !RepeatFlagArg
    name: INCLUDE
- !Flag
  optional: true
  synonyms:
  - --include-where
  description: "Include samples with these values. ex: host=rat.\nMultiple values\
    \ are processed as OR (having any of\nthose specified will be included), not AND.\
    \ This rule\nis applied last and ensures any sequences matching\nthese rules will\
    \ be included. (default: None)"
  args: !RepeatFlagArg
    name: INCLUDE_WHERE
- !Flag
  optional: true
  synonyms:
  - --min-length
  description: 'minimal length of the sequences (default: None)'
  args: !SimpleFlagArg
    name: MIN_LENGTH
- !Flag
  optional: true
  synonyms:
  - --non-nucleotide
  description: "exclude sequences that contain illegal characters\n(default: False)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --group-by
  description: "categories with respect to subsample; two virtual\nfields, \"month\"\
    \ and \"year\", are supported if they\ndon't already exist as real fields but\
    \ a \"date\" field\ndoes exist (default: None)"
  args: !RepeatFlagArg
    name: GROUP_BY
- !Flag
  optional: true
  synonyms:
  - --sequences-per-group
  description: "subsample to no more than this number of sequences per\ncategory (default:\
    \ None)"
  args: !SimpleFlagArg
    name: SEQUENCES_PER_GROUP
- !Flag
  optional: true
  synonyms:
  - --subsample-max-sequences
  description: "subsample to no more than this number of sequences;\ncan be used without\
    \ the group_by argument (default:\nNone)"
  args: !SimpleFlagArg
    name: SUBSAMPLE_MAX_SEQUENCES
- !Flag
  optional: true
  synonyms:
  - --probabilistic-sampling
  description: "Enable probabilistic sampling during subsampling. This\nis useful\
    \ when there are more groups than requested\nsequences. This option only applies\
    \ when `--subsample-\nmax-sequences` is provided. (default: True)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --no-probabilistic-sampling
  - --priority
  description: "tab-delimited file with list of priority scores for\nstrains (e.g.,\
    \ \"<strain>\\t<priority>\") and no header.\nWhen scores are provided, Augur converts\
    \ scores to\nfloating point values, sorts strains within each\nsubsampling group\
    \ from highest to lowest priority, and\nselects the top N strains per group where\
    \ N is the\ncalculated or requested number of strains per group.\nHigher numbers\
    \ indicate higher priority. Since\npriorities represent relative values between\
    \ strains,\nthese values can be arbitrary. (default: None)"
  args: !SimpleFlagArg
    name: PRIORITY
- !Flag
  optional: true
  synonyms:
  - --subsample-seed
  description: "random number generator seed to allow reproducible\nsub-sampling (with\
    \ same input data). Can be number or\nstring. (default: None)"
  args: !SimpleFlagArg
    name: SUBSAMPLE_SEED
- !Flag
  optional: true
  synonyms:
  - --output
  - --output-sequences
  - -o
  description: 'filtered sequences in FASTA format (default: None)'
  args: !SimpleFlagArg
    name: OUTPUT
- !Flag
  optional: true
  synonyms:
  - --output-metadata
  description: "metadata for strains that passed filters (default:\nNone)"
  args: !SimpleFlagArg
    name: OUTPUT_METADATA
- !Flag
  optional: true
  synonyms:
  - --output-strains
  description: "list of strains that passed filters (no header)\n(default: None)\n"
  args: !SimpleFlagArg
    name: OUTPUT_STRAINS
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "usage: augur filter [-h] --metadata FILE [--sequences SEQUENCES]\n   \
  \                 [--sequence-index SEQUENCE_INDEX] [--query QUERY]\n          \
  \          [--min-date MIN_DATE] [--max-date MAX_DATE]\n                    [--exclude-ambiguous-dates-by\
  \ {any,day,month,year}]\n                    [--exclude EXCLUDE [EXCLUDE ...]]\n\
  \                    [--exclude-where EXCLUDE_WHERE [EXCLUDE_WHERE ...]]\n     \
  \               [--exclude-all] [--include INCLUDE [INCLUDE ...]]\n            \
  \        [--include-where INCLUDE_WHERE [INCLUDE_WHERE ...]]\n                 \
  \   [--min-length MIN_LENGTH] [--non-nucleotide]\n                    [--group-by\
  \ GROUP_BY [GROUP_BY ...]]\n                    [--sequences-per-group SEQUENCES_PER_GROUP\
  \ | --subsample-max-sequences SUBSAMPLE_MAX_SEQUENCES]\n                    [--probabilistic-sampling\
  \ | --no-probabilistic-sampling]\n                    [--priority PRIORITY] [--subsample-seed\
  \ SUBSAMPLE_SEED]\n                    [--output OUTPUT] [--output-metadata OUTPUT_METADATA]\n\
  \                    [--output-strains OUTPUT_STRAINS]\n\nFilter and subsample a\
  \ sequence set.\n\noptional arguments:\n  -h, --help            show this help message\
  \ and exit\n\ninputs:\n  metadata and sequences to be filtered\n\n  --metadata FILE\
  \       sequence metadata, as CSV or TSV (default: None)\n  --sequences SEQUENCES,\
  \ -s SEQUENCES\n                        sequences in FASTA or VCF format (default:\
  \ None)\n  --sequence-index SEQUENCE_INDEX\n                        sequence composition\
  \ report generated by augur index.\n                        If not provided, an\
  \ index will be created on the fly.\n                        (default: None)\n\n\
  metadata filters:\n  filters to apply to metadata\n\n  --query QUERY         Filter\
  \ samples by attribute. Uses Pandas Dataframe\n                        querying,\
  \ see https://pandas.pydata.org/pandas-\n                        docs/stable/user_guide/indexing.html#indexing-query\n\
  \                        for syntax. (e.g., --query \"country == 'Colombia'\" or\n\
  \                        --query \"(country == 'USA' & (division ==\n          \
  \              'Washington'))\") (default: None)\n  --min-date MIN_DATE   minimal\
  \ cutoff for date, the cutoff date is inclusive;\n                        may be\
  \ specified as an Augur-style numeric date (with\n                        the year\
  \ as the integer part) or YYYY-MM-DD (default:\n                        None)\n\
  \  --max-date MAX_DATE   maximal cutoff for date, the cutoff date is inclusive;\n\
  \                        may be specified as an Augur-style numeric date (with\n\
  \                        the year as the integer part) or YYYY-MM-DD (default:\n\
  \                        None)\n  --exclude-ambiguous-dates-by {any,day,month,year}\n\
  \                        Exclude ambiguous dates by day (e.g., 2020-09-XX),\n  \
  \                      month (e.g., 2020-XX-XX), year (e.g., 200X-10-01), or\n \
  \                       any date fields. An ambiguous year makes the\n         \
  \               corresponding month and day ambiguous, too, even if\n          \
  \              those fields have unambiguous values (e.g.,\n                   \
  \     \"201X-10-01\"). Similarly, an ambiguous month makes the\n               \
  \         corresponding day ambiguous (e.g., \"2010-XX-01\").\n                \
  \        (default: None)\n  --exclude EXCLUDE [EXCLUDE ...]\n                  \
  \      file(s) with list of strains to exclude (default:\n                     \
  \   None)\n  --exclude-where EXCLUDE_WHERE [EXCLUDE_WHERE ...]\n               \
  \         Exclude samples matching these conditions. Ex:\n                     \
  \   \"host=rat\" or \"host!=rat\". Multiple values are\n                       \
  \ processed as OR (matching any of those specified will\n                      \
  \  be excluded), not AND (default: None)\n  --exclude-all         exclude all strains\
  \ by default. Use this with the\n                        include arguments to select\
  \ a specific subset of\n                        strains. (default: False)\n  --include\
  \ INCLUDE [INCLUDE ...]\n                        file(s) with list of strains to\
  \ include regardless of\n                        priorities or subsampling (default:\
  \ None)\n  --include-where INCLUDE_WHERE [INCLUDE_WHERE ...]\n                 \
  \       Include samples with these values. ex: host=rat.\n                     \
  \   Multiple values are processed as OR (having any of\n                       \
  \ those specified will be included), not AND. This rule\n                      \
  \  is applied last and ensures any sequences matching\n                        these\
  \ rules will be included. (default: None)\n\nsequence filters:\n  filters to apply\
  \ to sequence data\n\n  --min-length MIN_LENGTH\n                        minimal\
  \ length of the sequences (default: None)\n  --non-nucleotide      exclude sequences\
  \ that contain illegal characters\n                        (default: False)\n\n\
  subsampling:\n  options to subsample filtered data\n\n  --group-by GROUP_BY [GROUP_BY\
  \ ...]\n                        categories with respect to subsample; two virtual\n\
  \                        fields, \"month\" and \"year\", are supported if they\n\
  \                        don't already exist as real fields but a \"date\" field\n\
  \                        does exist (default: None)\n  --sequences-per-group SEQUENCES_PER_GROUP\n\
  \                        subsample to no more than this number of sequences per\n\
  \                        category (default: None)\n  --subsample-max-sequences SUBSAMPLE_MAX_SEQUENCES\n\
  \                        subsample to no more than this number of sequences;\n \
  \                       can be used without the group_by argument (default:\n  \
  \                      None)\n  --probabilistic-sampling\n                     \
  \   Enable probabilistic sampling during subsampling. This\n                   \
  \     is useful when there are more groups than requested\n                    \
  \    sequences. This option only applies when `--subsample-\n                  \
  \      max-sequences` is provided. (default: True)\n  --no-probabilistic-sampling\n\
  \  --priority PRIORITY   tab-delimited file with list of priority scores for\n \
  \                       strains (e.g., \"<strain>\\t<priority>\") and no header.\n\
  \                        When scores are provided, Augur converts scores to\n  \
  \                      floating point values, sorts strains within each\n      \
  \                  subsampling group from highest to lowest priority, and\n    \
  \                    selects the top N strains per group where N is the\n      \
  \                  calculated or requested number of strains per group.\n      \
  \                  Higher numbers indicate higher priority. Since\n            \
  \            priorities represent relative values between strains,\n           \
  \             these values can be arbitrary. (default: None)\n  --subsample-seed\
  \ SUBSAMPLE_SEED\n                        random number generator seed to allow\
  \ reproducible\n                        sub-sampling (with same input data). Can\
  \ be number or\n                        string. (default: None)\n\noutputs:\n  possible\
  \ representations of filtered data (at least one required)\n\n  --output OUTPUT,\
  \ --output-sequences OUTPUT, -o OUTPUT\n                        filtered sequences\
  \ in FASTA format (default: None)\n  --output-metadata OUTPUT_METADATA\n       \
  \                 metadata for strains that passed filters (default:\n         \
  \               None)\n  --output-strains OUTPUT_STRAINS\n                     \
  \   list of strains that passed filters (no header)\n                        (default:\
  \ None)\n"
generated_using:
- --help
docker_image: quay.io/biocontainers/augur:12.0.0--pyhdfd78af_0
