!Command
command:
- rsat
- retrieve-ensembl-seq
positional:
- !Positional
  optional: false
  position: 0
  name: genomics
  description: sequences
named:
- !Flag
  optional: true
  synonyms:
  - -org
  description: "underscore between words (eg 'homo_sapiens')\nIf this option is not\
    \ used, the option -dbname must be used\ninstead.\n(type 'supported-organisms\
    \ | grep EnsEMBL' to obtain the list of supported\norganisms)"
  args: !SimpleFlagArg
    name: organism
- !Flag
  optional: true
  synonyms:
  - -ensemblhost
  description: address of ensembl database server (default is EBI server)
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -dbname
  description: "of EnsEMBL database\n(alternative to organism)"
  args: !SimpleFlagArg
    name: name
- !Flag
  optional: true
  synonyms:
  - -dbversion
  description: 'version of ensembl database (example: 47)'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -feattype
  description: "Feature type.\nSupported: cds,exon,gene,intron,mrna,transcript,utr\n\
    Defaut: mrna"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -type
  description: "sequence type\nCurrently supported sequence types\nupstream (default)\n\
    downstream\nfeature"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -utr
  description: "Type(s) of UTR (untranslated region) to return.\nSupported: all |\
    \ 5prime | 3prime"
  args: !SimpleFlagArg
    name: utr_type
- !Flag
  optional: true
  synonyms:
  - -q
  description: "The query should be an EnsEMBL gene identifier (eg 'ENSG00000177799').\n\
    Multiple queries can be entered by reiteratively using the -q\noption."
  args: !SimpleFlagArg
    name: query
- !Flag
  optional: true
  synonyms:
  - -i
  description: "query file. The first word of each line is taken as a query.\nThis\
    \ option is incompatible with -q."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -all
  description: return all genomic upstream/downstream regions
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -o
  description: name of the output file
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -from
  description: "#1 -to #2\nwhere #1 and #2 are numbers. #2 should be higher than #1.\n\
    limits of the region to extract, relative to feattype start or end\n(=position\
    \ 0). Use negative values for upstream sequence.\nexample: -from -800 -to -1\n\
    will extract the 800 bp upstream the feattype start or end.\n(this is the default"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -noorf
  description: "the upstream/downstream sequence can only contain non-coding sequence.\n\
    i.e. the -from values is modified if a predicted orf\nis encountered within its\
    \ range.\nThe weaknesses of using this option are that\n- all predicted orf do\
    \ not correspond to real orf,\n- there is no a priori reason to exclude a regulatory\
    \ site\nwhich would overlap the upstream coding sequence."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -nogene
  description: upstream/downstream sequence can only contain non-transcribed sequence.
  args: !SimpleFlagArg
    name: the
- !Flag
  optional: true
  synonyms:
  - -maskcoding
  description: all coding sequence is replaced by N in the retrieved sequence
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -rm
  description: "Use the repeat masked version of the genome.  Attention :\nrepeated\
    \ regions are annotated for some genomes only."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -alltranscripts
  description: "Get sequences for all transcripts of genes.\nUse -uniqseqs if you\
    \ do motif discovery afterwards"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -uniqseqs
  description: With -alltranscripts, returns only non-redondant sequences
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -firstintron
  description: With feattype intron, get only first intron sequence
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -noncoding
  description: With feattype exon, get only non-coding (part of) exons
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -chrom
  description: Chromosome name or number (to use with -left and -right)
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -left
  description: Left limit of sequence to retrieve
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -right
  description: Right limit of sequence to retrieve
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -strand
  description: 'of sequence to retrieve when using -left and -right. Values: 1, -1'
  args: !SimpleFlagArg
    name: Strand
- !Flag
  optional: true
  synonyms:
  - -ftfile
  description: file
  args: !SimpleFlagArg
    name: Feature
- !Flag
  optional: true
  synonyms:
  - -ftfileformat
  description: 'Feature file format. Supported: ft, gft'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -ortho
  description: Retrieve homologous sequences from EnsEMBL Compara databases
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -ortho_type
  description: 'Filter on homology type. (example: ortholog, ortholog_one2one)'
  args: !SimpleFlagArg
    name: Type
- !Flag
  optional: true
  synonyms:
  - -homologs_table
  description: "name\nPrints homology info to a tab delimited file"
  args: !SimpleFlagArg
    name: File
- !Flag
  optional: true
  synonyms:
  - -taxon
  description: 'Filter on taxonomic level (example: Mammalia)'
  args: !SimpleFlagArg
    name: Taxon
- !Flag
  optional: true
  synonyms:
  - -header_org
  description: "Type of organism name to use in the fasta header (scientific, common\
    \ or none).\nDefault is scientific. Common name is only accessible with -ortho."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -label
  description: "Information used as sequence label in the fasta header.\nSupported\
    \ label types:\n-label query\nuse as sequence label the identifier or name used\
    \ as query.\n"
  args: !SimpleFlagArg
    name: label_type
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "USAGE\n\tretrieve-ensembl-seq [-type type] -org organism | -dbname database\n\
  \t\t\t[-from] [-to] [-noorf] [-rm] [-maskcoding]\n\t\t\t[-o outpufile] -q query_orf\
  \ | -i query file | -all\n\nDESCRIPTION\n\n\tReturns upstream, downstream, intronic,\
  \ exonic or UTR DNA\n\tsequences for a list of query genes.\n\nCATEGORY\n\tgenomics\n\
  \tsequences\n\nREMARK\n\n    This script requires a local installation of the EnsEMBL\
  \ Perl Core\n    and Compara APIs (see RSAT installation guide).\n\nOPTIONS\n\t\
  -org organism\n\t        underscore between words (eg 'homo_sapiens')\n\n\t    \
  \    If this option is not used, the option -dbname must be used\n\t         instead.\n\
  \n\t        (type 'supported-organisms | grep EnsEMBL' to obtain the list of supported\n\
  \t         organisms)\n\n        -ensemblhost\n                address of ensembl\
  \ database server (default is EBI server)\n\n\t-dbname\tname of EnsEMBL database\n\
  \t\t(alternative to organism)\n\n        -dbversion\n\t        version of ensembl\
  \ database (example: 47)\n\n\t-feattype\n\t\tFeature type.\n\t\tSupported: cds,exon,gene,intron,mrna,transcript,utr\n\
  \t\tDefaut: mrna\n\n\t-type\tsequence type\n\t\tCurrently supported sequence types\n\
  \t\t\tupstream (default)\n\t\t\tdownstream\n                        feature\n\n\
  \       -utr utr_type\n\n              Type(s) of UTR (untranslated region) to return.\n\
  \n              Supported: all | 5prime | 3prime\n\n\t-q query\n\t\tThe query should\
  \ be an EnsEMBL gene identifier (eg 'ENSG00000177799').\n\t\tMultiple queries can\
  \ be entered by reiteratively using the -q\n\t\toption.\n\n        -i     query\
  \ file. The first word of each line is taken as a query.\n                This option\
  \ is incompatible with -q.\n\n\t-all\treturn all genomic upstream/downstream regions\n\
  \n\t-o\tname of the output file\n\n        -from #1 -to #2\n                where\
  \ #1 and #2 are numbers. #2 should be higher than #1.\n                limits of\
  \ the region to extract, relative to feattype start or end\n                (=position\
  \ 0). Use negative values for upstream sequence.\n                        example:\
  \ -from -800 -to -1\n                        will extract the 800 bp upstream the\
  \ feattype start or end.\n\t\t\t (this is the default\n\n\t-noorf\tthe upstream/downstream\
  \ sequence can only contain non-coding sequence.\n\t\ti.e. the -from values is modified\
  \ if a predicted orf\n\t\tis encountered within its range.\n\t\tThe weaknesses of\
  \ using this option are that\n\t\t- all predicted orf do not correspond to real\
  \ orf,\n\t\t- there is no a priori reason to exclude a regulatory site\n\t\t  which\
  \ would overlap the upstream coding sequence.\n\n        -nogene the upstream/downstream\
  \ sequence can only contain non-transcribed sequence.\n\n        -maskcoding\n \
  \               all coding sequence is replaced by N in the retrieved sequence\n\
  \n\t-rm     Use the repeat masked version of the genome.  Attention :\n\t\trepeated\
  \ regions are annotated for some genomes only.\n\n        -alltranscripts\n    \
  \            Get sequences for all transcripts of genes.\n                Use -uniqseqs\
  \ if you do motif discovery afterwards\n\n        -uniqseqs\n                With\
  \ -alltranscripts, returns only non-redondant sequences\n\n        -firstintron\n\
  \                With feattype intron, get only first intron sequence\n\n      \
  \  -noncoding\n                With feattype exon, get only non-coding (part of)\
  \ exons\n\n        -chrom  Chromosome name or number (to use with -left and -right)\n\
  \n        -left   Left limit of sequence to retrieve\n\n        -right  Right limit\
  \ of sequence to retrieve\n\n        -strand Strand of sequence to retrieve when\
  \ using -left and -right. Values: 1, -1\n\n        -ftfile Feature file\n\n    \
  \    -ftfileformat\n                Feature file format. Supported: ft, gft\n\n\t\
  -ortho  Retrieve homologous sequences from EnsEMBL Compara databases\n\n\t-ortho_type\
  \ Type\n                Filter on homology type. (example: ortholog, ortholog_one2one)\n\
  \n        -homologs_table File name\n                Prints homology info to a tab\
  \ delimited file\n\n        -taxon Taxon  Filter on taxonomic level (example: Mammalia)\n\
  \n\t-header_org   Type of organism name to use in the fasta header (scientific,\
  \ common or none).\n\t\t      Default is scientific. Common name is only accessible\
  \ with -ortho.\n\n        -label label_type\n\t       Information used as sequence\
  \ label in the fasta header. \n\n\t       Supported label types: \n\n\t       -label\
  \ query \n\t       \t      use as sequence label the identifier or name used as\
  \ query. \n\n"
generated_using:
- -h
docker_image:
