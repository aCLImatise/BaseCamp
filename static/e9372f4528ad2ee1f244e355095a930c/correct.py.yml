!Command
command:
- correct.py
positional:
- !Positional
  description: "The sorted output of make-barcodes.awk. The important\npart is that\
    \ it's a tab-delimited file with at least 2\ncolumns: the barcode sequence and\
    \ order, and it must\nbe sorted in the same order as the \"reads\" in the SAM\n\
    file."
  position: 0
  name: families
  optional: false
- !Positional
  description: "The fasta/q file given to the aligner. Used to get\nbarcode sequences\
    \ from read names."
  position: 1
  name: reads
  optional: false
- !Positional
  description: "Barcode alignment, in SAM format. Omit to read from\nstdin. The read\
    \ names must be integers, representing\nthe (1-based) order they appear in the\
    \ families file."
  position: 2
  name: sam
  optional: false
named:
- !Flag
  description: "Prepend the corrected barcodes and orders to the\noriginal columns."
  synonyms:
  - -P
  - --prepend
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'NM edit distance threshold. Default: 1'
  synonyms:
  - -d
  - --dist
  args: !SimpleFlagArg
    name: DIST
  optional: true
- !Flag
  description: 'MAPQ threshold. Default: 20'
  synonyms:
  - -m
  - --mapq
  args: !SimpleFlagArg
    name: MAPQ
  optional: true
- !Flag
  description: "POS tolerance. Alignments will be ignored if abs(POS -\n1) is greater\
    \ than this value. Set to greater than the\nbarcode length for no threshold. Default:\
    \ 2"
  synonyms:
  - -p
  - --pos
  args: !SimpleFlagArg
    name: POS
  optional: true
- !Flag
  description: "Choose the \"correct\" barcode in a network of related\nbarcodes by\
    \ either the count of how many times the\nbarcode was observed (\"freq\") or how\
    \ connected the\nbarcode is to the others in the network (\"connect\")."
  synonyms:
  - -c
  - --choose-by
  args: !ChoiceFlagArg
    choices: !!set
      count:
      connect:
  optional: true
- !Flag
  description: "Don't check to make sure read pairs have identical\nids. By default,\
    \ if this encounters a pair of reads in\nfamilies.tsv with ids that aren't identical\
    \ (minus an\nending /1 or /2), it will throw an error."
  synonyms:
  - -I
  - --no-check-ids
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Limit the number of lines that will be read from each\ninput file,\
    \ for testing purposes."
  synonyms:
  - --limit
  args: !SimpleFlagArg
    name: LIMIT
  optional: true
- !Flag
  description: Print a list of the unique isoforms
  synonyms:
  - -S
  - --structures
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ''
  synonyms:
  - --struct-human
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "[networks.png], --visualize [networks.png]\nProduce a visualization\
    \ of the unique structures and\nwrite the image to this file. If you omit a filename,\n\
    it will be displayed in a window."
  synonyms:
  - -V
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ''
  synonyms:
  - -F
  - --viz-format
  args: !ChoiceFlagArg
    choices: !!set
      dot:
      png:
      graphviz:
  optional: true
- !Flag
  description: ''
  synonyms:
  - -n
  - --no-output
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Print log messages to this file instead of to stderr.\nWarning: Will\
    \ overwrite the file."
  synonyms:
  - -l
  - --log
  args: !SimpleFlagArg
    name: LOG
  optional: true
- !Flag
  description: ''
  synonyms:
  - -q
  - --quiet
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ''
  synonyms:
  - -i
  - --info
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ''
  synonyms:
  - -v
  - --verbose
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Print debug messages (very verbose).
  synonyms:
  - -D
  - --debug
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Report helpful usage data to the developer, to better\nunderstand\
    \ the use cases and performance of the tool.\nThe only data which will be recorded\
    \ is the name and\nversion of the tool, the size of the input data, the\ntime\
    \ and memory taken to process it, and the IP\naddress of the machine running it.\
    \ Also, if the script\nfails, it will report the name of the exception thrown\n\
    and the line of code it occurred in. No parameters or\nfilenames are sent. All\
    \ the reporting and recording\ncode is available at https://github.com/NickSto/ET."
  synonyms:
  - --phone-home
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Tell the script it's running on Galaxy. Currently this\nonly affects\
    \ data reported when phoning home."
  synonyms:
  - --galaxy
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: If reporting usage data, mark this as a test run.
  synonyms:
  - --test
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: Print the version number and exit.
  synonyms:
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "usage: $ correct.py [options] families.tsv barcodes.fa barcodes.sam >\
  \ families.corrected.tsv\n\nCorrect barcodes using an alignment of all barcodes\
  \ to themselves. Reads the\nalignment in SAM format and corrects the barcodes in\
  \ an input \"families\" file\n(the output of make-barcodes.awk). It will print the\
  \ \"families\" file to stdout\nwith barcodes (and orders) corrected.\n\npositional\
  \ arguments:\n  families              The sorted output of make-barcodes.awk. The\
  \ important\n                        part is that it's a tab-delimited file with\
  \ at least 2\n                        columns: the barcode sequence and order, and\
  \ it must\n                        be sorted in the same order as the \"reads\"\
  \ in the SAM\n                        file.\n  reads                 The fasta/q\
  \ file given to the aligner. Used to get\n                        barcode sequences\
  \ from read names.\n  sam                   Barcode alignment, in SAM format. Omit\
  \ to read from\n                        stdin. The read names must be integers,\
  \ representing\n                        the (1-based) order they appear in the families\
  \ file.\n\noptional arguments:\n  -h, --help            show this help message and\
  \ exit\n  -P, --prepend         Prepend the corrected barcodes and orders to the\n\
  \                        original columns.\n  -d DIST, --dist DIST  NM edit distance\
  \ threshold. Default: 1\n  -m MAPQ, --mapq MAPQ  MAPQ threshold. Default: 20\n \
  \ -p POS, --pos POS     POS tolerance. Alignments will be ignored if abs(POS -\n\
  \                        1) is greater than this value. Set to greater than the\n\
  \                        barcode length for no threshold. Default: 2\n  -c {count,connect},\
  \ --choose-by {count,connect}\n                        Choose the \"correct\" barcode\
  \ in a network of related\n                        barcodes by either the count\
  \ of how many times the\n                        barcode was observed (\"freq\"\
  ) or how connected the\n                        barcode is to the others in the\
  \ network (\"connect\").\n  -I, --no-check-ids    Don't check to make sure read\
  \ pairs have identical\n                        ids. By default, if this encounters\
  \ a pair of reads in\n                        families.tsv with ids that aren't\
  \ identical (minus an\n                        ending /1 or /2), it will throw an\
  \ error.\n  --limit LIMIT         Limit the number of lines that will be read from\
  \ each\n                        input file, for testing purposes.\n  -S, --structures\
  \      Print a list of the unique isoforms\n  --struct-human\n  -V [networks.png],\
  \ --visualize [networks.png]\n                        Produce a visualization of\
  \ the unique structures and\n                        write the image to this file.\
  \ If you omit a filename,\n                        it will be displayed in a window.\n\
  \  -F {dot,graphviz,png}, --viz-format {dot,graphviz,png}\n  -n, --no-output\n \
  \ -l LOG, --log LOG     Print log messages to this file instead of to stderr.\n\
  \                        Warning: Will overwrite the file.\n  -q, --quiet\n  -i,\
  \ --info\n  -v, --verbose\n  -D, --debug           Print debug messages (very verbose).\n\
  \  --phone-home          Report helpful usage data to the developer, to better\n\
  \                        understand the use cases and performance of the tool.\n\
  \                        The only data which will be recorded is the name and\n\
  \                        version of the tool, the size of the input data, the\n\
  \                        time and memory taken to process it, and the IP\n     \
  \                   address of the machine running it. Also, if the script\n   \
  \                     fails, it will report the name of the exception thrown\n \
  \                       and the line of code it occurred in. No parameters or\n\
  \                        filenames are sent. All the reporting and recording\n \
  \                       code is available at https://github.com/NickSto/ET.\n  --galaxy\
  \              Tell the script it's running on Galaxy. Currently this\n        \
  \                only affects data reported when phoning home.\n  --test       \
  \         If reporting usage data, mark this as a test run.\n  --version       \
  \      Print the version number and exit.\n"
generated_using:
- --help
