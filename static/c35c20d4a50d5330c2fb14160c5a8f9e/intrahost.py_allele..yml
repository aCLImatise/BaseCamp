&id003 !Command
command:
- intrahost.py
- allele.
positional:
- !Positional
  description: ''
  position: 0
  name: intrahost.py
  optional: false
- !Positional
  description: ''
  position: 1
  name: subcommand
  optional: false
named: []
parent: &id001 !Command
  command:
  - intrahost.py
  positional: []
  named: []
  parent:
  subcommands:
  - !Command
    command:
    - intrahost.py
    - tabfile_rename
    positional:
    - !Positional
      description: Input flat file
      position: 0
      name: inFile
      optional: false
    - !Positional
      description: "Map file. Two-column headerless file that maps input\nvalues to\
        \ output values. This script will error if\nthere are values in inFile that\
        \ do not exist in\nmapFile."
      position: 1
      name: mapFile
      optional: false
    - !Positional
      description: Output flat file
      position: 2
      name: outFile
      optional: false
    named:
    - !Flag
      description: "Which column number to replace (0-based index).\n[default: 0]"
      synonyms:
      - --col_idx
      args: !SimpleFlagArg
        name: COL
      optional: true
    - !Flag
      description: 'Verboseness of output. [default: DEBUG]'
      synonyms:
      - --loglevel
      args: !ChoiceFlagArg
        choices: !!set
          ? ERROR
          ? EXCEPTION
          ? INFO
          ? DEBUG
          ? WARNING
          ? CRITICAL
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag: !Flag
      description: show program's version number and exit
      synonyms:
      - --version
      - -V
      args: !EmptyFlagArg {}
      optional: true
    help_text: "usage: intrahost.py subcommand tabfile_rename [-h] [--col_idx COL]\n\
      \                                              [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
      \                                              [--version]\n               \
      \                               inFile mapFile outFile\n\nTake input tab file\
      \ and copy to an output file while changing the values in a\nspecific column\
      \ based on a mapping file. The first line will pass through\nuntouched (it is\
      \ assumed to be a header).\n\npositional arguments:\n  inFile              \
      \  Input flat file\n  mapFile               Map file. Two-column headerless\
      \ file that maps input\n                        values to output values. This\
      \ script will error if\n                        there are values in inFile that\
      \ do not exist in\n                        mapFile.\n  outFile             \
      \  Output flat file\n\noptional arguments:\n  -h, --help            show this\
      \ help message and exit\n  --col_idx COL         Which column number to replace\
      \ (0-based index).\n                        [default: 0]\n  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n\
      \                        Verboseness of output. [default: DEBUG]\n  --version,\
      \ -V         show program's version number and exit\n"
    generated_using: &id002
    - --help
  - !Command
    command:
    - intrahost.py
    - vphaser_one_sample
    positional:
    - !Positional
      description: Input Bam file.
      position: 0
      name: inBam
      optional: false
    - !Positional
      description: Consensus assembly fasta.
      position: 1
      name: inConsFasta
      optional: false
    - !Positional
      description: Tab-separated headerless output file.
      position: 2
      name: outTab
      optional: false
    named:
    - !Flag
      description: Number of threads in call to V-Phaser 2.
      synonyms:
      - --vphaserNumThreads
      args: !SimpleFlagArg
        name: VPHASERNUMTHREADS
      optional: true
    - !Flag
      description: 'Minimum number of reads on each strand (default: 5).'
      synonyms:
      - --minReadsEach
      args: !SimpleFlagArg
        name: MINREADSEACH
      optional: true
    - !Flag
      description: "Maximum allowable ratio of number of reads on the two\nstrands\
        \ (default: 10). Ignored if minReadsEach = 0."
      synonyms:
      - --maxBias
      args: !SimpleFlagArg
        name: MAXBIAS
      optional: true
    - !Flag
      description: "When calling V-Phaser, remove reads mapping to more\nthan one\
        \ contig. Default is to keep the reads."
      synonyms:
      - --removeDoublyMappedReads
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Verboseness of output. [default: DEBUG]'
      synonyms:
      - --loglevel
      args: !ChoiceFlagArg
        choices: !!set
          ? ERROR
          ? EXCEPTION
          ? INFO
          ? DEBUG
          ? WARNING
          ? CRITICAL
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag: !Flag
      description: show program's version number and exit
      synonyms:
      - --version
      - -V
      args: !EmptyFlagArg {}
      optional: true
    help_text: "usage: intrahost.py subcommand vphaser_one_sample [-h]\n         \
      \                                         [--vphaserNumThreads VPHASERNUMTHREADS]\n\
      \                                                  [--minReadsEach MINREADSEACH]\n\
      \                                                  [--maxBias MAXBIAS]\n   \
      \                                               [--removeDoublyMappedReads]\n\
      \                                                  [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n\
      \                                                  [--version]\n           \
      \                                       inBam inConsFasta outTab\n\nInput: a\
      \ single BAM file, representing reads from one sample, mapped to its\nown consensus\
      \ assembly. It may contain multiple read groups and libraries.\nOutput: a tab-separated\
      \ file with no header containing filtered V Phaser-2\noutput variants with additional\
      \ column for sequence/chrom name, and library\ncounts and p-values appended\
      \ to the counts for each allele.\n\npositional arguments:\n  inBam         \
      \        Input Bam file.\n  inConsFasta           Consensus assembly fasta.\n\
      \  outTab                Tab-separated headerless output file.\n\noptional arguments:\n\
      \  -h, --help            show this help message and exit\n  --vphaserNumThreads\
      \ VPHASERNUMTHREADS\n                        Number of threads in call to V-Phaser\
      \ 2.\n  --minReadsEach MINREADSEACH\n                        Minimum number\
      \ of reads on each strand (default: 5).\n  --maxBias MAXBIAS     Maximum allowable\
      \ ratio of number of reads on the two\n                        strands (default:\
      \ 10). Ignored if minReadsEach = 0.\n  --removeDoublyMappedReads\n         \
      \               When calling V-Phaser, remove reads mapping to more\n      \
      \                  than one contig. Default is to keep the reads.\n  --loglevel\
      \ {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n                        Verboseness\
      \ of output. [default: DEBUG]\n  --version, -V         show program's version\
      \ number and exit\n"
    generated_using: *id002
  - !Command
    command:
    - intrahost.py
    - Fws
    positional:
    - !Positional
      description: Input VCF file
      position: 0
      name: inVcf
      optional: false
    - !Positional
      description: Output VCF file
      position: 1
      name: outVcf
      optional: false
    named:
    - !Flag
      description: 'Verboseness of output. [default: DEBUG]'
      synonyms:
      - --loglevel
      args: !ChoiceFlagArg
        choices: !!set
          ? ERROR
          ? EXCEPTION
          ? INFO
          ? DEBUG
          ? WARNING
          ? CRITICAL
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag: !Flag
      description: show program's version number and exit
      synonyms:
      - --version
      - -V
      args: !EmptyFlagArg {}
      optional: true
    help_text: "usage: intrahost.py subcommand Fws [-h]\n                        \
      \           [--loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}]\n   \
      \                                [--version]\n                             \
      \      inVcf outVcf\n\nCompute the Fws statistic on iSNV data. See Manske, 2012\
      \ (Nature)\n\npositional arguments:\n  inVcf                 Input VCF file\n\
      \  outVcf                Output VCF file\n\noptional arguments:\n  -h, --help\
      \            show this help message and exit\n  --loglevel {DEBUG,INFO,WARNING,ERROR,CRITICAL,EXCEPTION}\n\
      \                        Verboseness of output. [default: DEBUG]\n  --version,\
      \ -V         show program's version number and exit\n"
    generated_using: *id002
  - *id003
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "\nEnter a subcommand to view additional information:\n\n     intrahost.py\
    \ \e[1mvphaser_one_sample\e[0m [...]\n          Input: a single BAM file, representing\
    \ reads from one\n          sample, mapped toits own consensus assembly. It may\
    \ contain\n          multiple read groups andlibraries. Output: a tab-separated\n\
    \          file with no header containing filteredV Phaser-2 output\n        \
    \  variants with additional column forsequence/chrom name, and\n          library\
    \ counts and p-values appended tothe counts for each\n          allele.\n\n  \
    \   intrahost.py \e[1mvphaser\e[0m [...]\n          Run V-Phaser 2 on the input\
    \ file without any additional\n          filtering. Combine the non-header lines\
    \ of the\n          CHROM.var.raw.txt files it produces,adding CHROM as the\n\
    \          first field on each line.\n\n     intrahost.py \e[1mtabfile_rename\e\
    [0m [...]\n          Take input tab file and copy to an output file while\n  \
    \        changingthe values in a specific column based on a mapping\n        \
    \  file. The first line will pass through untouched (it is\n          assumed\
    \ to bea header).\n\n     intrahost.py \e[1mmerge_to_vcf\e[0m [...]\n        \
    \  Combine and convert vPhaser2 parsed filtered output text\n          files into\
    \ VCF format. Assumption: consensus assemblies used\n          in creating alignments\
    \ do not extend beyond ends of\n          reference. the number of alignment files\
    \ equals the number\n          of chromosomes / segments\n\n     intrahost.py\
    \ \e[1mFws\e[0m [...]\n          Compute the Fws statistic on iSNV data. See Manske,\
    \ 2012\n          (Nature)\n\n     intrahost.py \e[1miSNV_table\e[0m [...]\n \
    \         Convert VCF iSNV data to tabular text\n\n     intrahost.py \e[1miSNP_per_patient\e\
    [0m [...]\n          Aggregate tabular iSNP data per patient x position (all time\n\
    \          points averaged)\n\nusage: intrahost.py subcommand\n\nThis script contains\
    \ a number of utilities for intrahost variant calling and\nannotation for viral\
    \ genomes.\n\nsubcommands:\n  \e[F\n    vphaser_one_sample\n    vphaser\n    tabfile_rename\n\
    \    merge_to_vcf\n    Fws\n    iSNV_table\n    iSNP_per_patient\n"
  generated_using: *id002
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "usage: intrahost.py subcommand\nintrahost.py: error: argument \e[F: invalid\
  \ choice: 'allele.' (choose from 'vphaser_one_sample', 'vphaser', 'tabfile_rename',\
  \ 'merge_to_vcf', 'Fws', 'iSNV_table', 'iSNP_per_patient')\n"
generated_using: *id002
