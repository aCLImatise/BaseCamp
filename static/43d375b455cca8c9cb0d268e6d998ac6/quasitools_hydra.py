from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Directory, File, Boolean, Int, Float, String

Quasitools_Hydra_V0_1_0 = CommandToolBuilder(tool="quasitools_hydra", base_command=["quasitools", "hydra"], inputs=[ToolInput(tag="in_output_dir", input_type=Directory(optional=True), prefix="--output_dir", doc=InputDocumentation(doc="[required]")), ToolInput(tag="in_reporting_threshold", input_type=File(optional=True), prefix="--reporting_threshold", doc=InputDocumentation(doc="RANGE\nMinimum mutation frequency percent to\nreport.")), ToolInput(tag="in_generate_consensus", input_type=Boolean(optional=True), prefix="--generate_consensus", doc=InputDocumentation(doc="Generate a mixed base consensus sequence.")), ToolInput(tag="in_consensus_pct", input_type=Int(optional=True), prefix="--consensus_pct", doc=InputDocumentation(doc="RANGE\nMinimum percentage a base needs to be\nincorporated into the consensus sequence.")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="Suppress all normal output.")), ToolInput(tag="in_trim_reads", input_type=Boolean(optional=True), prefix="--trim_reads", doc=InputDocumentation(doc="Iteratively trim reads based on filter\nvalues if enabled. Remove reads which do not\nmeet filter values if disabled.")), ToolInput(tag="in_mask_reads", input_type=Boolean(optional=True), prefix="--mask_reads", doc=InputDocumentation(doc="Mask low coverage regions in reads if below\nminimum read quality. This option and --ns\ncannot be both enabled simultaneously.")), ToolInput(tag="in_min_read_qual", input_type=Int(optional=True), prefix="--min_read_qual", doc=InputDocumentation(doc="Minimum quality for a position in a read to\nbe masked.")), ToolInput(tag="in_length_cut_off", input_type=Int(optional=True), prefix="--length_cutoff", doc=InputDocumentation(doc="Reads which fall short of the specified\nlength will be filtered out.")), ToolInput(tag="in_score_cut_off", input_type=Int(optional=True), prefix="--score_cutoff", doc=InputDocumentation(doc="Reads that have a median or mean quality\nscore (depending on the score type\nspecified) less than the score cutoff value\nwill be filtered out.")), ToolInput(tag="in_median", input_type=Boolean(optional=True), prefix="--median", doc=InputDocumentation(doc="Use either median score (default) or mean\nscore for the score cutoff value.")), ToolInput(tag="in_ns", input_type=Boolean(optional=True), prefix="--ns", doc=InputDocumentation(doc="Flag to enable the filtering of n's.  This\noption and --mask_reads cannot be both\nenabled simultaneously.")), ToolInput(tag="in_error_rate", input_type=Float(optional=True), prefix="--error_rate", doc=InputDocumentation(doc="Error rate for the sequencing platform.")), ToolInput(tag="in_min_variant_qual", input_type=Int(optional=True), prefix="--min_variant_qual", doc=InputDocumentation(doc="Minimum quality for variant to be considered\nlater on in the pipeline.")), ToolInput(tag="in_min_dp", input_type=Int(optional=True), prefix="--min_dp", doc=InputDocumentation(doc="Minimum required read depth for variant to\nbe considered later on in the pipeline.")), ToolInput(tag="in_min_ac", input_type=Int(optional=True), prefix="--min_ac", doc=InputDocumentation(doc="The minimum required allele count for\nvariant to be considered later on in the\npipeline.")), ToolInput(tag="in_min_freq", input_type=Float(optional=True), prefix="--min_freq", doc=InputDocumentation(doc="The minimum required frequency for mutation\nto be considered in drug resistance report.")), ToolInput(tag="in_id", input_type=String(optional=True), prefix="--id", doc=InputDocumentation(doc="Specify FASTA sequence identifier to be used\nin the consensus report.")), ToolInput(tag="in_forward", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_reverse", input_type=String(optional=True), position=1, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Quasitools_Hydra_V0_1_0().translate("wdl", allow_empty_container=True)

