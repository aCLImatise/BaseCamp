from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String

Edta_Pl_V0_1_0 = CommandToolBuilder(tool="EDTA.pl", base_command=["EDTA.pl"], inputs=[ToolInput(tag="in_genome", input_type=Boolean(optional=True), prefix="--genome", doc=InputDocumentation(doc="[File]  The genome FASTA")), ToolInput(tag="in_species", input_type=Boolean(optional=True), prefix="--species", doc=InputDocumentation(doc="[Rice|Maize|others]   Specify the species for identification of TIR\ncandidates. Default: others")), ToolInput(tag="in_step", input_type=Boolean(optional=True), prefix="--step", doc=InputDocumentation(doc="[all|filter|final|anno] Specify which steps you want to run EDTA.\nall: run the entire pipeline (default)\nfilter: start from raw TEs to the end.\nfinal: start from filtered TEs to finalizing the run.\nanno: perform whole-genome annotation/analysis after\nTE library construction.")), ToolInput(tag="in_overwrite", input_type=Boolean(optional=True), prefix="--overwrite", doc=InputDocumentation(doc="[0|1]   If previous raw TE results are found, decide to overwrite\n(1, rerun) or not (0, default).")), ToolInput(tag="in_cds", input_type=Boolean(optional=True), prefix="--cds", doc=InputDocumentation(doc="[File]  Provide a FASTA file containing the coding sequence (no introns,\nUTRs, nor TEs) of this genome or its close relative.")), ToolInput(tag="in_curated_lib", input_type=Boolean(optional=True), prefix="--curatedlib", doc=InputDocumentation(doc="[File]  Provided a curated library to keep consistant naming and\nclassification for known TEs. TEs in this file will be\ntrusted 100%, so please ONLY provide MANUALLY CURATED ones.\nThis option is not mandatory. It's totally OK if no file is\nprovided (default).")), ToolInput(tag="in_sensitive", input_type=Boolean(optional=True), prefix="--sensitive", doc=InputDocumentation(doc="[0|1]   Use RepeatModeler to identify remaining TEs (1) or not (0,\ndefault). This step is slow but MAY help to recover some TEs.")), ToolInput(tag="in_an_no", input_type=Boolean(optional=True), prefix="--anno", doc=InputDocumentation(doc="[0|1]   Perform (1) or not perform (0, default) whole-genome TE annotation\nafter TE library construction.")), ToolInput(tag="in_rm_out", input_type=File(optional=True), prefix="--rmout", doc=InputDocumentation(doc="[File]  Provide your own homology-based TE annotation instead of using the\nEDTA library for masking. File is in RepeatMasker .out format. This\nfile will be merged with the structural-based TE annotation. (--anno 1\nrequired). Default: use the EDTA library for annotation.")), ToolInput(tag="in_evaluate", input_type=Boolean(optional=True), prefix="--evaluate", doc=InputDocumentation(doc="[0|1]        Evaluate (1) classification consistency of the TE annotation.\n(--anno 1 required). Default: 0. This step is slow and does\nnot change the annotation result.")), ToolInput(tag="in_exclude", input_type=Boolean(optional=True), prefix="--exclude", doc=InputDocumentation(doc="[File]  Exclude bed format regions from TE annotation. Default: undef.\n(--anno 1 required).")), ToolInput(tag="in_force", input_type=Boolean(optional=True), prefix="--force", doc=InputDocumentation(doc="[0|1]   When no confident TE candidates are found: 0, interrupt and exit\n(default); 1, use rice TEs to continue.")), ToolInput(tag="in_repeat_modeler", input_type=Boolean(optional=True), prefix="--repeatmodeler", doc=InputDocumentation(doc="[path]  The directory containing RepeatModeler (default: read from ENV)")), ToolInput(tag="in_repeatmasker", input_type=Boolean(optional=True), prefix="--repeatmasker", doc=InputDocumentation(doc="[path]   The directory containing RepeatMasker (default: read from ENV)")), ToolInput(tag="in_check_dependencies", input_type=String(optional=True), prefix="--check_dependencies", doc=InputDocumentation(doc="if dependencies are fullfiled and quit")), ToolInput(tag="in_threads", input_type=Boolean(optional=True), prefix="--threads", doc=InputDocumentation(doc="[int]   Number of theads to run this script (default: 4)")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="[0|1]   Retain intermediate files (default: 0)"))], outputs=[ToolOutput(tag="out_rm_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_rm_out", type_hint=File()), doc=OutputDocumentation(doc="[File]  Provide your own homology-based TE annotation instead of using the\nEDTA library for masking. File is in RepeatMasker .out format. This\nfile will be merged with the structural-based TE annotation. (--anno 1\nrequired). Default: use the EDTA library for annotation."))], container="quay.io/biocontainers/edta:1.9.6--1", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Edta_Pl_V0_1_0().translate("wdl")

