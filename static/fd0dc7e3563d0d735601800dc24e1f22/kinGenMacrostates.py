from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String

Kingenmacrostates_V0_1_0 = CommandToolBuilder(tool="kinGenMacrostates", base_command=["kinGenMacrostates"], inputs=[ToolInput(tag="in_energy_band_width", input_type=Boolean(optional=True), prefix="-E", doc=InputDocumentation(doc=":     energy band width (in kcal) in which structures are completely\nenumerated (15)")), ToolInput(tag="in_minimal_barrier_height", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc=":     minimal barrier height (barriers --minh) (1)\nMinima seperated from their respective father by a lower\nbarrier are merged with it.")), ToolInput(tag="in_folding_temperature_performed", input_type=Boolean(optional=True), prefix="-T", doc=InputDocumentation(doc=":     folding temperature at which the simulation is performed")), ToolInput(tag="in_allows_lonely_pairs", input_type=Boolean(optional=True), prefix="-l", doc=InputDocumentation(doc=":     Allows lonely pairs. By default, only 'canonical' structures\n(i.e. such without any lonely pairs) are generated.")), ToolInput(tag="in_remove_disconnected_structures", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc=":     remove disconnected structures (i.e. not reachable from mfe)\ninstead of trying to connect them with the findpath heuristic")), ToolInput(tag="in_file_containing_structures", input_type=File(optional=True), prefix="-a", doc=InputDocumentation(doc=":     file containing additional structures to be included into the\nsimulation, e.g. waterfall output")), ToolInput(tag="in_let_barriers_output", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="Let barriers output a list of contact / transient states, ie those\nhaving a neighbor in a different basin.")), ToolInput(tag="in_number_threads_sorting", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc=":     number of threads for sorting of additionally added structures [4]")), ToolInput(tag="in_hard_constraint_enumerate", input_type=Boolean(optional=True), prefix="-C", doc=InputDocumentation(doc=":     Hard constraint on the structures to enumerate, e.g. to\nenumerate only structures containing a defined binding pocket.\nThe constraint needs to be placed in the input file below the\nsequence using ViennaRNAs constraint notation:\nx - unpaired base, () - forced base pair, . - no constraint")), ToolInput(tag="in_write_name_output", input_type=File(optional=True), prefix="-O", doc=InputDocumentation(doc=":     Write the name of the output macrostate file to the file\n'kinGenMacrostates_outfile.tmp'")), ToolInput(tag="in_force_run_exists", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc=":     Force run, even if a lock file exists. If a lock file is found\nand -f is not given, the user is promted to confirm the run.")), ToolInput(tag="in_kin_sim", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_args", input_type=String(optional=True), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_sequence_dot_fast_a", input_type=String(), position=2, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_file_containing_structures", output_type=File(optional=True), selector=InputSelector(input_to_select="in_file_containing_structures", type_hint=File()), doc=OutputDocumentation(doc=":     file containing additional structures to be included into the\nsimulation, e.g. waterfall output")), ToolOutput(tag="out_write_name_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_write_name_output", type_hint=File()), doc=OutputDocumentation(doc=":     Write the name of the output macrostate file to the file\n'kinGenMacrostates_outfile.tmp'"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Kingenmacrostates_V0_1_0().translate("wdl", allow_empty_container=True)

