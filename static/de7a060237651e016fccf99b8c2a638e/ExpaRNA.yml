!Command
positional: []
named:
- !Flag
  description: '#   : # minmal size of an EPM (gamma) 2 is default and returns all
    EPMs with at least 2 nucleotides'
  synonyms:
  - -s
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '#   : # determines the maximal number of returned EPMs 0 is default
    an returns all EPMs 1 is the largest EPM and so on...'
  synonyms:
  - -n
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '#   : 1: initial EPM score = EPM size (default) : 2: initial EPM score
    = (EPM size)^2 (prefers larger patterns in LCS-EPM)'
  synonyms:
  - -t
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ': Do NOT ignore gaps in input sequences'
  synonyms:
  - -g
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '#   : write all output to dir <#>'
  synonyms:
  - -d
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ": write LCS-EPM into file 'LCSEPM_align.aln' as alignment"
  synonyms:
  - -o
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ": write LCS-EPM into file 'LCSEPM_LocARNA_input.fa' as constraint\
    \ input for LocARNA"
  synonyms:
  - -i
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ": write LCS-EPM into file 'LCSEPM.epm' as single EPMs"
  synonyms:
  - -e
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ": write all EPMs into file 'allEPM.epm' (depends on -s/ -n)"
  synonyms:
  - -a
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ': DO NOT save LCS-EPM as colored postscript file'
  synonyms:
  - -p
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ': determine similarity/differences of LCS-EPM with reference alignment
    via two colored postscript files'
  synonyms:
  - -A
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ': verbose output'
  synonyms:
  - -v
  args: !EmptyFlagArg {}
  optional: true
command:
- ExpaRNA
subcommands: []
help_flag: !Flag
  description: ': this info'
  synonyms:
  - -h
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
