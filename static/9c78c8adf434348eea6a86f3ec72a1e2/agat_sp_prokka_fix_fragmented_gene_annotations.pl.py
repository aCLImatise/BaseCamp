from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String, Int, Directory

Agat_Sp_Prokka_Fix_Fragmented_Gene_Annotations_Pl_V0_1_0 = CommandToolBuilder(tool="agat_sp_prokka_fix_fragmented_gene_annotations.pl", base_command=["agat_sp_prokka_fix_fragmented_gene_annotations.pl"], inputs=[ToolInput(tag="in_gff", input_type=Boolean(optional=True), prefix="--gff", doc=InputDocumentation(doc="Input genome GTF/GFF file. Mandatory.")), ToolInput(tag="in_fast_a", input_type=File(optional=True), prefix="--fasta", doc=InputDocumentation(doc="Input genome fasta file. Mandatory.")), ToolInput(tag="in_db", input_type=Boolean(optional=True), prefix="--db", doc=InputDocumentation(doc="Input Uniprot fasta file used by prokka. Mandatory.")), ToolInput(tag="in_frags", input_type=String(optional=True), prefix="--frags", doc=InputDocumentation(doc="and fix detected FRAGS if not in the same frame")), ToolInput(tag="in_pseudo", input_type=Boolean(optional=True), prefix="--pseudo", doc=InputDocumentation(doc="Merge detected FRAGS and add the agat_pseudo attribute (value\nwill be the location of the first stop codon met).")), ToolInput(tag="in_hamap_size", input_type=Boolean(optional=True), prefix="--hamap_size", doc=InputDocumentation(doc="Some protein function are not infered by Uniprot but by Hamap.\nIn such case the information is retrieved from the web. As hamap\nprovide a family profile, the protein size if a range. 'low'\noption will use the low value of the range, 'middle' option will\nuse the average of the range, 'high' option will the the high\nvalue of the range. Default 'high'.")), ToolInput(tag="in_codon", input_type=Int(optional=True), prefix="--codon", doc=InputDocumentation(doc="Codon table to use. [default 1]")), ToolInput(tag="in_skip_hamap", input_type=Boolean(optional=True), prefix="--skip_hamap", doc=InputDocumentation(doc="For test purpose it could be useful to skip hamap, because it\nrequires fetching information through internet.")), ToolInput(tag="in_output", input_type=Directory(optional=True), prefix="--output", doc=InputDocumentation(doc="Output folder. Mandatory.")), ToolInput(tag="in_verbose_mode_default", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="verbose mode. Default off.")), ToolInput(tag="in_agat_sp_pro_kk_a_fragmented_gene_annotations_do_tpl", input_type=String(), position=0, doc=InputDocumentation(doc="Description:"))], outputs=[ToolOutput(tag="out_output", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="Output folder. Mandatory."))], container="quay.io/biocontainers/agat:0.6.0--pl526r35_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Agat_Sp_Prokka_Fix_Fragmented_Gene_Annotations_Pl_V0_1_0().translate("wdl")

