!Command
command:
- mmseqs
- linsearch
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - --comp-bias-corr
  description: Correct for locally biased amino acid composition (range 0-1) [1]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --add-self-matches
  description: Artificially add entries of queries with themselves (for clustering)
    [0]
  args: !SimpleFlagArg
    name: BOOL
- !Flag
  optional: true
  synonyms:
  - --seed-sub-mat
  description: Substitution matrix file for k-mer generation [nucl:nucleotide.out,aa:blosum62.out]
  args: !SimpleFlagArg
    name: TWIN
- !Flag
  optional: true
  synonyms:
  - --mask
  description: 'Mask sequences in k-mer stage: 0: w/o low complexity masking, 1: with
    low complexity masking [0]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --mask-lower-case
  description: 'Lowercase letters will be excluded from k-mer search 0: include region,
    1: exclude region [0]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --split-memory-limit
  description: Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to all
    available system memory [0]
  args: !SimpleFlagArg
    name: BYTE
- !Flag
  optional: true
  synonyms:
  - -a
  description: Add backtrace string (convert to alignments with mmseqs convertalis
    module) [0]
  args: !SimpleFlagArg
    name: BOOL
- !Flag
  optional: true
  synonyms:
  - --alignment-mode
  description: "How to compute the alignment:\n0: automatic\n1: only score and end_pos\n\
    2: also start_pos and cov\n3: also seq.id\n4: only ungapped alignment [2]"
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --alignment-output-mode
  description: "How to compute the alignment:\n0: automatic\n1: only score and end_pos\n\
    2: also start_pos and cov\n3: also seq.id\n4: only ungapped alignment\n5: score\
    \ only (output) cluster format [0]"
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --wrapped-scoring
  description: Double the (nucleotide) query sequence during the scoring process to
    allow wrapped diagonal scoring around end and start [0]
  args: !SimpleFlagArg
    name: BOOL
- !Flag
  optional: true
  synonyms:
  - -e
  description: List matches below this E-value (range 0.0-inf) [1.000E-03]
  args: !SimpleFlagArg
    name: DOUBLE
- !Flag
  optional: true
  synonyms:
  - --min-seq-id
  description: List matches above this sequence identity (for clustering) (range 0.0-1.0)
    [0.000]
  args: !SimpleFlagArg
    name: FLOAT
- !Flag
  optional: true
  synonyms:
  - --min-aln-len
  description: Minimum alignment length (range 0-INT_MAX) [0]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --seq-id-mode
  description: '0: alignment length 1: shorter, 2: longer sequence [0]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --alt-ali
  description: Show up to this many alternative alignments [0]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - -c
  description: List matches above this fraction of aligned (covered) residues (see
    --cov-mode) [0.000]
  args: !SimpleFlagArg
    name: FLOAT
- !Flag
  optional: true
  synonyms:
  - --cov-mode
  description: "0: coverage of query and target\n1: coverage of target\n2: coverage\
    \ of query\n3: target seq. length has to be at least x% of query length\n4: query\
    \ seq. length has to be at least x% of target length\n5: short seq. needs to be\
    \ at least x% of the other seq. length [0]"
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --max-rejected
  description: Maximum rejected alignments before alignment calculation for a query
    is stopped [2147483647]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --max-accept
  description: Maximum accepted alignments before alignment calculation for a query
    is stopped [2147483647]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --score-bias
  description: Score bias when computing SW alignment (in bits) [0.000]
  args: !SimpleFlagArg
    name: FLOAT
- !Flag
  optional: true
  synonyms:
  - --realign
  description: Compute more conservative, shorter alignments (scores and E-values
    not changed) [0]
  args: !SimpleFlagArg
    name: BOOL
- !Flag
  optional: true
  synonyms:
  - --realign-score-bias
  description: Additional bias when computing realignment [-0.200]
  args: !SimpleFlagArg
    name: FLOAT
- !Flag
  optional: true
  synonyms:
  - --realign-max-seqs
  description: Maximum number of results to return in realignment [2147483647]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --gap-open
  description: Gap open cost [nucl:5,aa:11]
  args: !SimpleFlagArg
    name: TWIN
- !Flag
  optional: true
  synonyms:
  - --gap-extend
  description: Gap extension cost [nucl:2,aa:1]
  args: !SimpleFlagArg
    name: TWIN
- !Flag
  optional: true
  synonyms:
  - --zdrop
  description: Maximal allowed difference between score values before alignment is
    truncated  (nucleotide alignment only) [40]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --kmer-per-seq
  description: k-mers per sequence [21]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --kmer-per-seq-scale
  description: Scale k-mer per sequence based on sequence length as kmer-per-seq val
    + scale x seqlen [nucl:0.200,aa:0.000]
  args: !SimpleFlagArg
    name: TWIN
- !Flag
  optional: true
  synonyms:
  - --pick-n-sim-kmer
  description: Add N similar k-mers to search [1]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --result-direction
  description: 'result is 0: query, 1: target centric [1]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --pca
  description: Pseudo count admixture strength [1.000]
  args: !SimpleFlagArg
    name: FLOAT
- !Flag
  optional: true
  synonyms:
  - --pcb
  description: 'Pseudo counts: Neff at half of maximum admixture (range 0.0-inf) [1.500]'
  args: !SimpleFlagArg
    name: FLOAT
- !Flag
  optional: true
  synonyms:
  - --min-length
  description: Minimum codon number in open reading frames [30]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --max-length
  description: Maximum codon number in open reading frames [32734]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --max-gaps
  description: Maximum number of codons with gaps or unknown residues before an open
    reading frame is rejected [2147483647]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --contig-start-mode
  description: 'Contig start can be 0: incomplete, 1: complete, 2: both [2]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --contig-end-mode
  description: 'Contig end can be 0: incomplete, 1: complete, 2: both [2]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --orf-start-mode
  description: 'Orf fragment can be 0: from start to stop, 1: from any to stop, 2:
    from last encountered start to stop (no start in the middle) [1]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --forward-frames
  description: Comma-separated list of frames on the forward strand to be extracted
    [1,2,3]
  args: !SimpleFlagArg
    name: STR
- !Flag
  optional: true
  synonyms:
  - --reverse-frames
  description: Comma-separated list of frames on the reverse strand to be extracted
    [1,2,3]
  args: !SimpleFlagArg
    name: STR
- !Flag
  optional: true
  synonyms:
  - --translation-table
  description: "1) CANONICAL, 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4) MOLD_MITOCHONDRIAL,\
    \ 5) INVERT_MITOCHONDRIAL, 6) CILIATE\n9) FLATWORM_MITOCHONDRIAL, 10) EUPLOTID,\
    \ 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14) ALT_FLATWORM_MITOCHONDRIAL\n\
    15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL, 21) TREMATODE_MITOCHONDRIAL,\
    \ 22) SCENEDESMUS_MITOCHONDRIAL\n23) THRAUSTOCHYTRIUM_MITOCHONDRIAL, 24) PTEROBRANCHIA_MITOCHONDRIAL,\
    \ 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27) KARYORELICT, 28) CONDYLOSTOMA\n29)\
    \ MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA [1]"
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --translate
  description: Translate ORF to amino acid [0]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --use-all-table-starts
  description: Use all alternatives for a start codon in the genetic table, if false
    - only ATG (AUG) [0]
  args: !SimpleFlagArg
    name: BOOL
- !Flag
  optional: true
  synonyms:
  - --id-offset
  description: Numeric ids in index file are offset by this value [0]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --add-orf-stop
  description: Add stop codon '*' at complete start and end [0]
  args: !SimpleFlagArg
    name: BOOL
- !Flag
  optional: true
  synonyms:
  - --search-type
  description: 'Search type 0: auto 1: amino acid, 2: translated, 3: nucleotide, 4:
    translated nucleotide alignment [0]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --sub-mat
  description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
  args: !SimpleFlagArg
    name: TWIN
- !Flag
  optional: true
  synonyms:
  - --max-seq-len
  description: Maximum sequence length [65535]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --db-load-mode
  description: 'Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch [0]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --threads
  description: Number of CPU-cores used (all by default) [2]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --compressed
  description: Write compressed output [0]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - -v
  description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --mpi-runner
  description: Use MPI on compute cluster with this MPI command (e.g. "mpirun -np
    42") []
  args: !SimpleFlagArg
    name: STR
- !Flag
  optional: true
  synonyms:
  - --force-reuse
  description: Reuse tmp filse in tmp/latest folder ignoring parameters and version
    changes [0]
  args: !SimpleFlagArg
    name: BOOL
- !Flag
  optional: true
  synonyms:
  - --remove-tmp-files
  description: Delete temporary files [0]
  args: !SimpleFlagArg
    name: BOOL
- !Flag
  optional: true
  synonyms:
  - --create-lookup
  description: Create database lookup file (can be very large) [0]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --chain-alignments
  description: Chain overlapping alignments [0]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --merge-query
  description: Combine ORFs/split sequences to a single entry [1]
  args: !SimpleFlagArg
    name: INT
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "usage: mmseqs linsearch <i:queryDB> <i:targetDB> <o:alignmentDB> <tmpDir>\
  \ [options]\n By Martin Steinegger <martin.steinegger@snu.ac.kr>\noptions: prefilter:\
  \                   \n --comp-bias-corr INT          Correct for locally biased\
  \ amino acid composition (range 0-1) [1]\n --add-self-matches BOOL       Artificially\
  \ add entries of queries with themselves (for clustering) [0]\n --seed-sub-mat TWIN\
  \           Substitution matrix file for k-mer generation [nucl:nucleotide.out,aa:blosum62.out]\n\
  \ --mask INT                    Mask sequences in k-mer stage: 0: w/o low complexity\
  \ masking, 1: with low complexity masking [0]\n --mask-lower-case INT         Lowercase\
  \ letters will be excluded from k-mer search 0: include region, 1: exclude region\
  \ [0]\n --split-memory-limit BYTE     Set max memory per split. E.g. 800B, 5K, 10M,\
  \ 1G. Default (0) to all available system memory [0]\nalign:                   \
  \    \n -a BOOL                       Add backtrace string (convert to alignments\
  \ with mmseqs convertalis module) [0]\n --alignment-mode INT          How to compute\
  \ the alignment:\n                               0: automatic\n                \
  \               1: only score and end_pos\n                               2: also\
  \ start_pos and cov\n                               3: also seq.id\n           \
  \                    4: only ungapped alignment [2]\n --alignment-output-mode INT\
  \   How to compute the alignment:\n                               0: automatic\n\
  \                               1: only score and end_pos\n                    \
  \           2: also start_pos and cov\n                               3: also seq.id\n\
  \                               4: only ungapped alignment\n                   \
  \            5: score only (output) cluster format [0]\n --wrapped-scoring BOOL\
  \        Double the (nucleotide) query sequence during the scoring process to allow\
  \ wrapped diagonal scoring around end and start [0]\n -e DOUBLE                \
  \     List matches below this E-value (range 0.0-inf) [1.000E-03]\n --min-seq-id\
  \ FLOAT            List matches above this sequence identity (for clustering) (range\
  \ 0.0-1.0) [0.000]\n --min-aln-len INT             Minimum alignment length (range\
  \ 0-INT_MAX) [0]\n --seq-id-mode INT             0: alignment length 1: shorter,\
  \ 2: longer sequence [0]\n --alt-ali INT                 Show up to this many alternative\
  \ alignments [0]\n -c FLOAT                      List matches above this fraction\
  \ of aligned (covered) residues (see --cov-mode) [0.000]\n --cov-mode INT      \
  \          0: coverage of query and target\n                               1: coverage\
  \ of target\n                               2: coverage of query\n             \
  \                  3: target seq. length has to be at least x% of query length\n\
  \                               4: query seq. length has to be at least x% of target\
  \ length\n                               5: short seq. needs to be at least x% of\
  \ the other seq. length [0]\n --max-rejected INT            Maximum rejected alignments\
  \ before alignment calculation for a query is stopped [2147483647]\n --max-accept\
  \ INT              Maximum accepted alignments before alignment calculation for\
  \ a query is stopped [2147483647]\n --score-bias FLOAT            Score bias when\
  \ computing SW alignment (in bits) [0.000]\n --realign BOOL                Compute\
  \ more conservative, shorter alignments (scores and E-values not changed) [0]\n\
  \ --realign-score-bias FLOAT    Additional bias when computing realignment [-0.200]\n\
  \ --realign-max-seqs INT        Maximum number of results to return in realignment\
  \ [2147483647]\n --gap-open TWIN               Gap open cost [nucl:5,aa:11]\n --gap-extend\
  \ TWIN             Gap extension cost [nucl:2,aa:1]\n --zdrop INT              \
  \     Maximal allowed difference between score values before alignment is truncated\
  \  (nucleotide alignment only) [40]\nkmermatcher:                 \n --kmer-per-seq\
  \ INT            k-mers per sequence [21]\n --kmer-per-seq-scale TWIN     Scale\
  \ k-mer per sequence based on sequence length as kmer-per-seq val + scale x seqlen\
  \ [nucl:0.200,aa:0.000]\n --pick-n-sim-kmer INT         Add N similar k-mers to\
  \ search [1]\n --result-direction INT        result is 0: query, 1: target centric\
  \ [1]\nprofile:                     \n --pca FLOAT                   Pseudo count\
  \ admixture strength [1.000]\n --pcb FLOAT                   Pseudo counts: Neff\
  \ at half of maximum admixture (range 0.0-inf) [1.500]\nmisc:                  \
  \      \n --min-length INT              Minimum codon number in open reading frames\
  \ [30]\n --max-length INT              Maximum codon number in open reading frames\
  \ [32734]\n --max-gaps INT                Maximum number of codons with gaps or\
  \ unknown residues before an open reading frame is rejected [2147483647]\n --contig-start-mode\
  \ INT       Contig start can be 0: incomplete, 1: complete, 2: both [2]\n --contig-end-mode\
  \ INT         Contig end can be 0: incomplete, 1: complete, 2: both [2]\n --orf-start-mode\
  \ INT          Orf fragment can be 0: from start to stop, 1: from any to stop, 2:\
  \ from last encountered start to stop (no start in the middle) [1]\n --forward-frames\
  \ STR          Comma-separated list of frames on the forward strand to be extracted\
  \ [1,2,3]\n --reverse-frames STR          Comma-separated list of frames on the\
  \ reverse strand to be extracted [1,2,3]\n --translation-table INT       1) CANONICAL,\
  \ 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4) MOLD_MITOCHONDRIAL, 5) INVERT_MITOCHONDRIAL,\
  \ 6) CILIATE\n                               9) FLATWORM_MITOCHONDRIAL, 10) EUPLOTID,\
  \ 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14) ALT_FLATWORM_MITOCHONDRIAL\n\
  \                               15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL,\
  \ 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL\n                 \
  \              23) THRAUSTOCHYTRIUM_MITOCHONDRIAL, 24) PTEROBRANCHIA_MITOCHONDRIAL,\
  \ 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27) KARYORELICT, 28) CONDYLOSTOMA\n     \
  \                           29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA [1]\n\
  \ --translate INT               Translate ORF to amino acid [0]\n --use-all-table-starts\
  \ BOOL   Use all alternatives for a start codon in the genetic table, if false -\
  \ only ATG (AUG) [0]\n --id-offset INT               Numeric ids in index file are\
  \ offset by this value [0]\n --add-orf-stop BOOL           Add stop codon '*' at\
  \ complete start and end [0]\n --search-type INT             Search type 0: auto\
  \ 1: amino acid, 2: translated, 3: nucleotide, 4: translated nucleotide alignment\
  \ [0]\ncommon:                      \n --sub-mat TWIN                Substitution\
  \ matrix file [nucl:nucleotide.out,aa:blosum62.out]\n --max-seq-len INT        \
  \     Maximum sequence length [65535]\n --db-load-mode INT            Database preload\
  \ mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch [0]\n --threads INT           \
  \      Number of CPU-cores used (all by default) [2]\n --compressed INT        \
  \      Write compressed output [0]\n -v INT                        Verbosity level:\
  \ 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\n --mpi-runner STR          \
  \    Use MPI on compute cluster with this MPI command (e.g. \"mpirun -np 42\") []\n\
  \ --force-reuse BOOL            Reuse tmp filse in tmp/latest folder ignoring parameters\
  \ and version changes [0]\n --remove-tmp-files BOOL       Delete temporary files\
  \ [0]\nexpert:                      \n --create-lookup INT           Create database\
  \ lookup file (can be very large) [0]\n --chain-alignments INT        Chain overlapping\
  \ alignments [0]\n --merge-query INT             Combine ORFs/split sequences to\
  \ a single entry [1]\n\nreferences:\n - Steinegger M, Soding J: MMseqs2 enables\
  \ sensitive protein sequence searching for the analysis of massive data sets. Nature\
  \ Biotechnology, 35(11), 1026-1028 (2017)\n"
generated_using:
- --help
docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
