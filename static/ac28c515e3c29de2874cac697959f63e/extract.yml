!Command
command:
- extract
positional:
- !Positional
  description: ''
  position: 0
  name: sequence-file
  optional: false
- !Positional
  description: ''
  position: 1
  name: coords
  optional: false
named:
- !Flag
  description: ''
  synonyms:
  - '-2'
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Output each sequence as 2 fields (tag and sequence) on a single line
  synonyms:
  - --2_fields
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ''
  synonyms:
  - -d
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Use the 4th column of each input line to specify the direction\nof\
    \ the sequence.  Positive is forward, negative is reverse\nThe input sequence\
    \ is assumed to be circular"
  synonyms:
  - --dir
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Print this message
  synonyms:
  - --help
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ''
  synonyms:
  - -l
  args: !SimpleFlagArg
    name: n
  optional: true
- !Flag
  description: Don't output any sequence shorter than <n> characters
  synonyms:
  - --minlen
  args: !SimpleFlagArg
    name: n
  optional: true
- !Flag
  description: ''
  synonyms:
  - -s
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Omit the first 3 characters of each output string
  synonyms:
  - --nostart
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ''
  synonyms:
  - -t
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Omit the last 3 characters of each output string
  synonyms:
  - --nostop
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ''
  synonyms:
  - -w
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Use the actual input coordinates without any wraparound\nthat would\
    \ be needed by a circular genome.  Without this\noption, the output sequence is\
    \ the shorter of the two ways\naround the circle.  Use the -d option to specify\
    \ direction\nexplicitly.\n"
  synonyms:
  - --nowrap
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: ''
  synonyms:
  - -h
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "USAGE:  extract [options] <sequence-file> <coords>\n\nRead fasta-format\
  \ <sequence-file> and extract from it the\nsubsequences specified by <coords>. \
  \ By default, <coords>\nis the name of a file containing lines of the form\n  <tag>\
  \  <start>  <stop>  [<frame>] ...\nCoordinates are inclusive counting from 1, e.g.,\
  \ \"1 3\"\nrepresents the 1st 3 characters of the sequence.\nFor each line the corresponding\
  \ region of <sequence-file>\nis extracted and output (after reverse-complementing\
  \ if necessary)\nOutput goes to stdout in multi-fasta format, unless the -2 option\n\
  is specified\n\nOptions:\n -2\n --2_fields\n    Output each sequence as 2 fields\
  \ (tag and sequence) on a single line\n -d\n --dir\n    Use the 4th column of each\
  \ input line to specify the direction\n    of the sequence.  Positive is forward,\
  \ negative is reverse\n    The input sequence is assumed to be circular\n -h\n --help\n\
  \    Print this message\n -l <n>\n --minlen <n>\n    Don't output any sequence shorter\
  \ than <n> characters\n -s\n --nostart\n    Omit the first 3 characters of each\
  \ output string\n -t\n --nostop\n    Omit the last 3 characters of each output string\n\
  \ -w\n --nowrap\n    Use the actual input coordinates without any wraparound\n \
  \   that would be needed by a circular genome.  Without this\n    option, the output\
  \ sequence is the shorter of the two ways\n    around the circle.  Use the -d option\
  \ to specify direction\n    explicitly.\n\n"
generated_using:
- --help
