&id003 !Command
positional: []
named:
- !Flag
  description: FDR cutoff for filtering matches[0.0, 1.0] [0.050]
  synonyms:
  - --fdr
  args: !SimpleFlagArg
    name: FLOAT
  optional: true
- !Flag
  description: Write compressed output [0]
  synonyms:
  - --compressed
  args: !SimpleFlagArg
    name: INT
  optional: true
- !Flag
  description: Number of CPU-cores used (all by default) [8]
  synonyms:
  - --threads
  args: !SimpleFlagArg
    name: INT
  optional: true
- !Flag
  description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
  synonyms:
  - -v
  args: !SimpleFlagArg
    name: INT
  optional: true
command:
- spacepharer
- filtermatchbyfdr
parent: &id001 !Command
  positional: []
  named: []
  command:
  - spacepharer
  parent:
  subcommands:
  - !Command
    positional: []
    named:
    - !Flag
      description: Correct for locally biased amino acid composition (range 0-1) [1]
      synonyms:
      - --comp-bias-corr
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Artificially add entries of queries with themselves (for clustering)
        [0]
      synonyms:
      - --add-self-matches
      args: !SimpleFlagArg
        name: BOOL
      optional: true
    - !Flag
      description: Substitution matrix file for k-mer generation [nucl:nucleotide.out,aa:VTML80.out]
      synonyms:
      - --seed-sub-mat
      args: !SimpleFlagArg
        name: TWIN
      optional: true
    - !Flag
      description: 'Sensitivity: 1.0 faster; 4.0 fast; 7.5 sensitive [5.700]'
      synonyms:
      - -s
      args: !SimpleFlagArg
        name: FLOAT
      optional: true
    - !Flag
      description: 'k-mer length (0: automatically set to optimum) [6]'
      synonyms:
      - -k
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: k-mer threshold for generating similar k-mer lists [2147483647]
      synonyms:
      - --k-score
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Alphabet size (range 2-21) [nucl:5,aa:21]
      synonyms:
      - --alph-size
      args: !SimpleFlagArg
        name: TWIN
      optional: true
    - !Flag
      description: Maximum results per query sequence allowed to pass the prefilter
        (affects sensitivity) [300]
      synonyms:
      - --max-seqs
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: 'Split input into N equally distributed chunks. 0: set the best
        split automatically [0]'
      synonyms:
      - --split
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: '0: split target db; 1: split query db; 2: auto, depending on main
        memory [2]'
      synonyms:
      - --split-mode
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to
        all available system memory [0]
      synonyms:
      - --split-memory-limit
      args: !SimpleFlagArg
        name: BYTE
      optional: true
    - !Flag
      description: Use ungapped diagonal scoring during prefilter [1]
      synonyms:
      - --diag-score
      args: !SimpleFlagArg
        name: BOOL
      optional: true
    - !Flag
      description: Extract only exact k-mers for matching (range 0-1) [0]
      synonyms:
      - --exact-kmer-matching
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: 'Mask sequences in k-mer stage: 0: w/o low complexity masking,
        1: with low complexity masking [1]'
      synonyms:
      - --mask
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: 'Lowercase letters will be excluded from k-mer search 0: include
        region, 1: exclude region [0]'
      synonyms:
      - --mask-lower-case
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Accept only matches with ungapped alignment score above threshold
        [15]
      synonyms:
      - --min-ungapped-score
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: '0: use consecutive positions in k-mers; 1: use spaced k-mers [1]'
      synonyms:
      - --spaced-kmer-mode
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: User-specified spaced k-mer pattern [11011101]
      synonyms:
      - --spaced-kmer-pattern
      args: !SimpleFlagArg
        name: STR
      optional: true
    - !Flag
      description: Path where some of the temporary files will be created []
      synonyms:
      - --local-tmp
      args: !SimpleFlagArg
        name: STR
      optional: true
    - !Flag
      description: Set max disk space to use for reverse profile searches. E.g. 800B,
        5K, 10M, 1G. Default (0) to all available disk space in the temp folder [0]
      synonyms:
      - --disk-space-limit
      args: !SimpleFlagArg
        name: BYTE
      optional: true
    - !Flag
      description: Add backtrace string (convert to alignments with mmseqs convertalis
        module) [1]
      synonyms:
      - -a
      args: !SimpleFlagArg
        name: BOOL
      optional: true
    - !Flag
      description: 'How to compute the alignment: 0: automatic 1: only score and end_pos
        2: also start_pos and cov 3: also seq.id 4: only ungapped alignment [2]'
      synonyms:
      - --alignment-mode
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Double the (nucleotide) query sequence during the scoring process
        to allow wrapped diagonal scoring around end and start [0]
      synonyms:
      - --wrapped-scoring
      args: !SimpleFlagArg
        name: BOOL
      optional: true
    - !Flag
      description: List matches below this E-value (range 0.0-inf) [200.000]
      synonyms:
      - -e
      args: !SimpleFlagArg
        name: FLOAT
      optional: true
    - !Flag
      description: List matches above this sequence identity (for clustering) (range
        0.0-1.0) [0.000]
      synonyms:
      - --min-seq-id
      args: !SimpleFlagArg
        name: FLOAT
      optional: true
    - !Flag
      description: Minimum alignment length (range 0-INT_MAX) [0]
      synonyms:
      - --min-aln-len
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: '0: alignment length 1: shorter, 2: longer sequence [0]'
      synonyms:
      - --seq-id-mode
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Show up to this many alternative alignments [0]
      synonyms:
      - --alt-ali
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: List matches above this fraction of aligned (covered) residues
        (see --cov-mode) [0.000]
      synonyms:
      - -c
      args: !SimpleFlagArg
        name: FLOAT
      optional: true
    - !Flag
      description: '0: coverage of query and target 1: coverage of target 2: coverage
        of query 3: target seq. length has to be at least x% of query length 4: query
        seq. length has to be at least x% of target length 5: short seq. needs to
        be at least x% of the other seq. length [0]'
      synonyms:
      - --cov-mode
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Compute more conservative, shorter alignments (scores and E-values
        not changed) [0]
      synonyms:
      - --realign
      args: !SimpleFlagArg
        name: BOOL
      optional: true
    - !Flag
      description: Maximum rejected alignments before alignment calculation for a
        query is stopped [2147483647]
      synonyms:
      - --max-rejected
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Maximum accepted alignments before alignment calculation for a
        query is stopped [2147483647]
      synonyms:
      - --max-accept
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Score bias when computing SW alignment (in bits) [0.000]
      synonyms:
      - --score-bias
      args: !SimpleFlagArg
        name: FLOAT
      optional: true
    - !Flag
      description: Gap open cost [16]
      synonyms:
      - --gap-open
      args: !SimpleFlagArg
        name: TWIN
      optional: true
    - !Flag
      description: Gap extension cost [2]
      synonyms:
      - --gap-extend
      args: !SimpleFlagArg
        name: TWIN
      optional: true
    - !Flag
      description: Maximal allowed difference between score values before alignment
        is truncated  (nucleotide alignment only) [40]
      synonyms:
      - --zdrop
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Pseudo count admixture strength [1.000]
      synonyms:
      - --pca
      args: !SimpleFlagArg
        name: FLOAT
      optional: true
    - !Flag
      description: 'Pseudo counts: Neff at half of maximum admixture (range 0.0-inf)
        [1.500]'
      synonyms:
      - --pcb
      args: !SimpleFlagArg
        name: FLOAT
      optional: true
    - !Flag
      description: Mask query sequence of profile using tantan [0,1] [1]
      synonyms:
      - --mask-profile
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Include sequences matches with < e-value thr. into the profile
        (>=0.0) [0.001]
      synonyms:
      - --e-profile
      args: !SimpleFlagArg
        name: FLOAT
      optional: true
    - !Flag
      description: Use global sequence weighting for profile calculation [0]
      synonyms:
      - --wg
      args: !SimpleFlagArg
        name: BOOL
      optional: true
    - !Flag
      description: 'Filter msa: 0: do not filter, 1: filter [1]'
      synonyms:
      - --filter-msa
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Reduce redundancy of output MSA using max. pairwise sequence identity
        [0.0,1.0] [0.900]
      synonyms:
      - --max-seq-id
      args: !SimpleFlagArg
        name: FLOAT
      optional: true
    - !Flag
      description: Reduce diversity of output MSAs using min.seq. identity with query
        sequences [0.0,1.0] [0.000]
      synonyms:
      - --qid
      args: !SimpleFlagArg
        name: FLOAT
      optional: true
    - !Flag
      description: Reduce diversity of output MSAs using min. score per aligned residue
        with query sequences [-50.0,100.0] [-20.000]
      synonyms:
      - --qsc
      args: !SimpleFlagArg
        name: FLOAT
      optional: true
    - !Flag
      description: Filter output MSAs using min. fraction of query residues covered
        by matched sequences [0.0,1.0] [0.000]
      synonyms:
      - --cov
      args: !SimpleFlagArg
        name: FLOAT
      optional: true
    - !Flag
      description: Filter MSAs by selecting most diverse set of sequences, keeping
        at least this many seqs in each MSA block of length 50 [1000]
      synonyms:
      - --diff
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Number of iterative profile search iterations [1]
      synonyms:
      - --num-iterations
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: For bigger profile DB, run iteratively the search by greedily swapping
        the search results [0]
      synonyms:
      - --slice-search
      args: !SimpleFlagArg
        name: BOOL
      optional: true
    - !Flag
      description: 'Rescore diagonals with: 0: Hamming distance 1: local alignment
        (score only) 2: local alignment 3: global alignment 4: longest alignment fullfilling
        window quality criterion [0]'
      synonyms:
      - --rescore-mode
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Allow deletions in a MSA [0]
      synonyms:
      - --allow-deletion
      args: !SimpleFlagArg
        name: BOOL
      optional: true
    - !Flag
      description: Minimum codon number in open reading frames [9]
      synonyms:
      - --min-length
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Maximum codon number in open reading frames [32734]
      synonyms:
      - --max-length
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Maximum number of codons with gaps or unknown residues before an
        open reading frame is rejected [2147483647]
      synonyms:
      - --max-gaps
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: 'Contig start can be 0: incomplete, 1: complete, 2: both [2]'
      synonyms:
      - --contig-start-mode
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: 'Contig end can be 0: incomplete, 1: complete, 2: both [2]'
      synonyms:
      - --contig-end-mode
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: 'Orf fragment can be 0: from start to stop, 1: from any to stop,
        2: from last encountered start to stop (no start in the middle) [1]'
      synonyms:
      - --orf-start-mode
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Comma-seperated list of frames on the forward strand to be extracted
        [1,2,3]
      synonyms:
      - --forward-frames
      args: !SimpleFlagArg
        name: STR
      optional: true
    - !Flag
      description: Comma-seperated list of frames on the reverse strand to be extracted
        [1,2,3]
      synonyms:
      - --reverse-frames
      args: !SimpleFlagArg
        name: STR
      optional: true
    - !Flag
      description: 1) CANONICAL, 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4)
        MOLD_MITOCHONDRIAL, 5) INVERT_MITOCHONDRIAL, 6) CILIATE 9) FLATWORM_MITOCHONDRIAL,
        10) EUPLOTID, 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14)
        ALT_FLATWORM_MITOCHONDRIAL 15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL,
        21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL 23) THRAUSTOCHYTRIUM_MITOCHONDRIAL,
        24) PTEROBRANCHIA_MITOCHONDRIAL, 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27)
        KARYORELICT, 28) CONDYLOSTOMA 29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA
        [1]
      synonyms:
      - --translation-table
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Translate ORF to amino acid [0]
      synonyms:
      - --translate
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Use all alteratives for a start codon in the genetic table, if
        false - only ATG (AUG) [0]
      synonyms:
      - --use-all-table-starts
      args: !SimpleFlagArg
        name: BOOL
      optional: true
    - !Flag
      description: Numeric ids in index file are offset by this value [0]
      synonyms:
      - --id-offset
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Add stop codon '*' at complete start and end [0]
      synonyms:
      - --add-orf-stop
      args: !SimpleFlagArg
        name: BOOL
      optional: true
    - !Flag
      description: 'Search type 0: auto 1: amino acid, 2: translated, 3: nucleotide,
        4: translated nucleotide alignment [0]'
      synonyms:
      - --search-type
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Start sensitivity [4.000]
      synonyms:
      - --start-sens
      args: !SimpleFlagArg
        name: FLOAT
      optional: true
    - !Flag
      description: Number of search steps performed from --start-sens to -s [1]
      synonyms:
      - --sens-steps
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Update the p-value by a single best hit, or by best and second
        best hits [1]
      synonyms:
      - --simple-best-hit
      args: !SimpleFlagArg
        name: BOOL
      optional: true
    - !Flag
      description: Set alpha for combining p-values during aggregation [1.000]
      synonyms:
      - --alpha
      args: !SimpleFlagArg
        name: FLOAT
      optional: true
    - !Flag
      description: 'Combined P-values computed from 0: multi-hit, 1: minimum of all
        P-values, 2: product-of-P-values, 3: truncated product [3]'
      synonyms:
      - --aggregation-mode
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: FDR cutoff for filtering matches[0.0, 1.0] [0.050]
      synonyms:
      - --fdr
      args: !SimpleFlagArg
        name: FLOAT
      optional: true
    - !Flag
      description: '0: short (only matches); 1: long (matches and hits); 2: long with
        nucleotide alignment [1]'
      synonyms:
      - --fmt
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Report protospacer adjacent motifs up and downstream of hits [0,1]
        [1]
      synonyms:
      - --report-pam
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Substitution matrix file [nucl:nucleotide.out,aa:VTML40.out]
      synonyms:
      - --sub-mat
      args: !SimpleFlagArg
        name: TWIN
      optional: true
    - !Flag
      description: Maximum sequence length [65535]
      synonyms:
      - --max-seq-len
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: 'Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch
        [0]'
      synonyms:
      - --db-load-mode
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Number of CPU-cores used (all by default) [8]
      synonyms:
      - --threads
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Write compressed output [0]
      synonyms:
      - --compressed
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info
        [3]'
      synonyms:
      - -v
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Use MPI on compute cluster with this MPI command (e.g. "mpirun
        -np 42") []
      synonyms:
      - --mpi-runner
      args: !SimpleFlagArg
        name: STR
      optional: true
    - !Flag
      description: Reuse tmp filse in tmp/latest folder ignoring parameters and version
        changes [0]
      synonyms:
      - --force-reuse
      args: !SimpleFlagArg
        name: BOOL
      optional: true
    - !Flag
      description: Delete temporary files [0]
      synonyms:
      - --remove-tmp-files
      args: !SimpleFlagArg
        name: BOOL
      optional: true
    - !Flag
      description: Filter hits by seq.id. and coverage [0]
      synonyms:
      - --filter-hits
      args: !SimpleFlagArg
        name: BOOL
      optional: true
    - !Flag
      description: 'Sort results: 0: no sorting, 1: sort by E-value (Alignment) or
        seq.id. (Hamming) [0]'
      synonyms:
      - --sort-results
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Omit consensus sequence in alignment [0]
      synonyms:
      - --omit-consensus
      args: !SimpleFlagArg
        name: BOOL
      optional: true
    - !Flag
      description: Create database lookup file (can be very large) [0]
      synonyms:
      - --create-lookup
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Chain overlapping alignments [0]
      synonyms:
      - --chain-alignments
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Combine ORFs/split sequences to a single entry [1]
      synonyms:
      - --merge-query
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: 'Strand selection only works for DNA/DNA search 0: reverse, 1:
        forward, 2: both [1]'
      synonyms:
      - --strand
      args: !SimpleFlagArg
        name: INT
      optional: true
    command:
    - spacepharer
    - easy-predict
    parent: *id001
    subcommands: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "usage: spacepharer easy-predict <i:spacerFile1[.txt]> ... <i:spacerFileN[.txt]>\
      \ <i:targetDB> <o:output[.tsv]> <tmpDir> [options]\n By Ruoshi Zhang <ruoshi.zhang@mpibpc.mpg.de>\n\
      options: prefilter:                  \n --comp-bias-corr INT         Correct\
      \ for locally biased amino acid composition (range 0-1) [1]\n --add-self-matches\
      \ BOOL      Artificially add entries of queries with themselves (for clustering)\
      \ [0]\n --seed-sub-mat TWIN          Substitution matrix file for k-mer generation\
      \ [nucl:nucleotide.out,aa:VTML80.out]\n -s FLOAT                     Sensitivity:\
      \ 1.0 faster; 4.0 fast; 7.5 sensitive [5.700]\n -k INT                     \
      \  k-mer length (0: automatically set to optimum) [6]\n --k-score INT      \
      \          k-mer threshold for generating similar k-mer lists [2147483647]\n\
      \ --alph-size TWIN             Alphabet size (range 2-21) [nucl:5,aa:21]\n --max-seqs\
      \ INT               Maximum results per query sequence allowed to pass the prefilter\
      \ (affects sensitivity) [300]\n --split INT                  Split input into\
      \ N equally distributed chunks. 0: set the best split automatically [0]\n --split-mode\
      \ INT             0: split target db; 1: split query db; 2: auto, depending\
      \ on main memory [2]\n --split-memory-limit BYTE    Set max memory per split.\
      \ E.g. 800B, 5K, 10M, 1G. Default (0) to all available system memory [0]\n --diag-score\
      \ BOOL            Use ungapped diagonal scoring during prefilter [1]\n --exact-kmer-matching\
      \ INT    Extract only exact k-mers for matching (range 0-1) [0]\n --mask INT\
      \                   Mask sequences in k-mer stage: 0: w/o low complexity masking,\
      \ 1: with low complexity masking [1]\n --mask-lower-case INT        Lowercase\
      \ letters will be excluded from k-mer search 0: include region, 1: exclude region\
      \ [0]\n --min-ungapped-score INT     Accept only matches with ungapped alignment\
      \ score above threshold [15]\n --spaced-kmer-mode INT       0: use consecutive\
      \ positions in k-mers; 1: use spaced k-mers [1]\n --spaced-kmer-pattern STR\
      \    User-specified spaced k-mer pattern [11011101]\n --local-tmp STR      \
      \        Path where some of the temporary files will be created []\n --disk-space-limit\
      \ BYTE      Set max disk space to use for reverse profile searches. E.g. 800B,\
      \ 5K, 10M, 1G. Default (0) to all available disk space in the temp folder [0]\n\
      align:                      \n -a BOOL                      Add backtrace string\
      \ (convert to alignments with mmseqs convertalis module) [1]\n --alignment-mode\
      \ INT         How to compute the alignment:\n                              0:\
      \ automatic\n                              1: only score and end_pos\n     \
      \                         2: also start_pos and cov\n                      \
      \        3: also seq.id\n                              4: only ungapped alignment\
      \ [2]\n --wrapped-scoring BOOL       Double the (nucleotide) query sequence\
      \ during the scoring process to allow wrapped diagonal scoring around end and\
      \ start [0]\n -e FLOAT                     List matches below this E-value (range\
      \ 0.0-inf) [200.000]\n --min-seq-id FLOAT           List matches above this\
      \ sequence identity (for clustering) (range 0.0-1.0) [0.000]\n --min-aln-len\
      \ INT            Minimum alignment length (range 0-INT_MAX) [0]\n --seq-id-mode\
      \ INT            0: alignment length 1: shorter, 2: longer sequence [0]\n --alt-ali\
      \ INT                Show up to this many alternative alignments [0]\n -c FLOAT\
      \                     List matches above this fraction of aligned (covered)\
      \ residues (see --cov-mode) [0.000]\n --cov-mode INT               0: coverage\
      \ of query and target\n                              1: coverage of target\n\
      \                              2: coverage of query\n                      \
      \        3: target seq. length has to be at least x% of query length\n     \
      \                         4: query seq. length has to be at least x% of target\
      \ length\n                              5: short seq. needs to be at least x%\
      \ of the other seq. length [0]\n --realign BOOL               Compute more conservative,\
      \ shorter alignments (scores and E-values not changed) [0]\n --max-rejected\
      \ INT           Maximum rejected alignments before alignment calculation for\
      \ a query is stopped [2147483647]\n --max-accept INT             Maximum accepted\
      \ alignments before alignment calculation for a query is stopped [2147483647]\n\
      \ --score-bias FLOAT           Score bias when computing SW alignment (in bits)\
      \ [0.000]\n --gap-open TWIN              Gap open cost [16]\n --gap-extend TWIN\
      \            Gap extension cost [2]\n --zdrop INT                  Maximal allowed\
      \ difference between score values before alignment is truncated  (nucleotide\
      \ alignment only) [40]\nprofile:                    \n --pca FLOAT         \
      \         Pseudo count admixture strength [1.000]\n --pcb FLOAT            \
      \      Pseudo counts: Neff at half of maximum admixture (range 0.0-inf) [1.500]\n\
      \ --mask-profile INT           Mask query sequence of profile using tantan [0,1]\
      \ [1]\n --e-profile FLOAT            Include sequences matches with < e-value\
      \ thr. into the profile (>=0.0) [0.001]\n --wg BOOL                    Use global\
      \ sequence weighting for profile calculation [0]\n --filter-msa INT        \
      \     Filter msa: 0: do not filter, 1: filter [1]\n --max-seq-id FLOAT     \
      \      Reduce redundancy of output MSA using max. pairwise sequence identity\
      \ [0.0,1.0] [0.900]\n --qid FLOAT                  Reduce diversity of output\
      \ MSAs using min.seq. identity with query sequences [0.0,1.0] [0.000]\n --qsc\
      \ FLOAT                  Reduce diversity of output MSAs using min. score per\
      \ aligned residue with query sequences [-50.0,100.0] [-20.000]\n --cov FLOAT\
      \                  Filter output MSAs using min. fraction of query residues\
      \ covered by matched sequences [0.0,1.0] [0.000]\n --diff INT              \
      \     Filter MSAs by selecting most diverse set of sequences, keeping at least\
      \ this many seqs in each MSA block of length 50 [1000]\n --num-iterations INT\
      \         Number of iterative profile search iterations [1]\n --slice-search\
      \ BOOL          For bigger profile DB, run iteratively the search by greedily\
      \ swapping the search results [0]\nmisc:                       \n --rescore-mode\
      \ INT           Rescore diagonals with:\n                              0: Hamming\
      \ distance\n                              1: local alignment (score only)\n\
      \                              2: local alignment\n                        \
      \      3: global alignment\n                              4: longest alignment\
      \ fullfilling window quality criterion [0]\n --allow-deletion BOOL        Allow\
      \ deletions in a MSA [0]\n --min-length INT             Minimum codon number\
      \ in open reading frames [9]\n --max-length INT             Maximum codon number\
      \ in open reading frames [32734]\n --max-gaps INT               Maximum number\
      \ of codons with gaps or unknown residues before an open reading frame is rejected\
      \ [2147483647]\n --contig-start-mode INT      Contig start can be 0: incomplete,\
      \ 1: complete, 2: both [2]\n --contig-end-mode INT        Contig end can be\
      \ 0: incomplete, 1: complete, 2: both [2]\n --orf-start-mode INT         Orf\
      \ fragment can be 0: from start to stop, 1: from any to stop, 2: from last encountered\
      \ start to stop (no start in the middle) [1]\n --forward-frames STR        \
      \ Comma-seperated list of frames on the forward strand to be extracted [1,2,3]\n\
      \ --reverse-frames STR         Comma-seperated list of frames on the reverse\
      \ strand to be extracted [1,2,3]\n --translation-table INT      1) CANONICAL,\
      \ 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4) MOLD_MITOCHONDRIAL, 5) INVERT_MITOCHONDRIAL,\
      \ 6) CILIATE\n                              9) FLATWORM_MITOCHONDRIAL, 10) EUPLOTID,\
      \ 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14) ALT_FLATWORM_MITOCHONDRIAL\n\
      \                              15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL,\
      \ 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL\n             \
      \                 23) THRAUSTOCHYTRIUM_MITOCHONDRIAL, 24) PTEROBRANCHIA_MITOCHONDRIAL,\
      \ 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27) KARYORELICT, 28) CONDYLOSTOMA\n \
      \                              29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA\
      \ [1]\n --translate INT              Translate ORF to amino acid [0]\n --use-all-table-starts\
      \ BOOL  Use all alteratives for a start codon in the genetic table, if false\
      \ - only ATG (AUG) [0]\n --id-offset INT              Numeric ids in index file\
      \ are offset by this value [0]\n --add-orf-stop BOOL          Add stop codon\
      \ '*' at complete start and end [0]\n --search-type INT            Search type\
      \ 0: auto 1: amino acid, 2: translated, 3: nucleotide, 4: translated nucleotide\
      \ alignment [0]\n --start-sens FLOAT           Start sensitivity [4.000]\n --sens-steps\
      \ INT             Number of search steps performed from --start-sens to -s [1]\n\
      \ --simple-best-hit BOOL       Update the p-value by a single best hit, or by\
      \ best and second best hits [1]\n --alpha FLOAT                Set alpha for\
      \ combining p-values during aggregation [1.000]\n --aggregation-mode INT   \
      \    Combined P-values computed from 0: multi-hit, 1: minimum of all P-values,\
      \ 2: product-of-P-values, 3: truncated product [3]\n --fdr FLOAT           \
      \       FDR cutoff for filtering matches[0.0, 1.0] [0.050]\n --fmt INT     \
      \               0: short (only matches); 1: long (matches and hits); 2: long\
      \ with nucleotide alignment [1]\n --report-pam INT             Report protospacer\
      \ adjacent motifs up and downstream of hits [0,1] [1]\ncommon:             \
      \        \n --sub-mat TWIN               Substitution matrix file [nucl:nucleotide.out,aa:VTML40.out]\n\
      \ --max-seq-len INT            Maximum sequence length [65535]\n --db-load-mode\
      \ INT           Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch\
      \ [0]\n --threads INT                Number of CPU-cores used (all by default)\
      \ [8]\n --compressed INT             Write compressed output [0]\n -v INT  \
      \                     Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3:\
      \ +info [3]\n --mpi-runner STR             Use MPI on compute cluster with this\
      \ MPI command (e.g. \"mpirun -np 42\") []\n --force-reuse BOOL           Reuse\
      \ tmp filse in tmp/latest folder ignoring parameters and version changes [0]\n\
      \ --remove-tmp-files BOOL      Delete temporary files [0]\nexpert:         \
      \            \n --filter-hits BOOL           Filter hits by seq.id. and coverage\
      \ [0]\n --sort-results INT           Sort results: 0: no sorting, 1: sort by\
      \ E-value (Alignment) or seq.id. (Hamming) [0]\n --omit-consensus BOOL     \
      \   Omit consensus sequence in alignment [0]\n --create-lookup INT         \
      \ Create database lookup file (can be very large) [0]\n --chain-alignments INT\
      \       Chain overlapping alignments [0]\n --merge-query INT            Combine\
      \ ORFs/split sequences to a single entry [1]\n --strand INT                \
      \ Strand selection only works for DNA/DNA search 0: reverse, 1: forward, 2:\
      \ both [1]\n\nreferences:\n - Zhang R, Mirdita M, Levy Karin E, Norroy C, Galiez\
      \ C, and Soding J: SpacePHARER: Sensitive identification of phages from CRISPR\
      \ spacers in prokaryotic hosts. (2020)\n"
    generated_using: &id002
    - --help
  - !Command
    positional: []
    named:
    - !Flag
      description: Number of CPU-cores used (all by default) [8]
      synonyms:
      - --threads
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Write compressed output [0]
      synonyms:
      - --compressed
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info
        [3]'
      synonyms:
      - -v
      args: !SimpleFlagArg
        name: INT
      optional: true
    command:
    - spacepharer
    - parsespacer
    parent: *id001
    subcommands: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "usage: spacepharer parsespacer <i:spacerFile1[.txt]> ... <i:spacerFileN[.txt]>\
      \ <o:spacerDB> [options]\n By Ruoshi Zhang <ruoshi.zhang@mpibpc.mpg.de>\noptions:\
      \ common:           \n --threads INT      Number of CPU-cores used (all by default)\
      \ [8]\n --compressed INT   Write compressed output [0]\n -v INT            \
      \ Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\n\nreferences:\n\
      \ - Zhang R, Mirdita M, Levy Karin E, Norroy C, Galiez C, and Soding J: SpacePHARER:\
      \ Sensitive identification of phages from CRISPR spacers in prokaryotic hosts.\
      \ (2020)\n"
    generated_using: *id002
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: name/downloadFile
      optional: false
    named:
    - !Flag
      description: Create additional setDB with reversed fragments to compute under
        null [0,1] [1]
      synonyms:
      - --reverse-setdb
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info
        [3]'
      synonyms:
      - -v
      args: !SimpleFlagArg
        name: INT
      optional: true
    command:
    - spacepharer
    - downloadgenome
    parent: *id001
    subcommands: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "usage: spacepharer downloadgenome <name/downloadFile> <o:sequenceDB>\
      \ <tmpDir> [options]\n By Ruoshi Zhang <ruoshi.zhang@mpibpc.mpg.de>\n\n  Name\
      \                  \n- GenBank_phage_2018_09 \n  GenBank phage genomes from\
      \ September 2018\n  Cite: NCBI Resource Coordinators: Database resources of\
      \ the National Center for Biotechnology Information. Nucleic Acids Res 46(D1),\
      \ D8-D13 (2018)\n- GenBank_eukvir_2018_09\n  GenBank eukaryotic viral genomes\
      \ from September 2018\n  Cite: NCBI Resource Coordinators: Database resources\
      \ of the National Center for Biotechnology Information. Nucleic Acids Res 46(D1),\
      \ D8-D13 (2018)\n\noptions:                      \n --reverse-setdb INT   Create\
      \ additional setDB with reversed fragments to compute under null [0,1] [1]\n\
      \                     \n -v INT                Verbosity level: 0: quiet, 1:\
      \ +errors, 2: +warnings, 3: +info [3]\n\nreferences:\n - Zhang R, Mirdita M,\
      \ Levy Karin E, Norroy C, Galiez C, and Soding J: SpacePHARER: Sensitive identification\
      \ of phages from CRISPR spacers in prokaryotic hosts. (2020)\n"
    generated_using: *id002
  - !Command
    positional: []
    named:
    - !Flag
      description: 'Database type 0: auto, 1: amino acid 2: nucleotides [0]'
      synonyms:
      - --dbtype
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Shuffle input database [1]
      synonyms:
      - --shuffle
      args: !SimpleFlagArg
        name: BOOL
      optional: true
    - !Flag
      description: 'Createdb mode 0: copy data, 1: soft link data and write new index
        (works only with single line fasta/q) [0]'
      synonyms:
      - --createdb-mode
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Numeric ids in index file are offset by this value [0]
      synonyms:
      - --id-offset
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: 1) CANONICAL, 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4)
        MOLD_MITOCHONDRIAL, 5) INVERT_MITOCHONDRIAL, 6) CILIATE 9) FLATWORM_MITOCHONDRIAL,
        10) EUPLOTID, 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14)
        ALT_FLATWORM_MITOCHONDRIAL 15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL,
        21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL 23) THRAUSTOCHYTRIUM_MITOCHONDRIAL,
        24) PTEROBRANCHIA_MITOCHONDRIAL, 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27)
        KARYORELICT, 28) CONDYLOSTOMA 29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA
        [1]
      synonyms:
      - --translation-table
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Add stop codon '*' at complete start and end [0]
      synonyms:
      - --add-orf-stop
      args: !SimpleFlagArg
        name: BOOL
      optional: true
    - !Flag
      description: 'One of: linecount, mean, doolittle, charges, seqlen, firstline
        []'
      synonyms:
      - --stat
      args: !SimpleFlagArg
        name: STR
      optional: true
    - !Flag
      description: Return output in TSV format [0]
      synonyms:
      - --tsv
      args: !SimpleFlagArg
        name: BOOL
      optional: true
    - !Flag
      description: Reverse AA fragments to compute under null [0,1] [0]
      synonyms:
      - --reverse-fragments
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: change parameter settings for extractorfs when createsetdb for
        spacer db [0,1] [0]
      synonyms:
      - --extractorf-spacer
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Write compressed output [0]
      synonyms:
      - --compressed
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info
        [3]'
      synonyms:
      - -v
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Number of CPU-cores used (all by default) [8]
      synonyms:
      - --threads
      args: !SimpleFlagArg
        name: INT
      optional: true
    command:
    - spacepharer
    - createsetdb
    parent: *id001
    subcommands: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "usage: spacepharer createsetdb <i:fastaFile1[.gz]> ... <i:fastaFileN[.gz]>|<i:DB>\
      \ <o:setDB> <tmpDir> [options]\n By Ruoshi Zhang <ruoshi.zhang@mpibpc.mpg.de>\n\
      options: misc:                    \n --dbtype INT              Database type\
      \ 0: auto, 1: amino acid 2: nucleotides [0]\n --shuffle BOOL            Shuffle\
      \ input database [1]\n --createdb-mode INT       Createdb mode 0: copy data,\
      \ 1: soft link data and write new index (works only with single line fasta/q)\
      \ [0]\n --id-offset INT           Numeric ids in index file are offset by this\
      \ value [0]\n --translation-table INT   1) CANONICAL, 2) VERT_MITOCHONDRIAL,\
      \ 3) YEAST_MITOCHONDRIAL, 4) MOLD_MITOCHONDRIAL, 5) INVERT_MITOCHONDRIAL, 6)\
      \ CILIATE\n                           9) FLATWORM_MITOCHONDRIAL, 10) EUPLOTID,\
      \ 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14) ALT_FLATWORM_MITOCHONDRIAL\n\
      \                           15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL,\
      \ 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL\n             \
      \              23) THRAUSTOCHYTRIUM_MITOCHONDRIAL, 24) PTEROBRANCHIA_MITOCHONDRIAL,\
      \ 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27) KARYORELICT, 28) CONDYLOSTOMA\n \
      \                           29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA\
      \ [1]\n --add-orf-stop BOOL       Add stop codon '*' at complete start and end\
      \ [0]\n --stat STR                One of: linecount, mean, doolittle, charges,\
      \ seqlen, firstline []\n --tsv BOOL                Return output in TSV format\
      \ [0]\n --reverse-fragments INT   Reverse AA fragments to compute under null\
      \ [0,1] [0]\n --extractorf-spacer INT   change parameter settings for extractorfs\
      \ when createsetdb for spacer db [0,1] [0]\ncommon:                  \n --compressed\
      \ INT          Write compressed output [0]\n -v INT                    Verbosity\
      \ level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\n --threads INT  \
      \           Number of CPU-cores used (all by default) [8]\n\nreferences:\n -\
      \ Zhang R, Mirdita M, Levy Karin E, Norroy C, Galiez C, and Soding J: SpacePHARER:\
      \ Sensitive identification of phages from CRISPR spacers in prokaryotic hosts.\
      \ (2020)\n"
    generated_using: *id002
  - !Command
    positional: []
    named:
    - !Flag
      description: Correct for locally biased amino acid composition (range 0-1) [1]
      synonyms:
      - --comp-bias-corr
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Artificially add entries of queries with themselves (for clustering)
        [0]
      synonyms:
      - --add-self-matches
      args: !SimpleFlagArg
        name: BOOL
      optional: true
    - !Flag
      description: Substitution matrix file for k-mer generation [nucl:nucleotide.out,aa:VTML80.out]
      synonyms:
      - --seed-sub-mat
      args: !SimpleFlagArg
        name: TWIN
      optional: true
    - !Flag
      description: 'Sensitivity: 1.0 faster; 4.0 fast; 7.5 sensitive [5.700]'
      synonyms:
      - -s
      args: !SimpleFlagArg
        name: FLOAT
      optional: true
    - !Flag
      description: 'k-mer length (0: automatically set to optimum) [6]'
      synonyms:
      - -k
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: k-mer threshold for generating similar k-mer lists [2147483647]
      synonyms:
      - --k-score
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Alphabet size (range 2-21) [nucl:5,aa:21]
      synonyms:
      - --alph-size
      args: !SimpleFlagArg
        name: TWIN
      optional: true
    - !Flag
      description: Maximum results per query sequence allowed to pass the prefilter
        (affects sensitivity) [300]
      synonyms:
      - --max-seqs
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: 'Split input into N equally distributed chunks. 0: set the best
        split automatically [0]'
      synonyms:
      - --split
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: '0: split target db; 1: split query db; 2: auto, depending on main
        memory [2]'
      synonyms:
      - --split-mode
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to
        all available system memory [0]
      synonyms:
      - --split-memory-limit
      args: !SimpleFlagArg
        name: BYTE
      optional: true
    - !Flag
      description: Use ungapped diagonal scoring during prefilter [1]
      synonyms:
      - --diag-score
      args: !SimpleFlagArg
        name: BOOL
      optional: true
    - !Flag
      description: Extract only exact k-mers for matching (range 0-1) [0]
      synonyms:
      - --exact-kmer-matching
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: 'Mask sequences in k-mer stage: 0: w/o low complexity masking,
        1: with low complexity masking [1]'
      synonyms:
      - --mask
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: 'Lowercase letters will be excluded from k-mer search 0: include
        region, 1: exclude region [0]'
      synonyms:
      - --mask-lower-case
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Accept only matches with ungapped alignment score above threshold
        [15]
      synonyms:
      - --min-ungapped-score
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: '0: use consecutive positions in k-mers; 1: use spaced k-mers [1]'
      synonyms:
      - --spaced-kmer-mode
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: User-specified spaced k-mer pattern [11011101]
      synonyms:
      - --spaced-kmer-pattern
      args: !SimpleFlagArg
        name: STR
      optional: true
    - !Flag
      description: Path where some of the temporary files will be created []
      synonyms:
      - --local-tmp
      args: !SimpleFlagArg
        name: STR
      optional: true
    - !Flag
      description: Set max disk space to use for reverse profile searches. E.g. 800B,
        5K, 10M, 1G. Default (0) to all available disk space in the temp folder [0]
      synonyms:
      - --disk-space-limit
      args: !SimpleFlagArg
        name: BYTE
      optional: true
    - !Flag
      description: Add backtrace string (convert to alignments with mmseqs convertalis
        module) [1]
      synonyms:
      - -a
      args: !SimpleFlagArg
        name: BOOL
      optional: true
    - !Flag
      description: 'How to compute the alignment: 0: automatic 1: only score and end_pos
        2: also start_pos and cov 3: also seq.id 4: only ungapped alignment [2]'
      synonyms:
      - --alignment-mode
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Double the (nucleotide) query sequence during the scoring process
        to allow wrapped diagonal scoring around end and start [0]
      synonyms:
      - --wrapped-scoring
      args: !SimpleFlagArg
        name: BOOL
      optional: true
    - !Flag
      description: List matches below this E-value (range 0.0-inf) [200.000]
      synonyms:
      - -e
      args: !SimpleFlagArg
        name: FLOAT
      optional: true
    - !Flag
      description: List matches above this sequence identity (for clustering) (range
        0.0-1.0) [0.000]
      synonyms:
      - --min-seq-id
      args: !SimpleFlagArg
        name: FLOAT
      optional: true
    - !Flag
      description: Minimum alignment length (range 0-INT_MAX) [0]
      synonyms:
      - --min-aln-len
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: '0: alignment length 1: shorter, 2: longer sequence [0]'
      synonyms:
      - --seq-id-mode
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Show up to this many alternative alignments [0]
      synonyms:
      - --alt-ali
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: List matches above this fraction of aligned (covered) residues
        (see --cov-mode) [0.000]
      synonyms:
      - -c
      args: !SimpleFlagArg
        name: FLOAT
      optional: true
    - !Flag
      description: '0: coverage of query and target 1: coverage of target 2: coverage
        of query 3: target seq. length has to be at least x% of query length 4: query
        seq. length has to be at least x% of target length 5: short seq. needs to
        be at least x% of the other seq. length [0]'
      synonyms:
      - --cov-mode
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Compute more conservative, shorter alignments (scores and E-values
        not changed) [0]
      synonyms:
      - --realign
      args: !SimpleFlagArg
        name: BOOL
      optional: true
    - !Flag
      description: Maximum rejected alignments before alignment calculation for a
        query is stopped [2147483647]
      synonyms:
      - --max-rejected
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Maximum accepted alignments before alignment calculation for a
        query is stopped [2147483647]
      synonyms:
      - --max-accept
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Score bias when computing SW alignment (in bits) [0.000]
      synonyms:
      - --score-bias
      args: !SimpleFlagArg
        name: FLOAT
      optional: true
    - !Flag
      description: Gap open cost [16]
      synonyms:
      - --gap-open
      args: !SimpleFlagArg
        name: TWIN
      optional: true
    - !Flag
      description: Gap extension cost [2]
      synonyms:
      - --gap-extend
      args: !SimpleFlagArg
        name: TWIN
      optional: true
    - !Flag
      description: Maximal allowed difference between score values before alignment
        is truncated  (nucleotide alignment only) [40]
      synonyms:
      - --zdrop
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Pseudo count admixture strength [1.000]
      synonyms:
      - --pca
      args: !SimpleFlagArg
        name: FLOAT
      optional: true
    - !Flag
      description: 'Pseudo counts: Neff at half of maximum admixture (range 0.0-inf)
        [1.500]'
      synonyms:
      - --pcb
      args: !SimpleFlagArg
        name: FLOAT
      optional: true
    - !Flag
      description: Mask query sequence of profile using tantan [0,1] [1]
      synonyms:
      - --mask-profile
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Include sequences matches with < e-value thr. into the profile
        (>=0.0) [0.001]
      synonyms:
      - --e-profile
      args: !SimpleFlagArg
        name: FLOAT
      optional: true
    - !Flag
      description: Use global sequence weighting for profile calculation [0]
      synonyms:
      - --wg
      args: !SimpleFlagArg
        name: BOOL
      optional: true
    - !Flag
      description: 'Filter msa: 0: do not filter, 1: filter [1]'
      synonyms:
      - --filter-msa
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Reduce redundancy of output MSA using max. pairwise sequence identity
        [0.0,1.0] [0.900]
      synonyms:
      - --max-seq-id
      args: !SimpleFlagArg
        name: FLOAT
      optional: true
    - !Flag
      description: Reduce diversity of output MSAs using min.seq. identity with query
        sequences [0.0,1.0] [0.000]
      synonyms:
      - --qid
      args: !SimpleFlagArg
        name: FLOAT
      optional: true
    - !Flag
      description: Reduce diversity of output MSAs using min. score per aligned residue
        with query sequences [-50.0,100.0] [-20.000]
      synonyms:
      - --qsc
      args: !SimpleFlagArg
        name: FLOAT
      optional: true
    - !Flag
      description: Filter output MSAs using min. fraction of query residues covered
        by matched sequences [0.0,1.0] [0.000]
      synonyms:
      - --cov
      args: !SimpleFlagArg
        name: FLOAT
      optional: true
    - !Flag
      description: Filter MSAs by selecting most diverse set of sequences, keeping
        at least this many seqs in each MSA block of length 50 [1000]
      synonyms:
      - --diff
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Number of iterative profile search iterations [1]
      synonyms:
      - --num-iterations
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: For bigger profile DB, run iteratively the search by greedily swapping
        the search results [0]
      synonyms:
      - --slice-search
      args: !SimpleFlagArg
        name: BOOL
      optional: true
    - !Flag
      description: 'Rescore diagonals with: 0: Hamming distance 1: local alignment
        (score only) 2: local alignment 3: global alignment 4: longest alignment fullfilling
        window quality criterion [0]'
      synonyms:
      - --rescore-mode
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Allow deletions in a MSA [0]
      synonyms:
      - --allow-deletion
      args: !SimpleFlagArg
        name: BOOL
      optional: true
    - !Flag
      description: Minimum codon number in open reading frames [9]
      synonyms:
      - --min-length
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Maximum codon number in open reading frames [32734]
      synonyms:
      - --max-length
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Maximum number of codons with gaps or unknown residues before an
        open reading frame is rejected [2147483647]
      synonyms:
      - --max-gaps
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: 'Contig start can be 0: incomplete, 1: complete, 2: both [2]'
      synonyms:
      - --contig-start-mode
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: 'Contig end can be 0: incomplete, 1: complete, 2: both [2]'
      synonyms:
      - --contig-end-mode
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: 'Orf fragment can be 0: from start to stop, 1: from any to stop,
        2: from last encountered start to stop (no start in the middle) [1]'
      synonyms:
      - --orf-start-mode
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Comma-seperated list of frames on the forward strand to be extracted
        [1,2,3]
      synonyms:
      - --forward-frames
      args: !SimpleFlagArg
        name: STR
      optional: true
    - !Flag
      description: Comma-seperated list of frames on the reverse strand to be extracted
        [1,2,3]
      synonyms:
      - --reverse-frames
      args: !SimpleFlagArg
        name: STR
      optional: true
    - !Flag
      description: 1) CANONICAL, 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4)
        MOLD_MITOCHONDRIAL, 5) INVERT_MITOCHONDRIAL, 6) CILIATE 9) FLATWORM_MITOCHONDRIAL,
        10) EUPLOTID, 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14)
        ALT_FLATWORM_MITOCHONDRIAL 15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL,
        21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL 23) THRAUSTOCHYTRIUM_MITOCHONDRIAL,
        24) PTEROBRANCHIA_MITOCHONDRIAL, 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27)
        KARYORELICT, 28) CONDYLOSTOMA 29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA
        [1]
      synonyms:
      - --translation-table
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Translate ORF to amino acid [0]
      synonyms:
      - --translate
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Use all alteratives for a start codon in the genetic table, if
        false - only ATG (AUG) [0]
      synonyms:
      - --use-all-table-starts
      args: !SimpleFlagArg
        name: BOOL
      optional: true
    - !Flag
      description: Numeric ids in index file are offset by this value [0]
      synonyms:
      - --id-offset
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Add stop codon '*' at complete start and end [0]
      synonyms:
      - --add-orf-stop
      args: !SimpleFlagArg
        name: BOOL
      optional: true
    - !Flag
      description: 'Search type 0: auto 1: amino acid, 2: translated, 3: nucleotide,
        4: translated nucleotide alignment [0]'
      synonyms:
      - --search-type
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Start sensitivity [4.000]
      synonyms:
      - --start-sens
      args: !SimpleFlagArg
        name: FLOAT
      optional: true
    - !Flag
      description: Number of search steps performed from --start-sens to -s [1]
      synonyms:
      - --sens-steps
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Update the p-value by a single best hit, or by best and second
        best hits [1]
      synonyms:
      - --simple-best-hit
      args: !SimpleFlagArg
        name: BOOL
      optional: true
    - !Flag
      description: Set alpha for combining p-values during aggregation [1.000]
      synonyms:
      - --alpha
      args: !SimpleFlagArg
        name: FLOAT
      optional: true
    - !Flag
      description: 'Combined P-values computed from 0: multi-hit, 1: minimum of all
        P-values, 2: product-of-P-values, 3: truncated product [3]'
      synonyms:
      - --aggregation-mode
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: FDR cutoff for filtering matches[0.0, 1.0] [0.050]
      synonyms:
      - --fdr
      args: !SimpleFlagArg
        name: FLOAT
      optional: true
    - !Flag
      description: '0: short (only matches); 1: long (matches and hits); 2: long with
        nucleotide alignment [1]'
      synonyms:
      - --fmt
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Report protospacer adjacent motifs up and downstream of hits [0,1]
        [1]
      synonyms:
      - --report-pam
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Substitution matrix file [nucl:nucleotide.out,aa:VTML40.out]
      synonyms:
      - --sub-mat
      args: !SimpleFlagArg
        name: TWIN
      optional: true
    - !Flag
      description: Maximum sequence length [65535]
      synonyms:
      - --max-seq-len
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: 'Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch
        [0]'
      synonyms:
      - --db-load-mode
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Number of CPU-cores used (all by default) [8]
      synonyms:
      - --threads
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Write compressed output [0]
      synonyms:
      - --compressed
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info
        [3]'
      synonyms:
      - -v
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Use MPI on compute cluster with this MPI command (e.g. "mpirun
        -np 42") []
      synonyms:
      - --mpi-runner
      args: !SimpleFlagArg
        name: STR
      optional: true
    - !Flag
      description: Reuse tmp filse in tmp/latest folder ignoring parameters and version
        changes [0]
      synonyms:
      - --force-reuse
      args: !SimpleFlagArg
        name: BOOL
      optional: true
    - !Flag
      description: Delete temporary files [0]
      synonyms:
      - --remove-tmp-files
      args: !SimpleFlagArg
        name: BOOL
      optional: true
    - !Flag
      description: Filter hits by seq.id. and coverage [0]
      synonyms:
      - --filter-hits
      args: !SimpleFlagArg
        name: BOOL
      optional: true
    - !Flag
      description: 'Sort results: 0: no sorting, 1: sort by E-value (Alignment) or
        seq.id. (Hamming) [0]'
      synonyms:
      - --sort-results
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Omit consensus sequence in alignment [0]
      synonyms:
      - --omit-consensus
      args: !SimpleFlagArg
        name: BOOL
      optional: true
    - !Flag
      description: Create database lookup file (can be very large) [0]
      synonyms:
      - --create-lookup
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Chain overlapping alignments [0]
      synonyms:
      - --chain-alignments
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Combine ORFs/split sequences to a single entry [1]
      synonyms:
      - --merge-query
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: 'Strand selection only works for DNA/DNA search 0: reverse, 1:
        forward, 2: both [1]'
      synonyms:
      - --strand
      args: !SimpleFlagArg
        name: INT
      optional: true
    command:
    - spacepharer
    - predictmatch
    parent: *id001
    subcommands: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "usage: spacepharer predictmatch <i:queryDB> <i:targetDB> <i:controltargetDB>\
      \ <o:output[.tsv]> <tmpDir> [options]\n By Ruoshi Zhang <ruoshi.zhang@mpibpc.mpg.de>\n\
      options: prefilter:                  \n --comp-bias-corr INT         Correct\
      \ for locally biased amino acid composition (range 0-1) [1]\n --add-self-matches\
      \ BOOL      Artificially add entries of queries with themselves (for clustering)\
      \ [0]\n --seed-sub-mat TWIN          Substitution matrix file for k-mer generation\
      \ [nucl:nucleotide.out,aa:VTML80.out]\n -s FLOAT                     Sensitivity:\
      \ 1.0 faster; 4.0 fast; 7.5 sensitive [5.700]\n -k INT                     \
      \  k-mer length (0: automatically set to optimum) [6]\n --k-score INT      \
      \          k-mer threshold for generating similar k-mer lists [2147483647]\n\
      \ --alph-size TWIN             Alphabet size (range 2-21) [nucl:5,aa:21]\n --max-seqs\
      \ INT               Maximum results per query sequence allowed to pass the prefilter\
      \ (affects sensitivity) [300]\n --split INT                  Split input into\
      \ N equally distributed chunks. 0: set the best split automatically [0]\n --split-mode\
      \ INT             0: split target db; 1: split query db; 2: auto, depending\
      \ on main memory [2]\n --split-memory-limit BYTE    Set max memory per split.\
      \ E.g. 800B, 5K, 10M, 1G. Default (0) to all available system memory [0]\n --diag-score\
      \ BOOL            Use ungapped diagonal scoring during prefilter [1]\n --exact-kmer-matching\
      \ INT    Extract only exact k-mers for matching (range 0-1) [0]\n --mask INT\
      \                   Mask sequences in k-mer stage: 0: w/o low complexity masking,\
      \ 1: with low complexity masking [1]\n --mask-lower-case INT        Lowercase\
      \ letters will be excluded from k-mer search 0: include region, 1: exclude region\
      \ [0]\n --min-ungapped-score INT     Accept only matches with ungapped alignment\
      \ score above threshold [15]\n --spaced-kmer-mode INT       0: use consecutive\
      \ positions in k-mers; 1: use spaced k-mers [1]\n --spaced-kmer-pattern STR\
      \    User-specified spaced k-mer pattern [11011101]\n --local-tmp STR      \
      \        Path where some of the temporary files will be created []\n --disk-space-limit\
      \ BYTE      Set max disk space to use for reverse profile searches. E.g. 800B,\
      \ 5K, 10M, 1G. Default (0) to all available disk space in the temp folder [0]\n\
      align:                      \n -a BOOL                      Add backtrace string\
      \ (convert to alignments with mmseqs convertalis module) [1]\n --alignment-mode\
      \ INT         How to compute the alignment:\n                              0:\
      \ automatic\n                              1: only score and end_pos\n     \
      \                         2: also start_pos and cov\n                      \
      \        3: also seq.id\n                              4: only ungapped alignment\
      \ [2]\n --wrapped-scoring BOOL       Double the (nucleotide) query sequence\
      \ during the scoring process to allow wrapped diagonal scoring around end and\
      \ start [0]\n -e FLOAT                     List matches below this E-value (range\
      \ 0.0-inf) [200.000]\n --min-seq-id FLOAT           List matches above this\
      \ sequence identity (for clustering) (range 0.0-1.0) [0.000]\n --min-aln-len\
      \ INT            Minimum alignment length (range 0-INT_MAX) [0]\n --seq-id-mode\
      \ INT            0: alignment length 1: shorter, 2: longer sequence [0]\n --alt-ali\
      \ INT                Show up to this many alternative alignments [0]\n -c FLOAT\
      \                     List matches above this fraction of aligned (covered)\
      \ residues (see --cov-mode) [0.000]\n --cov-mode INT               0: coverage\
      \ of query and target\n                              1: coverage of target\n\
      \                              2: coverage of query\n                      \
      \        3: target seq. length has to be at least x% of query length\n     \
      \                         4: query seq. length has to be at least x% of target\
      \ length\n                              5: short seq. needs to be at least x%\
      \ of the other seq. length [0]\n --realign BOOL               Compute more conservative,\
      \ shorter alignments (scores and E-values not changed) [0]\n --max-rejected\
      \ INT           Maximum rejected alignments before alignment calculation for\
      \ a query is stopped [2147483647]\n --max-accept INT             Maximum accepted\
      \ alignments before alignment calculation for a query is stopped [2147483647]\n\
      \ --score-bias FLOAT           Score bias when computing SW alignment (in bits)\
      \ [0.000]\n --gap-open TWIN              Gap open cost [16]\n --gap-extend TWIN\
      \            Gap extension cost [2]\n --zdrop INT                  Maximal allowed\
      \ difference between score values before alignment is truncated  (nucleotide\
      \ alignment only) [40]\nprofile:                    \n --pca FLOAT         \
      \         Pseudo count admixture strength [1.000]\n --pcb FLOAT            \
      \      Pseudo counts: Neff at half of maximum admixture (range 0.0-inf) [1.500]\n\
      \ --mask-profile INT           Mask query sequence of profile using tantan [0,1]\
      \ [1]\n --e-profile FLOAT            Include sequences matches with < e-value\
      \ thr. into the profile (>=0.0) [0.001]\n --wg BOOL                    Use global\
      \ sequence weighting for profile calculation [0]\n --filter-msa INT        \
      \     Filter msa: 0: do not filter, 1: filter [1]\n --max-seq-id FLOAT     \
      \      Reduce redundancy of output MSA using max. pairwise sequence identity\
      \ [0.0,1.0] [0.900]\n --qid FLOAT                  Reduce diversity of output\
      \ MSAs using min.seq. identity with query sequences [0.0,1.0] [0.000]\n --qsc\
      \ FLOAT                  Reduce diversity of output MSAs using min. score per\
      \ aligned residue with query sequences [-50.0,100.0] [-20.000]\n --cov FLOAT\
      \                  Filter output MSAs using min. fraction of query residues\
      \ covered by matched sequences [0.0,1.0] [0.000]\n --diff INT              \
      \     Filter MSAs by selecting most diverse set of sequences, keeping at least\
      \ this many seqs in each MSA block of length 50 [1000]\n --num-iterations INT\
      \         Number of iterative profile search iterations [1]\n --slice-search\
      \ BOOL          For bigger profile DB, run iteratively the search by greedily\
      \ swapping the search results [0]\nmisc:                       \n --rescore-mode\
      \ INT           Rescore diagonals with:\n                              0: Hamming\
      \ distance\n                              1: local alignment (score only)\n\
      \                              2: local alignment\n                        \
      \      3: global alignment\n                              4: longest alignment\
      \ fullfilling window quality criterion [0]\n --allow-deletion BOOL        Allow\
      \ deletions in a MSA [0]\n --min-length INT             Minimum codon number\
      \ in open reading frames [9]\n --max-length INT             Maximum codon number\
      \ in open reading frames [32734]\n --max-gaps INT               Maximum number\
      \ of codons with gaps or unknown residues before an open reading frame is rejected\
      \ [2147483647]\n --contig-start-mode INT      Contig start can be 0: incomplete,\
      \ 1: complete, 2: both [2]\n --contig-end-mode INT        Contig end can be\
      \ 0: incomplete, 1: complete, 2: both [2]\n --orf-start-mode INT         Orf\
      \ fragment can be 0: from start to stop, 1: from any to stop, 2: from last encountered\
      \ start to stop (no start in the middle) [1]\n --forward-frames STR        \
      \ Comma-seperated list of frames on the forward strand to be extracted [1,2,3]\n\
      \ --reverse-frames STR         Comma-seperated list of frames on the reverse\
      \ strand to be extracted [1,2,3]\n --translation-table INT      1) CANONICAL,\
      \ 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4) MOLD_MITOCHONDRIAL, 5) INVERT_MITOCHONDRIAL,\
      \ 6) CILIATE\n                              9) FLATWORM_MITOCHONDRIAL, 10) EUPLOTID,\
      \ 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14) ALT_FLATWORM_MITOCHONDRIAL\n\
      \                              15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL,\
      \ 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL\n             \
      \                 23) THRAUSTOCHYTRIUM_MITOCHONDRIAL, 24) PTEROBRANCHIA_MITOCHONDRIAL,\
      \ 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27) KARYORELICT, 28) CONDYLOSTOMA\n \
      \                              29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA\
      \ [1]\n --translate INT              Translate ORF to amino acid [0]\n --use-all-table-starts\
      \ BOOL  Use all alteratives for a start codon in the genetic table, if false\
      \ - only ATG (AUG) [0]\n --id-offset INT              Numeric ids in index file\
      \ are offset by this value [0]\n --add-orf-stop BOOL          Add stop codon\
      \ '*' at complete start and end [0]\n --search-type INT            Search type\
      \ 0: auto 1: amino acid, 2: translated, 3: nucleotide, 4: translated nucleotide\
      \ alignment [0]\n --start-sens FLOAT           Start sensitivity [4.000]\n --sens-steps\
      \ INT             Number of search steps performed from --start-sens to -s [1]\n\
      \ --simple-best-hit BOOL       Update the p-value by a single best hit, or by\
      \ best and second best hits [1]\n --alpha FLOAT                Set alpha for\
      \ combining p-values during aggregation [1.000]\n --aggregation-mode INT   \
      \    Combined P-values computed from 0: multi-hit, 1: minimum of all P-values,\
      \ 2: product-of-P-values, 3: truncated product [3]\n --fdr FLOAT           \
      \       FDR cutoff for filtering matches[0.0, 1.0] [0.050]\n --fmt INT     \
      \               0: short (only matches); 1: long (matches and hits); 2: long\
      \ with nucleotide alignment [1]\n --report-pam INT             Report protospacer\
      \ adjacent motifs up and downstream of hits [0,1] [1]\ncommon:             \
      \        \n --sub-mat TWIN               Substitution matrix file [nucl:nucleotide.out,aa:VTML40.out]\n\
      \ --max-seq-len INT            Maximum sequence length [65535]\n --db-load-mode\
      \ INT           Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch\
      \ [0]\n --threads INT                Number of CPU-cores used (all by default)\
      \ [8]\n --compressed INT             Write compressed output [0]\n -v INT  \
      \                     Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3:\
      \ +info [3]\n --mpi-runner STR             Use MPI on compute cluster with this\
      \ MPI command (e.g. \"mpirun -np 42\") []\n --force-reuse BOOL           Reuse\
      \ tmp filse in tmp/latest folder ignoring parameters and version changes [0]\n\
      \ --remove-tmp-files BOOL      Delete temporary files [0]\nexpert:         \
      \            \n --filter-hits BOOL           Filter hits by seq.id. and coverage\
      \ [0]\n --sort-results INT           Sort results: 0: no sorting, 1: sort by\
      \ E-value (Alignment) or seq.id. (Hamming) [0]\n --omit-consensus BOOL     \
      \   Omit consensus sequence in alignment [0]\n --create-lookup INT         \
      \ Create database lookup file (can be very large) [0]\n --chain-alignments INT\
      \       Chain overlapping alignments [0]\n --merge-query INT            Combine\
      \ ORFs/split sequences to a single entry [1]\n --strand INT                \
      \ Strand selection only works for DNA/DNA search 0: reverse, 1: forward, 2:\
      \ both [1]\n\nreferences:\n - Zhang R, Mirdita M, Levy Karin E, Norroy C, Galiez\
      \ C, and Soding J: SpacePHARER: Sensitive identification of phages from CRISPR\
      \ spacers in prokaryotic hosts. (2020)\n"
    generated_using: *id002
  - *id003
  - !Command
    positional: []
    named:
    - !Flag
      description: Number of CPU-cores used (all by default) [8]
      synonyms:
      - --threads
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Write compressed output [0]
      synonyms:
      - --compressed
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info
        [3]'
      synonyms:
      - -v
      args: !SimpleFlagArg
        name: INT
      optional: true
    command:
    - spacepharer
    - findpam
    parent: *id001
    subcommands: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "usage: spacepharer findpam <i:targetDB> <i:alnResultDB>  <o:resultDB>\
      \ [options]\n By Ruoshi Zhang <ruoshi.zhang@mpibpc.mpg.de>\noptions: common:\
      \           \n --threads INT      Number of CPU-cores used (all by default)\
      \ [8]\n --compressed INT   Write compressed output [0]\n -v INT            \
      \ Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\n\nreferences:\n\
      \ - Zhang R, Mirdita M, Levy Karin E, Norroy C, Galiez C, and Soding J: SpacePHARER:\
      \ Sensitive identification of phages from CRISPR spacers in prokaryotic hosts.\
      \ (2020)\n"
    generated_using: *id002
  - !Command
    positional: []
    named:
    - !Flag
      description: Number of CPU-cores used (all by default) [8]
      synonyms:
      - --threads
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Write compressed output [0]
      synonyms:
      - --compressed
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info
        [3]'
      synonyms:
      - -v
      args: !SimpleFlagArg
        name: INT
      optional: true
    command:
    - spacepharer
    - truncatebesthits
    parent: *id001
    subcommands: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "usage: spacepharer truncatebesthits <i:queryDB> <i:besthitsDB> <o:resultDB>\
      \ [options]\n By Ruoshi Zhang <ruoshi.zhang@mpibpc.mpg.de>\noptions: common:\
      \           \n --threads INT      Number of CPU-cores used (all by default)\
      \ [8]\n --compressed INT   Write compressed output [0]\n -v INT            \
      \ Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\n\nreferences:\n\
      \ - Zhang R, Mirdita M, Levy Karin E, Norroy C, Galiez C, and Soding J: SpacePHARER:\
      \ Sensitive identification of phages from CRISPR spacers in prokaryotic hosts.\
      \ (2020)\n"
    generated_using: *id002
  - !Command
    positional: []
    named:
    - !Flag
      description: '0: short (only matches); 1: long (matches and hits); 2: long with
        nucleotide alignment [1]'
      synonyms:
      - --fmt
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Write compressed output [0]
      synonyms:
      - --compressed
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: Number of CPU-cores used (all by default) [8]
      synonyms:
      - --threads
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info
        [3]'
      synonyms:
      - -v
      args: !SimpleFlagArg
        name: INT
      optional: true
    command:
    - spacepharer
    - summarizeresults
    parent: *id001
    subcommands: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "usage: spacepharer summarizeresults <i:matchDB> <i:alnDB> <o:output[.tsv]>\
      \ [options]\n By Ruoshi Zhang <ruoshi.zhang@mpibpc.mpg.de>\noptions: misc: \
      \            \n --fmt INT          0: short (only matches); 1: long (matches\
      \ and hits); 2: long with nucleotide alignment [1]\ncommon:           \n --compressed\
      \ INT   Write compressed output [0]\n --threads INT      Number of CPU-cores\
      \ used (all by default) [8]\n -v INT             Verbosity level: 0: quiet,\
      \ 1: +errors, 2: +warnings, 3: +info [3]\n\nreferences:\n - Zhang R, Mirdita\
      \ M, Levy Karin E, Norroy C, Galiez C, and Soding J: SpacePHARER: Sensitive\
      \ identification of phages from CRISPR spacers in prokaryotic hosts. (2020)\n"
    generated_using: *id002
  help_flag:
  usage_flag:
  version_flag:
  help_text: "CRISPR spacer phage-host finder\n\nSpacePHARER Version: 2.fc5e668\n\
    © Ruoshi Zhang <ruoshi.zhang@mpibpc.mpg.de>\n\nusage: spacepharer <command> [<args>]\n\
    \nEasy workflows for plain text input/output\n  easy-predict      \tPredict phage-host\
    \ matches from common spacer files (PILER-CR, CRISPRDetect and CRT)\n\nMain workflows\
    \ for database input/output\n  parsespacer       \tParse spacer files (PILER-CR,\
    \ CRISPRDetect and CRT) and create sequence database\n  downloadgenome    \tDownload\
    \ GenBank phage genomes and create sequence database\n  createsetdb       \tCreate\
    \ sequence database from FASTA input\n  predictmatch      \tPredict phage-host\
    \ matches\n\nSpecial-purpose utilities\n  filtermatchbyfdr  \tReport matches based\
    \ on false discovey rate\n  findpam           \tReport PAM upstream or downstream\
    \ of protospacer\n  truncatebesthits  \tTruncate list of best hits based on query\
    \ set size\n  summarizeresults  \tSummarize results on predicted matches (E-value)\
    \ and hits (alignments and PAM)\n\n\nInvalid Command: --help\nDid you mean \"\
    spacepharer easy-search\"?\n"
  generated_using: *id002
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "usage: spacepharer filtermatchbyfdr <i:cScoreDB> <i:controlcScoreDB> <o:resultDB>\
  \ [options]\n By Ruoshi Zhang <ruoshi.zhang@mpibpc.mpg.de>\noptions: misc:     \
  \        \n --fdr FLOAT        FDR cutoff for filtering matches[0.0, 1.0] [0.050]\n\
  common:           \n --compressed INT   Write compressed output [0]\n --threads\
  \ INT      Number of CPU-cores used (all by default) [8]\n -v INT             Verbosity\
  \ level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]\n\nreferences:\n - Zhang\
  \ R, Mirdita M, Levy Karin E, Norroy C, Galiez C, and Soding J: SpacePHARER: Sensitive\
  \ identification of phages from CRISPR spacers in prokaryotic hosts. (2020)\n"
generated_using: *id002
