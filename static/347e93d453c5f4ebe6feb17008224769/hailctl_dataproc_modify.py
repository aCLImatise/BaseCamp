from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, Boolean, String

Hailctl_Dataproc_Modify_V0_1_0 = CommandToolBuilder(tool="hailctl_dataproc_modify", base_command=["hailctl", "dataproc", "modify"], inputs=[ToolInput(tag="in_num_workers", input_type=Int(optional=True), prefix="--num-workers", doc=InputDocumentation(doc="New number of worker machines (min. 2).")), ToolInput(tag="in_num_preemptible_workers", input_type=Int(optional=True), prefix="--num-preemptible-workers", doc=InputDocumentation(doc="New number of secondary (preemptible) worker machines.")), ToolInput(tag="in_graceful_decommission_timeout", input_type=Int(optional=True), prefix="--graceful-decommission-timeout", doc=InputDocumentation(doc="If set, cluster size downgrade will use graceful\ndecommissioning with the given timeout (e.g. '60m').")), ToolInput(tag="in_max_idle", input_type=Int(optional=True), prefix="--max-idle", doc=InputDocumentation(doc="New maximum idle time before shutdown (e.g. '60m').")), ToolInput(tag="in_no_max_idle", input_type=Boolean(optional=True), prefix="--no-max-idle", doc=InputDocumentation(doc="Disable auto deletion after idle time.")), ToolInput(tag="in_expiration_time", input_type=Int(optional=True), prefix="--expiration-time", doc=InputDocumentation(doc="The time when cluster will be auto-deleted. (e.g.\n'2020-01-01T20:00:00Z'). Execute gcloud topic\ndatatimes for more information.")), ToolInput(tag="in_max_age", input_type=Int(optional=True), prefix="--max-age", doc=InputDocumentation(doc="If the cluster is older than this, it will be auto-\ndeleted. (e.g. '2h')Execute gcloud topic datatimes for\nmore information.")), ToolInput(tag="in_no_max_age", input_type=Boolean(optional=True), prefix="--no-max-age", doc=InputDocumentation(doc="Disable auto-deletion due to max age or expiration")), ToolInput(tag="in_zone", input_type=String(optional=True), prefix="--zone", doc=InputDocumentation(doc="Compute zone for Dataproc cluster.")), ToolInput(tag="in_update_hail_version", input_type=Boolean(optional=True), prefix="--update-hail-version", doc=InputDocumentation(doc="Update the version of hail running on cluster to match\nthe currently installed version.")), ToolInput(tag="in_wheel", input_type=String(optional=True), prefix="--wheel", doc=InputDocumentation(doc="New Hail installation.")), ToolInput(tag="in_time_dot", input_type=String(), position=0, doc=InputDocumentation(doc="--dry-run             Print gcloud dataproc command, but don't run it."))], outputs=[], container="quay.io/biocontainers/hail:0.2.61--py36hf1ae8f4_1", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Hailctl_Dataproc_Modify_V0_1_0().translate("wdl")

