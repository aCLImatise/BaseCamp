from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Fastr_V0_1_0 = CommandToolBuilder(tool="fastr", base_command=["fastr"], inputs=[ToolInput(tag="in_sequence", input_type=Boolean(optional=True), prefix="--sequence", doc=InputDocumentation(doc="Transliterate sequences (identifiers by default).")), ToolInput(tag="in_description", input_type=Boolean(optional=True), prefix="--description", doc=InputDocumentation(doc="Transliterate descriptions.")), ToolInput(tag="in_delete", input_type=Boolean(optional=True), prefix="--delete", doc=InputDocumentation(doc="Delete found but unreplaced characters.")), ToolInput(tag="in_squash", input_type=Boolean(optional=True), prefix="--squash", doc=InputDocumentation(doc="Squash duplicate replaced characters.")), ToolInput(tag="in_complement", input_type=Boolean(optional=True), prefix="--complement", doc=InputDocumentation(doc="Character complement SEARCHLIST. The last character of\nREPLACELIST replaces all characters not in SEARCHLIST.")), ToolInput(tag="in_no_replace", input_type=Boolean(optional=True), prefix="--no-replace", doc=InputDocumentation(doc="Delete or squash characters in SEARCHLIST.")), ToolInput(tag="in_strict", input_type=Boolean(optional=True), prefix="--strict", doc=InputDocumentation(doc="Transliterate illegal sequence characters to 'N' (DNA or RNA) or\n'X' (protein). Takes precedence over --iupac. Other options\ndisallowed in combination except --ambig and --fastq. For DNA,\nequivalent to: 'fastr -sc ACTGactg\- N'")), ToolInput(tag="in_iupac", input_type=String(optional=True), prefix="--iupac", doc=InputDocumentation(doc="illegal sequence characters (including IUPAC\nambiguities) to 'N' (DNA or RNA) or 'X' (protein). Other options\ndisallowed in combination except --ambig and --fastq. For DNA,\nequivalent to:\n'fastr -sc ACTGactgMRWSYKVHDBXNmrwsykvhdbxn\- N'")), ToolInput(tag="in_de_gap", input_type=String(optional=True), prefix="--degap", doc=InputDocumentation(doc="gap characters '-' from each sequence. May only be\ncombined with no other option except the --fastq option.\nEquivalent to:\n'fastr -snD -- -'")), ToolInput(tag="in_am_big", input_type=String(optional=True), prefix="--ambig", doc=InputDocumentation(doc="Use <char> to replace illegal characters instead of 'N' or 'X'\nwith --strict or --iupac")), ToolInput(tag="in_man", input_type=Boolean(optional=True), prefix="--man", doc=InputDocumentation(doc="Print the manual page and exit.")), ToolInput(tag="in_log", input_type=Boolean(optional=True), prefix="--log", doc=InputDocumentation(doc="Creates, or appends to, a generic FAST logfile in the current\nworking directory. The logfile records date/time of execution,\nfull command with options and arguments, and an optional\ncomment.")), ToolInput(tag="in_use_name_default", input_type=Boolean(optional=True), prefix="-L", doc=InputDocumentation(doc="[string], --logname=[string]\nUse [string] as the name of the logfile. Default is\n'FAST.log.txt'.")), ToolInput(tag="in_include_comment_logfile", input_type=Boolean(optional=True), prefix="-C", doc=InputDocumentation(doc="[string], --comment=[string]\nInclude comment [string] in logfile. No comment is saved by\ndefault.")), ToolInput(tag="in_format", input_type=Boolean(optional=True), prefix="--format", doc=InputDocumentation(doc="=[format]\nUse alternative format for input. See man page for 'fasconvert'\nfor allowed formats. This is for convenience; the FAST tools are\ndesigned to exchange data in Fasta format, and 'fasta' is the\ndefault format for this tool.")), ToolInput(tag="in_specify_type_sequence", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="[dna|rna|protein], --moltype=[dna|rna|protein]\nSpecify the type of sequence on input (should not be needed in\nmost cases, but sometimes Bioperl cannot guess and complains\nwhen processing data).")), ToolInput(tag="in_fast_q", input_type=Boolean(optional=True), prefix="--fastq", doc=InputDocumentation(doc="Use fastq format as input and output.\n"))], outputs=[], container="quay.io/biocontainers/perl-fast:1.06--pl526_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Fastr_V0_1_0().translate("wdl")

