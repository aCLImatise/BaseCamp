from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, File, Float, String

Flexbar_V0_1_0 = CommandToolBuilder(tool="flexbar", base_command=["flexbar"], inputs=[ToolInput(tag="in_full_help", input_type=Boolean(optional=True), prefix="--full-help", doc=InputDocumentation(doc="Display the help message with advanced options.")), ToolInput(tag="in_versions", input_type=Boolean(optional=True), prefix="--versions", doc=InputDocumentation(doc="Print Flexbar and SeqAn version numbers.")), ToolInput(tag="in_cite", input_type=Boolean(optional=True), prefix="--cite", doc=InputDocumentation(doc="Show program references for citation.")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of threads to employ. Default: 1.")), ToolInput(tag="in_target", input_type=File(optional=True), prefix="--target", doc=InputDocumentation(doc="Prefix for output file names or paths. Default: flexbarOut.")), ToolInput(tag="in_reads", input_type=File(optional=True), prefix="--reads", doc=InputDocumentation(doc="Fasta/q file or stdin (-) with reads that may contain barcodes.")), ToolInput(tag="in_reads_two", input_type=File(optional=True), prefix="--reads2", doc=InputDocumentation(doc="Second input file of paired reads, gz and bz2 files supported.")), ToolInput(tag="in_barcodes", input_type=File(optional=True), prefix="--barcodes", doc=InputDocumentation(doc="Fasta file with barcodes for demultiplexing, may contain N.")), ToolInput(tag="in_barcode_reads", input_type=File(optional=True), prefix="--barcode-reads", doc=InputDocumentation(doc="Fasta/q file containing separate barcode reads for detection.")), ToolInput(tag="in_barcode_min_overlap", input_type=Int(optional=True), prefix="--barcode-min-overlap", doc=InputDocumentation(doc="Minimum overlap of barcode and read. Default: barcode length.")), ToolInput(tag="in_barcode_error_rate", input_type=Float(optional=True), prefix="--barcode-error-rate", doc=InputDocumentation(doc="Error rate threshold for mismatches and gaps. Default: 0.0.")), ToolInput(tag="in_barcode_trim_end", input_type=String(optional=True), prefix="--barcode-trim-end", doc=InputDocumentation(doc="Type of detection, see section trim-end modes. Default: LTAIL.")), ToolInput(tag="in_adapters", input_type=File(optional=True), prefix="--adapters", doc=InputDocumentation(doc="Fasta file with adapters for removal that may contain N.")), ToolInput(tag="in_adapters_two", input_type=File(optional=True), prefix="--adapters2", doc=InputDocumentation(doc="File with extra adapters for second read set in paired mode.")), ToolInput(tag="in_adapter_preset", input_type=String(optional=True), prefix="--adapter-preset", doc=InputDocumentation(doc="One of TruSeq, SmallRNA, Methyl, Ribo, Nextera, and NexteraMP.")), ToolInput(tag="in_adapter_min_overlap", input_type=Int(optional=True), prefix="--adapter-min-overlap", doc=InputDocumentation(doc="Minimum overlap for removal without pair overlap. Default: 3.")), ToolInput(tag="in_adapter_error_rate", input_type=Float(optional=True), prefix="--adapter-error-rate", doc=InputDocumentation(doc="Error rate threshold for mismatches and gaps. Default: 0.1.")), ToolInput(tag="in_adapter_trim_end", input_type=String(optional=True), prefix="--adapter-trim-end", doc=InputDocumentation(doc="Type of removal, see section trim-end modes. Default: RIGHT.")), ToolInput(tag="in_adapter_pair_overlap", input_type=String(optional=True), prefix="--adapter-pair-overlap", doc=InputDocumentation(doc="Overlap detection of paired reads. One of ON, SHORT, and ONLY.")), ToolInput(tag="in_max_uncalled", input_type=Int(optional=True), prefix="--max-uncalled", doc=InputDocumentation(doc="Allowed uncalled bases N for each read. Default: 0.")), ToolInput(tag="in_pre_trim_left", input_type=Int(optional=True), prefix="--pre-trim-left", doc=InputDocumentation(doc="Trim given number of bases on 5' read end before detection.")), ToolInput(tag="in_pre_trim_right", input_type=Int(optional=True), prefix="--pre-trim-right", doc=InputDocumentation(doc="Trim specified number of bases on 3' end prior to detection.")), ToolInput(tag="in_min_read_length", input_type=Int(optional=True), prefix="--min-read-length", doc=InputDocumentation(doc="Minimum read length to remain after removal. Default: 18.")), ToolInput(tag="in_q_trim", input_type=String(optional=True), prefix="--qtrim", doc=InputDocumentation(doc="Quality-based trimming mode. One of TAIL, WIN, and BWA.")), ToolInput(tag="in_q_trim_format", input_type=Float(optional=True), prefix="--qtrim-format", doc=InputDocumentation(doc="Quality format. One of sanger, solexa, i1.3, i1.5, and i1.8.")), ToolInput(tag="in_q_trim_threshold", input_type=Int(optional=True), prefix="--qtrim-threshold", doc=InputDocumentation(doc="Minimum quality as threshold for trimming. Default: 20.")), ToolInput(tag="in_h_trim_right", input_type=String(optional=True), prefix="--htrim-right", doc=InputDocumentation(doc="Trim certain homopolymers on right read end after removal.")), ToolInput(tag="in_h_trim_min_length", input_type=Int(optional=True), prefix="--htrim-min-length", doc=InputDocumentation(doc="Minimum length of homopolymers at read ends. Default: 3.")), ToolInput(tag="in_h_trim_error_rate", input_type=Float(optional=True), prefix="--htrim-error-rate", doc=InputDocumentation(doc="Error rate threshold for mismatches. Default: 0.1.")), ToolInput(tag="in_fast_a_output", input_type=Boolean(optional=True), prefix="--fasta-output", doc=InputDocumentation(doc="Prefer non-quality format fasta for output.")), ToolInput(tag="in_zip_output", input_type=Int(optional=True), prefix="--zip-output", doc=InputDocumentation(doc="Direct compression of output files. One of GZ and BZ2.")), ToolInput(tag="in_stdout_reads", input_type=Boolean(optional=True), prefix="--stdout-reads", doc=InputDocumentation(doc="Write reads to stdout, tagged and interleaved if needed.")), ToolInput(tag="in_align_log", input_type=String(optional=True), prefix="--align-log", doc=InputDocumentation(doc="Print chosen read alignments. One of ALL, MOD, and TAB.")), ToolInput(tag="in_stdout_log", input_type=Boolean(optional=True), prefix="--stdout-log", doc=InputDocumentation(doc="Write statistics to stdout instead of target log file.")), ToolInput(tag="in_removal_tags", input_type=Boolean(optional=True), prefix="--removal-tags", doc=InputDocumentation(doc="Tag reads that are subject to adapter or barcode removal."))], outputs=[ToolOutput(tag="out_target", output_type=File(optional=True), selector=InputSelector(input_to_select="in_target", type_hint=File()), doc=OutputDocumentation(doc="Prefix for output file names or paths. Default: flexbarOut."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Flexbar_V0_1_0().translate("wdl", allow_empty_container=True)

