from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, String, Directory, Boolean

Panphlan_Profiling_Py_V0_1_0 = CommandToolBuilder(tool="panphlan_profiling.py", base_command=["panphlan_profiling.py"], inputs=[ToolInput(tag="in_i_dna", input_type=File(optional=True), prefix="--i_dna", doc=InputDocumentation(doc="Input directory of panphlan_map.py results or text\nfile with")), ToolInput(tag="in_i_cov_mat", input_type=File(optional=True), prefix="--i_covmat", doc=InputDocumentation(doc="Path to precomputed coverage matrix")), ToolInput(tag="in_o_matrix", input_type=File(optional=True), prefix="--o_matrix", doc=InputDocumentation(doc="Path for presence/absence matrix output")), ToolInput(tag="in_o_cov_mat", input_type=File(optional=True), prefix="--o_covmat", doc=InputDocumentation(doc="Write raw gene-family coverage matrix in provided file")), ToolInput(tag="in_o_cov_plot_normed", input_type=File(optional=True), prefix="--o_covplot_normed", doc=InputDocumentation(doc="Filename for normalized gene-family coverage plot.")), ToolInput(tag="in_o_idx", input_type=File(optional=True), prefix="--o_idx", doc=InputDocumentation(doc="Write gene-family plateau definitions (1, -1, -2, -3)")), ToolInput(tag="in_min_coverage", input_type=Int(optional=True), prefix="--min_coverage", doc=InputDocumentation(doc="Minimum coverage threshold, default: 2X")), ToolInput(tag="in_left_max", input_type=Int(optional=True), prefix="--left_max", doc=InputDocumentation(doc="Strain presence/absence plateau curve threshold: left\nmax [1.25]")), ToolInput(tag="in_right_min", input_type=Int(optional=True), prefix="--right_min", doc=InputDocumentation(doc="Strain presence/absence plateau curve threshold: right\nmin [0.75]")), ToolInput(tag="in_th_non_present", input_type=String(optional=True), prefix="--th_non_present", doc=InputDocumentation(doc="Gene families threshold: not present if lower")), ToolInput(tag="in_th_present", input_type=String(optional=True), prefix="--th_present", doc=InputDocumentation(doc="Gene families threshold: present if higher")), ToolInput(tag="in_th_multicopy", input_type=String(optional=True), prefix="--th_multicopy", doc=InputDocumentation(doc="Gene families threshold: multicopy if higher")), ToolInput(tag="in_strain_similarity_perc", input_type=Int(optional=True), prefix="--strain_similarity_perc", doc=InputDocumentation(doc="Minimum threshold (percentage) for genome length to\nadd a reference genome to presence/absence matrix\n(default: 50).")), ToolInput(tag="in_i_rna", input_type=Directory(optional=True), prefix="--i_rna", doc=InputDocumentation(doc="RNA-seq: input directory of RNA mapping results\nSAMPLE_RNA.csv.bz2")), ToolInput(tag="in_sample_pairs", input_type=String(optional=True), prefix="--sample_pairs", doc=InputDocumentation(doc="RNA-seq: list of DNA-RNA sequencing pairs from the\nsame biological sample.")), ToolInput(tag="in_rna_max_zeros", input_type=Int(optional=True), prefix="--rna_max_zeros", doc=InputDocumentation(doc="Max accepted percent of zero coveraged gene-families\n(default: <10 %).")), ToolInput(tag="in_rna_norm_percentile", input_type=String(optional=True), prefix="--rna_norm_percentile", doc=InputDocumentation(doc="Percentile for normalizing RNA/DNA ratios")), ToolInput(tag="in_o_rna", input_type=File(optional=True), prefix="--o_rna", doc=InputDocumentation(doc="Write normalized gene-family transcription values\n(RNA-seq).")), ToolInput(tag="in_add_ref", input_type=Boolean(optional=True), prefix="--add_ref", doc=InputDocumentation(doc="Add reference genomes to gene-family presence/absence")), ToolInput(tag="in_func_an_not", input_type=File(optional=True), prefix="--func_annot", doc=InputDocumentation(doc="Path to file mapping UniRef IDs to GO/KEGG/...\nannotation for functional characterization")), ToolInput(tag="in_field", input_type=File(optional=True), prefix="--field", doc=InputDocumentation(doc="Field in the annotation file that must be added to the\npresence/absence matrix")), ToolInput(tag="in_pan_genome", input_type=File(optional=True), prefix="--pangenome", doc=InputDocumentation(doc="Path to pangenome tsv file\n")), ToolInput(tag="in_matrix_dot", input_type=String(), position=0, doc=InputDocumentation(doc="-v, --verbose         Show progress information"))], outputs=[ToolOutput(tag="out_o_matrix", output_type=File(optional=True), selector=InputSelector(input_to_select="in_o_matrix", type_hint=File()), doc=OutputDocumentation(doc="Path for presence/absence matrix output"))], container="quay.io/biocontainers/panphlan:3.1--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Panphlan_Profiling_Py_V0_1_0().translate("wdl")

