from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, Directory, File, String, Boolean, Float

Pvacseq_Run_V0_1_0 = CommandToolBuilder(tool="pvacseq_run", base_command=["pvacseq", "run"], inputs=[ToolInput(tag="in_epitope_length", input_type=Int(optional=True), prefix="--epitope-length", doc=InputDocumentation(doc="Length of subpeptides (neoepitopes) to predict.\nMultiple epitope lengths can be specified using a\ncomma-separated list. Typical epitope lengths vary\nbetween 8-11. Required for Class I prediction\nalgorithms")), ToolInput(tag="in_peptide_sequence_length", input_type=Int(optional=True), prefix="--peptide-sequence-length", doc=InputDocumentation(doc="Length of the peptide sequence to use when creating\nthe FASTA. Default: 21")), ToolInput(tag="in_ie_db_install_directory", input_type=Directory(optional=True), prefix="--iedb-install-directory", doc=InputDocumentation(doc="Directory that contains the local installation of IEDB\nMHC I and/or MHC II")), ToolInput(tag="in_additional_input_file_list", input_type=File(optional=True), prefix="--additional-input-file-list", doc=InputDocumentation(doc="yaml file of additional files to be used as inputs,\ne.g. cufflinks output files. For an example of this\nyaml file run `pvacseq config_files\nadditional_input_file_list`.")), ToolInput(tag="in_net_chop_method", input_type=String(optional=True), prefix="--net-chop-method", doc=InputDocumentation(doc="NetChop prediction method to use ('cterm' for C term\n3.0, '20s' for 20S 3.0).")), ToolInput(tag="in_net_mhc_stab", input_type=Boolean(optional=True), prefix="--netmhc-stab", doc=InputDocumentation(doc="Run NetMHCStabPan after all filtering and add\nstability predictions to predicted epitopes")), ToolInput(tag="in_top_result_per_mutation", input_type=Boolean(optional=True), prefix="--top-result-per-mutation", doc=InputDocumentation(doc="Output only the top scoring result for each allele-\npeptide length combination for each variant. Default:\nFalse")), ToolInput(tag="in_top_score_metric", input_type=String(optional=True), prefix="--top-score-metric", doc=InputDocumentation(doc="The ic50 scoring metric to use when filtering epitopes\nby binding-threshold or minimum fold change. lowest:\nBest MT Score/Corresponding Fold Change - lowest MT\nic50 binding score/corresponding fold change of all\nchosen prediction methods. median: Median MT\nScore/Median Fold Change - median MT ic50 binding\nscore/fold change of all chosen prediction methods.\nDefault: median")), ToolInput(tag="in_binding_threshold", input_type=Int(optional=True), prefix="--binding-threshold", doc=InputDocumentation(doc="Report only epitopes where the mutant allele has ic50\nbinding scores below this value. Default: 500")), ToolInput(tag="in_minimum_fold_change", input_type=Int(optional=True), prefix="--minimum-fold-change", doc=InputDocumentation(doc="Minimum fold change between mutant binding score and\nwild-type score. The default is 0, which filters no\nresults, but 1 is often a sensible choice (requiring\nthat binding is better to the MT than WT). Default: 0")), ToolInput(tag="in_normal_cov", input_type=Int(optional=True), prefix="--normal-cov", doc=InputDocumentation(doc="Normal Coverage Cutoff. Sites above this cutoff will\nbe considered. Default: 5")), ToolInput(tag="in_t_dna_cov", input_type=Int(optional=True), prefix="--tdna-cov", doc=InputDocumentation(doc="Tumor DNA Coverage Cutoff. Sites above this cutoff\nwill be considered. Default: 10")), ToolInput(tag="in_trna_cov", input_type=Int(optional=True), prefix="--trna-cov", doc=InputDocumentation(doc="Tumor RNA Coverage Cutoff. Sites above this cutoff\nwill be considered. Default: 10")), ToolInput(tag="in_normal_vaf", input_type=Int(optional=True), prefix="--normal-vaf", doc=InputDocumentation(doc="Normal VAF Cutoff. Sites BELOW this cutoff in normal\nwill be considered. Default: 2")), ToolInput(tag="in_t_dna_vaf", input_type=Int(optional=True), prefix="--tdna-vaf", doc=InputDocumentation(doc="Tumor DNA VAF Cutoff. Sites above this cutoff will be\nconsidered. Default: 40")), ToolInput(tag="in_trna_vaf", input_type=Int(optional=True), prefix="--trna-vaf", doc=InputDocumentation(doc="Tumor RNA VAF Cutoff. Sites above this cutoff will be\nconsidered. Default: 40")), ToolInput(tag="in_expn_val", input_type=Int(optional=True), prefix="--expn-val", doc=InputDocumentation(doc="Gene and Transcript Expression cutoff. Sites above\nthis cutoff will be considered. Default: 1")), ToolInput(tag="in_net_chop_threshold", input_type=Float(optional=True), prefix="--net-chop-threshold", doc=InputDocumentation(doc="NetChop prediction threshold. Default: 0.5")), ToolInput(tag="in_additional_report_columns", input_type=String(optional=True), prefix="--additional-report-columns", doc=InputDocumentation(doc="Additional columns to output in the final report")), ToolInput(tag="in_fast_a_size", input_type=Int(optional=True), prefix="--fasta-size", doc=InputDocumentation(doc="Number of fasta entries per IEDB request. For some\nresource-intensive prediction algorithms like\nPickpocket and NetMHCpan it might be helpful to reduce\nthis number. Needs to be an even number.")), ToolInput(tag="in_ie_db_retries", input_type=Int(optional=True), prefix="--iedb-retries", doc=InputDocumentation(doc="Number of retries when making requests to the IEDB\nRESTful web interface. Must be less than or equal to\n100.Default: 5")), ToolInput(tag="in_downstream_sequence_length", input_type=Int(optional=True), prefix="--downstream-sequence-length", doc=InputDocumentation(doc="Cap to limit the downstream sequence length for\nframeshifts when creating the fasta file. Use 'full'\nto include the full downstream sequence. Default: 1000")), ToolInput(tag="in_keep_tmp_files", input_type=Boolean(optional=True), prefix="--keep-tmp-files", doc=InputDocumentation(doc="Keep intermediate output files. This migt be useful\nfor debugging purposes.\n")), ToolInput(tag="in_output_dir", input_type=String(), position=0, doc=InputDocumentation(doc="positional arguments:")), ToolInput(tag="in_input_file", input_type=String(), position=1, doc=InputDocumentation(doc="A VEP-annotated single-sample VCF containing\ntranscript, Wildtype protein sequence, and Downstream\nprotein sequence information")), ToolInput(tag="in_sample_name", input_type=String(), position=2, doc=InputDocumentation(doc="The name of the sample being processed. This will be\nused as a prefix for output files")), ToolInput(tag="in_allele", input_type=String(), position=3, doc=InputDocumentation(doc="Name of the allele to use for epitope prediction.\nMultiple alleles can be specified using a comma-\nseparated list. For a list of available alleles, use:\n`pvacseq valid_alleles`")), ToolInput(tag="in_spaces", input_type=String(), position=0, doc=InputDocumentation(doc="output_dir            The directory for writing all result files"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Pvacseq_Run_V0_1_0().translate("wdl", allow_empty_container=True)

