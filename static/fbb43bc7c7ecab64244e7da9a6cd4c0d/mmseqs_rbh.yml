!Command
command:
- mmseqs
- rbh
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - --comp-bias-corr
  description: Correct for locally biased amino acid composition (range 0-1) [0]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --add-self-matches
  description: Artificially add entries of queries with themselves (for clustering)
    [0]
  args: !SimpleFlagArg
    name: BOOL
- !Flag
  optional: true
  synonyms:
  - --seed-sub-mat
  description: Substitution matrix file for k-mer generation [nucl:nucleotide.out,aa:VTML80.out]
  args: !SimpleFlagArg
    name: TWIN
- !Flag
  optional: true
  synonyms:
  - -s
  description: 'Sensitivity: 1.0 faster; 4.0 fast; 7.5 sensitive [4.000]'
  args: !SimpleFlagArg
    name: FLOAT
- !Flag
  optional: true
  synonyms:
  - -k
  description: 'k-mer length (0: automatically set to optimum) [0]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --k-score
  description: k-mer threshold for generating similar k-mer lists [2147483647]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --alph-size
  description: Alphabet size (range 2-21) [nucl:5,aa:21]
  args: !SimpleFlagArg
    name: TWIN
- !Flag
  optional: true
  synonyms:
  - --max-seqs
  description: Maximum results per query sequence allowed to pass the prefilter (affects
    sensitivity) [300]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --split
  description: 'Split input into N equally distributed chunks. 0: set the best split
    automatically [0]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --split-mode
  description: '0: split target db; 1: split query db; 2: auto, depending on main
    memory [2]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --split-memory-limit
  description: Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to all
    available system memory [0]
  args: !SimpleFlagArg
    name: BYTE
- !Flag
  optional: true
  synonyms:
  - --diag-score
  description: Use ungapped diagonal scoring during prefilter [1]
  args: !SimpleFlagArg
    name: BOOL
- !Flag
  optional: true
  synonyms:
  - --exact-kmer-matching
  description: Extract only exact k-mers for matching (range 0-1) [0]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --mask
  description: 'Mask sequences in k-mer stage: 0: w/o low complexity masking, 1: with
    low complexity masking [0]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --mask-lower-case
  description: 'Lowercase letters will be excluded from k-mer search 0: include region,
    1: exclude region [0]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --min-ungapped-score
  description: Accept only matches with ungapped alignment score above threshold [15]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --spaced-kmer-mode
  description: '0: use consecutive positions in k-mers; 1: use spaced k-mers [1]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --spaced-kmer-pattern
  description: User-specified spaced k-mer pattern []
  args: !SimpleFlagArg
    name: STR
- !Flag
  optional: true
  synonyms:
  - --local-tmp
  description: Path where some of the temporary files will be created []
  args: !SimpleFlagArg
    name: STR
- !Flag
  optional: true
  synonyms:
  - --disk-space-limit
  description: Set max disk space to use for reverse profile searches. E.g. 800B,
    5K, 10M, 1G. Default (0) to all available disk space in the temp folder [0]
  args: !SimpleFlagArg
    name: BYTE
- !Flag
  optional: true
  synonyms:
  - -a
  description: Add backtrace string (convert to alignments with mmseqs convertalis
    module) [0]
  args: !SimpleFlagArg
    name: BOOL
- !Flag
  optional: true
  synonyms:
  - --alignment-mode
  description: "How to compute the alignment:\n0: automatic\n1: only score and end_pos\n\
    2: also start_pos and cov\n3: also seq.id\n4: only ungapped alignment [3]"
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --alignment-output-mode
  description: "How to compute the alignment:\n0: automatic\n1: only score and end_pos\n\
    2: also start_pos and cov\n3: also seq.id\n4: only ungapped alignment\n5: score\
    \ only (output) cluster format [0]"
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --wrapped-scoring
  description: Double the (nucleotide) query sequence during the scoring process to
    allow wrapped diagonal scoring around end and start [0]
  args: !SimpleFlagArg
    name: BOOL
- !Flag
  optional: true
  synonyms:
  - -e
  description: List matches below this E-value (range 0.0-inf) [1.000E-03]
  args: !SimpleFlagArg
    name: DOUBLE
- !Flag
  optional: true
  synonyms:
  - --min-seq-id
  description: List matches above this sequence identity (for clustering) (range 0.0-1.0)
    [0.000]
  args: !SimpleFlagArg
    name: FLOAT
- !Flag
  optional: true
  synonyms:
  - --min-aln-len
  description: Minimum alignment length (range 0-INT_MAX) [0]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --seq-id-mode
  description: '0: alignment length 1: shorter, 2: longer sequence [0]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --alt-ali
  description: Show up to this many alternative alignments [0]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - -c
  description: List matches above this fraction of aligned (covered) residues (see
    --cov-mode) [0.000]
  args: !SimpleFlagArg
    name: FLOAT
- !Flag
  optional: true
  synonyms:
  - --cov-mode
  description: "0: coverage of query and target\n1: coverage of target\n2: coverage\
    \ of query\n3: target seq. length has to be at least x% of query length\n4: query\
    \ seq. length has to be at least x% of target length\n5: short seq. needs to be\
    \ at least x% of the other seq. length [0]"
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --max-rejected
  description: Maximum rejected alignments before alignment calculation for a query
    is stopped [2147483647]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --max-accept
  description: Maximum accepted alignments before alignment calculation for a query
    is stopped [2147483647]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --score-bias
  description: Score bias when computing SW alignment (in bits) [0.000]
  args: !SimpleFlagArg
    name: FLOAT
- !Flag
  optional: true
  synonyms:
  - --realign
  description: Compute more conservative, shorter alignments (scores and E-values
    not changed) [0]
  args: !SimpleFlagArg
    name: BOOL
- !Flag
  optional: true
  synonyms:
  - --realign-score-bias
  description: Additional bias when computing realignment [-0.200]
  args: !SimpleFlagArg
    name: FLOAT
- !Flag
  optional: true
  synonyms:
  - --realign-max-seqs
  description: Maximum number of results to return in realignment [2147483647]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --gap-open
  description: Gap open cost [nucl:5,aa:11]
  args: !SimpleFlagArg
    name: TWIN
- !Flag
  optional: true
  synonyms:
  - --gap-extend
  description: Gap extension cost [nucl:2,aa:1]
  args: !SimpleFlagArg
    name: TWIN
- !Flag
  optional: true
  synonyms:
  - --zdrop
  description: Maximal allowed difference between score values before alignment is
    truncated  (nucleotide alignment only) [40]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --exhaustive-search-filter
  description: 'Filter result during search: 0: do not filter, 1: filter [0]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --pca
  description: Pseudo count admixture strength [1.000]
  args: !SimpleFlagArg
    name: FLOAT
- !Flag
  optional: true
  synonyms:
  - --pcb
  description: 'Pseudo counts: Neff at half of maximum admixture (range 0.0-inf) [1.500]'
  args: !SimpleFlagArg
    name: FLOAT
- !Flag
  optional: true
  synonyms:
  - --mask-profile
  description: Mask query sequence of profile using tantan [0,1] [1]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --e-profile
  description: Include sequences matches with < E-value thr. into the profile (>=0.0)
    [1.000E-03]
  args: !SimpleFlagArg
    name: DOUBLE
- !Flag
  optional: true
  synonyms:
  - --wg
  description: Use global sequence weighting for profile calculation [0]
  args: !SimpleFlagArg
    name: BOOL
- !Flag
  optional: true
  synonyms:
  - --filter-msa
  description: 'Filter msa: 0: do not filter, 1: filter [1]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --max-seq-id
  description: Reduce redundancy of output MSA using max. pairwise sequence identity
    [0.0,1.0] [0.900]
  args: !SimpleFlagArg
    name: FLOAT
- !Flag
  optional: true
  synonyms:
  - --qid
  description: Reduce diversity of output MSAs using min.seq. identity with query
    sequences [0.0,1.0] [0.000]
  args: !SimpleFlagArg
    name: FLOAT
- !Flag
  optional: true
  synonyms:
  - --qsc
  description: Reduce diversity of output MSAs using min. score per aligned residue
    with query sequences [-50.0,100.0] [-20.000]
  args: !SimpleFlagArg
    name: FLOAT
- !Flag
  optional: true
  synonyms:
  - --cov
  description: Filter output MSAs using min. fraction of query residues covered by
    matched sequences [0.0,1.0] [0.000]
  args: !SimpleFlagArg
    name: FLOAT
- !Flag
  optional: true
  synonyms:
  - --diff
  description: Filter MSAs by selecting most diverse set of sequences, keeping at
    least this many seqs in each MSA block of length 50 [1000]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --num-iterations
  description: Number of iterative profile search iterations [1]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --exhaustive-search
  description: For bigger profile DB, run iteratively the search by greedily swapping
    the search results [0]
  args: !SimpleFlagArg
    name: BOOL
- !Flag
  optional: true
  synonyms:
  - --lca-search
  description: Efficient search for LCA candidates [0]
  args: !SimpleFlagArg
    name: BOOL
- !Flag
  optional: true
  synonyms:
  - --rescore-mode
  description: "Rescore diagonals with:\n0: Hamming distance\n1: local alignment (score\
    \ only)\n2: local alignment\n3: global alignment\n4: longest alignment fulfilling\
    \ window quality criterion [0]"
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --allow-deletion
  description: Allow deletions in a MSA [0]
  args: !SimpleFlagArg
    name: BOOL
- !Flag
  optional: true
  synonyms:
  - --min-length
  description: Minimum codon number in open reading frames [10]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --max-length
  description: Maximum codon number in open reading frames [32734]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --max-gaps
  description: Maximum number of codons with gaps or unknown residues before an open
    reading frame is rejected [2147483647]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --contig-start-mode
  description: 'Contig start can be 0: incomplete, 1: complete, 2: both [2]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --contig-end-mode
  description: 'Contig end can be 0: incomplete, 1: complete, 2: both [2]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --orf-start-mode
  description: 'Orf fragment can be 0: from start to stop, 1: from any to stop, 2:
    from last encountered start to stop (no start in the middle) [1]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --forward-frames
  description: Comma-separated list of frames on the forward strand to be extracted
    [1,2,3]
  args: !SimpleFlagArg
    name: STR
- !Flag
  optional: true
  synonyms:
  - --reverse-frames
  description: Comma-separated list of frames on the reverse strand to be extracted
    [1,2,3]
  args: !SimpleFlagArg
    name: STR
- !Flag
  optional: true
  synonyms:
  - --translation-table
  description: "1) CANONICAL, 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4) MOLD_MITOCHONDRIAL,\
    \ 5) INVERT_MITOCHONDRIAL, 6) CILIATE\n9) FLATWORM_MITOCHONDRIAL, 10) EUPLOTID,\
    \ 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14) ALT_FLATWORM_MITOCHONDRIAL\n\
    15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL, 21) TREMATODE_MITOCHONDRIAL,\
    \ 22) SCENEDESMUS_MITOCHONDRIAL\n23) THRAUSTOCHYTRIUM_MITOCHONDRIAL, 24) PTEROBRANCHIA_MITOCHONDRIAL,\
    \ 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27) KARYORELICT, 28) CONDYLOSTOMA\n29)\
    \ MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA [1]"
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --translate
  description: Translate ORF to amino acid [0]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --use-all-table-starts
  description: Use all alternatives for a start codon in the genetic table, if false
    - only ATG (AUG) [0]
  args: !SimpleFlagArg
    name: BOOL
- !Flag
  optional: true
  synonyms:
  - --id-offset
  description: Numeric ids in index file are offset by this value [0]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --add-orf-stop
  description: Add stop codon '*' at complete start and end [0]
  args: !SimpleFlagArg
    name: BOOL
- !Flag
  optional: true
  synonyms:
  - --sequence-overlap
  description: Overlap between sequences [0]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --sequence-split-mode
  description: 'Sequence split mode 0: copy data, 1: soft link data and write new
    index, [1]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --headers-split-mode
  description: 'Header split mode: 0: split position, 1: original header [0]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --search-type
  description: 'Search type 0: auto 1: amino acid, 2: translated, 3: nucleotide, 4:
    translated nucleotide alignment [0]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --start-sens
  description: Start sensitivity [4.000]
  args: !SimpleFlagArg
    name: FLOAT
- !Flag
  optional: true
  synonyms:
  - --sens-steps
  description: Number of search steps performed from --start-sens to -s [1]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --sub-mat
  description: Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]
  args: !SimpleFlagArg
    name: TWIN
- !Flag
  optional: true
  synonyms:
  - --max-seq-len
  description: Maximum sequence length [65535]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --db-load-mode
  description: 'Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch [0]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --threads
  description: Number of CPU-cores used (all by default) [2]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --compressed
  description: Write compressed output [0]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - -v
  description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --mpi-runner
  description: Use MPI on compute cluster with this MPI command (e.g. "mpirun -np
    42") []
  args: !SimpleFlagArg
    name: STR
- !Flag
  optional: true
  synonyms:
  - --force-reuse
  description: Reuse tmp filse in tmp/latest folder ignoring parameters and version
    changes [0]
  args: !SimpleFlagArg
    name: BOOL
- !Flag
  optional: true
  synonyms:
  - --remove-tmp-files
  description: Delete temporary files [0]
  args: !SimpleFlagArg
    name: BOOL
- !Flag
  optional: true
  synonyms:
  - --filter-hits
  description: Filter hits by seq.id. and coverage [0]
  args: !SimpleFlagArg
    name: BOOL
- !Flag
  optional: true
  synonyms:
  - --sort-results
  description: 'Sort results: 0: no sorting, 1: sort by E-value (Alignment) or seq.id.
    (Hamming) [0]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --create-lookup
  description: Create database lookup file (can be very large) [0]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --chain-alignments
  description: Chain overlapping alignments [0]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --merge-query
  description: Combine ORFs/split sequences to a single entry [1]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --strand
  description: 'Strand selection only works for DNA/DNA search 0: reverse, 1: forward,
    2: both [1]'
  args: !SimpleFlagArg
    name: INT
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "usage: mmseqs rbh <i:queryDB> <i:targetDB> <o:alignmentDB> <tmpDir> [options]\n\
  \ By Eli Levy Karin\noptions: prefilter:                      \n --comp-bias-corr\
  \ INT             Correct for locally biased amino acid composition (range 0-1)\
  \ [0]\n --add-self-matches BOOL          Artificially add entries of queries with\
  \ themselves (for clustering) [0]\n --seed-sub-mat TWIN              Substitution\
  \ matrix file for k-mer generation [nucl:nucleotide.out,aa:VTML80.out]\n -s FLOAT\
  \                         Sensitivity: 1.0 faster; 4.0 fast; 7.5 sensitive [4.000]\n\
  \ -k INT                           k-mer length (0: automatically set to optimum)\
  \ [0]\n --k-score INT                    k-mer threshold for generating similar\
  \ k-mer lists [2147483647]\n --alph-size TWIN                 Alphabet size (range\
  \ 2-21) [nucl:5,aa:21]\n --max-seqs INT                   Maximum results per query\
  \ sequence allowed to pass the prefilter (affects sensitivity) [300]\n --split INT\
  \                      Split input into N equally distributed chunks. 0: set the\
  \ best split automatically [0]\n --split-mode INT                 0: split target\
  \ db; 1: split query db; 2: auto, depending on main memory [2]\n --split-memory-limit\
  \ BYTE        Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to all\
  \ available system memory [0]\n --diag-score BOOL                Use ungapped diagonal\
  \ scoring during prefilter [1]\n --exact-kmer-matching INT        Extract only exact\
  \ k-mers for matching (range 0-1) [0]\n --mask INT                       Mask sequences\
  \ in k-mer stage: 0: w/o low complexity masking, 1: with low complexity masking\
  \ [0]\n --mask-lower-case INT            Lowercase letters will be excluded from\
  \ k-mer search 0: include region, 1: exclude region [0]\n --min-ungapped-score INT\
  \         Accept only matches with ungapped alignment score above threshold [15]\n\
  \ --spaced-kmer-mode INT           0: use consecutive positions in k-mers; 1: use\
  \ spaced k-mers [1]\n --spaced-kmer-pattern STR        User-specified spaced k-mer\
  \ pattern []\n --local-tmp STR                  Path where some of the temporary\
  \ files will be created []\n --disk-space-limit BYTE          Set max disk space\
  \ to use for reverse profile searches. E.g. 800B, 5K, 10M, 1G. Default (0) to all\
  \ available disk space in the temp folder [0]\nalign:                          \n\
  \ -a BOOL                          Add backtrace string (convert to alignments with\
  \ mmseqs convertalis module) [0]\n --alignment-mode INT             How to compute\
  \ the alignment:\n                                  0: automatic\n             \
  \                     1: only score and end_pos\n                              \
  \    2: also start_pos and cov\n                                  3: also seq.id\n\
  \                                  4: only ungapped alignment [3]\n --alignment-output-mode\
  \ INT      How to compute the alignment:\n                                  0: automatic\n\
  \                                  1: only score and end_pos\n                 \
  \                 2: also start_pos and cov\n                                  3:\
  \ also seq.id\n                                  4: only ungapped alignment\n  \
  \                                5: score only (output) cluster format [0]\n --wrapped-scoring\
  \ BOOL           Double the (nucleotide) query sequence during the scoring process\
  \ to allow wrapped diagonal scoring around end and start [0]\n -e DOUBLE       \
  \                 List matches below this E-value (range 0.0-inf) [1.000E-03]\n\
  \ --min-seq-id FLOAT               List matches above this sequence identity (for\
  \ clustering) (range 0.0-1.0) [0.000]\n --min-aln-len INT                Minimum\
  \ alignment length (range 0-INT_MAX) [0]\n --seq-id-mode INT                0: alignment\
  \ length 1: shorter, 2: longer sequence [0]\n --alt-ali INT                    Show\
  \ up to this many alternative alignments [0]\n -c FLOAT                        \
  \ List matches above this fraction of aligned (covered) residues (see --cov-mode)\
  \ [0.000]\n --cov-mode INT                   0: coverage of query and target\n \
  \                                 1: coverage of target\n                      \
  \            2: coverage of query\n                                  3: target seq.\
  \ length has to be at least x% of query length\n                               \
  \   4: query seq. length has to be at least x% of target length\n              \
  \                    5: short seq. needs to be at least x% of the other seq. length\
  \ [0]\n --max-rejected INT               Maximum rejected alignments before alignment\
  \ calculation for a query is stopped [2147483647]\n --max-accept INT           \
  \      Maximum accepted alignments before alignment calculation for a query is stopped\
  \ [2147483647]\n --score-bias FLOAT               Score bias when computing SW alignment\
  \ (in bits) [0.000]\n --realign BOOL                   Compute more conservative,\
  \ shorter alignments (scores and E-values not changed) [0]\n --realign-score-bias\
  \ FLOAT       Additional bias when computing realignment [-0.200]\n --realign-max-seqs\
  \ INT           Maximum number of results to return in realignment [2147483647]\n\
  \ --gap-open TWIN                  Gap open cost [nucl:5,aa:11]\n --gap-extend TWIN\
  \                Gap extension cost [nucl:2,aa:1]\n --zdrop INT                \
  \      Maximal allowed difference between score values before alignment is truncated\
  \  (nucleotide alignment only) [40]\n --exhaustive-search-filter INT   Filter result\
  \ during search: 0: do not filter, 1: filter [0]\nprofile:                     \
  \   \n --pca FLOAT                      Pseudo count admixture strength [1.000]\n\
  \ --pcb FLOAT                      Pseudo counts: Neff at half of maximum admixture\
  \ (range 0.0-inf) [1.500]\n --mask-profile INT               Mask query sequence\
  \ of profile using tantan [0,1] [1]\n --e-profile DOUBLE               Include sequences\
  \ matches with < E-value thr. into the profile (>=0.0) [1.000E-03]\n --wg BOOL \
  \                       Use global sequence weighting for profile calculation [0]\n\
  \ --filter-msa INT                 Filter msa: 0: do not filter, 1: filter [1]\n\
  \ --max-seq-id FLOAT               Reduce redundancy of output MSA using max. pairwise\
  \ sequence identity [0.0,1.0] [0.900]\n --qid FLOAT                      Reduce\
  \ diversity of output MSAs using min.seq. identity with query sequences [0.0,1.0]\
  \ [0.000]\n --qsc FLOAT                      Reduce diversity of output MSAs using\
  \ min. score per aligned residue with query sequences [-50.0,100.0] [-20.000]\n\
  \ --cov FLOAT                      Filter output MSAs using min. fraction of query\
  \ residues covered by matched sequences [0.0,1.0] [0.000]\n --diff INT         \
  \              Filter MSAs by selecting most diverse set of sequences, keeping at\
  \ least this many seqs in each MSA block of length 50 [1000]\n --num-iterations\
  \ INT             Number of iterative profile search iterations [1]\n --exhaustive-search\
  \ BOOL         For bigger profile DB, run iteratively the search by greedily swapping\
  \ the search results [0]\n --lca-search BOOL                Efficient search for\
  \ LCA candidates [0]\nmisc:                           \n --rescore-mode INT    \
  \           Rescore diagonals with:\n                                  0: Hamming\
  \ distance\n                                  1: local alignment (score only)\n\
  \                                  2: local alignment\n                        \
  \          3: global alignment\n                                  4: longest alignment\
  \ fulfilling window quality criterion [0]\n --allow-deletion BOOL            Allow\
  \ deletions in a MSA [0]\n --min-length INT                 Minimum codon number\
  \ in open reading frames [10]\n --max-length INT                 Maximum codon number\
  \ in open reading frames [32734]\n --max-gaps INT                   Maximum number\
  \ of codons with gaps or unknown residues before an open reading frame is rejected\
  \ [2147483647]\n --contig-start-mode INT          Contig start can be 0: incomplete,\
  \ 1: complete, 2: both [2]\n --contig-end-mode INT            Contig end can be\
  \ 0: incomplete, 1: complete, 2: both [2]\n --orf-start-mode INT             Orf\
  \ fragment can be 0: from start to stop, 1: from any to stop, 2: from last encountered\
  \ start to stop (no start in the middle) [1]\n --forward-frames STR            \
  \ Comma-separated list of frames on the forward strand to be extracted [1,2,3]\n\
  \ --reverse-frames STR             Comma-separated list of frames on the reverse\
  \ strand to be extracted [1,2,3]\n --translation-table INT          1) CANONICAL,\
  \ 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4) MOLD_MITOCHONDRIAL, 5) INVERT_MITOCHONDRIAL,\
  \ 6) CILIATE\n                                  9) FLATWORM_MITOCHONDRIAL, 10) EUPLOTID,\
  \ 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14) ALT_FLATWORM_MITOCHONDRIAL\n\
  \                                  15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL,\
  \ 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL\n                 \
  \                 23) THRAUSTOCHYTRIUM_MITOCHONDRIAL, 24) PTEROBRANCHIA_MITOCHONDRIAL,\
  \ 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27) KARYORELICT, 28) CONDYLOSTOMA\n     \
  \                              29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA\
  \ [1]\n --translate INT                  Translate ORF to amino acid [0]\n --use-all-table-starts\
  \ BOOL      Use all alternatives for a start codon in the genetic table, if false\
  \ - only ATG (AUG) [0]\n --id-offset INT                  Numeric ids in index file\
  \ are offset by this value [0]\n --add-orf-stop BOOL              Add stop codon\
  \ '*' at complete start and end [0]\n --sequence-overlap INT           Overlap between\
  \ sequences [0]\n --sequence-split-mode INT        Sequence split mode 0: copy data,\
  \ 1: soft link data and write new index, [1]\n --headers-split-mode INT        \
  \ Header split mode: 0: split position, 1: original header [0]\n --search-type INT\
  \                Search type 0: auto 1: amino acid, 2: translated, 3: nucleotide,\
  \ 4: translated nucleotide alignment [0]\n --start-sens FLOAT               Start\
  \ sensitivity [4.000]\n --sens-steps INT                 Number of search steps\
  \ performed from --start-sens to -s [1]\ncommon:                         \n --sub-mat\
  \ TWIN                   Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]\n\
  \ --max-seq-len INT                Maximum sequence length [65535]\n --db-load-mode\
  \ INT               Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch\
  \ [0]\n --threads INT                    Number of CPU-cores used (all by default)\
  \ [2]\n --compressed INT                 Write compressed output [0]\n -v INT  \
  \                         Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3:\
  \ +info [3]\n --mpi-runner STR                 Use MPI on compute cluster with this\
  \ MPI command (e.g. \"mpirun -np 42\") []\n --force-reuse BOOL               Reuse\
  \ tmp filse in tmp/latest folder ignoring parameters and version changes [0]\n --remove-tmp-files\
  \ BOOL          Delete temporary files [0]\nexpert:                         \n --filter-hits\
  \ BOOL               Filter hits by seq.id. and coverage [0]\n --sort-results INT\
  \               Sort results: 0: no sorting, 1: sort by E-value (Alignment) or seq.id.\
  \ (Hamming) [0]\n --create-lookup INT              Create database lookup file (can\
  \ be very large) [0]\n --chain-alignments INT           Chain overlapping alignments\
  \ [0]\n --merge-query INT                Combine ORFs/split sequences to a single\
  \ entry [1]\n --strand INT                     Strand selection only works for DNA/DNA\
  \ search 0: reverse, 1: forward, 2: both [1]\n\nreferences:\n - Steinegger M, Soding\
  \ J: MMseqs2 enables sensitive protein sequence searching for the analysis of massive\
  \ data sets. Nature Biotechnology, 35(11), 1026-1028 (2017)\n"
generated_using:
- --help
docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
