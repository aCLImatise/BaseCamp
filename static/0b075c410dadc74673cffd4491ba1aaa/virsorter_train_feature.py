from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Directory, File, Int, Boolean, String

Virsorter_Train_Feature_V0_1_0 = CommandToolBuilder(tool="virsorter_train_feature", base_command=["virsorter", "train-feature"], inputs=[ToolInput(tag="in_working_dir", input_type=Directory(optional=True), prefix="--working-dir", doc=InputDocumentation(doc="output directory  [required]")), ToolInput(tag="in_seq_file", input_type=File(optional=True), prefix="--seqfile", doc=InputDocumentation(doc="genome sequence file for training; for file\npattern globbing, put quotes around the pattern,\neg. 'fasta-dir/*.fa'  [required]")), ToolInput(tag="in_hmm", input_type=File(optional=True), prefix="--hmm", doc=InputDocumentation(doc="customized viral HMMs for training; default to\nthe one used in VirSorter2")), ToolInput(tag="in_hallmark", input_type=File(optional=True), prefix="--hallmark", doc=InputDocumentation(doc="hallmark gene hmm list from -hmm for training (a\ntab separated file with three columns: 1. hmm\nname, 2. gene name of hmm, 3. hmm bit score\ncutoff); default to the one used for dsDNAphage\nin VirSorter2")), ToolInput(tag="in_prodigal_train", input_type=File(optional=True), prefix="--prodigal-train", doc=InputDocumentation(doc="customized training db from prodigal; default to\nthe one used in prodigal --meta mode")), ToolInput(tag="in_frags_per_genome", input_type=Int(optional=True), prefix="--frags-per-genome", doc=InputDocumentation(doc="number of random DNA fragments collected from\neach genome  [default: 5]")), ToolInput(tag="in_jobs", input_type=Int(optional=True), prefix="--jobs", doc=InputDocumentation(doc="max # of jobs in parallel  [default: 8]")), ToolInput(tag="in_min_length", input_type=Int(optional=True), prefix="--min-length", doc=InputDocumentation(doc="minimum size of random DNA fragment for training\n[default: 1000]")), ToolInput(tag="in_max_orf_per_seq", input_type=Int(optional=True), prefix="--max-orf-per-seq", doc=InputDocumentation(doc="Max # of orf used for computing taxonomic\nfeatures; if # of orf in a seq exceeds the max\nlimit, it is sub-sampled to this # to reduce\ncomputation; to turn off this, set it to -1\n[default: 20]")), ToolInput(tag="in_genome_as_bin", input_type=Boolean(optional=True), prefix="--genome-as-bin", doc=InputDocumentation(doc="if applied, each file (genome bin) is a genome\nin --seqfile, else each sequence is a genome\n[default: False]")), ToolInput(tag="in_use_cond_a_off", input_type=Boolean(optional=True), prefix="--use-conda-off", doc=InputDocumentation(doc="Stop using the conda envs (vs2.yaml) that come\nwith this package and use what are installed in\ncurrent system; Only useful when you want to\ninstall dependencies on your own with your own\npreferred versions  [default: False]")), ToolInput(tag="in_snake_make_args", input_type=String(optional=True), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_working_dir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_working_dir", type_hint=File()), doc=OutputDocumentation(doc="output directory  [required]"))], container="quay.io/biocontainers/virsorter:2.1--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Virsorter_Train_Feature_V0_1_0().translate("wdl")

