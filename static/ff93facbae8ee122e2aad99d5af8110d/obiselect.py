from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, Int, File

Obiselect_V0_1_0 = CommandToolBuilder(tool="obiselect", base_command=["obiselect"], inputs=[ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--DEBUG", doc=InputDocumentation(doc="Set logging in debug mode")), ToolInput(tag="in_without_progress_bar", input_type=Boolean(optional=True), prefix="--without-progress-bar", doc=InputDocumentation(doc="desactivate progress bar")), ToolInput(tag="in_category_attribute", input_type=String(optional=True), prefix="--category-attribute", doc=InputDocumentation(doc="Add one attribute to the list of attribute used for\ncategorizing sequence records")), ToolInput(tag="in_number", input_type=Int(optional=True), prefix="--number", doc=InputDocumentation(doc="number of sequence records to keep in each category")), ToolInput(tag="in_function", input_type=String(optional=True), prefix="--function", doc=InputDocumentation(doc="python code evaluated for each sequence record\n[default: random value]")), ToolInput(tag="in_min", input_type=Boolean(optional=True), prefix="--min", doc=InputDocumentation(doc="select sequence record in each group minimizing the\nfunction (exclusive with -M, -a, --median)")), ToolInput(tag="in_max", input_type=Boolean(optional=True), prefix="--max", doc=InputDocumentation(doc="select sequence record in each group maximizing the\nfunction (exclusive with -m, -a, --median)")), ToolInput(tag="in_mean", input_type=Boolean(optional=True), prefix="--mean", doc=InputDocumentation(doc="select sequence record in each group closest to the\nmean of the function (exclusive with -m, -M, --median)")), ToolInput(tag="in_median", input_type=Boolean(optional=True), prefix="--median", doc=InputDocumentation(doc="select sequence record in each group closest to the\nmedian of the function (exclusive with -m, -M, -a)")), ToolInput(tag="in_merge", input_type=String(optional=True), prefix="--merge", doc=InputDocumentation(doc="attributes to merge within each group")), ToolInput(tag="in_sample", input_type=String(optional=True), prefix="--sample", doc=InputDocumentation(doc="Tag containing sample descriptions, the default value\nis set to *merged_sample*")), ToolInput(tag="in_merge_ids", input_type=Boolean(optional=True), prefix="--merge-ids", doc=InputDocumentation(doc="add the merged id data to output")), ToolInput(tag="in_skip", input_type=String(optional=True), prefix="--skip", doc=InputDocumentation(doc="skip the N first sequences")), ToolInput(tag="in_only", input_type=String(optional=True), prefix="--only", doc=InputDocumentation(doc="treat only N sequences")), ToolInput(tag="in_genbank", input_type=Boolean(optional=True), prefix="--genbank", doc=InputDocumentation(doc="Input file is in genbank format")), ToolInput(tag="in_embl", input_type=Boolean(optional=True), prefix="--embl", doc=InputDocumentation(doc="Input file is in embl format")), ToolInput(tag="in_skip_on_error", input_type=Boolean(optional=True), prefix="--skip-on-error", doc=InputDocumentation(doc="Skip sequence entries with parse error")), ToolInput(tag="in_fast_a", input_type=Boolean(optional=True), prefix="--fasta", doc=InputDocumentation(doc="Input file is in fasta nucleic format (including\nobitools fasta extentions)")), ToolInput(tag="in_eco_pcr", input_type=Boolean(optional=True), prefix="--ecopcr", doc=InputDocumentation(doc="Input file is in ecopcr format")), ToolInput(tag="in_raw_fast_a", input_type=Boolean(optional=True), prefix="--raw-fasta", doc=InputDocumentation(doc="Input file is in fasta format (but more tolerant to\nformat variant)")), ToolInput(tag="in_sanger", input_type=Boolean(optional=True), prefix="--sanger", doc=InputDocumentation(doc="Input file is in sanger fastq nucleic format (standard\nfastq)")), ToolInput(tag="in_solexa", input_type=Boolean(optional=True), prefix="--solexa", doc=InputDocumentation(doc="Input file is in fastq nucleic format produced by\nsolexa sequencer")), ToolInput(tag="in_eco_pcr_db", input_type=Boolean(optional=True), prefix="--ecopcrdb", doc=InputDocumentation(doc="Input file is an ecopcr database")), ToolInput(tag="in_nuc", input_type=Boolean(optional=True), prefix="--nuc", doc=InputDocumentation(doc="Input file contains nucleic sequences")), ToolInput(tag="in_prot", input_type=Boolean(optional=True), prefix="--prot", doc=InputDocumentation(doc="Input file contains protein sequences")), ToolInput(tag="in_fast_a_output", input_type=Boolean(optional=True), prefix="--fasta-output", doc=InputDocumentation(doc="Output sequences in obitools fasta format")), ToolInput(tag="in_fast_q_output", input_type=Boolean(optional=True), prefix="--fastq-output", doc=InputDocumentation(doc="Output sequences in sanger fastq format")), ToolInput(tag="in_eco_pcr_db_output", input_type=String(optional=True), prefix="--ecopcrdb-output", doc=InputDocumentation(doc="Output sequences in ecopcr database format (sequence\nrecords are not printed on standard output)")), ToolInput(tag="in_uppercase", input_type=Boolean(optional=True), prefix="--uppercase", doc=InputDocumentation(doc="Print sequences in upper case (default is lower case)")), ToolInput(tag="in_database", input_type=File(optional=True), prefix="--database", doc=InputDocumentation(doc="ecoPCR taxonomy Database name")), ToolInput(tag="in_taxonomy_dump", input_type=File(optional=True), prefix="--taxonomy-dump", doc=InputDocumentation(doc="NCBI Taxonomy dump repository name\n"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Obiselect_V0_1_0().translate("wdl", allow_empty_container=True)

