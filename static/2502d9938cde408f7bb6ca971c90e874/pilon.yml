!Command
command:
- pilon
positional: []
named:
- !Flag
  description: "The input genome we are trying to improve, which must be the reference\
    \ used\nfor the bam alignments.  At least one of --frags or --jumps must also\
    \ be given."
  synonyms:
  - --genome
  args: !SimpleFlagArg
    name: genome.fasta
  optional: true
- !Flag
  description: "A bam file consisting of fragment paired-end alignments, aligned to\
    \ the --genome\nargument using bwa or bowtie2.  This argument may be specifed\
    \ more than once."
  synonyms:
  - --frags
  args: !SimpleFlagArg
    name: frags.bam
  optional: true
- !Flag
  description: "A bam file consisting of jump (mate pair) paired-end alignments, aligned\
    \ to the\n--genome argument using bwa or bowtie2.  This argument may be specifed\
    \ more than once."
  synonyms:
  - --jumps
  args: !SimpleFlagArg
    name: jumps.bam
  optional: true
- !Flag
  description: "A bam file consisting of unpaired alignments, aligned to the --genome\
    \ argument\nusing bwa or bowtie2.  This argument may be specifed more than once."
  synonyms:
  - --unpaired
  args: !SimpleFlagArg
    name: unpaired.bam
  optional: true
- !Flag
  description: "A bam file of unknown type; Pilon will scan it and attempt to classify\
    \ it as one\nof the above bam types."
  synonyms:
  - --bam
  args: !SimpleFlagArg
    name: any.bam
  optional: true
- !Flag
  description: Prefix for output files
  synonyms:
  - --output
  args: !SimpleFlagArg
    name: prefix
  optional: true
- !Flag
  description: Use this directory for all output files.
  synonyms:
  - --outdir
  args: !SimpleFlagArg
    name: directory
  optional: true
- !Flag
  description: If specified, a file listing changes in the <output>.fasta will be
    generated.
  synonyms:
  - --changes
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: If specified, a vcf file will be generated
  synonyms:
  - --vcf
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "If specified, the VCF will contain a QE (quality-weighted evidence)\
    \ field rather\nthan the default QP (quality-weighted percentage of evidence)\
    \ field."
  synonyms:
  - --vcfqe
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "This options will cause many track files (*.bed, *.wig) suitable for\
    \ viewing in\na genome browser to be written."
  synonyms:
  - --tracks
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Sets up heuristics for variant calling, as opposed to assembly improvement;\n\
    equivalent to \"--vcf --fix all,breaks\"."
  synonyms:
  - --variant
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Input FASTA elements larger than this will be processed in smaller\
    \ pieces not to\nexceed this size (default 10000000)."
  synonyms:
  - --chunksize
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Sample is from diploid organism; will eventually affect calling of
    heterozygous SNPs
  synonyms:
  - --diploid
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "A comma-separated list of categories of issues to try to fix:\n\"\
    snps\": try to fix individual base errors;\n\"indels\": try to fix small indels;\n\
    \"gaps\": try to fill gaps;\n\"local\": try to detect and fix local misassemblies;\n\
    \"all\": all of the above (default);\n\"bases\": shorthand for \"snps\" and \"\
    indels\" (for back compatibility);\n\"none\": none of the above; new fasta file\
    \ will not be written.\nThe following are experimental fix types:\n\"amb\": fix\
    \ ambiguous bases in fasta output (to most likely alternative);\n\"breaks\": allow\
    \ local reassembly to open new gaps (with \"local\");\n\"circles\": try to close\
    \ circlar elements when used with long corrected reads;\n\"novel\": assemble novel\
    \ sequence from unaligned non-jump reads."
  synonyms:
  - --fix
  args: !SimpleFlagArg
    name: fixlist
  optional: true
- !Flag
  description: Dump reads for local re-assemblies.
  synonyms:
  - --dumpreads
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Use reads marked as duplicates in the input BAMs (ignored by default).
  synonyms:
  - --duplicates
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Output IUPAC ambiguous base codes in the output FASTA file when appropriate.
  synonyms:
  - --iupac
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Use reads which failed sequencer quality filtering (ignored by default).
  synonyms:
  - --nonpf
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Only process the specified target(s).  Targets are comma-separated,\
    \ and each target\nis a fasta element name optionally followed by a base range.\n\
    Example: \"scaffold00001,scaffold00002:10000-20000\" would result in processing\
    \ all of\nscaffold00001 and coordinates 10000-20000 of scaffold00002.\nIf \"targetlist\"\
    \ is the name of a file, each line will be treated as a target\nspecification."
  synonyms:
  - --targets
  args: !SimpleFlagArg
    name: targetlist
  optional: true
- !Flag
  description: Degree of parallelism to use for certain processing (default 1). Experimental.
  synonyms:
  - --threads
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: More verbose output.
  synonyms:
  - --verbose
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Debugging output (implies verbose).
  synonyms:
  - --debug
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Assumes bases are of this quality if quals are no present in input
    BAMs (default 10).
  synonyms:
  - --defaultqual
  args: !SimpleFlagArg
    name: qual
  optional: true
- !Flag
  description: "Controls how much of the well-aligned reads will be used; this many\
    \ bases at each\nend of the good reads will be ignored (default 10)."
  synonyms:
  - --flank
  args: !SimpleFlagArg
    name: nbases
  optional: true
- !Flag
  description: Closed gaps must be within this number of bases of true size to be
    closed (100000)
  synonyms:
  - --gapmargin
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Kmer size used by internal assembler (default 47).
  synonyms:
  - --K
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Variants (snps and indels) will only be called if there is coverage\
    \ of good pairs\nat this depth or more; if this value is >= 1, it is an absolute\
    \ depth, if it is a\nfraction < 1, then minimum depth is computed by multiplying\
    \ this value by the mean\ncoverage for the region, with a minumum value of 5 (default\
    \ 0.1: min depth to call\nis 10% of mean coverage or 5, whichever is greater)."
  synonyms:
  - --mindepth
  args: !SimpleFlagArg
    name: depth
  optional: true
- !Flag
  description: Minimum size for unclosed gaps (default 10)
  synonyms:
  - --mingap
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Minimum alignment mapping quality for a read to count in pileups (default
    0)
  synonyms:
  - --minmq
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Minimum base quality to consider for pileups (default 0)
  synonyms:
  - --minqual
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Skip making a pass through the input BAM files to identify stray pairs,\
    \ that is,\nthose pairs in which both reads are aligned but not marked valid because\
    \ they have\ninconsistent orientation or separation. Identifying stray pairs can\
    \ help fill gaps\nand assemble larger insertions, especially of repeat content.\
    \  However, doing so\nsometimes consumes considerable memory.\n"
  synonyms:
  - --nostrays
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag: !Flag
  description: Print version string and exit.
  synonyms:
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "Pilon version 1.23 Mon Nov 26 16:04:05 2018 -0500\n\n    Usage: pilon\
  \ --genome genome.fasta [--frags frags.bam] [--jumps jumps.bam] [--unpaired unpaired.bam]\n\
  \                 [...other options...]\n           pilon --help for option details\
  \ \n\n\n         INPUTS:\n           --genome genome.fasta\n              The input\
  \ genome we are trying to improve, which must be the reference used\n          \
  \    for the bam alignments.  At least one of --frags or --jumps must also be given.\n\
  \           --frags frags.bam\n              A bam file consisting of fragment paired-end\
  \ alignments, aligned to the --genome\n              argument using bwa or bowtie2.\
  \  This argument may be specifed more than once.\n           --jumps jumps.bam\n\
  \              A bam file consisting of jump (mate pair) paired-end alignments,\
  \ aligned to the\n              --genome argument using bwa or bowtie2.  This argument\
  \ may be specifed more than once.\n           --unpaired unpaired.bam\n        \
  \      A bam file consisting of unpaired alignments, aligned to the --genome argument\
  \ \n              using bwa or bowtie2.  This argument may be specifed more than\
  \ once.\n           --bam any.bam\n              A bam file of unknown type; Pilon\
  \ will scan it and attempt to classify it as one\n              of the above bam\
  \ types.\n         OUTPUTS:\n           --output prefix\n              Prefix for\
  \ output files\n           --outdir directory\n              Use this directory\
  \ for all output files.\n           --changes\n              If specified, a file\
  \ listing changes in the <output>.fasta will be generated.\n           --vcf\n \
  \             If specified, a vcf file will be generated\n           --vcfqe\n \
  \              If specified, the VCF will contain a QE (quality-weighted evidence)\
  \ field rather\n               than the default QP (quality-weighted percentage\
  \ of evidence) field.\n           --tracks\n               This options will cause\
  \ many track files (*.bed, *.wig) suitable for viewing in\n               a genome\
  \ browser to be written.\n         CONTROL:\n           --variant\n            \
  \  Sets up heuristics for variant calling, as opposed to assembly improvement;\n\
  \              equivalent to \"--vcf --fix all,breaks\".\n           --chunksize\n\
  \              Input FASTA elements larger than this will be processed in smaller\
  \ pieces not to\n              exceed this size (default 10000000).\n          \
  \ --diploid\n              Sample is from diploid organism; will eventually affect\
  \ calling of heterozygous SNPs\n           --fix fixlist\n              A comma-separated\
  \ list of categories of issues to try to fix:\n                \"snps\": try to\
  \ fix individual base errors;\n                \"indels\": try to fix small indels;\n\
  \                \"gaps\": try to fill gaps;\n                \"local\": try to\
  \ detect and fix local misassemblies;\n                \"all\": all of the above\
  \ (default);\n                \"bases\": shorthand for \"snps\" and \"indels\" (for\
  \ back compatibility);\n                \"none\": none of the above; new fasta file\
  \ will not be written.\n              The following are experimental fix types:\n\
  \                \"amb\": fix ambiguous bases in fasta output (to most likely alternative);\n\
  \                \"breaks\": allow local reassembly to open new gaps (with \"local\"\
  );\n                \"circles\": try to close circlar elements when used with long\
  \ corrected reads;\n                \"novel\": assemble novel sequence from unaligned\
  \ non-jump reads.\n           --dumpreads\n              Dump reads for local re-assemblies.\n\
  \           --duplicates\n              Use reads marked as duplicates in the input\
  \ BAMs (ignored by default).\n           --iupac\n              Output IUPAC ambiguous\
  \ base codes in the output FASTA file when appropriate.\n           --nonpf\n  \
  \            Use reads which failed sequencer quality filtering (ignored by default).\n\
  \           --targets targetlist\n              Only process the specified target(s).\
  \  Targets are comma-separated, and each target\n              is a fasta element\
  \ name optionally followed by a base range.\n              Example: \"scaffold00001,scaffold00002:10000-20000\"\
  \ would result in processing all of\n              scaffold00001 and coordinates\
  \ 10000-20000 of scaffold00002.\n              If \"targetlist\" is the name of\
  \ a file, each line will be treated as a target\n              specification.\n\
  \           --threads\n              Degree of parallelism to use for certain processing\
  \ (default 1). Experimental.\n           --verbose\n              More verbose output.\n\
  \           --debug\n              Debugging output (implies verbose).\n       \
  \    --version\n              Print version string and exit.\n         HEURISTICS:\n\
  \           --defaultqual qual\n              Assumes bases are of this quality\
  \ if quals are no present in input BAMs (default 10).\n           --flank nbases\n\
  \              Controls how much of the well-aligned reads will be used; this many\
  \ bases at each\n              end of the good reads will be ignored (default 10).\n\
  \           --gapmargin\n              Closed gaps must be within this number of\
  \ bases of true size to be closed (100000)\n           --K\n              Kmer size\
  \ used by internal assembler (default 47).\n           --mindepth depth\n      \
  \        Variants (snps and indels) will only be called if there is coverage of\
  \ good pairs\n              at this depth or more; if this value is >= 1, it is\
  \ an absolute depth, if it is a\n              fraction < 1, then minimum depth\
  \ is computed by multiplying this value by the mean\n              coverage for\
  \ the region, with a minumum value of 5 (default 0.1: min depth to call \n     \
  \         is 10% of mean coverage or 5, whichever is greater).\n           --mingap\n\
  \              Minimum size for unclosed gaps (default 10)\n           --minmq\n\
  \              Minimum alignment mapping quality for a read to count in pileups\
  \ (default 0)\n           --minqual\n              Minimum base quality to consider\
  \ for pileups (default 0)\n           --nostrays\n              Skip making a pass\
  \ through the input BAM files to identify stray pairs, that is,\n              those\
  \ pairs in which both reads are aligned but not marked valid because they have\n\
  \              inconsistent orientation or separation. Identifying stray pairs can\
  \ help fill gaps\n              and assemble larger insertions, especially of repeat\
  \ content.  However, doing so\n              sometimes consumes considerable memory.\n"
generated_using:
- --help
