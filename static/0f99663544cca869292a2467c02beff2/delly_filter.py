from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String

Delly_Filter_V0_1_0 = CommandToolBuilder(tool="delly_filter", base_command=["delly", "filter"], inputs=[ToolInput(tag="in_arg_somatic_somatic", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc="[ --filter ] arg (=somatic)        Filter mode (somatic, germline)")), ToolInput(tag="in_arg_filtered_bcf", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="[ --outfile ] arg (='sv.bcf')      Filtered SV BCF output file")), ToolInput(tag="in_arg_min_fractional", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="[ --altaf ] arg (=0.200000003)     min. fractional ALT support")), ToolInput(tag="in_arg_min_sv", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="[ --minsize ] arg (=0)             min. SV size")), ToolInput(tag="in_arg_max_sv", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="[ --maxsize ] arg (=500000000)     max. SV size")), ToolInput(tag="in_arg_min_fraction", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="[ --ratiogeno ] arg (=0.75)        min. fraction of genotyped samples")), ToolInput(tag="in_filter_sites_pass", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="[ --pass ]                         Filter sites for PASS")), ToolInput(tag="in_arg_twocolumn_sample", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="[ --samples ] arg                  Two-column sample file listing sample\nname and tumor or control")), ToolInput(tag="in_arg_min_coverage", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="[ --coverage ] arg (=10)           min. coverage in tumor")), ToolInput(tag="in_arg_max_fractional", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="[ --controlcontamination ] arg (=0)\nmax. fractional ALT support in control")), ToolInput(tag="in_arg_min_median", input_type=Boolean(optional=True), prefix="-q", doc=InputDocumentation(doc="[ --gq ] arg (=15)                 min. median GQ for carriers and")), ToolInput(tag="in_arg_min_readdepth", input_type=Boolean(optional=True), prefix="-u", doc=InputDocumentation(doc="[ --rddup ] arg (=1.20000005)      min. read-depth ratio of carrier vs.\nnon-carrier for a duplication\n")), ToolInput(tag="in_non_carriers", input_type=String(), position=0, doc=InputDocumentation(doc="-e [ --rddel ] arg (=0.800000012)     max. read-depth ratio of carrier vs. "))], outputs=[ToolOutput(tag="out_arg_filtered_bcf", output_type=File(optional=True), selector=InputSelector(input_to_select="in_arg_filtered_bcf", type_hint=File()), doc=OutputDocumentation(doc="[ --outfile ] arg (='sv.bcf')      Filtered SV BCF output file"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Delly_Filter_V0_1_0().translate("wdl", allow_empty_container=True)

