from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, File, String

Samtools_Markdup_V0_1_0 = CommandToolBuilder(tool="samtools_markdup", base_command=["samtools", "markdup"], inputs=[ToolInput(tag="in_remove_duplicate_reads", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="Remove duplicate reads")), ToolInput(tag="in_max_read_bases", input_type=Int(optional=True), prefix="-l", doc=InputDocumentation(doc="Max read length (default 300 bases)")), ToolInput(tag="in_mark_supplementary_alignments", input_type=Boolean(optional=True), prefix="-S", doc=InputDocumentation(doc="Mark supplementary alignments of duplicates as duplicates (slower).")), ToolInput(tag="in_report_stats", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="Report stats.")), ToolInput(tag="in_write_stats_named", input_type=File(optional=True), prefix="-f", doc=InputDocumentation(doc="Write stats to named file.  Implies -s.")), ToolInput(tag="in_write_temporary_files", input_type=String(optional=True), prefix="-T", doc=InputDocumentation(doc="Write temporary files to PREFIX.samtools.nnnn.nnnn.tmp.")), ToolInput(tag="in_optical_distance_set", input_type=Int(optional=True), prefix="-d", doc=InputDocumentation(doc="Optical distance (if set, marks with dt tag)")), ToolInput(tag="in_clear_previous_duplicate", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="Clear previous duplicate settings and tags.")), ToolInput(tag="in_mode", input_type=String(optional=True), prefix="--mode", doc=InputDocumentation(doc="Duplicate decision method for paired reads.\nTYPE = t measure positions based on template start/end (default).\ns measure positions based on sequence start.")), ToolInput(tag="in_reduce_optical_accuracy", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="Reduce optical duplicate accuracy (faster results with many duplicates).")), ToolInput(tag="in_output_uncompressed_data", input_type=Boolean(optional=True), prefix="-u", doc=InputDocumentation(doc="Output uncompressed data")), ToolInput(tag="in_include_fails", input_type=Boolean(optional=True), prefix="--include-fails", doc=InputDocumentation(doc="Include quality check failed reads.")), ToolInput(tag="in_no_pg", input_type=Boolean(optional=True), prefix="--no-PG", doc=InputDocumentation(doc="Do not add a PG line")), ToolInput(tag="in_no_multi_dup", input_type=Boolean(optional=True), prefix="--no-multi-dup", doc=InputDocumentation(doc="Reduced duplicates of duplicates checking.")), ToolInput(tag="in_mark_primary_duplicates", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="Mark primary duplicates with the name of the original in a 'do' tag. Mainly for information and debugging.")), ToolInput(tag="in_input_fmt_option", input_type=File(optional=True), prefix="--input-fmt-option", doc=InputDocumentation(doc="[=VAL]\nSpecify a single input file format option in the form\nof OPTION or OPTION=VALUE")), ToolInput(tag="in_output_fmt", input_type=String(optional=True), prefix="--output-fmt", doc=InputDocumentation(doc="[,OPT[=VAL]]...\nSpecify output format (SAM, BAM, CRAM)")), ToolInput(tag="in_output_fmt_option", input_type=File(optional=True), prefix="--output-fmt-option", doc=InputDocumentation(doc="[=VAL]\nSpecify a single output file format option in the form\nof OPTION or OPTION=VALUE")), ToolInput(tag="in_reference", input_type=File(optional=True), prefix="--reference", doc=InputDocumentation(doc="Reference sequence FASTA FILE [null]")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of additional threads to use [0]")), ToolInput(tag="in_write_index", input_type=Boolean(optional=True), prefix="--write-index", doc=InputDocumentation(doc="Automatically index the output files [off]")), ToolInput(tag="in_verbosity", input_type=Int(optional=True), prefix="--verbosity", doc=InputDocumentation(doc="Set level of verbosity")), ToolInput(tag="in_input_dot_bam", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_output_dot_bam", input_type=String(), position=1, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output_fmt_option", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_fmt_option", type_hint=File()), doc=OutputDocumentation(doc="[=VAL]\nSpecify a single output file format option in the form\nof OPTION or OPTION=VALUE"))], container="quay.io/biocontainers/samtools:1.12--hd5e65b6_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Samtools_Markdup_V0_1_0().translate("wdl")

