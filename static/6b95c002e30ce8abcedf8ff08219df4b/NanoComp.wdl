version 1.0

task NanoComp {
  input {
    Int? threads
    Directory? outdir
    String? prefix
    Boolean? verbose
    Boolean? raw
    Boolean? store
    File? tsv_stats
    String? read_type
    Int? maxlength
    Int? minlength
    Boolean? barcoded
    File? split_runs
    String? format
    Array[String] names
    Array[String] colors
    String? plot
    String? title
    String? dpi
    Array[File] fast_a
    Array[String] fast_q
    Array[String] summary
    Array[String] bam
    Array[File] ub_am
    Array[File] cram
    Array[File] pickle
    Array[File] feather
    Boolean? v
  }
  command <<<
    NanoComp \
      ~{if defined(threads) then ("--threads " +  '"' + threads + '"') else ""} \
      ~{if defined(outdir) then ("--outdir " +  '"' + outdir + '"') else ""} \
      ~{if defined(prefix) then ("--prefix " +  '"' + prefix + '"') else ""} \
      ~{if (verbose) then "--verbose" else ""} \
      ~{if (raw) then "--raw" else ""} \
      ~{if (store) then "--store" else ""} \
      ~{if (tsv_stats) then "--tsv_stats" else ""} \
      ~{if defined(read_type) then ("--readtype " +  '"' + read_type + '"') else ""} \
      ~{if defined(maxlength) then ("--maxlength " +  '"' + maxlength + '"') else ""} \
      ~{if defined(minlength) then ("--minlength " +  '"' + minlength + '"') else ""} \
      ~{if (barcoded) then "--barcoded" else ""} \
      ~{if defined(split_runs) then ("--split_runs " +  '"' + split_runs + '"') else ""} \
      ~{if defined(format) then ("--format " +  '"' + format + '"') else ""} \
      ~{if defined(names) then ("--names " +  '"' + names + '"') else ""} \
      ~{if defined(colors) then ("--colors " +  '"' + colors + '"') else ""} \
      ~{if defined(plot) then ("--plot " +  '"' + plot + '"') else ""} \
      ~{if defined(title) then ("--title " +  '"' + title + '"') else ""} \
      ~{if defined(dpi) then ("--dpi " +  '"' + dpi + '"') else ""} \
      ~{if defined(fast_a) then ("--fasta " +  '"' + fast_a + '"') else ""} \
      ~{if defined(fast_q) then ("--fastq " +  '"' + fast_q + '"') else ""} \
      ~{if defined(summary) then ("--summary " +  '"' + summary + '"') else ""} \
      ~{if defined(bam) then ("--bam " +  '"' + bam + '"') else ""} \
      ~{if defined(ub_am) then ("--ubam " +  '"' + ub_am + '"') else ""} \
      ~{if defined(cram) then ("--cram " +  '"' + cram + '"') else ""} \
      ~{if defined(pickle) then ("--pickle " +  '"' + pickle + '"') else ""} \
      ~{if defined(feather) then ("--feather " +  '"' + feather + '"') else ""} \
      ~{if (v) then "-v" else ""}
  >>>
  runtime {
    docker: "quay.io/biocontainers/nanocomp:1.13.1--py_0"
  }
  parameter_meta {
    threads: "Set the allowed number of threads to be used by the script"
    outdir: "Specify directory in which output has to be created."
    prefix: "Specify an optional prefix to be used for the output files."
    verbose: "Write log messages also to terminal."
    raw: "Store the extracted data in tab separated file."
    store: "Store the extracted data in a pickle file for future plotting."
    tsv_stats: "Output the stats file as a properly formatted TSV."
    read_type: "Which read type to extract information about from summary. Options are 1D, 2D,\\n1D2"
    maxlength: "Drop reads longer than length specified."
    minlength: "Drop reads shorter than length specified."
    barcoded: "Barcoded experiment in summary format, splitting per barcode."
    split_runs: "File: Split the summary on run IDs and use names in tsv file. Mandatory header\\nfields are 'NAME' and 'RUN_ID'."
    format: "Specify the output format of the plots."
    names: "Specify the names to be used for the datasets"
    colors: "Specify the colors to be used for the datasets"
    plot: "Which plot type to use: 'box', 'violin' (default), 'ridge' (joyplot) or 'false'\\n(no plots)"
    title: "Add a title to all plots, requires quoting if using spaces"
    dpi: "Set the dpi for saving images"
    fast_a: "Data is in (compressed) fasta format."
    fast_q: "Data is in (compressed) fastq format."
    summary: "Data is in (compressed) summary files generated by albacore or guppy."
    bam: "Data is in sorted bam files."
    ub_am: "Data is in one or more unmapped bam file(s)."
    cram: "Data is in one or more sorted cram file(s)."
    pickle: "Data is in one or more pickle file(s) from using NanoComp/NanoPlot."
    feather: "Data is in one or more feather file(s)."
    v: ""
  }
  output {
    File out_stdout = stdout()
    Directory out_outdir = "${in_outdir}"
    File out_tsv_stats = "${in_tsv_stats}"
  }
}