from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, Boolean, Directory, String, File

Analyzerepeats_Pl_V0_1_0 = CommandToolBuilder(tool="analyzeRepeats.pl", base_command=["analyzeRepeats.pl"], inputs=[ToolInput(tag="in_lone", input_type=Int(optional=True), prefix="-L1", doc=InputDocumentation(doc="(level one 'repeat name', i.e. AluSx3)")), ToolInput(tag="in_l_two", input_type=Int(optional=True), prefix="-L2", doc=InputDocumentation(doc="(level two 'repeat family', i.e. SINE)")), ToolInput(tag="in_l_three", input_type=Int(optional=True), prefix="-L3", doc=InputDocumentation(doc="(level three 'repeat class', i.e. Alu)")), ToolInput(tag="in_max_div", input_type=Boolean(optional=True), prefix="-maxdiv", doc=InputDocumentation(doc="(max divergence, i.e. -div 0.10, default: 1.0)")), ToolInput(tag="in_mind_iv", input_type=Boolean(optional=True), prefix="-mindiv", doc=InputDocumentation(doc="(min divergence, default: 0)")), ToolInput(tag="in_minlength", input_type=Boolean(optional=True), prefix="-minLength", doc=InputDocumentation(doc="<#> (only return repeats at lest this length, default: 0)")), ToolInput(tag="in_maxlength", input_type=Boolean(optional=True), prefix="-maxLength", doc=InputDocumentation(doc="<#> (only return repeats less than % of full length, default: no max)")), ToolInput(tag="in_minlength_p", input_type=Boolean(optional=True), prefix="-minLengthP", doc=InputDocumentation(doc="<#> (only return repeats at lest % of full length, default: 0%)")), ToolInput(tag="in_maxlength_p", input_type=Boolean(optional=True), prefix="-maxLengthP", doc=InputDocumentation(doc="<#> (only return repeats less than % of full length, default: 100%)")), ToolInput(tag="in_condense_l_two", input_type=Boolean(optional=True), prefix="-condenseL2", doc=InputDocumentation(doc="(combine read counts for repeats for same L2 or L3 annotation)")), ToolInput(tag="in_rms_k", input_type=Boolean(optional=True), prefix="-rmsk", doc=InputDocumentation(doc="(force filtering of repeats in case it thinks your file is for RNA)")), ToolInput(tag="in_five_p", input_type=Boolean(optional=True), prefix="-5p", doc=InputDocumentation(doc="(return peak files centered on 5' end of repeats)")), ToolInput(tag="in_three_p", input_type=Boolean(optional=True), prefix="-3p", doc=InputDocumentation(doc="(return peak files centered on 3' end of repeats)")), ToolInput(tag="in_og", input_type=Boolean(optional=True), prefix="-og", doc=InputDocumentation(doc="(return positions relative to full length repeats)")), ToolInput(tag="in_gff_three", input_type=Boolean(optional=True), prefix="-gff3", doc=InputDocumentation(doc="(for GFF or GFF3 formated files - ideally use a GTF formated file, default)")), ToolInput(tag="in_gid", input_type=Boolean(optional=True), prefix="-gid", doc=InputDocumentation(doc="(use gene_id instead of transcript_id when parsing GTF file)")), ToolInput(tag="in_list_experiment_directories", input_type=Directory(optional=True), prefix="-d", doc=InputDocumentation(doc="[tag directory 2] ... (list of experiment directories to show\ntag counts for) NOTE: -dfile <file> where file is a list of directories in first column")), ToolInput(tag="in_count", input_type=Int(optional=True), prefix="-count", doc=InputDocumentation(doc="(regions to count reads in, default: genes)\nSpecify '-pausingOptions' to get more options for pausing analysis for GRO-Seq data")), ToolInput(tag="in_strand", input_type=Boolean(optional=True), prefix="-strand", doc=InputDocumentation(doc="<+|-|both> (count tags on indicated strand, default: both)")), ToolInput(tag="in_pc", input_type=Boolean(optional=True), prefix="-pc", doc=InputDocumentation(doc="<#> or -tbp <#> (maximum tags to count per position, default: 0=no limit)")), ToolInput(tag="in_log", input_type=Boolean(optional=True), prefix="-log", doc=InputDocumentation(doc="(output tag counts as randomized log2 values - for scatter plots)")), ToolInput(tag="in_sqrt", input_type=Boolean(optional=True), prefix="-sqrt", doc=InputDocumentation(doc="(output tag counts as randomized sqrt values - for scatter plots)")), ToolInput(tag="in_condense_genes", input_type=Boolean(optional=True), prefix="-condenseGenes", doc=InputDocumentation(doc="(Only report one transcript from each gene locus with highest expression)")), ToolInput(tag="in_no_condensing", input_type=Boolean(optional=True), prefix="-noCondensing", doc=InputDocumentation(doc="(do not condense counts from entries will same ID, default: do condense)")), ToolInput(tag="in_no_condensing_parts", input_type=Boolean(optional=True), prefix="-noCondensingParts", doc=InputDocumentation(doc="(i.e. report exons separately)")), ToolInput(tag="in_min", input_type=Boolean(optional=True), prefix="-min", doc=InputDocumentation(doc="<#> (minimum expression value to print, default: none)")), ToolInput(tag="in_no_adj", input_type=String(optional=True), prefix="-noadj", doc=InputDocumentation(doc="(Don't normalize, report raw counts)")), ToolInput(tag="in_rp_km", input_type=Boolean(optional=True), prefix="-rpkm", doc=InputDocumentation(doc="(Report results as fragments per kb per million mapped)")), ToolInput(tag="in_tpm", input_type=Boolean(optional=True), prefix="-tpm", doc=InputDocumentation(doc="(Report transcripts per million)")), ToolInput(tag="in_norm", input_type=Boolean(optional=True), prefix="-norm", doc=InputDocumentation(doc="<#> (Normalize to total mapped tags: default 1e7)")), ToolInput(tag="in_norm_matrix", input_type=Boolean(optional=True), prefix="-normMatrix", doc=InputDocumentation(doc="<#> (Normalize to total tags in gene expression matrix: not used)")), ToolInput(tag="in_r_log", input_type=Boolean(optional=True), prefix="-rlog", doc=InputDocumentation(doc="(quantile/variance normalization on reported genes using DESeq2 rlog funcition, needs R)")), ToolInput(tag="in_vst", input_type=Boolean(optional=True), prefix="-vst", doc=InputDocumentation(doc="(quantile/variance normalization on reported genes using DESeq2 vst function, needs R)")), ToolInput(tag="in_quantile", input_type=Boolean(optional=True), prefix="-quantile", doc=InputDocumentation(doc="(quantile normalization on reported genes)")), ToolInput(tag="in_upstream", input_type=Boolean(optional=True), prefix="-upstream", doc=InputDocumentation(doc="<#> (Distance upstream of each repeat to check for reads, default: 0 [off])")), ToolInput(tag="in_downstream", input_type=Boolean(optional=True), prefix="-downstream", doc=InputDocumentation(doc="<#> (Distance downstream to each repeat to check for reads, default: 0 [off])")), ToolInput(tag="in_only_keep_repeats", input_type=Boolean(optional=True), prefix="-L", doc=InputDocumentation(doc="<#> (Only keep repeats with local enrichment greater than #, default: keep all)")), ToolInput(tag="in_g_was_catalog", input_type=File(optional=True), prefix="-gwasCatalog", doc=InputDocumentation(doc="(Find overlapping GWAS Catalog file from UCSC)")), ToolInput(tag="in_input_file", input_type=File(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_genome", input_type=String(), position=1, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Analyzerepeats_Pl_V0_1_0().translate("wdl", allow_empty_container=True)

