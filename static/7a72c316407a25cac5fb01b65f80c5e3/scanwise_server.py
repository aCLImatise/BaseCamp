from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, String

Scanwise_Server_V0_1_0 = CommandToolBuilder(tool="scanwise_server", base_command=["scanwise_server"], inputs=[ToolInput(tag="in_compress", input_type=Boolean(optional=True), prefix="-compress", doc=InputDocumentation(doc="use compressed index, for large indexes")), ToolInput(tag="in_hash", input_type=Boolean(optional=True), prefix="-hash", doc=InputDocumentation(doc="use glib hash not array (far slower, but easier on the memory for small DBs)")), ToolInput(tag="in_two_hit", input_type=Boolean(optional=True), prefix="-twohit", doc=InputDocumentation(doc="use two hit seed HSP strategy (can be faster for big databases)")), ToolInput(tag="in_streamed", input_type=Boolean(optional=True), prefix="-streamed", doc=InputDocumentation(doc="use streamed index (more compact, higher run-time)")), ToolInput(tag="in_oc_file", input_type=Boolean(optional=True), prefix="-ocfile", doc=InputDocumentation(doc="occupancy file for array/streamed indexes (large), for debugging")), ToolInput(tag="in_use_vanilla", input_type=Boolean(optional=True), prefix="-usevanilla", doc=InputDocumentation(doc="use a vanilla implementation only")), ToolInput(tag="in_usethreads", input_type=Boolean(optional=True), prefix="-usethreads", doc=InputDocumentation(doc="use a threaded query scan implementation only")), ToolInput(tag="in_threaded_db", input_type=Boolean(optional=True), prefix="-threadeddb", doc=InputDocumentation(doc="use a threaded database scan implementation")), ToolInput(tag="in_ordered", input_type=Boolean(optional=True), prefix="-ordered", doc=InputDocumentation(doc="use ordered access implementation")), ToolInput(tag="in_thread_no", input_type=Boolean(optional=True), prefix="-threadno", doc=InputDocumentation(doc="[2] number of threads for threaded scan implementation")), ToolInput(tag="in_drop_off", input_type=Boolean(optional=True), prefix="-drop_off", doc=InputDocumentation(doc="[40] hsp drop off parameter")), ToolInput(tag="in_array_numb", input_type=Boolean(optional=True), prefix="-array_numb", doc=InputDocumentation(doc="[1000000] hard array numb level in index building")), ToolInput(tag="in_seq_load_tile", input_type=Boolean(optional=True), prefix="-seqloadtile", doc=InputDocumentation(doc="tiling skip of load (default 1)")), ToolInput(tag="in_seq_load_report", input_type=Int(optional=True), prefix="-seqloadreport", doc=InputDocumentation(doc="report (using info) at what stagger rating (default none)")), ToolInput(tag="in_seq_load_trunc", input_type=Boolean(optional=True), prefix="-seqloadtrunc", doc=InputDocumentation(doc="<number>  truncate load after this number of sequeneces (useful for debugging)")), ToolInput(tag="in_seq_load_start", input_type=Boolean(optional=True), prefix="-seqloadstart", doc=InputDocumentation(doc="<number>  start position in database for seq load")), ToolInput(tag="in_seq_load_end", input_type=Boolean(optional=True), prefix="-seqloadend", doc=InputDocumentation(doc="<number>  end position in database for seq load")), ToolInput(tag="in_version", input_type=Boolean(optional=True), prefix="-version", doc=InputDocumentation(doc="show version and compile info")), ToolInput(tag="in_silent", input_type=Boolean(optional=True), prefix="-silent", doc=InputDocumentation(doc="No messages    on stderr")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="-quiet", doc=InputDocumentation(doc="No report/info on stderr")), ToolInput(tag="in_error_off_std", input_type=String(optional=True), prefix="-erroroffstd", doc=InputDocumentation(doc="warning messages to stderr")), ToolInput(tag="in_error_log", input_type=Boolean(optional=True), prefix="-errorlog", doc=InputDocumentation(doc="[file] Log warning messages to file")), ToolInput(tag="in_error_style", input_type=Boolean(optional=True), prefix="-errorstyle", doc=InputDocumentation(doc="[server/program] style of error reporting (default program)")), ToolInput(tag="in_options", input_type=String(), position=0, doc=InputDocumentation(doc="-port         port to bind to (default 4050)"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Scanwise_Server_V0_1_0().translate("wdl", allow_empty_container=True)

