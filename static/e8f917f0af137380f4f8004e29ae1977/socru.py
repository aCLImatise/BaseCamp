from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Directory, Int, File, Boolean, String

Socru_V0_1_0 = CommandToolBuilder(tool="socru", base_command=["socru"], inputs=[ToolInput(tag="in_db_dir", input_type=Directory(optional=True), prefix="--db_dir", doc=InputDocumentation(doc="Base directory for species databases, defaults to\nbundled (default: None)")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="No. of threads to use (default: 1)")), ToolInput(tag="in_output_file", input_type=File(optional=True), prefix="--output_file", doc=InputDocumentation(doc="Output filename, defaults to STDOUT (default: None)")), ToolInput(tag="in_output_plot_file", input_type=File(optional=True), prefix="--output_plot_file", doc=InputDocumentation(doc="Filename of plot of genome structure (default:\ngenome_structure.pdf)")), ToolInput(tag="in_novel_profiles", input_type=File(optional=True), prefix="--novel_profiles", doc=InputDocumentation(doc="Filename for novel profiles (default:\nprofile.txt.novel)")), ToolInput(tag="in_new_fragments", input_type=File(optional=True), prefix="--new_fragments", doc=InputDocumentation(doc="Filename for novel fragments (default:\nnovel_fragments.fa)")), ToolInput(tag="in_top_blast_hits", input_type=File(optional=True), prefix="--top_blast_hits", doc=InputDocumentation(doc="Filename for top blast hits (default: None)")), ToolInput(tag="in_output_operon_directions_file", input_type=File(optional=True), prefix="--output_operon_directions_file", doc=InputDocumentation(doc="Filename of directions of operons (default:\noperon_directions.txt)")), ToolInput(tag="in_max_bases_from_ends", input_type=Int(optional=True), prefix="--max_bases_from_ends", doc=InputDocumentation(doc="Only look at this number of bases from start and end\nof fragment (default: None)")), ToolInput(tag="in_not_circular", input_type=Boolean(optional=True), prefix="--not_circular", doc=InputDocumentation(doc="Assume chromosome is not circularised (default: False)")), ToolInput(tag="in_min_bit_score", input_type=Int(optional=True), prefix="--min_bit_score", doc=InputDocumentation(doc="Minimum bit score (default: 100)")), ToolInput(tag="in_min_alignment_length", input_type=Int(optional=True), prefix="--min_alignment_length", doc=InputDocumentation(doc="Minimum alignment length (default: 100)")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="Turn on debugging (default: False)")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Turn on verbose output (default: False)")), ToolInput(tag="in_species", input_type=String(), position=0, doc=InputDocumentation(doc="Species name, use socru_species to see all available")), ToolInput(tag="in_input_files", input_type=String(), position=1, doc=InputDocumentation(doc="Input FASTA files (optionally gzipped)"))], outputs=[ToolOutput(tag="out_output_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_file", type_hint=File()), doc=OutputDocumentation(doc="Output filename, defaults to STDOUT (default: None)")), ToolOutput(tag="out_output_plot_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_plot_file", type_hint=File()), doc=OutputDocumentation(doc="Filename of plot of genome structure (default:\ngenome_structure.pdf)")), ToolOutput(tag="out_output_operon_directions_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_operon_directions_file", type_hint=File()), doc=OutputDocumentation(doc="Filename of directions of operons (default:\noperon_directions.txt)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Socru_V0_1_0().translate("wdl", allow_empty_container=True)

