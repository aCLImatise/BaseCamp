from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Guppy_Sing_V0_1_0 = CommandToolBuilder(tool="guppy_sing", base_command=["guppy", "sing"], inputs=[ToolInput(tag="in_point_mass", input_type=Boolean(optional=True), prefix="--point-mass", doc=InputDocumentation(doc="Treat every pquery as a point mass concentrated on the highest-weight placement.")), ToolInput(tag="in_pp", input_type=Boolean(optional=True), prefix="--pp", doc=InputDocumentation(doc="Use posterior probability for the weight.")), ToolInput(tag="in_specify_filename_write", input_type=Boolean(optional=True), prefix="-o", doc=InputDocumentation(doc="Specify the filename to write to.")), ToolInput(tag="in_out_dir", input_type=Boolean(optional=True), prefix="--out-dir", doc=InputDocumentation(doc="Specify the directory to write files to.")), ToolInput(tag="in_prefix", input_type=Boolean(optional=True), prefix="--prefix", doc=InputDocumentation(doc="Specify a string to be prepended to filenames.")), ToolInput(tag="in_min_fat", input_type=Boolean(optional=True), prefix="--min-fat", doc=InputDocumentation(doc="The minimum branch length for fattened edges (to increase their visibility). To turn off set to 0. Default: 0.01")), ToolInput(tag="in_total_width", input_type=Boolean(optional=True), prefix="--total-width", doc=InputDocumentation(doc="Set the total pixel width for all of the branches of the tree. Default: 300")), ToolInput(tag="in_width_factor", input_type=Boolean(optional=True), prefix="--width-factor", doc=InputDocumentation(doc="Override total-width by directly setting the number of pixels per unit of thing displayed.")), ToolInput(tag="in_node_numbers", input_type=Boolean(optional=True), prefix="--node-numbers", doc=InputDocumentation(doc="Put the node numbers in where the bootstraps usually go.")), ToolInput(tag="in_xml", input_type=Boolean(optional=True), prefix="--xml", doc=InputDocumentation(doc="Write phyloXML (with colors) for all visualizations.")), ToolInput(tag="in_help", input_type=Boolean(optional=True), prefix="--help", doc=InputDocumentation(doc="Display this list of options")), ToolInput(tag="in_sing", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_place_file", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_s", input_type=String(optional=True), position=2, doc=InputDocumentation(doc=""))], outputs=[], container="quay.io/biocontainers/sepp:v4.5.0--py37_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Guppy_Sing_V0_1_0().translate("wdl")

