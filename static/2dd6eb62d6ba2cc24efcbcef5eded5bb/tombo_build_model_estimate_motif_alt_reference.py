from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, Array, String, Boolean

Tombo_Build_Model_Estimate_Motif_Alt_Reference_V0_1_0 = CommandToolBuilder(tool="tombo_build_model_estimate_motif_alt_reference", base_command=["tombo", "build_model", "estimate_motif_alt_reference"], inputs=[ToolInput(tag="in_tombo_model_alternative", input_type=File(optional=True), prefix="--alternate-model-filename", doc=InputDocumentation(doc="Tombo model for alternative likelihood ratio\nsignificance testing.")), ToolInput(tag="in_short_name_associate", input_type=Int(optional=True), prefix="--alternate-model-name", doc=InputDocumentation(doc="A short name to associate with this alternate model\n(e.g. 5mC, 6mA, etc.). This text will be included in\noutput filenames when this model is used for testing.")), ToolInput(tag="in_motif_containing_alternatebase", input_type=File(optional=True), prefix="--motif-description", doc=InputDocumentation(doc="Motif containing alternate-base. All positions with\nthis motif should be modified (or filtered with\n[--valid-locations-filename]). Format descriptions as:\n'motif:mod_pos'. mod_pos indicates the alternate-base\nwithin the motif (1-based index). Example: 'CG:1' to\ntrain a CpG methylation model.")), ToolInput(tag="in_fast_five_based_irs", input_type=Array(t=Int(), optional=True), prefix="--fast5-basedirs", doc=InputDocumentation(doc="Directories containing fast5 files.")), ToolInput(tag="in_upstream_bases", input_type=String(optional=True), prefix="--upstream-bases", doc=InputDocumentation(doc="Upstream bases in k-mer. Default: 1")), ToolInput(tag="in_downstream_bases", input_type=String(optional=True), prefix="--downstream-bases", doc=InputDocumentation(doc="Downstream bases in k-mer. Default: 2")), ToolInput(tag="in_minimum_km_er_observations", input_type=Int(optional=True), prefix="--minimum-kmer-observations", doc=InputDocumentation(doc="Number of each k-mer observations required in order to\nproduce a reference (genomic locations for standard\nreference and per-read for alternative reference).\nDefault: 1")), ToolInput(tag="in_valid_locations_filename", input_type=File(optional=True), prefix="--valid-locations-filename", doc=InputDocumentation(doc="Bed format file containing single base locations of\nvalid sites. Should contain 6 fields including strand.\nE.g. modified base locations.")), ToolInput(tag="in_minimum_test_reads", input_type=Int(optional=True), prefix="--minimum-test-reads", doc=InputDocumentation(doc="Number of reads required at a position to perform\nsignificance testing or contribute to model\nestimation. Default: 10")), ToolInput(tag="in_coverage_threshold", input_type=Int(optional=True), prefix="--coverage-threshold", doc=InputDocumentation(doc="Maximum mean coverage per region when estimating k-mer\nmodel (limits compute time for deep samples). Default:\n100")), ToolInput(tag="in_multiprocess_region_size", input_type=Int(optional=True), prefix="--multiprocess-region-size", doc=InputDocumentation(doc="Size of regions over which to multiprocesses statistic\ncomputation. For very deep samples a smaller value is\nrecommmended in order to control memory consumption.\nDefault: 10000")), ToolInput(tag="in_processes", input_type=Int(optional=True), prefix="--processes", doc=InputDocumentation(doc="Number of processes. Default: 1")), ToolInput(tag="in_corrected_group", input_type=Int(optional=True), prefix="--corrected-group", doc=InputDocumentation(doc="FAST5 group created by resquiggle command. Default:\nRawGenomeCorrected_000")), ToolInput(tag="in_base_call_subgroups", input_type=Array(t=String(), optional=True), prefix="--basecall-subgroups", doc=InputDocumentation(doc="FAST5 subgroup(s) (under /Analyses/[--basecall-\ngroup]/) containing basecalls and created within\n[--corrected-group] containing re-squiggle results.\nDefault: ['BaseCalled_template']")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="Don't print status information.")), ToolInput(tag="in__alternatemodelname", input_type=String(), position=0, doc=InputDocumentation(doc="--alternate-model-name")), ToolInput(tag="in__motifdescription", input_type=String(), position=1, doc=InputDocumentation(doc="--motif-description")), ToolInput(tag="in__fastbasedirs", input_type=String(), position=2, doc=InputDocumentation(doc="--fast5-basedirs"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Tombo_Build_Model_Estimate_Motif_Alt_Reference_V0_1_0().translate("wdl", allow_empty_container=True)

