from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Leehom_V0_1_0 = CommandToolBuilder(tool="leeHom", base_command=["leeHom"], inputs=[ToolInput(tag="in_fq_one", input_type=Boolean(optional=True), prefix="-fq1", doc=InputDocumentation(doc="First fastq")), ToolInput(tag="in_fq_two", input_type=Boolean(optional=True), prefix="-fq2", doc=InputDocumentation(doc="Second  fastq file (for paired-end)")), ToolInput(tag="in_fq_o", input_type=Boolean(optional=True), prefix="-fqo", doc=InputDocumentation(doc="Output fastq prefix")), ToolInput(tag="in_outfile", input_type=Boolean(optional=True), prefix="--outfile", doc=InputDocumentation(doc="Output (BAM format).")), ToolInput(tag="in_produce_uncompressed_bam", input_type=Boolean(optional=True), prefix="-u", doc=InputDocumentation(doc="Produce uncompressed bam (good for pipe)")), ToolInput(tag="in_aligned", input_type=Boolean(optional=True), prefix="--aligned", doc=InputDocumentation(doc="Allow reads to be aligned (default false)")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Turn all messages on (default false)")), ToolInput(tag="in_log", input_type=Boolean(optional=True), prefix="--log", doc=InputDocumentation(doc="[log file]        Print a tally of merged reads to this log file (default only to stderr)")), ToolInput(tag="in_phred_six_four", input_type=Boolean(optional=True), prefix="--phred64", doc=InputDocumentation(doc="Use PHRED 64 as the offset for QC scores (default : PHRED33)")), ToolInput(tag="in_use_multiple_cores", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="[threads]            Use multiple cores (default : 1)")), ToolInput(tag="in_ancient_dna", input_type=Boolean(optional=True), prefix="--ancientdna", doc=InputDocumentation(doc="ancient DNA (default false)\nthis allows for partial overlap")), ToolInput(tag="in_loc", input_type=Boolean(optional=True), prefix="--loc", doc=InputDocumentation(doc="Location for lognormal dist. (default none)")), ToolInput(tag="in_scale", input_type=Boolean(optional=True), prefix="--scale", doc=InputDocumentation(doc="Scale for lognormal dist. (default none)")), ToolInput(tag="in_keep_orig", input_type=Boolean(optional=True), prefix="--keepOrig", doc=InputDocumentation(doc="Write original reads if they are trimmed or merged  (default false)\nSuch reads will be marked as PCR duplicates")), ToolInput(tag="in_adapter_first_read", input_type=Boolean(optional=True), prefix="--adapterFirstRead", doc=InputDocumentation(doc="Adapter that is observed after the forward read (def. Multiplex: AGATCGGAAGAGCACACGTCTGAACTCCAG)")), ToolInput(tag="in_adapter_second_read", input_type=Boolean(optional=True), prefix="--adapterSecondRead", doc=InputDocumentation(doc="Adapter that is observed after the reverse read (def. Multiplex: AGATCGGAAGAGCGTCGTGTAGGGAAAGAG)")), ToolInput(tag="in_auto", input_type=Boolean(optional=True), prefix="--auto", doc=InputDocumentation(doc="Auto detect adapters, requires at least 1M reads, does NOT currently support UMIs (def. : false)")), ToolInput(tag="in_first_read_chimera_filter", input_type=Boolean(optional=True), prefix="--FirstReadChimeraFilter", doc=InputDocumentation(doc="If the forward read looks like this sequence, the cluster is filtered out.\nProvide several sequences separated by comma (def. Multiplex: ACACTCTTTCCCTACACGTCTGAACTCCAG)")), ToolInput(tag="in_key", input_type=Boolean(optional=True), prefix="--key", doc=InputDocumentation(doc="Key sequence with which each sequence starts. Comma separate for forward and reverse reads. (default '')")), ToolInput(tag="in_trim_key", input_type=Boolean(optional=True), prefix="--trimkey", doc=InputDocumentation(doc="Trim the key sequence even for untrimmed. (default 'false')")), ToolInput(tag="in_allow_missing", input_type=Boolean(optional=True), prefix="--allowMissing", doc=InputDocumentation(doc="Allow one base in one key to be missing or wrong. (default false)")), ToolInput(tag="in_um_if", input_type=Boolean(optional=True), prefix="--umif", doc=InputDocumentation(doc="[bp]                             Extract bp for the UMI for the forward read. (default 0)")), ToolInput(tag="in_u_mir", input_type=Boolean(optional=True), prefix="--umir", doc=InputDocumentation(doc="[bp]                             Extract bp for the UMI for the reverse read. (default 0)")), ToolInput(tag="in_u_mtf", input_type=Boolean(optional=True), prefix="--umtf", doc=InputDocumentation(doc="[bp]                             Remove overhangs of bp after the UMI for the forward read. (default 0)")), ToolInput(tag="in_um_tr", input_type=Boolean(optional=True), prefix="--umtr", doc=InputDocumentation(doc="[bp]                             Remove overhangs of bp after the UMI for the reverse read. (default 0)")), ToolInput(tag="in_trim_cut_off", input_type=Boolean(optional=True), prefix="--trimCutoff", doc=InputDocumentation(doc="Lowest number of adapter bases to be observed for single Read trimming (default 1)")), ToolInput(tag="in_bam_file", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[], container="quay.io/biocontainers/leehom:1.2.15--hda3bf64_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Leehom_V0_1_0().translate("wdl")

