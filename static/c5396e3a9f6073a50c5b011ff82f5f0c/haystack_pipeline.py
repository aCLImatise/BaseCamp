from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Directory, Int, Boolean, Float

Haystack_Pipeline_V0_1_0 = CommandToolBuilder(tool="haystack_pipeline", base_command=["haystack_pipeline"], inputs=[ToolInput(tag="in_selection", input_type=String(optional=True), prefix="-SELECTION", doc=InputDocumentation(doc="HOTSPOTS OF VARIABILITY AND ENRICHED MOTIFS-")), ToolInput(tag="in_name", input_type=File(optional=True), prefix="--name", doc=InputDocumentation(doc="Define a custom output filename for the report")), ToolInput(tag="in_output_directory", input_type=Directory(optional=True), prefix="--output_directory", doc=InputDocumentation(doc="Output directory (default: current directory)")), ToolInput(tag="in_bin_size", input_type=Int(optional=True), prefix="--bin_size", doc=InputDocumentation(doc="bin size to use(default: 500bp)")), ToolInput(tag="in_do_not_recompute", input_type=Boolean(optional=True), prefix="--do_not_recompute", doc=InputDocumentation(doc="Keep any file previously precalculated")), ToolInput(tag="in_do_not_filter_bams", input_type=Boolean(optional=True), prefix="--do_not_filter_bams", doc=InputDocumentation(doc="Use BAM files as provided. Do not remove reads that\nare unmapped, mate unmapped, not primary aligned or\nlow MAPQ reads, reads failing qc and optical\nduplicates")), ToolInput(tag="in_depleted", input_type=Boolean(optional=True), prefix="--depleted", doc=InputDocumentation(doc="Look for cell type specific regions with depletion of\nsignal instead of enrichment")), ToolInput(tag="in_input_is_bigwig", input_type=Boolean(optional=True), prefix="--input_is_bigwig", doc=InputDocumentation(doc="Use the bigwig format instead of the bam format for\nthe input. Note: The files must have extension .bw")), ToolInput(tag="in_disable_quantile_normalization", input_type=Boolean(optional=True), prefix="--disable_quantile_normalization", doc=InputDocumentation(doc="Disable quantile normalization (default: False)")), ToolInput(tag="in_transformation", input_type=String(optional=True), prefix="--transformation", doc=InputDocumentation(doc="Variance stabilizing transformation among: none, log2,\nangle (default: angle)")), ToolInput(tag="in_z_score_high", input_type=Float(optional=True), prefix="--z_score_high", doc=InputDocumentation(doc="z-score value to select the specific regions(default:\n1.5)")), ToolInput(tag="in_z_score_low", input_type=Float(optional=True), prefix="--z_score_low", doc=InputDocumentation(doc="z-score value to select the not specific\nregions(default: 0.25)")), ToolInput(tag="in_th_rpm", input_type=Int(optional=True), prefix="--th_rpm", doc=InputDocumentation(doc="Percentile on the signal intensity to consider for the\nhotspots (default: 99)")), ToolInput(tag="in_meme_motifs_filename", input_type=File(optional=True), prefix="--meme_motifs_filename", doc=InputDocumentation(doc="Motifs database in MEME format (default JASPAR CORE\n2016)")), ToolInput(tag="in_motif_mapping_filename", input_type=File(optional=True), prefix="--motif_mapping_filename", doc=InputDocumentation(doc="Custom motif to gene mapping file (the default is for\nJASPAR CORE 2016 database)")), ToolInput(tag="in_plot_all", input_type=Boolean(optional=True), prefix="--plot_all", doc=InputDocumentation(doc="Disable the filter on the TF activity and correlation\n(default z-score TF>0 and rho>0.3)")), ToolInput(tag="in_keep_intermediate_files", input_type=Boolean(optional=True), prefix="--keep_intermediate_files", doc=InputDocumentation(doc="keep intermediate bedgraph files")), ToolInput(tag="in_n_processes", input_type=Int(optional=True), prefix="--n_processes", doc=InputDocumentation(doc="Specify the number of processes to use. The default is\n#cores available.")), ToolInput(tag="in_blacklist", input_type=File(optional=True), prefix="--blacklist", doc=InputDocumentation(doc="Exclude blacklisted regions. Blacklisted regions are\nnot excluded by default. Use hg19 to blacklist regions\nfor the human genome 19, otherwise provide the\nfilepath for a bed file with blacklisted regions.")), ToolInput(tag="in_chrom_exclude", input_type=String(optional=True), prefix="--chrom_exclude", doc=InputDocumentation(doc="Exclude chromosomes that contain given (regex) string.\nFor example _random|chrX|chrY excludes random, X, and\nY chromosome regions")), ToolInput(tag="in_read_ext", input_type=Int(optional=True), prefix="--read_ext", doc=InputDocumentation(doc="Read extension in bps (default: 200)")), ToolInput(tag="in_temp_directory", input_type=Directory(optional=True), prefix="--temp_directory", doc=InputDocumentation(doc="Directory to store temporary files (default: /tmp)")), ToolInput(tag="in_rho_cut_off", input_type=Float(optional=True), prefix="--rho_cutoff", doc=InputDocumentation(doc="The cutoff absolute correlation value (0.0 to 1) for\nwhich activity plots are generated (default: 0.3)")), ToolInput(tag="in_tf_value_cut_to_ff", input_type=Float(optional=True), prefix="--tf_value_cuttoff", doc=InputDocumentation(doc="The cutoff z-score tf_value for which activity plots\nare generated (default: 0.0)")), ToolInput(tag="in_samples_filename_or_bam_folder", input_type=String(), position=0, doc=InputDocumentation(doc="A tab delimeted file with in each row (1) a sample\nname, (2) the path to the corresponding bam filename,\n(3 optional) the path to the corresponding gene\nexpression filename.")), ToolInput(tag="in_genome_name", input_type=String(), position=1, doc=InputDocumentation(doc="Genome assembly to use from UCSC (for example hg19,\nmm9, etc.)"))], outputs=[ToolOutput(tag="out_name", output_type=File(optional=True), selector=InputSelector(input_to_select="in_name", type_hint=File()), doc=OutputDocumentation(doc="Define a custom output filename for the report")), ToolOutput(tag="out_output_directory", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output_directory", type_hint=File()), doc=OutputDocumentation(doc="Output directory (default: current directory)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Haystack_Pipeline_V0_1_0().translate("wdl", allow_empty_container=True)

