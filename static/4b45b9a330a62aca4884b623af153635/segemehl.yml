!Command
positional:
- !Positional
  description: ''
  position: 0
  name: file
  optional: true
named:
- !Flag
  description: ''
  synonyms:
  - -besVOcf
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ''
  synonyms:
  - -d
  args: !SimpleFlagArg
    name: file
  optional: true
- !Flag
  description: ''
  synonyms:
  - -q
  args: !SimpleFlagArg
    name: file
  optional: true
command:
- segemehl.x
parent:
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "usage: segemehl.x [-besVOcf] -d <file> [<file>] [-q <file>] \n       \
  \           [-p <file>] [-i <file>] [-j <file>] [-x <file>] \n                 \
  \ [-y <file>] [-G <file>] [-g <string>] [-t <n>] \n                  [-o <string>]\
  \ [-u <file>] [-B <string>] [-F <n>] \n                  [-S [<basename>]] [-A <n>]\
  \ [-D <n>] \n                  [-E <double>] [-H] [-m <n>] [-Z <n>] [-W <n>] \n\
  \                  [-U <n>] [-l <f>] [-w <double>] [-X <n>] \n                 \
  \ \n                  [-J <n>] [-I <n>] [-M <n>] [-n <n>] [-r <n>] [--skipidcheck]\
  \ [--showalign] [--nohead] \n  Heuristic mapping of short sequences\n\n [INPUT]\
  \                         \n -d, --database <file> [<file>]  list of path/filename(s)\
  \ of fasta \n                                 database sequence(s)\n -q, --query\
  \ <file>              path/filename of query sequences \n                      \
  \           (default:none)\n -p, --mate <file>               path/filename of mate\
  \ pair \n                                 sequences (default:none)\n -i, --index\
  \ <file>              path/filename of db index \n                             \
  \    (default:none)\n -j, --index2 <file>             path/filename of second db\
  \ index \n                                 (default:none)\n -x, --generate <file>\
  \           generate db index and store to disk \n                             \
  \    (default:none)\n -y, --generate2 <file>          generate second db index and\
  \ store \n                                 to disk (default:none)\n -G, --readgroupfile\
  \ <file>      filename to read @RG header \n                                 (default:none)\n\
  \ -g, --readgroupid <string>      read group id (default:none)\n -t, --threads <n>\
  \               start <n> threads (default:1)\n [OUTPUT]                       \
  \ \n -o, --outfile <string>          outputfile (default:none)\n -b, --bamabafixoida\
  \             generate a bam output (-o \n                                 <filename>\
  \ required)\n -u, --nomatchfilename <file>    filename for unmatched reads \n  \
  \                               (default:none)\n -e, --briefcigar              \
  \  brief cigar string (M vs X and =)\n -s, --progressbar               show a progress\
  \ bar\n -B, --filebins <string>         file bins with basename <string> \n    \
  \                             for easier data handling \n                      \
  \           (default:none)\n -V, --MEOP                      output MEOP field for\
  \ easier \n                                 variance calling in SAM (XE:Z:)\n [ALIGNMENT]\
  \                     \n -F, --bisulfite <n>             bisulfite aln with \n \
  \                                methylC-seq/Lister et al. (=1) or \n          \
  \                       bs-seq/Cokus et al. protocol (=2) \n                   \
  \              (default:0)\n -S, --splits [<basename>]       detect split/spliced\
  \ reads. \n                                 (default:none)\n -A, --accuracy <n>\
  \              min percentage of matches per read \n                           \
  \      in semi-global alignment \n                                 (default:90)\n\
  \ -D, --differences <n>           search seeds initially with <n> \n           \
  \                      differences (default:1)\n -E, --evalue <double>         \
  \  max evalue (default:5.000000)\n -H, --hitstrategy               report only best\
  \ scoring hits (=1) \n                                 or all (=0) (default:1)\n\
  \ -m, --minsize <n>               minimum length of queries \n                 \
  \                (default:12)\n -Z, --minfraglen <n>            min length of a\
  \ spliced fragment \n                                 (default:20)\n -W, --minsplicecover\
  \ <n>        min coverage for spliced \n                                 transcripts\
  \ (default:80)\n -U, --minfragscore <n>          min score of a spliced fragment\
  \ \n                                 (default:18)\n -l, --splicescorescale <f> \
  \     report spliced alignment with score \n                                 s only\
  \ if <f>*s is larger than \n                                 next best spliced alignment\
  \ \n                                 (default:0.900000)\n -w, --maxsplitevalue <double>\
  \   max evalue for splits \n                                 (default:50.000000)\n\
  \ [SPECIAL]                       \n -X, --dropoff <n>               dropoff parameter\
  \ for extension \n                                 (default:8)\n -J, --jump <n>\
  \                  search seeds with jump size <n> \n                          \
  \       (0=automatic) (default:0)\n -O, --order                     sorts the output\
  \ by chromsome and \n                                 position (might take a while!)\n\
  \ -I, --maxpairinsertsize <n>     maximum size of the inserts (paired \n       \
  \                          end) in case of multiple hits \n                    \
  \             (default:200000)\n -M, --maxinterval <n>           maximum width of\
  \ a suffix array \n                                 interval, i.e. a query seed\
  \ will \n                                 be omitted if it matches more \n     \
  \                            than <n> times (default:100)\n -c, --checkidx     \
  \             check index\n -n, --extensionpenalty <n>      penalty for a mismatch\
  \ during \n                                 extension (default:4)\n -r, --maxout\
  \ <n>                maximum number of alignments that \n                      \
  \           will be reported. If set to zero, \n                               \
  \  all alignments will be reported \n                                 (default:0)\n\
  \ --skipidcheck                   do not check whether the fastq ids \n        \
  \                         of mates / paired ends match. \n                     \
  \            Instead, the first mate (-q) will \n                              \
  \   be used for output only.\n --showalign                     show alignments\n\
  \ --nohead                        do not output header\n -f, --fullname        \
  \          write full query name (no \n                                 trunctation\
  \ at whitespace)\n [VERSION]\n  0.3.4 ge5dee47 2018-12-25 20:39:07 +0100\n [BUGS]\n\
  \  Please report bugs to steve@bioinf.uni-leipzig.de\n [REFERENCES]\n  SEGEMEHL\
  \ is free software under GPL \n  2008 Bioinformatik Leipzig \n  2018 Leibniz Institute\
  \ on Aging (FLI) \n"
generated_using:
- --help
