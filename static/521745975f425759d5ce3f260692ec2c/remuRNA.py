from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Remurna_V0_1_0 = CommandToolBuilder(tool="remuRNA", base_command=["remuRNA"], inputs=[ToolInput(tag="in_na", input_type=Boolean(optional=True), prefix="--NA", doc=InputDocumentation(doc="=RNA (default) | DNA")), ToolInput(tag="in_energy", input_type=Boolean(optional=True), prefix="--energy", doc=InputDocumentation(doc="=|sig| (default) | sig")), ToolInput(tag="in_tm_in", input_type=Boolean(optional=True), prefix="--tmin", doc=InputDocumentation(doc="=Min Temperature (default 37)")), ToolInput(tag="in_tinc", input_type=Boolean(optional=True), prefix="--tinc", doc=InputDocumentation(doc="=Temperature Inc (default 1)")), ToolInput(tag="in_tmax", input_type=Boolean(optional=True), prefix="--tmax", doc=InputDocumentation(doc="=Max Temperature (default 37)")), ToolInput(tag="in_suffix", input_type=Boolean(optional=True), prefix="--suffix", doc=InputDocumentation(doc="= suffix (default NULL)")), ToolInput(tag="in_log", input_type=Boolean(optional=True), prefix="--log", doc=InputDocumentation(doc="= log level ( 0 [OFF] | 1 [ERROR(default)] | 2 [WARN] | 3 [INFO] | 4 [DEBUG] | 5 [ALL])")), ToolInput(tag="in_sodium", input_type=Boolean(optional=True), prefix="--sodium", doc=InputDocumentation(doc="=Salt concentration")), ToolInput(tag="in_magnesium", input_type=Boolean(optional=True), prefix="--magnesium", doc=InputDocumentation(doc="=Mg concentration")), ToolInput(tag="in_window", input_type=Boolean(optional=True), prefix="--window", doc=InputDocumentation(doc="computes average distance over windows of size winsize.")), ToolInput(tag="in_proc", input_type=Boolean(optional=True), prefix="--proc", doc=InputDocumentation(doc="=number of CPUs")), ToolInput(tag="in_polymer", input_type=Boolean(optional=True), prefix="--polymer", doc=InputDocumentation(doc="polymer")), ToolInput(tag="in_zip", input_type=Boolean(optional=True), prefix="--zip", doc=InputDocumentation(doc="zip")), ToolInput(tag="in_mutations", input_type=Boolean(optional=True), prefix="--mutations", doc=InputDocumentation(doc="computes relative entropy for all ppossible point mutations")), ToolInput(tag="in_no_dangle", input_type=Boolean(optional=True), prefix="--nodangle", doc=InputDocumentation(doc="no dangle energy, (default, dangling energies will be added for the bases adjacent to a helix on both sides in any case)")), ToolInput(tag="in_m_urna", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_input_file", input_type=String(), position=1, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Remurna_V0_1_0().translate("wdl", allow_empty_container=True)

