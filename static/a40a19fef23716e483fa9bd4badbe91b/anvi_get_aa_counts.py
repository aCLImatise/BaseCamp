from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String

Anvi_Get_Aa_Counts_V0_1_0 = CommandToolBuilder(tool="anvi_get_aa_counts", base_command=["anvi-get-aa-counts"], inputs=[ToolInput(tag="in_output_file", input_type=File(optional=True), prefix="--output-file", doc=InputDocumentation(doc="File path to store results.")), ToolInput(tag="in_profile_db", input_type=String(optional=True), prefix="--profile-db", doc=InputDocumentation(doc="Anvi'o profile database")), ToolInput(tag="in_collection_name", input_type=String(optional=True), prefix="--collection-name", doc=InputDocumentation(doc="Collection name.")), ToolInput(tag="in_bin_ids_file", input_type=File(optional=True), prefix="--bin-ids-file", doc=InputDocumentation(doc="Text file for bins (each line should be a unique bin\nid).")), ToolInput(tag="in_contigs_of_interest", input_type=File(optional=True), prefix="--contigs-of-interest", doc=InputDocumentation(doc="A file with contig names. There should be only one\ncolumn in the file, and each line should correspond to\na unique split name.")), ToolInput(tag="in_gene_caller_ids", input_type=String(optional=True), prefix="--gene-caller-ids", doc=InputDocumentation(doc="Gene caller ids. Multiple of them can be declared\nseparated by a delimiter (the default is a comma). In\nanvi-gen-variability-profile, if you declare nothing\nyou will get all genes matching your other filtering\ncriteria. In other programs, you may get everything,\nnothing, or an error. It really depends on the\nsituation. Fortunately, mistakes are cheap, so it's\nworth a try.\n")), ToolInput(tag="in_c", input_type=String(optional=True), prefix="-c", doc=InputDocumentation(doc="")), ToolInput(tag="in_reported_dot", input_type=String(), position=0, doc=InputDocumentation(doc="-c CONTIGS_DB, --contigs-db CONTIGS_DB\nAnvi'o contigs database generated by 'anvi-gen-\ncontigs'"))], outputs=[ToolOutput(tag="out_output_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_file", type_hint=File()), doc=OutputDocumentation(doc="File path to store results."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Anvi_Get_Aa_Counts_V0_1_0().translate("wdl", allow_empty_container=True)

