from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, String, Boolean

Runtheta_Py_V0_1_0 = CommandToolBuilder(tool="RunTHetA.py", base_command=["RunTHetA.py"], inputs=[ToolInput(tag="in_tumor_file", input_type=File(optional=True), prefix="--TUMOR_FILE", doc=InputDocumentation(doc="File containing allelic counts for tumor sample SNPs.")), ToolInput(tag="in_normal_file", input_type=File(optional=True), prefix="--NORMAL_FILE", doc=InputDocumentation(doc="File containing allelic counts for normal samlpe SNPs.")), ToolInput(tag="in_number_of_subpopulations", input_type=Int(optional=True), prefix="--N", doc=InputDocumentation(doc="Number of subpopulations")), ToolInput(tag="in_max_k", input_type=String(optional=True), prefix="--MAX_K", doc=InputDocumentation(doc="The maximum value allowed for entries in C")), ToolInput(tag="in_tau", input_type=Int(optional=True), prefix="--TAU", doc=InputDocumentation(doc="Expected number of copies in normal genome")), ToolInput(tag="in_dir", input_type=File(optional=True), prefix="--DIR", doc=InputDocumentation(doc="Directory where result file is written to")), ToolInput(tag="in_output_prefix", input_type=File(optional=True), prefix="--OUTPUT_PREFIX", doc=InputDocumentation(doc="Prefix for output files created. By default, it will\nbe the beginning of the input file name (i.e.if input\nfilename were example.input, output filed would be\nexample.output and example.withbounds)")), ToolInput(tag="in_max_normal", input_type=Int(optional=True), prefix="--MAX_NORMAL", doc=InputDocumentation(doc="The maximum fraction to consider for normal. Only\nenforced for n=2")), ToolInput(tag="in_num_processes", input_type=Int(optional=True), prefix="--NUM_PROCESSES", doc=InputDocumentation(doc="The number of processes to be used")), ToolInput(tag="in_num_intervals", input_type=Int(optional=True), prefix="--NUM_INTERVALS", doc=InputDocumentation(doc="The maximum number of intervals used by automatic\ninterval selection.")), ToolInput(tag="in_normal_bound_heuristic", input_type=String(optional=True), prefix="--NORMAL_BOUND_HEURISTIC", doc=InputDocumentation(doc="Options are .pdf, .jpg, .png, .eps")), ToolInput(tag="in_baf", input_type=Boolean(optional=True), prefix="--BAF", doc=InputDocumentation(doc="Option to run the BAF model.")), ToolInput(tag="in_ratio_dev", input_type=Int(optional=True), prefix="--RATIO_DEV", doc=InputDocumentation(doc="The deviation away from 1.0 that a ratio must be to be\nconsidered a potential copy number aberration.")), ToolInput(tag="in_min_frac", input_type=Int(optional=True), prefix="--MIN_FRAC", doc=InputDocumentation(doc="The minimum fraction of the genome that must have a\npotential copy number aberration to be a valid sample\nfor THetA analysis.")), ToolInput(tag="in_no_clustering", input_type=Boolean(optional=True), prefix="--NO_CLUSTERING", doc=InputDocumentation(doc="Option to run THetA without clustering."))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Runtheta_Py_V0_1_0().translate("wdl", allow_empty_container=True)

