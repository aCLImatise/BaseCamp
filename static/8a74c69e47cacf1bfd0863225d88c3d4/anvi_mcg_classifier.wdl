version 1.0

task AnviMcgClassifier {
  input {
    String? profile_db
    String? contigs_db
    File? output_file_prefix
    String? collection_name
    String? bin_id
    File? bin_ids_file
    File? exclude_samples
    File? include_samples
    Boolean? gen_figures
    Boolean? get_samples_stats_only
    Boolean? overwrite_output_destinations
    String? genome_detection_uncertainty
    String? outliers_threshold
    Boolean? zeros_are_outliers
  }
  command <<<
    anvi-mcg-classifier \
      ~{if defined(profile_db) then ("--profile-db " +  '"' + profile_db + '"') else ""} \
      ~{if defined(contigs_db) then ("--contigs-db " +  '"' + contigs_db + '"') else ""} \
      ~{if defined(output_file_prefix) then ("--output-file-prefix " +  '"' + output_file_prefix + '"') else ""} \
      ~{if defined(collection_name) then ("--collection-name " +  '"' + collection_name + '"') else ""} \
      ~{if defined(bin_id) then ("--bin-id " +  '"' + bin_id + '"') else ""} \
      ~{if defined(bin_ids_file) then ("--bin-ids-file " +  '"' + bin_ids_file + '"') else ""} \
      ~{if defined(exclude_samples) then ("--exclude-samples " +  '"' + exclude_samples + '"') else ""} \
      ~{if defined(include_samples) then ("--include-samples " +  '"' + include_samples + '"') else ""} \
      ~{true="--gen-figures" false="" gen_figures} \
      ~{true="--get-samples-stats-only" false="" get_samples_stats_only} \
      ~{true="--overwrite-output-destinations" false="" overwrite_output_destinations} \
      ~{if defined(genome_detection_uncertainty) then ("--genome-detection-uncertainty " +  '"' + genome_detection_uncertainty + '"') else ""} \
      ~{if defined(outliers_threshold) then ("--outliers-threshold " +  '"' + outliers_threshold + '"') else ""} \
      ~{true="--zeros-are-outliers" false="" zeros_are_outliers}
  >>>
  parameter_meta {
    profile_db: "Anvi'o profile database"
    contigs_db: "Anvi'o contigs database generated by 'anvi-gen- contigs'"
    output_file_prefix: "A prefix to be used while naming the output files (no file type extensions please; just a prefix)."
    collection_name: "Collection name."
    bin_id: "Bin name you are interested in."
    bin_ids_file: "Text file for bins (each line should be a unique bin id)."
    exclude_samples: "List of samples to exclude for the analysis."
    include_samples: "List of samples to include for the analysis."
    gen_figures: "For those of you who wish to dig deeper, a collection of figures could be created to allow you to get insight into how the classification was generated. This is especially useful to identify cases in which you shouldn't trust the classification (for example due to a large number of outliers). NOTICE: if you ask anvi'o to generate these figures then it will significantly extend the execution time. To learn about which figures are created and what they mean, contact your nearest anvi'o developer, because currently it is a well-hidden secret."
    get_samples_stats_only: "If you only wish to get statistics regarding the occurrence of bins in samples, then use this flag. Especially when dealing with many samples or large genomes, gene stats could be a long time to compute. By using this flag you could save a lot of computation time."
    overwrite_output_destinations: "Overwrite if the output files and/or directories exist."
    genome_detection_uncertainty: "Determines the range of sample detection values that are considered negative, ambiguous or positive. Min of 0 and smaller than 0.5, default of 0.25. For exmaple for the default samples with detection below 0.5-0.25 = 0.25 will be considered negative (i.e. donot contain the genome), samples with detection between 0.25 and 0.75 would be ambiguous (and hence would not be used for the classification), and samples with detection above 0.75 would be considered positive (i.e. contain the genome)."
    outliers_threshold: "Threshold to use for the outlier detection. The default value is '1.5'. Absolute deviation around the median is used. To read more about the method please refer to: 'How to Detect and Handle Outliers' by Boris Iglewicz and David Hoaglin (doi:10.1016/j.jesp.2013.03.013)."
    zeros_are_outliers: "If you want all zero coverage positions to be treated like outliers then use this flag. The reason to treat zero coverage as outliers is because when mapping reads to a reference we could get many zero positions due to accessory genes. These positions then skew the average values that we compute."
  }
}