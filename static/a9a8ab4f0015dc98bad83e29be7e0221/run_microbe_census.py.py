from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Int, String

Run_Microbe_Census_Py_V0_1_0 = CommandToolBuilder(tool="run_microbe_census.py", base_command=["run_microbe_census.py"], inputs=[ToolInput(tag="in_print_programs_progress", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="print program's progress to stdout (default = False)")), ToolInput(tag="in_path_external_rapsearch", input_type=File(optional=True), prefix="-r", doc=InputDocumentation(doc="path to external RAPsearch2 v2.15 binary; useful if\nprecompiled RAPsearch2 v2.15 binary included with\nMicrobeCensus does not work on your system")), ToolInput(tag="in_number_reads_sample", input_type=Int(optional=True), prefix="-n", doc=InputDocumentation(doc="number of reads to sample from SEQFILES and use for\naverage genome size estimation. to use all reads set\nto 100000000. (default = 2000000)")), ToolInput(tag="in_number_threads_use", input_type=Int(optional=True), prefix="-t", doc=InputDocumentation(doc="number of threads to use for database search (default\n= 1)")), ToolInput(tag="in_quit_size_obtained", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc="quit after average genome size is obtained and do not\nestimate the number of genome equivalents in SEQFILES.\nuseful in combination with -n for quick tests (default\n= False)")), ToolInput(tag="in_reads_trimmed_length", input_type=String(optional=True), prefix="-l", doc=InputDocumentation(doc="all reads trimmed to this length; reads shorter than\nthis discarded (default = median read length)")), ToolInput(tag="in_minimum_baselevel_phred", input_type=Int(optional=True), prefix="-q", doc=InputDocumentation(doc="minimum base-level PHRED quality score (default = -5;\nno filtering)")), ToolInput(tag="in_minimum_readlevel_phred", input_type=Int(optional=True), prefix="-m", doc=InputDocumentation(doc="minimum read-level PHRED quality score (default = -5;\nno filtering)")), ToolInput(tag="in_filter_duplicate_reads", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc="filter duplicate reads (default = False)")), ToolInput(tag="in_max_percent_filtering", input_type=Int(optional=True), prefix="-u", doc=InputDocumentation(doc="max percent of unknown bases per read (default = 100\npercent; no filtering)\n")), ToolInput(tag="in_var_10", input_type=Boolean(optional=True), prefix="-V", doc=InputDocumentation(doc="")), ToolInput(tag="in_seq_files", input_type=String(), position=0, doc=InputDocumentation(doc="path to input metagenome(s); for paired-end\nmetagenomes use commas to specify each file (ex:\nread_1.fq.gz,read_2.fq.gz); can be FASTQ/FASTA; can be\ngzip (.gz) or bzip (.bz2) compressed")), ToolInput(tag="in_outfile", input_type=String(), position=1, doc=InputDocumentation(doc="path to output file containing results"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Run_Microbe_Census_Py_V0_1_0().translate("wdl", allow_empty_container=True)

