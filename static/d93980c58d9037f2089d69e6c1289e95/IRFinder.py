from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, String, File, Directory

Irfinder_V0_1_0 = CommandToolBuilder(tool="IRFinder", base_command=["IRFinder"], inputs=[ToolInput(tag="in_version_number_current", input_type=Int(optional=True), prefix="-v", doc=InputDocumentation(doc="version number of current IRFinder.")), ToolInput(tag="in_this_usage_information", input_type=String(optional=True), prefix="-h", doc=InputDocumentation(doc="this usage information.")), ToolInput(tag="in_fastq_default_quantifies", input_type=File(optional=True), prefix="-m", doc=InputDocumentation(doc="FastQ (default. Quantifies intron retention from FASTQ file);\nBAM (quantifies intron retention from a name-sorted BAM file);\nBuildRef (builds IRFinder reference from Ensembl FTP site. Requires Internet),\nBuildRefDownload (only downloads FASTA and GTF files from Ensembl FTP site, without building IRFinder reference. Requires Internet),\nBuildRefProcess (builds IRFinder reference from local FASTA and GTF files),\nBuildRefFromSTARRef (builds IRFinder reference from a local STAR reference).")), ToolInput(tag="in_directory_yet_exist", input_type=Directory(optional=True), prefix="-r", doc=InputDocumentation(doc=": Directory should not yet exist, will be created.")), ToolInput(tag="in_number_use_use", input_type=Int(optional=True), prefix="-t", doc=InputDocumentation(doc=": The number of physical CPUs to use by IRFinder. When ommited (default), IRFinder will use all physical CPUs.")), ToolInput(tag="in_integer_parsed_mode", input_type=Int(optional=True), prefix="-j", doc=InputDocumentation(doc=": An integer that is parsed to '--sjdbOverhang' under STAR 'genomeGenerate' mode. Default: 150.")), ToolInput(tag="in_typically_ercc_reference", input_type=String(optional=True), prefix="-e", doc=InputDocumentation(doc=": Typically an ERCC reference.")), ToolInput(tag="in_bed_regions_excluded", input_type=String(optional=True), prefix="-b", doc=InputDocumentation(doc=": BED of regions to be excluded from analysis.")), ToolInput(tag="in_nonoverlapping_bed_file", input_type=File(optional=True), prefix="-R", doc=InputDocumentation(doc=": A non-overlapping BED file of additional Regions of Interest for read counts.")), ToolInput(tag="in_existing_star_reference", input_type=File(optional=True), prefix="-x", doc=InputDocumentation(doc="An existing STAR reference folder.\nPlease note: By default, BuildRefFromSTARRef mode automatically looks for the original FASTA and GTF files used to generate STARRefDir.\nSpecifically, IRFinder investigates 'genomeParameters.txt' in STARRefDir.\nIf both files can be located, IRFinder will continue to generate reference, ignoring '-f' and '-g' options.\nIf either file is missing, IRFinder will quit and you have to re-run it by giving both '-f' and '-g' options.")), ToolInput(tag="in_be_fasta_file", input_type=File(optional=True), prefix="-f", doc=InputDocumentation(doc=": This MUST be the same FASTA file used to generate STARRefDir. Ignored when IRFinder can automatically locate the original file.")), ToolInput(tag="in_be_gtf_file", input_type=File(optional=True), prefix="-g", doc=InputDocumentation(doc=": This MUST be the same GTF file used to generate STARRefDir. Ignored when IRFinder can automatically locate the original file.")), ToolInput(tag="in_sequence_disable_universal", input_type=String(optional=True), prefix="-a", doc=InputDocumentation(doc="sequence: 'none' to disable. Default: Illumina Universal is trimmed.")), ToolInput(tag="in_directory_default_current", input_type=Directory(optional=True), prefix="-d", doc=InputDocumentation(doc="Directory: Default is the current directory.")), ToolInput(tag="in_memory_mode_default", input_type=String(optional=True), prefix="-s", doc=InputDocumentation(doc="memory mode: NoSharedMemory (default), LoadAndKeep, LoadAndRemove.")), ToolInput(tag="in_executable_default_is", input_type=String(optional=True), prefix="-S", doc=InputDocumentation(doc="executable: Default is 'STAR'.")), ToolInput(tag="in_extra_string_parsed", input_type=String(optional=True), prefix="-y", doc=InputDocumentation(doc=": an extra string that is parsed to STAR for reads alignment.")), ToolInput(tag="in_output_sort_file", input_type=File(optional=True), prefix="-u", doc=InputDocumentation(doc="output: Do not sort the read fragment BAM file. Default is to sort ONLY IF a novosort license is present.")), ToolInput(tag="in_memory_maximum_memory", input_type=Int(optional=True), prefix="-M", doc=InputDocumentation(doc="memory. Maximum memory to use for sort, in MB. Default, auto-detected no greater than 10,000MB.")), ToolInput(tag="in_unsorted_dot_bam", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_ftp", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_raw_reads_one_dot_fast_q", input_type=Int(), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output_sort_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_sort_file", type_hint=File()), doc=OutputDocumentation(doc="output: Do not sort the read fragment BAM file. Default is to sort ONLY IF a novosort license is present."))], container="quay.io/biocontainers/irfinder:1.3.1--h516909a_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Irfinder_V0_1_0().translate("wdl")

