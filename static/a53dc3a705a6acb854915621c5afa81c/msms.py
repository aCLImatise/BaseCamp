from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Float, Boolean, String, Int, File

Msms_V0_1_0 = CommandToolBuilder(tool="msms", base_command=["msms"], inputs=[ToolInput(tag="in_probe_radius", input_type=Float(optional=True), prefix="-probe_radius", doc=InputDocumentation(doc=": probe sphere radius, [1.5]")), ToolInput(tag="in_density", input_type=Float(optional=True), prefix="-density", doc=InputDocumentation(doc=": surface points density, [1.0]")), ToolInput(tag="in_h_density", input_type=Float(optional=True), prefix="-hdensity", doc=InputDocumentation(doc=": surface points high density, [3.0]")), ToolInput(tag="in_surface", input_type=Boolean(optional=True), prefix="-surface", doc=InputDocumentation(doc="<tses,ases>: triangulated or Analytical SES, [tses]")), ToolInput(tag="in_no_area", input_type=Boolean(optional=True), prefix="-no_area", doc=InputDocumentation(doc=": turns off the analytical surface area computation")), ToolInput(tag="in_socket_name", input_type=String(optional=True), prefix="-socketName", doc=InputDocumentation(doc=": socket connection from a client")), ToolInput(tag="in_socket_port", input_type=Int(optional=True), prefix="-socketPort", doc=InputDocumentation(doc=": socket connection from a client")), ToolInput(tag="in_xdr", input_type=Boolean(optional=True), prefix="-xdr", doc=InputDocumentation(doc=": use xdr encoding over socket")), ToolInput(tag="in_s_inetd", input_type=Boolean(optional=True), prefix="-sinetd", doc=InputDocumentation(doc=": inetd server connection")), ToolInput(tag="in_noh", input_type=Boolean(optional=True), prefix="-noh", doc=InputDocumentation(doc=": ignore atoms with radius 1.2")), ToolInput(tag="in_no_rest_on_pbr", input_type=Boolean(optional=True), prefix="-no_rest_on_pbr", doc=InputDocumentation(doc=": no restart if pb. during triangulation")), ToolInput(tag="in_no_rest", input_type=Boolean(optional=True), prefix="-no_rest", doc=InputDocumentation(doc=": no restart if pb. are encountered")), ToolInput(tag="in_if", input_type=File(optional=True), prefix="-if", doc=InputDocumentation(doc=": sphere input file")), ToolInput(tag="in_of", input_type=File(optional=True), prefix="-of", doc=InputDocumentation(doc=": output for triangulated surface")), ToolInput(tag="in_af", input_type=File(optional=True), prefix="-af", doc=InputDocumentation(doc=": area file")), ToolInput(tag="in_no_header", input_type=Boolean(optional=True), prefix="-no_header", doc=InputDocumentation(doc=": do not add comment line to the output")), ToolInput(tag="in_free_vertices", input_type=Boolean(optional=True), prefix="-free_vertices", doc=InputDocumentation(doc=": turns on computation for isolated RS vertices")), ToolInput(tag="in_all_components", input_type=Boolean(optional=True), prefix="-all_components", doc=InputDocumentation(doc=": compute all the surfaces components")), ToolInput(tag="in_one_cavity", input_type=Boolean(optional=True), prefix="-one_cavity", doc=InputDocumentation(doc="#atoms at1 [at2][at3] : Compute the surface for an internal                        cavity for which at least one atom is specified"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Msms_V0_1_0().translate("wdl", allow_empty_container=True)

