!Command
command:
- meryl-lookup
positional:
- !Positional
  optional: false
  position: 0
  name: report-type
  description: ''
named:
- !Flag
  optional: true
  synonyms:
  - -sequence
  description: '[<input2.fasta>] \'
  args: !SimpleFlagArg
    name: input1.fasta
- !Flag
  optional: true
  synonyms:
  - -output
  description: <output1>      [<output2>] \
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -bed
  description: ":\nGenerate a BED format file showing the location of kmers in\nany\
    \ input database on each sequence in 'input1.fasta'."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -wig-count
  description: ":\nGenerate a WIGGLE format file showing the multiplicity of the\n\
    kmer starting at each position in the sequence, if it exists in\nan input kmer\
    \ database."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -wig-depth
  description: ":\nGenerate a WIGGLE format file showing the number of kmers in\n\
    any input database that cover each position in the sequence."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -existence
  description: ":\nGenerate a tab-delimited line for each input sequence with the\n\
    number of kmers in the sequence, in the database and common to both."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -exclude
  description: ":\nCopy sequences from 'input1.fasta' (and 'input2.fasta') to the\n\
    corresponding output file if the sequence has at least one kmer\npresent (include)\
    \ or no kmers present (exclude) in 'input1.meryl'."
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "usage: meryl-lookup <report-type> \\\n         -sequence <input1.fasta>\
  \ [<input2.fasta>] \\\n         -output   <output1>      [<output2>] \\\n      \
  \   -mers     <input1.meryl> [<input2.meryl>] [...] [-estimate] \\\n         -labels\
  \   <input1name>   [<input2name>]   [...]\n\n  Compare kmers in input sequences\
  \ against kmers in input meryl databases.\n\n  Input sequences (-sequence) can be\
  \ FASTA or FASTQ, uncompressed, or\n  compressed with gzip, xz, or bzip2.\n\n  Report\
  \ types:\n\n  -bed:\n     Generate a BED format file showing the location of kmers\
  \ in\n     any input database on each sequence in 'input1.fasta'.\n\n  -wig-count:\n\
  \     Generate a WIGGLE format file showing the multiplicity of the\n     kmer starting\
  \ at each position in the sequence, if it exists in\n     an input kmer database.\n\
  \n  -wig-depth:\n     Generate a WIGGLE format file showing the number of kmers\
  \ in\n     any input database that cover each position in the sequence.\n\n  -existence:\n\
  \     Generate a tab-delimited line for each input sequence with the\n     number\
  \ of kmers in the sequence, in the database and common to both.\n\n  -include:\n\
  \  -exclude:\n     Copy sequences from 'input1.fasta' (and 'input2.fasta') to the\n\
  \     corresponding output file if the sequence has at least one kmer\n     present\
  \ (include) or no kmers present (exclude) in 'input1.meryl'.\n\nRun `meryl-lookup\
  \ <report-type> -help` for details on each method.\n\nUnknown option '--help'.\n\
  No report-type (-bed, -wig-count, -wig-depth, -existence, -include, -exclude) supplied.\n"
generated_using:
- --help
docker_image: quay.io/biocontainers/meryl:1.3--h1b792b2_0
