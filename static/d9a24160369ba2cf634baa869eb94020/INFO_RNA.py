from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, String, Float

Info_Rna_V0_1_0 = CommandToolBuilder(tool="INFO_RNA", base_command=["INFO-RNA"], inputs=[ToolInput(tag="in_constraining_sequence_given", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="'constraints'        Constraining sequence given in IUPAC code.")), ToolInput(tag="in_random_initializing_sequence", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="random initializing sequence")), ToolInput(tag="in_give_assignment_regions", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc="[ACGUMRWSYKVHDBN]     Give the assignment (in IUPAC code) where free bases\nin loop regions (that give no energy fraction) are\nset to.")), ToolInput(tag="in_binary_vector_means", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="'allowed mismatches'         binary vector,\n'1' means a mismatch conc. the constraints is allowed,\n'0' means a mismatch is forbidden")), ToolInput(tag="in_mismatch_number_maximal", input_type=Int(optional=True), prefix="-n", doc=InputDocumentation(doc="mismatch number         Maximal number of allowed mismatches in a given\ninterval. If nothing further is given, the interval\nincludes the whole sequence.")), ToolInput(tag="in_use_default_partition", input_type=Boolean(optional=True), prefix="-F", doc=InputDocumentation(doc="[mp]          Use minimum energy (-Fm) (default), partition function\nfolding (-Fp) or both (-Fmp).")), ToolInput(tag="in_number_repeating_step", input_type=Boolean(optional=True), prefix="-R", doc=InputDocumentation(doc="[repeats]     Number of repeating the local search step.")), ToolInput(tag="in_search_strategy_used", input_type=Int(optional=True), prefix="-S", doc=InputDocumentation(doc="Search strategy used during the local search step:\n1 - adaptive walk\n2 - full local search\n3 - stochastic local search (default)")), ToolInput(tag="in_kind_counting_step", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="Kind of counting the step during the local search. Here, only\naccepted mutations are counted, while usually all tested\nneighbors are counted.")), ToolInput(tag="in_maximal_number_step", input_type=Int(optional=True), prefix="-s", doc=InputDocumentation(doc="The maximal number of step during the stochastic local\nsearch is given as product of the structure length and a\nmultiplier. The multiplier is set to 10 by default.")), ToolInput(tag="in_choice_candidate_neighbors", input_type=String(optional=True), prefix="-N", doc=InputDocumentation(doc="choice      Kind of order the candidate neighbors during the local")), ToolInput(tag="in_probability_accept_neighbors", input_type=Float(optional=True), prefix="-p", doc=InputDocumentation(doc="Probability to accept worse neighbors during the stochastic\nlocal search. It is set to 0.1 by default.\n")), ToolInput(tag="in_search_dot", input_type=String(), position=0, doc=InputDocumentation(doc="1 - randomly\n2 - energy dependent (default)"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Info_Rna_V0_1_0().translate("wdl", allow_empty_container=True)

