!Command
command:
- oncogemini
- dump
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - --variants
  description: Report all rows/columns from the variants table.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --genotypes
  description: "Report all rows/columns from the variants table with one line\nper\
    \ sample/genotype."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --samples
  description: Report all rows/columns from the samples table.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --header
  description: Add a header of column names to the output.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --sep
  description: Output column separator
  args: !SimpleFlagArg
    name: STRING
- !Flag
  optional: true
  synonyms:
  - --tfam
  description: Output sample information to TFAM format.
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "usage: oncogemini dump [-h] [--variants] [--genotypes] [--samples] [--header]\n\
  \                       [--sep STRING] [--tfam]\n                       db\n\npositional\
  \ arguments:\n  db            The name of the database to be queried.\n\noptional\
  \ arguments:\n  -h, --help    show this help message and exit\n  --variants    Report\
  \ all rows/columns from the variants table.\n  --genotypes   Report all rows/columns\
  \ from the variants table with one line\n                per sample/genotype.\n\
  \  --samples     Report all rows/columns from the samples table.\n  --header   \
  \   Add a header of column names to the output.\n  --sep STRING  Output column separator\n\
  \  --tfam        Output sample information to TFAM format.\n"
generated_using:
- --help
docker_image: quay.io/biocontainers/oncogemini:1.0.0--pyh3252c3a_0
