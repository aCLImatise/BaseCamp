from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File

Ntedit_V0_1_0 = CommandToolBuilder(tool="ntedit", base_command=["ntedit"], inputs=[ToolInput(tag="in__number_threads", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc=",     number of threads [default=1]")), ToolInput(tag="in_draft_genome_assembly", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc=",     draft genome assembly (FASTA, Multi-FASTA, and/or gzipped compatible), REQUIRED")), ToolInput(tag="in_bloom_filter_file", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc=",     Bloom filter file (generated from ntHits), REQUIRED")), ToolInput(tag="in_secondary_bloom_filter", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc=",     secondary Bloom filter with kmers to reject (generated from ntHits), OPTIONAL. EXPERIMENTAL")), ToolInput(tag="in_output_file_prefix", input_type=File(optional=True), prefix="-b", doc=InputDocumentation(doc=",     output file prefix, OPTIONAL")), ToolInput(tag="in_minimum_contig_length", input_type=Boolean(optional=True), prefix="-z", doc=InputDocumentation(doc=",     minimum contig length [default=100]")), ToolInput(tag="in_maximum_number_insertion_try_range", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc=",     maximum number of insertion bases to try, range 0-5, [default=4]")), ToolInput(tag="in_maximum_number_deletions_try_range", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc=",     maximum number of deletions bases to try, range 0-5, [default=5]")), ToolInput(tag="in_kx_ratio_number", input_type=Boolean(optional=True), prefix="-x", doc=InputDocumentation(doc=",     k/x ratio for the number of kmers that should be missing, [default=5.000]")), ToolInput(tag="in_ky_ratio_number", input_type=Boolean(optional=True), prefix="-y", doc=InputDocumentation(doc=",     k/y ratio for the number of editted kmers that should be present, [default=9.000]")), ToolInput(tag="in_ratio_number_missing", input_type=Boolean(optional=True), prefix="-X", doc=InputDocumentation(doc=",     ratio of number of kmers in the k subset that should be missing in order to attempt fix (higher=stringent), [default=0.5]")), ToolInput(tag="in_ratio_number_present", input_type=Boolean(optional=True), prefix="-Y", doc=InputDocumentation(doc=",     ratio of number of kmers in the k subset that should be present to accept an edit (higher=stringent), [default=0.5]")), ToolInput(tag="in_cap_number_base", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc=",     cap for the number of base insertions that can be made at one position, [default=k*1.5]")), ToolInput(tag="in_controls_size_checking", input_type=Boolean(optional=True), prefix="-j", doc=InputDocumentation(doc=",     controls size of kmer subset. When checking subset of kmers, check every jth kmer, [default=3]")), ToolInput(tag="in_mode_best_substitution", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc=",     mode of editing, range 0-2, [default=0]\n0: best substitution, or first good indel\n1: best substitution, or best indel\n2: best edit overall (suggestion that you reduce i and d for performance)")), ToolInput(tag="in_snv_mode_overrides", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc=",     SNV mode. Overrides draft kmer checks, forcing reassessment at each position (-s 1 = yes, default = 0, no. EXPERIMENTAL)")), ToolInput(tag="in_verbose_mode_default", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc=",     verbose mode (-v 1 = yes, default = 0, no)"))], outputs=[ToolOutput(tag="out_output_file_prefix", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_file_prefix", type_hint=File()), doc=OutputDocumentation(doc=",     output file prefix, OPTIONAL"))], container="quay.io/biocontainers/ntedit:1.3.4--he513fc3_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Ntedit_V0_1_0().translate("wdl")

