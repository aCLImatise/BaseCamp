from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, Boolean, String, Float, File

Drep_Compare_V0_1_0 = CommandToolBuilder(tool="dRep_compare", base_command=["dRep", "compare"], inputs=[ToolInput(tag="in_processors", input_type=Int(optional=True), prefix="--processors", doc=InputDocumentation(doc="threads (default: 6)")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="make extra debugging output (default: False)")), ToolInput(tag="in_mash_sketch", input_type=Int(optional=True), prefix="--MASH_sketch", doc=InputDocumentation(doc="MASH sketch size (default: 1000)")), ToolInput(tag="in_s_algorithm", input_type=String(optional=True), prefix="--S_algorithm", doc=InputDocumentation(doc="Algorithm for secondary clustering comaprisons:\nfastANI = Kmer-based approach; very fast\nANImf   = (DEFAULT) Align whole genomes with nucmer; filter alignment; compare aligned regions\nANIn    = Align whole genomes with nucmer; compare aligned regions\ngANI    = Identify and align ORFs; compare aligned ORFS\ngoANI   = Open source version of gANI; requires nsmimscan\n(default: ANImf)")), ToolInput(tag="in_n_preset", input_type=String(optional=True), prefix="--n_PRESET", doc=InputDocumentation(doc="Presets to pass to nucmer\ntight   = only align highly conserved regions\nnormal  = default ANIn parameters (default: normal)")), ToolInput(tag="in_p_ani", input_type=Float(optional=True), prefix="--P_ani", doc=InputDocumentation(doc="ANI threshold to form primary (MASH) clusters\n(default: 0.9)")), ToolInput(tag="in_s_ani", input_type=Float(optional=True), prefix="--S_ani", doc=InputDocumentation(doc="ANI threshold to form secondary clusters (default:\n0.99)")), ToolInput(tag="in_skip_mash", input_type=Boolean(optional=True), prefix="--SkipMash", doc=InputDocumentation(doc="Skip MASH clustering, just do secondary clustering on\nall genomes (default: False)")), ToolInput(tag="in_skip_secondary", input_type=Boolean(optional=True), prefix="--SkipSecondary", doc=InputDocumentation(doc="Skip secondary clustering, just perform MASH\nclustering (default: False)")), ToolInput(tag="in_cov_thresh", input_type=Float(optional=True), prefix="--cov_thresh", doc=InputDocumentation(doc="Minmum level of overlap between genomes when doing\nsecondary comparisons (default: 0.1)")), ToolInput(tag="in_coverage_method", input_type=String(optional=True), prefix="--coverage_method", doc=InputDocumentation(doc="Method to calculate coverage of an alignment\n(for ANIn/ANImf only; gANI and fastANI can only do larger method)\ntotal   = 2*(aligned length) / (sum of total genome lengths)\nlarger  = max((aligned length / genome 1), (aligned_length / genome2))\n(default: larger)")), ToolInput(tag="in_cluster_alg", input_type=String(optional=True), prefix="--clusterAlg", doc=InputDocumentation(doc="Algorithm used to cluster genomes (passed to\nscipy.cluster.hierarchy.linkage (default: average)")), ToolInput(tag="in_run_tax", input_type=Boolean(optional=True), prefix="--run_tax", doc=InputDocumentation(doc="generate taxonomy information (Tdb) (default: False)")), ToolInput(tag="in_tax_method", input_type=String(optional=True), prefix="--tax_method", doc=InputDocumentation(doc="Method of determining taxonomy\npercent = The most descriptive taxonimic level with at least (per) hits\nmax     = The centrifuge taxonomic level with the most overall hits (default: percent)")), ToolInput(tag="in_percent", input_type=Int(optional=True), prefix="--percent", doc=InputDocumentation(doc="minimum percent for percent method (default: 50)")), ToolInput(tag="in_cent_index", input_type=File(optional=True), prefix="--cent_index", doc=InputDocumentation(doc="path to centrifuge index (for example,\n/home/mattolm/download/centrifuge/indices/b+h+v\n(default: None)")), ToolInput(tag="in_warn_dist", input_type=Float(optional=True), prefix="--warn_dist", doc=InputDocumentation(doc="How far from the threshold to throw cluster warnings\n(default: 0.25)")), ToolInput(tag="in_warn_sim", input_type=Float(optional=True), prefix="--warn_sim", doc=InputDocumentation(doc="Similarity threshold for warnings between dereplicated\ngenomes (default: 0.98)")), ToolInput(tag="in_warn_aln", input_type=Float(optional=True), prefix="--warn_aln", doc=InputDocumentation(doc="Minimum aligned fraction for warnings between\ndereplicated genomes (ANIn) (default: 0.25)")), ToolInput(tag="in_genomes_cluster_format", input_type=Boolean(optional=True), prefix="-g", doc=InputDocumentation(doc="[GENOMES [GENOMES ...]], --genomes [GENOMES [GENOMES ...]]\ngenomes to cluster in .fasta format; can pass a number\nof .fasta files or a single text file listing the\nlocations of all .fasta files (default: None)"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Drep_Compare_V0_1_0().translate("wdl", allow_empty_container=True)

