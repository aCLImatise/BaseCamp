class: CommandLineTool
id: ../../../../home/ubuntu/BiocondaCli/fargene.cwl
inputs:
- id: in_files
  doc: Input file(s) to be searched. Could either be in FASTA or FASTQ format.
  type: string[]
  inputBinding:
    prefix: --infiles
- id: hmm_model
  doc: The Hidden Markov Model that should be used to analyse the data. Could either
    be one of the pre-defined models or the path to a custom HMM.
  type: string
  inputBinding:
    prefix: --hmm-model
- id: score
  doc: 'The threshold score for a sequence to be classified as a (almost) complete
    gene (default: None).'
  type: string
  inputBinding:
    prefix: --score
- id: meta
  doc: 'If the input data is paired end metagenomic data (default: False).'
  type: boolean
  inputBinding:
    prefix: --meta
- id: meta_score
  doc: 'The threshold score for a fragment to be classified as a positive. Expressed
    as score per amino acid (default: None).'
  type: string
  inputBinding:
    prefix: --meta-score
- id: output
  doc: 'The output directory for the whole run (default: ./fargene_output).'
  type: string
  inputBinding:
    prefix: --output
- id: force
  doc: 'Overwrite output directory if it exists (default: False).'
  type: boolean
  inputBinding:
    prefix: --force
- id: tmp_dir
  doc: 'Directory for (sometimes large) intermediate files. (default: OUT_DIR/tmpdir)'
  type: string
  inputBinding:
    prefix: --tmp-dir
- id: protein
  doc: 'If the input sequence(s) is amino acids (default: False).'
  type: boolean
  inputBinding:
    prefix: --protein
- id: processes
  doc: 'Number of processes to be used when processing metagenomic data (default:
    1).'
  type: string
  inputBinding:
    prefix: --processes
- id: min_orf_length
  doc: 'The minimal length for a retrieved predicted ORF (nt). (default: 90% of the
    length of the chosen hmm.)'
  type: long
  inputBinding:
    prefix: --min-orf-length
- id: retrieve_whole
  doc: 'Use this flag if the whole sequence where a hit is detected should be retrieved
    (default: False).'
  type: boolean
  inputBinding:
    prefix: --retrieve-whole
- id: no_orf_predict
  doc: Do not perform ORF prediction.
  type: boolean
  inputBinding:
    prefix: --no-orf-predict
- id: no_quality_filtering
  doc: 'Use if no quality control should be performed on the metagenomic data (default:
    False).'
  type: boolean
  inputBinding:
    prefix: --no-quality-filtering
- id: no_assembly
  doc: 'Use if you want to skip the assembly and retrieval of contigs for metagenomic
    data (default: False).'
  type: boolean
  inputBinding:
    prefix: --no-assembly
- id: orf_finder
  doc: 'Use NCBI ORFfinder instead of prodigal for ORF prediction of genomes/contigs
    (default: False).'
  type: boolean
  inputBinding:
    prefix: --orf-finder
- id: store_peptides
  doc: 'Store the translated sequences. Useful if you plan to redo the analysis using
    a different model and want to skip the preprocessing steps (default: False).'
  type: boolean
  inputBinding:
    prefix: --store-peptides
- id: rerun
  doc: 'Use of you want to redo the analysis or do the analysis using a different
    model and have kept either the nucletide or amino acid sequences. Please note
    that this only works if the input data is the same for both runs (default: False).'
  type: boolean
  inputBinding:
    prefix: --rerun
- id: amino_dir
  doc: Where the amino acid sequences generated by the method are located. Only to
    be used in combination with --rerun
  type: string
  inputBinding:
    prefix: --amino-dir
- id: fast_a_dir
  doc: Where the nucleotide sequences in FASTA generated by previous runs of the method
    are located. Only to be used in combination with --rerun
  type: string
  inputBinding:
    prefix: --fasta-dir
- id: translation_format
  doc: 'The translation format that transeq should use. (default: pearson)'
  type: string
  inputBinding:
    prefix: --translation-format
- id: loglevel
  doc: 'Set logging level (default: INFO).'
  type: string
  inputBinding:
    prefix: --loglevel
- id: log_file
  doc: 'Logfile (default: fargene_analysis.log).'
  type: string
  inputBinding:
    prefix: --logfile
outputs: []
cwlVersion: v1.1
baseCommand:
- fargene
