from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Boolean, File, Int

Srapath_2_10_9_V0_1_0 = CommandToolBuilder(tool="srapath.2.10.9", base_command=["srapath.2.10.9"], inputs=[ToolInput(tag="in_function", input_type=String(optional=True), prefix="--function", doc=InputDocumentation(doc="function to perform (resolve, names,\nsearch) default=resolve or names if\nprotocol is specified")), ToolInput(tag="in_timeout", input_type=String(optional=True), prefix="--timeout", doc=InputDocumentation(doc="timeout-value for request")), ToolInput(tag="in_protocol", input_type=String(optional=True), prefix="--protocol", doc=InputDocumentation(doc="protocol (fasp; http; https; fasp,http;\n..) default=https")), ToolInput(tag="in_vers", input_type=String(optional=True), prefix="--vers", doc=InputDocumentation(doc="version-string for cgi-calls")), ToolInput(tag="in_url", input_type=String(optional=True), prefix="--url", doc=InputDocumentation(doc="url to be used for cgi-calls")), ToolInput(tag="in_param", input_type=String(optional=True), prefix="--param", doc=InputDocumentation(doc="param to be added to cgi-call (tic=XXXXX):")), ToolInput(tag="in_json", input_type=Boolean(optional=True), prefix="--json", doc=InputDocumentation(doc="print the reply in JSON")), ToolInput(tag="in_project", input_type=Boolean(optional=True), prefix="--project", doc=InputDocumentation(doc="> <project-id>       use numeric [dbGaP] project-id in")), ToolInput(tag="in_path", input_type=Boolean(optional=True), prefix="--path", doc=InputDocumentation(doc="print path of object: names function-only")), ToolInput(tag="in_ngc", input_type=File(optional=True), prefix="--ngc", doc=InputDocumentation(doc="<path> to ngc file")), ToolInput(tag="in_perm", input_type=File(optional=True), prefix="--perm", doc=InputDocumentation(doc="<path> to permission file")), ToolInput(tag="in_location", input_type=String(optional=True), prefix="--location", doc=InputDocumentation(doc="location in cloud")), ToolInput(tag="in_cart", input_type=File(optional=True), prefix="--cart", doc=InputDocumentation(doc="<path> to cart file")), ToolInput(tag="in_disable_multithreading", input_type=Boolean(optional=True), prefix="--disable-multithreading", doc=InputDocumentation(doc="disable multithreading")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Increase the verbosity of the program\nstatus messages. Use multiple times for\nmore verbosity.")), ToolInput(tag="in_log_level", input_type=Int(optional=True), prefix="--log-level", doc=InputDocumentation(doc="Logging level as number or enum string.\nOne of\n(fatal|sys|int|err|warn|info|debug) or\n(0-6) Current/default is warn")), ToolInput(tag="in_option_file", input_type=File(optional=True), prefix="--option-file", doc=InputDocumentation(doc="Read more options and parameters from the")), ToolInput(tag="in_raw_only", input_type=String(), position=0, doc=InputDocumentation(doc="-r|--raw                         print the raw reply (instead of parsing it)")), ToolInput(tag="in_names_cgi_call", input_type=String(), position=1, doc=InputDocumentation(doc="-c|--cache                       resolve cache location along with remote")), ToolInput(tag="in_file_dot", input_type=File(), position=0, doc=InputDocumentation(doc="-h|--help                        print this message"))], outputs=[], container="quay.io/biocontainers/sra-tools:2.10.9--pl526haddd2b5_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Srapath_2_10_9_V0_1_0().translate("wdl")

