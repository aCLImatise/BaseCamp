from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, String, Boolean

Filter_Pl_V0_1_0 = CommandToolBuilder(tool="filter.pl", base_command=["filter.pl"], inputs=[ToolInput(tag="in_column_filter_applied", input_type=Int(optional=True), prefix="-c", doc=InputDocumentation(doc=":           The column to which the filter is applied (if not specified,\nthen if either column passes, the row passes.")), ToolInput(tag="in_number_columns_are", input_type=Int(optional=True), prefix="-h", doc=InputDocumentation(doc=":           Number of columns that are headers (default: 1)")), ToolInput(tag="in_min", input_type=Int(optional=True), prefix="-min", doc=InputDocumentation(doc=":         Filter passes if the number is above or equal to <num>")), ToolInput(tag="in_mins", input_type=Int(optional=True), prefix="-mins", doc=InputDocumentation(doc=":        Filter passes if the number is strictly above <num>")), ToolInput(tag="in_min_l", input_type=Int(optional=True), prefix="-minl", doc=InputDocumentation(doc=":        Filter passes if the number of characters of the column is >= <num>")), ToolInput(tag="in_max", input_type=Int(optional=True), prefix="-max", doc=InputDocumentation(doc=":         Filter passes if the number is below or equal to <num>")), ToolInput(tag="in_maxs", input_type=Int(optional=True), prefix="-maxs", doc=InputDocumentation(doc=":        Filter passes if the number is strictly below <num>")), ToolInput(tag="in_max_l", input_type=Int(optional=True), prefix="-maxl", doc=InputDocumentation(doc=":        Filter passes if the number of characters of the column is <= <num>")), ToolInput(tag="in_abs", input_type=Int(optional=True), prefix="-abs", doc=InputDocumentation(doc=":         Filter passes if the number is above <num> or below -<num>")), ToolInput(tag="in_babs", input_type=Int(optional=True), prefix="-babs", doc=InputDocumentation(doc=":        Filter passes if the number is above -<num> and below <num>")), ToolInput(tag="in_str", input_type=String(optional=True), prefix="-str", doc=InputDocumentation(doc=":         Filter passes if the column contains <str>")), ToolInput(tag="in_est_r", input_type=String(optional=True), prefix="-estr", doc=InputDocumentation(doc=":        Filter passes if the column is equal to <str>")), ToolInput(tag="in_est_r_list", input_type=Int(optional=True), prefix="-estr_list", doc=InputDocumentation(doc=":   Filter passes if the column is equal to one of the values in <str1;str2;...>")), ToolInput(tag="in_nstr", input_type=String(optional=True), prefix="-nstr", doc=InputDocumentation(doc=":        Filter passes if the column is *not* equal to <str>")), ToolInput(tag="in_ne", input_type=Boolean(optional=True), prefix="-ne", doc=InputDocumentation(doc=":                Filter passes if string is not empty")), ToolInput(tag="in_e", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc=":                 Filter passes if string is empty")), ToolInput(tag="in_min_pass", input_type=Int(optional=True), prefix="-min_pass", doc=InputDocumentation(doc=":    Filter passes if at least num columns pass the filter (default: 1)")), ToolInput(tag="in_rel_min_pass", input_type=Int(optional=True), prefix="-rel_min_pass", doc=InputDocumentation(doc=":Filter passes if at least int(num*rowlength) columns pass the filter")), ToolInput(tag="in_numeric", input_type=Boolean(optional=True), prefix="-numeric", doc=InputDocumentation(doc=":           Filter passes if string is numeric")), ToolInput(tag="in_pass_from", input_type=Boolean(optional=True), prefix="-pass_from", doc=InputDocumentation(doc=":         Print all rows from the point that one row passed the filter")), ToolInput(tag="in_use_column_num", input_type=Int(optional=True), prefix="-u", doc=InputDocumentation(doc=":           Use column <num> as the value for the the specified filters (e.g.\nfor the parameters ' -c 1 -u 0 -mins ' rows whose value in the second\ncolumn is greater than the value in the first column will pass)")), ToolInput(tag="in_print_num", input_type=Boolean(optional=True), prefix="-print_num", doc=InputDocumentation(doc=":         Prints the number of columns that passed the filter")), ToolInput(tag="in_sk", input_type=Int(optional=True), prefix="-sk", doc=InputDocumentation(doc=":          Print first num rows without filtering")), ToolInput(tag="in_skip", input_type=Int(optional=True), prefix="-skip", doc=InputDocumentation(doc=":        Print first num rows without filtering")), ToolInput(tag="in_quite_mode_default", input_type=Boolean(optional=True), prefix="-q", doc=InputDocumentation(doc=":                 Quite mode (default is verbose)"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Filter_Pl_V0_1_0().translate("wdl", allow_empty_container=True)

