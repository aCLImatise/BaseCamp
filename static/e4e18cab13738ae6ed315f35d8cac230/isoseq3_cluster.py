from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Isoseq3_Cluster_V0_1_0 = CommandToolBuilder(tool="isoseq3_cluster", base_command=["isoseq3", "cluster"], inputs=[ToolInput(tag="in_poa_cov", input_type=Boolean(optional=True), prefix="--poa-cov", doc=InputDocumentation(doc="INT   Maximum number of CCS reads used for POA consensus. [10]")), ToolInput(tag="in_use_qvs", input_type=Boolean(optional=True), prefix="--use-qvs", doc=InputDocumentation(doc="Use CCS QVs, sets --poa-cov 100.")), ToolInput(tag="in_min_sub_reads_split", input_type=Boolean(optional=True), prefix="--min-subreads-split", doc=InputDocumentation(doc="INT   Subread threshold for HQ/LQ split, only works with --use-qvs. [7]")), ToolInput(tag="in_split_bam", input_type=Boolean(optional=True), prefix="--split-bam", doc=InputDocumentation(doc="INT   Split BAM output files into at maximum N files; 0 means no splitting [0]")), ToolInput(tag="in_singletons", input_type=Boolean(optional=True), prefix="--singletons", doc=InputDocumentation(doc="Output FLNCs that could not be clustered.")), ToolInput(tag="in_num_threads", input_type=Boolean(optional=True), prefix="--num-threads", doc=InputDocumentation(doc="INT   Number of threads to use, 0 means autodetection. [0]")), ToolInput(tag="in_log_level", input_type=Boolean(optional=True), prefix="--log-level", doc=InputDocumentation(doc="STR   Set log level. Valid choices: (TRACE, DEBUG, INFO, WARN, FATAL). [WARN]")), ToolInput(tag="in_log_file", input_type=Boolean(optional=True), prefix="--log-file", doc=InputDocumentation(doc="FILE  Log to a file, instead of stderr.")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Use verbose output.")), ToolInput(tag="in_iso_seq", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_unpolished_dot_bam_vertical_line_xml", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_str", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_cluster", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_input", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_fl_ncdot_bam_vertical_line_xml", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_fl_nc", input_type=String(), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_unpolished", input_type=String(), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_bam", input_type=String(), position=4, doc=InputDocumentation(doc="")), ToolInput(tag="in_or", input_type=String(), position=5, doc=InputDocumentation(doc="")), ToolInput(tag="in_consensus_read_set", input_type=String(), position=6, doc=InputDocumentation(doc="")), ToolInput(tag="in_transcript_set", input_type=String(), position=6, doc=InputDocumentation(doc=""))], outputs=[], container="quay.io/biocontainers/isoseq3:3.4.0--0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Isoseq3_Cluster_V0_1_0().translate("wdl")

