from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File

Mutscan_V0_1_0 = CommandToolBuilder(tool="mutscan", base_command=["mutscan"], inputs=[ToolInput(tag="in_read_one", input_type=Boolean(optional=True), prefix="--read1", doc=InputDocumentation(doc="read1 file name (string)")), ToolInput(tag="in_read_two", input_type=Boolean(optional=True), prefix="--read2", doc=InputDocumentation(doc="read2 file name (string [=])")), ToolInput(tag="in_mutation", input_type=Boolean(optional=True), prefix="--mutation", doc=InputDocumentation(doc="mutation file name, can be a CSV format or a VCF format (string [=])")), ToolInput(tag="in_ref", input_type=Boolean(optional=True), prefix="--ref", doc=InputDocumentation(doc="reference fasta file name (only needed when mutation file is a VCF) (string [=])")), ToolInput(tag="in_json", input_type=Boolean(optional=True), prefix="--json", doc=InputDocumentation(doc="filename of JSON report, default is no JSON report (string [=])")), ToolInput(tag="in_thread", input_type=Boolean(optional=True), prefix="--thread", doc=InputDocumentation(doc="worker thread number, default is 4 (int [=4])")), ToolInput(tag="in_support", input_type=Boolean(optional=True), prefix="--support", doc=InputDocumentation(doc="min read support for reporting a mutation, default is 2 (int [=2])")), ToolInput(tag="in_mark", input_type=Boolean(optional=True), prefix="--mark", doc=InputDocumentation(doc="when mutation file is a vcf file, --mark means only process the records with FILTER column is M")), ToolInput(tag="in_legacy", input_type=Boolean(optional=True), prefix="--legacy", doc=InputDocumentation(doc="use legacy mode, usually much slower but may be able to find a little more reads in certain case")), ToolInput(tag="in_standalone", input_type=File(optional=True), prefix="--standalone", doc=InputDocumentation(doc="output standalone HTML report with single file. Don't use this option when scanning too many target mutations (i.e. >1000 mutations)")), ToolInput(tag="in_simplified", input_type=Boolean(optional=True), prefix="--simplified", doc=InputDocumentation(doc="simplified mode uses less RAM but reports less information. This option can be auto/on/off, by default it's auto, which means automatically enabled when processing large FASTQ with large VCF. (string [=auto])")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="enable verbose mode, more information will be output in STDERR"))], outputs=[ToolOutput(tag="out_standalone", output_type=File(optional=True), selector=InputSelector(input_to_select="in_standalone", type_hint=File()), doc=OutputDocumentation(doc="output standalone HTML report with single file. Don't use this option when scanning too many target mutations (i.e. >1000 mutations)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Mutscan_V0_1_0().translate("wdl", allow_empty_container=True)

