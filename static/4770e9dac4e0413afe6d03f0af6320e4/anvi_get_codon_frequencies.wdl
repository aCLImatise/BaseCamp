version 1.0

task Anvigetcodonfrequencies {
  input {
    String? anvianvigencontigsdatabase_default_none
    String? gene_caller_id
    Boolean? return_aa_frequencies_instead
    File? output_file
    Boolean? percent_normalize
    Boolean? mere_ns_codon_normalization
    String _can_provide
  }
  command <<<
    anvi_get_codon_frequencies \
      ~{_can_provide} \
      ~{if defined(anvianvigencontigsdatabase_default_none) then ("--contigs-db " +  '"' + anvianvigencontigsdatabase_default_none + '"') else ""} \
      ~{if defined(gene_caller_id) then ("--gene-caller-id " +  '"' + gene_caller_id + '"') else ""} \
      ~{if (return_aa_frequencies_instead) then "--return-AA-frequencies-instead" else ""} \
      ~{if defined(output_file) then ("--output-file " +  '"' + output_file + '"') else ""} \
      ~{if (percent_normalize) then "--percent-normalize" else ""} \
      ~{if (mere_ns_codon_normalization) then "--merens-codon-normalization" else ""}
  >>>
  runtime {
    docker: "quay.io/biocontainers/anvio-minimal:7--py_0"
  }
  parameter_meta {
    anvianvigencontigsdatabase_default_none: "Anvi'o contigs database generated by 'anvi-gen-\\ncontigs-database' (default: None)"
    gene_caller_id: "OK. You can declare a single gene caller ID if you\\nwish, in which case anvi'o would only return results\\nfor a single gene call. If you don't declare anything,\\nwell, you must be prepared to brace yourself if you\\nare working with a very large contigs database with\\nhundreds of thousands of genes. (default: None)"
    return_aa_frequencies_instead: "By default, anvi'o will return codon frequencies (as\\nthe name suggests), but you can ask for amino acid\\nfrequencies instead, simply because you always need\\nmore data and more stuff. You're lucky this time, but\\nis there an end to this? Will you ever be satisfied\\nwith what you have? Anvi'o needs answers. (default:\\nFalse)"
    output_file: "File path to store results. (default: None)"
    percent_normalize: "Instead of actual counts, report percent-normalized\\nfrequencies per gene (because you are too lazy to do\\nthings the proper way in R). (default: False)"
    mere_ns_codon_normalization: "This is a flag to percent normalize codon frequenies\\nwithin those that encode for the same amino acid. It\\nis different from the flag --percent-normalize, since\\nit does not percent normalize frequencies of codons\\nwithin a gene based on all codon frequencies. Clearly\\nthis flag is not applicable if you wish to work with\\nboring amino acids. WHO WORKS WITH AMINO ACIDS\\nANYWAYS. (default: False)"
    _can_provide: "üçï Can provide: "
  }
  output {
    File out_stdout = stdout()
    File out_output_file = "${in_output_file}"
  }
}