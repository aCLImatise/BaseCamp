!Command
command:
- meryl-lookup
positional:
- !Positional
  optional: false
  position: 0
  name: speed.
  description: If the lookup table requires more memory than allowed, the program
named:
- !Flag
  optional: true
  synonyms:
  - -sequence2
  - -r2
  description: only required for -include and -exclude
  args: !SimpleFlagArg
    name: and
- !Flag
  optional: true
  synonyms:
  - -min
  description: m    Ignore kmers with value below m
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -max
  description: m    Ignore kmers with value above m
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -threads
  description: Number of threads to use when constructing lookup table.
  args: !SimpleFlagArg
    name: t
- !Flag
  optional: true
  synonyms:
  - -memory
  description: Don't use more than m GB memory
  args: !SimpleFlagArg
    name: m
- !Flag
  optional: true
  synonyms:
  - -existence
  description: "Report a tab-delimited line for each sequence showing\nthe number\
    \ of kmers in the sequence, in the database,\nand in both.\noutput:  seqName <tab>\
    \ mersInSeq <tab> mersInDB <tab> mersInBoth\nseqName    - name of the sequence\n\
    mersInSeq  - number of mers in the sequence\nmersInDB   - number of mers in the\
    \ meryl database\nmersInBoth - number of mers in the sequence that are\nalso in\
    \ the database"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -dump
  description: "Report a tab-delimited line reporting each kmer in the input\nsequences,\
    \ in order, annotated with the value of the kmer in\nthe input database.  If the\
    \ kmer does not exist in the database\nits value will be reported as zero.\noutput:\
    \  seqName <tab> seqId <tab> seqPos <tab> exists <tab> fwd-mer <tab> fwd-val <tab>\
    \ rev-mer <tab> rev-val\nseqName    - name of the sequence this kmer is from\n\
    seqId      - numeric version of the seqName (0-based)\nseqPos     - start position\
    \ (0-based) of the kmer in the sequence\nexists     - 'T' if the kmer exists in\
    \ the database, 'F' if it does not\nfwd-mer    - forward mer sequence\nfwd-val\
    \    - value of the forward mer in the database\nrev-mer    - reverse mer sequence\n\
    rev-val    - value of the reverse mer in the database"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -include
  description: "Extract sequences *containing* kmers in <input.meryl>.\noutput:  sequence\
    \ given format (fasta or fastq) with the number of overlapping kmers appended\n\
    if pairs of sequences are given, R1 will be stdout and R2 be named as <output.r2>\n\
    <output.r2> will be automatically compressed if ends with .gz, .bz2, or xs\nseqName\
    \    - name of the sequence this kmer is from\nmersInBoth - number of mers in\
    \ both sequence and in the database"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -exclude
  description: "Extract sequences *NOT containing* kmers in <input.meryl>.\noutput:\
    \  sequence given format (fasta or fastq) without reads containing kmers\nif pairs\
    \ of sequences are given, R1 will be stdout and R2 be named as <output.r2>\n<output.r2>\
    \ will be automatically compressed if ends with .gz, .bz2, or xs\nseqName    -\
    \ name of the sequence this kmer is from"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -mers
  description: ''
  args: !SimpleFlagArg
    name: input.meryl
- !Flag
  optional: true
  synonyms:
  - -sequence
  description: ''
  args: !SimpleFlagArg
    name: input.fasta
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "usage: meryl-lookup <report-type> -sequence <input.fasta> -mers <input.meryl>\
  \ [-sequence2 <input.fasta> -r2 <output.r2>]\n  Query the kmers in meryl database\
  \ <input.meryl> with the sequences\n  in <input.fasta> (both FASTA and FASTQ supported,\
  \ file can be compressed).\n  -sequence2 and -r2 is only required for -include and\
  \ -exclude\n\n  The meryl database can be filtered by value.  More advanced filtering\n\
  \  requires a new database to be constructed using meryl.\n    -min   m    Ignore\
  \ kmers with value below m\n    -max   m    Ignore kmers with value above m\n  \
  \  -threads t  Number of threads to use when constructing lookup table.\n\n  Memory\
  \ usage can be limited, within reason, by sacrificing kmer lookup\n  speed.  If\
  \ the lookup table requires more memory than allowed, the program\n  exits with\
  \ an error.\n    -memory m   Don't use more than m GB memory\n\n  Exactly one report\
  \ type must be specified.\n\n  -existence     Report a tab-delimited line for each\
  \ sequence showing\n                 the number of kmers in the sequence, in the\
  \ database,\n                 and in both.\n\n     output:  seqName <tab> mersInSeq\
  \ <tab> mersInDB <tab> mersInBoth\n         seqName    - name of the sequence\n\
  \         mersInSeq  - number of mers in the sequence\n         mersInDB   - number\
  \ of mers in the meryl database\n         mersInBoth - number of mers in the sequence\
  \ that are\n                      also in the database\n\n  -dump          Report\
  \ a tab-delimited line reporting each kmer in the input\n                 sequences,\
  \ in order, annotated with the value of the kmer in\n                 the input\
  \ database.  If the kmer does not exist in the database\n                 its value\
  \ will be reported as zero.\n\n     output:  seqName <tab> seqId <tab> seqPos <tab>\
  \ exists <tab> fwd-mer <tab> fwd-val <tab> rev-mer <tab> rev-val\n         seqName\
  \    - name of the sequence this kmer is from\n         seqId      - numeric version\
  \ of the seqName (0-based)\n         seqPos     - start position (0-based) of the\
  \ kmer in the sequence\n         exists     - 'T' if the kmer exists in the database,\
  \ 'F' if it does not\n         fwd-mer    - forward mer sequence\n         fwd-val\
  \    - value of the forward mer in the database\n         rev-mer    - reverse mer\
  \ sequence\n         rev-val    - value of the reverse mer in the database\n\n \
  \ -include       Extract sequences *containing* kmers in <input.meryl>.\n\n    \
  \ output:  sequence given format (fasta or fastq) with the number of overlapping\
  \ kmers appended\n              if pairs of sequences are given, R1 will be stdout\
  \ and R2 be named as <output.r2>\n              <output.r2> will be automatically\
  \ compressed if ends with .gz, .bz2, or xs\n         seqName    - name of the sequence\
  \ this kmer is from\n         mersInBoth - number of mers in both sequence and in\
  \ the database\n\n  -exclude       Extract sequences *NOT containing* kmers in <input.meryl>.\n\
  \n     output:  sequence given format (fasta or fastq) without reads containing\
  \ kmers\n              if pairs of sequences are given, R1 will be stdout and R2\
  \ be named as <output.r2>\n              <output.r2> will be automatically compressed\
  \ if ends with .gz, .bz2, or xs\n         seqName    - name of the sequence this\
  \ kmer is from\n\nUnknown option '--help'.\nNo input sequences (-sequence) supplied.\n\
  No query meryl database (-mers) supplied.\nNo report-type (-existence, etc) supplied.\n"
generated_using:
- --help
docker_image:
