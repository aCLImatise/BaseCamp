from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, File, Int

Gffread_V0_1_0 = CommandToolBuilder(tool="gffread", base_command=["gffread"], inputs=[ToolInput(tag="in_discard_transcripts_having", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="discard transcripts having an intron larger than <maxintron>")), ToolInput(tag="in_discard_transcripts_shorter", input_type=Boolean(optional=True), prefix="-l", doc=InputDocumentation(doc="discard transcripts shorter than <minlen> bases")), ToolInput(tag="in_only_show_transcripts", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="only show transcripts overlapping coordinate range <start>..<end>\n(on chromosome/contig <chr>, strand <strand> if provided)")), ToolInput(tag="in_r_option_discard", input_type=Boolean(optional=True), prefix="-R", doc=InputDocumentation(doc="for -r option, discard all transcripts that are not fully\ncontained within the given range")), ToolInput(tag="in_discard_singleexon_transcripts", input_type=Boolean(optional=True), prefix="-U", doc=InputDocumentation(doc="discard single-exon transcripts")), ToolInput(tag="in_coding_discard_mrnas", input_type=Boolean(optional=True), prefix="-C", doc=InputDocumentation(doc="coding only: discard mRNAs that have no CDS features")), ToolInput(tag="in_nc", input_type=String(optional=True), prefix="--nc", doc=InputDocumentation(doc="only: discard mRNAs that have CDS features")), ToolInput(tag="in_ignore_locus", input_type=Boolean(optional=True), prefix="--ignore-locus", doc=InputDocumentation(doc=": discard locus features and attributes found in the input")), ToolInput(tag="in_use_description_field", input_type=Boolean(optional=True), prefix="-A", doc=InputDocumentation(doc="use the description field from <seq_info.fsize> and add it\nas the value for a 'descr' attribute to the GFF record")), ToolInput(tag="in_seqinfofsize_tabdelimited_file", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="<seq_info.fsize> is a tab-delimited file providing this info\nfor each of the mapped sequences:\n<seq-name> <seq-length> <seq-description>\n(useful for -A option with mRNA/EST/protein mappings)")), ToolInput(tag="in_sort_alpha", input_type=Boolean(optional=True), prefix="--sort-alpha", doc=InputDocumentation(doc=": chromosomes (reference sequences) are sorted alphabetically")), ToolInput(tag="in_sort_by", input_type=Boolean(optional=True), prefix="--sort-by", doc=InputDocumentation(doc=": sort the reference sequences by the order in which their\nnames are given in the <refseq.lst> file")), ToolInput(tag="in_preserve_gff_attributes", input_type=Boolean(optional=True), prefix="-F", doc=InputDocumentation(doc="preserve all GFF attributes (for non-exon features)")), ToolInput(tag="in_keep_exon_attrs", input_type=Boolean(optional=True), prefix="--keep-exon-attrs", doc=InputDocumentation(doc=": for -F option, do not attempt to reduce redundant\nexon/CDS attributes")), ToolInput(tag="in_keep_attributes_move", input_type=Boolean(optional=True), prefix="-G", doc=InputDocumentation(doc="do not keep exon attributes, move them to the transcript feature\n(for GFF3 output)")), ToolInput(tag="in_keep_genes", input_type=Boolean(optional=True), prefix="--keep-genes", doc=InputDocumentation(doc=": in transcript-only mode (default), also preserve gene records")), ToolInput(tag="in_keep_comments", input_type=Boolean(optional=True), prefix="--keep-comments", doc=InputDocumentation(doc=": for GFF3 input/output, try to preserve comments")), ToolInput(tag="in_process_other_records", input_type=Boolean(optional=True), prefix="-O", doc=InputDocumentation(doc="process other non-transcript GFF records (by default non-transcript\nrecords are ignored)")), ToolInput(tag="in_discard_mrnas_cds", input_type=Boolean(optional=True), prefix="-V", doc=InputDocumentation(doc="discard any mRNAs with CDS having in-frame stop codons (requires -g)")), ToolInput(tag="in_v_option_check", input_type=Boolean(optional=True), prefix="-H", doc=InputDocumentation(doc="for -V option, check and adjust the starting CDS phase\nif the original phase leads to a translation with an\nin-frame stop codon")), ToolInput(tag="in_v_option_singleexon", input_type=Boolean(optional=True), prefix="-B", doc=InputDocumentation(doc="for -V option, single-exon transcripts are also checked on the\nopposite strand (requires -g)")), ToolInput(tag="in_add_transcript_level", input_type=Boolean(optional=True), prefix="-P", doc=InputDocumentation(doc="add transcript level GFF attributes about the coding status of each\ntranscript, including partialness or in-frame stop codons (requires -g)")), ToolInput(tag="in_add_has_cds", input_type=Boolean(optional=True), prefix="--add-hasCDS", doc=InputDocumentation(doc=": add a 'hasCDS' attribute with value 'true' for transcripts\nthat have CDS features")), ToolInput(tag="in_adj_stop", input_type=String(optional=True), prefix="--adj-stop", doc=InputDocumentation(doc="codon adjustment: enables -P and performs automatic\nadjustment of the CDS stop coordinate if premature or downstream")), ToolInput(tag="in_discard_multiexon_mrnas", input_type=Boolean(optional=True), prefix="-N", doc=InputDocumentation(doc="discard multi-exon mRNAs that have any intron with a non-canonical\nsplice site consensus (i.e. not GT-AG, GC-AG or AT-AC)")), ToolInput(tag="in_discard_mrnas_codonor", input_type=Boolean(optional=True), prefix="-J", doc=InputDocumentation(doc="discard any mRNAs that either lack initial START codon\nor the terminal STOP codon, or have an in-frame stop codon\n(i.e. only print mRNAs with a complete CDS)")), ToolInput(tag="in_no_pseudo", input_type=Boolean(optional=True), prefix="--no-pseudo", doc=InputDocumentation(doc=": filter out records matching the 'pseudo' keyword")), ToolInput(tag="in_in_bed", input_type=Boolean(optional=True), prefix="--in-bed", doc=InputDocumentation(doc=": input should be parsed as BED format (automatic if the input\nfilename ends with .bed*)")), ToolInput(tag="in_in_tlf", input_type=Boolean(optional=True), prefix="--in-tlf", doc=InputDocumentation(doc=": input GFF-like one-line-per-transcript format without exon/CDS\nfeatures (see --tlf option below); automatic if the input\nfilename ends with .tlf)")), ToolInput(tag="in_stream", input_type=Boolean(optional=True), prefix="--stream", doc=InputDocumentation(doc=": fast processing of input GFF/BED transcripts as they are received\n((no sorting, exons must be grouped by transcript in the input data)")), ToolInput(tag="in_merge", input_type=Boolean(optional=True), prefix="--merge", doc=InputDocumentation(doc=": cluster the input transcripts into loci, discarding\n'duplicated' transcripts (those with the same exact introns\nand fully contained or equal boundaries)")), ToolInput(tag="in_m_option_write", input_type=File(optional=True), prefix="-d", doc=InputDocumentation(doc=": for -M option, write duplication info to file <dupinfo>")), ToolInput(tag="in_cluster_only", input_type=Boolean(optional=True), prefix="--cluster-only", doc=InputDocumentation(doc=": same as -M/--merge but without discarding any of the\n'duplicate' transcripts, only create 'locus' features")), ToolInput(tag="in_m_option_also", input_type=Boolean(optional=True), prefix="-K", doc=InputDocumentation(doc="for -M option: also discard as redundant the shorter, fully contained\ntranscripts (intron chains matching a part of the container)")), ToolInput(tag="in_m_option_no", input_type=Boolean(optional=True), prefix="-Q", doc=InputDocumentation(doc="for -M option, no longer require boundary containment when assessing\nredundancy (can be combined with -K); only introns have to match for\nmulti-exon transcripts, and >=80% overlap for single-exon transcripts")), ToolInput(tag="in_m_option_enforce", input_type=Boolean(optional=True), prefix="-Y", doc=InputDocumentation(doc="for -M option, enforce -Q but also discard overlapping single-exon\ntranscripts, even on the opposite strand (can be combined with -K)")), ToolInput(tag="in_force_exons", input_type=Boolean(optional=True), prefix="--force-exons", doc=InputDocumentation(doc=": make sure that the lowest level GFF features are considered\n'exon' features")), ToolInput(tag="in_gene_two_exon", input_type=Boolean(optional=True), prefix="--gene2exon", doc=InputDocumentation(doc=": for single-line genes not parenting any transcripts, add an\nexon feature spanning the entire gene (treat it as a transcript)")), ToolInput(tag="in_t_adopt", input_type=Boolean(optional=True), prefix="--t-adopt", doc=InputDocumentation(doc=":  try to find a parent gene overlapping/containing a transcript\nthat does not have any explicit gene Parent")), ToolInput(tag="in_decode_url_encoded", input_type=Boolean(optional=True), prefix="-D", doc=InputDocumentation(doc="decode url encoded characters within attributes")), ToolInput(tag="in_merge_close_exons", input_type=Boolean(optional=True), prefix="-Z", doc=InputDocumentation(doc="merge very close exons into a single exon (when intron size<4)")), ToolInput(tag="in_full_path_names", input_type=Boolean(optional=True), prefix="-g", doc=InputDocumentation(doc="full path to a multi-fasta file with the genomic sequences\nfor all input mappings, OR a directory with single-fasta files\n(one per genomic sequence, with file names matching sequence names)")), ToolInput(tag="in_write_spliced_exons", input_type=Boolean(optional=True), prefix="-w", doc=InputDocumentation(doc="write a fasta file with spliced exons for each transcript")), ToolInput(tag="in_w_add", input_type=String(optional=True), prefix="--w-add", doc=InputDocumentation(doc="for the -w option, extract additional <N> bases\nboth upstream and downstream of the transcript boundaries")), ToolInput(tag="in_write_spliced_cds", input_type=Boolean(optional=True), prefix="-x", doc=InputDocumentation(doc="write a fasta file with spliced CDS for each GFF transcript")), ToolInput(tag="in_write_protein_file", input_type=Boolean(optional=True), prefix="-y", doc=InputDocumentation(doc="write a protein fasta file with the translation of CDS for each record")), ToolInput(tag="in_w_options_write", input_type=Boolean(optional=True), prefix="-W", doc=InputDocumentation(doc="for -w and -x options, write in the FASTA defline all the exon\ncoordinates projected onto the spliced sequence;")), ToolInput(tag="in_y_option_use", input_type=Boolean(optional=True), prefix="-S", doc=InputDocumentation(doc="for -y option, use '*' instead of '.' as stop codon translation")), ToolInput(tag="in_ensembl_gtf_gff", input_type=Boolean(optional=True), prefix="-L", doc=InputDocumentation(doc="Ensembl GTF to GFF3 conversion (implies -F; should be used with -m)")), ToolInput(tag="in_chrreplace_name_mapping", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="<chr_replace> is a name mapping table for converting reference\nsequence names, having this 2-column format:\n<original_ref_ID> <new_ref_ID>")), ToolInput(tag="in_use_trackname_nd", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="use <trackname> in the 2nd column of each GFF/GTF output line")), ToolInput(tag="in_write_records_stdout", input_type=Boolean(optional=True), prefix="-o", doc=InputDocumentation(doc="write the records into <outfile> instead of stdout")), ToolInput(tag="in_main_output_be", input_type=Boolean(optional=True), prefix="-T", doc=InputDocumentation(doc="main output will be GTF instead of GFF3")), ToolInput(tag="in_bed", input_type=Int(optional=True), prefix="--bed", doc=InputDocumentation(doc="records in BED format instead of default GFF3")), ToolInput(tag="in_tlf", input_type=String(optional=True), prefix="--tlf", doc=InputDocumentation(doc="'transcript line format' which is like GFF\nbut exons, CDS features and related data are stored as GFF\nattributes in the transcript feature line, like this:\nexoncount=N;exons=<exons>;CDSphase=<N>;CDS=<CDScoords>\n<exons> is a comma-delimited list of exon_start-exon_end coordinates;\n<CDScoords> is CDS_start:CDS_end coordinates or a list like <exons>")), ToolInput(tag="in_table", input_type=String(optional=True), prefix="--table", doc=InputDocumentation(doc="a simple tab delimited format instead of GFF, with columns\nhaving the values of GFF attributes given in <attrlist>; special\npseudo-attributes (prefixed by @) are recognized:\n@id, @geneid, @chr, @start, @end, @strand, @numexons, @exons,\n@cds, @covlen, @cdslen\nIf any of -w/-y/-x FASTA output files are enabled, the same fields\n(excluding @id) are appended to the definition line of corresponding\nFASTA records")), ToolInput(tag="in_warn_duplicate_transcript", input_type=String(optional=True), prefix="-v", doc=InputDocumentation(doc="(warn about) duplicate transcript IDs and other potential\nproblems with the given GFF/GTF records\n"))], outputs=[], container="quay.io/biocontainers/gffread:0.12.1--h8b12597_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Gffread_V0_1_0().translate("wdl")

