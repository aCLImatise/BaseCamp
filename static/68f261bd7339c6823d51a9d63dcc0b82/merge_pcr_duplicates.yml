&id001 !Command
positional: []
named:
- !Flag
  description: Write results to this file.
  synonyms:
  - -o
  - --outfile
  args: !SimpleFlagArg
    name: OUTFILE
  optional: true
- !Flag
  description: Be verbose.
  synonyms:
  - -v
  - --verbose
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Print lots of debugging information
  synonyms:
  - -d
  - --debug
  args: !EmptyFlagArg {}
  optional: true
command:
- merge_pcr_duplicates.py
parent:
subcommands:
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: merge_pcr_duplicates.py
    optional: false
  - !Positional
    description: ''
    position: 1
    name: alignments
    optional: false
  - !Positional
    description: ''
    position: 2
    name: bclib
    optional: false
  named:
  - !Flag
    description: ''
    synonyms:
    - -o
    args: !SimpleFlagArg
      name: OUTFILE
    optional: true
  - !Flag
    description: ''
    synonyms:
    - -v
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: ''
    synonyms:
    - -d
    args: !EmptyFlagArg {}
    optional: true
  command:
  - merge_pcr_duplicates.py
  - bclib
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: ''
    synonyms:
    - -h
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: merge_pcr_duplicates.py [-h] -o OUTFILE [-v] [-d] alignments\
    \ bclib\nmerge_pcr_duplicates.py: error: too few arguments\n"
  generated_using: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: merge_pcr_duplicates.py [-h] -o OUTFILE [-v] [-d] alignments bclib\n\
  \nMerge PCR duplicates according to random barcode library. All alignments with\n\
  same outer coordinates and barcode will be merged into a single crosslinking\nevent.\n\
  \nBarcodes containing uncalled base 'N' are removed.\n\nInput:\n* bed6 file containing\
  \ alignments with fastq read-id in name field\n* fastq library of random barcodes\n\
  \nOutput:\n* bed6 file with a read id from a representative alignment in the name\
  \ field and\n  number of PCR duplicates as score, sorted by fields chrom, start,\
  \ stop,\n  strand, name\n\nExample usage:\n- read PCR duplicates from file duplicates.bed\
  \ and write merged results to file\n  merged.bed:\nmerge_pcr_duplicates.py duplicates.bed\
  \ bclibrary.fa --outfile merged.bed\n\npositional arguments:\n  alignments     \
  \       Path to bed6 file containing alignments.\n  bclib                 Path to\
  \ fastq barcode library.\n\noptional arguments:\n  -h, --help            show this\
  \ help message and exit\n  -o OUTFILE, --outfile OUTFILE\n                     \
  \   Write results to this file.\n  -v, --verbose         Be verbose.\n  -d, --debug\
  \           Print lots of debugging information\n"
generated_using:
- --help
