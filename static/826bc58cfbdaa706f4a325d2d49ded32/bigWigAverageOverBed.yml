!Command
command:
- bigWigAverageOverBed
positional:
- !Positional
  optional: false
  position: 0
  name: in.bw
  description: ''
- !Positional
  optional: false
  position: 1
  name: in.bed
  description: ''
named:
- !Flag
  optional: true
  synonyms:
  - -stats
  description: '- Output a collection of overall statistics to stat.ra file'
  args: !SimpleFlagArg
    name: stats.ra
- !Flag
  optional: true
  synonyms:
  - -bedOut
  description: '- Make output bed that is echo of input bed but with mean column appended'
  args: !SimpleFlagArg
    name: out.bed
- !Flag
  optional: true
  synonyms:
  - -sampleAroundCenter
  description: "- Take sample at region N bases wide centered around bed item, rather\n\
    than the usual sample in the bed item."
  args: !SimpleFlagArg
    name: N
- !Flag
  optional: true
  synonyms:
  - -minMax
  description: '- include two additional columns containing the min and max observed
    in the area.'
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "bigWigAverageOverBed v2 - Compute average score of big wig over each bed,\
  \ which may have introns.\nusage:\n   bigWigAverageOverBed in.bw in.bed out.tab\n\
  The output columns are:\n   name - name field from bed, which should be unique\n\
  \   size - size of bed (sum of exon sizes\n   covered - # bases within exons covered\
  \ by bigWig\n   sum - sum of values over all bases covered\n   mean0 - average over\
  \ bases with non-covered bases counting as zeroes\n   mean - average over just covered\
  \ bases\nOptions:\n   -stats=stats.ra - Output a collection of overall statistics\
  \ to stat.ra file\n   -bedOut=out.bed - Make output bed that is echo of input bed\
  \ but with mean column appended\n   -sampleAroundCenter=N - Take sample at region\
  \ N bases wide centered around bed item, rather\n                     than the usual\
  \ sample in the bed item.\n   -minMax - include two additional columns containing\
  \ the min and max observed in the area.\n\n"
generated_using: []
docker_image:
