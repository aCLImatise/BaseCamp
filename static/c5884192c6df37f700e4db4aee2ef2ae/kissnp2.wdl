version 1.0

task Kissnp2 {
  input {
    Boolean? arg_keep_bubbles
    Boolean? arg_maximal_number
    Boolean? arg_maximal_size_predicted
    File? dont_output_first_coverage
    Boolean? in
    Boolean? coverage_file
    Boolean? out
    Boolean? arg_extend_large
    Boolean? arg_extend_first
    Boolean? max_symmetrical_crossroads
    Boolean? arg_branching_mode
    Boolean? max_ambigous_in_del
    Boolean? arg_conserve_snps
    Boolean? nb_cores
    Boolean? verbose
    Boolean? version
    Boolean? bfs_max_depth
    Boolean? bfs_max_breadth
    Boolean? max_truncated_path_length_difference
  }
  command <<<
    kissnp2 \
      ~{if (arg_keep_bubbles) then "-x" else ""} \
      ~{if (arg_maximal_number) then "-P" else ""} \
      ~{if (arg_maximal_size_predicted) then "-D" else ""} \
      ~{if (dont_output_first_coverage) then "-dont_output_first_coverage" else ""} \
      ~{if (in) then "-in" else ""} \
      ~{if (coverage_file) then "-coverage_file" else ""} \
      ~{if (out) then "-out" else ""} \
      ~{if (arg_extend_large) then "-T" else ""} \
      ~{if (arg_extend_first) then "-t" else ""} \
      ~{if (max_symmetrical_crossroads) then "-max_symmetrical_crossroads" else ""} \
      ~{if (arg_branching_mode) then "-b" else ""} \
      ~{if (max_ambigous_in_del) then "-max_ambigous_indel" else ""} \
      ~{if (arg_conserve_snps) then "-l" else ""} \
      ~{if (nb_cores) then "-nb-cores" else ""} \
      ~{if (verbose) then "-verbose" else ""} \
      ~{if (version) then "-version" else ""} \
      ~{if (bfs_max_depth) then "-bfs-max-depth" else ""} \
      ~{if (bfs_max_breadth) then "-bfs-max-breadth" else ""} \
      ~{if (max_truncated_path_length_difference) then "-max_truncated_path_length_difference" else ""}
  >>>
  runtime {
    docker: "None"
  }
  parameter_meta {
    arg_keep_bubbles: "(0 arg) :    keep truncated bubbles, that have no successors on the 2 paths at the same position"
    arg_maximal_number: "(1 arg) :    maximal number of polymorphism per bubble  [default '1']"
    arg_maximal_size_predicted: "(1 arg) :    maximal size of a predicted indel  [default '0']"
    dont_output_first_coverage: "(0 arg) :    Don't output the first coverage threshold. Use this option whent the refernece file is used for finding the variants"
    in: "(1 arg) :    input file (likely a hdf5 file)"
    coverage_file: "(1 arg) :    File (.h5) generated by kissnp2, containing the coverage threshold per read set  [default '_removemeplease']"
    out: "(1 arg) :    output name"
    arg_extend_large: "(0 arg) :    extend found and stop at large polymorphism (extension=contigs) SNPs. Uncompatible with -t"
    arg_extend_first: "(0 arg) :    extend found and stop at first polymorphism (strict extension=unitigs) SNPs. Uncompatible with -T"
    max_symmetrical_crossroads: "(1 arg) :    In b2 mode only: maximal number of symmetrical croasroads traversed while trying to close a bubble. Default: no limit  [default '-1']"
    arg_branching_mode: "(1 arg) :    branching mode\\n0: forbid SNPs for wich any of the two paths is branching (high precision, low recall)\\n1: forbid SNPs for wich the two paths are branching (e.g. the two paths can be created either with a 'A' or a 'C' at the same position (default value)\\n2: No limitation on branching (low precision, high recall)  [default '1']"
    max_ambigous_in_del: "(1 arg) :    Maximal size of ambiguity of INDELs. INDELS whose ambiguity is higher than this value are not output  [default '20']"
    arg_conserve_snps: "(0 arg) :    conserve low complexity SNPs"
    nb_cores: "(1 arg) :    number of cores  [default '0']"
    verbose: "(1 arg) :    verbosity level  [default '1']"
    version: "(0 arg) :    version"
    bfs_max_depth: "(1 arg) :    maximum depth for BFS  [default '200']"
    bfs_max_breadth: "(1 arg) :    maximum breadth for BFS  [default '20']"
    max_truncated_path_length_difference: "(1 arg) :    Longest accepted difference length between two paths of a truncated bubbleS  [default '0']"
  }
  output {
    File out_stdout = stdout()
    File out_dont_output_first_coverage = "${in_dont_output_first_coverage}"
  }
}