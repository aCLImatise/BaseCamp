!Command
command:
- phyluce_align_get_smilogram_from_alignments
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - --alignments
  description: The directory containing the alignment files
  args: !SimpleFlagArg
    name: ALIGNMENTS
- !Flag
  optional: true
  synonyms:
  - --output
  description: "The output filename (without extension - code will add\n.sqlite)"
  args: !SimpleFlagArg
    name: OUTPUT
- !Flag
  optional: true
  synonyms:
  - --input-format
  description: The input alignment format
  args: !ChoiceFlagArg
    choices: !!set
      fasta:
      emboss:
      stockholm:
      clustal:
      phylip:
      nexus:
- !Flag
  optional: true
  synonyms:
  - --cores
  description: The number of cores to use.
  args: !SimpleFlagArg
    name: CORES
- !Flag
  optional: true
  synonyms:
  - --smilogram
  description: Prepare output for smilogram figure
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "usage: phyluce_align_get_smilogram_from_alignments [-h] --alignments\n\
  \                                                   ALIGNMENTS --output OUTPUT\n\
  \                                                   [--input-format {fasta,nexus,phylip,clustal,emboss,stockholm}]\n\
  \                                                   [--cores CORES]\n          \
  \                                         [--smilogram]\n\nRecord variant positions\
  \ in alignments\n\noptional arguments:\n  -h, --help            show this help message\
  \ and exit\n  --alignments ALIGNMENTS\n                        The directory containing\
  \ the alignment files\n  --output OUTPUT       The output filename (without extension\
  \ - code will add\n                        .sqlite)\n  --input-format {fasta,nexus,phylip,clustal,emboss,stockholm}\n\
  \                        The input alignment format\n  --cores CORES         The\
  \ number of cores to use.\n  --smilogram           Prepare output for smilogram\
  \ figure\n"
generated_using:
- --help
docker_image:
