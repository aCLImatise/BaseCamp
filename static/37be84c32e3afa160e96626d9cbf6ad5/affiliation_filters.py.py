from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Array, String, Int, File

Affiliation_Filters_Py_V0_1_0 = CommandToolBuilder(tool="affiliation_filters.py", base_command=["affiliation_filters.py"], inputs=[ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="Keep temporary files to debug program.")), ToolInput(tag="in_taxonomic_ranks", input_type=Array(t=String(), optional=True), prefix="--taxonomic-ranks", doc=InputDocumentation(doc="The ordered ranks levels used in the metadata\ntaxonomy. [Default: ['Domain', 'Phylum', 'Class',\n'Order', 'Family', 'Genus', 'Species']]")), ToolInput(tag="in_mask", input_type=Boolean(optional=True), prefix="--mask", doc=InputDocumentation(doc="If affiliations do not respect one of the filter they\nare replaced by NA (mutually exclusive with --delete)")), ToolInput(tag="in_delete", input_type=Boolean(optional=True), prefix="--delete", doc=InputDocumentation(doc="If affiliations do not respect one of the filter the\nentire OTU is deleted.(mutually exclusive with --mask)")), ToolInput(tag="in_ignore_blast_tax_a", input_type=Boolean(optional=True), prefix="--ignore-blast-taxa", doc=InputDocumentation(doc="[IGNORE_BLAST_TAXA [IGNORE_BLAST_TAXA ...]]\nTaxon list to maks/delete in Blast affiliations")), ToolInput(tag="in_minbootstrap__minrdpbootstrap", input_type=Int(optional=True), prefix="-b", doc=InputDocumentation(doc=":MIN_BOOTSTRAP, --min-rdp-bootstrap TAXONOMIC_LEVEL:MIN_BOOTSTRAP\nThe minimal RDP bootstrap must be superior to this\nvalue (between 0 and 1).")), ToolInput(tag="in_min_blast_identity", input_type=Int(optional=True), prefix="--min-blast-identity", doc=InputDocumentation(doc="The number corresponding to the blast percentage\nidentity (between 0 and 1).")), ToolInput(tag="in_min_blast_coverage", input_type=Int(optional=True), prefix="--min-blast-coverage", doc=InputDocumentation(doc="The number corresponding to the blast percentage\ncoverage (between 0 and 1).")), ToolInput(tag="in_max_blast_evalue", input_type=Int(optional=True), prefix="--max-blast-evalue", doc=InputDocumentation(doc="The number corresponding to the blast e value (between\n0 and 1).")), ToolInput(tag="in_min_blast_length", input_type=Int(optional=True), prefix="--min-blast-length", doc=InputDocumentation(doc="The number corresponding to the blast length.")), ToolInput(tag="in_input_biom", input_type=File(optional=True), prefix="--input-biom", doc=InputDocumentation(doc="The input biom file.")), ToolInput(tag="in_input_fast_a", input_type=File(optional=True), prefix="--input-fasta", doc=InputDocumentation(doc="The input fasta file.")), ToolInput(tag="in_output_biom", input_type=File(optional=True), prefix="--output-biom", doc=InputDocumentation(doc="The Biom file output. [Default: affiliation-\nfiltered.biom]")), ToolInput(tag="in_output_fast_a", input_type=File(optional=True), prefix="--output-fasta", doc=InputDocumentation(doc="The fasta output file. [Default: affiliation-\nfiltered.fasta]")), ToolInput(tag="in_summary", input_type=File(optional=True), prefix="--summary", doc=InputDocumentation(doc="The HTML file containing the graphs. [Default:\nsummary.html]")), ToolInput(tag="in_impacted", input_type=File(optional=True), prefix="--impacted", doc=InputDocumentation(doc="The abundance file that summarizes all the clusters\nimpacted (deleted or with affiliations masked).\n[Default: impacted_clusters.tsv]")), ToolInput(tag="in_impacted_multihit", input_type=File(optional=True), prefix="--impacted-multihit", doc=InputDocumentation(doc="The multihit TSV file associated with impacted OTU.\n[Default: impacted_clusters_multihit.tsv]")), ToolInput(tag="in_log_file", input_type=File(optional=True), prefix="--log-file", doc=InputDocumentation(doc="The list of commands executed.")), ToolInput(tag="in_v", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output_biom", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_biom", type_hint=File()), doc=OutputDocumentation(doc="The Biom file output. [Default: affiliation-\nfiltered.biom]")), ToolOutput(tag="out_output_fast_a", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_fast_a", type_hint=File()), doc=OutputDocumentation(doc="The fasta output file. [Default: affiliation-\nfiltered.fasta]"))], container="quay.io/biocontainers/frogs:3.2.2--py37_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Affiliation_Filters_Py_V0_1_0().translate("wdl")

