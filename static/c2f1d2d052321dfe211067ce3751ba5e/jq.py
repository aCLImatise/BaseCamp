from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, File

Jq_V0_1_0 = CommandToolBuilder(tool="jq", base_command=["jq"], inputs=[ToolInput(tag="in_compact_instead_prettyprinted", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="compact instead of pretty-printed output;")), ToolInput(tag="in_use_null_single", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="use `null` as the single input value;")), ToolInput(tag="in_set_status_code", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc="set the exit status code based on the output;")), ToolInput(tag="in_slurp_inputs_apply", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="read (slurp) all inputs into an array; apply filter to it;")), ToolInput(tag="in_output_raw_strings", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="output raw strings, not JSON texts;")), ToolInput(tag="in_read_raw_strings", input_type=Boolean(optional=True), prefix="-R", doc=InputDocumentation(doc="read raw strings, not JSON texts;")), ToolInput(tag="in_colorize_json", input_type=Boolean(optional=True), prefix="-C", doc=InputDocumentation(doc="colorize JSON;")), ToolInput(tag="in_monochrome_colorize_json", input_type=Boolean(optional=True), prefix="-M", doc=InputDocumentation(doc="monochrome (don't colorize JSON);")), ToolInput(tag="in_sort_keys_objects", input_type=Boolean(optional=True), prefix="-S", doc=InputDocumentation(doc="sort keys of objects on output;")), ToolInput(tag="in_tab", input_type=Boolean(optional=True), prefix="--tab", doc=InputDocumentation(doc="use tabs for indentation;")), ToolInput(tag="in_arg", input_type=String(optional=True), prefix="--arg", doc=InputDocumentation(doc="v      set variable $a to value <v>;")), ToolInput(tag="in_arg_json", input_type=String(optional=True), prefix="--argjson", doc=InputDocumentation(doc="v  set variable $a to JSON value <v>;")), ToolInput(tag="in_slurp_file", input_type=String(optional=True), prefix="--slurpfile", doc=InputDocumentation(doc="f        set variable $a to an array of JSON texts read from <f>;")), ToolInput(tag="in_jq_filter", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_file_dot_dot_dot", input_type=File(optional=True), position=1, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Jq_V0_1_0().translate("wdl", allow_empty_container=True)

