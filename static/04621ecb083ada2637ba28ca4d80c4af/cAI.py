from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Int

Cai_V0_1_0 = CommandToolBuilder(tool="cAI", base_command=["cAI"], inputs=[ToolInput(tag="in_input", input_type=File(optional=True), prefix="--input", doc=InputDocumentation(doc="Input file(s) in fasta format. All files should be\nsplit by comma e.g. 1.fasta,2.fasta,3.fasta[required]\n. Note: input sequence must be cds sequences which\ncould be generated by GetProteinCodingSequence.py.")), ToolInput(tag="in_ot_put_prefix", input_type=String(optional=True), prefix="--otput_prefix", doc=InputDocumentation(doc="Prefix of output files.[required]")), ToolInput(tag="in_trans_file_legend", input_type=File(optional=True), prefix="--trans_file_legend", doc=InputDocumentation(doc="The legend of each fasta file.[required]")), ToolInput(tag="in_upstream_codon", input_type=Int(optional=True), prefix="--upstream_codon", doc=InputDocumentation(doc="Upstream codon corresponding to start codon (codon\nunit). While corresponding to stop codon, it is the\ndownstream codon.default=0")), ToolInput(tag="in_downstream_codon", input_type=Int(optional=True), prefix="--downstream_codon", doc=InputDocumentation(doc="Downstream codon corresponding to start codon (codon\nunit). While corresponding to stop codon, it is the\nupstream codon.default=500")), ToolInput(tag="in_reference", input_type=String(optional=True), prefix="--reference", doc=InputDocumentation(doc="A reference cds sequences used for calculating the\nrelative synonymous codon usage [RSCU].")), ToolInput(tag="in_rs_cu", input_type=String(optional=True), prefix="--RSCU", doc=InputDocumentation(doc="A RSCU files used for calculating each codon weight.\ndefault=none.")), ToolInput(tag="in_weight", input_type=File(optional=True), prefix="--weight", doc=InputDocumentation(doc="A weight file used for calculating the cAI.")), ToolInput(tag="in_table", input_type=Int(optional=True), prefix="--table", doc=InputDocumentation(doc="The genetic code to used. default=1. table = 1, is the\nstandard table, ref: https://www.ncbi.nlm.nih.gov/Taxo\nnomy/Utils/wprintgc.cgi\n"))], outputs=[], container="quay.io/biocontainers/ribominer:0.2.3.1--pyh3252c3a_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Cai_V0_1_0().translate("wdl")

