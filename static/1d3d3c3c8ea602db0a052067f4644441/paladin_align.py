from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, Float, File, String

Paladin_Align_V0_1_0 = CommandToolBuilder(tool="paladin_align", base_command=["paladin", "align"], inputs=[ToolInput(tag="in_disable_orf_detection", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="disable ORF detection and treat input as protein sequence")), ToolInput(tag="in_disable_brute_force", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc="disable brute force ORF detection")), ToolInput(tag="in_adjust_minimum_value", input_type=Boolean(optional=True), prefix="-J", doc=InputDocumentation(doc="do not adjust minimum ORF length (constant value) for shorter read lengths")), ToolInput(tag="in_minimum_orf_length_accepted_constant", input_type=Int(optional=True), prefix="-f", doc=InputDocumentation(doc="minimum ORF length accepted (as constant value) [250]")), ToolInput(tag="in_minimum_orf_length_accepted_percentage", input_type=Float(optional=True), prefix="-F", doc=InputDocumentation(doc="minimum ORF length accepted (as percentage of read length) [0.00]")), ToolInput(tag="in_z", input_type=Int(optional=True), prefix="-z", doc=InputDocumentation(doc="[,...]  Genetic code used for translation (-z ? for full list) [1]")), ToolInput(tag="in_number_of_threads", input_type=Int(optional=True), prefix="-t", doc=InputDocumentation(doc="number of threads [1]")), ToolInput(tag="in_minimum_seed_length", input_type=Int(optional=True), prefix="-k", doc=InputDocumentation(doc="minimum seed length [11]")), ToolInput(tag="in_offdiagonal_xdropoff", input_type=Int(optional=True), prefix="-d", doc=InputDocumentation(doc="off-diagonal X-dropoff [100]")), ToolInput(tag="in_look_internal_float", input_type=Float(optional=True), prefix="-r", doc=InputDocumentation(doc="look for internal seeds inside a seed longer than {-k} * FLOAT [1.5]")), ToolInput(tag="in_seed_occurrence_round", input_type=Int(optional=True), prefix="-y", doc=InputDocumentation(doc="seed occurrence for the 3rd round seeding [20]")), ToolInput(tag="in_skip_seeds_more", input_type=Int(optional=True), prefix="-c", doc=InputDocumentation(doc="skip seeds with more than INT occurrences [500]")), ToolInput(tag="in_drop_chains_shorter", input_type=Float(optional=True), prefix="-D", doc=InputDocumentation(doc="drop chains shorter than FLOAT fraction of the longest overlapping chain [0.50]")), ToolInput(tag="in_discard_chain_seeded", input_type=Int(optional=True), prefix="-W", doc=InputDocumentation(doc="discard a chain if seeded bases shorter than INT [0]")), ToolInput(tag="in_perform_most_int", input_type=Int(optional=True), prefix="-m", doc=InputDocumentation(doc="perform at most INT rounds of mate rescues for each read [50]")), ToolInput(tag="in_discard_fulllength_exact", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc="discard full-length exact matches")), ToolInput(tag="in_score_sequence_tdboelu", input_type=Int(optional=True), prefix="-A", doc=InputDocumentation(doc="score for a sequence match, which scales options -TdBOELU unless overridden [1]")), ToolInput(tag="in_penalty_for_mismatch", input_type=Int(optional=True), prefix="-B", doc=InputDocumentation(doc="penalty for a mismatch [3]")), ToolInput(tag="in_gap_open_penalties", input_type=Int(), prefix="-O", doc=InputDocumentation(doc="gap open penalties for deletions and insertions [0,0]")), ToolInput(tag="in_gap_extension_penalty", input_type=Int(), prefix="-E", doc=InputDocumentation(doc="gap extension penalty; a gap of size k cost '{-O} + {-E}*k' [1,1]")), ToolInput(tag="in_penalty_end_clipping", input_type=Int(), prefix="-L", doc=InputDocumentation(doc="penalty for 5'- and 3'-end clipping [0,0]")), ToolInput(tag="in_penalty_unpaired_read", input_type=Int(optional=True), prefix="-U", doc=InputDocumentation(doc="penalty for an unpaired read pair [17]")), ToolInput(tag="in_read_type_setting", input_type=Int(optional=True), prefix="-x", doc=InputDocumentation(doc="read type. Setting -x changes multiple parameters unless overriden [null]\npacbio: -k17 -W40 -r10 -A1 -B1 -O1 -E1 -L0  (PacBio reads to ref)\nont2d: -k14 -W20 -r10 -A1 -B1 -O1 -E1 -L0  (Oxford Nanopore 2D-reads to ref)\nintractg: -B9 -O16 -L5  (intra-species contigs to ref)")), ToolInput(tag="in_activate_paladin_reporting", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="activate PALADIN reporting using STR as an output file prefix.  Files generated as follows:\nSTR.sam - alignment data (will not be sent to stdout)\nSTR_uniprot.tsv - Tab delimited UniProt report (normal alignment mode)\nSTR_uniprot_primary.tsv - Tab delimited UniProt report, primary alignments (all alignments mode)\nSTR_uniprot_secondary.tsv - Tab delimited UniProt report, secondary alignments (all alignments mode)")), ToolInput(tag="in_report_type_generated", input_type=Int(optional=True), prefix="-u", doc=InputDocumentation(doc="report type generated when using reporting and a UniProt reference [1]\n0: Simple ID summary report\n1: Detailed report (Contacts uniprot.org)")), ToolInput(tag="in_http_socks_proxy", input_type=String(optional=True), prefix="-P", doc=InputDocumentation(doc="HTTP or SOCKS proxy address")), ToolInput(tag="in_generate_detected_sequence", input_type=Boolean(optional=True), prefix="-g", doc=InputDocumentation(doc="generate detected ORF nucleotide sequence FASTA")), ToolInput(tag="in_keep_protein_sequence", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="keep protein sequence after alignment")), ToolInput(tag="in_read_group_line", input_type=String(optional=True), prefix="-R", doc=InputDocumentation(doc="read group header line such as '@RG\tID:foo\tSM:bar' [null]")), ToolInput(tag="in_file_insert_str", input_type=File(optional=True), prefix="-H", doc=InputDocumentation(doc="/FILE   insert STR to header if it starts with @; or insert lines in FILE [null]")), ToolInput(tag="in_treat_alt_contigs", input_type=Boolean(optional=True), prefix="-j", doc=InputDocumentation(doc="treat ALT contigs as part of the primary assembly (i.e. ignore <idxbase>.alt file)")), ToolInput(tag="in_verbose_level_error", input_type=Int(optional=True), prefix="-v", doc=InputDocumentation(doc="verbose level: 1=error, 2=warning, 3=message, 4+=debugging [3]")), ToolInput(tag="in_minimum_score_output", input_type=Int(optional=True), prefix="-T", doc=InputDocumentation(doc="minimum score to output [15]")), ToolInput(tag="in_there_int_hits", input_type=Int(), prefix="-h", doc=InputDocumentation(doc="if there are <INT hits with score >80% of the max score, output all in XA [5,200]")), ToolInput(tag="in_output_alignments_pe", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="output all alignments for SE or unpaired PE")), ToolInput(tag="in_append_fastafastq_comment", input_type=Boolean(optional=True), prefix="-C", doc=InputDocumentation(doc="append FASTA/FASTQ comment to SAM output")), ToolInput(tag="in_output_reference_header", input_type=Boolean(optional=True), prefix="-V", doc=InputDocumentation(doc="output the reference FASTA header in the XR tag")), ToolInput(tag="in_use_soft_clipping", input_type=Boolean(optional=True), prefix="-Y", doc=InputDocumentation(doc="use soft clipping for supplementary alignments")), ToolInput(tag="in_mark_shorter_hits", input_type=Boolean(optional=True), prefix="-M", doc=InputDocumentation(doc="mark shorter split hits as secondary")), ToolInput(tag="in_specify_mean_deviation", input_type=Float(), prefix="-I", doc=InputDocumentation(doc="specify the mean, standard deviation (10% of the mean if absent), max\n(4 sigma from the mean if absent) and min of the insert size distribution.\nFR orientation only. [inferred]")), ToolInput(tag="in_idx_base", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_in_dot_fq", input_type=String(), position=1, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_activate_paladin_reporting", output_type=File(optional=True), selector=InputSelector(input_to_select="in_activate_paladin_reporting", type_hint=File()), doc=OutputDocumentation(doc="activate PALADIN reporting using STR as an output file prefix.  Files generated as follows:\nSTR.sam - alignment data (will not be sent to stdout)\nSTR_uniprot.tsv - Tab delimited UniProt report (normal alignment mode)\nSTR_uniprot_primary.tsv - Tab delimited UniProt report, primary alignments (all alignments mode)\nSTR_uniprot_secondary.tsv - Tab delimited UniProt report, secondary alignments (all alignments mode)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Paladin_Align_V0_1_0().translate("wdl", allow_empty_container=True)

