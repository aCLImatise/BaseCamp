from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Directory, String, Boolean, Int, File

Get_Genome_V0_1_0 = CommandToolBuilder(tool="get_genome", base_command=["get-genome"], inputs=[ToolInput(tag="in_dir", input_type=Directory(optional=True), prefix="--dir", doc=InputDocumentation(doc="Genome directory")), ToolInput(tag="in_db", input_type=String(optional=True), prefix="--db", doc=InputDocumentation(doc="Genome database.  If argument is '?' (with\nthe quotes), this command lists available databases.")), ToolInput(tag="in_genes", input_type=Boolean(optional=True), prefix="--genes", doc=InputDocumentation(doc="Argument is a genes file")), ToolInput(tag="in_di_base", input_type=Boolean(optional=True), prefix="--dibase", doc=InputDocumentation(doc="Use dibase version of genome")), ToolInput(tag="in_coords", input_type=Boolean(optional=True), prefix="--coords", doc=InputDocumentation(doc="Show coordinates only")), ToolInput(tag="in_uppercase", input_type=Boolean(optional=True), prefix="--uppercase", doc=InputDocumentation(doc="Convert sequence to uppercase")), ToolInput(tag="in_wrap_length", input_type=Int(optional=True), prefix="--wraplength", doc=InputDocumentation(doc="Wrap length for sequence (default=60)")), ToolInput(tag="in_header", input_type=String(optional=True), prefix="--header", doc=InputDocumentation(doc="Desired header line")), ToolInput(tag="in_snps_dir", input_type=Directory(optional=True), prefix="--snpsdir", doc=InputDocumentation(doc="Directory for SNPs index files (created using snpindex)")), ToolInput(tag="in_use_snps", input_type=String(optional=True), prefix="--usesnps", doc=InputDocumentation(doc="Use snp version (built by snpindex)")), ToolInput(tag="in_snp_format", input_type=Int(optional=True), prefix="--snpformat", doc=InputDocumentation(doc="Print snp information from database built previously\nusing snpindex (0=none, 1=alternate version only\n2=both versions merged (using N), 3=both versions separate (default)")), ToolInput(tag="in_map_dir", input_type=Directory(optional=True), prefix="--mapdir", doc=InputDocumentation(doc="Map directory")), ToolInput(tag="in_map", input_type=File(optional=True), prefix="--map", doc=InputDocumentation(doc="Map file.  If argument is '?' (with the quotes),\nthis lists available map files.")), ToolInput(tag="in_sequence", input_type=Boolean(optional=True), prefix="--sequence", doc=InputDocumentation(doc="For a gene map file, prints the coding sequence")), ToolInput(tag="in_g_sequence", input_type=Boolean(optional=True), prefix="--gsequence", doc=InputDocumentation(doc="For a gene map file, prints the gene sequence (exons plus introns), one per line")), ToolInput(tag="in_exons", input_type=Boolean(optional=True), prefix="--exons", doc=InputDocumentation(doc="For a gene map file, prints the sequence, one exon per line")), ToolInput(tag="in_n_unique", input_type=Boolean(optional=True), prefix="--nunique", doc=InputDocumentation(doc="For a gene map file, also prints the number of unique positions")), ToolInput(tag="in_ranks", input_type=Boolean(optional=True), prefix="--ranks", doc=InputDocumentation(doc="Prints levels for non-overlapping printing of map hits")), ToolInput(tag="in_raw", input_type=Boolean(optional=True), prefix="--raw", doc=InputDocumentation(doc="Prints sequence as ASCII numeric codes")), ToolInput(tag="in_flanking", input_type=Int(optional=True), prefix="--flanking", doc=InputDocumentation(doc="Show flanking hits (default 0)")), ToolInput(tag="in_map_type", input_type=String(optional=True), prefix="--maptype", doc=InputDocumentation(doc="Show only intervals with given type")), ToolInput(tag="in_signed", input_type=Boolean(optional=True), prefix="--signed", doc=InputDocumentation(doc="Show only intervals with same direction as query.  If flanking hits\nare also requested, show only flanking hits downstream in direction of\nquery.")), ToolInput(tag="in_as_label", input_type=Boolean(optional=True), prefix="--aslabel", doc=InputDocumentation(doc="Consider all queries to be labels, even if numeric")), ToolInput(tag="in_coding", input_type=Boolean(optional=True), prefix="--coding", doc=InputDocumentation(doc="Print entry only if position overlaps a coding exon")), ToolInput(tag="in_dump", input_type=Boolean(optional=True), prefix="--dump", doc=InputDocumentation(doc="Dump entire genome in FASTA format")), ToolInput(tag="in_stream", input_type=Boolean(optional=True), prefix="--stream", doc=InputDocumentation(doc="Dump entire genome as a single stream of ACGTX bytes")), ToolInput(tag="in_chromosomes", input_type=Boolean(optional=True), prefix="--chromosomes", doc=InputDocumentation(doc="List all chromosomes with universal coordinates")), ToolInput(tag="in_for_sam", input_type=Boolean(optional=True), prefix="--forsam", doc=InputDocumentation(doc="List all chromosomes for use in a SAM file")), ToolInput(tag="in_contigs", input_type=Boolean(optional=True), prefix="--contigs", doc=InputDocumentation(doc="List all contigs with universal coordinates")), ToolInput(tag="in_options_dot_dot_dot", input_type=String(optional=True), position=0, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Get_Genome_V0_1_0().translate("wdl", allow_empty_container=True)

