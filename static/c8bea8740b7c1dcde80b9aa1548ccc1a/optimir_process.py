from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, Float, Boolean, String

Optimir_Process_V0_1_0 = CommandToolBuilder(tool="optimir_process", base_command=["optimir", "process"], inputs=[ToolInput(tag="in_fq", input_type=File(optional=True), prefix="--fq", doc=InputDocumentation(doc="Full path of the sample fastq file (accepted formats\nand extensions: fastq, fq and fq.gz)")), ToolInput(tag="in_dir_output", input_type=File(optional=True), prefix="--dirOutput", doc=InputDocumentation(doc="Full path of the directory where output files are\ngenerated [default: ./OptimiR_Results_Dir/]")), ToolInput(tag="in_vcf", input_type=File(optional=True), prefix="--vcf", doc=InputDocumentation(doc="Full path of the vcf file with genotypes")), ToolInput(tag="in_seed_len", input_type=Int(optional=True), prefix="--seedLen", doc=InputDocumentation(doc="Choose the alignment seed length used in option '-L'\nby Bowtie2 [default: 17]")), ToolInput(tag="in_w_five", input_type=Int(optional=True), prefix="--w5", doc=InputDocumentation(doc="Choose the weight applied on events detected on the 5'\nend of aligned reads [default: 4]")), ToolInput(tag="in_score_thresh", input_type=Int(optional=True), prefix="--scoreThresh", doc=InputDocumentation(doc="Choose the threshold for alignment score above which\nalignments are discarded [default: 9]")), ToolInput(tag="in_consistent_rate", input_type=Float(optional=True), prefix="--consistentRate", doc=InputDocumentation(doc="Choose the rate threshold for inconsistent reads\nmapped to a polymiR above which the alignment is\nflagged as highly suspicious [default: 0.01]")), ToolInput(tag="in_rm_temp_files", input_type=Boolean(optional=True), prefix="--rmTempFiles", doc=InputDocumentation(doc="Add this option to remove temporary files (trimmed\nfastq, collapsed fastq, mapped reads, annotated bams")), ToolInput(tag="in_an_not", input_type=File(optional=True), prefix="--annot", doc=InputDocumentation(doc="Control which annotation file is produced by adding\ncorresponding letter : 'h' for expressed_hairpins, 'p'\nfor polymiRs_table, 'i' for consistency_table, 'c' for\nremaining_ambiguous, 's' for isomiRs_dist. Ex: '--\nannot hpics' [default] will produce all of them")), ToolInput(tag="in_gff_out", input_type=Boolean(optional=True), prefix="--gff_out", doc=InputDocumentation(doc="Add this option to generate results in mirGFF3 format\n[default : disabled]")), ToolInput(tag="in_vcf_out", input_type=Boolean(optional=True), prefix="--vcf_out", doc=InputDocumentation(doc="Add this option to generate results in VCF format\n[default : disabled]")), ToolInput(tag="in_adapt_three", input_type=Int(optional=True), prefix="--adapt3", doc=InputDocumentation(doc="Define the 3' adaptor sequence (default is NEB &\nILLUMINA: AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC -a\nTGGAATTCTCGGGTGCCAAGG -> hack: use -a to add adapter\nsequences)")), ToolInput(tag="in_adapt_five", input_type=Int(optional=True), prefix="--adapt5", doc=InputDocumentation(doc="Define the 5' adaptor sequence [default: None]")), ToolInput(tag="in_re_admin", input_type=Int(optional=True), prefix="--readMin", doc=InputDocumentation(doc="Define the minimum read length defined with option -m\nin cutadapt [default: 15]")), ToolInput(tag="in_read_max", input_type=Int(optional=True), prefix="--readMax", doc=InputDocumentation(doc="Define the maximum read length defined with option -M\nin cutadapt [default: 27]")), ToolInput(tag="in_bq_thresh", input_type=String(optional=True), prefix="--bqThresh", doc=InputDocumentation(doc="Define the Base Quality threshold defined with option")), ToolInput(tag="in_cutadapt", input_type=Int(optional=True), prefix="-q", doc=InputDocumentation(doc="cutadapt [default: 28]")), ToolInput(tag="in_trim_again", input_type=Boolean(optional=True), prefix="--trimAgain", doc=InputDocumentation(doc="Add this option to trim files that have been trimmed\nin a previous application. By default, when temporary\nfiles are kept, trimmed files are reused. If you wish\nto change a paramater used in the trimming step of the\nworkflow, this parameter is a must [default: disabled]")), ToolInput(tag="in_matures_fast_a", input_type=File(optional=True), prefix="--maturesFasta", doc=InputDocumentation(doc="Path to the reference library containing mature miRNAs\nsequences [default: miRBase 21]")), ToolInput(tag="in_hairpins_fast_a", input_type=File(optional=True), prefix="--hairpinsFasta", doc=InputDocumentation(doc="Path to the reference library containing pri-miRNAs\nsequences [default: miRBase 21]")), ToolInput(tag="in_gff_three", input_type=Int(optional=True), prefix="--gff3", doc=InputDocumentation(doc="Path to the reference library containing miRNAs and\npri-miRNAs coordinates [default: miRBase v21, GRCh38\ncoordinates]")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="Add this option to remove OptimiR progression on\nscreen [default: disabled]")), ToolInput(tag="in_cut_adapt", input_type=File(optional=True), prefix="--cutadapt", doc=InputDocumentation(doc="Provide path to the cutadapt binary [default: from\n$PATH]")), ToolInput(tag="in_bowtie_two", input_type=Int(optional=True), prefix="--bowtie2", doc=InputDocumentation(doc="Provide path to the bowtie2 binary [default: from\n$PATH]")), ToolInput(tag="in_bowtie_two_build", input_type=Int(optional=True), prefix="--bowtie2_build", doc=InputDocumentation(doc="Provide path to the bowtie2 index builder binary\n[default: from $PATH]")), ToolInput(tag="in_sam_tools", input_type=File(optional=True), prefix="--samtools", doc=InputDocumentation(doc="Provide path to the samtools binary [default: from\n$PATH]\n"))], outputs=[ToolOutput(tag="out_dir_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_dir_output", type_hint=File()), doc=OutputDocumentation(doc="Full path of the directory where output files are\ngenerated [default: ./OptimiR_Results_Dir/]"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Optimir_Process_V0_1_0().translate("wdl", allow_empty_container=True)

