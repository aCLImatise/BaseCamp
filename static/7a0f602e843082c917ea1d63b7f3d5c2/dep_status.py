from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String

Dep_Status_V0_1_0 = CommandToolBuilder(tool="dep_status", base_command=["dep", "status"], inputs=[ToolInput(tag="in_detail", input_type=Boolean(optional=True), prefix="-detail", doc=InputDocumentation(doc="include more detail in the chosen format (default: false)")), ToolInput(tag="in_dot", input_type=Boolean(optional=True), prefix="-dot", doc=InputDocumentation(doc="output the dependency graph in GraphViz format (default: false)")), ToolInput(tag="in_examples", input_type=Boolean(optional=True), prefix="-examples", doc=InputDocumentation(doc="print detailed usage examples (default: false)")), ToolInput(tag="in_output_texttemplate_none", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc="output in text/template format (default: <none>)")), ToolInput(tag="in_json", input_type=Boolean(optional=True), prefix="-json", doc=InputDocumentation(doc="output in JSON format (default: false)")), ToolInput(tag="in_lock", input_type=File(optional=True), prefix="-lock", doc=InputDocumentation(doc="output in the lock file format (assumes -detail) (default: false)")), ToolInput(tag="in_missing", input_type=Boolean(optional=True), prefix="-missing", doc=InputDocumentation(doc="only show missing dependencies (default: false)")), ToolInput(tag="in_old", input_type=Boolean(optional=True), prefix="-old", doc=InputDocumentation(doc="only show out-of-date dependencies (default: false)")), ToolInput(tag="in_out", input_type=File(optional=True), prefix="-out", doc=InputDocumentation(doc="path to a file to which to write the output. Blank value will be ignored (default: <none>)")), ToolInput(tag="in_enable_verbose_default", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="enable verbose logging (default: false)")), ToolInput(tag="in_project", input_type=String(), position=0, doc=InputDocumentation(doc="Import path")), ToolInput(tag="in_constraint", input_type=String(), position=1, doc=InputDocumentation(doc="Version constraint, from the manifest")), ToolInput(tag="in_version", input_type=String(), position=2, doc=InputDocumentation(doc="Version chosen, from the lock")), ToolInput(tag="in_revision", input_type=String(), position=3, doc=InputDocumentation(doc="VCS revision of the chosen version")), ToolInput(tag="in_latest", input_type=String(), position=4, doc=InputDocumentation(doc="Latest VCS revision available"))], outputs=[ToolOutput(tag="out_lock", output_type=File(optional=True), selector=InputSelector(input_to_select="in_lock", type_hint=File()), doc=OutputDocumentation(doc="output in the lock file format (assumes -detail) (default: false)")), ToolOutput(tag="out_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out", type_hint=File()), doc=OutputDocumentation(doc="path to a file to which to write the output. Blank value will be ignored (default: <none>)"))], container="quay.io/biocontainers/gotree:0.4.1--h375a9b1_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Dep_Status_V0_1_0().translate("wdl")

