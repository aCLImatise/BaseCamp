from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Int, String, Float

Rnaeval_V0_1_0 = CommandToolBuilder(tool="RNAeval", base_command=["RNAeval"], inputs=[ToolInput(tag="in_detailed_help", input_type=Boolean(optional=True), prefix="--detailed-help", doc=InputDocumentation(doc="Print help, including all details and hidden\noptions, and exit")), ToolInput(tag="in_full_help", input_type=Boolean(optional=True), prefix="--full-help", doc=InputDocumentation(doc="Print help, including hidden options, and exit")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Print out energy contribution of each loop in\nthe structure.\n(default=off)")), ToolInput(tag="in_jobs", input_type=Boolean(optional=True), prefix="--jobs", doc=InputDocumentation(doc="[=number]           Split batch input into jobs and start\nprocessing in parallel using multiple\nthreads. A value of 0 indicates to use as\nmany parallel threads as computation cores\nare available.\n(default=`0')")), ToolInput(tag="in_in_file", input_type=File(optional=True), prefix="--infile", doc=InputDocumentation(doc="Read a file instead of reading from stdin")), ToolInput(tag="in_msa", input_type=Boolean(optional=True), prefix="--msa", doc=InputDocumentation(doc="Input is multiple sequence alignment in\nStockholm 1.0 format\n(default=off)")), ToolInput(tag="in_auto_id", input_type=Boolean(optional=True), prefix="--auto-id", doc=InputDocumentation(doc="Automatically generate an ID for each sequence.\n(default=off)")), ToolInput(tag="in_id_prefix", input_type=File(optional=True), prefix="--id-prefix", doc=InputDocumentation(doc="Prefix for automatically generated IDs (as used\nin output file names)\n(default=`sequence')")), ToolInput(tag="in_id_delim", input_type=Int(optional=True), prefix="--id-delim", doc=InputDocumentation(doc="Change the delimiter between prefix and\nincreasing number for automatically generated\nIDs (as used in output file names)\n(default=`_')")), ToolInput(tag="in_temp", input_type=Int(optional=True), prefix="--temp", doc=InputDocumentation(doc="Rescale energy parameters to a temperature of\ntemp C. Default is 37C.")), ToolInput(tag="in_no_tetra", input_type=Boolean(optional=True), prefix="--noTetra", doc=InputDocumentation(doc="Do not include special tabulated stabilizing\nenergies for tri-, tetra- and hexaloop\nhairpins. Mostly for testing.\n(default=off)")), ToolInput(tag="in_dangles", input_type=Int(optional=True), prefix="--dangles", doc=InputDocumentation(doc="How to treat 'dangling end' energies for\nbases adjacent to helices in free ends and\nmulti-loops\n(default=`2')")), ToolInput(tag="in_energy_model", input_type=Int(optional=True), prefix="--energyModel", doc=InputDocumentation(doc="Rarely used option to fold sequences from the\nartificial ABCD... alphabet, where A pairs B,\nC-D etc.  Use the energy parameters for GC\n(-e 1) or AU (-e 2) pairs.")), ToolInput(tag="in_param_file", input_type=File(optional=True), prefix="--paramFile", doc=InputDocumentation(doc="Read energy parameters from paramfile, instead\nof using the default parameter set.")), ToolInput(tag="in_circ", input_type=Boolean(optional=True), prefix="--circ", doc=InputDocumentation(doc="Assume a circular (instead of linear) RNA")), ToolInput(tag="in_g_quad", input_type=Boolean(optional=True), prefix="--gquad", doc=InputDocumentation(doc="Incoorporate G-Quadruplex formation into the\nstructure prediction algorithm\n(default=off)")), ToolInput(tag="in_log_ml", input_type=Boolean(optional=True), prefix="--logML", doc=InputDocumentation(doc="Recalculate energies of structures using a\nlogarithmic energy function for multi-loops\nbefore output.\n(default=off)")), ToolInput(tag="in_shape", input_type=File(optional=True), prefix="--shape", doc=InputDocumentation(doc="file        Use SHAPE reactivity data in the folding\nrecursions (does not work for PF yet)")), ToolInput(tag="in_shape_method", input_type=Boolean(optional=True), prefix="--shapeMethod", doc=InputDocumentation(doc="=[D/Z/W] + [optional parameters]\nSpecify the method how to convert SHAPE\nreactivity data to pseudo energy\ncontributions\n(default=`D')")), ToolInput(tag="in_shape_conversion", input_type=String(optional=True), prefix="--shapeConversion", doc=InputDocumentation(doc="/C/S/L/O  + [optional parameters]\nSpecify the method used to convert SHAPE\nreactivities to pairing probabilities when\nusing the SHAPE approach of Zarringhalam et\nal.\n(default=`O')")), ToolInput(tag="in_mis", input_type=Boolean(optional=True), prefix="--mis", doc=InputDocumentation(doc="Output 'most informative sequence' instead of\nsimple consensus: For each column of the\nalignment output the set of nucleotides with\nfrequency greater than average in IUPAC\nnotation.\n(default=off)")), ToolInput(tag="in_c_factor", input_type=Float(optional=True), prefix="--cfactor", doc=InputDocumentation(doc="Set the weight of the covariance term in the\nenergy function\n(default=`1.0')")), ToolInput(tag="in_n_factor", input_type=Float(optional=True), prefix="--nfactor", doc=InputDocumentation(doc="Set the penalty for non-compatible sequences in\nthe covariance term of the energy function\n(default=`1.0')")), ToolInput(tag="in_ribo_sum_file", input_type=File(optional=True), prefix="--ribosum_file", doc=InputDocumentation(doc="use specified Ribosum Matrix instead of normal\nenergy model. Matrixes to use should be 6x6\nmatrices, the order of the terms is AU, CG,\nGC, GU, UA, UG.")), ToolInput(tag="in_ribo_sum_scoring", input_type=Boolean(optional=True), prefix="--ribosum_scoring", doc=InputDocumentation(doc="use ribosum scoring matrix. The matrix is\nchosen according to the minimal and maximal\npairwise identities of the sequences in the\nfile.\n(default=off)")), ToolInput(tag="in_old", input_type=Boolean(optional=True), prefix="--old", doc=InputDocumentation(doc="use old energy evaluation, treating gaps as")), ToolInput(tag="in_program", input_type=String(), position=0, doc=InputDocumentation(doc="--noconv                  Do not automatically substitude nucleotide\n'T' with 'U'\n(default=off)")), ToolInput(tag="in_molecule_dot", input_type=String(), position=0, doc=InputDocumentation(doc="(default=off)")), ToolInput(tag="in_characters_dot", input_type=String(), position=1, doc=InputDocumentation(doc="(default=off)"))], outputs=[ToolOutput(tag="out_id_prefix", output_type=File(optional=True), selector=InputSelector(input_to_select="in_id_prefix", type_hint=File()), doc=OutputDocumentation(doc="Prefix for automatically generated IDs (as used\nin output file names)\n(default=`sequence')"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Rnaeval_V0_1_0().translate("wdl", allow_empty_container=True)

