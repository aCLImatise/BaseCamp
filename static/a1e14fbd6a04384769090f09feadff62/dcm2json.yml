!Command
command:
- dcm2json
positional:
- !Positional
  optional: false
  position: 0
  name: dcmfile-in
  description: DICOM input filename to be converted
- !Positional
  optional: false
  position: 1
  name: jsonfile-out
  description: 'JSON output filename (default: stdout)'
named:
- !Flag
  optional: true
  synonyms:
  - --arguments
  description: print expanded command line arguments
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -q
  - --quiet
  description: quiet mode, print no warnings and errors
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -v
  - --verbose
  description: verbose mode, print processing details
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -d
  - --debug
  description: debug mode, print debug information
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -ll
  - --log-level
  description: "[l]evel: string constant\n(fatal, error, warn, info, debug, trace)\n\
    use level l for the logger"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -lc
  - --log-config
  description: "[f]ilename: string\nuse config file f for the logger"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -f
  - --read-dataset
  description: read data set without file meta information
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -t
  description: =  --read-xfer-auto      use TS recognition (default)
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -td
  - --read-xfer-detect
  description: ignore TS specified in the file meta header
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -te
  - --read-xfer-little
  description: read with explicit VR little endian TS
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -tb
  - --read-xfer-big
  description: read with explicit VR big endian TS
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -ti
  - --read-xfer-implicit
  description: read with implicit VR little endian TS
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -fc
  - --compact-code
  description: print only required characters
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: print this help text and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - --version
  description: print version information and exit
  args: !EmptyFlagArg {}
help_text: "$dcmtk: dcm2json v3.6.5 2019-10-28 $\n\ndcm2json: Convert DICOM file and\
  \ data set to JSON\nusage: dcm2json [options] dcmfile-in [jsonfile-out]\n\nparameters:\n\
  \  dcmfile-in                   DICOM input filename to be converted\n  jsonfile-out\
  \                 JSON output filename (default: stdout)\n\ngeneral options:\n \
  \ -h     --help                print this help text and exit\n         --version\
  \             print version information and exit\n         --arguments         \
  \  print expanded command line arguments\n  -q     --quiet               quiet mode,\
  \ print no warnings and errors\n  -v     --verbose             verbose mode, print\
  \ processing details\n  -d     --debug               debug mode, print debug information\n\
  \  -ll    --log-level           [l]evel: string constant\n                     \
  \          (fatal, error, warn, info, debug, trace)\n                          \
  \     use level l for the logger\n  -lc    --log-config          [f]ilename: string\n\
  \                               use config file f for the logger\ninput options:\n\
  \  input file format:\n    +f   --read-file           read file format or data set\
  \ (default)\n    +fo  --read-file-only      read file format only\n    -f   --read-dataset\
  \        read data set without file meta information\n  input transfer syntax:\n\
  \    -t=  --read-xfer-auto      use TS recognition (default)\n    -td  --read-xfer-detect\
  \    ignore TS specified in the file meta header\n    -te  --read-xfer-little  \
  \  read with explicit VR little endian TS\n    -tb  --read-xfer-big       read with\
  \ explicit VR big endian TS\n    -ti  --read-xfer-implicit  read with implicit VR\
  \ little endian TS\noutput options:\n  output format:\n    +fc  --formatted-code\
  \      enable whitespace formatting (default)\n    -fc  --compact-code        print\
  \ only required characters\n    +m   --write-meta          write data set with meta\
  \ information\n                               (warning: not conforming to the DICOM\
  \ standard)\n\n"
generated_using:
- --help
docker_image: quay.io/biocontainers/dcmtk:3.6.5--h5fca97b_0
