from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, Float, File, String

Seqkit_Fish_V0_1_0 = CommandToolBuilder(tool="seqkit_fish", base_command=["seqkit", "fish"], inputs=[ToolInput(tag="in_all", input_type=Boolean(optional=True), prefix="--all", doc=InputDocumentation(doc="search all")), ToolInput(tag="in_aln_params", input_type=Int(optional=True), prefix="--aln-params", doc=InputDocumentation(doc="alignment parameters in format '<match>,<mismatch>,<gap_open>,<gap_extend>' (default '4,-4,-2,-1')")), ToolInput(tag="in_invert", input_type=Boolean(optional=True), prefix="--invert", doc=InputDocumentation(doc="print out references not matching with any query")), ToolInput(tag="in_min_qual", input_type=Float(optional=True), prefix="--min-qual", doc=InputDocumentation(doc="minimum mapping quality (default 5)")), ToolInput(tag="in_out_bam", input_type=File(optional=True), prefix="--out-bam", doc=InputDocumentation(doc="save aligmnets to this BAM file (memory intensive)")), ToolInput(tag="in_pass", input_type=Boolean(optional=True), prefix="--pass", doc=InputDocumentation(doc="pass through mode (write input to stdout)")), ToolInput(tag="in_print_aln", input_type=Boolean(optional=True), prefix="--print-aln", doc=InputDocumentation(doc="print sequence alignments")), ToolInput(tag="in_print_desc", input_type=Boolean(optional=True), prefix="--print-desc", doc=InputDocumentation(doc="print full sequence header")), ToolInput(tag="in_query_fast_x", input_type=String(optional=True), prefix="--query-fastx", doc=InputDocumentation(doc="query fasta")), ToolInput(tag="in_query_sequences", input_type=String(optional=True), prefix="--query-sequences", doc=InputDocumentation(doc="query sequences")), ToolInput(tag="in_ranges", input_type=Int(optional=True), prefix="--ranges", doc=InputDocumentation(doc="target ranges, for example: ':10,30:40,-20:'")), ToolInput(tag="in_stranded", input_type=Boolean(optional=True), prefix="--stranded", doc=InputDocumentation(doc="search + strand only")), ToolInput(tag="in_validate_seq", input_type=Boolean(optional=True), prefix="--validate-seq", doc=InputDocumentation(doc="validate bases according to the alphabet")), ToolInput(tag="in_validate_seq_length", input_type=Int(optional=True), prefix="--validate-seq-length", doc=InputDocumentation(doc="length of sequence to validate (0 for whole seq) (default 10000)")), ToolInput(tag="in_alphabet_guess_seq_length", input_type=Int(optional=True), prefix="--alphabet-guess-seq-length", doc=InputDocumentation(doc="length of sequence prefix of the first FASTA record based on which seqkit guesses the sequence type (0 for whole seq) (default 10000)")), ToolInput(tag="in_id_ncbi", input_type=Boolean(optional=True), prefix="--id-ncbi", doc=InputDocumentation(doc="FASTA head is NCBI-style, e.g. >gi|110645304|ref|NC_002516.2| Pseud...")), ToolInput(tag="in_id_regexp", input_type=String(optional=True), prefix="--id-regexp", doc=InputDocumentation(doc="regular expression for parsing ID (default '^(\\S+)\\s?')")), ToolInput(tag="in_in_file_list", input_type=File(optional=True), prefix="--infile-list", doc=InputDocumentation(doc="file of input files list (one file per line), if given, they are appended to files from cli arguments")), ToolInput(tag="in_line_width", input_type=Int(optional=True), prefix="--line-width", doc=InputDocumentation(doc="line width when outputing FASTA format (0 for no wrap) (default 60)")), ToolInput(tag="in_out_file", input_type=File(optional=True), prefix="--out-file", doc=InputDocumentation(doc="out file ('-' for stdout, suffix .gz for gzipped out) (default '-')")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="be quiet and do not show extra information")), ToolInput(tag="in_seq_type", input_type=String(optional=True), prefix="--seq-type", doc=InputDocumentation(doc="sequence type (dna|rna|protein|unlimit|auto) (for auto, it automatically detect by the first sequence) (default 'auto')")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="number of CPUs. (default value: 1 for single-CPU PC, 2 for others. can also set with environment variable SEQKIT_THREADS) (default 2)"))], outputs=[ToolOutput(tag="out_out_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_file", type_hint=File()), doc=OutputDocumentation(doc="out file ('-' for stdout, suffix .gz for gzipped out) (default '-')"))], container="quay.io/biocontainers/seqkit:0.15.0--0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Seqkit_Fish_V0_1_0().translate("wdl")

