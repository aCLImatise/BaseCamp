from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Directory

Bloocoo_V0_1_0 = CommandToolBuilder(tool="Bloocoo", base_command=["Bloocoo"], inputs=[ToolInput(tag="in_nb_cores", input_type=Boolean(optional=True), prefix="-nb-cores", doc=InputDocumentation(doc="(1 arg) :    number of cores  [default '0']")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="-verbose", doc=InputDocumentation(doc="(1 arg) :    verbosity level  [default '1']")), ToolInput(tag="in_file", input_type=Boolean(optional=True), prefix="-file", doc=InputDocumentation(doc="(1 arg) :    reads file")), ToolInput(tag="in_km_er_size", input_type=Boolean(optional=True), prefix="-kmer-size", doc=InputDocumentation(doc="(1 arg) :    size of a kmer  [default '31']")), ToolInput(tag="in_abundance_min", input_type=Boolean(optional=True), prefix="-abundance-min", doc=InputDocumentation(doc="(1 arg) :    min abundance threshold for solid kmers  [default '3']")), ToolInput(tag="in_abundance_max", input_type=Boolean(optional=True), prefix="-abundance-max", doc=InputDocumentation(doc="(1 arg) :    max abundance threshold for solid kmers  [default '2147483647']")), ToolInput(tag="in_abundance_min_threshold", input_type=Boolean(optional=True), prefix="-abundance-min-threshold", doc=InputDocumentation(doc="(1 arg) :    min abundance hard threshold (only used when min abundance is 'auto')  [default '3']")), ToolInput(tag="in_histo_max", input_type=Boolean(optional=True), prefix="-histo-max", doc=InputDocumentation(doc="(1 arg) :    max number of values in kmers histogram  [default '10000']")), ToolInput(tag="in_solidity_kind", input_type=Boolean(optional=True), prefix="-solidity-kind", doc=InputDocumentation(doc="(1 arg) :    way to compute counts of several files (sum, min, max, one, all)  [default 'sum']")), ToolInput(tag="in_max_memory", input_type=Boolean(optional=True), prefix="-max-memory", doc=InputDocumentation(doc="(1 arg) :    max memory (in MBytes)  [default '5000']")), ToolInput(tag="in_max_disk", input_type=Boolean(optional=True), prefix="-max-disk", doc=InputDocumentation(doc="(1 arg) :    max disk   (in MBytes)  [default '0']")), ToolInput(tag="in_solid_km_ers_out", input_type=File(optional=True), prefix="-solid-kmers-out", doc=InputDocumentation(doc="(1 arg) :    output file for solid kmers  [default '']")), ToolInput(tag="in_out", input_type=File(optional=True), prefix="-out", doc=InputDocumentation(doc="(1 arg) :    output file  [default '']")), ToolInput(tag="in_out_dir", input_type=Directory(optional=True), prefix="-out-dir", doc=InputDocumentation(doc="(1 arg) :    output directory  [default '.']")), ToolInput(tag="in_out_tmp", input_type=Directory(optional=True), prefix="-out-tmp", doc=InputDocumentation(doc="(1 arg) :    output directory for temporary files  [default '.']")), ToolInput(tag="in_out_compress", input_type=Boolean(optional=True), prefix="-out-compress", doc=InputDocumentation(doc="(1 arg) :    output compression level (0:none, 9:best)  [default '0']")), ToolInput(tag="in_minimizer_type", input_type=Boolean(optional=True), prefix="-minimizer-type", doc=InputDocumentation(doc="(1 arg) :    minimizer type (0=lexi, 1=freq)  [default '0']")), ToolInput(tag="in_minimizer_size", input_type=Boolean(optional=True), prefix="-minimizer-size", doc=InputDocumentation(doc="(1 arg) :    size of a minimizer  [default '8']")), ToolInput(tag="in_repartition_type", input_type=Boolean(optional=True), prefix="-repartition-type", doc=InputDocumentation(doc="(1 arg) :    minimizer repartition (0=unordered, 1=ordered)  [default '0']")), ToolInput(tag="in_high_recall", input_type=Boolean(optional=True), prefix="-high-recall", doc=InputDocumentation(doc="(0 arg) :    correct a lot but can introduce more mistakes")), ToolInput(tag="in_high_precision", input_type=Boolean(optional=True), prefix="-high-precision", doc=InputDocumentation(doc="(0 arg) :    correct safely, correct less but introduce less mistakes")), ToolInput(tag="in_slow", input_type=Boolean(optional=True), prefix="-slow", doc=InputDocumentation(doc="(0 arg) :    slower but better correction")), ToolInput(tag="in_ion", input_type=Boolean(optional=True), prefix="-ion", doc=InputDocumentation(doc="(0 arg) :    ion correction mode")), ToolInput(tag="in_err_tab", input_type=Boolean(optional=True), prefix="-err-tab", doc=InputDocumentation(doc="(0 arg) :    generate error tabs")), ToolInput(tag="in_max_trim", input_type=Boolean(optional=True), prefix="-max-trim", doc=InputDocumentation(doc="(1 arg) :    max number of bases that can be trimmed per read  [default '']")), ToolInput(tag="in_from_h_five", input_type=Boolean(optional=True), prefix="-from-h5", doc=InputDocumentation(doc="(0 arg) :    do not re-compute kmer counts, suppose h5 file already computed (with previous run with -count-only)")), ToolInput(tag="in_count_only", input_type=Boolean(optional=True), prefix="-count-only", doc=InputDocumentation(doc="(0 arg) :    do not correct, only count kmers"))], outputs=[ToolOutput(tag="out_solid_km_ers_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_solid_km_ers_out", type_hint=File()), doc=OutputDocumentation(doc="(1 arg) :    output file for solid kmers  [default '']")), ToolOutput(tag="out_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out", type_hint=File()), doc=OutputDocumentation(doc="(1 arg) :    output file  [default '']")), ToolOutput(tag="out_out_dir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_out_dir", type_hint=File()), doc=OutputDocumentation(doc="(1 arg) :    output directory  [default '.']")), ToolOutput(tag="out_out_tmp", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_out_tmp", type_hint=File()), doc=OutputDocumentation(doc="(1 arg) :    output directory for temporary files  [default '.']"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bloocoo_V0_1_0().translate("wdl", allow_empty_container=True)

