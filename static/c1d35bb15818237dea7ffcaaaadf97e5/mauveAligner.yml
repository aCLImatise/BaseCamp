!Command
command:
- mauveAligner
positional:
- !Positional
  optional: false
  position: 0
  name: seqN filename
  description: ''
- !Positional
  optional: false
  position: 1
  name: smlN filename
  description: ''
named:
- !Flag
  optional: true
  synonyms:
  - --output
  description: Output file name.  Prints to screen by default
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - --mums
  description: MUMs only, do not attempt to determine locally collinear blocks (LCBs)
  args: !SimpleFlagArg
    name: Find
- !Flag
  optional: true
  synonyms:
  - --no-recursion
  description: "'t perform recursive anchor identification (implies --no-gapped-alignment)"
  args: !SimpleFlagArg
    name: Don
- !Flag
  optional: true
  synonyms:
  - --no-lcb-extension
  description: determining LCBs, don't attempt to extend the LCBs
  args: !SimpleFlagArg
    name: If
- !Flag
  optional: true
  synonyms:
  - --seed-size
  description: Initial seed match size, default is log_2( average seq. length )
  args: !SimpleFlagArg
    name: number
- !Flag
  optional: true
  synonyms:
  - --max-extension-iterations
  description: Limit LCB extensions to this number of attempts, default is 4
  args: !SimpleFlagArg
    name: number
- !Flag
  optional: true
  synonyms:
  - --eliminate-inclusions
  description: linked inclusions in subset matches.
  args: !SimpleFlagArg
    name: Eliminate
- !Flag
  optional: true
  synonyms:
  - --weight
  description: Minimum LCB weight in base pairs per sequence
  args: !SimpleFlagArg
    name: number
- !Flag
  optional: true
  synonyms:
  - --match-input
  description: Use specified match file instead of searching for matches
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - --lcb-match-input
  description: Indicates that the match input file contains matches that have been
    clustered into LCBs
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --lcb-input
  description: Use specified lcb file instead of constructing LCBs (skips LCB generation)
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - --scratch-path
  description: For large genomes, use a directory for storage of temporary data.  Should
    be given two or more times to with different paths.
  args: !SimpleFlagArg
    name: path
- !Flag
  optional: true
  synonyms:
  - --id-matrix
  description: Generate LCB stats and write them to the specified file
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - --island-size
  description: Find islands larger than the given number
  args: !SimpleFlagArg
    name: number
- !Flag
  optional: true
  synonyms:
  - --island-output
  description: Output islands the given file (requires --island-size)
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - --backbone-size
  description: Find stretches of backbone longer than the given number of b.p.
  args: !SimpleFlagArg
    name: number
- !Flag
  optional: true
  synonyms:
  - --max-backbone-gap
  description: Allow backbone to be interrupted by gaps up to this length in b.p.
  args: !SimpleFlagArg
    name: number
- !Flag
  optional: true
  synonyms:
  - --backbone-output
  description: Output islands the given file (requires --island-size)
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - --coverage-output
  description: Output a coverage list to the specified file (- for stdout)
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - --repeats
  description: a repeat map.  Only one sequence can be specified
  args: !SimpleFlagArg
    name: Generates
- !Flag
  optional: true
  synonyms:
  - --output-guide-tree
  description: Write out a guide tree to the designated file
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - --collinear
  description: that input sequences are collinear--they have no rearrangements
  args: !SimpleFlagArg
    name: Assume
- !Flag
  optional: true
  synonyms:
  - --no-gapped-alignment
  description: "'t perform a gapped alignment"
  args: !SimpleFlagArg
    name: Don
- !Flag
  optional: true
  synonyms:
  - --max-gapped-aligner-length
  description: Maximum number of base pairs to attempt aligning with the gapped aligner
  args: !SimpleFlagArg
    name: number
- !Flag
  optional: true
  synonyms:
  - --min-recursive-gap-length
  description: Minimum size of gaps that Mauve will perform recursive MUM anchoring
    on (Default is 200)
  args: !SimpleFlagArg
    name: number
- !Flag
  optional: true
  synonyms:
  - --permutation-matrix-output
  description: Write out the LCBs as a signed permutation matrix to the given file
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - --permutation-matrix-min-weight
  description: A permutation matrix will be written for every set of LCBs with weight
    between this value and the value of --weight
  args: !SimpleFlagArg
    name: number
- !Flag
  optional: true
  synonyms:
  - --alignment-output-dir
  description: Outputs a set of alignment files (one per LCB) to a given directory
  args: !SimpleFlagArg
    name: directory
- !Flag
  optional: true
  synonyms:
  - --alignment-output-format
  description: Selects the output format for --alignment-output-dir
  args: !SimpleFlagArg
    name: directory
- !Flag
  optional: true
  synonyms:
  - --output-alignment
  description: Write out an XMFA format alignment to the designated file
  args: !SimpleFlagArg
    name: file
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "mauveAligner: unrecognized option '--help'\nUsage:\nmauveAligner [options]\
  \ <seq1 filename> <sml1 filename> ...  <seqN filename> <smlN filename>\nOptions:\n\
  \t    --output=<file> Output file name.  Prints to screen by default\n\t    --mums\
  \ Find MUMs only, do not attempt to determine locally collinear blocks (LCBs)\n\t\
  \    --no-recursion Don't perform recursive anchor identification (implies --no-gapped-alignment)\n\
  \t    --no-lcb-extension If determining LCBs, don't attempt to extend the LCBs\n\
  \t    --seed-size=<number> Initial seed match size, default is log_2( average seq.\
  \ length )\n\t    --max-extension-iterations=<number> Limit LCB extensions to this\
  \ number of attempts, default is 4\n\t    --eliminate-inclusions Eliminate linked\
  \ inclusions in subset matches.\n\t    --weight=<number> Minimum LCB weight in base\
  \ pairs per sequence\n\t    --match-input=<file> Use specified match file instead\
  \ of searching for matches\n\t    --lcb-match-input  Indicates that the match input\
  \ file contains matches that have been clustered into LCBs\n\t    --lcb-input=<file>\
  \ Use specified lcb file instead of constructing LCBs (skips LCB generation)\n\t\
  \    --scratch-path=<path>  For large genomes, use a directory for storage of temporary\
  \ data.  Should be given two or more times to with different paths.\n\t    --id-matrix=<file>\
  \ Generate LCB stats and write them to the specified file\n\t    --island-size=<number>\
  \ Find islands larger than the given number\n\t    --island-output=<file> Output\
  \ islands the given file (requires --island-size)\n\t    --backbone-size=<number>\
  \ Find stretches of backbone longer than the given number of b.p.\n\t    --max-backbone-gap=<number>\
  \ Allow backbone to be interrupted by gaps up to this length in b.p.\n\t    --backbone-output=<file>\
  \ Output islands the given file (requires --island-size)\n\t    --coverage-output=<file>\
  \ Output a coverage list to the specified file (- for stdout)\n\t    --repeats Generates\
  \ a repeat map.  Only one sequence can be specified\n\t    --output-guide-tree=<file>\
  \ Write out a guide tree to the designated file\n\t    --collinear Assume that input\
  \ sequences are collinear--they have no rearrangements\n\nGapped alignment controls:\n\
  \t    --no-gapped-alignment Don't perform a gapped alignment\n\t    --max-gapped-aligner-length=<number>\
  \ Maximum number of base pairs to attempt aligning with the gapped aligner\n\t \
  \   --min-recursive-gap-length=<number> Minimum size of gaps that Mauve will perform\
  \ recursive MUM anchoring on (Default is 200)\n\nSigned permutation matrix options:\n\
  \t    --permutation-matrix-output=<file> Write out the LCBs as a signed permutation\
  \ matrix to the given file\n\t    --permutation-matrix-min-weight=<number> A permutation\
  \ matrix will be written for every set of LCBs with weight between this value and\
  \ the value of --weight\n\nAlignment output options:\n\t    --alignment-output-dir=<directory>\
  \ Outputs a set of alignment files (one per LCB) to a given directory\n\t    --alignment-output-format=<directory>\
  \ Selects the output format for --alignment-output-dir\n\t    --output-alignment=<file>\
  \ Write out an XMFA format alignment to the designated file\n\nSupported alignment\
  \ output formats are: phylip, clustal, msf, nexus, mega, codon\n\n"
generated_using:
- --help
docker_image:
