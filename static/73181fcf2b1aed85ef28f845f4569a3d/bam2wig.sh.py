from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String

Bam2Wig_Sh_V0_1_0 = CommandToolBuilder(tool="bam2wig.sh", base_command=["bam2wig.sh"], inputs=[ToolInput(tag="in_bed_graph", input_type=Boolean(optional=True), prefix="--bedgraph", doc=InputDocumentation(doc="Produce a BED GRAPH instead of a WIGGLE file.\nDefault: false")), ToolInput(tag="in_display", input_type=Boolean(optional=True), prefix="--display", doc=InputDocumentation(doc="What kind of data should we display ?\nDefault: COVERAGE\nPossible Values: [COVERAGE, CLIPPING, INSERTION, DELETION, READ_GROUPS, CASE_CTRL]")), ToolInput(tag="in_filter", input_type=Boolean(optional=True), prefix="--filter", doc=InputDocumentation(doc="A filter expression. Reads matching the expression will be filtered-out.\nEmpty String means 'filter out nothing/Accept all'. See https://github.com/lindenb/jvarkit/blob/master/src/main/resources/javacc/com/github/lindenb/jvarkit/util/bio/samfilter/SamFilterParser.jj\nfor a complete syntax.\nDefault: mapqlt(1) || MapQUnavailable() || Duplicate() || FailsVendorQuality() || NotPrimaryAlignment() || SupplementaryAlignment()")), ToolInput(tag="in_format", input_type=Boolean(optional=True), prefix="--format", doc=InputDocumentation(doc="`Printf` Format for the values. see\nhttps://docs.oracle.com/javase/tutorial/java/data/numberformat.html .\nUse '%.01f' to print an integer. '%e' for scientific notation.\nDefault: %.3f")), ToolInput(tag="in_header", input_type=Boolean(optional=True), prefix="--header", doc=InputDocumentation(doc="print a UCSC custom track header: something lile track type=track_type\nname='__REPLACE_WIG_NAME__' description='__REPLACE_WIG_DESC__'. Use\n`sed` to replace the tokens. e.g: `sed\n'/^track/s/__REPLACE_WIG_NAME__/My data/'`\nDefault: false")), ToolInput(tag="in_help_format", input_type=Boolean(optional=True), prefix="--helpFormat", doc=InputDocumentation(doc="What kind of help. One of [usage,markdown,xml].")), ToolInput(tag="in_interval", input_type=Boolean(optional=True), prefix="--interval", doc=InputDocumentation(doc="Limit analysis to this interval. An interval as the following syntax :\n'chrom:start-end' or 'chrom:middle+extend'  or 'chrom:start-end+extend'\nor 'chrom:start-end+extend-percent%'.A program might use a Reference\nsequence to fix the chromosome name (e.g: 1->chr1)")), ToolInput(tag="in_min_depth", input_type=Boolean(optional=True), prefix="--mindepth", doc=InputDocumentation(doc="When using display READ_GROUPS, What is the minimal read depth that\nshould be considered ?\nDefault: 0")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="Output file. Optional . Default: stdout")), ToolInput(tag="in_partition", input_type=Boolean(optional=True), prefix="--partition", doc=InputDocumentation(doc="When using display READ_GROUPS, how should we partition the ReadGroup ?\nData partitioning using the SAM Read Group (see\nhttps://gatkforums.broadinstitute.org/gatk/discussion/6472/ ) . It can\nbe any combination of sample, library....\nDefault: sample\nPossible Values: [readgroup, sample, library, platform, center, sample_by_platform, sample_by_center, sample_by_platform_by_center, any]")), ToolInput(tag="in_pedigree", input_type=Boolean(optional=True), prefix="--pedigree", doc=InputDocumentation(doc="Pedigree file for CASE_CTRL. A pedigree is a text file delimited with\ntabs. No header. Columns are (1) Family (2) Individual-ID (3) Father Id\nor '0' (4) Mother Id or '0' (5) Sex : 1 male/2 female / 0 unknown (6)\nStatus : 0 unaffected, 1 affected,-9 unknown")), ToolInput(tag="in_percentile", input_type=Boolean(optional=True), prefix="--percentile", doc=InputDocumentation(doc="How to group data in the sliding window ?\nDefault: AVERAGE\nPossible Values: [MIN, MAX, MEDIAN, AVERAGE, RANDOM, SUM]")), ToolInput(tag="in_window_shift", input_type=Boolean(optional=True), prefix="--windowShift", doc=InputDocumentation(doc="window shift\nDefault: 25")), ToolInput(tag="in_window_size", input_type=Boolean(optional=True), prefix="--windowSize", doc=InputDocumentation(doc="window size\nDefault: 100\n")), ToolInput(tag="in_files", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="Output file. Optional . Default: stdout"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bam2Wig_Sh_V0_1_0().translate("wdl", allow_empty_container=True)

