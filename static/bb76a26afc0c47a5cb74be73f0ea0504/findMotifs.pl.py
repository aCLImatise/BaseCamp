from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String, Int, Directory

Findmotifs_Pl_V0_1_0 = CommandToolBuilder(tool="findMotifs.pl", base_command=["findMotifs.pl"], inputs=[ToolInput(tag="in_len", input_type=Boolean(optional=True), prefix="-len", doc=InputDocumentation(doc="<#>[,<#>,<#>...] (motif length, default=8,10,12) [NOTE: values greater 12 may cause the program\nto run out of memmory - in these cases decrease the number of sequences analyzed]")), ToolInput(tag="in_bg", input_type=File(optional=True), prefix="-bg", doc=InputDocumentation(doc="(ids to use as background, default: all genes)")), ToolInput(tag="in_start", input_type=Boolean(optional=True), prefix="-start", doc=InputDocumentation(doc="<#> (offset from TSS, default=-300) [max=based on Promoter Set]")), ToolInput(tag="in_end", input_type=Boolean(optional=True), prefix="-end", doc=InputDocumentation(doc="<#> (offset from TSS, default=50) [max=based on Promoter Set]")), ToolInput(tag="in_rna", input_type=Boolean(optional=True), prefix="-rna", doc=InputDocumentation(doc="(output RNA motif logos and compare to RNA motif database, automatically sets -norevopp)")), ToolInput(tag="in_no_mask", input_type=Boolean(optional=True), prefix="-nomask", doc=InputDocumentation(doc="(use/don't use repeatmasked files, default: -mask)")), ToolInput(tag="in_number_motifs_optimize", input_type=Boolean(optional=True), prefix="-S", doc=InputDocumentation(doc="<#> (Number of motifs to optimize, default: 25)")), ToolInput(tag="in_mis", input_type=Boolean(optional=True), prefix="-mis", doc=InputDocumentation(doc="<#> (global optimization: searches for strings with # mismatches, default: 1)")), ToolInput(tag="in_no_convert", input_type=Boolean(optional=True), prefix="-noconvert", doc=InputDocumentation(doc="(will not worry about converting input files into unigene ids)")), ToolInput(tag="in_norev_opp", input_type=Boolean(optional=True), prefix="-norevopp", doc=InputDocumentation(doc="(do not search the reverse strand for motifs)")), ToolInput(tag="in_no_motif", input_type=Boolean(optional=True), prefix="-nomotif", doc=InputDocumentation(doc="(don't search for de novo motif enrichment)")), ToolInput(tag="in_find", input_type=File(optional=True), prefix="-find", doc=InputDocumentation(doc="(This will cause the program to only scan for motifs)")), ToolInput(tag="in_enhancers", input_type=File(optional=True), prefix="-enhancers", doc=InputDocumentation(doc="<genome verion>\n(enhancers to include in search space, peaks/sequences should be named with a gene ID\nIf multiple enhancers per gene, use the same gene ID, and all will be included)")), ToolInput(tag="in_enhancers_only", input_type=Boolean(optional=True), prefix="-enhancersOnly", doc=InputDocumentation(doc="(do not include promoter sequence in motif search)")), ToolInput(tag="in_fast_abg", input_type=File(optional=True), prefix="-fastaBg", doc=InputDocumentation(doc="(This is recommended for fasta based analysis)")), ToolInput(tag="in_chop_if_y", input_type=Boolean(optional=True), prefix="-chopify", doc=InputDocumentation(doc="(chops up background regions to match size of target regions)\ni.e. if background is a full genome or all mRNAs")), ToolInput(tag="in_m_set", input_type=String(optional=True), prefix="-mset", doc=InputDocumentation(doc="(check against motif collects, default: auto)")), ToolInput(tag="in_basic", input_type=Boolean(optional=True), prefix="-basic", doc=InputDocumentation(doc="(don't check de novo motifs for similarity to known motifs)")), ToolInput(tag="in_bits", input_type=Boolean(optional=True), prefix="-bits", doc=InputDocumentation(doc="(scale sequence logos by information content, default: doesn't scale)")), ToolInput(tag="in_no_check", input_type=Boolean(optional=True), prefix="-nocheck", doc=InputDocumentation(doc="(don't check for similarity between novo motif motifs and known motifs)")), ToolInput(tag="in_m_check", input_type=File(optional=True), prefix="-mcheck", doc=InputDocumentation(doc="(known motifs to check against de novo motifs,")), ToolInput(tag="in_no_known", input_type=Boolean(optional=True), prefix="-noknown", doc=InputDocumentation(doc="(don't search for known motif enrichment, default: -known)")), ToolInput(tag="in_m_known", input_type=File(optional=True), prefix="-mknown", doc=InputDocumentation(doc="(known motifs to check for enrichment,")), ToolInput(tag="in_no_facts", input_type=Boolean(optional=True), prefix="-nofacts", doc=InputDocumentation(doc="(omit humor)")), ToolInput(tag="in_seq_logo", input_type=Boolean(optional=True), prefix="-seqlogo", doc=InputDocumentation(doc="(uses weblogo/seqlogo/ghostscript to visualize motifs, default uses SVG)")), ToolInput(tag="in_use_binomial_distribution", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc="(use binomial distribution to calculate p-values, hypergeometric is default)")), ToolInput(tag="in_no_go", input_type=Boolean(optional=True), prefix="-nogo", doc=InputDocumentation(doc="(don't search for gene ontology enrichment)")), ToolInput(tag="in_human_go", input_type=Boolean(optional=True), prefix="-humanGO", doc=InputDocumentation(doc="(Convert IDs to human for GO analysis)")), ToolInput(tag="in_ontology", input_type=String(optional=True), prefix="-ontology", doc=InputDocumentation(doc="[ont.genes] ... (custom ontologies for GO analysis)")), ToolInput(tag="in_no_weight", input_type=Boolean(optional=True), prefix="-noweight", doc=InputDocumentation(doc="(no CG correction)")), ToolInput(tag="in_no_redun", input_type=Boolean(optional=True), prefix="-noredun", doc=InputDocumentation(doc="(Don't remove predetermined redundant promoters/sequences)")), ToolInput(tag="in_input_file_group", input_type=Boolean(optional=True), prefix="-g", doc=InputDocumentation(doc="(input file is a group file, i.e. 1st column = id, 2nd = 0 or 1 [1=target,0=back])")), ToolInput(tag="in_cpg", input_type=Boolean(optional=True), prefix="-cpg", doc=InputDocumentation(doc="(use CpG% instead of GC% for sequence normalization)")), ToolInput(tag="in_rand", input_type=Boolean(optional=True), prefix="-rand", doc=InputDocumentation(doc="(randomize labels for target and backgound sequences)")), ToolInput(tag="in_mask_motif", input_type=Int(optional=True), prefix="-maskMotif", doc=InputDocumentation(doc="[motif file 2] ... (motifs to mask before motif finding)")), ToolInput(tag="in_opt", input_type=Int(optional=True), prefix="-opt", doc=InputDocumentation(doc="[motif file 2] ... (motifs to optimize/change length)")), ToolInput(tag="in_peaks", input_type=Boolean(optional=True), prefix="-peaks", doc=InputDocumentation(doc="(will produce peak file of promoters to use with findMotifsGenome.pl)")), ToolInput(tag="in_nowarn", input_type=Boolean(optional=True), prefix="-nowarn", doc=InputDocumentation(doc="(no warnings)")), ToolInput(tag="in_keep_files", input_type=Boolean(optional=True), prefix="-keepFiles", doc=InputDocumentation(doc="(don't delete temporary files)")), ToolInput(tag="in_dump_fast_a", input_type=Boolean(optional=True), prefix="-dumpFasta", doc=InputDocumentation(doc="(create target.fa and background.fa files)")), ToolInput(tag="in_min", input_type=Boolean(optional=True), prefix="-min", doc=InputDocumentation(doc="<#> (remove sequences shorter than #, default: 0)")), ToolInput(tag="in_max", input_type=Boolean(optional=True), prefix="-max", doc=InputDocumentation(doc="<#> (remove sequences longer than #, default: 1e10)")), ToolInput(tag="in_reuse", input_type=Boolean(optional=True), prefix="-reuse", doc=InputDocumentation(doc="(rerun homer using old seq files etc. with new options\nand ignores input list, organism)")), ToolInput(tag="in_fdr", input_type=Boolean(optional=True), prefix="-fdr", doc=InputDocumentation(doc="<#> (Calculate empirical FDR for de novo discovery #=number of randomizations)")), ToolInput(tag="in_homer_two", input_type=Boolean(optional=True), prefix="-homer2", doc=InputDocumentation(doc="(use homer2 instead of original homer, default)")), ToolInput(tag="in_nlen", input_type=Boolean(optional=True), prefix="-nlen", doc=InputDocumentation(doc="<#> (length of lower-order oligos to normalize - general sequences, default: 3)")), ToolInput(tag="in_nmax", input_type=Boolean(optional=True), prefix="-nmax", doc=InputDocumentation(doc="<#> (Max normalization iterations, default: 160)")), ToolInput(tag="in_neutral", input_type=Boolean(optional=True), prefix="-neutral", doc=InputDocumentation(doc="(weight sequences to neutral frequencies, i.e. 25%, 6.25%, etc.)")), ToolInput(tag="in_olen", input_type=Boolean(optional=True), prefix="-olen", doc=InputDocumentation(doc="<#> (lower-order oligo normalization for oligo table, use if -nlen isn't working well)")), ToolInput(tag="in_number_processors_use", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="<#> (Number of processors to use, default: 1)")), ToolInput(tag="in_maximum_expected_instance", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc="<#> (Maximum expected motif instance per bp in random sequence, default: 0.01)")), ToolInput(tag="in_cache", input_type=Boolean(optional=True), prefix="-cache", doc=InputDocumentation(doc="<#> (size in MB for statistics cache, default: 500)")), ToolInput(tag="in_quick_mask", input_type=Boolean(optional=True), prefix="-quickMask", doc=InputDocumentation(doc="(skip full masking after finding motifs, similar to original homer)")), ToolInput(tag="in_homer_one", input_type=Boolean(optional=True), prefix="-homer1", doc=InputDocumentation(doc="(to force the use of the original homer)")), ToolInput(tag="in_min_lp", input_type=Boolean(optional=True), prefix="-minlp", doc=InputDocumentation(doc="<#> (stop looking for motifs when seed logp score gets above #, default: -10)")), ToolInput(tag="in_float", input_type=Boolean(optional=True), prefix="-float", doc=InputDocumentation(doc="(allow adjustment of the degeneracy threshold for known motifs to improve p-value[dangerous])")), ToolInput(tag="in_depth", input_type=Boolean(optional=True), prefix="-depth", doc=InputDocumentation(doc="[low|med|high|allnight] (time spent on local optimization default: med)")), ToolInput(tag="in_input_list", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_promoter_set", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_output_directory", input_type=Directory(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_addi_to_inal", input_type=String(optional=True), position=3, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output_directory", output_type=Directory(), selector=InputSelector(input_to_select="in_output_directory", type_hint=File()), doc=OutputDocumentation(doc=""))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Findmotifs_Pl_V0_1_0().translate("wdl", allow_empty_container=True)

