from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Boolean, Int

Bcftools_Isec_V0_1_0 = CommandToolBuilder(tool="bcftools_isec", base_command=["bcftools", "isec"], inputs=[ToolInput(tag="in_collapse", input_type=String(optional=True), prefix="--collapse", doc=InputDocumentation(doc="treat as identical records with <snps|indels|both|all|some|none>, see man page for details [none]")), ToolInput(tag="in_complement", input_type=File(optional=True), prefix="--complement", doc=InputDocumentation(doc="output positions present only in the first file but missing in the others")), ToolInput(tag="in_exclude", input_type=String(optional=True), prefix="--exclude", doc=InputDocumentation(doc="exclude sites for which the expression is true")), ToolInput(tag="in_apply_filters", input_type=String(optional=True), prefix="--apply-filters", doc=InputDocumentation(doc="require at least one of the listed FILTER strings (e.g. 'PASS,.')")), ToolInput(tag="in_include", input_type=String(optional=True), prefix="--include", doc=InputDocumentation(doc="include only sites for which the expression is true")), ToolInput(tag="in_no_version", input_type=Boolean(optional=True), prefix="--no-version", doc=InputDocumentation(doc="do not append version and command line to the header")), ToolInput(tag="in_n_files", input_type=Boolean(optional=True), prefix="--nfiles", doc=InputDocumentation(doc="[+-=~]<int>      output positions present in this many (=), this many or more (+), this many or fewer (-), the exact (~) files")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="write output to a file [standard output]")), ToolInput(tag="in_output_type", input_type=String(optional=True), prefix="--output-type", doc=InputDocumentation(doc="b: compressed BCF, u: uncompressed BCF, z: compressed VCF, v: uncompressed VCF [v]")), ToolInput(tag="in_prefix", input_type=String(optional=True), prefix="--prefix", doc=InputDocumentation(doc="if given, subset each of the input files accordingly, see also -w")), ToolInput(tag="in_regions", input_type=String(optional=True), prefix="--regions", doc=InputDocumentation(doc="restrict to comma-separated list of regions")), ToolInput(tag="in_regions_file", input_type=File(optional=True), prefix="--regions-file", doc=InputDocumentation(doc="restrict to regions listed in a file")), ToolInput(tag="in_targets", input_type=String(optional=True), prefix="--targets", doc=InputDocumentation(doc="similar to -r but streams rather than index-jumps")), ToolInput(tag="in_targets_file", input_type=File(optional=True), prefix="--targets-file", doc=InputDocumentation(doc="similar to -R but streams rather than index-jumps")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="use multithreading with <int> worker threads [0]")), ToolInput(tag="in_write", input_type=Int(optional=True), prefix="--write", doc=InputDocumentation(doc="list of files to write with -p given as 1-based indexes. By default, all files are written")), ToolInput(tag="in_a_dot_vcf_do_tgz", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_bdotvcfdotgz", input_type=String(), position=1, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_complement", output_type=File(optional=True), selector=InputSelector(input_to_select="in_complement", type_hint=File()), doc=OutputDocumentation(doc="output positions present only in the first file but missing in the others")), ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="write output to a file [standard output]"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bcftools_Isec_V0_1_0().translate("wdl", allow_empty_container=True)

