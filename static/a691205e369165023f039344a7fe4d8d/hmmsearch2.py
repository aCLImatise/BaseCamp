from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Boolean, Int, File

Hmmsearch2_V0_1_0 = CommandToolBuilder(tool="hmmsearch2", base_command=["hmmsearch2"], inputs=[ToolInput(tag="in_sets_alignment_limit", input_type=String(optional=True), prefix="-A", doc=InputDocumentation(doc=": sets alignment output limit to <n> best domain alignments")), ToolInput(tag="in_sets_value_globe", input_type=String(optional=True), prefix="-E", doc=InputDocumentation(doc=": sets E value cutoff (globE) to <= x")), ToolInput(tag="in_sets_bit_threshold", input_type=String(optional=True), prefix="-T", doc=InputDocumentation(doc=": sets T bit threshold (globT) to >= x")), ToolInput(tag="in_sets_z_seqs", input_type=String(optional=True), prefix="-Z", doc=InputDocumentation(doc=": sets Z (# seqs) for E-value calculation")), ToolInput(tag="in_compat", input_type=Boolean(optional=True), prefix="--compat", doc=InputDocumentation(doc=": make best effort to use last version's output style")), ToolInput(tag="in_cpu", input_type=String(optional=True), prefix="--cpu", doc=InputDocumentation(doc=": run <n> threads in parallel (if threaded)")), ToolInput(tag="in_cut_ga", input_type=Boolean(optional=True), prefix="--cut_ga", doc=InputDocumentation(doc=": use Pfam GA gathering threshold cutoffs")), ToolInput(tag="in_cut_nc", input_type=Boolean(optional=True), prefix="--cut_nc", doc=InputDocumentation(doc=": use Pfam NC noise threshold cutoffs")), ToolInput(tag="in_cut_tc", input_type=Boolean(optional=True), prefix="--cut_tc", doc=InputDocumentation(doc=": use Pfam TC trusted threshold cutoffs")), ToolInput(tag="in_dome", input_type=Int(optional=True), prefix="--domE", doc=InputDocumentation(doc=": sets domain Eval cutoff (2nd threshold) to <= x")), ToolInput(tag="in_do_mt", input_type=Int(optional=True), prefix="--domT", doc=InputDocumentation(doc=": sets domain T bit thresh (2nd threshold) to >= x")), ToolInput(tag="in_forward", input_type=Boolean(optional=True), prefix="--forward", doc=InputDocumentation(doc=": use the full Forward() algorithm instead of Viterbi")), ToolInput(tag="in_in_format", input_type=File(optional=True), prefix="--informat", doc=InputDocumentation(doc=": sequence file is in format <s>")), ToolInput(tag="in_null_two", input_type=Boolean(optional=True), prefix="--null2", doc=InputDocumentation(doc=": turn OFF the post hoc second null model")), ToolInput(tag="in_pvm", input_type=Boolean(optional=True), prefix="--pvm", doc=InputDocumentation(doc=": run on a Parallel Virtual Machine (PVM)")), ToolInput(tag="in_xnu", input_type=Boolean(optional=True), prefix="--xnu", doc=InputDocumentation(doc=": turn ON XNU filtering of target protein sequences")), ToolInput(tag="in_options", input_type=Boolean(optional=True), prefix="-options", doc=InputDocumentation(doc="")), ToolInput(tag="in_hmm_search", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_hmm_file", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_sequence_file_or_database", input_type=File(), position=2, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Hmmsearch2_V0_1_0().translate("wdl", allow_empty_container=True)

