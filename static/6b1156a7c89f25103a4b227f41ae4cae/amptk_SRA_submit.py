from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String

Amptk_Sra_Submit_V0_1_0 = CommandToolBuilder(tool="amptk_SRA_submit", base_command=["amptk", "SRA-submit"], inputs=[ToolInput(tag="in_input", input_type=Boolean(optional=True), prefix="--input", doc=InputDocumentation(doc="Input FASTQ file or folder (Required)")), ToolInput(tag="in_out", input_type=Boolean(optional=True), prefix="--out", doc=InputDocumentation(doc="Output base name. Default: sra")), ToolInput(tag="in_mapping_file", input_type=Boolean(optional=True), prefix="--mapping_file", doc=InputDocumentation(doc="QIIME-like mapping file.")), ToolInput(tag="in_barcode_fast_a", input_type=File(optional=True), prefix="--barcode_fasta", doc=InputDocumentation(doc="file containing barcodes used.")), ToolInput(tag="in_bio_sample", input_type=Boolean(optional=True), prefix="--biosample", doc=InputDocumentation(doc="BioSample worksheet from NCBI (from confirmation email)")), ToolInput(tag="in_platform", input_type=Boolean(optional=True), prefix="--platform", doc=InputDocumentation(doc="Sequencing platform. Defalt: ion (ion, illumina, 454)")), ToolInput(tag="in_names", input_type=Boolean(optional=True), prefix="--names", doc=InputDocumentation(doc="CSV name mapping file, e.g. BC_1,NewName")), ToolInput(tag="in_description", input_type=Boolean(optional=True), prefix="--description", doc=InputDocumentation(doc="Paragraph description for SRA experimental design. Use quotes to wrap paragraph.")), ToolInput(tag="in_fwd_primer", input_type=Boolean(optional=True), prefix="--fwd_primer", doc=InputDocumentation(doc="Forward primer sequence. Default: fITS7")), ToolInput(tag="in_rev_primer", input_type=Boolean(optional=True), prefix="--rev_primer", doc=InputDocumentation(doc="Reverse primer sequence. Default: ITS4")), ToolInput(tag="in_append", input_type=Boolean(optional=True), prefix="--append", doc=InputDocumentation(doc="Append a name to the output of all files in run, i.e. run1 -> Sample_run1")), ToolInput(tag="in_primer_mismatch", input_type=Boolean(optional=True), prefix="--primer_mismatch", doc=InputDocumentation(doc="Number of mismatches allowed in primer search. Default: 2")), ToolInput(tag="in_barcode_mismatch", input_type=Boolean(optional=True), prefix="--barcode_mismatch", doc=InputDocumentation(doc="Number of mismatches in barcode to allow. Default: 0")), ToolInput(tag="in_require_primer", input_type=Boolean(optional=True), prefix="--require_primer", doc=InputDocumentation(doc="Require primer(s) to be present for output. Default: off [off,forward,both]")), ToolInput(tag="in_min_len", input_type=Boolean(optional=True), prefix="--min_len", doc=InputDocumentation(doc="Minimum length read to keep after trimming barcodes. Default 50")), ToolInput(tag="in_arguments", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[], container="quay.io/biocontainers/amptk:1.5.1--py_1", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Amptk_Sra_Submit_V0_1_0().translate("wdl")

