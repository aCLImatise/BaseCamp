from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, Directory, Boolean

Gappa_Prepare_Chunkify_V0_1_0 = CommandToolBuilder(tool="gappa_prepare_chunkify", base_command=["gappa", "prepare", "chunkify"], inputs=[ToolInput(tag="in_fast_a_path", input_type=File(optional=True), prefix="--fasta-path", doc=InputDocumentation(doc=":PATH(existing)=[] ... REQUIRED\nList of fasta files or directories to process. For directories, only files with the extension `.(fasta|fas|fsa|fna|ffn|faa|frn)[.gz]` are processed.")), ToolInput(tag="in_chunk_size", input_type=Int(optional=True), prefix="--chunk-size", doc=InputDocumentation(doc="=50000     Number of sequences per chunk file.")), ToolInput(tag="in_min_abundance", input_type=Int(optional=True), prefix="--min-abundance", doc=InputDocumentation(doc="=1      Minimum abundance of a single sequence. Sequences below are filtered out.")), ToolInput(tag="in_hash_function", input_type=Int(optional=True), prefix="--hash-function", doc=InputDocumentation(doc=":{SHA1,SHA256,MD5}=SHA1\nHash function for re-naming and identifying sequences.")), ToolInput(tag="in_chunks_out_dir", input_type=Directory(optional=True), prefix="--chunks-out-dir", doc=InputDocumentation(doc="=.     Directory to write chunks files to")), ToolInput(tag="in_chunks_file_prefix", input_type=File(optional=True), prefix="--chunks-file-prefix", doc=InputDocumentation(doc="File prefix for chunks files")), ToolInput(tag="in_chunks_file_suffix", input_type=File(optional=True), prefix="--chunks-file-suffix", doc=InputDocumentation(doc="File suffix for chunks files")), ToolInput(tag="in_abundances_out_dir", input_type=Directory(optional=True), prefix="--abundances-out-dir", doc=InputDocumentation(doc="=. Directory to write abundances files to")), ToolInput(tag="in_abundances_file_prefix", input_type=File(optional=True), prefix="--abundances-file-prefix", doc=InputDocumentation(doc="File prefix for abundances files")), ToolInput(tag="in_abundances_file_suffix", input_type=File(optional=True), prefix="--abundances-file-suffix", doc=InputDocumentation(doc="File suffix for abundances files")), ToolInput(tag="in_allow_file_overwriting", input_type=Boolean(optional=True), prefix="--allow-file-overwriting", doc=InputDocumentation(doc="Allow to overwrite existing output files instead of aborting the command.")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Produce more verbose output.")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="=1            Number of threads to use for calculations.")), ToolInput(tag="in_log_file", input_type=File(optional=True), prefix="--log-file", doc=InputDocumentation(doc="Write all output to a log file, in addition to standard output to the terminal."))], outputs=[ToolOutput(tag="out_log_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_log_file", type_hint=File()), doc=OutputDocumentation(doc="Write all output to a log file, in addition to standard output to the terminal."))], container="quay.io/biocontainers/gappa:0.7.1--he513fc3_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Gappa_Prepare_Chunkify_V0_1_0().translate("wdl")

