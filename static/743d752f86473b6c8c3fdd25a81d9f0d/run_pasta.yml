!Command
positional:
- !Positional
  description: ''
  position: 0
  name: PASTA
  optional: false
- !Positional
  description: ''
  position: 1
  name: performs
  optional: false
- !Positional
  description: ''
  position: 2
  name: iterative
  optional: false
- !Positional
  description: ''
  position: 3
  name: realignment
  optional: false
- !Positional
  description: ''
  position: 4
  name: and
  optional: false
- !Positional
  description: ''
  position: 5
  name: tree
  optional: false
- !Positional
  description: ''
  position: 6
  name: inference
  optional: false
named:
- !Flag
  description: If used, then the input file be will treated as aligned for the purposes
    of the first round of tree inference (the algorithm will start with tree searching
    on the input before re-aligning). This option only applies if a starting tree
    is NOT given.
  synonyms:
  - -a
  - --aligned
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: This option is mostly for backward compatibility. If used, then automatically
    identified default values for the max_subproblem_size, number of cpus, tools,
    breaking strategy, masking criteria, and stopping criteria will be used. This
    is just like using the default options. However, [WARNING] when auto option is
    used PASTA overrides the value of these options even if you have supplied them;
    we recommend that you run this option with --exportconfig to see the exact set
    of options that will be used in your analysis.
  synonyms:
  - --auto
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Specify DNA, RNA, or Protein to indicate what type of data is specified.
    Note that this option is NOT automatically determined [default: dna]'
  synonyms:
  - -d
  - --datatype
  args: !SimpleFlagArg
    name: DATATYPE
  optional: true
- !Flag
  description: Export the configuration to the specified file and exit. This is useful
    if you want to combine several configurations and command line settings into a
    single configuration file to be used in other analyses.
  synonyms:
  - --exportconfig
  args: !SimpleFlagArg
    name: EXPORTCONFIG
  optional: true
- !Flag
  description: input sequence file
  synonyms:
  - -i
  - --input
  args: !SimpleFlagArg
    name: INPUT
  optional: true
- !Flag
  description: job name [pastajob]
  synonyms:
  - -j
  - --job
  args: !SimpleFlagArg
    name: JOB
  optional: true
- !Flag
  description: Keep even the realignment temporary running files (this only has an
    effect if keeptemp is also selected).
  synonyms:
  - --keepalignmenttemps
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Keep temporary running files? [default: disabled]'
  synonyms:
  - -k
  - --keeptemp
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: How to deal with missing data symbols. Specify either "Ambiguous" or
    "Absent" if the input data contains ?-symbols
  synonyms:
  - --missing
  args: !SimpleFlagArg
    name: MISSING
  optional: true
- !Flag
  description: Analyze multi-locus data? NOT SUPPORTED IN CURRENT PASTA version.
  synonyms:
  - -m
  - --multilocus
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'If used, the completion of the PASTA algorithm will be followed by
    a tree search using RAxML on the masked alignment. This can be useful if a very
    fast and approximate tree estimator is used during the PASTA algorithm. [default:
    disabled]'
  synonyms:
  - --raxml-search-after
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: directory that will be the parent for this job's temporary file [default
    in PASTA home]
  synonyms:
  - --temporaries
  args: !SimpleFlagArg
    name: TEMPORARIES
  optional: true
- !Flag
  description: optional file that will store the times of events during the PASTA
    run. If the file exists, new lines will be
  synonyms:
  - --timesfile
  args: !SimpleFlagArg
    name: TIMESFILE
  optional: true
- !Flag
  description: starting tree file
  synonyms:
  - -t
  - --treefile
  args: !SimpleFlagArg
    name: TREEFILE
  optional: true
- !Flag
  description: If used, then the program will not perform the PASTA algorithm. Instead
    it will simply call the sequence aligner to align the entire dataset then will
    call the tree estimator to obtain the tree.
  synonyms:
  - --two-phase
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: If used, then the data in the input file will be parsed using a more
    careful procedure. This will generate more helpful error messages, but will use
    more memory and be much slower for large inputs. If this option is omitted, the
    error messages resulting from invalid input data will be more cryptic.
  synonyms:
  - --untrusted
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: When the blind mode is final, then PASTA will never leave blind mode
    once it is has entered blind mode.
  synonyms:
  - --no-blind-mode-is-final
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: If True then PASTA will move to the blind mode as soon it encounters
    a tree/alignment pair with a worse score. This is essentially the same as running
    in blind mode from the beginning, but it does allow one to terminate a run at
    an interval from the first time the algorithm fails to improve the score.
  synonyms:
  - --move-to-blind-on-worse-score
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: directory for output files (defaults to input file directory)
  synonyms:
  - -o
  - --output-directory
  args: !SimpleFlagArg
    name: OUTPUT_DIRECTORY
  optional: true
- !Flag
  description: Return the best likelihood tree and alignment pair instead of those
    from the last iteration; this is discouraged with masking option enabled.
  synonyms:
  - --no-return-final-tree-and-alignment
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: =#      The maximum memory available to OPAL (for the Java heap size
    when running Java tools).
  synonyms:
  - --max-mem-mb
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '=#        The number of processing cores that you would like to assign
    to PASTA.  This number should not exceed the number of cores on your machine.
    [default: number of cores available on the machine]'
  synonyms:
  - --num-cpus
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '=# The minimum number of non-gap characters required in each column
    passed to the tree estimation step. Columns with fewer non-gap characters than
    the given threshold will be masked out before passing the alignment into the tree
    estimation module. These columns will be present in the final alignment. [default:
    0.1% of alignment size]'
  synonyms:
  - --mask-gappy-sites
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: If selected that the tree from the previous iteration will be given
    to the tree searching tool as a starting tree.
  synonyms:
  - --start-tree-search-from-current
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'The name of the alignment program to use for subproblems. [default:
    mafft]'
  synonyms:
  - --aligner
  args: !SimpleFlagArg
    name: ALIGNER
  optional: true
- !Flag
  description: 'The name of the alignment program to use to merge subproblems. [default:
    OPAL]'
  synonyms:
  - --merger
  args: !SimpleFlagArg
    name: MERGER
  optional: true
- !Flag
  description: 'The name of the tree inference program to use to find trees on fixed
    alignments. [default: fasttree]'
  synonyms:
  - --tree-estimator
  args: !SimpleFlagArg
    name: TREE_ESTIMATOR
  optional: true
command:
- run_pasta.py
parent:
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "Usage: run_pasta.py [options] <settings_file1> <settings_file2> ...\n\n\
  \nPASTA performs iterative realignment and tree inference, similar to SATe, but\n\
  uses a very different merge algorithm which improves running time, memory\nusage,\
  \ and accuracy. The current code is heavily based on SATe, with lots of\nmodifications,\
  \ many related to algorithmic differences between PASTA and SATe,\nbut also many\
  \ scalability improvements (parallelization, tree parsing,\ndefaults, etc.)\n\n\
  Minimally you must provide a sequence file (with the '--input' option); a\nstarting\
  \ tree is optional. By default, important algorithmic parameters are\nset based\
  \ on automatic rules.\n\nThe command line allows you to alter the behavior of the\
  \ algorithm\n(termination criteria, when the algorithm switches to \"Blind\" acceptance\
  \ of\nnew alignments, how the tree is decomposed to find subproblems to be used,\
  \ and\nthe external tools to use).\n\nOptions can also be passed in as configuration\
  \ files.\n\nWith the format:\n####################################################\n\
  [commandline]\noption-name = value\n\n[sate]\noption-name = value\n####################################################\n\
  \nWith every run, PASTA saves the configuration file for that run as a temporary\n\
  file called [jobname]_temp_pasta_config.txt in your output directory.\n\nConfiguration\
  \ files are read in the order they occur as arguments (with values\nin later files\
  \ replacing previously read values). Options specified in the\ncommand line are\
  \ read last. Thus these values \"overwrite\" any settings from\nthe configuration\
  \ files. Note that the use of --auto option can overwrite some\nof the other options\
  \ provided by commandline or through configuration files.\n\n\nOptions:\n  --version\
  \             show program's version number and exit\n  -h, --help            show\
  \ this help message and exit\n\n  commandline options:\n    -a, --aligned      \
  \ If used, then the input file be will treated as\n                        aligned\
  \ for the purposes of the first round of tree\n                        inference\
  \ (the algorithm will start with tree\n                        searching on the\
  \ input before re-aligning). This\n                        option only applies if\
  \ a starting tree is NOT given.\n    --auto              This option is mostly for\
  \ backward compatibility. If\n                        used, then automatically identified\
  \ default values for\n                        the max_subproblem_size, number of\
  \ cpus, tools,\n                        breaking strategy, masking criteria, and\
  \ stopping\n                        criteria will be used. This is just like using\
  \ the\n                        default options. However, [WARNING] when auto option\n\
  \                        is used PASTA overrides the value of these options\n  \
  \                      even if you have supplied them; we recommend that you\n \
  \                       run this option with --exportconfig to see the exact\n \
  \                       set of options that will be used in your analysis.\n   \
  \ -d DATATYPE, --datatype=DATATYPE\n                        Specify DNA, RNA, or\
  \ Protein to indicate what type of\n                        data is specified. Note\
  \ that this option is NOT\n                        automatically determined [default:\
  \ dna]\n    --exportconfig=EXPORTCONFIG\n                        Export the configuration\
  \ to the specified file and\n                        exit. This is useful if you\
  \ want to combine several\n                        configurations and command line\
  \ settings into a single\n                        configuration file to be used\
  \ in other analyses.\n    -i INPUT, --input=INPUT\n                        input\
  \ sequence file\n    -j JOB, --job=JOB   job name [pastajob]\n    --keepalignmenttemps\n\
  \                        Keep even the realignment temporary running files\n   \
  \                     (this only has an effect if keeptemp is also\n           \
  \             selected).\n    -k, --keeptemp      Keep temporary running files?\
  \ [default: disabled]\n    --missing=MISSING   How to deal with missing data symbols.\
  \ Specify either\n                        \"Ambiguous\" or \"Absent\" if the input\
  \ data contains\n                        ?-symbols\n    -m, --multilocus    Analyze\
  \ multi-locus data? NOT SUPPORTED IN CURRENT\n                        PASTA version.\n\
  \    --raxml-search-after\n                        If used, the completion of the\
  \ PASTA algorithm will be\n                        followed by a tree search using\
  \ RAxML on the masked\n                        alignment. This can be useful if\
  \ a very fast and\n                        approximate tree estimator is used during\
  \ the PASTA\n                        algorithm. [default: disabled]\n    --temporaries=TEMPORARIES\n\
  \                        directory that will be the parent for this job's\n    \
  \                    temporary file [default in PASTA home]\n    --timesfile=TIMESFILE\n\
  \                        optional file that will store the times of events\n   \
  \                     during the PASTA run. If the file exists, new lines\n    \
  \                    will be\n    -t TREEFILE, --treefile=TREEFILE\n           \
  \             starting tree file\n    --two-phase         If used, then the program\
  \ will not perform the PASTA\n                        algorithm. Instead it will\
  \ simply call the sequence\n                        aligner to align the entire\
  \ dataset then will call the\n                        tree estimator to obtain the\
  \ tree.\n    --untrusted         If used, then the data in the input file will be\n\
  \                        parsed using a more careful procedure. This will\n    \
  \                    generate more helpful error messages, but will use\n      \
  \                  more memory and be much slower for large inputs. If\n       \
  \                 this option is omitted, the error messages resulting\n       \
  \                 from invalid input data will be more cryptic.\n\n  SATe acceptance\
  \ options:\n    --blind-after-iter-without-imp=#\n                        Maximum\
  \ number of iterations without an improvement in\n                        likelihood\
  \ score that PASTA will run before switching\n                        to blind mode.\
  \ [default: disabled]\n    --blind-after-time-without-imp=#.#\n                \
  \        Maximum time (in seconds) that PASTA will run without\n               \
  \         an improvement in likelihood score before switching to\n             \
  \           blind mode. [default: disabled]\n    --blind-after-total-iter=#\n  \
  \                      Maximum number of iterations that PASTA will run\n      \
  \                  before switching to blind mode. [default: 0]\n    --blind-after-total-time=#.#\n\
  \                        Maximum time (in seconds) that PASTA will run before\n\
  \                        switching to blind mode. [default: disabled]\n    --no-blind-mode-is-final\n\
  \                        When the blind mode is final, then PASTA will never\n \
  \                       leave blind mode once it is has entered blind mode.\n  \
  \  --move-to-blind-on-worse-score\n                        If True then PASTA will\
  \ move to the blind mode as soon\n                        it encounters a tree/alignment\
  \ pair with a worse\n                        score. This is essentially the same\
  \ as running in\n                        blind mode from the beginning, but it does\
  \ allow one\n                        to terminate a run at an interval from the\
  \ first time\n                        the algorithm fails to improve the score.\n\
  \n  SATe decomposition options:\n    --break-strategy=BREAK_STRATEGY\n         \
  \               The method for choosing an edge when bisecting the\n           \
  \             tree during decomposition [default: centroid]\n    --max-subproblem-frac=#.#\n\
  \                        The maximum size (number of leaves) of subproblems\n  \
  \                      specified in terms as a proportion of the total number\n\
  \                        of leaves.  When a subproblem contains this number of\n\
  \                        leaves (or fewer), then it will not be decomposed\n   \
  \                     further. [default: automatically picked based on\n       \
  \                 alignment size]\n    --max-subproblem-size=#\n               \
  \         The maximum size (number of leaves) of subproblems.\n                \
  \        When a subproblem contains this number of leaves (or\n                \
  \        fewer), then it will not be decomposed further.\n                     \
  \   [default: automatically picked based on alignment\n                        size]\n\
  \n  SATe output options:\n    -o OUTPUT_DIRECTORY, --output-directory=OUTPUT_DIRECTORY\n\
  \                        directory for output files (defaults to input file\n  \
  \                      directory)\n    --no-return-final-tree-and-alignment\n  \
  \                      Return the best likelihood tree and alignment pair\n    \
  \                    instead of those from the last iteration; this is\n       \
  \                 discouraged with masking option enabled.\n\n  SATe platform options:\n\
  \    --max-mem-mb=#      The maximum memory available to OPAL (for the Java\n  \
  \                      heap size when running Java tools).\n    --num-cpus=#   \
  \     The number of processing cores that you would like to\n                  \
  \      assign to PASTA.  This number should not exceed the\n                   \
  \     number of cores on your machine. [default: number of\n                   \
  \     cores available on the machine]\n\n  SATe searching options:\n    --mask-gappy-sites=#\n\
  \                        The minimum number of non-gap characters required in\n\
  \                        each column passed to the tree estimation step.\n     \
  \                   Columns with fewer non-gap characters than the given\n     \
  \                   threshold will be masked out before passing the\n          \
  \              alignment into the tree estimation module. These\n              \
  \          columns will be present in the final alignment.\n                   \
  \     [default: 0.1% of alignment size]\n    --start-tree-search-from-current\n\
  \                        If selected that the tree from the previous iteration\n\
  \                        will be given to the tree searching tool as a starting\n\
  \                        tree.\n\n  SATe termination options:\n    --after-blind-iter-term-limit=#\n\
  \                        The maximum number of iteration that the PASTA\n      \
  \                  algorithm will run after PASTA has entered blind mode.\n    \
  \                    If the number is less than 1, then no iteration limit\n   \
  \                     will be used. [default: disabled]\n    --after-blind-iter-without-imp-limit=#\n\
  \                        The maximum number of iterations without an\n         \
  \               improvement in score that the PASTA algorithm will run\n       \
  \                 after entering BLIND mode.  If the number is less than\n     \
  \                   1, then no iteration limit will be used. [default:\n       \
  \                 disabled]\n    --after-blind-time-term-limit=#.#\n           \
  \             Maximum time (in seconds) that PASTA will continue\n             \
  \           starting new iterations of realigning and tree\n                   \
  \     searching after PASTA has entered blind mode. If the\n                   \
  \     number is less than 0, then no time limit will be\n                      \
  \  used. [default: disabled]\n    --after-blind-time-without-imp-limit=#.#\n   \
  \                     Maximum time (in seconds) since the last improvement\n   \
  \                     in score that PASTA will continue starting new\n         \
  \               iterations of realigning and tree searching after\n            \
  \            entering BLIND mode. If the number is less than 0,\n              \
  \          then no time limit will be used. [default: disabled]\n    --iter-limit=#\
  \      The maximum number of iteration that the PASTA\n                        algorithm\
  \ will run.  If the number is less than 1,\n                        then no iteration\
  \ limit will be used. [default: 3]\n    --iter-without-imp-limit=#\n           \
  \             The maximum number of iterations without an\n                    \
  \    improvement in score that the PASTA algorithm will\n                      \
  \  run.  If the number is less than 1, then no iteration\n                     \
  \   limit will be used. [default: disabled]\n    --time-limit=#.#    Maximum time\
  \ (in seconds) that PASTA will continue\n                        starting new iterations\
  \ of realigning and tree\n                        searching. If the number is less\
  \ than 0, then no time\n                        limit will be used. [default: disabled]\n\
  \    --time-without-imp-limit=#.#\n                        Maximum time (in seconds)\
  \ since the last improvement\n                        in score that PASTA will continue\
  \ starting new\n                        iterations of realigning and tree searching.\
  \ If the\n                        number is less than 0, then no time limit will\
  \ be\n                        used. [default: disabled]\n\n  SATe tools options:\n\
  \    --aligner=ALIGNER   The name of the alignment program to use for\n        \
  \                subproblems. [default: mafft]\n    --merger=MERGER     The name\
  \ of the alignment program to use to merge\n                        subproblems.\
  \ [default: OPAL]\n    --tree-estimator=TREE_ESTIMATOR\n                       \
  \ The name of the tree inference program to use to find\n                      \
  \  trees on fixed alignments. [default: fasttree]\n"
generated_using:
- --help
