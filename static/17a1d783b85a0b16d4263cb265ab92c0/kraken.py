from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Int, Boolean, File

Kraken_V0_1_0 = CommandToolBuilder(tool="kraken", base_command=["kraken"], inputs=[ToolInput(tag="in_db", input_type=String(optional=True), prefix="--db", doc=InputDocumentation(doc="Name for Kraken DB\n(default: none)")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of threads (default: 1)")), ToolInput(tag="in_fast_a_input", input_type=Boolean(optional=True), prefix="--fasta-input", doc=InputDocumentation(doc="Input is FASTA format")), ToolInput(tag="in_fast_q_input", input_type=Boolean(optional=True), prefix="--fastq-input", doc=InputDocumentation(doc="Input is FASTQ format")), ToolInput(tag="in_fast_q_output", input_type=Boolean(optional=True), prefix="--fastq-output", doc=InputDocumentation(doc="Output in FASTQ format")), ToolInput(tag="in_gzip_compressed", input_type=Boolean(optional=True), prefix="--gzip-compressed", doc=InputDocumentation(doc="Input is gzip compressed")), ToolInput(tag="in_bzip_two_compressed", input_type=Boolean(optional=True), prefix="--bzip2-compressed", doc=InputDocumentation(doc="Input is bzip2 compressed")), ToolInput(tag="in_quick", input_type=Boolean(optional=True), prefix="--quick", doc=InputDocumentation(doc="Quick operation (use first hit or hits)")), ToolInput(tag="in_min_hits", input_type=Int(optional=True), prefix="--min-hits", doc=InputDocumentation(doc="In quick op., number of hits req'd for classification\nNOTE: this is ignored if --quick is not specified")), ToolInput(tag="in_unclassified_out", input_type=File(optional=True), prefix="--unclassified-out", doc=InputDocumentation(doc="Print unclassified sequences to filename")), ToolInput(tag="in_classified_out", input_type=File(optional=True), prefix="--classified-out", doc=InputDocumentation(doc="Print classified sequences to filename")), ToolInput(tag="in_out_fmt", input_type=String(optional=True), prefix="--out-fmt", doc=InputDocumentation(doc="Format for [un]classified sequence output. supported\noptions are: {legacy, paired, interleaved}")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="Print output to filename (default: stdout); '-' will\nsuppress normal output")), ToolInput(tag="in_only_classified_output", input_type=Boolean(optional=True), prefix="--only-classified-output", doc=InputDocumentation(doc="Print no Kraken output for unclassified sequences")), ToolInput(tag="in_preload", input_type=Boolean(optional=True), prefix="--preload", doc=InputDocumentation(doc="Loads DB into memory before classification")), ToolInput(tag="in_paired", input_type=Boolean(optional=True), prefix="--paired", doc=InputDocumentation(doc="The two filenames provided are paired-end reads")), ToolInput(tag="in_check_names", input_type=Boolean(optional=True), prefix="--check-names", doc=InputDocumentation(doc="Ensure each pair of reads have names that agree\nwith each other; ignored if --paired is not specified"))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="Print output to filename (default: stdout); '-' will\nsuppress normal output"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Kraken_V0_1_0().translate("wdl", allow_empty_container=True)

