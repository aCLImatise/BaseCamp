from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String, Int

Bcftools_Merge_V0_1_0 = CommandToolBuilder(tool="bcftools_merge", base_command=["bcftools", "merge"], inputs=[ToolInput(tag="in_force_samples", input_type=Boolean(optional=True), prefix="--force-samples", doc=InputDocumentation(doc="resolve duplicate sample names")), ToolInput(tag="in_print_header", input_type=Boolean(optional=True), prefix="--print-header", doc=InputDocumentation(doc="print only the merged header and exit")), ToolInput(tag="in_use_header", input_type=File(optional=True), prefix="--use-header", doc=InputDocumentation(doc="use the provided header")), ToolInput(tag="in_missing_to_ref", input_type=Boolean(optional=True), prefix="--missing-to-ref", doc=InputDocumentation(doc="assume genotypes at missing sites are 0/0")), ToolInput(tag="in_apply_filters", input_type=String(optional=True), prefix="--apply-filters", doc=InputDocumentation(doc="require at least one of the listed FILTER strings (e.g. 'PASS,.')")), ToolInput(tag="in_filter_logic", input_type=Boolean(optional=True), prefix="--filter-logic", doc=InputDocumentation(doc="<x|+>           remove filters if some input is PASS ('x'), or apply all filters ('+') [+]")), ToolInput(tag="in_gvc_f", input_type=Boolean(optional=True), prefix="--gvcf", doc=InputDocumentation(doc="<-|ref.fa>              merge gVCF blocks, INFO/END tag is expected. Implies -i QS:sum,MinDP:min,I16:sum,IDV:max,IMF:max")), ToolInput(tag="in_info_rules", input_type=Boolean(optional=True), prefix="--info-rules", doc=InputDocumentation(doc="<tag:method,..>   rules for merging INFO fields (method is one of sum,avg,min,max,join) or '-' to turn off the default [DP:sum,DP4:sum]")), ToolInput(tag="in_file_list", input_type=File(optional=True), prefix="--file-list", doc=InputDocumentation(doc="read file names from the file")), ToolInput(tag="in_merge", input_type=String(optional=True), prefix="--merge", doc=InputDocumentation(doc="allow multiallelic records for <snps|indels|both|all|none|id>, see man page for details [both]")), ToolInput(tag="in_no_version", input_type=Boolean(optional=True), prefix="--no-version", doc=InputDocumentation(doc="do not append version and command line to the header")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="write output to a file [standard output]")), ToolInput(tag="in_output_type", input_type=String(optional=True), prefix="--output-type", doc=InputDocumentation(doc="'b' compressed BCF; 'u' uncompressed BCF; 'z' compressed VCF; 'v' uncompressed VCF [v]")), ToolInput(tag="in_regions", input_type=String(optional=True), prefix="--regions", doc=InputDocumentation(doc="restrict to comma-separated list of regions")), ToolInput(tag="in_regions_file", input_type=File(optional=True), prefix="--regions-file", doc=InputDocumentation(doc="restrict to regions listed in a file")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="use multithreading with <int> worker threads [0]")), ToolInput(tag="in_a_dot_vcf_do_tgz", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_bdotvcfdotgz", input_type=String(), position=1, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="write output to a file [standard output]"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bcftools_Merge_V0_1_0().translate("wdl", allow_empty_container=True)

