from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Guppy_Squash_V0_1_0 = CommandToolBuilder(tool="guppy_squash", base_command=["guppy", "squash"], inputs=[ToolInput(tag="in_point_mass", input_type=Boolean(optional=True), prefix="--point-mass", doc=InputDocumentation(doc="Treat every pquery as a point mass concentrated on the highest-weight placement.")), ToolInput(tag="in_pp", input_type=Boolean(optional=True), prefix="--pp", doc=InputDocumentation(doc="Use posterior probability for the weight.")), ToolInput(tag="in_reference_package_path", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="Reference package path.")), ToolInput(tag="in_seed", input_type=Boolean(optional=True), prefix="--seed", doc=InputDocumentation(doc="Set the random seed, an integer > 0. Default is 1.")), ToolInput(tag="in_min_fat", input_type=Boolean(optional=True), prefix="--min-fat", doc=InputDocumentation(doc="The minimum branch length for fattened edges (to increase their visibility). To turn off set to 0. Default: 0.01")), ToolInput(tag="in_total_width", input_type=Boolean(optional=True), prefix="--total-width", doc=InputDocumentation(doc="Set the total pixel width for all of the branches of the tree. Default: 300")), ToolInput(tag="in_width_factor", input_type=Boolean(optional=True), prefix="--width-factor", doc=InputDocumentation(doc="Override total-width by directly setting the number of pixels per unit of thing displayed.")), ToolInput(tag="in_node_numbers", input_type=Boolean(optional=True), prefix="--node-numbers", doc=InputDocumentation(doc="Put the node numbers in where the bootstraps usually go.")), ToolInput(tag="in_out_dir", input_type=Boolean(optional=True), prefix="--out-dir", doc=InputDocumentation(doc="Specify the directory to write files to.")), ToolInput(tag="in_prefix", input_type=Boolean(optional=True), prefix="--prefix", doc=InputDocumentation(doc="Specify a string to be prepended to filenames.")), ToolInput(tag="in_exponent_kr_value", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="Exponent for KR integration, i.e. value of p in Z_p. Default 1.")), ToolInput(tag="in_normalize", input_type=Boolean(optional=True), prefix="--normalize", doc=InputDocumentation(doc="Divide KR by a given value. Legal arguments are 'tree-length'.")), ToolInput(tag="in_bootstrap", input_type=Boolean(optional=True), prefix="--bootstrap", doc=InputDocumentation(doc="the number of bootstrap replicates to run")), ToolInput(tag="in_tax_cluster", input_type=Boolean(optional=True), prefix="--tax-cluster", doc=InputDocumentation(doc="Perform taxonomic clustering rather than phylogenetic.Specify 'unit' or 'inv' for the two different modes.")), ToolInput(tag="in_pre_round", input_type=Boolean(optional=True), prefix="--pre-round", doc=InputDocumentation(doc="Apply rounding with 3 sig figs and cutoff 0.01 to each\nplacerun before clustering")), ToolInput(tag="in_help", input_type=Boolean(optional=True), prefix="--help", doc=InputDocumentation(doc="Display this list of options")), ToolInput(tag="in_squash", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_place_files", input_type=String(), position=1, doc=InputDocumentation(doc=""))], outputs=[], container="quay.io/biocontainers/sepp:v4.5.0--py37_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Guppy_Squash_V0_1_0().translate("wdl")

