from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean, Int, Directory

Gappa_Prepare_Taxonomy_Tree_V0_1_0 = CommandToolBuilder(tool="gappa_prepare_taxonomy_tree", base_command=["gappa", "prepare", "taxonomy-tree"], inputs=[ToolInput(tag="in_tax_on_list_file", input_type=File(optional=True), prefix="--taxon-list-file", doc=InputDocumentation(doc=":FILE File that maps taxon names to taxonomic paths.")), ToolInput(tag="in_taxonomy_file", input_type=File(optional=True), prefix="--taxonomy-file", doc=InputDocumentation(doc=":FILE   File that lists the taxa of the taxonomy as taxonomic paths.")), ToolInput(tag="in_keep_singleton_inner_nodes", input_type=Boolean(optional=True), prefix="--keep-singleton-inner-nodes", doc=InputDocumentation(doc="Taxonomic paths can go down several levels without any furcation. Use this option to keep such paths, instead of collapsing them into a single level.")), ToolInput(tag="in_keep_inner_node_names", input_type=Boolean(optional=True), prefix="--keep-inner-node-names", doc=InputDocumentation(doc="Taxonomies contain names at every level, while trees usually do not. Use this option to also set taxonomic names for the inner nodes of the tree.")), ToolInput(tag="in_max_level", input_type=Int(optional=True), prefix="--max-level", doc=InputDocumentation(doc="=-1          Maximum taxonomic level to process (0-based). Taxa below this level are not added to the tree.")), ToolInput(tag="in_out_dir", input_type=Directory(optional=True), prefix="--out-dir", doc=InputDocumentation(doc="=.            Directory to write files to")), ToolInput(tag="in_file_prefix", input_type=File(optional=True), prefix="--file-prefix", doc=InputDocumentation(doc="File prefix for output files")), ToolInput(tag="in_file_suffix", input_type=File(optional=True), prefix="--file-suffix", doc=InputDocumentation(doc="File suffix for output files")), ToolInput(tag="in_allow_file_overwriting", input_type=Boolean(optional=True), prefix="--allow-file-overwriting", doc=InputDocumentation(doc="Allow to overwrite existing output files instead of aborting the command.")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Produce more verbose output.")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="=8            Number of threads to use for calculations.")), ToolInput(tag="in_log_file", input_type=File(optional=True), prefix="--log-file", doc=InputDocumentation(doc="Write all output to a log file, in addition to standard output to the terminal."))], outputs=[ToolOutput(tag="out_file_prefix", output_type=File(optional=True), selector=InputSelector(input_to_select="in_file_prefix", type_hint=File()), doc=OutputDocumentation(doc="File prefix for output files")), ToolOutput(tag="out_file_suffix", output_type=File(optional=True), selector=InputSelector(input_to_select="in_file_suffix", type_hint=File()), doc=OutputDocumentation(doc="File suffix for output files")), ToolOutput(tag="out_log_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_log_file", type_hint=File()), doc=OutputDocumentation(doc="Write all output to a log file, in addition to standard output to the terminal."))], container="quay.io/biocontainers/gappa:0.7.0--he513fc3_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Gappa_Prepare_Taxonomy_Tree_V0_1_0().translate("wdl")

