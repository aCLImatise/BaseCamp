from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Boolean, Int

Iit_Get_V0_1_0 = CommandToolBuilder(tool="iit_get", base_command=["iit_get"], inputs=[ToolInput(tag="in_field", input_type=String(optional=True), prefix="--field", doc=InputDocumentation(doc="Show given field part of the annotation")), ToolInput(tag="in_interpret_query_queries_is", input_type=Boolean(optional=True), prefix="--label", doc=InputDocumentation(doc="Interpret query or queries as a label, even if it is numeric")), ToolInput(tag="in_coords", input_type=Boolean(optional=True), prefix="--coords", doc=InputDocumentation(doc="Interpret query or queries as coords")), ToolInput(tag="in_an_not_only", input_type=Boolean(optional=True), prefix="--annotonly", doc=InputDocumentation(doc="Show annotation lines only (no headers)")), ToolInput(tag="in_sort", input_type=Boolean(optional=True), prefix="--sort", doc=InputDocumentation(doc="Sort results by coordinates")), ToolInput(tag="in_unsigned", input_type=Boolean(optional=True), prefix="--unsigned", doc=InputDocumentation(doc="Print all intervals as low..high, even those entered as reverse (high < low)")), ToolInput(tag="in_flanking", input_type=Int(optional=True), prefix="--flanking", doc=InputDocumentation(doc="Show flanking segments on left and right")), ToolInput(tag="in_low_val", input_type=String(optional=True), prefix="--lowval", doc=InputDocumentation(doc="Low bound on a values IIT (default -Inf)")), ToolInput(tag="in_high_val", input_type=String(optional=True), prefix="--highval", doc=InputDocumentation(doc="High bound on a values IIT (default +Inf)")), ToolInput(tag="in_center", input_type=Int(optional=True), prefix="--center", doc=InputDocumentation(doc="Align reads so given position is centered at given column")), ToolInput(tag="in_center_uc", input_type=Boolean(optional=True), prefix="--centeruc", doc=InputDocumentation(doc="Report only reads with upper-case letter at given position")), ToolInput(tag="in_run_length", input_type=Boolean(optional=True), prefix="--runlength", doc=InputDocumentation(doc="Report runlength IIT file in tally format")), ToolInput(tag="in_tally", input_type=Boolean(optional=True), prefix="--tally", doc=InputDocumentation(doc="Report tally IIT file in tally format")), ToolInput(tag="in_zeroes", input_type=Boolean(optional=True), prefix="--zeroes", doc=InputDocumentation(doc="Include zeroes in tally format")), ToolInput(tag="in_stats", input_type=Boolean(optional=True), prefix="--stats", doc=InputDocumentation(doc="Statistics (count, npositions, mean) of tally format")), ToolInput(tag="in_start", input_type=String(), position=0, doc=InputDocumentation(doc="chr:")), ToolInput(tag="in_start_dot_do_tend", input_type=String(), position=1, doc=InputDocumentation(doc="start")), ToolInput(tag="in_options", input_type=String(), position=2, doc=InputDocumentation(doc="Options"))], outputs=[], container="quay.io/biocontainers/gmap:2021.03.08--pl5262h36cd882_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Iit_Get_V0_1_0().translate("wdl")

