!Command
command:
- gem
- install
positional:
- !Positional
  description: -n, --bindir DIR                 Directory where binary files are
  position: 0
  name: gems
  optional: false
- !Positional
  description: --[no-]document [TYPES]      Generate documentation for installed gems
  position: 1
  name: located
  optional: false
- !Positional
  description: 'For example: rdoc,ri'
  position: 0
  name: generate.
  optional: false
- !Positional
  description: -w, --[no-]wrappers              Use bin wrappers for executables
  position: 1
  name: checks
  optional: false
- !Positional
  description: --[no-]user-install          Install in user's home directory instead
  position: 0
  name: foo_exec18
  optional: false
- !Positional
  description: --development-all            Install development dependencies for all
  position: 0
  name: dependencies
  optional: false
- !Positional
  description: name of gem to install
  position: 0
  name: GEMNAME
  optional: false
- !Positional
  description: You may need to specify the path to the library's headers and
  position: 0
  name: repository.
  optional: false
named:
- !Flag
  description: Specify the platform of gem to install
  synonyms:
  - --platform
  args: !SimpleFlagArg
    name: PLATFORM
  optional: true
- !Flag
  description: ', --[no-]update-sources        Update local source cache'
  synonyms:
  - -u
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Gem repository directory to get installed
  synonyms:
  - -i
  - --install-dir
  args: !SimpleFlagArg
    name: DIR
  optional: true
- !Flag
  description: "Temporary installation root. Useful for building\npackages. Do not\
    \ use this when installing remote gems."
  synonyms:
  - --build-root
  args: !SimpleFlagArg
    name: DIR
  optional: true
- !Flag
  description: "Install gem into the vendor directory.\nOnly for use by gem repackagers."
  synonyms:
  - --vendor
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Disable documentation generation
  synonyms:
  - -N
  - --no-document
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ", --[no-]env-shebang           Rewrite the shebang line on installed\n\
    scripts to use /usr/bin/env"
  synonyms:
  - -E
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ', --[no-]force                 Force gem to install, bypassing dependency'
  synonyms:
  - -f
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Specify gem trust policy
  synonyms:
  - -P
  - --trust-policy
  args: !SimpleFlagArg
    name: POLICY
  optional: true
- !Flag
  description: Do not install any required dependent gems
  synonyms:
  - --ignore-dependencies
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Install additional development
  synonyms:
  - --development
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Don't attempt to upgrade gems already\nmeeting version requirement"
  synonyms:
  - --conservative
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Don't upgrade any dependencies that already\nmeet version requirements"
  synonyms:
  - --minimal-deps
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "[FILE]                Read from a gem dependencies API file and\n\
    install the listed gems"
  synonyms:
  - -g
  - --file
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Omit the named groups (comma separated)\nwhen installing from a gem\
    \ dependencies\nfile"
  synonyms:
  - --without
  args: !SimpleFlagArg
    name: GROUPS
  optional: true
- !Flag
  description: "Add the gem's full specification to\nspecifications/default and extract\
    \ only its bin"
  synonyms:
  - --default
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Rather than install the gems, indicate which would\nbe installed"
  synonyms:
  - --explain
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Restrict operations to the LOCAL domain
  synonyms:
  - -l
  - --local
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Restrict operations to the REMOTE domain
  synonyms:
  - -r
  - --remote
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Allow LOCAL and REMOTE operations
  synonyms:
  - -b
  - --both
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Threshold for switching to bulk\nsynchronization (default 1000)"
  synonyms:
  - -B
  - --bulk-threshold
  args: !SimpleFlagArg
    name: COUNT
  optional: true
- !Flag
  description: Clear the gem sources
  synonyms:
  - --clear-sources
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Append URL to list of remote gem sources
  synonyms:
  - -s
  - --source
  args: !SimpleFlagArg
    name: URL
  optional: true
- !Flag
  description: ', --[no-]http-proxy [URL]      Use HTTP proxy for remote operations'
  synonyms:
  - -p
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ', --[no-]verbose               Set the verbose level of output'
  synonyms:
  - -V
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Silence commands
  synonyms:
  - -q
  - --quiet
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Use this config file instead of default
  synonyms:
  - --config-file
  args: !SimpleFlagArg
    name: FILE
  optional: true
- !Flag
  description: Show stack backtrace on errors
  synonyms:
  - --backtrace
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Turn on Ruby debugging
  synonyms:
  - --debug
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: Get help on this command
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: "'>= 0' --document --no-force"
  synonyms:
  - --both
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "Usage: gem install GEMNAME [GEMNAME ...] [options] -- --build-flags [options]\n\
  \n  Options:\n        --platform PLATFORM          Specify the platform of gem to\
  \ install\n    -v, --version VERSION            Specify version of gem to install\n\
  \        --[no-]prerelease            Allow prerelease versions of a gem\n     \
  \                                to be installed. (Only for listed gems)\n\n\n \
  \ Deprecated Options:\n        --[no-]rdoc                  Generate RDoc for installed\
  \ gems\n                                     Use --document instead\n        --[no-]ri\
  \                    Generate ri data for installed gems.\n                    \
  \                 Use --document instead\n    -u, --[no-]update-sources        Update\
  \ local source cache\n\n\n  Install/Update Options:\n    -i, --install-dir DIR \
  \           Gem repository directory to get installed\n                        \
  \             gems\n    -n, --bindir DIR                 Directory where binary\
  \ files are\n                                     located\n        --[no-]document\
  \ [TYPES]      Generate documentation for installed gems\n                     \
  \                List the documentation types you wish to\n                    \
  \                 generate.  For example: rdoc,ri\n        --build-root DIR    \
  \         Temporary installation root. Useful for building\n                   \
  \                  packages. Do not use this when installing remote gems.\n    \
  \    --vendor                     Install gem into the vendor directory.\n     \
  \                                Only for use by gem repackagers.\n    -N, --no-document\
  \                Disable documentation generation\n    -E, --[no-]env-shebang  \
  \         Rewrite the shebang line on installed\n                              \
  \       scripts to use /usr/bin/env\n    -f, --[no-]force                 Force\
  \ gem to install, bypassing dependency\n                                     checks\n\
  \    -w, --[no-]wrappers              Use bin wrappers for executables\n       \
  \                              Not available on dosish platforms\n    -P, --trust-policy\
  \ POLICY        Specify gem trust policy\n        --ignore-dependencies        Do\
  \ not install any required dependent gems\n        --[no-]format-executable    \
  \ Make installed executable names match ruby.\n                                \
  \     If ruby is ruby18, foo_exec will be\n                                    \
  \ foo_exec18\n        --[no-]user-install          Install in user's home directory\
  \ instead\n                                     of GEM_HOME.\n        --development\
  \                Install additional development\n                              \
  \       dependencies\n        --development-all            Install development dependencies\
  \ for all\n                                     gems (including dev deps themselves)\n\
  \        --conservative               Don't attempt to upgrade gems already\n  \
  \                                   meeting version requirement\n        --minimal-deps\
  \               Don't upgrade any dependencies that already\n                  \
  \                   meet version requirements\n    -g, --file [FILE]           \
  \     Read from a gem dependencies API file and\n                              \
  \       install the listed gems\n        --without GROUPS             Omit the named\
  \ groups (comma separated)\n                                     when installing\
  \ from a gem dependencies\n                                     file\n        --default\
  \                    Add the gem's full specification to\n                     \
  \                specifications/default and extract only its bin\n        --explain\
  \                    Rather than install the gems, indicate which would\n      \
  \                               be installed\n        --[no-]lock              \
  \    Create a lock file (when used with -g/--file)\n        --[no-]suggestions \
  \          Suggest alternates when gems are not found\n\n\n  Local/Remote Options:\n\
  \    -l, --local                      Restrict operations to the LOCAL domain\n\
  \    -r, --remote                     Restrict operations to the REMOTE domain\n\
  \    -b, --both                       Allow LOCAL and REMOTE operations\n    -B,\
  \ --bulk-threshold COUNT       Threshold for switching to bulk\n               \
  \                      synchronization (default 1000)\n        --clear-sources \
  \             Clear the gem sources\n    -s, --source URL                 Append\
  \ URL to list of remote gem sources\n    -p, --[no-]http-proxy [URL]      Use HTTP\
  \ proxy for remote operations\n\n\n  Common Options:\n    -h, --help           \
  \            Get help on this command\n    -V, --[no-]verbose               Set\
  \ the verbose level of output\n    -q, --quiet                      Silence commands\n\
  \        --config-file FILE           Use this config file instead of default\n\
  \        --backtrace                  Show stack backtrace on errors\n        --debug\
  \                      Turn on Ruby debugging\n\n\n  Arguments:\n    GEMNAME   \
  \    name of gem to install\n\n  Summary:\n    Install a gem into the local repository\n\
  \n  Description:\n    The install command installs local or remote gem into a gem\
  \ repository.\n    \n    For gems with executables ruby installs a wrapper file\
  \ into the executable\n    directory by default.  This can be overridden with the\
  \ --no-wrappers option.\n    The wrapper allows you to choose among alternate gem\
  \ versions using\n    _version_.\n    \n    For example `rake _0.7.3_ --version`\
  \ will run rake version 0.7.3 if a newer\n    version is also installed.\n    \n\
  \    Gem Dependency Files\n    ====================\n    \n    RubyGems can install\
  \ a consistent set of gems across multiple environments\n    using `gem install\
  \ -g` when a gem dependencies file (gem.deps.rb, Gemfile or\n    Isolate) is present.\
  \  If no explicit file is given RubyGems attempts to find\n    one in the current\
  \ directory.\n    \n    When the RUBYGEMS_GEMDEPS environment variable is set to\
  \ a gem dependencies\n    file the gems from that file will be activated at startup\
  \ time.  Set it to a\n    specific filename or to \"-\" to have RubyGems automatically\
  \ discover the gem\n    dependencies file by walking up from the current directory.\n\
  \    \n    NOTE: Enabling automatic discovery on multiuser systems can lead to\n\
  \    execution of arbitrary code when used from directories outside your control.\n\
  \    \n    Extension Install Failures\n    ==========================\n    \n  \
  \  If an extension fails to compile during gem installation the gem\n    specification\
  \ is not written out, but the gem remains unpacked in the\n    repository.  You\
  \ may need to specify the path to the library's headers and\n    libraries to continue.\
  \  You can do this by adding a -- between RubyGems'\n    options and the extension's\
  \ build options:\n    \n      $ gem install some_extension_gem\n      [build fails]\n\
  \      Gem files will remain installed in \\\n      /path/to/gems/some_extension_gem-1.0\
  \ for inspection.\n      Results logged to /path/to/gems/some_extension_gem-1.0/gem_make.out\n\
  \      $ gem install some_extension_gem -- --with-extension-lib=/path/to/lib\n \
  \     [build succeeds]\n      $ gem list some_extension_gem\n    \n      *** LOCAL\
  \ GEMS ***\n    \n      some_extension_gem (1.0)\n      $\n    \n    If you correct\
  \ the compilation errors by editing the gem files you will need\n    to write the\
  \ specification by hand.  For example:\n    \n      $ gem install some_extension_gem\n\
  \      [build fails]\n      Gem files will remain installed in \\\n      /path/to/gems/some_extension_gem-1.0\
  \ for inspection.\n      Results logged to /path/to/gems/some_extension_gem-1.0/gem_make.out\n\
  \      $ [cd /path/to/gems/some_extension_gem-1.0]\n      $ [edit files or what-have-you\
  \ and run make]\n      $ gem spec ../../cache/some_extension_gem-1.0.gem --ruby\
  \ > \\\n                 ../../specifications/some_extension_gem-1.0.gemspec\n \
  \     $ gem list some_extension_gem\n    \n      *** LOCAL GEMS ***\n    \n    \
  \  some_extension_gem (1.0)\n      $\n\n  Defaults:\n    --both --version '>= 0'\
  \ --document --no-force\n    --install-dir /usr/local/lib/ruby/gems/2.2.0 --lock\n"
generated_using:
- --help
