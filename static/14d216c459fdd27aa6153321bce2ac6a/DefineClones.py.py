from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Array, String, File, Boolean, Int, Float

Defineclones_Py_V0_1_0 = CommandToolBuilder(tool="DefineClones.py", base_command=["DefineClones.py"], inputs=[ToolInput(tag="in_list_tab_defaultnone", input_type=Array(t=String(), optional=True), prefix="-d", doc=InputDocumentation(doc="A list of tab delimited database files. (default:\nNone)")), ToolInput(tag="in_explicit_output_file", input_type=Array(t=String(), optional=True), prefix="-o", doc=InputDocumentation(doc="Explicit output file name. Note, this argument cannot\nbe used with the --failed, --outdir, or --outname\narguments. If unspecified, then the output filename\nwill be based on the input filename(s). (default:\nNone)")), ToolInput(tag="in_outdir", input_type=File(optional=True), prefix="--outdir", doc=InputDocumentation(doc="Specify to changes the output directory to the\nlocation specified. The input file directory is used\nif this is not specified. (default: None)")), ToolInput(tag="in_out_name", input_type=File(optional=True), prefix="--outname", doc=InputDocumentation(doc="Changes the prefix of the successfully processed\noutput file to the string specified. May not be\nspecified with multiple input files. (default: None)")), ToolInput(tag="in_log", input_type=File(optional=True), prefix="--log", doc=InputDocumentation(doc="Specify to write verbose logging to a file. May not be\nspecified with multiple input files. (default: None)")), ToolInput(tag="in_failed", input_type=Boolean(optional=True), prefix="--failed", doc=InputDocumentation(doc="If specified create files containing records that fail\nprocessing. (default: False)")), ToolInput(tag="in_format", input_type=String(optional=True), prefix="--format", doc=InputDocumentation(doc="Specify input and output format. (default: airr)")), ToolInput(tag="in_nproc", input_type=Int(optional=True), prefix="--nproc", doc=InputDocumentation(doc="The number of simultaneous computational processes to\nexecute (CPU cores to utilized). (default: 8)")), ToolInput(tag="in_sf", input_type=String(optional=True), prefix="--sf", doc=InputDocumentation(doc="Field to be used to calculate distance between\nrecords. Defaults to junction (airr) or JUNCTION\n(changeo). (default: None)")), ToolInput(tag="in_vf", input_type=String(optional=True), prefix="--vf", doc=InputDocumentation(doc="Field containing the germline V segment call. Defaults\nto v_call (airr) or V_CALL (changeo). (default: None)")), ToolInput(tag="in_jf", input_type=String(optional=True), prefix="--jf", doc=InputDocumentation(doc="Field containing the germline J segment call. Defaults\nto j_call (airr) or J_CALL (changeo). (default: None)")), ToolInput(tag="in_gf", input_type=Array(t=String(), optional=True), prefix="--gf", doc=InputDocumentation(doc="Additional fields to use for grouping clones aside\nfrom V, J and junction length. (default: None)")), ToolInput(tag="in_mode", input_type=String(optional=True), prefix="--mode", doc=InputDocumentation(doc="Specifies whether to use the V(D)J allele or gene for\ninitial grouping. (default: gene)")), ToolInput(tag="in_act", input_type=String(optional=True), prefix="--act", doc=InputDocumentation(doc="Specifies how to handle multiple V(D)J assignments for\ninitial grouping. The 'first' action will use only the\nfirst gene listed. The 'set' action will use all gene\nassignments and construct a larger gene grouping\ncomposed of any sequences sharing an assignment or\nlinked to another sequence by a common assignment\n(similar to single-linkage). (default: set)")), ToolInput(tag="in_model", input_type=String(optional=True), prefix="--model", doc=InputDocumentation(doc="Specifies which substitution model to use for\ncalculating distance between sequences. The 'ham'\nmodel is nucleotide Hamming distance and 'aa' is amino\nacid Hamming distance. The 'hh_s1f' and 'hh_s5f'\nmodels are human specific single nucleotide and 5-mer\ncontent models, respectively, from Yaari et al, 2013.\nThe 'mk_rs1nf' and 'mk_rs5nf' models are mouse\nspecific single nucleotide and 5-mer content models,\nrespectively, from Cui et al, 2016. The 'm1n_compat'\nand 'hs1f_compat' models are deprecated models\nprovided backwards compatibility with the 'm1n' and\n'hs1f' models in Change-O v0.3.3 and SHazaM v0.1.4.\nBoth 5-mer models should be considered experimental.\n(default: ham)")), ToolInput(tag="in_dist", input_type=Float(optional=True), prefix="--dist", doc=InputDocumentation(doc="The distance threshold for clonal grouping (default:\n0.0)")), ToolInput(tag="in_norm", input_type=String(optional=True), prefix="--norm", doc=InputDocumentation(doc="Specifies how to normalize distances. One of none (do\nnot normalize), len (normalize by length), or mut\n(normalize by number of mutations between sequences).\n(default: len)")), ToolInput(tag="in_sym", input_type=String(optional=True), prefix="--sym", doc=InputDocumentation(doc="Specifies how to combine asymmetric distances. One of\navg (average of A->B and B->A) or min (minimum of A->B\nand B->A). (default: avg)")), ToolInput(tag="in_link", input_type=String(optional=True), prefix="--link", doc=InputDocumentation(doc="Type of linkage to use for hierarchical clustering.\n(default: single)")), ToolInput(tag="in_max_miss", input_type=Int(optional=True), prefix="--maxmiss", doc=InputDocumentation(doc="The maximum number of non-ACGT characters (gaps or Ns)\nto permit in the junction sequence before excluding\nthe record from clonal assignment. Note, under single\nlinkage non-informative positions can create\nartifactual links between unrelated sequences. Use\nwith caution. (default: 0)")), ToolInput(tag="in_clone_pass", input_type=String(), position=0, doc=InputDocumentation(doc="database with assigned clonal group numbers.")), ToolInput(tag="in_clone_fail", input_type=String(), position=1, doc=InputDocumentation(doc="database with records failing clonal grouping."))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Defineclones_Py_V0_1_0().translate("wdl", allow_empty_container=True)

