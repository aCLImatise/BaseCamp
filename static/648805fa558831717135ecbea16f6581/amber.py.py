from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Int, Directory, Boolean

Amber_Py_V0_1_0 = CommandToolBuilder(tool="amber.py", base_command=["amber.py"], inputs=[ToolInput(tag="in_gold_standard_file", input_type=File(optional=True), prefix="--gold_standard_file", doc=InputDocumentation(doc="Gold standard - ground truth - file")), ToolInput(tag="in_labels", input_type=String(optional=True), prefix="--labels", doc=InputDocumentation(doc="Comma-separated binning names")), ToolInput(tag="in_filter", input_type=Int(optional=True), prefix="--filter", doc=InputDocumentation(doc="Filter out [FILTER]% smallest genome bins (default: 0)")), ToolInput(tag="in_min_length", input_type=Int(optional=True), prefix="--min_length", doc=InputDocumentation(doc="Minimum length of sequences")), ToolInput(tag="in_output_dir", input_type=Directory(optional=True), prefix="--output_dir", doc=InputDocumentation(doc="Directory to write the results to")), ToolInput(tag="in_stdout", input_type=Boolean(optional=True), prefix="--stdout", doc=InputDocumentation(doc="Print summary to stdout")), ToolInput(tag="in_desc", input_type=String(optional=True), prefix="--desc", doc=InputDocumentation(doc="Description for HTML page")), ToolInput(tag="in_colors", input_type=String(optional=True), prefix="--colors", doc=InputDocumentation(doc="Color indices")), ToolInput(tag="in_silent", input_type=Boolean(optional=True), prefix="--silent", doc=InputDocumentation(doc="Silent mode")), ToolInput(tag="in_min_completeness", input_type=Int(optional=True), prefix="--min_completeness", doc=InputDocumentation(doc="Comma-separated list of min. completeness thresholds\n(default %: 50,70,90)")), ToolInput(tag="in_max_contamination", input_type=Int(optional=True), prefix="--max_contamination", doc=InputDocumentation(doc="Comma-separated list of max. contamination thresholds\n(default %: 10,5)")), ToolInput(tag="in_remove_genomes", input_type=File(optional=True), prefix="--remove_genomes", doc=InputDocumentation(doc="File with list of genomes to be removed")), ToolInput(tag="in_keyword", input_type=File(optional=True), prefix="--keyword", doc=InputDocumentation(doc="Keyword in the second column of file with list of\ngenomes to be removed (no keyword=remove all genomes\nin list)")), ToolInput(tag="in_genome_coverage", input_type=String(optional=True), prefix="--genome_coverage", doc=InputDocumentation(doc="genome coverages")), ToolInput(tag="in_ncbi_nodes_file", input_type=File(optional=True), prefix="--ncbi_nodes_file", doc=InputDocumentation(doc="NCBI nodes file")), ToolInput(tag="in_ncbi_names_file", input_type=File(optional=True), prefix="--ncbi_names_file", doc=InputDocumentation(doc="NCBI names file")), ToolInput(tag="in_ncbi_merged_file", input_type=File(optional=True), prefix="--ncbi_merged_file", doc=InputDocumentation(doc="NCBI merged file\n")), ToolInput(tag="in_bin_files", input_type=String(), position=0, doc=InputDocumentation(doc="Binning files"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Amber_Py_V0_1_0().translate("wdl", allow_empty_container=True)

