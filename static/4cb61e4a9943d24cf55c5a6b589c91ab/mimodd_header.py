from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean, Array, String

Mimodd_Header_V0_1_0 = CommandToolBuilder(tool="mimodd_header", base_command=["mimodd", "header"], inputs=[ToolInput(tag="in_ofile", input_type=File(optional=True), prefix="--ofile", doc=InputDocumentation(doc="redirect the output to the specified file (default:\nstdout)")), ToolInput(tag="in_relaxed", input_type=Boolean(optional=True), prefix="--relaxed", doc=InputDocumentation(doc="do not enforce a sample name to be specified for every\nread group")), ToolInput(tag="in_rg_id", input_type=Array(t=String(), optional=True), prefix="--rg-id", doc=InputDocumentation(doc="one or more unique read group identifiers")), ToolInput(tag="in_rg_sm", input_type=Array(t=String(), optional=True), prefix="--rg-sm", doc=InputDocumentation(doc="one sample name per read group identifier")), ToolInput(tag="in_rg_cn", input_type=Array(t=String(), optional=True), prefix="--rg-cn", doc=InputDocumentation(doc="one sequencing center name per read group")), ToolInput(tag="in_rg_ds", input_type=Array(t=String(), optional=True), prefix="--rg-ds", doc=InputDocumentation(doc="one description line per read group")), ToolInput(tag="in_rg_dt", input_type=Array(t=String(), optional=True), prefix="--rg-dt", doc=InputDocumentation(doc="date runs were produced (YYYY-MM-DD); one date per\nread group")), ToolInput(tag="in_rg_lb", input_type=Array(t=String(), optional=True), prefix="--rg-lb", doc=InputDocumentation(doc="library identifier for each read group")), ToolInput(tag="in_rg_pl", input_type=Array(t=String(), optional=True), prefix="--rg-pl", doc=InputDocumentation(doc="sequencing platform/technology used to produce each\nread group")), ToolInput(tag="in_rg_pi", input_type=Array(t=String(), optional=True), prefix="--rg-pi", doc=InputDocumentation(doc="predicted median insert size for the reads of each\nread group")), ToolInput(tag="in_rg_pu", input_type=Array(t=String(), optional=True), prefix="--rg-pu", doc=InputDocumentation(doc="platform unit, e.g., flowcell barcode or slide\nidentifier, for each read group")), ToolInput(tag="in_co", input_type=Boolean(optional=True), prefix="--co", doc=InputDocumentation(doc="[COMMENT [COMMENT ...]]\nan arbitrary number of one-line comment strings\n")), ToolInput(tag="in_header", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_ofile", output_type=File(optional=True), selector=InputSelector(input_to_select="in_ofile", type_hint=File()), doc=OutputDocumentation(doc="redirect the output to the specified file (default:\nstdout)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Mimodd_Header_V0_1_0().translate("wdl", allow_empty_container=True)

