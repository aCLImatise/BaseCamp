!Command
command:
- run_pipeline.py
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -a
  - --assembly
  description: Path to initial assembly
  args: !SimpleFlagArg
    name: ASSEMBLY
- !Flag
  optional: true
  synonyms:
  - -l
  - --length
  description: Length of contigs at start
  args: !SimpleFlagArg
    name: LENGTH
- !Flag
  optional: true
  synonyms:
  - -b
  - --bed
  description: Bed file of alignments sorted by read names
  args: !SimpleFlagArg
    name: BED
- !Flag
  optional: true
  synonyms:
  - -o
  - --output
  description: Output directory to put results
  args: !SimpleFlagArg
    name: OUTPUT
- !Flag
  optional: true
  synonyms:
  - -c
  - --cutoff
  description: Minimum contig length to scaffold, default=1000
  args: !SimpleFlagArg
    name: CUTOFF
- !Flag
  optional: true
  synonyms:
  - -g
  - --gfa
  description: GFA file for assembly
  args: !SimpleFlagArg
    name: GFA
- !Flag
  optional: true
  synonyms:
  - -e
  - --enzyme
  description: Restriction Enzyme used for experiment
  args: !SimpleFlagArg
    name: ENZYME
- !Flag
  optional: true
  synonyms:
  - -i
  - --iter
  description: Number of iterations to run, default = 3
  args: !SimpleFlagArg
    name: ITER
- !Flag
  optional: true
  synonyms:
  - -x
  - --dup
  description: File containing duplicated contig information
  args: !SimpleFlagArg
    name: DUP
- !Flag
  optional: true
  synonyms:
  - -s
  - --exp
  description: Expected Genome size of the assembled genome
  args: !SimpleFlagArg
    name: EXP
- !Flag
  optional: true
  synonyms:
  - -m
  - --clean
  description: "Set this option to \"yes\" if you want to find\nmisassemblies in input\
    \ assembly"
  args: !SimpleFlagArg
    name: CLEAN
- !Flag
  optional: true
  synonyms:
  - -f
  - --filter
  description: Filter bed file for contigs present in the assembly
  args: !SimpleFlagArg
    name: FILTER
- !Flag
  optional: true
  synonyms:
  - -p
  - --prnt
  description: "Set this option to \"yes\" if you want to output the\nscaffolds sequence\
    \ and agp file for each iteration\n"
  args: !SimpleFlagArg
    name: PRNT
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "usage: run_pipeline.py [-h] -a ASSEMBLY -l LENGTH -b BED [-o OUTPUT]\n\
  \                       [-c CUTOFF] [-g GFA] [-e ENZYME] [-i ITER] [-x DUP]\n  \
  \                     [-s EXP] [-m CLEAN] [-f FILTER] [-p PRNT]\n\nSALSA Iterative\
  \ Pipeline\n\noptional arguments:\n  -h, --help            show this help message\
  \ and exit\n  -a ASSEMBLY, --assembly ASSEMBLY\n                        Path to\
  \ initial assembly\n  -l LENGTH, --length LENGTH\n                        Length\
  \ of contigs at start\n  -b BED, --bed BED     Bed file of alignments sorted by\
  \ read names\n  -o OUTPUT, --output OUTPUT\n                        Output directory\
  \ to put results\n  -c CUTOFF, --cutoff CUTOFF\n                        Minimum\
  \ contig length to scaffold, default=1000\n  -g GFA, --gfa GFA     GFA file for\
  \ assembly\n  -e ENZYME, --enzyme ENZYME\n                        Restriction Enzyme\
  \ used for experiment\n  -i ITER, --iter ITER  Number of iterations to run, default\
  \ = 3\n  -x DUP, --dup DUP     File containing duplicated contig information\n \
  \ -s EXP, --exp EXP     Expected Genome size of the assembled genome\n  -m CLEAN,\
  \ --clean CLEAN\n                        Set this option to \"yes\" if you want\
  \ to find\n                        misassemblies in input assembly\n  -f FILTER,\
  \ --filter FILTER\n                        Filter bed file for contigs present in\
  \ the assembly\n  -p PRNT, --prnt PRNT  Set this option to \"yes\" if you want to\
  \ output the\n                        scaffolds sequence and agp file for each iteration\n"
generated_using:
- --help
docker_image: quay.io/biocontainers/salsa2:2.2--py27h78a066a_0
