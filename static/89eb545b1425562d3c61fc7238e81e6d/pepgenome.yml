!Command
command:
- pepgenome
positional:
- !Positional
  optional: false
  position: 0
  name: Arguments
  description: ''
named:
- !Flag
  optional: true
  synonyms:
  - -chr
  description: 'Export chr prefix Allowed 0, 1  (default: 0)'
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - -fasta
  description: "Filepath for file containing protein sequences in\nFASTA format"
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - -format
  description: "Select the output formats from gtf, gct, bed,\nptmbed, all or combinations\
    \ thereof separated by\n',' (default all)"
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - -genome
  description: "Filepath for file containing genome sequence in\nFASTA format used\
    \ to extract chromosome names and\norder and differenciate between assembly and\n\
    scaffolds. If not set chromosome and scaffold names\nand order is extracted from\
    \ GTF input."
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - -gtf
  description: "Filepath for file containing genome annotation in\nGTF format"
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - -in
  description: "Comma(,) separated file paths for files containing\npeptide identifications\
    \ (Contents of the file can\ntab separated format. i.e., File format: four\ncolumns:\
    \ SampleName\nPeptideSequence\nPSMs\nQuant; or mzTab, and mzIdentML)"
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - -inf
  description: "Format of the input file (mztab, mzid, or tsv).\n(default tsv)"
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - -inm
  description: "Compute the kmer algorithm in memory or using\ndatabase algorithm\
    \ (default 0, database 1)"
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - -merge
  description: "Set 'true' to merge mappings from all files from\ninput (default 'false')"
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - -mm
  description: 'Allowed mismatches (0, 1 or 2; default: 0)'
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - -mmmode
  description: "Mismatch mode (true or false): if true mismatching\nwith two mismatches\
    \ will only allow 1 mismatch\nevery kmersize (default: 5) positions. (default:\n\
    false)"
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - -source
  description: "Please give a source name which will be used in the\nsecond column\
    \ in the output gtf file (default:\nPoGo)"
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - -spark_master
  description: "Spark master String. i.e., to run locally use:\nlocal[*]\n"
  args: !SimpleFlagArg
    name: arg
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  description: Print this help & exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "[09-Sep-2020 22:36:33 - INFO] \" *** Error in parsing the input arguments.\
  \ Please check the arguments ***\" (org.bigbio.pgatk.pepgenome.PepGenomeTool:124)\n\
  usage: Arguments: -fasta TRANSL -gtf ANNO -in *.tsv[,*.tsv] [-format OUTF]\n   \
  \               [-merge TRUE/FALSE] [-source SRC] [-mm NUM] [-mmmode\n         \
  \         TRUE/FALSE] [-species SPECIES] [-chr 0/1]\n -chr <arg>            Export\
  \ chr prefix Allowed 0, 1  (default: 0)\n -fasta <arg>          Filepath for file\
  \ containing protein sequences in\n                       FASTA format\n -format\
  \ <arg>         Select the output formats from gtf, gct, bed,\n                \
  \       ptmbed, all or combinations thereof separated by\n                     \
  \  ',' (default all)\n -genome <arg>         Filepath for file containing genome\
  \ sequence in\n                       FASTA format used to extract chromosome names\
  \ and\n                       order and differenciate between assembly and\n   \
  \                    scaffolds. If not set chromosome and scaffold names\n     \
  \                  and order is extracted from GTF input.\n -gtf <arg>         \
  \   Filepath for file containing genome annotation in\n                       GTF\
  \ format\n -h                    Print this help & exit\n -in <arg>            \
  \ Comma(,) separated file paths for files containing\n                       peptide\
  \ identifications (Contents of the file can\n                       tab separated\
  \ format. i.e., File format: four\n                       columns: SampleName\n\
  \                       PeptideSequence\n                       PSMs\n         \
  \              Quant; or mzTab, and mzIdentML)\n -inf <arg>            Format of\
  \ the input file (mztab, mzid, or tsv).\n                       (default tsv)\n\
  \ -inm <arg>            Compute the kmer algorithm in memory or using\n        \
  \               database algorithm (default 0, database 1)\n -merge <arg>      \
  \    Set 'true' to merge mappings from all files from\n                       input\
  \ (default 'false')\n -mm <arg>             Allowed mismatches (0, 1 or 2; default:\
  \ 0)\n -mmmode <arg>         Mismatch mode (true or false): if true mismatching\n\
  \                       with two mismatches will only allow 1 mismatch\n       \
  \                every kmersize (default: 5) positions. (default:\n            \
  \           false)\n -source <arg>         Please give a source name which will\
  \ be used in the\n                       second column in the output gtf file (default:\n\
  \                       PoGo)\n -spark_master <arg>   Spark master String. i.e.,\
  \ to run locally use:\n                       local[*]\n"
generated_using:
- --help
docker_image:
