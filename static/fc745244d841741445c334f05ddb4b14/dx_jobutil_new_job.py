from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Boolean, Int

Dx_Jobutil_New_Job_V0_1_0 = CommandToolBuilder(tool="dx_jobutil_new_job", base_command=["dx-jobutil-new-job"], inputs=[ToolInput(tag="in_input", input_type=String(optional=True), prefix="--input", doc=InputDocumentation(doc="An input to be added using '<input\nname>[:<class>]=<input value>' (provide 'class' if\nthere is no input spec; it can be any job IO class,\ne.g. 'string', 'array:string', or 'array'; if 'class'\nis 'array' or not specified, the value will be\nattempted to be parsed as JSON and is otherwise\ntreated as a string)")), ToolInput(tag="in_input_json", input_type=String(optional=True), prefix="--input-json", doc=InputDocumentation(doc="The full input JSON (keys=input field names,\nvalues=input field values)")), ToolInput(tag="in_input_json_file", input_type=File(optional=True), prefix="--input-json-file", doc=InputDocumentation(doc="Load input JSON from FILENAME ('-' to use stdin)")), ToolInput(tag="in_instance_type", input_type=String(optional=True), prefix="--instance-type", doc=InputDocumentation(doc="Specify instance type(s) for jobs this executable will\nrun; see --instance-type-help for more details")), ToolInput(tag="in_instance_type_help", input_type=Boolean(optional=True), prefix="--instance-type-help", doc=InputDocumentation(doc="Print help for specifying instance types")), ToolInput(tag="in_extra_args", input_type=String(optional=True), prefix="--extra-args", doc=InputDocumentation(doc="Arguments (in JSON format) to pass to the underlying\nAPI method, overriding the default settings")), ToolInput(tag="in_property", input_type=Int(optional=True), prefix="--property", doc=InputDocumentation(doc="=VALUE  Key-value pair to add as a property; repeat as\nnecessary, e.g. '--property key1=val1 --property\nkey2=val2'")), ToolInput(tag="in_tag", input_type=Int(optional=True), prefix="--tag", doc=InputDocumentation(doc="Tag for the resulting execution; repeat as necessary,\ne.g. '--tag tag1 --tag tag2'")), ToolInput(tag="in_name", input_type=String(optional=True), prefix="--name", doc=InputDocumentation(doc="Name for the new job (default is the current job name,\nplus ':<function>')")), ToolInput(tag="in_depends_on", input_type=Boolean(optional=True), prefix="--depends-on", doc=InputDocumentation(doc="[JOB_OR_OBJECT_ID [JOB_OR_OBJECT_ID ...]]\nJob and/or data object IDs that must finish or close\nbefore the new job should be run. WARNING: For proper\nparsing, do not use this flag directly before the\n*function* parameter.\n"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Dx_Jobutil_New_Job_V0_1_0().translate("wdl", allow_empty_container=True)

