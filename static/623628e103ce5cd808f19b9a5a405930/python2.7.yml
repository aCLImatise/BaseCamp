!Command
command:
- python2.7
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -B
  description: ": don't write .py[co] files on import; also PYTHONDONTWRITEBYTECODE=x"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -c
  description: ': program passed in as string (terminates option list)'
  args: !SimpleFlagArg
    name: cmd
- !Flag
  optional: true
  synonyms:
  - -d
  description: ': debug output from parser; also PYTHONDEBUG=x'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -E
  description: ': ignore PYTHON* environment variables (such as PYTHONPATH)'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -i
  description: ": inspect interactively after running script; forces a prompt even\n\
    if stdin does not appear to be a terminal; also PYTHONINSPECT=x"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -m
  description: ': run library module as a script (terminates option list)'
  args: !SimpleFlagArg
    name: mod
- !Flag
  optional: true
  synonyms:
  - -O
  description: ': optimize generated bytecode slightly; also PYTHONOPTIMIZE=x'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -OO
  description: ': remove doc-strings in addition to the -O optimizations'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -R
  description: ": use a pseudo-random salt to make hash() values of various types\
    \ be\nunpredictable between separate invocations of the interpreter, as\na defense\
    \ against denial-of-service attacks"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -Q
  description: ': division options: -Qold (default), -Qwarn, -Qwarnall, -Qnew'
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - -s
  description: ": don't add user site directory to sys.path; also PYTHONNOUSERSITE"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -S
  description: ": don't imply 'import site' on initialization"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -t
  description: ': issue warnings about inconsistent tab usage (-tt: issue errors)'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -u
  description: ": unbuffered binary stdout and stderr; also PYTHONUNBUFFERED=x\nsee\
    \ man page for details on internal buffering relating to '-u'"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -v
  description: ": verbose (trace import statements); also PYTHONVERBOSE=x\ncan be\
    \ supplied multiple times to increase verbosity"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -V
  description: ': print the Python version number and exit (also --version)'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -W
  description: ": warning control; arg is action:message:category:module:lineno\n\
    also PYTHONWARNINGS=arg"
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - -x
  description: ': skip first line of source, allowing use of non-Unix forms of #!cmd'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - '-3'
  description: ': warn about Python 3.x incompatibilities that 2to3 cannot trivially
    fix'
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  description: ': print this help message and exit (also --help)'
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "usage: python2.7 [option] ... [-c cmd | -m mod | file | -] [arg] ...\n\
  Options and arguments (and corresponding environment variables):\n-B     : don't\
  \ write .py[co] files on import; also PYTHONDONTWRITEBYTECODE=x\n-c cmd : program\
  \ passed in as string (terminates option list)\n-d     : debug output from parser;\
  \ also PYTHONDEBUG=x\n-E     : ignore PYTHON* environment variables (such as PYTHONPATH)\n\
  -h     : print this help message and exit (also --help)\n-i     : inspect interactively\
  \ after running script; forces a prompt even\n         if stdin does not appear\
  \ to be a terminal; also PYTHONINSPECT=x\n-m mod : run library module as a script\
  \ (terminates option list)\n-O     : optimize generated bytecode slightly; also\
  \ PYTHONOPTIMIZE=x\n-OO    : remove doc-strings in addition to the -O optimizations\n\
  -R     : use a pseudo-random salt to make hash() values of various types be\n  \
  \       unpredictable between separate invocations of the interpreter, as\n    \
  \     a defense against denial-of-service attacks\n-Q arg : division options: -Qold\
  \ (default), -Qwarn, -Qwarnall, -Qnew\n-s     : don't add user site directory to\
  \ sys.path; also PYTHONNOUSERSITE\n-S     : don't imply 'import site' on initialization\n\
  -t     : issue warnings about inconsistent tab usage (-tt: issue errors)\n-u   \
  \  : unbuffered binary stdout and stderr; also PYTHONUNBUFFERED=x\n         see\
  \ man page for details on internal buffering relating to '-u'\n-v     : verbose\
  \ (trace import statements); also PYTHONVERBOSE=x\n         can be supplied multiple\
  \ times to increase verbosity\n-V     : print the Python version number and exit\
  \ (also --version)\n-W arg : warning control; arg is action:message:category:module:lineno\n\
  \         also PYTHONWARNINGS=arg\n-x     : skip first line of source, allowing\
  \ use of non-Unix forms of #!cmd\n-3     : warn about Python 3.x incompatibilities\
  \ that 2to3 cannot trivially fix\nfile   : program read from script file\n-    \
  \  : program read from stdin (default; interactive mode if a tty)\narg ...: arguments\
  \ passed to program in sys.argv[1:]\n\nOther environment variables:\nPYTHONSTARTUP:\
  \ file executed on interactive startup (no default)\nPYTHONPATH   : ':'-separated\
  \ list of directories prefixed to the\n               default module search path.\
  \  The result is sys.path.\nPYTHONHOME   : alternate <prefix> directory (or <prefix>:<exec_prefix>).\n\
  \               The default module search path uses <prefix>/pythonX.X.\nPYTHONCASEOK\
  \ : ignore case in 'import' statements (Windows).\nPYTHONIOENCODING: Encoding[:errors]\
  \ used for stdin/stdout/stderr.\nPYTHONHASHSEED: if this variable is set to 'random',\
  \ the effect is the same\n   as specifying the -R option: a random value is used\
  \ to seed the hashes of\n   str, bytes and datetime objects.  It can also be set\
  \ to an integer\n   in the range [0,4294967295] to get hash values with a predictable\
  \ seed.\n"
generated_using:
- --help
docker_image:
