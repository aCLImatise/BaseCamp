from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, File, Boolean

Simbac_V0_1_0 = CommandToolBuilder(tool="SimBac", base_command=["SimBac"], inputs=[ToolInput(tag="in_sets_number_isolates", input_type=Int(optional=True), prefix="-N", doc=InputDocumentation(doc="Sets the number of isolates (default is 100)")), ToolInput(tag="in_sets_value_theta", input_type=Int(optional=True), prefix="-T", doc=InputDocumentation(doc="Sets the value of theta, between 0 and 1 (default is 0.01))")), ToolInput(tag="in_sets_minimum_probability", input_type=Int(optional=True), prefix="-m", doc=InputDocumentation(doc="Sets the minimum probability of mutation in an interval of external recombination between 0 & 1 (default is 0)")), ToolInput(tag="in_sets_maximum_probability", input_type=Int(optional=True), prefix="-M", doc=InputDocumentation(doc="Sets the maximum probability of mutation in an interval of external recombination between 0 & 1 (default is 0)")), ToolInput(tag="in_sets_value_r", input_type=Int(optional=True), prefix="-R", doc=InputDocumentation(doc="Sets the value of R, the site-specific internal recombination rate (default is 0.01)")), ToolInput(tag="in_sets_rate_r", input_type=Int(optional=True), prefix="-r", doc=InputDocumentation(doc="Sets the rate of R external, the site-specific rate of external recombination (default is 0)")), ToolInput(tag="in_sets_value_delta", input_type=Int(optional=True), prefix="-D", doc=InputDocumentation(doc="Sets the value of delta (default is 500)")), ToolInput(tag="in_sets_average_length", input_type=Int(optional=True), prefix="-e", doc=InputDocumentation(doc="Sets the average length of external recombinant interval (default is 500)")), ToolInput(tag="in_num_sets_number", input_type=Int(optional=True), prefix="-B", doc=InputDocumentation(doc=",...,NUM Sets the number and length of the fragments\n(default is 10000)")), ToolInput(tag="in_sets_gap_fragmentdefault", input_type=Int(optional=True), prefix="-G", doc=InputDocumentation(doc="Sets the gap between each fragment(default is 0)")), ToolInput(tag="in_use_given_seed", input_type=Int(optional=True), prefix="-s", doc=InputDocumentation(doc="Use given seed to initiate random number generator")), ToolInput(tag="in_export_data_given", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="Export data to given file")), ToolInput(tag="in_export_clonal_genealogy", input_type=File(optional=True), prefix="-c", doc=InputDocumentation(doc="Export clonal genealogy to given file")), ToolInput(tag="in_export_local_trees", input_type=File(optional=True), prefix="-l", doc=InputDocumentation(doc="Export local trees to given file")), ToolInput(tag="in_write_log_file_internal", input_type=File(optional=True), prefix="-b", doc=InputDocumentation(doc="Write log file of internal recombinant break interval locations")), ToolInput(tag="in_write_log_file_external", input_type=File(optional=True), prefix="-f", doc=InputDocumentation(doc="Write log file of external recombinant break interval locations")), ToolInput(tag="in_write_log_file_taxa", input_type=File(optional=True), prefix="-g", doc=InputDocumentation(doc="Write log file of recombinant break interval locations and relevant taxa (Use only recommended for small ARGs)")), ToolInput(tag="in_export_dot_graph", input_type=File(optional=True), prefix="-d", doc=InputDocumentation(doc="Export DOT graph to given file")), ToolInput(tag="in_include_ancestral_material", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="Include ancestral material in the DOT graph"))], outputs=[], container="quay.io/biocontainers/simbac:0.1a--h9e03d57_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Simbac_V0_1_0().translate("wdl")

