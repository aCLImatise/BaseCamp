!Command
command:
- numfmt
positional:
- !Positional
  optional: false
  position: 0
  name: none
  description: no auto-scaling is done; suffixes will trigger an error
- !Positional
  optional: false
  position: 1
  name: auto
  description: "accept optional single/two letter suffix:\n1K = 1000,\n1Ki = 1024,\n\
    1M = 1000000,\n1Mi = 1048576,"
- !Positional
  optional: false
  position: 2
  name: si
  description: "accept optional single letter suffix:\n1K = 1000,\n1M = 1000000,\n\
    ..."
- !Positional
  optional: false
  position: 3
  name: iec
  description: "accept optional single letter suffix:\n1K = 1024,\n1M = 1048576,\n\
    ..."
- !Positional
  optional: false
  position: 4
  name: iec-i
  description: "accept optional two-letter suffix:\n1Ki = 1024,\n1Mi = 1048576,\n\
    ..."
- !Positional
  optional: false
  position: 0
  name: N-
  description: from N'th field, to end of line
- !Positional
  optional: false
  position: 1
  name: N-M
  description: from N'th to M'th field (inclusive)
named:
- !Flag
  optional: true
  synonyms:
  - --debug
  description: print warnings about invalid input
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -d
  - --delimiter
  description: use X instead of whitespace for field delimiter
  args: !SimpleFlagArg
    name: X
- !Flag
  optional: true
  synonyms:
  - --field
  description: "replace the numbers in these input fields (default=1)\nsee FIELDS\
    \ below"
  args: !SimpleFlagArg
    name: FIELDS
- !Flag
  optional: true
  synonyms:
  - --format
  description: "use printf style floating-point FORMAT;\nsee FORMAT below for details"
  args: !SimpleFlagArg
    name: FORMAT
- !Flag
  optional: true
  synonyms:
  - --from
  description: "auto-scale input numbers to UNITs; default is 'none';\nsee UNIT below"
  args: !SimpleFlagArg
    name: UNIT
- !Flag
  optional: true
  synonyms:
  - --from-unit
  description: specify the input unit size (instead of the default 1)
  args: !SimpleFlagArg
    name: N
- !Flag
  optional: true
  synonyms:
  - --grouping
  description: "use locale-defined grouping of digits, e.g. 1,000,000\n(which means\
    \ it has no effect in the C/POSIX locale)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --header
  description: "[=N]     print (without converting) the first N header lines;\nN defaults\
    \ to 1 if not specified"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --invalid
  description: "failure mode for invalid numbers: MODE can be:\nabort (default), fail,\
    \ warn, ignore"
  args: !SimpleFlagArg
    name: MODE
- !Flag
  optional: true
  synonyms:
  - --padding
  description: "pad the output to N characters; positive N will\nright-align; negative\
    \ N will left-align;\npadding is ignored if the output is wider than N;\nthe default\
    \ is to automatically pad if a whitespace\nis found"
  args: !SimpleFlagArg
    name: N
- !Flag
  optional: true
  synonyms:
  - --round
  description: "use METHOD for rounding when scaling; METHOD can be:\nup, down, from-zero\
    \ (default), towards-zero, nearest"
  args: !SimpleFlagArg
    name: METHOD
- !Flag
  optional: true
  synonyms:
  - --suffix
  description: "add SUFFIX to output numbers, and accept optional\nSUFFIX in input\
    \ numbers"
  args: !SimpleFlagArg
    name: SUFFIX
- !Flag
  optional: true
  synonyms:
  - --to
  description: auto-scale output numbers to UNITs; see UNIT below
  args: !SimpleFlagArg
    name: UNIT
- !Flag
  optional: true
  synonyms:
  - --to-unit
  description: the output unit size (instead of the default 1)
  args: !SimpleFlagArg
    name: N
- !Flag
  optional: true
  synonyms:
  - -z
  - --zero-terminated
  description: line delimiter is NUL, not newline
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -M
  description: from first to M'th field (inclusive)
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - --help
  description: display this help and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - --version
  description: output version information and exit
  args: !EmptyFlagArg {}
help_text: "Usage: numfmt [OPTION]... [NUMBER]...\nReformat NUMBER(s), or the numbers\
  \ from standard input if none are specified.\n\nMandatory arguments to long options\
  \ are mandatory for short options too.\n      --debug          print warnings about\
  \ invalid input\n  -d, --delimiter=X    use X instead of whitespace for field delimiter\n\
  \      --field=FIELDS   replace the numbers in these input fields (default=1)\n\
  \                         see FIELDS below\n      --format=FORMAT  use printf style\
  \ floating-point FORMAT;\n                         see FORMAT below for details\n\
  \      --from=UNIT      auto-scale input numbers to UNITs; default is 'none';\n\
  \                         see UNIT below\n      --from-unit=N    specify the input\
  \ unit size (instead of the default 1)\n      --grouping       use locale-defined\
  \ grouping of digits, e.g. 1,000,000\n                         (which means it has\
  \ no effect in the C/POSIX locale)\n      --header[=N]     print (without converting)\
  \ the first N header lines;\n                         N defaults to 1 if not specified\n\
  \      --invalid=MODE   failure mode for invalid numbers: MODE can be:\n       \
  \                  abort (default), fail, warn, ignore\n      --padding=N      pad\
  \ the output to N characters; positive N will\n                         right-align;\
  \ negative N will left-align;\n                         padding is ignored if the\
  \ output is wider than N;\n                         the default is to automatically\
  \ pad if a whitespace\n                         is found\n      --round=METHOD \
  \  use METHOD for rounding when scaling; METHOD can be:\n                      \
  \   up, down, from-zero (default), towards-zero, nearest\n      --suffix=SUFFIX\
  \  add SUFFIX to output numbers, and accept optional\n                         SUFFIX\
  \ in input numbers\n      --to=UNIT        auto-scale output numbers to UNITs; see\
  \ UNIT below\n      --to-unit=N      the output unit size (instead of the default\
  \ 1)\n  -z, --zero-terminated    line delimiter is NUL, not newline\n      --help\
  \     display this help and exit\n      --version  output version information and\
  \ exit\n\nUNIT options:\n  none       no auto-scaling is done; suffixes will trigger\
  \ an error\n  auto       accept optional single/two letter suffix:\n           \
  \    1K = 1000,\n               1Ki = 1024,\n               1M = 1000000,\n    \
  \           1Mi = 1048576,\n  si         accept optional single letter suffix:\n\
  \               1K = 1000,\n               1M = 1000000,\n               ...\n \
  \ iec        accept optional single letter suffix:\n               1K = 1024,\n\
  \               1M = 1048576,\n               ...\n  iec-i      accept optional\
  \ two-letter suffix:\n               1Ki = 1024,\n               1Mi = 1048576,\n\
  \               ...\n\nFIELDS supports cut(1) style field ranges:\n  N    N'th field,\
  \ counted from 1\n  N-   from N'th field, to end of line\n  N-M  from N'th to M'th\
  \ field (inclusive)\n  -M   from first to M'th field (inclusive)\n  -    all fields\n\
  Multiple fields/ranges can be separated with commas\n\nFORMAT must be suitable for\
  \ printing one floating-point argument '%f'.\nOptional quote (%'f) will enable --grouping\
  \ (if supported by current locale).\nOptional width value (%10f) will pad output.\
  \ Optional zero (%010f) width\nwill zero pad the number. Optional negative values\
  \ (%-10f) will left align.\nOptional precision (%.1f) will override the input determined\
  \ precision.\n\nExit status is 0 if all input numbers were successfully converted.\n\
  By default, numfmt will stop at the first conversion error with exit status 2.\n\
  With --invalid='fail' a warning is printed for each conversion error\nand the exit\
  \ status is 2.  With --invalid='warn' each conversion error is\ndiagnosed, but the\
  \ exit status is 0.  With --invalid='ignore' conversion\nerrors are not diagnosed\
  \ and the exit status is 0.\n\nExamples:\n  $ numfmt --to=si 1000\n            ->\
  \ \"1.0K\"\n  $ numfmt --to=iec 2048\n           -> \"2.0K\"\n  $ numfmt --to=iec-i\
  \ 4096\n           -> \"4.0Ki\"\n  $ echo 1K | numfmt --from=si\n           -> \"\
  1000\"\n  $ echo 1K | numfmt --from=iec\n           -> \"1024\"\n  $ df -B1 | numfmt\
  \ --header --field 2-4 --to=si\n  $ ls -l  | numfmt --header --field 5 --to=iec\n\
  \  $ ls -lh | numfmt --header --field 5 --from=iec --padding=10\n  $ ls -lh | numfmt\
  \ --header --field 5 --from=iec --format %10f\n\nGNU coreutils online help: <https://www.gnu.org/software/coreutils/>\n\
  Report any translation bugs to <https://translationproject.org/team/>\nFull documentation\
  \ <https://www.gnu.org/software/coreutils/numfmt>\nor available locally via: info\
  \ '(coreutils) numfmt invocation'\n"
generated_using:
- --help
docker_image:
