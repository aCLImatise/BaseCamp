from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Array, File, Boolean

Augur_Export_V2_V0_1_0 = CommandToolBuilder(tool="augur_export_v2", base_command=["augur", "export", "v2"], inputs=[ToolInput(tag="in_tree", input_type=String(optional=True), prefix="--tree", doc=InputDocumentation(doc="Phylogenetic tree, usually output from `augur refine`")), ToolInput(tag="in_node_data", input_type=Array(t=String(), optional=True), prefix="--node-data", doc=InputDocumentation(doc="JSON files containing metadata for nodes in the tree")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="Ouput file (typically for visualisation in auspice)")), ToolInput(tag="in_auspice_config", input_type=File(optional=True), prefix="--auspice-config", doc=InputDocumentation(doc="Auspice configuration file")), ToolInput(tag="in_title", input_type=String(optional=True), prefix="--title", doc=InputDocumentation(doc="Title to be displayed by auspice")), ToolInput(tag="in_maintainers", input_type=Array(t=String(), optional=True), prefix="--maintainers", doc=InputDocumentation(doc="Analysis maintained by, in format 'Name <URL>' 'Name2\n<URL>', ...")), ToolInput(tag="in_build_url", input_type=String(optional=True), prefix="--build-url", doc=InputDocumentation(doc="Build URL/repository to be displayed by Auspice")), ToolInput(tag="in_description", input_type=File(optional=True), prefix="--description", doc=InputDocumentation(doc="Markdown file with description of build and/or\nacknowledgements to be displayed by Auspice")), ToolInput(tag="in_geo_resolutions", input_type=Array(t=String(), optional=True), prefix="--geo-resolutions", doc=InputDocumentation(doc="Geographic traits to be displayed on map")), ToolInput(tag="in_color_by_metadata", input_type=Array(t=String(), optional=True), prefix="--color-by-metadata", doc=InputDocumentation(doc="Metadata columns to include as coloring options")), ToolInput(tag="in_panels", input_type=Array(t=String(), optional=True), prefix="--panels", doc=InputDocumentation(doc="Restrict panel display in auspice. Options are tree,\nmap, entropy, frequencies. Ignore this option to\ndisplay all available panels.")), ToolInput(tag="in_metadata", input_type=String(optional=True), prefix="--metadata", doc=InputDocumentation(doc="Additional metadata for strains in the tree")), ToolInput(tag="in_colors", input_type=String(optional=True), prefix="--colors", doc=InputDocumentation(doc="Custom color definitions")), ToolInput(tag="in_lat_longs", input_type=String(optional=True), prefix="--lat-longs", doc=InputDocumentation(doc="Latitudes and longitudes for geography traits\n(overrides built in mappings)")), ToolInput(tag="in_mini_fy_json", input_type=Boolean(optional=True), prefix="--minify-json", doc=InputDocumentation(doc="export JSONs without indentation or line returns")), ToolInput(tag="in_include_root_sequence", input_type=File(optional=True), prefix="--include-root-sequence", doc=InputDocumentation(doc="Export an additional JSON containing the root sequence\n(reference sequence for vcf) used to identify\nmutations. The filename will follow the pattern of\n<OUTPUT>_root-sequence.json for a main auspice JSON of\n<OUTPUT>.json\n"))], outputs=[ToolOutput(tag="out_include_root_sequence", output_type=File(optional=True), selector=InputSelector(input_to_select="in_include_root_sequence", type_hint=File()), doc=OutputDocumentation(doc="Export an additional JSON containing the root sequence\n(reference sequence for vcf) used to identify\nmutations. The filename will follow the pattern of\n<OUTPUT>_root-sequence.json for a main auspice JSON of\n<OUTPUT>.json\n"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Augur_Export_V2_V0_1_0().translate("wdl", allow_empty_container=True)

