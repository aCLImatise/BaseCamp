&id002 !Command
command:
- medpy_fit_into_shape.py
- shape
positional:
- !Positional
  description: ''
  position: 0
  name: medpy_fit_into_shape.py
  optional: false
- !Positional
  description: ''
  position: 1
  name: input
  optional: false
- !Positional
  description: ''
  position: 2
  name: output
  optional: false
- !Positional
  description: ''
  position: 3
  name: shape
  optional: false
named:
- !Flag
  description: ''
  synonyms:
  - -f
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ''
  synonyms:
  - -d
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ''
  synonyms:
  - -v
  args: !EmptyFlagArg {}
  optional: true
parent: &id001 !Command
  command:
  - medpy_fit_into_shape.py
  positional: []
  named:
  - !Flag
    description: verbose output
    synonyms:
    - -v
    - --verbose
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Display debug information.
    synonyms:
    - -d
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: overwrite existing files
    synonyms:
    - -f
    - --force
    args: !EmptyFlagArg {}
    optional: true
  parent:
  subcommands:
  - !Command
    command:
    - medpy_fit_into_shape.py
    - output
    positional:
    - !Positional
      description: ''
      position: 0
      name: medpy_fit_into_shape.py
      optional: false
    - !Positional
      description: ''
      position: 1
      name: input
      optional: false
    - !Positional
      description: ''
      position: 2
      name: output
      optional: false
    - !Positional
      description: ''
      position: 3
      name: shape
      optional: false
    named:
    - !Flag
      description: ''
      synonyms:
      - -f
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -d
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -v
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: ''
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: medpy_fit_into_shape.py [-h] [-v] [-d] [-f] input output shape\n\
      medpy_fit_into_shape.py: error: the following arguments are required: output,\
      \ shape\n"
    generated_using: &id003 []
  - *id002
  usage: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: medpy_fit_into_shape.py [-h] [-v] [-d] [-f] input output shape\n\
    \nFit an existing image into a new shape.\n\nIf larger, the original image is\
    \ placed centered in all dimensions. If smaller,\nit is cut equally at all sides.\n\
    \nCopyright (C) 2013 Oskar Maier\nThis program comes with ABSOLUTELY NO WARRANTY;\
    \ This is free software,\nand you are welcome to redistribute it under certain\
    \ conditions; see\nthe LICENSE file or <http://www.gnu.org/licenses/> for details.\
    \   \n\npositional arguments:\n  input          the input image\n  output    \
    \     the output image\n  shape          the desired shape in colon-separated\
    \ values, e.g. 255,255,32\n\noptional arguments:\n  -h, --help     show this help\
    \ message and exit\n  -v, --verbose  verbose output\n  -d             Display\
    \ debug information.\n  -f, --force    overwrite existing files\n"
  generated_using:
  - --help
subcommands: []
usage: []
help_flag: !Flag
  description: ''
  synonyms:
  - -h
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: medpy_fit_into_shape.py [-h] [-v] [-d] [-f] input output shape\n\
  medpy_fit_into_shape.py: error: the following arguments are required: output, shape\n"
generated_using: *id003
