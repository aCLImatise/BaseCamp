from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Float, Int

Coinfinder_V0_1_0 = CommandToolBuilder(tool="coinfinder", base_command=["coinfinder"], inputs=[ToolInput(tag="in_input", input_type=File(optional=True), prefix="--input", doc=InputDocumentation(doc="The path to the gene_presence_absence.csv output from Roary")), ToolInput(tag="in_input_roar_y", input_type=String(optional=True), prefix="--inputroary", doc=InputDocumentation(doc="Set if -i is in the gene_presence_absence.csv format from Roary")), ToolInput(tag="in_phylogeny", input_type=String(optional=True), prefix="--phylogeny", doc=InputDocumentation(doc="Phylogeny of Betas in Newick format (required)")), ToolInput(tag="in_associate", input_type=String(optional=True), prefix="--associate", doc=InputDocumentation(doc="Overlap; identify groups that tend to associate/co-occur (default).")), ToolInput(tag="in_dissociate", input_type=String(optional=True), prefix="--dissociate", doc=InputDocumentation(doc="Separation; identify groups that tend to dissociate/avoid.")), ToolInput(tag="in_level", input_type=Float(optional=True), prefix="--level", doc=InputDocumentation(doc="Specify the significnace level cutoff (default: 0.05)")), ToolInput(tag="in_bonferroni", input_type=String(optional=True), prefix="--bonferroni", doc=InputDocumentation(doc="Bonferroni correction multiple correction (recommended & default)")), ToolInput(tag="in_no_correction", input_type=String(optional=True), prefix="--nocorrection", doc=InputDocumentation(doc="No correction, use value as-is")), ToolInput(tag="in_fraction", input_type=String(optional=True), prefix="--fraction", doc=InputDocumentation(doc="(Connectivity analysis only) Use fraction rather than p-value")), ToolInput(tag="in_greater", input_type=String(optional=True), prefix="--greater", doc=InputDocumentation(doc="Greater (recommended & default)")), ToolInput(tag="in_less", input_type=String(optional=True), prefix="--less", doc=InputDocumentation(doc="Less")), ToolInput(tag="in_two_tailed", input_type=String(optional=True), prefix="--twotailed", doc=InputDocumentation(doc="Two-tailed")), ToolInput(tag="in_num_cores", input_type=Int(optional=True), prefix="--num_cores", doc=InputDocumentation(doc="The number of cores to use (default: 2)")), ToolInput(tag="in_verbose", input_type=String(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Verbose output.")), ToolInput(tag="in_filter", input_type=String(optional=True), prefix="--filter", doc=InputDocumentation(doc="Permit filtering of saturated and low-abundance data.")), ToolInput(tag="in_up_fil_threshold", input_type=Float(optional=True), prefix="--upfilthreshold", doc=InputDocumentation(doc="filter threshold for high-abundance data filtering (default: 1.0 i.e. any alpha in >=100/% of betas.")), ToolInput(tag="in_fil_threshold", input_type=Float(optional=True), prefix="--filthreshold", doc=InputDocumentation(doc="Threshold for low-abundance data filtering (default: 0.05 i.e. any alpha in <=5% of betas.")), ToolInput(tag="in_query", input_type=String(optional=True), prefix="--query", doc=InputDocumentation(doc="Query a specific gene.")), ToolInput(tag="in_test", input_type=String(optional=True), prefix="--test", doc=InputDocumentation(doc="Runs the test cases and exits.")), ToolInput(tag="in_all", input_type=String(optional=True), prefix="--all", doc=InputDocumentation(doc="Outputs all results, regardless of significance.")), ToolInput(tag="in_output", input_type=String(optional=True), prefix="--output", doc=InputDocumentation(doc="The prefix of all output files (default: coincident)."))], outputs=[ToolOutput(tag="out_input", output_type=File(optional=True), selector=InputSelector(input_to_select="in_input", type_hint=File()), doc=OutputDocumentation(doc="The path to the gene_presence_absence.csv output from Roary"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Coinfinder_V0_1_0().translate("wdl", allow_empty_container=True)

