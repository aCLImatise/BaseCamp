from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File

Megablast_V0_1_0 = CommandToolBuilder(tool="megablast", base_command=["megablast"], inputs=[ToolInput(tag="in_database_default_", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc="Database [String]\ndefault = nr")), ToolInput(tag="in_query_file", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="Query File [File In]")), ToolInput(tag="in_expectation_value_default", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc="Expectation value [Real]\ndefault = 10.0")), ToolInput(tag="in_alignment_view_options", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="alignment view options:")), ToolInput(tag="in_blast_report_file", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="BLAST report Output File [File Out]  Optional\ndefault = stdout")), ToolInput(tag="in_filter_query_sequence", input_type=Boolean(optional=True), prefix="-F", doc=InputDocumentation(doc="Filter query sequence [String]\ndefault = T")), ToolInput(tag="in_x_dropoff_value_gapped", input_type=Boolean(optional=True), prefix="-X", doc=InputDocumentation(doc="X dropoff value for gapped alignment (in bits) [Integer]\ndefault = 20")), ToolInput(tag="in_show_gis_deflines", input_type=Boolean(optional=True), prefix="-I", doc=InputDocumentation(doc="Show GI's in deflines [T/F]\ndefault = F")), ToolInput(tag="in_penalty_nucleotide_mismatch", input_type=Boolean(optional=True), prefix="-q", doc=InputDocumentation(doc="Penalty for a nucleotide mismatch [Integer]\ndefault = -3")), ToolInput(tag="in_reward_nucleotide_match", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="Reward for a nucleotide match [Integer]\ndefault = 1")), ToolInput(tag="in_number_database_sequences", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="Number of database sequences to show one-line descriptions for (V) [Integer]\ndefault = 500")), ToolInput(tag="in_number_database_sequence", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc="Number of database sequence to show alignments for (B) [Integer]\ndefault = 250")), ToolInput(tag="in_type_of_output", input_type=Boolean(optional=True), prefix="-D", doc=InputDocumentation(doc="Type of output:")), ToolInput(tag="in_number_use_default", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="Number of processors to use [Integer]\ndefault = 1")), ToolInput(tag="in_asn_seqalign_file", input_type=File(optional=True), prefix="-O", doc=InputDocumentation(doc="ASN.1 SeqAlign file; must be used in conjunction with -D2 option [File Out]  Optional")), ToolInput(tag="in_believe_query_defline", input_type=Boolean(optional=True), prefix="-J", doc=InputDocumentation(doc="Believe the query defline [T/F]  Optional\ndefault = F")), ToolInput(tag="in_maximal_total_length", input_type=Boolean(optional=True), prefix="-M", doc=InputDocumentation(doc="Maximal total length of queries for a single search [Integer]\ndefault = 5000000")), ToolInput(tag="in_word_size_length", input_type=Boolean(optional=True), prefix="-W", doc=InputDocumentation(doc="Word size (length of best perfect match) [Integer]\ndefault = 28")), ToolInput(tag="in_effective_length_database", input_type=Boolean(optional=True), prefix="-z", doc=InputDocumentation(doc="Effective length of the database (use zero for the real size) [Real]\ndefault = 0")), ToolInput(tag="in_effective_length_search", input_type=Boolean(optional=True), prefix="-Y", doc=InputDocumentation(doc="Effective length of the search space (use zero for the real size) [Real]\ndefault = 0")), ToolInput(tag="in_maximal_number_ignore", input_type=Boolean(optional=True), prefix="-P", doc=InputDocumentation(doc="Maximal number of positions for a hash value (set to 0 to ignore) [Integer]\ndefault = 0")), ToolInput(tag="in_query_strands_search", input_type=Boolean(optional=True), prefix="-S", doc=InputDocumentation(doc="Query strands to search against database: 3 is both, 1 is top, 2 is bottom [Integer]\ndefault = 3")), ToolInput(tag="in_produce_html_output", input_type=Boolean(optional=True), prefix="-T", doc=InputDocumentation(doc="Produce HTML output [T/F]\ndefault = F")), ToolInput(tag="in_restrict_search_list", input_type=Boolean(optional=True), prefix="-l", doc=InputDocumentation(doc="Restrict search of database to list of GI's [String]  Optional")), ToolInput(tag="in_cost_open_gap", input_type=Boolean(optional=True), prefix="-G", doc=InputDocumentation(doc="Cost to open a gap (-1 invokes default behavior) [Integer]\ndefault = -1")), ToolInput(tag="in_cost_extend_gap", input_type=Boolean(optional=True), prefix="-E", doc=InputDocumentation(doc="Cost to extend a gap (-1 invokes default behavior) [Integer]\ndefault = -1")), ToolInput(tag="in_minimal_hit_score", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="Minimal hit score to report (0 for default behavior) [Integer]\ndefault = 0")), ToolInput(tag="in_masked_query_output", input_type=File(optional=True), prefix="-Q", doc=InputDocumentation(doc="Masked query output, must be used in conjunction with -D 2 option [File Out]  Optional")), ToolInput(tag="in_show_full_ids", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc="Show full IDs in the output (default - only GIs or accessions) [T/F]\ndefault = F")), ToolInput(tag="in_use_case_filtering", input_type=Boolean(optional=True), prefix="-U", doc=InputDocumentation(doc="Use lower case filtering of FASTA sequence [T/F]  Optional\ndefault = F")), ToolInput(tag="in_report_log_information", input_type=Boolean(optional=True), prefix="-R", doc=InputDocumentation(doc="Report the log information at the end of output [T/F]  Optional\ndefault = F")), ToolInput(tag="in_identity_percentage_default", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="Identity percentage cut-off [Real]\ndefault = 0")), ToolInput(tag="in_location_query_optional", input_type=Boolean(optional=True), prefix="-L", doc=InputDocumentation(doc="Location on query sequence [String]  Optional")), ToolInput(tag="in_multiple_hits_window", input_type=Boolean(optional=True), prefix="-A", doc=InputDocumentation(doc="Multiple Hits window size; default is 0 (i.e. single-hit extensions) or 40 for discontiguous template (negative number overrides this) [Integer]\ndefault = 0")), ToolInput(tag="in_x_dropoff_value_ungapped", input_type=Boolean(optional=True), prefix="-y", doc=InputDocumentation(doc="X dropoff value for ungapped extension [Integer]\ndefault = 10")), ToolInput(tag="in_x_dropoff_value_dynamic", input_type=Boolean(optional=True), prefix="-Z", doc=InputDocumentation(doc="X dropoff value for dynamic programming gapped extension [Integer]\ndefault = 50")), ToolInput(tag="in_length_discontiguous_default", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="Length of a discontiguous word template (contiguous word if 0) [Integer]\ndefault = 0")), ToolInput(tag="in_make_discontiguous_words", input_type=Boolean(optional=True), prefix="-g", doc=InputDocumentation(doc="Make discontiguous megablast generate words for every base of the database (mandatory with the current BLAST engine) [T/F]  Optional\ndefault = T")), ToolInput(tag="in_use_nongreedy_extension", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="Use non-greedy (dynamic programming) extension for affine gap scores [T/F]  Optional\ndefault = F")), ToolInput(tag="in_type_coding_optimal", input_type=Boolean(optional=True), prefix="-N", doc=InputDocumentation(doc="Type of a discontiguous word template (0 - coding, 1 - optimal, 2 - two simultaneous [Integer]\ndefault = 0")), ToolInput(tag="in_maximal_number_save", input_type=Boolean(optional=True), prefix="-H", doc=InputDocumentation(doc="Maximal number of HSPs to save per database sequence (0 = unlimited) [Integer]\ndefault = 0")), ToolInput(tag="in_force_use_legacy", input_type=Boolean(optional=True), prefix="-V", doc=InputDocumentation(doc="Force use of the legacy BLAST engine [T/F]  Optional\ndefault = F\n"))], outputs=[ToolOutput(tag="out_blast_report_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_blast_report_file", type_hint=File()), doc=OutputDocumentation(doc="BLAST report Output File [File Out]  Optional\ndefault = stdout")), ToolOutput(tag="out_asn_seqalign_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_asn_seqalign_file", type_hint=File()), doc=OutputDocumentation(doc="ASN.1 SeqAlign file; must be used in conjunction with -D2 option [File Out]  Optional")), ToolOutput(tag="out_masked_query_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_masked_query_output", type_hint=File()), doc=OutputDocumentation(doc="Masked query output, must be used in conjunction with -D 2 option [File Out]  Optional"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Megablast_V0_1_0().translate("wdl", allow_empty_container=True)

