from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean

Ecoprimers_V0_1_0 = CommandToolBuilder(tool="ecoPrimers", base_command=["ecoPrimers"], inputs=[ToolInput(tag="in_atabase_match_format", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc=": [D]atabase : to match the expected format, the database\nhas to be formated first by the ecoPCRFormat.py program located.\nin the ecoPCR/tools directory.\necoPCRFormat.py creates three file types :\n.sdx : contains the sequences\n.tdx : contains information concerning the taxonomy\n.rdx : contains the taxonomy rank\necoPrimer needs all the file type. As a result, you have to write the\ndatabase radical without any extension. For example /ecoPrimerDB/fstvert")), ToolInput(tag="in_rror_max_error", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc=": [E]rror : max error allowed by oligonucleotide (0 by default)")), ToolInput(tag="in_gnore_given_taxonomy", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc=": [I]gnore the given taxonomy id (define the counterexample taxon set).")), ToolInput(tag="in_minimum_ength_define", input_type=Boolean(optional=True), prefix="-l", doc=InputDocumentation(doc=": minimum [L]ength : define the minimum amplication length.")), ToolInput(tag="in_maximum_ength_define", input_type=Boolean(optional=True), prefix="-L", doc=InputDocumentation(doc=": maximum [L]ength : define the maximum amplicationlength.")), ToolInput(tag="in_estricts_search_restrict", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc=": [R]estricts the search to the given taxonomic id (restrict the example taxon set).")), ToolInput(tag="in_xception_taxid_allows", input_type=Boolean(optional=True), prefix="-E", doc=InputDocumentation(doc=": [E]xception taxid allows to indicate than some subclade of example sequences are conterexamples.")), ToolInput(tag="in_consider_database_sequences", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc=": Consider that the database sequences are [c]ircular")), ToolInput(tag="in_three_prime_strict", input_type=Boolean(optional=True), prefix="-3", doc=InputDocumentation(doc=": Three prime strict match")), ToolInput(tag="in_strict_matching_uorum", input_type=Boolean(optional=True), prefix="-q", doc=InputDocumentation(doc=": Strict matching [q]uorum, percentage of the sequences in which strict primers are found. By default it is 70")), ToolInput(tag="in__ensitivity_quorum", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc=": [S]ensitivity quorum")), ToolInput(tag="in_required_axon_level", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc=": required [t]axon level for results, by default the results are computed at species level")), ToolInput(tag="in_false_positive_quorum", input_type=Boolean(optional=True), prefix="-x", doc=InputDocumentation(doc=": false positive quorum")), ToolInput(tag="in_set_ouble_strand", input_type=Boolean(optional=True), prefix="-D", doc=InputDocumentation(doc=": set in [d]ouble strand mode")), ToolInput(tag="in_set_primer_length", input_type=Boolean(optional=True), prefix="-O", doc=InputDocumentation(doc=": set the primer length (default 18)")), ToolInput(tag="in_set_ingle_strand", input_type=Boolean(optional=True), prefix="-S", doc=InputDocumentation(doc=": Set in [s]ingle strand mode")), ToolInput(tag="in_salt_correction_method", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc=": Salt correction method for Tm computation (SANTALUCIA : 1 or OWCZARZY:2, default=1)")), ToolInput(tag="in_salt_contentration_m", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc=": Salt contentration in M for Tm computation (default 0.05 M)")), ToolInput(tag="in__multi_match", input_type=Boolean(optional=True), prefix="-U", doc=InputDocumentation(doc=": No multi match")), ToolInput(tag="in_define_eference_sequence", input_type=Boolean(optional=True), prefix="-R", doc=InputDocumentation(doc=": Define the [R]eference sequence identifier (must be part of example set)")), ToolInput(tag="in_print_list_identifier", input_type=Boolean(optional=True), prefix="-A", doc=InputDocumentation(doc=": Print the list of all identifier of sequences present in the database")), ToolInput(tag="in_remove_data_step", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc=": Remove data mining step during  strict primer identification")), ToolInput(tag="in_store_statistic_file", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc=": Store statistic file about memory usage during strict primer identification")), ToolInput(tag="in_print_sets_primers", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc=": Print sets of primers (may take several minutes after primers have been designed!)")), ToolInput(tag="in_ignore_pairs_having", input_type=Boolean(optional=True), prefix="-T", doc=InputDocumentation(doc=": Ignore pairs having specificity below this Threshold"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Ecoprimers_V0_1_0().translate("wdl", allow_empty_container=True)

