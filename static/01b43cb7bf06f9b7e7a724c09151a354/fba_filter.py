from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int

Fba_Filter_V0_1_0 = CommandToolBuilder(tool="fba_filter", base_command=["fba", "filter"], inputs=[ToolInput(tag="in_input", input_type=File(optional=True), prefix="--input", doc=InputDocumentation(doc="specify an input file. The output of `extract` or `qc`")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="specify an output file")), ToolInput(tag="in_cb_start", input_type=Int(optional=True), prefix="--cb_start", doc=InputDocumentation(doc="specify expected cell barcode starting postion on read\n1. Default (0)")), ToolInput(tag="in_cb_mismatches", input_type=Int(optional=True), prefix="--cb_mismatches", doc=InputDocumentation(doc="specify cell barcode mismatching threshold. Default\n(1)")), ToolInput(tag="in_cb_left_shift", input_type=Int(optional=True), prefix="--cb_left_shift", doc=InputDocumentation(doc="specify the maximum left shift allowed for cell\nbarcode. Default (1)")), ToolInput(tag="in_cb_right_shift", input_type=Int(optional=True), prefix="--cb_right_shift", doc=InputDocumentation(doc="specify the maximum right shift allowed for cell\nbarcode. Default (1)")), ToolInput(tag="in_cb_extra_seq", input_type=Int(optional=True), prefix="--cb_extra_seq", doc=InputDocumentation(doc="specify an extra constant sequence to filter on read\n1. Default (None)")), ToolInput(tag="in_cb_extra_seq_mismatches", input_type=Int(optional=True), prefix="--cb_extra_seq_mismatches", doc=InputDocumentation(doc="specify the maximun edit distance allowed for the\nextra constant sequence on read 1 for filtering.\nDefault (None)")), ToolInput(tag="in_fb_start", input_type=Int(optional=True), prefix="--fb_start", doc=InputDocumentation(doc="specify expected feature barcode starting postion on\nread 2. Default (10)")), ToolInput(tag="in_fb_mismatches", input_type=Int(optional=True), prefix="--fb_mismatches", doc=InputDocumentation(doc="specify feature barcode mismatching threshold. Default\n(1)")), ToolInput(tag="in_fb_left_shift", input_type=Int(optional=True), prefix="--fb_left_shift", doc=InputDocumentation(doc="specify the maximum left shift allowed for feature\nbarcode. Default (1)")), ToolInput(tag="in_fb_right_shift", input_type=Int(optional=True), prefix="--fb_right_shift", doc=InputDocumentation(doc="specify the maximum right shift allowed for feature\nbarcode. Default (1)")), ToolInput(tag="in_fb_extra_seq", input_type=Int(optional=True), prefix="--fb_extra_seq", doc=InputDocumentation(doc="specify an extra constant sequence to filter on read\n2. Default (None)")), ToolInput(tag="in_fb_extra_seq_mismatches", input_type=Int(optional=True), prefix="--fb_extra_seq_mismatches", doc=InputDocumentation(doc="specify the maximun edit distance allowed for the\nextra constant sequence on read 2. Default (None)\n"))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="specify an output file"))], container="quay.io/biocontainers/fba:0.0.10.post1--pyhdfd78af_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Fba_Filter_V0_1_0().translate("wdl")

