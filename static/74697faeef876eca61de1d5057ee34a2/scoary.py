from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, String, File, Directory, Boolean, Array

Scoary_V0_1_0 = CommandToolBuilder(tool="scoary", base_command=["scoary"], inputs=[ToolInput(tag="in_traits", input_type=Int(optional=True), prefix="--traits", doc=InputDocumentation(doc="Input trait table (comma-separated-values). Trait\npresence is indicated by 1, trait absence by 0.\nAssumes strain names in the first column and trait\nnames in the first row")), ToolInput(tag="in_genes", input_type=String(optional=True), prefix="--genes", doc=InputDocumentation(doc="Input gene presence/absence table (comma-separated-\nvalues) from ROARY. Strain names must be equal to\nthose in the trait table")), ToolInput(tag="in_newick_tree", input_type=String(optional=True), prefix="--newicktree", doc=InputDocumentation(doc="Supply a custom tree (Newick format) for phylogenetic\nanalyses instead instead of calculating it internally.")), ToolInput(tag="in_start_col", input_type=File(optional=True), prefix="--start_col", doc=InputDocumentation(doc="On which column in the gene presence/absence file do\nindividual strain info start. Default=15. (1-based\nindexing)")), ToolInput(tag="in_delimiter", input_type=File(optional=True), prefix="--delimiter", doc=InputDocumentation(doc="The delimiter between cells in the gene\npresence/absence and trait files, as well as the\noutput file.")), ToolInput(tag="in_restrict_to", input_type=String(optional=True), prefix="--restrict_to", doc=InputDocumentation(doc="Use if you only want to analyze a subset of your\nstrains. Scoary will read the provided comma-separated\ntable of strains and restrict analyzes to these.")), ToolInput(tag="in_outdir", input_type=Directory(optional=True), prefix="--outdir", doc=InputDocumentation(doc="Directory to place output files. Default = .")), ToolInput(tag="in_upgma_tree", input_type=Boolean(optional=True), prefix="--upgma_tree", doc=InputDocumentation(doc="This flag will cause Scoary to write the calculated\nUPGMA tree to a newick file")), ToolInput(tag="in_p_value_cut_off", input_type=Array(t=String(), optional=True), prefix="--p_value_cutoff", doc=InputDocumentation(doc="P-value cut-off / alpha level. For Fishers,\nBonferronis, and Benjamini-Hochbergs tests, SCOARY\nwill not report genes with higher p-values than this.\nFor empirical p-values, this is treated as an alpha\nlevel instead. I.e. 0.02 will filter all genes except\nthe lower and upper percentile from this test. Run\nwith '-p 1.0' to report all genes. Accepts standard\nform (e.g. 1E-8). Provide a single value (applied to\nall) or exactly as many values as correction criteria\nand in corresponding order. (See example under\ncorrection). Default = 0.05")), ToolInput(tag="in_apply_indicated_measure", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="[{I,B,BH,PW,EPW,P} [{I,B,BH,PW,EPW,P} ...]], --correction [{I,B,BH,PW,EPW,P} [{I,B,BH,PW,EPW,P} ...]]\nApply the indicated filtration measure. Allowed values\nare I, B, BH, PW, EPW, P. I=Individual (naive)\np-value. B=Bonferroni adjusted p-value. BH=Benjamini-\nHochberg adjusted p. PW=Best (lowest) pairwise\ncomparison. EPW=Entire range of pairwise comparison\np-values. P=Empirical p-value from permutations. You\ncan enter as many correction criteria as you would\nlike. These will be associated with the\np_value_cutoffs you enter. For example '-c I EPW -p\n0.1 0.05' will apply the following cutoffs: Naive\np-value must be lower than 0.1 AND the entire range of\npairwise comparison values are below 0.05 for this\ngene. Note that the empirical p-values should be\ninterpreted at both tails. Therefore, running '-c P -p\n0.05' will apply an alpha of 0.05 to the empirical\n(permuted) p-values, i.e. it will filter everything\nexcept the upper and lower 2.5 percent of the\ndistribution. Default = Individual p-value. (I)")), ToolInput(tag="in_max_hits", input_type=Int(optional=True), prefix="--max_hits", doc=InputDocumentation(doc="Maximum number of hits to report. SCOARY will only\nreport the top max_hits results per trait")), ToolInput(tag="in_include_input_columns", input_type=File(optional=True), prefix="--include_input_columns", doc=InputDocumentation(doc="Grab columns from the input Roary file. and puts them\nin the output. Handles comma and ranges, e.g.\n--include_input_columns 4,6,8,16-23. The special\nkeyword ALL will include all relevant input columns in\nthe output")), ToolInput(tag="in_write_reduced", input_type=Boolean(optional=True), prefix="--write_reduced", doc=InputDocumentation(doc="Use with -r if you want Scoary to create a new gene\npresence absence file from your reduced set of\nisolates. Note: Columns 1-14 (No. sequences, Avg group\nsize nuc etc) in this file do not reflect the reduced\ndataset. These are taken from the full dataset.")), ToolInput(tag="in_no_time", input_type=File(optional=True), prefix="--no-time", doc=InputDocumentation(doc="Output file in the form TRAIT.results.csv, instead of\nTRAIT_TIMESTAMP.csv. When used with the -w argument\nwill output a reduced gene matrix in the form\ngene_presence_absence_reduced.csv rather than\ngene_presence_absence_reduced_TIMESTAMP.csv")), ToolInput(tag="in_permute", input_type=Int(optional=True), prefix="--permute", doc=InputDocumentation(doc="Perform N number of permutations of the significant\nresults post-analysis. Each permutation will do a\nlabel switching of the phenotype and a new p-value is\ncalculated according to this new dataset. After all N\npermutations are completed, the results are ordered in\nascending order, and the percentile of the original\nresult in the permuted p-value distribution is\nreported.")), ToolInput(tag="in_no_pairwise", input_type=Boolean(optional=True), prefix="--no_pairwise", doc=InputDocumentation(doc="Do not perform pairwise comparisons. Inthis mode,\nScoary will perform population structure-naive\ncalculations only. (Fishers test, ORs etc). Useful for\nsummary operations and exploring sets. (Genes unique\nin groups, intersections etc) but not causal analyses.")), ToolInput(tag="in_collapse", input_type=Boolean(optional=True), prefix="--collapse", doc=InputDocumentation(doc="Add this to collapse correlated genes (genes that have\nidentical distribution patterns in the sample) into\nmerged units.")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of threads to use. Default = 1")), ToolInput(tag="in_test", input_type=Boolean(optional=True), prefix="--test", doc=InputDocumentation(doc="Run Scoary on the test set in exampledata, overriding\nall other parameters.")), ToolInput(tag="in_citation", input_type=Boolean(optional=True), prefix="--citation", doc=InputDocumentation(doc="Show citation information, and exit."))], outputs=[ToolOutput(tag="out_delimiter", output_type=File(optional=True), selector=InputSelector(input_to_select="in_delimiter", type_hint=File()), doc=OutputDocumentation(doc="The delimiter between cells in the gene\npresence/absence and trait files, as well as the\noutput file.")), ToolOutput(tag="out_outdir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_outdir", type_hint=File()), doc=OutputDocumentation(doc="Directory to place output files. Default = .")), ToolOutput(tag="out_no_time", output_type=File(optional=True), selector=InputSelector(input_to_select="in_no_time", type_hint=File()), doc=OutputDocumentation(doc="Output file in the form TRAIT.results.csv, instead of\nTRAIT_TIMESTAMP.csv. When used with the -w argument\nwill output a reduced gene matrix in the form\ngene_presence_absence_reduced.csv rather than\ngene_presence_absence_reduced_TIMESTAMP.csv"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Scoary_V0_1_0().translate("wdl", allow_empty_container=True)

