from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Directory, Int, String

Tobias_Clustermotifs_V0_1_0 = CommandToolBuilder(tool="TOBIAS_ClusterMotifs", base_command=["TOBIAS", "ClusterMotifs"], inputs=[ToolInput(tag="in_one_more_motif", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="[ [ ...]], --motifs [ [ ...]]      One or more motif files to compare and cluster")), ToolInput(tag="in_threshold", input_type=Boolean(optional=True), prefix="--threshold", doc=InputDocumentation(doc="Clustering threshold (Default = 0.3)")), ToolInput(tag="in_dist_method", input_type=Boolean(optional=True), prefix="--dist_method", doc=InputDocumentation(doc="Method for calculating similarity between motifs\n(default: pcc)")), ToolInput(tag="in_clust_method", input_type=Boolean(optional=True), prefix="--clust_method", doc=InputDocumentation(doc="Method for clustering (See: https://docs.scipy.org\n/doc/scipy/reference/generated/scipy.cluster.hiera\nrchy.linkage.html)")), ToolInput(tag="in_cons_format", input_type=Boolean(optional=True), prefix="--cons_format", doc=InputDocumentation(doc="Format of consensus motif file [‘meme’, 'pfm',\n'jaspar'] (Default: jaspar)")), ToolInput(tag="in_prefix", input_type=Boolean(optional=True), prefix="--prefix", doc=InputDocumentation(doc="Output prefix (default: 'motif_comparison')")), ToolInput(tag="in_outdir", input_type=Directory(optional=True), prefix="--outdir", doc=InputDocumentation(doc="Output directory (default: 'clustermotifs_output')")), ToolInput(tag="in_verbosity", input_type=Int(optional=True), prefix="--verbosity", doc=InputDocumentation(doc="Level of output logging (0: silent, 1:\nerrors/warnings, 2: info, 3: stats, 4: debug, 5:\nspam) (default: 3)")), ToolInput(tag="in_type", input_type=String(optional=True), prefix="--type", doc=InputDocumentation(doc="Plot file type [png, pdf, jpg] (Default: pdf)")), ToolInput(tag="in_dpi", input_type=Int(optional=True), prefix="--dpi", doc=InputDocumentation(doc="Dpi for plots (Default: 100)")), ToolInput(tag="in_color_palette", input_type=Int(optional=True), prefix="--color_palette", doc=InputDocumentation(doc="Color palette (All possible paletts:\nhttps://python-graph-gallery.com/197-available-\ncolor-palettes-with-matplotlib/. Add '_r' to\nreverse palette.)\n")), ToolInput(tag="in_motifs", input_type=String(optional=True), prefix="--motifs", doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_outdir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_outdir", type_hint=File()), doc=OutputDocumentation(doc="Output directory (default: 'clustermotifs_output')"))], container="quay.io/biocontainers/tobias:0.12.10--py37h97743b1_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Tobias_Clustermotifs_V0_1_0().translate("wdl")

