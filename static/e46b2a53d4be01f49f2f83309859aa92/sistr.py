from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Boolean, Directory, Int

Sistr_V0_1_0 = CommandToolBuilder(tool="sistr", base_command=["sistr"], inputs=[ToolInput(tag="in_genomename__inputfastagenomename", input_type=File(optional=True), prefix="-i", doc=InputDocumentation(doc="genome_name, --input-fasta-genome-name fasta_path genome_name\nfasta file path to genome name pair")), ToolInput(tag="in_output_format", input_type=String(optional=True), prefix="--output-format", doc=InputDocumentation(doc="Output format (json, csv, pickle)")), ToolInput(tag="in_output_prediction", input_type=File(optional=True), prefix="--output-prediction", doc=InputDocumentation(doc="SISTR serovar prediction output path")), ToolInput(tag="in_more_results", input_type=Boolean(optional=True), prefix="--more-results", doc=InputDocumentation(doc="Output more detailed results (-M) and all antigen\nsearch blastn results (-MM)")), ToolInput(tag="in_cgm_lst_profiles", input_type=File(optional=True), prefix="--cgmlst-profiles", doc=InputDocumentation(doc="Output CSV file destination for cgMLST allelic\nprofiles")), ToolInput(tag="in_novel_alleles", input_type=File(optional=True), prefix="--novel-alleles", doc=InputDocumentation(doc="Output FASTA file destination of novel cgMLST alleles\nfrom input genomes")), ToolInput(tag="in_alleles_output", input_type=File(optional=True), prefix="--alleles-output", doc=InputDocumentation(doc="Output path of allele sequences and info to JSON")), ToolInput(tag="in_tmp_dir", input_type=Directory(optional=True), prefix="--tmp-dir", doc=InputDocumentation(doc="Base temporary working directory for intermediate\nanalysis files.")), ToolInput(tag="in_keep_tmp", input_type=Boolean(optional=True), prefix="--keep-tmp", doc=InputDocumentation(doc="Keep temporary analysis files.")), ToolInput(tag="in_use_full_cgm_lst_db", input_type=Boolean(optional=True), prefix="--use-full-cgmlst-db", doc=InputDocumentation(doc="Use the full set of cgMLST alleles which can include\nhighly similar alleles. By default the smaller\n'centroid' alleles or representative alleles are used\nfor each marker.")), ToolInput(tag="in_no_cgm_lst", input_type=Boolean(optional=True), prefix="--no-cgmlst", doc=InputDocumentation(doc="Do not run cgMLST serovar prediction")), ToolInput(tag="in_run_mash", input_type=Boolean(optional=True), prefix="--run-mash", doc=InputDocumentation(doc="Determine Mash MinHash genomic distances to Salmonella\ngenomes with trusted serovar designations. Mash binary\nmust be in accessible via $PATH (e.g. /usr/bin).")), ToolInput(tag="in_qc", input_type=Boolean(optional=True), prefix="--qc", doc=InputDocumentation(doc="Perform basic QC to provide level of confidence in\nserovar prediction results.")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of parallel threads to run sistr_cmd analysis.")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Logging verbosity level (-v == show warnings; -vvv ==\nshow debug info)")), ToolInput(tag="in_si_str_cmd", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_genome_name", input_type=String(optional=True), position=1, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output_prediction", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_prediction", type_hint=File()), doc=OutputDocumentation(doc="SISTR serovar prediction output path")), ToolOutput(tag="out_cgm_lst_profiles", output_type=File(optional=True), selector=InputSelector(input_to_select="in_cgm_lst_profiles", type_hint=File()), doc=OutputDocumentation(doc="Output CSV file destination for cgMLST allelic\nprofiles")), ToolOutput(tag="out_alleles_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_alleles_output", type_hint=File()), doc=OutputDocumentation(doc="Output path of allele sequences and info to JSON"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Sistr_V0_1_0().translate("wdl", allow_empty_container=True)

