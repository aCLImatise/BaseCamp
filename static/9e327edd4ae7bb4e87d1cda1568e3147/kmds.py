from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean, String, Int, Float

Kmds_V0_1_0 = CommandToolBuilder(tool="kmds", base_command=["kmds"], inputs=[ToolInput(tag="in_arg_dsm_kmer", input_type=File(optional=True), prefix="-k", doc=InputDocumentation(doc="[ --kmers ] arg       dsm kmer output file (not needed if using")), ToolInput(tag="in__arg_metadata", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="[ --pheno ] arg       .pheno metadata")), ToolInput(tag="in_arg_output_prefix", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="[ --output ] arg      output prefix for new dsm file")), ToolInput(tag="in_no_mds", input_type=Boolean(optional=True), prefix="--no_mds", doc=InputDocumentation(doc="do not perform MDS; output subsampled matrix instead")), ToolInput(tag="in_write_distances", input_type=Boolean(optional=True), prefix="--write_distances", doc=InputDocumentation(doc="write csv of distance matrix")), ToolInput(tag="in_mds_concat", input_type=String(optional=True), prefix="--mds_concat", doc=InputDocumentation(doc="list of subsampled matrices to use in MDS. Performs\nonly MDS; implies --no_filtering")), ToolInput(tag="in_pc", input_type=Int(optional=True), prefix="--pc", doc=InputDocumentation(doc="(=10)           number of principal coordinates to output")), ToolInput(tag="in_size", input_type=Int(optional=True), prefix="--size", doc=InputDocumentation(doc="(=1000000)    number of kmers to use in MDS")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="(=1)       number of threads. Suggested: 8")), ToolInput(tag="in_no_filtering", input_type=Boolean(optional=True), prefix="--no_filtering", doc=InputDocumentation(doc="turn off all filtering and do not output new kmer")), ToolInput(tag="in_maf", input_type=Float(optional=True), prefix="--maf", doc=InputDocumentation(doc="(=0.01)        minimum kmer frequency")), ToolInput(tag="in_min_words", input_type=String(optional=True), prefix="--min_words", doc=InputDocumentation(doc="minimum kmer occurences. Overrides --maf")), ToolInput(tag="in_file", input_type=File(), position=0, doc=InputDocumentation(doc="--max_length arg (=100)  maximum kmer length"))], outputs=[ToolOutput(tag="out_arg_dsm_kmer", output_type=File(optional=True), selector=InputSelector(input_to_select="in_arg_dsm_kmer", type_hint=File()), doc=OutputDocumentation(doc="[ --kmers ] arg       dsm kmer output file (not needed if using")), ToolOutput(tag="out_arg_output_prefix", output_type=File(optional=True), selector=InputSelector(input_to_select="in_arg_output_prefix", type_hint=File()), doc=OutputDocumentation(doc="[ --output ] arg      output prefix for new dsm file"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Kmds_V0_1_0().translate("wdl", allow_empty_container=True)

