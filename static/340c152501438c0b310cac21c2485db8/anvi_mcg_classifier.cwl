class: CommandLineTool
id: ../../../anvi_mcg_classifier.cwl
inputs:
- id: profile_db
  doc: Anvi'o profile database
  type: string
  inputBinding:
    prefix: --profile-db
- id: contigs_db
  doc: Anvi'o contigs database generated by 'anvi-gen- contigs'
  type: string
  inputBinding:
    prefix: --contigs-db
- id: output_file_prefix
  doc: A prefix to be used while naming the output files (no file type extensions
    please; just a prefix).
  type: File
  inputBinding:
    prefix: --output-file-prefix
- id: collection_name
  doc: Collection name.
  type: string
  inputBinding:
    prefix: --collection-name
- id: bin_id
  doc: Bin name you are interested in.
  type: string
  inputBinding:
    prefix: --bin-id
- id: bin_ids_file
  doc: Text file for bins (each line should be a unique bin id).
  type: File
  inputBinding:
    prefix: --bin-ids-file
- id: exclude_samples
  doc: List of samples to exclude for the analysis.
  type: File
  inputBinding:
    prefix: --exclude-samples
- id: include_samples
  doc: List of samples to include for the analysis.
  type: File
  inputBinding:
    prefix: --include-samples
- id: gen_figures
  doc: "For those of you who wish to dig deeper, a collection of figures could be\
    \ created to allow you to get insight into how the classification was generated.\
    \ This is especially useful to identify cases in which you shouldn't trust the\
    \ classification (for example due to a large number of outliers). NOTICE: if you\
    \ ask anvi'o to generate these figures then it will significantly extend the execution\
    \ time. To learn about which figures are created and what they mean, contact your\
    \ nearest anvi'o developer, because currently it is a well-hidden secret."
  type: boolean
  inputBinding:
    prefix: --gen-figures
- id: get_samples_stats_only
  doc: If you only wish to get statistics regarding the occurrence of bins in samples,
    then use this flag. Especially when dealing with many samples or large genomes,
    gene stats could be a long time to compute. By using this flag you could save
    a lot of computation time.
  type: boolean
  inputBinding:
    prefix: --get-samples-stats-only
- id: overwrite_output_destinations
  doc: Overwrite if the output files and/or directories exist.
  type: boolean
  inputBinding:
    prefix: --overwrite-output-destinations
- id: genome_detection_uncertainty
  doc: Determines the range of sample detection values that are considered negative,
    ambiguous or positive. Min of 0 and smaller than 0.5, default of 0.25. For exmaple
    for the default samples with detection below 0.5-0.25 = 0.25 will be considered
    negative (i.e. donot contain the genome), samples with detection between 0.25
    and 0.75 would be ambiguous (and hence would not be used for the classification),
    and samples with detection above 0.75 would be considered positive (i.e. contain
    the genome).
  type: string
  inputBinding:
    prefix: --genome-detection-uncertainty
- id: outliers_threshold
  doc: "Threshold to use for the outlier detection. The default value is '1.5'. Absolute\
    \ deviation around the median is used. To read more about the method please refer\
    \ to: 'How to Detect and Handle Outliers' by Boris Iglewicz and David Hoaglin\
    \ (doi:10.1016/j.jesp.2013.03.013)."
  type: string
  inputBinding:
    prefix: --outliers-threshold
- id: zeros_are_outliers
  doc: If you want all zero coverage positions to be treated like outliers then use
    this flag. The reason to treat zero coverage as outliers is because when mapping
    reads to a reference we could get many zero positions due to accessory genes.
    These positions then skew the average values that we compute.
  type: boolean
  inputBinding:
    prefix: --zeros-are-outliers
outputs: []
cwlVersion: v1.1
baseCommand:
- anvi-mcg-classifier
