from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, String, File, Boolean, Directory

Orthofinder_V0_1_0 = CommandToolBuilder(tool="orthofinder", base_command=["orthofinder"], inputs=[ToolInput(tag="in_number_parallel_sequence", input_type=Int(optional=True), prefix="-t", doc=InputDocumentation(doc="Number of parallel sequence search threads [Default = 8]")), ToolInput(tag="in_number_parallel_analysis", input_type=Int(optional=True), prefix="-a", doc=InputDocumentation(doc="Number of parallel analysis threads [Default = 1]")), ToolInput(tag="in_method_gene_tree", input_type=String(optional=True), prefix="-M", doc=InputDocumentation(doc="Method for gene tree inference. Options 'dendroblast' & 'msa'\n[Default = dendroblast]")), ToolInput(tag="in_sequence_search_program", input_type=String(optional=True), prefix="-S", doc=InputDocumentation(doc="Sequence search program [Default = diamond]\nOptions: blast, diamond, blast_gz, mmseqs")), ToolInput(tag="in_msa_program_requires", input_type=String(optional=True), prefix="-A", doc=InputDocumentation(doc="MSA program, requires '-M msa' [Default = mafft]\nOptions: mafft, muscle")), ToolInput(tag="in_tree_inference_method", input_type=String(optional=True), prefix="-T", doc=InputDocumentation(doc="Tree inference method, requires '-M msa' [Default = fasttree]\nOptions: fasttree, raxml, raxml-ng, iqtree")), ToolInput(tag="in_userspecified_rooted_species", input_type=File(optional=True), prefix="-s", doc=InputDocumentation(doc="User-specified rooted species tree")), ToolInput(tag="in_mcl_inflation_parameter", input_type=Int(optional=True), prefix="-I", doc=InputDocumentation(doc="MCL inflation parameter [Default = 1.5]")), ToolInput(tag="in_info_outputting_results", input_type=File(optional=True), prefix="-x", doc=InputDocumentation(doc="Info for outputting results in OrthoXML format")), ToolInput(tag="in_write_temporary_files", input_type=String(optional=True), prefix="-p", doc=InputDocumentation(doc="Write the temporary pickle files to <dir>")), ToolInput(tag="in_only_perform_oneway", input_type=Boolean(optional=True), prefix="-1", doc=InputDocumentation(doc="Only perform one-way sequence search")), ToolInput(tag="in_add_species_names", input_type=Boolean(optional=True), prefix="-X", doc=InputDocumentation(doc="Don't add species names to sequence IDs")), ToolInput(tag="in_name_append_directory", input_type=Directory(optional=True), prefix="-n", doc=InputDocumentation(doc="Name to append to the results directory")), ToolInput(tag="in_nondefault_results_directory", input_type=Directory(optional=True), prefix="-o", doc=InputDocumentation(doc="Non-default results directory")), ToolInput(tag="in_op", input_type=Boolean(optional=True), prefix="-op", doc=InputDocumentation(doc="Stop after preparing input files for BLAST")), ToolInput(tag="in_og", input_type=Boolean(optional=True), prefix="-og", doc=InputDocumentation(doc="Stop after inferring orthogroups")), ToolInput(tag="in_os", input_type=Boolean(optional=True), prefix="-os", doc=InputDocumentation(doc="Stop after writing sequence files for orthogroups\n(requires '-M msa')")), ToolInput(tag="in_oa", input_type=Boolean(optional=True), prefix="-oa", doc=InputDocumentation(doc="Stop after inferring alignments for orthogroups\n(requires '-M msa')")), ToolInput(tag="in_ot", input_type=Boolean(optional=True), prefix="-ot", doc=InputDocumentation(doc="Stop after inferring gene trees for orthogroups")), ToolInput(tag="in_dir_start_orthofinder", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc="<dir>         Start OrthoFinder from pre-computed BLAST results in <dir>")), ToolInput(tag="in_fg", input_type=String(optional=True), prefix="-fg", doc=InputDocumentation(doc="Start OrthoFinder from pre-computed orthogroups in <dir>")), ToolInput(tag="in_ft", input_type=String(optional=True), prefix="-ft", doc=InputDocumentation(doc="Start OrthoFinder from pre-computed gene trees in <dir>"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Orthofinder_V0_1_0().translate("wdl", allow_empty_container=True)

