from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Float, Int

Seurat_Find_Markers_R_V0_1_0 = CommandToolBuilder(tool="seurat_find_markers.R", base_command=["seurat-find-markers.R"], inputs=[ToolInput(tag="in_input_object_file", input_type=File(optional=True), prefix="--input-object-file", doc=InputDocumentation(doc="File name in which a serialized R matrix object may be found.")), ToolInput(tag="in_genes_use", input_type=File(optional=True), prefix="--genes-use", doc=InputDocumentation(doc="File to be used to derive a vector of genes to test. Default is to use all genes.")), ToolInput(tag="in_input_format", input_type=String(optional=True), prefix="--input-format", doc=InputDocumentation(doc="Either loom, seurat, anndata or singlecellexperiment for the input format to read.")), ToolInput(tag="in_log_fc_threshold", input_type=Float(optional=True), prefix="--logfc-threshold", doc=InputDocumentation(doc="Limit testing to genes which show, on average, at least X-fold difference (log-scale) between the two groups of cells. Default is 0.25 Increasing logfc.threshold speeds up the function, but can miss weaker signals.")), ToolInput(tag="in_min_pct", input_type=Int(optional=True), prefix="--min-pct", doc=InputDocumentation(doc="Only test genes that are detected in a minimum fraction of min.pct cells in either of the two populations. Meant to speed up the function by not testing genes that are very infrequently expressed. Default is 0.1.")), ToolInput(tag="in_min_diff_pct", input_type=Int(optional=True), prefix="--min-diff-pct", doc=InputDocumentation(doc="Only test genes that show a minimum difference in the fraction of detection between the two groups. Set to -Inf by default.")), ToolInput(tag="in_only_pos", input_type=String(optional=True), prefix="--only-pos", doc=InputDocumentation(doc="Only return positive markers (FALSE by default).")), ToolInput(tag="in_test_use", input_type=Int(optional=True), prefix="--test-use", doc=InputDocumentation(doc="Denotes which test to use. Available options are 'wilcox', 'bimod', 'roc', 't', 'tobit', 'poisson', 'negbinom', 'MAST', 'DESeq2'. See ?FindMarkers() for more info.")), ToolInput(tag="in_max_cells_per_ident", input_type=Int(optional=True), prefix="--max-cells-per-ident", doc=InputDocumentation(doc="Down sample each identity class to a max number. Default is no downsampling. Not activated by default (set to Inf).")), ToolInput(tag="in_min_cells_gene", input_type=Int(optional=True), prefix="--min-cells-gene", doc=InputDocumentation(doc="Minimum number of cells expressing the gene in at least one of the two groups, currently only used for poisson and negative binomial tests.")), ToolInput(tag="in_min_cells_group", input_type=Int(optional=True), prefix="--min-cells-group", doc=InputDocumentation(doc="Minimum number of cells in one of the groups.")), ToolInput(tag="in_output_text_file", input_type=File(optional=True), prefix="--output-text-file", doc=InputDocumentation(doc="File name in which to store text format matrix containing a ranked list of putative markers, and associated statistics (p-values, ROC score, etc.)."))], outputs=[ToolOutput(tag="out_output_text_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_text_file", type_hint=File()), doc=OutputDocumentation(doc="File name in which to store text format matrix containing a ranked list of putative markers, and associated statistics (p-values, ROC score, etc.)."))], container="quay.io/biocontainers/seurat-scripts:0.0.9--0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Seurat_Find_Markers_R_V0_1_0().translate("wdl")

