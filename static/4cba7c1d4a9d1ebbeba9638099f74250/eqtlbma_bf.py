from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, Boolean, File

Eqtlbma_Bf_V0_1_0 = CommandToolBuilder(tool="eqtlbma_bf", base_command=["eqtlbma_bf"], inputs=[ToolInput(tag="in_verbose", input_type=Int(optional=True), prefix="--verbose", doc=InputDocumentation(doc="level (0/default=1/2/3)")), ToolInput(tag="in_geno", input_type=Boolean(optional=True), prefix="--geno", doc=InputDocumentation(doc="file with absolute paths to genotype files\ntwo columns: subgroup identifier<space/tab>path to file\nadd '#' at the beginning of a line to comment it\nsubgroup file: can be in three formats (VCF/IMPUTE/custom)\nVCF: see specifications on 1kG website\nIMPUTE: row 1 is a header chr<del>name<del>coord<del>a1<del>a2\nfollowed by >sample1_a1a1<del>sample1_a1a2<del>sample1_a2a2<del>...\ncustom: genotypes as allele dose, same as for MatrixEQTL\nand missing data can be NA or -1 (as used by vcftools --012)")), ToolInput(tag="in_s_coord", input_type=Boolean(optional=True), prefix="--scoord", doc=InputDocumentation(doc="file with the SNP coordinates\ncompulsory if custom genotype format; forbidden otherwise\nshould be in the BED format (delimiter: tab)\nSNPs in the genotype files without coordinate are skipped (see also --snp)\nif a tabix-indexed file is also present, it will be used")), ToolInput(tag="in_exp", input_type=Boolean(optional=True), prefix="--exp", doc=InputDocumentation(doc="file with absolute paths to expression level files\ntwo columns: subgroup identifier<space/tab>path to file\nadd '#' at the beginning of a line to comment it\nsubgroup file: custom format, same as for MatrixEQTL\nrow 1 for sample names, column 1 for gene names\nsubgroups can have different genes\nall genes should be in the --gcoord file")), ToolInput(tag="in_g_coord", input_type=Boolean(optional=True), prefix="--gcoord", doc=InputDocumentation(doc="file with the gene coordinates\nshould be in the BED format (delimiter: tab)\ngenes in the exp level files without coordinates are skipped")), ToolInput(tag="in_anchor", input_type=Boolean(optional=True), prefix="--anchor", doc=InputDocumentation(doc="gene boundary(ies) for the cis region\ndefault=TSS (assumed to be start in BED file)")), ToolInput(tag="in_cis", input_type=Boolean(optional=True), prefix="--cis", doc=InputDocumentation(doc="length of half of the cis region (radius, in bp)\napart from the anchor(s), default=100000")), ToolInput(tag="in_in_ss", input_type=Boolean(optional=True), prefix="--inss", doc=InputDocumentation(doc="file with absolute paths to files with summary statistics\ntwo columns: subgroup identifier<space/tab>path to file\nadd '#' at the beginning of a line to comment it\nsstats file: custom format, similar to the one from --outss (see below)\nheader should have gene, snp, n, sigmahat, betahat.geno and sebetahat.geno\norder doesn't matter")), ToolInput(tag="in_out", input_type=Boolean(optional=True), prefix="--out", doc=InputDocumentation(doc="prefix for the output files\nall output files are gzipped and have a header line")), ToolInput(tag="in_lik", input_type=Boolean(optional=True), prefix="--lik", doc=InputDocumentation(doc="likelihood to use\n'normal' (default)\n'poisson' or 'quasipoisson'")), ToolInput(tag="in_analys", input_type=Boolean(optional=True), prefix="--analys", doc=InputDocumentation(doc="analysis to perform\n'sep': separate analysis of each subgroup\n'join': joint analysis of all subgroups")), ToolInput(tag="in_out_ss", input_type=File(optional=True), prefix="--outss", doc=InputDocumentation(doc="write the output file with all summary statistics")), ToolInput(tag="in_out_w", input_type=File(optional=True), prefix="--outw", doc=InputDocumentation(doc="write the output file with the ABFs averaged over the grid\ngrid weights are uniformly equal")), ToolInput(tag="in_q_norm", input_type=Boolean(optional=True), prefix="--qnorm", doc=InputDocumentation(doc="quantile-normalize the exp levels to a N(0,1)")), ToolInput(tag="in_maf", input_type=Boolean(optional=True), prefix="--maf", doc=InputDocumentation(doc="minimum minor allele frequency (default=0.0)")), ToolInput(tag="in_co_var", input_type=Boolean(optional=True), prefix="--covar", doc=InputDocumentation(doc="file with absolute paths to covariate files\ntwo columns: subgroup identifier<space/tab>path to file\ncan be a single line (single subgroup)\nadd '#' at the beginning of a line to comment it\nsubgroup file: row 1 is a header sample<space/tab>covariate1 ...\nall sample names should be in the respective genotype and exp level files\nthe covariates should be numbers, no missing value is allowed\nsubgroups can have different covariates\nthe order of rows is not important")), ToolInput(tag="in_grid_l", input_type=Boolean(optional=True), prefix="--gridL", doc=InputDocumentation(doc="file with a 'large' grid for prior variances in standardized effect sizes\nfirst column is phi^2 and second column is omega^2, no header\nthis grid is used with model 1 ('general alternative') trying to capture\nall sorts of heterogeneity\nrequired with --analys join")), ToolInput(tag="in_grids", input_type=Boolean(optional=True), prefix="--gridS", doc=InputDocumentation(doc="file with a 'small' grid of values for phi^2 and omega^2\nsame format as --gridL\nrequired with --analyis join if --bfs is 'sin' or 'all'")), ToolInput(tag="in_bfs", input_type=Boolean(optional=True), prefix="--bfs", doc=InputDocumentation(doc="which Bayes Factors to compute for the joint analysis\nonly the Laplace-approximated BF from Wen and Stephens (AoAS 2013) is implemented\nif --outw, each BF for a given configuration is the average of the BFs over one of the grids, with equal weights\n'gen' (default): general way to capture any level of heterogeneity\ncorrespond to the consistent configuration with the large grid\nfixed-effect and maximum-heterogeneity BFs are also calculated\n'sin': compute also the BF for each singleton (subgroup-specific configuration)\nthey use the small grid (BF_BMAlite is also reported)\n'all': compute also the BFs for all configurations (costly if many subgroups)\nall BFs use the small grid (BF_BMA is also reported)")), ToolInput(tag="in_error", input_type=Boolean(optional=True), prefix="--error", doc=InputDocumentation(doc="model for the errors (if --analys join)\n'uvlr': default, errors are not correlated between subgroups (different individuals)\n'mvlr': errors can be correlated between subgroups (same individuals)\n'hybrid': errors can be correlated between pairs of subgroups (common individuals)")), ToolInput(tag="in_fit_err", input_type=Boolean(optional=True), prefix="--fiterr", doc=InputDocumentation(doc="param used when estimating the variance of the errors (if --analys join, only with 'mvlr' or 'hybrid')\ndefault=0.5 but can be between 0 (null model) and 1 (full model)")), ToolInput(tag="in_n_perm", input_type=Boolean(optional=True), prefix="--nperm", doc=InputDocumentation(doc="number of permutations\ndefault=0, otherwise 10000 is recommended")), ToolInput(tag="in_seed", input_type=Boolean(optional=True), prefix="--seed", doc=InputDocumentation(doc="seed for the two random number generators\none for the permutations, another for the trick\nby default, both are initialized via microseconds from epoch\nthe RNGs are re-seeded before each subgroup and before the joint analysis\nthis, along with --trick 2, allows for proper comparison of separate and joint analyzes")), ToolInput(tag="in_trick", input_type=Boolean(optional=True), prefix="--trick", doc=InputDocumentation(doc="apply trick to speed-up permutations\nstop after the tenth permutation for which the test statistic\nis better than or equal to the true value, and sample from\na uniform between 11/(nbPermsSoFar+2) and 11/(nbPermsSoFar+1)\nif '1', the permutations really stops\nif '2', all permutations are done but the test statistics are not computed\nallows to compare different test statistics on the same permutations")), ToolInput(tag="in_tri_cut", input_type=Boolean(optional=True), prefix="--tricut", doc=InputDocumentation(doc="cutoff for the trick (default=10)\nstop permutations once the nb of permutations for which permTestStat is more extreme\nthan trueTestStat equals this cutoff")), ToolInput(tag="in_perm_sep", input_type=Int(optional=True), prefix="--permsep", doc=InputDocumentation(doc="permutation procedure for the separate analysis\n0 (default): no permutations are done for the separate analysis\n1: use the minimum P-value over SNPs and subgroups as a test statistic (keeps correlations)\n2: use the minimum P-value over SNPs but in each subgroup separately (breaks correlations)")), ToolInput(tag="in_pbf", input_type=Boolean(optional=True), prefix="--pbf", doc=InputDocumentation(doc="which BF to use as the test statistic for the joint-analysis permutations\n'none' (default): no permutations are done for the joint analysis\n'gen': general BF (see --bfs above)\n'gen-sin': 0.5 BFgen + 0.5 BFsin (also called BF_BMAlite)\n'all': average over all configurations (also called BF_BMA)")), ToolInput(tag="in_max_bf", input_type=Boolean(optional=True), prefix="--maxbf", doc=InputDocumentation(doc="use the maximum ABF over SNPs as test statistic for permutations\notherwise the average ABF over SNPs is used (more Bayesian)")), ToolInput(tag="in_thread", input_type=Boolean(optional=True), prefix="--thread", doc=InputDocumentation(doc="number of threads (default=1, parallelize over SNPs)")), ToolInput(tag="in_snp", input_type=Boolean(optional=True), prefix="--snp", doc=InputDocumentation(doc="file with a list of SNPs to analyze\none SNP name per line, useful when launched in parallel\nprogram exits if an empty file is given")), ToolInput(tag="in_sb_grp", input_type=Boolean(optional=True), prefix="--sbgrp", doc=InputDocumentation(doc="identifier of the subgroup to analyze\nuseful for quick analysis and debugging\ncan be 'sbgrp1+sbgrp3' for instance")), ToolInput(tag="in_wrt_size", input_type=Int(optional=True), prefix="--wrtsize", doc=InputDocumentation(doc="of genes which results are written at once (default=10)\nto prevent excessive memory usage\ntune it depending on the average number of cis SNPs per gene\n"))], outputs=[ToolOutput(tag="out_out_ss", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_ss", type_hint=File()), doc=OutputDocumentation(doc="write the output file with all summary statistics")), ToolOutput(tag="out_out_w", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_w", type_hint=File()), doc=OutputDocumentation(doc="write the output file with the ABFs averaged over the grid\ngrid weights are uniformly equal"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Eqtlbma_Bf_V0_1_0().translate("wdl", allow_empty_container=True)

