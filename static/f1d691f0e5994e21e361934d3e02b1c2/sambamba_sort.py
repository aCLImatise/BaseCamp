from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, Directory, File, Boolean, String

Sambamba_Sort_V0_1_0 = CommandToolBuilder(tool="sambamba_sort", base_command=["sambamba", "sort"], inputs=[ToolInput(tag="in_memory_limit", input_type=Int(optional=True), prefix="--memory-limit", doc=InputDocumentation(doc="approximate total memory limit for all threads (by default 2GB)")), ToolInput(tag="in_tmpdir", input_type=Directory(optional=True), prefix="--tmpdir", doc=InputDocumentation(doc="directory for storing intermediate files; default is system directory for temporary files")), ToolInput(tag="in_out", input_type=File(optional=True), prefix="--out", doc=InputDocumentation(doc="output file name; if not provided, the result is written to a file with .sorted.bam extension")), ToolInput(tag="in_sort_by_name", input_type=Boolean(optional=True), prefix="--sort-by-name", doc=InputDocumentation(doc="sort by read name instead of coordinate (lexicographical order)")), ToolInput(tag="in_sort_picard", input_type=Boolean(optional=True), prefix="--sort-picard", doc=InputDocumentation(doc="sort by query name like in picard")), ToolInput(tag="in_natural_sort", input_type=Boolean(optional=True), prefix="--natural-sort", doc=InputDocumentation(doc="sort by read name instead of coordinate (so-called 'natural' sort as in samtools)")), ToolInput(tag="in_match_mates", input_type=Boolean(optional=True), prefix="--match-mates", doc=InputDocumentation(doc="pull mates of the same alignment together when sorting by read name")), ToolInput(tag="in_compression_level", input_type=Int(optional=True), prefix="--compression-level", doc=InputDocumentation(doc="level of compression for sorted BAM, from 0 to 9")), ToolInput(tag="in_uncompressed_chunks", input_type=Boolean(optional=True), prefix="--uncompressed-chunks", doc=InputDocumentation(doc="write sorted chunks as uncompressed BAM (default is writing with compression level 1), that might be faster in some cases but uses more disk space")), ToolInput(tag="in_show_progress", input_type=Boolean(optional=True), prefix="--show-progress", doc=InputDocumentation(doc="show progressbar in STDERR")), ToolInput(tag="in_n_threads", input_type=Int(optional=True), prefix="--nthreads", doc=InputDocumentation(doc="use specified number of threads")), ToolInput(tag="in_filter", input_type=String(optional=True), prefix="--filter", doc=InputDocumentation(doc="keep only reads that satisfy FILTER\n")), ToolInput(tag="in_samba_mba_sort", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_input_dot_bam", input_type=String(), position=1, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out", type_hint=File()), doc=OutputDocumentation(doc="output file name; if not provided, the result is written to a file with .sorted.bam extension"))], container="quay.io/biocontainers/sambamba:0.8.0--h984e79f_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Sambamba_Sort_V0_1_0().translate("wdl")

