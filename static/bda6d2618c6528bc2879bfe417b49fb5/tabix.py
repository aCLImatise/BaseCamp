from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, String, File

Tabix_V0_1_0 = CommandToolBuilder(tool="tabix", base_command=["tabix"], inputs=[ToolInput(tag="in_zero_based", input_type=Boolean(optional=True), prefix="--zero-based", doc=InputDocumentation(doc="coordinates are zero-based")), ToolInput(tag="in_begin", input_type=Int(optional=True), prefix="--begin", doc=InputDocumentation(doc="column number for region start [4]")), ToolInput(tag="in_comment", input_type=String(optional=True), prefix="--comment", doc=InputDocumentation(doc="skip comment lines starting with CHAR [null]")), ToolInput(tag="in_csi", input_type=Boolean(optional=True), prefix="--csi", doc=InputDocumentation(doc="generate CSI index for VCF (default is TBI)")), ToolInput(tag="in_end", input_type=Int(optional=True), prefix="--end", doc=InputDocumentation(doc="column number for region end (if no end, set INT to -b) [5]")), ToolInput(tag="in_force", input_type=Boolean(optional=True), prefix="--force", doc=InputDocumentation(doc="overwrite existing index without asking")), ToolInput(tag="in_min_shift", input_type=Int(optional=True), prefix="--min-shift", doc=InputDocumentation(doc="set minimal interval size for CSI indices to 2^INT [14]")), ToolInput(tag="in_preset", input_type=String(optional=True), prefix="--preset", doc=InputDocumentation(doc="gff, bed, sam, vcf")), ToolInput(tag="in_sequence", input_type=Int(optional=True), prefix="--sequence", doc=InputDocumentation(doc="column number for sequence names (suppressed by -p) [1]")), ToolInput(tag="in_skip_lines", input_type=Int(optional=True), prefix="--skip-lines", doc=InputDocumentation(doc="skip first INT lines [0]")), ToolInput(tag="in_only_header", input_type=Boolean(optional=True), prefix="--only-header", doc=InputDocumentation(doc="print only the header lines")), ToolInput(tag="in_list_chrom_s", input_type=Boolean(optional=True), prefix="--list-chroms", doc=InputDocumentation(doc="list chromosome names")), ToolInput(tag="in_re_header", input_type=File(optional=True), prefix="--reheader", doc=InputDocumentation(doc="replace the header with the content of FILE")), ToolInput(tag="in_regions", input_type=File(optional=True), prefix="--regions", doc=InputDocumentation(doc="restrict to regions listed in the file")), ToolInput(tag="in_targets", input_type=File(optional=True), prefix="--targets", doc=InputDocumentation(doc="similar to -R but streams rather than index-jumps")), ToolInput(tag="in_download_index_file", input_type=Boolean(optional=True), prefix="-D", doc=InputDocumentation(doc="do not download the index file")), ToolInput(tag="in_cache", input_type=Int(optional=True), prefix="--cache", doc=InputDocumentation(doc="set cache size to INT megabytes (0 disables) [10]")), ToolInput(tag="in_separate_regions", input_type=Boolean(optional=True), prefix="--separate-regions", doc=InputDocumentation(doc="separate the output by corresponding regions")), ToolInput(tag="in_verbosity", input_type=Int(optional=True), prefix="--verbosity", doc=InputDocumentation(doc="set verbosity [3]")), ToolInput(tag="in_file", input_type=File(optional=True), position=0, doc=InputDocumentation(doc=""))], outputs=[], container="quay.io/biocontainers/htslib:1.12--hd3b49d5_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Tabix_V0_1_0().translate("wdl")

