from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Boolean, Int

Seurat_Scale_Data_R_V0_1_0 = CommandToolBuilder(tool="seurat_scale_data.R", base_command=["seurat-scale-data.R"], inputs=[ToolInput(tag="in_input_object_file", input_type=File(optional=True), prefix="--input-object-file", doc=InputDocumentation(doc="File name in which a serialized R matrix object may be found.")), ToolInput(tag="in_input_format", input_type=String(optional=True), prefix="--input-format", doc=InputDocumentation(doc="Either loom, seurat, anndata or singlecellexperiment for the input format to read.")), ToolInput(tag="in_output_format", input_type=String(optional=True), prefix="--output-format", doc=InputDocumentation(doc="Either loom, seurat, anndata or singlecellexperiment for the output format.")), ToolInput(tag="in_genes_use", input_type=File(optional=True), prefix="--genes-use", doc=InputDocumentation(doc="File with gene names to scale/center (one gene per line). Default is all genes in object@data.")), ToolInput(tag="in_vars_to_regress", input_type=String(optional=True), prefix="--vars-to-regress", doc=InputDocumentation(doc="Comma-separated list of variables to regress out (previously latent.vars in RegressOut). For example, nUMI, or percent.mito.")), ToolInput(tag="in_model_use", input_type=String(optional=True), prefix="--model-use", doc=InputDocumentation(doc="Use a linear model or generalized linear model (poisson, negative binomial) for the regression. Options are 'linear' (default), 'poisson', and 'negbinom'.")), ToolInput(tag="in_use_umi", input_type=String(optional=True), prefix="--use-umi", doc=InputDocumentation(doc="Regress on UMI count data. Default is FALSE for linear modeling, but automatically set to TRUE if model.use is 'negbinom' or 'poisson'.")), ToolInput(tag="in_do_not_scale", input_type=Boolean(optional=True), prefix="--do-not-scale", doc=InputDocumentation(doc="Skip the data scale.")), ToolInput(tag="in_do_not_center", input_type=Boolean(optional=True), prefix="--do-not-center", doc=InputDocumentation(doc="Skip data centering.")), ToolInput(tag="in_scale_max", input_type=Int(optional=True), prefix="--scale-max", doc=InputDocumentation(doc="Max value to return for scaled data. The default is 10. Setting this can help reduce the effects of genes that are only expressed in a very small number of cells. If regressing out latent variables and using a non-linear model, the default is 50.")), ToolInput(tag="in_block_size", input_type=Int(optional=True), prefix="--block-size", doc=InputDocumentation(doc="Default size for number of genes to scale at in a single computation. Increasing block.size may speed up calculations but at an additional memory cost.")), ToolInput(tag="in_min_cells_to_block", input_type=Int(optional=True), prefix="--min-cells-to-block", doc=InputDocumentation(doc="If object contains fewer than this number of cells, don't block for scaling calculations.")), ToolInput(tag="in_check_for_norm", input_type=String(optional=True), prefix="--check-for-norm", doc=InputDocumentation(doc="Check to see if data has been normalized, if not, output a warning (TRUE by default).")), ToolInput(tag="in_output_object_file", input_type=File(optional=True), prefix="--output-object-file", doc=InputDocumentation(doc="File name in which to store serialized R object of type 'Seurat'.'"))], outputs=[ToolOutput(tag="out_output_object_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_object_file", type_hint=File()), doc=OutputDocumentation(doc="File name in which to store serialized R object of type 'Seurat'.'"))], container="quay.io/biocontainers/seurat-scripts:0.0.9--0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Seurat_Scale_Data_R_V0_1_0().translate("wdl")

