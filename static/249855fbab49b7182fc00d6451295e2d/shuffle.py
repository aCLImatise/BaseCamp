from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, File, Boolean, String

Shuffle_V0_1_0 = CommandToolBuilder(tool="shuffle", base_command=["shuffle"], inputs=[ToolInput(tag="in_make_samples_default", input_type=Int(optional=True), prefix="-n", doc=InputDocumentation(doc=": make <n> samples per input seq (default 1)")), ToolInput(tag="in_save_shuffled_sequences", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc=": save shuffled sequences to file <f>")), ToolInput(tag="in_truncatedelete_inputs_fixed", input_type=Int(optional=True), prefix="-t", doc=InputDocumentation(doc=": truncate/delete inputs to fixed length <n>")), ToolInput(tag="in_shuffle_preserve_mono", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc=": shuffle but preserve both mono- and di-symbol composition")), ToolInput(tag="in_generate_same_th", input_type=Boolean(optional=True), prefix="-0", doc=InputDocumentation(doc=": generate with same 0th order Markov properties as each input")), ToolInput(tag="in_generate_same_st", input_type=Boolean(optional=True), prefix="-1", doc=InputDocumentation(doc=": generate with same 1st order Markov properties as each input")), ToolInput(tag="in_make_iid_sequences", input_type=Boolean(optional=True), prefix="-l", doc=InputDocumentation(doc=": make iid sequences of same number and length as inputs")), ToolInput(tag="in__reverse_inputs", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc=": reverse inputs")), ToolInput(tag="in_regionally_shuffle_inputs", input_type=Int(optional=True), prefix="-w", doc=InputDocumentation(doc=": regionally shuffle inputs in window size <n>")), ToolInput(tag="in_make_when_set", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc=": make [-n] iid seqs of length [-t] of type [--dna|--amino];\nwhen -i is set, no <seqfile> argument is used")), ToolInput(tag="in_alignment", input_type=Boolean(optional=True), prefix="--alignment", doc=InputDocumentation(doc=": <seqfile> is an alignment; shuffle the columns")), ToolInput(tag="in_amino", input_type=Boolean(optional=True), prefix="--amino", doc=InputDocumentation(doc=": synthesize protein sequences [default] (see -i, -l)")), ToolInput(tag="in_dna", input_type=Boolean(optional=True), prefix="--dna", doc=InputDocumentation(doc=": synthesize DNA sequences (see -i, -l))")), ToolInput(tag="in_in_format", input_type=File(optional=True), prefix="--informat", doc=InputDocumentation(doc=": specify sequence file format <s>")), ToolInput(tag="in_nodes_c", input_type=Boolean(optional=True), prefix="--nodesc", doc=InputDocumentation(doc=": remove sequence description lines")), ToolInput(tag="in_q_rna", input_type=Boolean(optional=True), prefix="--qrna", doc=InputDocumentation(doc=": <seqfile> is a QRNA/FASTA pairwise alignment file;\nshuffle the pairwise alignments, preserving gap position")), ToolInput(tag="in_seed", input_type=Int(optional=True), prefix="--seed", doc=InputDocumentation(doc=": set random number seed to <s>")), ToolInput(tag="in_options", input_type=Boolean(optional=True), prefix="-options", doc=InputDocumentation(doc="")), ToolInput(tag="in_seq_file", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Shuffle_V0_1_0().translate("wdl", allow_empty_container=True)

