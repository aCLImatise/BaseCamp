from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Directory, Int, String, File, Boolean

Patholive_V0_1_0 = CommandToolBuilder(tool="patholive", base_command=["patholive"], inputs=[ToolInput(tag="in_bcl_dir", input_type=Directory(optional=True), prefix="--bcl_dir", doc=InputDocumentation(doc="Illumina BaseCalls directory which contains the\nsequence information of the reads.")), ToolInput(tag="in_index", input_type=Directory(optional=True), prefix="--index", doc=InputDocumentation(doc="Reference index directory for HiLive2.")), ToolInput(tag="in_reads", input_type=Int(optional=True), prefix="--reads", doc=InputDocumentation(doc="Length and types of the read segments. Each segment is\neither a read (R) or a barcode (B). Please give the\nsegments in the correct order as they are produced by\nthe sequencing machine. [Example: 101R,8B,8B,101R]")), ToolInput(tag="in_out_cycles", input_type=String(optional=True), prefix="--out_cycles", doc=InputDocumentation(doc="Cycles to create output for.")), ToolInput(tag="in_out_dir", input_type=Directory(optional=True), prefix="--out_dir", doc=InputDocumentation(doc="Output directory.")), ToolInput(tag="in_max_soft_clip_ratio", input_type=Int(optional=True), prefix="--max_softclip_ratio", doc=InputDocumentation(doc="Maximal relative length of the front softclip (only\nrelevant during output) [Default: 0.2]")), ToolInput(tag="in_hi_live", input_type=File(optional=True), prefix="--hilive", doc=InputDocumentation(doc="Path to hilive executable")), ToolInput(tag="in_num_threads", input_type=Int(optional=True), prefix="--num_threads", doc=InputDocumentation(doc="Number of threads")), ToolInput(tag="in_align_mode", input_type=String(optional=True), prefix="--align_mode", doc=InputDocumentation(doc="Alignment mode to balance speed and accuracy [very-\nfast|fast|balanced|accurate|very-accurate].")), ToolInput(tag="in_out_mode", input_type=String(optional=True), prefix="--out_mode", doc=InputDocumentation(doc="The output mode. [Default: ANYBEST]. [ALL|A]: Report\nall found alignments. [BESTN#|N#]: Report the # best\nfound alignments. [ALLBEST|H]: Report all found\nalignments with the best score. [ANYBEST|B]: Report\none best alignment. [UNIQUE|U]: Report only unique\nalignments.")), ToolInput(tag="in_out_format", input_type=String(optional=True), prefix="--out_format", doc=InputDocumentation(doc="Set the output format [Default: BAM]. [SAM]: SAM\noutput. [BAM]: BAM output.")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Print output of HiLive. Default: False")), ToolInput(tag="in_lanes", input_type=String(optional=True), prefix="--lanes", doc=InputDocumentation(doc="Lanes to be used for mapping, [Default = automatic\ndetection]")), ToolInput(tag="in_tiles", input_type=Int(optional=True), prefix="--tiles", doc=InputDocumentation(doc="Number of tiles [Default: automatic detection]")), ToolInput(tag="in_max_tile", input_type=Int(optional=True), prefix="--max_tile", doc=InputDocumentation(doc="Specify the highest tile number. The tile numbers will\nbe computed by this number, considering the correct\nsurface count, swath count and tile count for Illumina\nsequencing.")), ToolInput(tag="in_config", input_type=File(optional=True), prefix="--config", doc=InputDocumentation(doc="Path to a config file for HiLive2. This enables to use\nadvanced alignment settings that can not be set with\nthe available PathoLive parameters.\n"))], outputs=[ToolOutput(tag="out_out_dir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_out_dir", type_hint=File()), doc=OutputDocumentation(doc="Output directory."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Patholive_V0_1_0().translate("wdl", allow_empty_container=True)

