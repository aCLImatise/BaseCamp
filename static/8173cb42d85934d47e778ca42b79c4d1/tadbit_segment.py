from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean, Int, Array, String

Tadbit_Segment_V0_1_0 = CommandToolBuilder(tool="tadbit_segment", base_command=["tadbit", "segment"], inputs=[ToolInput(tag="in_workdir", input_type=File(optional=True), prefix="--workdir", doc=InputDocumentation(doc="path to working directory (generated with the tool tadbit mapper)")), ToolInput(tag="in_tmp_db", input_type=File(optional=True), prefix="--tmpdb", doc=InputDocumentation(doc="if provided uses this directory to manipulate the database")), ToolInput(tag="in_no_sql", input_type=Boolean(optional=True), prefix="--nosql", doc=InputDocumentation(doc="do not load/store data from/in sqlite database")), ToolInput(tag="in_all_bins", input_type=Boolean(optional=True), prefix="--all_bins", doc=InputDocumentation(doc="skip the filtering of bins for detection of TADs")), ToolInput(tag="in_m_reads", input_type=File(optional=True), prefix="--mreads", doc=InputDocumentation(doc="path valid-pairs file (TADbit BAM format)")), ToolInput(tag="in_biases", input_type=File(optional=True), prefix="--biases", doc=InputDocumentation(doc="path to file with precalculated biases by columns")), ToolInput(tag="in_resolution", input_type=Int(optional=True), prefix="--resolution", doc=InputDocumentation(doc="resolution at which to output matrices")), ToolInput(tag="in_norm_matrix", input_type=File(optional=True), prefix="--norm_matrix", doc=InputDocumentation(doc="path to a matrix file with normalized read counts")), ToolInput(tag="in_raw_matrix", input_type=File(optional=True), prefix="--raw_matrix", doc=InputDocumentation(doc="path to a matrix file with raw read counts")), ToolInput(tag="in_filter", input_type=Array(t=Int(), optional=True), prefix="--filter", doc=InputDocumentation(doc="[[1, 2, 3, 4, 6, 7, 9, 10]] Use filters to define a set os valid\npair of reads e.g.: '--apply 1 2 3 4 8 9 10'. Where these\nnumberscorrespond to: 1: self-circle, 2: dangling-end, 3: error, 4:\nextra dangling-end, 5: too close from RES, 6: too short, 7: too\nlarge, 8: over-represented, 9: duplicated, 10: random breaks, 11:\ntrans-chromosomic")), ToolInput(tag="in_nox", input_type=Boolean(optional=True), prefix="--noX", doc=InputDocumentation(doc="no display server (X screen)")), ToolInput(tag="in_only_compartments", input_type=Boolean(optional=True), prefix="--only_compartments", doc=InputDocumentation(doc="search A/B compartments using first eigen vector of the correlation")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="print more messages")), ToolInput(tag="in_jobid", input_type=Int(optional=True), prefix="--jobid", doc=InputDocumentation(doc="Use as input data generated by a job with a given jobid. Use tadbit\ndescribe to find out which.")), ToolInput(tag="in_chromosomes", input_type=Array(t=String(), optional=True), prefix="--chromosomes", doc=InputDocumentation(doc="Name of the chromosomes on which to search for TADs or compartments.")), ToolInput(tag="in_cpu", input_type=Int(optional=True), prefix="--cpu", doc=InputDocumentation(doc="[8] Maximum number of CPU cores available in the execution host. If\nhigher than 1, tasks with multi-threading capabilities will enabled\n(if 0 all available) cores will be used")), ToolInput(tag="in_force", input_type=Boolean(optional=True), prefix="--force", doc=InputDocumentation(doc="overwrite previously run job")), ToolInput(tag="in_rich_in_a", input_type=File(optional=True), prefix="--rich_in_A", doc=InputDocumentation(doc="path to a BED or bedGraph file with list of protein coding gene or\nother active epigenetic mark, to be used to label compartments\ninstead of using the relative interaction count.")), ToolInput(tag="in_fast_a", input_type=File(optional=True), prefix="--fasta", doc=InputDocumentation(doc="Path to fasta file with genome sequence, to compute GC content and\nuse it to label compartments")), ToolInput(tag="in_save_corr", input_type=Boolean(optional=True), prefix="--savecorr", doc=InputDocumentation(doc="Save correlation matrix used to predict compartments.")), ToolInput(tag="in_fix_corr_scale", input_type=Boolean(optional=True), prefix="--fix_corr_scale", doc=InputDocumentation(doc="Correlation matrix plot scaled between correlation 1 and -1 instead\nof maximum observed values.")), ToolInput(tag="in_format", input_type=File(optional=True), prefix="--format", doc=InputDocumentation(doc="[png] file format for figures")), ToolInput(tag="in_n_evs", input_type=Int(optional=True), prefix="--n_evs", doc=InputDocumentation(doc="[3] Number of eigenvectors to store. if '-1' all eigenvectors will\nbe calculated")), ToolInput(tag="in_ev_index", input_type=Array(t=Int(), optional=True), prefix="--ev_index", doc=InputDocumentation(doc="list of indexes of eigenvectors capturing compartments signal (one\nindex per chromosome, in the same order as chromosomes in fasta\nfile). Example picking the first eigenvector for all chromosomes but\nfor chromosome 3: '--ev_index 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1")), ToolInput(tag="in_max_tad_size", input_type=Int(optional=True), prefix="--max_tad_size", doc=InputDocumentation(doc="an integer defining the maximum size of TAD. Default defines it as\nthe number of rows/columns\n")), ToolInput(tag="in_matrix", input_type=String(), position=0, doc=InputDocumentation(doc="--only_tads              search TAD boundaries break-point detection algorithm"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Tadbit_Segment_V0_1_0().translate("wdl", allow_empty_container=True)

