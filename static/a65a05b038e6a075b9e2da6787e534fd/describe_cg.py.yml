!Command
command:
- describe_cg.py
positional:
- !Positional
  optional: false
  position: 0
  name: rna
  description: "One or more files containing one or more RNAs each.\nSupported Filetypes\
    \ are: pdb files, forgi cg files,\nforgi bg files, fasta files,\ndotbracketfilesAlternatively\
    \ you can supply a\ndotbracket-string (containing only the characters\n'.()[]{}&')\
    \ from the commandline."
named:
- !Flag
  optional: true
  synonyms:
  - --keep-length-one-stems
  description: "For all input formats except forgi bg/cg files, this\ncontrolls whether\
    \ stems of length one are dissolved to\nunpaired regions (default) or kept (if\
    \ this option is\npresent). In the case of input in forgi-format, the\nRNA from\
    \ the file is not modified."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --csv
  description: "Store dataframe under this filename. (Prints to stdout\nif not given)"
  args: !SimpleFlagArg
    name: CSV
- !Flag
  optional: true
  synonyms:
  - -k
  - --keys
  description: "Only print the following properties. (A comma-\nseperated list of\
    \ column headers, e.g. rog_vres"
  args: !SimpleFlagArg
    name: KEYS
- !Flag
  optional: true
  synonyms:
  - --angles
  description: "Store the angles between the given pairs of elements.\nComma-seperated\
    \ element tuples, seperated by colons.\n(e.g.: 's0,s1:s1,s2')"
  args: !SimpleFlagArg
    name: ANGLES
- !Flag
  optional: true
  synonyms:
  - --distances
  description: "Store the distances between the given nucleotides.\nComma-seperated\
    \ nucleotide tuples, seperated by\ncolons. (e.g.: '1,20:2,19')"
  args: !SimpleFlagArg
    name: DISTANCES
- !Flag
  optional: true
  synonyms:
  - --per-ml
  description: "Describe junction segments instead of the whole cg\n(one entry per\
    \ segment)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --mode
  description: "For use with --csv. Either 'a' for append or 'o' for\noverwrite. Default:\
    \ Abort if file exists."
  args: !SimpleFlagArg
    name: MODE
- !Flag
  optional: true
  synonyms:
  - --pseudoknots
  description: "Allow pseudoknots when extracting the structure from\nPDB files."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --chains
  description: "When reading pdb-files: Only extract the given\nchain(s). Comma-seperated"
  args: !SimpleFlagArg
    name: CHAINS
- !Flag
  optional: true
  synonyms:
  - --pdb-secondary-structure
  description: "When reading a single chain from a pdb-files: Enforce\nthe secondary\
    \ structure given as dotbracket string.\n(This only works, if --chain is given!)"
  args: !SimpleFlagArg
    name: PDB_SECONDARY_STRUCTURE
- !Flag
  optional: true
  synonyms:
  - --pdb-annotation-tool
  description: "What program to use for detecting basepairs in PDB/\nMMCIF structures.\
    \ This commandline option overrides\nthe value in the config file (if present).If\
    \ this is\nnot present and no config-file is given, we try to\ndetect the installed\
    \ programs."
  args: !SimpleFlagArg
    name: PDB_ANNOTATION_TOOL
- !Flag
  optional: true
  synonyms:
  - --pdb-allow-www-query
  description: "Usually, if modified residues/ ligand with an unknown\n3-letter code\
    \ are encountered in PDB files, they are\nremoved from the chain and a log message\
    \ of severity\nINFO is issued. With this option, we first try to\nquery the PDBeChem\
    \ database for the 3-letter code, to\nsee whether or not it is a modified residue\
    \ that can\nbe converted to its standard parent and should be part\nof the chain."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -v
  - --verbose
  description: "Show verbose output (Output logged at level\nlogging.INFO)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --debug
  description: "[DEBUG]       A comma-seperated list of logger names for which debug\n\
    output will be activated.WARNING: If you misspell the\nlogger name, this argument\
    \ will be ignored"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -q
  description: "[QUIET], --quiet [QUIET]\nA comma-seperated list of logger names for\
    \ which only\nmessages logged at the level 'CRITICAL' will be\nshown.Use this\
    \ without arguments if everything should\nbe quiet.\n"
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "usage: describe_cg.py [-h] [--keep-length-one-stems] [--pseudoknots]\n\
  \                      [--chains CHAINS]\n                      [--pdb-secondary-structure\
  \ PDB_SECONDARY_STRUCTURE]\n                      [--pdb-annotation-tool PDB_ANNOTATION_TOOL]\n\
  \                      [--pdb-allow-www-query] [-v] [--debug [DEBUG]]\n        \
  \              [-q [QUIET]] [--csv CSV] [-k KEYS] [--angles ANGLES]\n          \
  \            [--distances DISTANCES] [--per-ml] [--mode MODE]\n                \
  \      rna [rna ...]\n\nCollect data about a list of rna files and store it as a\
  \ csv.\n\npositional arguments:\n  rna                   One or more files containing\
  \ one or more RNAs each.\n                        Supported Filetypes are: pdb files,\
  \ forgi cg files,\n                        forgi bg files, fasta files,\n      \
  \                  dotbracketfilesAlternatively you can supply a\n             \
  \           dotbracket-string (containing only the characters\n                \
  \        '.()[]{}&') from the commandline.\n\noptional arguments:\n  -h, --help\
  \            show this help message and exit\n  --keep-length-one-stems\n      \
  \                  For all input formats except forgi bg/cg files, this\n      \
  \                  controlls whether stems of length one are dissolved to\n    \
  \                    unpaired regions (default) or kept (if this option is\n   \
  \                     present). In the case of input in forgi-format, the\n    \
  \                    RNA from the file is not modified.\n  --csv CSV           \
  \  Store dataframe under this filename. (Prints to stdout\n                    \
  \    if not given)\n  -k KEYS, --keys KEYS  Only print the following properties.\
  \ (A comma-\n                        seperated list of column headers, e.g. rog_vres\n\
  \  --angles ANGLES       Store the angles between the given pairs of elements.\n\
  \                        Comma-seperated element tuples, seperated by colons.\n\
  \                        (e.g.: 's0,s1:s1,s2')\n  --distances DISTANCES\n      \
  \                  Store the distances between the given nucleotides.\n        \
  \                Comma-seperated nucleotide tuples, seperated by\n             \
  \           colons. (e.g.: '1,20:2,19')\n  --per-ml              Describe junction\
  \ segments instead of the whole cg\n                        (one entry per segment)\n\
  \  --mode MODE           For use with --csv. Either 'a' for append or 'o' for\n\
  \                        overwrite. Default: Abort if file exists.\n\nOptions for\
  \ loading of PDB files:\n  These options only take effect, if the input RNA is in\
  \ pdb file format.\n\n  --pseudoknots         Allow pseudoknots when extracting\
  \ the structure from\n                        PDB files.\n  --chains CHAINS    \
  \   When reading pdb-files: Only extract the given\n                        chain(s).\
  \ Comma-seperated\n  --pdb-secondary-structure PDB_SECONDARY_STRUCTURE\n       \
  \                 When reading a single chain from a pdb-files: Enforce\n      \
  \                  the secondary structure given as dotbracket string.\n       \
  \                 (This only works, if --chain is given!)\n  --pdb-annotation-tool\
  \ PDB_ANNOTATION_TOOL\n                        What program to use for detecting\
  \ basepairs in PDB/\n                        MMCIF structures. This commandline\
  \ option overrides\n                        the value in the config file (if present).If\
  \ this is\n                        not present and no config-file is given, we try\
  \ to\n                        detect the installed programs.\n  --pdb-allow-www-query\n\
  \                        Usually, if modified residues/ ligand with an unknown\n\
  \                        3-letter code are encountered in PDB files, they are\n\
  \                        removed from the chain and a log message of severity\n\
  \                        INFO is issued. With this option, we first try to\n   \
  \                     query the PDBeChem database for the 3-letter code, to\n  \
  \                      see whether or not it is a modified residue that can\n  \
  \                      be converted to its standard parent and should be part\n\
  \                        of the chain.\n\nControl verbosity of logging output:\n\
  \  -v, --verbose         Show verbose output (Output logged at level\n         \
  \               logging.INFO)\n  --debug [DEBUG]       A comma-seperated list of\
  \ logger names for which debug\n                        output will be activated.WARNING:\
  \ If you misspell the\n                        logger name, this argument will be\
  \ ignored\n  -q [QUIET], --quiet [QUIET]\n                        A comma-seperated\
  \ list of logger names for which only\n                        messages logged at\
  \ the level 'CRITICAL' will be\n                        shown.Use this without arguments\
  \ if everything should\n                        be quiet.\n"
generated_using:
- --help
docker_image:
