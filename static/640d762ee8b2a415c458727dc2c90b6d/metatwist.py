from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, Float, String, Boolean

Metatwist_V0_1_0 = CommandToolBuilder(tool="metatwist", base_command=["metatwist"], inputs=[ToolInput(tag="in_dx", input_type=File(optional=True), prefix="--dx", doc=InputDocumentation(doc="Input density file(s): *.dx(gz,bz2)|*.ccp4.")), ToolInput(tag="in_map", input_type=Int(optional=True), prefix="--map", doc=InputDocumentation(doc="Mapping type:\n~ cylindrical (1D): cylindrical RDF along z-axis.\n~ twist (2D): twisted helical map along z-axis.\n~ untwist (2D): untwisted helical map along z-axis.\n~ spherical (1D): spherical RDF.\n~ projxyz: (1D) project 3D-map on x,y,z axes.\n~ excess: excess number of particles.\n~ blobs: Laplacian blob analysis.\n~ blobsper: Laplacian blob analysis on a periodic 3D-map.\n~ rhoel: Electron density using atomic form factors.\n~ rhoelreal: Electron density using atomic densities.\n~ cutresol: Cut 3D-map resolution range.")), ToolInput(tag="in_bin", input_type=Int(optional=True), prefix="--bin", doc=InputDocumentation(doc="(=0.1)        Bin size for re-sampling.")), ToolInput(tag="in_rmax", input_type=Int(optional=True), prefix="--rmax", doc=InputDocumentation(doc="(=60)        Extent along the rho direction (cylindrical, spherical RDFs).")), ToolInput(tag="in_zmax", input_type=Int(optional=True), prefix="--zmax", doc=InputDocumentation(doc="(=70)        Extent in the z direction.")), ToolInput(tag="in_ymax", input_type=Int(optional=True), prefix="--ymax", doc=InputDocumentation(doc="(=20)        Extent in the y direction.")), ToolInput(tag="in_xmax", input_type=Int(optional=True), prefix="--xmax", doc=InputDocumentation(doc="(=20)        Extent in the x direction.")), ToolInput(tag="in_ut_rate", input_type=Float(optional=True), prefix="--utrate", doc=InputDocumentation(doc="(=0.18587) Untwisting rate:\n0.18587 rad/Ang - BDNA(default)\n0.16870 rad/Ang - TDNA\n0.25590 rad/Ang - ARNA.")), ToolInput(tag="in_com", input_type=String(optional=True), prefix="--com", doc=InputDocumentation(doc="COM coordinates.")), ToolInput(tag="in_resolution", input_type=Int(optional=True), prefix="--resolution", doc=InputDocumentation(doc="Min and max resolution thresholds (default: 1.0 and 10.0 Ang).")), ToolInput(tag="in_bulk_dens", input_type=Int(optional=True), prefix="--bulkdens", doc=InputDocumentation(doc="(=1)     Bulk density (A^-3).")), ToolInput(tag="in_species", input_type=String(optional=True), prefix="--species", doc=InputDocumentation(doc="Chemical species: atom, e.g. N, or atom & residue, e.g. O WAT ).")), ToolInput(tag="in_sigma", input_type=Int(optional=True), prefix="--sigma", doc=InputDocumentation(doc="(=0)        Convolution sigma.")), ToolInput(tag="in_threshold", input_type=Int(optional=True), prefix="--threshold", doc=InputDocumentation(doc="(=0)    Laplacian threshold.")), ToolInput(tag="in_convolve", input_type=Int(optional=True), prefix="--convolve", doc=InputDocumentation(doc="(=4)     Convolution type\n- (1) Gaussian\n- (2) box\n- (3) sinc\n- (4) Laplacian of Gaussian.")), ToolInput(tag="in_od_x", input_type=File(optional=True), prefix="--odx", doc=InputDocumentation(doc="Output density file (*.dx|*.ccp4).")), ToolInput(tag="in_ldx", input_type=File(optional=True), prefix="--ldx", doc=InputDocumentation(doc="Input Laplacian file (*.dx|*.ccp4).")), ToolInput(tag="in_n_log", input_type=Boolean(optional=True), prefix="--nlog", doc=InputDocumentation(doc="Take the negative natural logarithm of the input density.")), ToolInput(tag="in_laplacian", input_type=Boolean(optional=True), prefix="--laplacian", doc=InputDocumentation(doc="Compute Laplacian, L[rho], of the input density using finite difference.")), ToolInput(tag="in_average", input_type=Boolean(optional=True), prefix="--average", doc=InputDocumentation(doc="Average volumetric data, in case multiple datasets have been loaded.\nOtherwise, data will be accumulated.\n")), ToolInput(tag="in_two_one_dot", input_type=Int(), position=0, doc=InputDocumentation(doc="Options:"))], outputs=[ToolOutput(tag="out_od_x", output_type=File(optional=True), selector=InputSelector(input_to_select="in_od_x", type_hint=File()), doc=OutputDocumentation(doc="Output density file (*.dx|*.ccp4)."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Metatwist_V0_1_0().translate("wdl", allow_empty_container=True)

