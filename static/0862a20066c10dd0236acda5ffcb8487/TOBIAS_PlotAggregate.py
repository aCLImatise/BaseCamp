from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Int, Float

Tobias_Plotaggregate_V0_1_0 = CommandToolBuilder(tool="TOBIAS_PlotAggregate", base_command=["TOBIAS", "PlotAggregate"], inputs=[ToolInput(tag="in_tfbs", input_type=Boolean(optional=True), prefix="--TFBS", doc=InputDocumentation(doc="[<bed> [<bed> ...]]           TFBS sites (*required)")), ToolInput(tag="in_signals", input_type=Boolean(optional=True), prefix="--signals", doc=InputDocumentation(doc="[<bigwig> [<bigwig> ...]]  Signals in bigwig format (*required)")), ToolInput(tag="in_regions", input_type=Boolean(optional=True), prefix="--regions", doc=InputDocumentation(doc="[<bed> [<bed> ...]]        Regions to overlap with TFBS (optional)")), ToolInput(tag="in_whitelist", input_type=Boolean(optional=True), prefix="--whitelist", doc=InputDocumentation(doc="[<bed> [<bed> ...]]      Only plot sites overlapping whitelist (optional)")), ToolInput(tag="in_blacklist", input_type=Boolean(optional=True), prefix="--blacklist", doc=InputDocumentation(doc="[<bed> [<bed> ...]]      Exclude sites overlapping blacklist (optional)")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="Path to output plot (default: TOBIAS_aggregate.pdf)")), ToolInput(tag="in_output_txt", input_type=File(optional=True), prefix="--output-txt", doc=InputDocumentation(doc="Path to output file for aggregates in .txt-format\n(default: None)")), ToolInput(tag="in_title", input_type=Boolean(optional=True), prefix="--title", doc=InputDocumentation(doc="Title of plot (default: 'Aggregated signals')")), ToolInput(tag="in_flank", input_type=Boolean(optional=True), prefix="--flank", doc=InputDocumentation(doc="Flanking basepairs (+/-) to show in plot (counted\nfrom middle of the TFBS) (default: 60)")), ToolInput(tag="in_tfbs_labels", input_type=Boolean(optional=True), prefix="--TFBS-labels", doc=InputDocumentation(doc="[ [ ...]]              Labels used for each TFBS file (default: prefix of\neach --TFBS)")), ToolInput(tag="in_signal_labels", input_type=Boolean(optional=True), prefix="--signal-labels", doc=InputDocumentation(doc="[ [ ...]]            Labels used for each signal file (default: prefix\nof each --signals)")), ToolInput(tag="in_region_labels", input_type=Boolean(optional=True), prefix="--region-labels", doc=InputDocumentation(doc="[ [ ...]]            Labels used for each regions file (default: prefix\nof each --regions)")), ToolInput(tag="in_share_y", input_type=Boolean(optional=True), prefix="--share-y", doc=InputDocumentation(doc="Share y-axis range across plots\n(none/signals/sites/both). Use '--share-y signals'\nif bigwig signals have similar ranges. Use '--\nshare_y sites' if sites per bigwig are comparable,\nbut bigwigs themselves aren't comparable (default:\nnone)")), ToolInput(tag="in_normalize", input_type=Boolean(optional=True), prefix="--normalize", doc=InputDocumentation(doc="Normalize the aggregate signal(s) to be between 0-1\n(default: the true range of values is shown)")), ToolInput(tag="in_negate", input_type=Boolean(optional=True), prefix="--negate", doc=InputDocumentation(doc="Negate overlap with regions")), ToolInput(tag="in_smooth", input_type=Int(optional=True), prefix="--smooth", doc=InputDocumentation(doc="Smooth output signal by taking the mean of <smooth>\nbp windows (default: 1 (no smooth)")), ToolInput(tag="in_log_transform", input_type=Boolean(optional=True), prefix="--log-transform", doc=InputDocumentation(doc="Log transform the signals before aggregation")), ToolInput(tag="in_plot_boundaries", input_type=Boolean(optional=True), prefix="--plot-boundaries", doc=InputDocumentation(doc="Plot TFBS boundaries (Note: estimated from first\nregion in each --TFBS)")), ToolInput(tag="in_signal_on_x", input_type=Boolean(optional=True), prefix="--signal-on-x", doc=InputDocumentation(doc="Show signals on x-axis and TFBSs on y-axis\n(default: signal is on y-axis)")), ToolInput(tag="in_remove_outliers", input_type=Float(optional=True), prefix="--remove-outliers", doc=InputDocumentation(doc="Value between 0-1 indicating the percentile of\nregions to include, e.g. 0.99 to remove the sites\nwith 1% highest values (default: 1)")), ToolInput(tag="in_verbosity", input_type=Int(optional=True), prefix="--verbosity", doc=InputDocumentation(doc="Level of output logging (0: silent, 1:\nerrors/warnings, 2: info, 3: stats, 4: debug, 5:\nspam) (default: 3)\n"))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="Path to output plot (default: TOBIAS_aggregate.pdf)")), ToolOutput(tag="out_output_txt", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_txt", type_hint=File()), doc=OutputDocumentation(doc="Path to output file for aggregates in .txt-format\n(default: None)"))], container="quay.io/biocontainers/tobias:0.12.10--py37h97743b1_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Tobias_Plotaggregate_V0_1_0().translate("wdl")

