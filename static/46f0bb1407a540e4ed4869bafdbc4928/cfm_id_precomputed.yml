!Command
command:
- cfm-id-precomputed
positional:
- !Positional
  optional: false
  position: 0
  name: cfm-id.exe
  description: ''
- !Positional
  optional: false
  position: 1
  name: spectrum_file
  description: ''
- !Positional
  optional: false
  position: 2
  name: id
  description: ''
- !Positional
  optional: false
  position: 3
  name: candidate_file
  description: ''
- !Positional
  optional: false
  position: 4
  name: num_highest
  description: ''
- !Positional
  optional: false
  position: 5
  name: ppm_mass_tol
  description: ''
- !Positional
  optional: false
  position: 6
  name: abs_mass_tol
  description: ''
- !Positional
  optional: false
  position: 7
  name: score_type
  description: ''
- !Positional
  optional: false
  position: 8
  name: output_filename
  description: ''
named: []
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "\n\n\nUsage: cfm-id.exe <spectrum_file> <id> <candidate_file> <num_highest>\
  \ <ppm_mass_tol> <abs_mass_tol> <score_type> <output_filename>\n\n\n\nspectrum_file:\n\
  The filename where the input spectra can be found. This can be a .msp file in which\
  \ the desired spectrum is listed under a corresponding id (next arg). Or it could\
  \ be a single file with a list of peaks 'mass intensity' delimited by lines, with\
  \ either 'low','med' and 'high' lines beginning spectra of different energy levels,\
  \ or 'energy0', 'energy1', etc. e.g.\nenergy0\n65.02 40.0\n86.11 60.0\nenergy1\n\
  65.02 100.0 ... etc\n\nid:\nAn identifier for the target molecule (printed to output,\
  \ in case of multiple concatenated results, and used to retrieve input spectrum\
  \ from msp where msp is used)\n\ncandidate_file:\nThe filename where the input list\
  \ of candidate structures can be found - line separated 'id smiles_or_inchi spectrum_file'\
  \ triples, where the spectrum file stores the precomputed spectra (no spaces allowed).\n\
  \nnum_highest (opt):\nThe number of (ranked) candidates to return or -1 for all\
  \ (if not given, returns all in ranked order)\n\nppm_mass_tol (opt):\nThe mass tolerance\
  \ in ppm to use when matching peaks within the dot product comparison - will use\
  \ higher resulting tolerance of ppm and abs (if not given defaults to 10ppm)\n\n\
  abs_mass_tol (opt):\nThe mass tolerance in abs Da to use when matching peaks within\
  \ the dot product comparison - will use higher resulting tolerance of ppm and abs\
  \ ( if not given defaults to 0.01Da)\n\nscore_type (opt):\nThe type of scoring function\
  \ to use when comparing spectra. Options: Jaccard (default), DotProduct\n\noutput_filename\
  \ (opt):\nThe filename of the output file to write to (if not given, prints to stdout)\n"
generated_using:
- --help
docker_image:
