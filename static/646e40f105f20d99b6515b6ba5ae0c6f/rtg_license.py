from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Int

Rtg_License_V0_1_0 = CommandToolBuilder(tool="rtg_license", base_command=["rtg", "license"], inputs=[ToolInput(tag="in_format", input_type=String(), position=0, doc=InputDocumentation(doc="Licensed          GA")), ToolInput(tag="in_sdf_two_fast_a", input_type=Int(), position=1, doc=InputDocumentation(doc="Licensed          GA")), ToolInput(tag="in_sdf_two_fast_q", input_type=Int(), position=2, doc=InputDocumentation(doc="Licensed          GA")), ToolInput(tag="in_sdf_two_sam", input_type=Int(), position=3, doc=InputDocumentation(doc="Licensed          GA")), ToolInput(tag="in_fast_q_trim", input_type=String(), position=4, doc=InputDocumentation(doc="Licensed          GA")), ToolInput(tag="in_genome_sim", input_type=String(), position=0, doc=InputDocumentation(doc="Licensed          GA")), ToolInput(tag="in_cg_sim", input_type=String(), position=1, doc=InputDocumentation(doc="Licensed          GA")), ToolInput(tag="in_read_sim", input_type=String(), position=2, doc=InputDocumentation(doc="Licensed          GA")), ToolInput(tag="in_pop_sim", input_type=String(), position=3, doc=InputDocumentation(doc="Licensed          GA")), ToolInput(tag="in_samples_im", input_type=String(), position=4, doc=InputDocumentation(doc="Licensed          GA")), ToolInput(tag="in_child_sim", input_type=String(), position=5, doc=InputDocumentation(doc="Licensed          GA")), ToolInput(tag="in_de_novo_sim", input_type=String(), position=6, doc=InputDocumentation(doc="Licensed          GA")), ToolInput(tag="in_ped_samples_im", input_type=String(), position=7, doc=InputDocumentation(doc="Licensed          beta")), ToolInput(tag="in_sample_replay", input_type=String(), position=8, doc=InputDocumentation(doc="Licensed          GA")), ToolInput(tag="in_b_gzip", input_type=String(), position=0, doc=InputDocumentation(doc="Licensed          GA")), ToolInput(tag="in_index", input_type=String(), position=1, doc=InputDocumentation(doc="Licensed          GA")), ToolInput(tag="in_extract", input_type=String(), position=2, doc=InputDocumentation(doc="Licensed          GA")), ToolInput(tag="in_sdf_stats", input_type=String(), position=3, doc=InputDocumentation(doc="Licensed          GA")), ToolInput(tag="in_sdf_subset", input_type=String(), position=4, doc=InputDocumentation(doc="Licensed          GA")), ToolInput(tag="in_sdf_subseq", input_type=String(), position=5, doc=InputDocumentation(doc="Licensed          GA")), ToolInput(tag="in_mendelian", input_type=String(), position=6, doc=InputDocumentation(doc="Licensed          GA")), ToolInput(tag="in_vcf_stats", input_type=String(), position=7, doc=InputDocumentation(doc="Licensed          GA")), ToolInput(tag="in_vcf_merge", input_type=String(), position=8, doc=InputDocumentation(doc="Licensed          GA")), ToolInput(tag="in_vcf_filter", input_type=String(), position=9, doc=InputDocumentation(doc="Licensed          GA")), ToolInput(tag="in_vcf_annotate", input_type=String(), position=10, doc=InputDocumentation(doc="Licensed          GA")), ToolInput(tag="in_vcf_subset", input_type=String(), position=11, doc=InputDocumentation(doc="Licensed          GA")), ToolInput(tag="in_vcf_split", input_type=String(), position=12, doc=InputDocumentation(doc="Licensed          beta")), ToolInput(tag="in_vcf_decompose", input_type=String(), position=13, doc=InputDocumentation(doc="Licensed          beta")), ToolInput(tag="in_vcf_eval", input_type=String(), position=14, doc=InputDocumentation(doc="Licensed          GA")), ToolInput(tag="in_sv_decompose", input_type=String(), position=15, doc=InputDocumentation(doc="Licensed          beta")), ToolInput(tag="in_bnd_eval", input_type=String(), position=16, doc=InputDocumentation(doc="Licensed          beta")), ToolInput(tag="in_ped_filter", input_type=String(), position=17, doc=InputDocumentation(doc="Licensed          GA")), ToolInput(tag="in_ped_stats", input_type=String(), position=18, doc=InputDocumentation(doc="Licensed          GA")), ToolInput(tag="in_roc_plot", input_type=String(), position=19, doc=InputDocumentation(doc="Licensed          GA")), ToolInput(tag="in_version", input_type=String(), position=20, doc=InputDocumentation(doc="Licensed          GA")), ToolInput(tag="in_license", input_type=String(), position=21, doc=InputDocumentation(doc="Licensed          GA")), ToolInput(tag="in_help", input_type=String(), position=22, doc=InputDocumentation(doc="Licensed          GA"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Rtg_License_V0_1_0().translate("wdl", allow_empty_container=True)

