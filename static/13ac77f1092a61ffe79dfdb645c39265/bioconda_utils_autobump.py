from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Array, String, File, Boolean, Int

Bioconda_Utils_Autobump_V0_1_0 = CommandToolBuilder(tool="bioconda_utils_autobump", base_command=["bioconda-utils", "autobump"], inputs=[ToolInput(tag="in_packages", input_type=Array(t=String(), optional=True), prefix="--packages", doc=InputDocumentation(doc="Glob(s) for package[s] to scan. Can be specified more\nthan once (default: '*')")), ToolInput(tag="in_exclude", input_type=Array(t=String(), optional=True), prefix="--exclude", doc=InputDocumentation(doc="Globs for package[s] to exclude from scan. Can be\nspecified more than once (default: -)")), ToolInput(tag="in_cache", input_type=File(optional=True), prefix="--cache", doc=InputDocumentation(doc="To speed up debugging, use repodata cached locally in\nthe provided filename. If the file does not exist, it\nwill be created the first time. Caution: The cache\nwill not be updated if exclude-channels is changed\n(default: -)")), ToolInput(tag="in_failed_urls", input_type=File(optional=True), prefix="--failed-urls", doc=InputDocumentation(doc="Write urls with permanent failure to this file\n(default: -)")), ToolInput(tag="in_unparsed_urls", input_type=File(optional=True), prefix="--unparsed-urls", doc=InputDocumentation(doc="Write unrecognized urls to this file (default: -)")), ToolInput(tag="in_recipe_status", input_type=File(optional=True), prefix="--recipe-status", doc=InputDocumentation(doc="Write status for each recipe to this file (default: -)")), ToolInput(tag="in_exclude_sub_recipes", input_type=String(optional=True), prefix="--exclude-subrecipes", doc=InputDocumentation(doc="By default, only subrecipes explicitly enabled for\nwatch in meta.yaml are considered. Set to 'always' to\nexclude all subrecipes. Set to 'never' to include all\nsubrecipes (default: -)")), ToolInput(tag="in_exclude_channels", input_type=Array(t=String(), optional=True), prefix="--exclude-channels", doc=InputDocumentation(doc="Exclude recipes building packages present in other\nchannels. Set to 'none' to disable check. (default:\n'conda-forge')")), ToolInput(tag="in_ignore_blacklists", input_type=Boolean(optional=True), prefix="--ignore-blacklists", doc=InputDocumentation(doc="Do not exclude recipes from blacklist (default: False)")), ToolInput(tag="in_fetch_requirements", input_type=Boolean(optional=True), prefix="--fetch-requirements", doc=InputDocumentation(doc="Try to fetch python requirements. Please note that\nthis requires downloading packages and executing\nsetup.py, so presents a potential security problem.\n(default: False)")), ToolInput(tag="in_check_branch", input_type=Boolean(optional=True), prefix="--check-branch", doc=InputDocumentation(doc="Check if recipe has active branch (default: False)")), ToolInput(tag="in_create_branch", input_type=Boolean(optional=True), prefix="--create-branch", doc=InputDocumentation(doc="Create branch for each update (default: False)")), ToolInput(tag="in_create_pr", input_type=Boolean(optional=True), prefix="--create-pr", doc=InputDocumentation(doc="Create PR for each update. Implies create-branch.\n(default: False)")), ToolInput(tag="in_only_active", input_type=Boolean(optional=True), prefix="--only-active", doc=InputDocumentation(doc="Check only recipes with active update (default: False)")), ToolInput(tag="in_no_shuffle", input_type=Boolean(optional=True), prefix="--no-shuffle", doc=InputDocumentation(doc="Do not shuffle recipe order (default: False)")), ToolInput(tag="in_max_updates", input_type=Int(optional=True), prefix="--max-updates", doc=InputDocumentation(doc="Exit after ARG updates (default: 0)")), ToolInput(tag="in_dry_run", input_type=Boolean(optional=True), prefix="--dry-run", doc=InputDocumentation(doc="Don't update remote git or github' (default: False)")), ToolInput(tag="in_no_check_p_innings", input_type=Boolean(optional=True), prefix="--no-check-pinnings", doc=InputDocumentation(doc="Don't check for pinning updates (default: False)")), ToolInput(tag="in_no_follow_graph", input_type=Boolean(optional=True), prefix="--no-follow-graph", doc=InputDocumentation(doc="Don't process recipes in graph order or add dependent\nrecipes to checks. Implies --no-skip-pending-deps.\n(default: False)")), ToolInput(tag="in_no_check_version_update", input_type=Boolean(optional=True), prefix="--no-check-version-update", doc=InputDocumentation(doc="Don't check for version updates to recipes (default:\nFalse)")), ToolInput(tag="in_no_check_pending_deps", input_type=Boolean(optional=True), prefix="--no-check-pending-deps", doc=InputDocumentation(doc="Don't check for recipes having a dependency with a\npending update. Update all recipes, including those\nhaving deps in need or rebuild. (default: False)")), ToolInput(tag="in_sign", input_type=Boolean(optional=True), prefix="--sign", doc=InputDocumentation(doc="[SIGN]         Enable signing. Optionally takes keyid. (default: 0)")), ToolInput(tag="in_commit_as", input_type=String(optional=True), prefix="--commit-as", doc=InputDocumentation(doc="COMMIT_AS\nSet user and email to use for committing. Takes\nexactly two arguments. (default: -)")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Limit maximum number of processes used. (default: 16)")), ToolInput(tag="in_pdb", input_type=Boolean(optional=True), prefix="--pdb", doc=InputDocumentation(doc="Drop into debugger on exception (default: False)")), ToolInput(tag="in_loglevel", input_type=String(optional=True), prefix="--loglevel", doc=InputDocumentation(doc="Set logging level (debug, info, warning, error,\ncritical) (default: 'info')")), ToolInput(tag="in_log_file", input_type=File(optional=True), prefix="--logfile", doc=InputDocumentation(doc="Write log to file (default: -)")), ToolInput(tag="in_log_file_level", input_type=File(optional=True), prefix="--logfile-level", doc=InputDocumentation(doc="Log level for log file (default: 'debug')")), ToolInput(tag="in_log_command_max_lines", input_type=Int(optional=True), prefix="--log-command-max-lines", doc=InputDocumentation(doc="Limit lines emitted for commands executed (default: -)\n")), ToolInput(tag="in_recipe_folder", input_type=String(), position=0, doc=InputDocumentation(doc="Path to folder containing recipes (default: recipes/)\n(default: -)")), ToolInput(tag="in_config", input_type=String(), position=1, doc=InputDocumentation(doc="Path to Bioconda config (default: config.yml)\n(default: -)"))], outputs=[], container="quay.io/biocontainers/bioconda-utils:0.17.5--pyhdfd78af_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bioconda_Utils_Autobump_V0_1_0().translate("wdl")

