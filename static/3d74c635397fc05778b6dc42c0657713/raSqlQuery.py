from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, File, Int

Rasqlquery_V0_1_0 = CommandToolBuilder(tool="raSqlQuery", base_command=["raSqlQuery"], inputs=[ToolInput(tag="in_add_file", input_type=Boolean(optional=True), prefix="-addFile", doc=InputDocumentation(doc="- Add 'file' field to say where record is defined")), ToolInput(tag="in_add_db", input_type=Boolean(optional=True), prefix="-addDb", doc=InputDocumentation(doc="- Add 'db' field to say where record is defined")), ToolInput(tag="in_strict", input_type=Boolean(optional=True), prefix="-strict", doc=InputDocumentation(doc="- Used only with db option.  Only report tracks that exist in db")), ToolInput(tag="in_key", input_type=String(optional=True), prefix="-key", doc=InputDocumentation(doc="- Use the as the key field for merges and parenting. Default name")), ToolInput(tag="in_parent", input_type=Boolean(optional=True), prefix="-parent", doc=InputDocumentation(doc="- Merge together inheriting on parentField")), ToolInput(tag="in_parent_field", input_type=String(optional=True), prefix="-parentField", doc=InputDocumentation(doc="- Use field as the one that tells us who is our parent. Default subTrack")), ToolInput(tag="in_override_needed", input_type=Boolean(optional=True), prefix="-overrideNeeded", doc=InputDocumentation(doc="- If set records are only overridden field-by-field by later records\nif 'override' follows the track name. Otherwiser later record replaces\nearlier record completely.  If not set all records overridden field by field")), ToolInput(tag="in_no_inherit_field", input_type=String(optional=True), prefix="-noInheritField", doc=InputDocumentation(doc="- If field is present don't inherit fields from parent")), ToolInput(tag="in_merge", input_type=Boolean(optional=True), prefix="-merge", doc=InputDocumentation(doc="- If there are multiple raFiles, records with the same keyField will be\nmerged together with fields in later files overriding fields in earlier files")), ToolInput(tag="in_restrict", input_type=File(optional=True), prefix="-restrict", doc=InputDocumentation(doc="- restrict output to only ones with keys in file.")), ToolInput(tag="in_db", input_type=Int(optional=True), prefix="-db", doc=InputDocumentation(doc="- Acts on trackDb files for the given database.  Sets up list of files\nappropriately and sets parent, merge, and override all.\nUse db=all for all databases\n"))], outputs=[ToolOutput(tag="out_restrict", output_type=File(optional=True), selector=InputSelector(input_to_select="in_restrict", type_hint=File()), doc=OutputDocumentation(doc="- restrict output to only ones with keys in file."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Rasqlquery_V0_1_0().translate("wdl", allow_empty_container=True)

