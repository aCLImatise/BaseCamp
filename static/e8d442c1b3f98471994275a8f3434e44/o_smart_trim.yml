!Command
positional: []
named:
- !Flag
  description: Even if there is only one read that is too short and therefore full
    of gap characters, the first location in the alignment file that *every* read
    has a base would have to match the length of that short read. With this percentage
    you can specify what is the percentage of reads you expect to pass while this
    trimming script tries to maximize the remaining read length after trimming. Default
    is 95.00
  synonyms:
  - --min-percent
  args: !SimpleFlagArg
    name: PERCENT
  optional: true
- !Flag
  description: Trim from the end of the file
  synonyms:
  - -E
  - --from-end
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Trim from the beginning of the file
  synonyms:
  - -S
  - --from-start
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Output file name
  synonyms:
  - -o
  - --output
  args: !SimpleFlagArg
    name: OUTPUT
  optional: true
command:
- o-smart-trim
parent:
subcommands: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: o-smart-trim [-h] [--min-percent PERCENT] [-E] [-S] [-o OUTPUT]\n\
  \                    FASTA FILE\n\nSmart trim ragged ends of an alignment\n\npositional\
  \ arguments:\n  FASTA FILE            Alignment to be trimmed\n\noptional arguments:\n\
  \  -h, --help            show this help message and exit\n  --min-percent PERCENT\n\
  \                        Even if there is only one read that is too short and\n\
  \                        therefore full of gap characters, the first location\n\
  \                        in the alignment file that *every* read has a base\n  \
  \                      would have to match the length of that short read.\n    \
  \                    With this percentage you can specify what is the\n        \
  \                percentage of reads you expect to pass while this\n           \
  \             trimming script tries to maximize the remaining read\n           \
  \             length after trimming. Default is 95.00\n  -E, --from-end        Trim\
  \ from the end of the file\n  -S, --from-start      Trim from the beginning of the\
  \ file\n  -o OUTPUT, --output OUTPUT\n                        Output file name\n"
generated_using:
- --help
