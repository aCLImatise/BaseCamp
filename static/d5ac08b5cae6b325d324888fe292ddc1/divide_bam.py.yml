!Command
command:
- divide_bam.py
positional: []
named:
- !Flag
  description: "Alignment file in BAM format. BAM file should be\nsorted and indexed."
  synonyms:
  - -i
  - --input-file
  args: !SimpleFlagArg
    name: INPUT_FILE
  optional: true
- !Flag
  description: Number of small BAM files
  synonyms:
  - -n
  - --subset-num
  args: !SimpleFlagArg
    name: SUBSET_NUM
  optional: true
- !Flag
  description: Prefix of output BAM files. Output "Prefix_num.bam".
  synonyms:
  - -o
  - --out-prefix
  args: !SimpleFlagArg
    name: OUTPUT_PREFIX
  optional: true
- !Flag
  description: Skip unmapped reads.
  synonyms:
  - -s
  - --skip-unmap
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: show program's version number and exit
  synonyms:
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "Usage: divide_bam.py [options]\n\nEqually divide BAM file (m alignments)\
  \ into n parts. Each part contains roughly m/n alignments\nthat are randomly sampled\
  \ from total alignments. \n\n\n\nOptions:\n  --version             show program's\
  \ version number and exit\n  -h, --help            show this help message and exit\n\
  \  -i INPUT_FILE, --input-file=INPUT_FILE\n                        Alignment file\
  \ in BAM format. BAM file should be\n                        sorted and indexed.\n\
  \  -n SUBSET_NUM, --subset-num=SUBSET_NUM\n                        Number of small\
  \ BAM files\n  -o OUTPUT_PREFIX, --out-prefix=OUTPUT_PREFIX\n                  \
  \      Prefix of output BAM files. Output \"Prefix_num.bam\".\n  -s, --skip-unmap\
  \      Skip unmapped reads.\n"
generated_using:
- --help
