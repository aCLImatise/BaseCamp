from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Int, String

Metabat2_V0_1_0 = CommandToolBuilder(tool="metabat2", base_command=["metabat2"], inputs=[ToolInput(tag="in_i", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="[ --inFile ] arg               Contigs in (gzipped) fasta file format [Mandatory]")), ToolInput(tag="in_arg_base_file", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="[ --outFile ] arg              Base file name and path for each bin. The default output is fasta format.\nUse -l option to output only contig names [Mandatory].")), ToolInput(tag="in_arg_file_having", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="[ --abdFile ] arg              A file having mean and variance of base coverage depth (tab delimited;\nthe first column should be contig names, and the first row will be\nconsidered as the header and be skipped) [Optional].")), ToolInput(tag="in_arg_minimum_size_contig", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="[ --minContig ] arg (=2500)    Minimum size of a contig for binning (should be >=1500).")), ToolInput(tag="in_maxp", input_type=Int(optional=True), prefix="--maxP", doc=InputDocumentation(doc="(=95)                  Percentage of 'good' contigs considered for binning decided by connection\namong contigs. The greater, the more sensitive.")), ToolInput(tag="in_mins", input_type=Int(optional=True), prefix="--minS", doc=InputDocumentation(doc="(=60)                  Minimum score of a edge for binning (should be between 1 and 99). The\ngreater, the more specific.")), ToolInput(tag="in_max_edges", input_type=Int(optional=True), prefix="--maxEdges", doc=InputDocumentation(doc="(=200)             Maximum number of edges per node. The greater, the more sensitive.")), ToolInput(tag="in_p_tnf", input_type=Int(optional=True), prefix="--pTNF", doc=InputDocumentation(doc="(=0)                   TNF probability cutoff for building TNF graph. Use it to skip the\npreparation step. (0: auto).")), ToolInput(tag="in_no_add", input_type=Boolean(optional=True), prefix="--noAdd", doc=InputDocumentation(doc="Turning off additional binning for lost or small contigs.")), ToolInput(tag="in_cv_ext", input_type=Boolean(optional=True), prefix="--cvExt", doc=InputDocumentation(doc="When a coverage file without variance (from third party tools) is used\ninstead of abdFile from jgi_summarize_bam_contig_depths.")), ToolInput(tag="in_arg_mean_coverage", input_type=Boolean(optional=True), prefix="-x", doc=InputDocumentation(doc="[ --minCV ] arg (=1)           Minimum mean coverage of a contig in each library for binning.")), ToolInput(tag="in_min_cvs_um", input_type=Int(optional=True), prefix="--minCVSum", doc=InputDocumentation(doc="(=1)               Minimum total effective mean coverage of a contig (sum of depth over\nminCV) for binning.")), ToolInput(tag="in_arg_minimum_size_bin", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="[ --minClsSize ] arg (=200000) Minimum size of a bin as the output.")), ToolInput(tag="in_arg_number_use", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="[ --numThreads ] arg (=0)      Number of threads to use (0: use all cores).")), ToolInput(tag="in_output_only_sequence", input_type=Boolean(optional=True), prefix="-l", doc=InputDocumentation(doc="[ --onlyLabel ]                Output only sequence labels as a list in a column without sequences.")), ToolInput(tag="in_save_cls", input_type=Boolean(optional=True), prefix="--saveCls", doc=InputDocumentation(doc="Save cluster memberships as a matrix format")), ToolInput(tag="in_unbinned", input_type=Boolean(optional=True), prefix="--unbinned", doc=InputDocumentation(doc="Generate [outFile].unbinned.fa file for unbinned contigs")), ToolInput(tag="in_no_bin_out", input_type=Boolean(optional=True), prefix="--noBinOut", doc=InputDocumentation(doc="No bin output. Usually combined with --saveCls to check only contig")), ToolInput(tag="in__debug_output", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc="[ --debug ]                    Debug output")), ToolInput(tag="in__verbose_output", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="[ --verbose ]                  Verbose output")), ToolInput(tag="in_memberships", input_type=String(), position=0, doc=InputDocumentation(doc="--seed arg (=0)                   For exact reproducibility. (0: use random seed)"))], outputs=[ToolOutput(tag="out_arg_base_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_arg_base_file", type_hint=File()), doc=OutputDocumentation(doc="[ --outFile ] arg              Base file name and path for each bin. The default output is fasta format.\nUse -l option to output only contig names [Mandatory]."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Metabat2_V0_1_0().translate("wdl", allow_empty_container=True)

