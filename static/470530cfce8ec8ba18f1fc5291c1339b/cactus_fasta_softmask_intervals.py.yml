!Command
command:
- cactus_fasta_softmask_intervals.py
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - --chrom
  description: "copy (and mask) only the specified sequence(s)\n<sequence_names> is\
    \ a comma-separated list\n(default is to copy and mask all sequences)"
  args: !SimpleFlagArg
    name: sequence_names
- !Flag
  optional: true
  synonyms:
  - --origin
  description: "intervals are origin-one, closed\n(default is origin-zero, half-open)"
  args: !SimpleFlagArg
    name: one
- !Flag
  optional: true
  synonyms:
  - --wrap
  description: "split each sequence into multiple lines if needed\n(default is to\
    \ write sequence on a single line)"
  args: !SimpleFlagArg
    name: line_length
- !Flag
  optional: true
  synonyms:
  - --mask
  description: "mask with a particular character (usually X or N)\n(default is to\
    \ mask with lowercase)"
  args: !SimpleFlagArg
    name: character
- !Flag
  optional: true
  synonyms:
  - --unmask
  description: "remove any previous softmasking from sequence being masked (covert\
    \ to upper case\nbefore masking)\n"
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "can't understand --help\ncactus_fasta_softmask_intervals [options] < fasta_file\
  \ > fasta_file\n  Apply masking intervals to create a soft-masked fasta file.\n\n\
  \  options:\n    <intervals_file>          file containing a list of intervals to\
  \ be masked,\n                              in the form <chrom> <start> <end>; \
  \ --origin\n                              determines whether these are origin one\
  \ or zero\n    --chrom=<sequence_names>  copy (and mask) only the specified sequence(s)\n\
  \                              <sequence_names> is a comma-separated list\n    \
  \                          (default is to copy and mask all sequences)\n    --origin=one\
  \              intervals are origin-one, closed\n                              (default\
  \ is origin-zero, half-open)\n    --wrap=<line_length>      split each sequence\
  \ into multiple lines if needed\n                              (default is to write\
  \ sequence on a single line)\n    --mask=<character>        mask with a particular\
  \ character (usually X or N)\n                              (default is to mask\
  \ with lowercase)\n    --unmask                  remove any previous softmasking\
  \ from sequence being masked (covert to upper case\n                           \
  \   before masking)                       \n                              \n"
generated_using:
- --help
docker_image:
