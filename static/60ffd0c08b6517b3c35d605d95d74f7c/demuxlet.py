from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File

Demuxlet_V0_1_0 = CommandToolBuilder(tool="demuxlet", base_command=["demuxlet"], inputs=[ToolInput(tag="in_sam", input_type=Boolean(optional=True), prefix="--sam", doc=InputDocumentation(doc="[STR: ]             : Input SAM/BAM/CRAM file. Must be sorted by coordinates and indexed")), ToolInput(tag="in_tag_group", input_type=Boolean(optional=True), prefix="--tag-group", doc=InputDocumentation(doc="[STR: CB]           : Tag representing readgroup or cell barcodes, in the case to partition the BAM file into multiple groups. For 10x genomics, use CB")), ToolInput(tag="in_tag_umi", input_type=Boolean(optional=True), prefix="--tag-UMI", doc=InputDocumentation(doc="[STR: UB]           : Tag representing UMIs. For 10x genomiucs, use UB")), ToolInput(tag="in_vcf", input_type=Boolean(optional=True), prefix="--vcf", doc=InputDocumentation(doc="[STR: ]             : Input VCF/BCF file, containing the individual genotypes (GT), posterior probability (GP), or genotype likelihood (PL)")), ToolInput(tag="in_field", input_type=Boolean(optional=True), prefix="--field", doc=InputDocumentation(doc="[STR: GP]           : FORMAT field to extract the genotype, likelihood, or posterior from")), ToolInput(tag="in_geno_error", input_type=Boolean(optional=True), prefix="--geno-error", doc=InputDocumentation(doc="[FLT: 0.01]         : Genotype error rate (must be used with --field GT)")), ToolInput(tag="in_min_mac", input_type=Boolean(optional=True), prefix="--min-mac", doc=InputDocumentation(doc="[INT: 1]            : Minimum minor allele frequency")), ToolInput(tag="in_min_call_rate", input_type=Boolean(optional=True), prefix="--min-callrate", doc=InputDocumentation(doc="[FLT: 0.50]         : Minimum call rate")), ToolInput(tag="in_sm", input_type=Boolean(optional=True), prefix="--sm", doc=InputDocumentation(doc="[V_STR: ]           : List of sample IDs to compare to (default: use all)")), ToolInput(tag="in_sm_list", input_type=Boolean(optional=True), prefix="--sm-list", doc=InputDocumentation(doc="[STR: ]             : File containing the list of sample IDs to compare")), ToolInput(tag="in_out", input_type=File(optional=True), prefix="--out", doc=InputDocumentation(doc="[STR: ]             : Output file prefix")), ToolInput(tag="in_alpha", input_type=Boolean(optional=True), prefix="--alpha", doc=InputDocumentation(doc="[V_FLT: ]           : Grid of alpha to search for (default is 0, 0.5)")), ToolInput(tag="in_write_pair", input_type=Boolean(optional=True), prefix="--write-pair", doc=InputDocumentation(doc="[FLG: OFF]          : Writing the (HUGE) pair file")), ToolInput(tag="in_doublet_prior", input_type=Boolean(optional=True), prefix="--doublet-prior", doc=InputDocumentation(doc="[FLT: 0.50]         : Prior of doublet")), ToolInput(tag="in_sam_verbose", input_type=Boolean(optional=True), prefix="--sam-verbose", doc=InputDocumentation(doc="[INT: 1000000]      : Verbose message frequency for SAM/BAM/CRAM")), ToolInput(tag="in_vcf_verbose", input_type=Boolean(optional=True), prefix="--vcf-verbose", doc=InputDocumentation(doc="[INT: 10000]        : Verbose message frequency for VCF/BCF")), ToolInput(tag="in_cap_bq", input_type=Boolean(optional=True), prefix="--cap-BQ", doc=InputDocumentation(doc="[INT: 40]           : Maximum base quality (higher BQ will be capped)")), ToolInput(tag="in_min_bq", input_type=Boolean(optional=True), prefix="--min-BQ", doc=InputDocumentation(doc="[INT: 13]           : Minimum base quality to consider (lower BQ will be skipped)")), ToolInput(tag="in_min_mq", input_type=Boolean(optional=True), prefix="--min-MQ", doc=InputDocumentation(doc="[INT: 20]           : Minimum mapping quality to consider (lower MQ will be ignored)")), ToolInput(tag="in_min_td", input_type=Boolean(optional=True), prefix="--min-TD", doc=InputDocumentation(doc="[INT: 0]            : Minimum distance to the tail (lower will be ignored)")), ToolInput(tag="in_excl_flag", input_type=Boolean(optional=True), prefix="--excl-flag", doc=InputDocumentation(doc="[INT: 3844]         : SAM/BAM FLAGs to be excluded")), ToolInput(tag="in_group_list", input_type=Boolean(optional=True), prefix="--group-list", doc=InputDocumentation(doc="[STR: ]             : List of tag readgroup/cell barcode to consider in this run. All other barcodes will be ignored. This is useful for parallelized run")), ToolInput(tag="in_min_total", input_type=Boolean(optional=True), prefix="--min-total", doc=InputDocumentation(doc="[INT: 0]            : Minimum number of total reads for a droplet/cell to be considered")), ToolInput(tag="in_min_uniq", input_type=Boolean(optional=True), prefix="--min-uniq", doc=InputDocumentation(doc="[INT: 0]            : Minimum number of unique reads (determined by UMI/SNP pair) for a droplet/cell to be considered")), ToolInput(tag="in_min_snp", input_type=Boolean(optional=True), prefix="--min-snp", doc=InputDocumentation(doc="[INT: 0]            : Minimum number of SNPs with coverage for a droplet/cell to be considered"))], outputs=[ToolOutput(tag="out_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out", type_hint=File()), doc=OutputDocumentation(doc="[STR: ]             : Output file prefix"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Demuxlet_V0_1_0().translate("wdl", allow_empty_container=True)

