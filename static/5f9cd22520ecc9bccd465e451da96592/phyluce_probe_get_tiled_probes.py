from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Int, Boolean

Phyluce_Probe_Get_Tiled_Probes_V0_1_0 = CommandToolBuilder(tool="phyluce_probe_get_tiled_probes", base_command=["phyluce_probe_get_tiled_probes"], inputs=[ToolInput(tag="in_input", input_type=File(optional=True), prefix="--input", doc=InputDocumentation(doc="The path to the input file")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="The path to the output file")), ToolInput(tag="in_probe_prefix", input_type=String(optional=True), prefix="--probe-prefix", doc=InputDocumentation(doc="The prefix (e.g. 'uce-') to add to all probes designed")), ToolInput(tag="in_designer", input_type=String(optional=True), prefix="--designer", doc=InputDocumentation(doc="Your last name (to indicate who designed the probes)")), ToolInput(tag="in_design", input_type=String(optional=True), prefix="--design", doc=InputDocumentation(doc="The design name.")), ToolInput(tag="in_probe_length", input_type=Int(optional=True), prefix="--probe-length", doc=InputDocumentation(doc="The length of the probes sequence to design")), ToolInput(tag="in_tiling_density", input_type=String(optional=True), prefix="--tiling-density", doc=InputDocumentation(doc="The tiling density")), ToolInput(tag="in_overlap", input_type=String(optional=True), prefix="--overlap", doc=InputDocumentation(doc="The method of tiling")), ToolInput(tag="in_probe_bed", input_type=File(optional=True), prefix="--probe-bed", doc=InputDocumentation(doc="The path to an output file for outputting the probe\ncoordinates in BED format")), ToolInput(tag="in_locus_bed", input_type=File(optional=True), prefix="--locus-bed", doc=InputDocumentation(doc="The path to an output file for outputting the locus\ncoordinates in BED format")), ToolInput(tag="in_masking", input_type=String(optional=True), prefix="--masking", doc=InputDocumentation(doc="The maximum frequency of per-probe masking allowed\ncontaining the sequence")), ToolInput(tag="in_do_not_remove_ambiguous", input_type=Boolean(optional=True), prefix="--do-not-remove-ambiguous", doc=InputDocumentation(doc="Do not remove loci with probes containing ambiguous\nbases")), ToolInput(tag="in_remove_gc", input_type=Boolean(optional=True), prefix="--remove-gc", doc=InputDocumentation(doc="Remove loci with GC content outside 30 <= GC <= 70")), ToolInput(tag="in_start_index", input_type=Int(optional=True), prefix="--start-index", doc=InputDocumentation(doc="The starting UCE index number to use.")), ToolInput(tag="in_two_probes", input_type=Boolean(optional=True), prefix="--two-probes", doc=InputDocumentation(doc="Design only two probes for a given locus."))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="The path to the output file")), ToolOutput(tag="out_probe_bed", output_type=File(optional=True), selector=InputSelector(input_to_select="in_probe_bed", type_hint=File()), doc=OutputDocumentation(doc="The path to an output file for outputting the probe\ncoordinates in BED format")), ToolOutput(tag="out_locus_bed", output_type=File(optional=True), selector=InputSelector(input_to_select="in_locus_bed", type_hint=File()), doc=OutputDocumentation(doc="The path to an output file for outputting the locus\ncoordinates in BED format"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Phyluce_Probe_Get_Tiled_Probes_V0_1_0().translate("wdl", allow_empty_container=True)

