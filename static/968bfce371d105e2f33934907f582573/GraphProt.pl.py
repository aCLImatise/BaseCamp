from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int

Graphprot_Pl_V0_1_0 = CommandToolBuilder(tool="GraphProt.pl", base_command=["GraphProt.pl"], inputs=[ToolInput(tag="in_mode", input_type=Boolean(optional=True), prefix="-mode", doc=InputDocumentation(doc="'regression' or 'classification'\ndefault: classification")), ToolInput(tag="in_action", input_type=Boolean(optional=True), prefix="-action", doc=InputDocumentation(doc="what should GraphProt do?\nls: optimize parameters\ncv: run a crossvalidation\ntrain: train a model\npredict: predict binding for a whole site\npredict_profile: predict binding profiles\npredict_has: predict high-affinity sites\nmotif: create sequence and structure motifs given a model")), ToolInput(tag="in_only_seq", input_type=Boolean(optional=True), prefix="-onlyseq", doc=InputDocumentation(doc="use GraphProt sequence models")), ToolInput(tag="in_prefix", input_type=Boolean(optional=True), prefix="-prefix", doc=InputDocumentation(doc="this prefix is used for all results\ndefault: GraphProt")), ToolInput(tag="in_model", input_type=Boolean(optional=True), prefix="-model", doc=InputDocumentation(doc="GraphProt model")), ToolInput(tag="in_fast_a", input_type=Boolean(optional=True), prefix="-fasta", doc=InputDocumentation(doc="fasta file containing binding sites")), ToolInput(tag="in_man", input_type=Boolean(optional=True), prefix="-man", doc=InputDocumentation(doc="full documentation")), ToolInput(tag="in_params", input_type=Boolean(optional=True), prefix="-params", doc=InputDocumentation(doc="parameter config file created by -action ls, alternatively\nuse the following options to manually enter the desired\nparameters")), ToolInput(tag="in_abstraction", input_type=Int(optional=True), prefix="-abstraction", doc=InputDocumentation(doc="abstraction level [RNA structure graphs]\ndefault: 3")), ToolInput(tag="in_graphprot_radiusdefault", input_type=Boolean(optional=True), prefix="-R", doc=InputDocumentation(doc="GraphProt radius\ndefault: 1")), ToolInput(tag="in_graphprot_distancedefault", input_type=Boolean(optional=True), prefix="-D", doc=InputDocumentation(doc="GraphProt distance\ndefault: 4")), ToolInput(tag="in_bit_size", input_type=Boolean(optional=True), prefix="-bitsize", doc=InputDocumentation(doc="GraphProt bitsize used for feature encoding\ndefault: 14")), ToolInput(tag="in_neg_fast_a", input_type=Boolean(optional=True), prefix="-negfasta", doc=InputDocumentation(doc="fasta file containing negative class sequences")), ToolInput(tag="in_lambda", input_type=Boolean(optional=True), prefix="-lambda", doc=InputDocumentation(doc="SGD parameter lambda  [classification]\ndefault: 10e-4")), ToolInput(tag="in_epochs", input_type=Boolean(optional=True), prefix="-epochs", doc=InputDocumentation(doc="SGD parameter epochs  [classification]\ndefault: 10")), ToolInput(tag="in_affinities", input_type=Boolean(optional=True), prefix="-affinities", doc=InputDocumentation(doc="list of affinities\none value per line, same order as binding sites (fasta)")), ToolInput(tag="in_svr_parameter_c", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="SVR parameter c       [regression]\ndefault: 1")), ToolInput(tag="in_epsilon", input_type=Boolean(optional=True), prefix="-epsilon", doc=InputDocumentation(doc="SVR parameter epsilon [regression]\ndefault: 0.1")), ToolInput(tag="in_percentile", input_type=Boolean(optional=True), prefix="-percentile", doc=InputDocumentation(doc="keep only regions with average score above a percentile\nas high-affinity sites\ndefault: 99")), ToolInput(tag="in_motif_len", input_type=Boolean(optional=True), prefix="-motif_len", doc=InputDocumentation(doc="set length of motifs\n(default: 12)")), ToolInput(tag="in_motif_top_n", input_type=Int(optional=True), prefix="-motif_top_n", doc=InputDocumentation(doc="use n top-scoring subsequences for motif creation\n(default: 1000)\n"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Graphprot_Pl_V0_1_0().translate("wdl", allow_empty_container=True)

