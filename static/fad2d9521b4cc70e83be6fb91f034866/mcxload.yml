!Command
positional: []
named:
- !Flag
  description: ''
  synonyms:
  - -abc
  args: !SimpleFlagArg
    name: fname
  optional: true
- !Flag
  description: ''
  synonyms:
  - -o
  args: !SimpleFlagArg
    name: fname
  optional: true
command:
- mcxload
parent:
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "Usage: mcxload -abc <fname> -o <fname> [options]\nall file names use -\
  \ to indicate stdin/stdout\n\n-abc <fname>                         input file in\
  \ abc format\n-123 <fname>                         input file in 123 format\n-etc\
  \ <fname>                         input file in etc format\n-etc-ai <fname>    \
  \                  input file in etc format, auto-increment columns\n-sif <fname>\
  \                         input file in sif format\n-235 <fname>               \
  \          input file in numerical etc format\n-235-ai <fname>                 \
  \     input file in numerical etc format, auto-increment columns\n-packed <fname>\
  \                      input file in packed format\n-pack-cnum <num>           \
  \          Number of columns\n-pack-rnum <num>                     Number of rows\n\
  --stream-mirror                      add y -> x when x -> y\n--stream-split    \
  \                   assume two independent domains (e.g. bipartite graph)\n-o <fname>\
  \                           output matrix to file <fname>\n\n-strict-tab <fname>\
  \                  use dom tab in file <fname>, die on miss\n-restrict-tab <fname>\
  \                use dom tab in file <fname>, ignore miss\n-extend-tab <fname> \
  \                 use dom tab in file <fname>, extend if necessary\n-write-tab <fname>\
  \                   output domain tab to file <fname>\n-123-max <num>          \
  \             set column and row ranges with -123 option\n-strict-tabc <fname> \
  \                use col tab in file <fname>, die on miss\n-restrict-tabc <fname>\
  \               use col tab in file <fname>, ignore miss\n-extend-tabc <fname> \
  \                use col tab in file <fname>, extend if necessary\n-write-tabc <fname>\
  \                  output column tab to file <fname>\n-123-maxc <num>          \
  \            set column range with -123 option\n-strict-tabr <fname>           \
  \      use row tab in file <fname>, die on miss\n-restrict-tabr <fname>        \
  \       use row tab in file <fname>, ignore miss\n-extend-tabr <fname>         \
  \        use row tab in file <fname>, extend if necessary\n-write-tabr <fname> \
  \                 output row tab to file <fname>\n-123-maxr <num>              \
  \        set row range with -123 option\n-re <max|min|add|first|last>         deduplicate\
  \ repeated entries\n-stream-tf <func(arg)[, func(arg)]*> apply unary transformations\
  \ to stream values\n-tf <func(arg)[, func(arg)]*>        apply unary transformations\
  \ to matrix\n--stream-log                         take log of stream value\n--stream-neg-log\
  \                     take negative log of stream value\n--stream-neg-log10    \
  \               take negative log-10 of stream value\n--expect-values          \
  \            accept extended SIF or ETC format (label:weight fields)\n-ri <max|min|add|mul>\
  \                combine input matrix with its transpose\n--transpose          \
  \                transpose result\n--write-binary                       output matrix\
  \ in binary format\n--debug                              debug\n-h             \
  \                      print this help\n--help                               print\
  \ this help\n--version                            print version information\n"
generated_using:
- --help
