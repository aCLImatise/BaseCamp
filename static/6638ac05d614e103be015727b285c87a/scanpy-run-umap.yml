!Command
positional:
- !Positional
  description: ''
  position: 0
  name: input_obj
  optional: false
- !Positional
  description: ''
  position: 1
  name: output_obj
  optional: false
named:
- !Flag
  description: '[anndata|loom] Input object format.  [default: anndata]'
  synonyms:
  - -f
  - --input-format
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '[anndata|loom|zarr] Output object format.  [default: anndata]'
  synonyms:
  - -F
  - --output-format
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Chunk size for writing output in zarr format.  [default: 1000]'
  synonyms:
  - -z
  - --zarr-chunk-size
  args: !SimpleFlagArg
    name: INTEGER
  optional: true
- !Flag
  description: When specified, using it as prefix for exporting mtx files. If not
    empty and not ending with "/" or "_", a "_" will be appended.
  synonyms:
  - -X
  - --export-mtx
  args: !SimpleFlagArg
    name: PATH
  optional: true
- !Flag
  description: '[stdout|stderr]      Print output object summary info to specified
    stream.'
  synonyms:
  - --show-obj
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Slot name under `.uns` that contains the KNN graph of which sparse
    adjacency matrix is used for clustering.  [default: neighbors]'
  synonyms:
  - --use-graph
  args: !SimpleFlagArg
    name: TEXT
  optional: true
- !Flag
  description: 'Seed for random number generator.  [default: 0]'
  synonyms:
  - -S
  - --random-state
  args: !SimpleFlagArg
    name: INTEGER
  optional: true
- !Flag
  description: Key under which to add the computed results
  synonyms:
  - --key-added
  args: !OptionalFlagArg
    names:
    - TEXT
    - TEXT...
    separator: ','
  optional: true
- !Flag
  description: Export embeddings in a tab-separated text table.
  synonyms:
  - -E
  - --export-embedding
  args: !SimpleFlagArg
    name: FILE
  optional: true
- !Flag
  description: 'How to initialize the low dimensional embedding. Can be "spectral",
    "paga" or "random", or any key of `.obsm`.  [default: spectral]'
  synonyms:
  - --init-pos
  args: !SimpleFlagArg
    name: TEXT
  optional: true
- !Flag
  description: 'The effective minimum distance between embedded points. Smaller values
    will result in a more clustered embedding, while larger values will results in
    a more even dispersal of points.  [default: 0.5]'
  synonyms:
  - --min-dist
  args: !SimpleFlagArg
    name: FLOAT
  optional: true
- !Flag
  description: 'The effective scale of embedded points, which determines the scale
    at which embedded points will be spread out.  [default: 1.0]'
  synonyms:
  - --spread
  args: !SimpleFlagArg
    name: FLOAT
  optional: true
- !Flag
  description: 'The number of dimensions of the embedding. [default: 2]'
  synonyms:
  - --n-components
  args: !SimpleFlagArg
    name: INTEGER
  optional: true
- !Flag
  description: The number of iterations of the optimization.
  synonyms:
  - --maxiter
  args: !SimpleFlagArg
    name: INTEGER
  optional: true
- !Flag
  description: 'The initial learning rate for the embedding optimization.  [default:
    1.0]'
  synonyms:
  - --alpha
  args: !SimpleFlagArg
    name: FLOAT
  optional: true
- !Flag
  description: 'Weighting applied to negative samples in low dimensional embedding
    optimization. [default: 1.0]'
  synonyms:
  - --gamma
  args: !SimpleFlagArg
    name: FLOAT
  optional: true
- !Flag
  description: 'The number of negative edge samples to use per positive edge sample
    in optimizing the low dimensional embedding.  [default: 5]'
  synonyms:
  - --negative-sample-rate
  args: !SimpleFlagArg
    name: INTEGER
  optional: true
command:
- scanpy-run-umap
parent:
subcommands: []
help_flag: !Flag
  description: Show this message and exit.
  synonyms:
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "Usage: scanpy-run-umap [OPTIONS] <input_obj> <output_obj>\n\n  Embed the\
  \ neighborhood graph using UMAP.\n\n  <input_obj>:   input file in format specfied\
  \ by --input-format\n  <output_obj>:  output file in format specfied by --output-format\n\
  \nOptions:\n  -f, --input-format [anndata|loom]\n                              \
  \    Input object format.  [default: anndata]\n  -F, --output-format [anndata|loom|zarr]\n\
  \                                  Output object format.  [default: anndata]\n \
  \ -z, --zarr-chunk-size INTEGER   Chunk size for writing output in zarr\n      \
  \                            format.  [default: 1000]\n\n  -X, --export-mtx PATH\
  \           When specified, using it as prefix for\n                           \
  \       exporting mtx files. If not empty and not\n                            \
  \      ending with \"/\" or \"_\", a \"_\" will be\n                           \
  \       appended.\n\n  --show-obj [stdout|stderr]      Print output object summary\
  \ info to\n                                  specified stream.\n\n  --use-graph\
  \ TEXT                Slot name under `.uns` that contains the KNN\n           \
  \                       graph of which sparse adjacency matrix is\n            \
  \                      used for clustering.  [default: neighbors]\n\n  -S, --random-state\
  \ INTEGER      Seed for random number generator.  [default:\n                  \
  \                0]\n\n  --key-added TEXT[,TEXT...]      Key under which to add\
  \ the computed results\n  -E, --export-embedding FILE     Export embeddings in a\
  \ tab-separated text\n                                  table.\n\n  --init-pos TEXT\
  \                 How to initialize the low dimensional\n                      \
  \            embedding. Can be \"spectral\", \"paga\" or\n                     \
  \             \"random\", or any key of `.obsm`.  [default:\n                  \
  \                spectral]\n\n  --min-dist FLOAT                The effective minimum\
  \ distance between\n                                  embedded points. Smaller values\
  \ will result\n                                  in a more clustered embedding,\
  \ while larger\n                                  values will results in a more\
  \ even dispersal\n                                  of points.  [default: 0.5]\n\
  \n  --spread FLOAT                  The effective scale of embedded points,\n  \
  \                                which determines the scale at which embedded\n\
  \                                  points will be spread out.  [default: 1.0]\n\n\
  \  --n-components INTEGER          The number of dimensions of the embedding.\n\
  \                                  [default: 2]\n\n  --maxiter INTEGER         \
  \      The number of iterations of the\n                                  optimization.\n\
  \n  --alpha FLOAT                   The initial learning rate for the embedding\n\
  \                                  optimization.  [default: 1.0]\n\n  --gamma FLOAT\
  \                   Weighting applied to negative samples in low\n             \
  \                     dimensional embedding optimization.\n                    \
  \              [default: 1.0]\n\n  --negative-sample-rate INTEGER  The number of\
  \ negative edge samples to use\n                                  per positive edge\
  \ sample in optimizing the\n                                  low dimensional embedding.\
  \  [default: 5]\n\n  --help                          Show this message and exit.\n"
generated_using:
- --help
