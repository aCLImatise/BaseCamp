!Command
command:
- homGeneMapping
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - --halfile
  description: input hal file
  args: !SimpleFlagArg
    name: aln.hal
- !Flag
  optional: true
  synonyms:
  - --gtfs
  description: "a text file containing the locations of the input gene files\nand\
    \ optionally the hints files (both in GTF format).\nThe file is formatted as follows:\n\
    name_of_genome_1  path/to/genefile/of/genome_1  path/to/hintsfile/of/genome_1\n\
    name_of_genome_2  path/to/genefile/of/genome_2  path/to/hintsfile/of/genome_2\n\
    ...\nname_of_genome_N  path/to/genefile/of/genome_N  path/to/hintsfile/of/genome_N"
  args: !SimpleFlagArg
    name: gtffilenames.tbl
- !Flag
  optional: true
  synonyms:
  - --cpus
  description: 'N is the number of CPUs to use (default: 1)'
  args: !SimpleFlagArg
    name: N
- !Flag
  optional: true
  synonyms:
  - --noDupes
  description: 'do not map between duplications in hal graph. (default: off)'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --details
  description: 'print detailed output (default: off)'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --halLiftover_exec_dir
  description: "Directory that contains the executable halLiftover\nIf not specified\
    \ it must be in $PATH environment variable."
  args: !SimpleFlagArg
    name: DIR
- !Flag
  optional: true
  synonyms:
  - --unmapped
  description: "print a GTF attribute with a list of all genomes, that are not aligned\
    \ to the\ncorresponding gene feature, e.g. hgm_unmapped \"1,4,5\"; (default; off)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --tmpdir
  description: a temporary file directory that stores lifted over files. (default
    'tmp/' in current directory)
  args: !SimpleFlagArg
    name: DIR
- !Flag
  optional: true
  synonyms:
  - --outdir
  description: 'file directory that stores output gene files. (default: current directory)'
  args: !SimpleFlagArg
    name: DIR
- !Flag
  optional: true
  synonyms:
  - --printHomologs
  description: "prints disjunct sets of homologous transcripts to FILE, e.g.\n# 0\
    \     dana\n# 1     dere\n# 2     dgri\n# 3     dmel\n# 4     dmoj\n# 5     dper\n\
    (0,jg4139.t1) (0,jg4140.t1) (1,jg7797.t1) (2,jg3247.t1) (4,jg6720.t1) (5,jg313.t1)\n\
    (1,jg14269.t1) (3,jg89.t1) (5,jg290.t1)\n...\nTwo transcripts are in the same\
    \ set, if all their exons/introns are homologs and their are\nno additional exons/introns.\n\
    This option requires the Boost C++ Library"
  args: !SimpleFlagArg
    name: FILE
- !Flag
  optional: true
  synonyms:
  - --dbaccess
  description: "retrieve hints from an SQLite database. In order to set up a database\
    \ and populate it with hints\na separate tool 'load2sqlitedb' is provided. For\
    \ more information, see the documentation in\nREADME-cgp.txt (section 8a+b) in\
    \ the Augustus package. If both a database and hint files in 'gtffilenames.tbl'\n\
    are specified, hints are retrieved from both sources.\nThis option requires the\
    \ SQLite3 library."
  args: !SimpleFlagArg
    name: db
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - --help
  description: print this usage info
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "homGeneMapping takes a set of gene predictions of different genomes and\
  \ a hal\nalignment of the genomes and prints a summary for each gene, e.g.\n- how\
  \ many of its exons/introns are in agreement with genes of other genomes\n- how\
  \ many of its exons/introns are supported by extrinsic evidence from any of the\
  \ genomes\n- a list of geneids of homologous genes\n\nusage:\nhomGeneMapping [Options]\
  \ --gtfs=gffilenames.tbl --halfile=aln.hal\n\nARGUMENTS:\n--halfile=aln.hal    \
  \         input hal file\n--gtfs=gtffilenames.tbl       a text file containing the\
  \ locations of the input gene files\n                              and optionally\
  \ the hints files (both in GTF format).\n                              The file\
  \ is formatted as follows:\n\n                              name_of_genome_1  path/to/genefile/of/genome_1\
  \  path/to/hintsfile/of/genome_1\n                              name_of_genome_2\
  \  path/to/genefile/of/genome_2  path/to/hintsfile/of/genome_2\n               \
  \               ...\n                              name_of_genome_N  path/to/genefile/of/genome_N\
  \  path/to/hintsfile/of/genome_N\n\nOPTIONS:\n--help                        print\
  \ this usage info\n--cpus=N                      N is the number of CPUs to use\
  \ (default: 1)\n--noDupes                     do not map between duplications in\
  \ hal graph. (default: off)\n--details                     print detailed output\
  \ (default: off)\n--halLiftover_exec_dir=DIR    Directory that contains the executable\
  \ halLiftover\n                              If not specified it must be in $PATH\
  \ environment variable.\n--unmapped                    print a GTF attribute with\
  \ a list of all genomes, that are not aligned to the\n                         \
  \     corresponding gene feature, e.g. hgm_unmapped \"1,4,5\"; (default; off)\n\
  --tmpdir=DIR                  a temporary file directory that stores lifted over\
  \ files. (default 'tmp/' in current directory)\n--outdir=DIR                  file\
  \ directory that stores output gene files. (default: current directory)\n--printHomologs=FILE\
  \          prints disjunct sets of homologous transcripts to FILE, e.g.\n      \
  \                        # 0     dana\n                              # 1     dere\n\
  \                              # 2     dgri\n                              # 3 \
  \    dmel\n                              # 4     dmoj\n                        \
  \      # 5     dper\n                              (0,jg4139.t1) (0,jg4140.t1) (1,jg7797.t1)\
  \ (2,jg3247.t1) (4,jg6720.t1) (5,jg313.t1)\n                              (1,jg14269.t1)\
  \ (3,jg89.t1) (5,jg290.t1)\n                              ...\n                \
  \              Two transcripts are in the same set, if all their exons/introns are\
  \ homologs and their are\n                              no additional exons/introns.\n\
  \                              This option requires the Boost C++ Library\n--dbaccess=db\
  \                 retrieve hints from an SQLite database. In order to set up a database\
  \ and populate it with hints\n                              a separate tool 'load2sqlitedb'\
  \ is provided. For more information, see the documentation in\n                \
  \              README-cgp.txt (section 8a+b) in the Augustus package. If both a\
  \ database and hint files in 'gtffilenames.tbl'\n                              are\
  \ specified, hints are retrieved from both sources.\n                          \
  \    This option requires the SQLite3 library.\n\nexample:\nhomGeneMapping --noDupes\
  \ --halLiftover_exec_dir=~/tools/progressiveCactus/submodules/hal/bin --gtfs=gtffilenames.tbl\
  \ --halfile=msca.hal\n\n"
generated_using:
- --help
docker_image: quay.io/biocontainers/augustus:3.4.0--pl526h0faeac2_0
