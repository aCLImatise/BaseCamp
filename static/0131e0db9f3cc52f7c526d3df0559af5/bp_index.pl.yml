!Command
command:
- bp_index.pl
positional:
- !Positional
  optional: false
  position: 0
  name: bioperl-l@bioperl.org
  description: '- General discussion'
named:
- !Flag
  optional: true
  synonyms:
  - -fmt
  description: <format>   - Fasta (default), swiss or EMBL
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -dir
  description: "<dir>      - directory where the index files are found\n(overrides\
    \ BIOPERL_INDEX environment variable)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -type
  description: "- DBM_file type.\n(overrides BIOPERL_INDEX_TYPE environment variable)"
  args: !SimpleFlagArg
    name: db_type
- !Flag
  optional: true
  synonyms:
  - -v
  description: '- report every index addition (debugging)'
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "NAME\n    bp_index.pl - indexes files for use by bp_fetch.pl\n\nSYNOPSIS\n\
  \    bp_index.pl index_name file1 file2 etc.\n\nDESCRIPTION\n    bp_index.pl builds\
  \ a bioperl index for the sequence files given in the\n    argument list, under\
  \ the index name. For example\n\n       bp_index.pl nrdb /data/nrdb/nrdb.fasta\n\
  \n    would build an index called 'nrdb' as the index name for the file\n    nrdb.fasta,\
  \ and\n\n       bp_index.pl -fmt EMBL swiss /data/swiss/*.dat\n\n    would build\
  \ an index called swiss for all the files in /data/swiss which\n    end in .dat\
  \ which are in EMBL format.\n\n    The indexes are built using the Bio/Index/* modules,\
  \ in particular,\n    Bio::Index::EMBL and the Bio::Index::Fasta modules. Any script\
  \ which\n    uses these modules can use the index. A good example script is bp_fetch\n\
  \    which fetches sequences and pipes them to STDOUT, for example\n\n       bp_fetch\
  \ swiss:ROA1_HUMAN\n\n    gets the ROA1_HUMAN sequence from the swiss index and\
  \ writes it as fasta\n    format on STDOUT.\n\nOPTIONS\n      -fmt  <format>   -\
  \ Fasta (default), swiss or EMBL\n      -dir  <dir>      - directory where the index\
  \ files are found\n                         (overrides BIOPERL_INDEX environment\
  \ variable)\n\n    Options for expert use\n\n      -type <db_type>  - DBM_file type.\
  \ \n                         (overrides BIOPERL_INDEX_TYPE environment variable)\n\
  \      -v               - report every index addition (debugging)\n\nENVIRONMENT\n\
  \    bp_index and bp_fetch coordinate where the databases lie using the\n    environment\
  \ variable BIOPERL_INDEX. This can be overridden using the\n    -dir option. There\
  \ is no default value, so you must use the -dir option\n    or set BIOPERL_INDEX.\n\
  \n    The DB type is coordinated with BIOPERL_INDEX_TYPE which if it is not\n  \
  \  there, defaults to whatever the bioperl modules have installed, which\n    itself\
  \ defaults to SDBM_File.\n\nUSING IT YOURSELF\n    bp_index.pl is a script that\
  \ drives the Index modules. If you want to\n    use this script heavily in your\
  \ work, if it is Perl based, it is almost\n    certainly better to look at the code\
  \ in this script and copy it across\n    (probably you will be more likely to want\
  \ to use the bp_fetch code).\n\nEXTENDING IT\n    bp_index is just a wrapper around\
  \ James Gilbert's excellent Index\n    modules found in bioperl\n\nFEEDBACK\n  Mailing\
  \ Lists\n    User feedback is an integral part of the evolution of this and other\n\
  \    Bioperl modules. Send your comments and suggestions preferably to the\n   \
  \ Bioperl mailing list. Your participation is much appreciated.\n\n      bioperl-l@bioperl.org\
  \                  - General discussion\n      http://bioperl.org/wiki/Mailing_lists\
  \  - About the mailing lists\n\n  Reporting Bugs\n    Report bugs to the Bioperl\
  \ bug tracking system to help us keep track of\n    the bugs and their resolution.\
  \ Bug reports can be submitted via the web:\n\n      https://github.com/bioperl/bioperl-live/issues\n\
  \nAUTHOR - Ewan Birney\n    Ewan Birney <birney@ebi.ac.uk>\n\n"
generated_using:
- --help
docker_image:
