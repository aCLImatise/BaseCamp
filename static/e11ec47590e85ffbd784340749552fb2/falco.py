from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Falco_V0_1_0 = CommandToolBuilder(tool="falco", base_command=["falco"], inputs=[ToolInput(tag="in_outdir", input_type=Boolean(optional=True), prefix="--outdir", doc=InputDocumentation(doc="Create all output files in the specified\noutput directory. If notprovided, files\nwill be created in the same directory as\nthe input file.")), ToolInput(tag="in_casa_va", input_type=Boolean(optional=True), prefix="--casava", doc=InputDocumentation(doc="Files come from raw casava output\n(currently ignored)")), ToolInput(tag="in_nano", input_type=Boolean(optional=True), prefix="--nano", doc=InputDocumentation(doc="Files come from fast5 nanopore sequences")), ToolInput(tag="in_no_filter", input_type=Boolean(optional=True), prefix="--nofilter", doc=InputDocumentation(doc="If running with --casava do not sequences\n(currently ignored)")), ToolInput(tag="in_no_extract", input_type=Boolean(optional=True), prefix="--noextract", doc=InputDocumentation(doc="If running with --casava do not remove poor\nquality sequences (currently ignored)")), ToolInput(tag="in_nogroup", input_type=Boolean(optional=True), prefix="--nogroup", doc=InputDocumentation(doc="Disable grouping of bases for reads >50bp")), ToolInput(tag="in_format", input_type=Boolean(optional=True), prefix="--format", doc=InputDocumentation(doc="Force file format")), ToolInput(tag="in_threads", input_type=Boolean(optional=True), prefix="--threads", doc=InputDocumentation(doc="Specifies number of threads to process\nsimultaneos files in parallel (currently\nset for compatibility with fastqc. Not yet\nsupported!)")), ToolInput(tag="in_nondefault_filer_list", input_type=Boolean(optional=True), prefix="--contaminants", doc=InputDocumentation(doc="Non-default filer with a list of")), ToolInput(tag="in_limits", input_type=Boolean(optional=True), prefix="--limits", doc=InputDocumentation(doc="Non-default file with limits and warn/fail")), ToolInput(tag="in_skip_html", input_type=Boolean(optional=True), prefix="--skip-html", doc=InputDocumentation(doc="Skip generating HTML file (Default = false)")), ToolInput(tag="in_skip_short_summary", input_type=Boolean(optional=True), prefix="--skip-short-summary", doc=InputDocumentation(doc="Skip short summary(Default = false)")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="print more run info")), ToolInput(tag="in_dir", input_type=Boolean(optional=True), prefix="--dir", doc=InputDocumentation(doc="directory in which to create temp files")), ToolInput(tag="in_advanced_mode", input_type=Boolean(optional=True), prefix="--advanced-mode", doc=InputDocumentation(doc="advanced mode: adds more information to the\nFastQC output depending on non-fastqc user\nflags")), ToolInput(tag="in_bisulfite", input_type=Boolean(optional=True), prefix="--bisulfite", doc=InputDocumentation(doc="reads are whole genome bisulfite\nsequencing, and more Ts and fewer Cs are\ntherefore expected and will be accounted\nfor in base content (advanced mode)")), ToolInput(tag="in_reverse_complement", input_type=Boolean(optional=True), prefix="--reverse-complement", doc=InputDocumentation(doc="The input is a reverse-complement. All\nmodules will be tested by swapping A/T and\nC/G")), ToolInput(tag="in_about", input_type=Boolean(optional=True), prefix="-about", doc=InputDocumentation(doc="print about message")), ToolInput(tag="in__adapters_nondefault", input_type=String(), position=0, doc=InputDocumentation(doc="-a, --adapters            Non-default file with a list of adapters ")), ToolInput(tag="in_criteria", input_type=String(), position=1, doc=InputDocumentation(doc="-T, --skip-text           Skip generating text file (Default = false) "))], outputs=[], container="quay.io/biocontainers/falco:0.2.4--h8e334b0_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Falco_V0_1_0().translate("wdl")

