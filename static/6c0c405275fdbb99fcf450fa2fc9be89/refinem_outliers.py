from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, String, Boolean, File

Refinem_Outliers_V0_1_0 = CommandToolBuilder(tool="refinem_outliers", base_command=["refinem", "outliers"], inputs=[ToolInput(tag="in_gc_perc", input_type=Int(optional=True), prefix="--gc_perc", doc=InputDocumentation(doc="percentile for identify scaffolds with divergent GC\ncontent (default: 98)")), ToolInput(tag="in_td_perc", input_type=Int(optional=True), prefix="--td_perc", doc=InputDocumentation(doc="percentile for identify scaffolds with divergent\ntetranucleotide signatures (default: 98)")), ToolInput(tag="in_cov_corr", input_type=Int(optional=True), prefix="--cov_corr", doc=InputDocumentation(doc="correlation for identifying scaffolds with divergent\ncoverage profiles (default: -2)")), ToolInput(tag="in_cov_perc", input_type=Int(optional=True), prefix="--cov_perc", doc=InputDocumentation(doc="mean absolute percent error for identifying scaffolds\nwith divergent coverage profiles (default: 50)")), ToolInput(tag="in_report_type", input_type=String(optional=True), prefix="--report_type", doc=InputDocumentation(doc="report sequences that are outliers in 'all' or 'any'\nreference distribution (default: any)")), ToolInput(tag="in_create_plots", input_type=Boolean(optional=True), prefix="--create_plots", doc=InputDocumentation(doc="create exploratory plots (currently unstable due to\nmpld3 limitations)")), ToolInput(tag="in_individual_plots", input_type=Boolean(optional=True), prefix="--individual_plots", doc=InputDocumentation(doc="create individual plots for each statistic")), ToolInput(tag="in_image_type", input_type=String(optional=True), prefix="--image_type", doc=InputDocumentation(doc="desired image type (default: png)")), ToolInput(tag="in_point_size", input_type=Int(optional=True), prefix="--point_size", doc=InputDocumentation(doc="desired size of points in scatterplot (default: 36)")), ToolInput(tag="in_highlight_file", input_type=File(optional=True), prefix="--highlight_file", doc=InputDocumentation(doc="file indicating scaffolds to highlight")), ToolInput(tag="in_links_file", input_type=File(optional=True), prefix="--links_file", doc=InputDocumentation(doc="file indicating pairs of scaffolds to join by a line")), ToolInput(tag="in_dpi", input_type=Int(optional=True), prefix="--dpi", doc=InputDocumentation(doc="desired DPI of output image (default: 96)")), ToolInput(tag="in_label_font_size", input_type=Int(optional=True), prefix="--label_font_size", doc=InputDocumentation(doc="desired font size for labels (default: 12)")), ToolInput(tag="in_tick_font_size", input_type=Int(optional=True), prefix="--tick_font_size", doc=InputDocumentation(doc="desired font size for tick markers (default: 10)")), ToolInput(tag="in_width", input_type=Int(optional=True), prefix="--width", doc=InputDocumentation(doc="width of output image (default: 12)")), ToolInput(tag="in_height", input_type=Int(optional=True), prefix="--height", doc=InputDocumentation(doc="height of output image (default: 6)")), ToolInput(tag="in_silent", input_type=Boolean(optional=True), prefix="--silent", doc=InputDocumentation(doc="suppress output of logger")), ToolInput(tag="in_scaffold_stats_file", input_type=String(), position=0, doc=InputDocumentation(doc="file with statistics for each scaffold")), ToolInput(tag="in_output_dir", input_type=String(), position=1, doc=InputDocumentation(doc="output directory"))], outputs=[], container="quay.io/biocontainers/refinem:0.1.2--pyh3252c3a_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Refinem_Outliers_V0_1_0().translate("wdl")

