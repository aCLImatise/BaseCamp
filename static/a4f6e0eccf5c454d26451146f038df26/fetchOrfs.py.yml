!Command
command:
- fetchOrfs.py
positional:
- !Positional
  optional: true
  position: 0
  name: FASTA
  description: ''
- !Positional
  optional: true
  position: 1
  name: OUT
  description: ''
named:
- !Flag
  optional: true
  synonyms:
  - -p
  description: 'Threads to run (default: 1)'
  args: !SimpleFlagArg
    name: P
- !Flag
  optional: true
  synonyms:
  - -f
  description: "[FASTA], --fasta [FASTA]\nThe fasta file to operate on. (default:\
    \ None)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -o
  description: "[OUT], --out [OUT]\nThe file to write results to. Leave blank for\
    \ stdout,\n(default: <_io.TextIOWrapper name='<stdout>' mode='w'\nencoding='utf-8'>)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --min
  description: 'Minimum ORF length in amino acids. (default: 50)'
  args: !SimpleFlagArg
    name: MIN
- !Flag
  optional: true
  synonyms:
  - --both-strands
  description: 'Search both strands for ORFs. (default: False)'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --no-met-start
  description: "Output ORFs starting with amino acids other than MET\n(default: False)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --from-met
  description: "Truncate leading amino acids up to MET (default:\nFalse)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --from-met-keep
  description: "Truncate leading amino acids up to MET, but keep the\nuntruncated\
    \ version as well. (default: False)\n"
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "usage: fetchOrfs.py [-h] [-p P] -f [FASTA] [-o [OUT]] [--min MIN]\n  \
  \                  [--both-strands] [--no-met-start] [--from-met]\n            \
  \        [--from-met-keep]\n\nThis script will accept a given nucleotide fasta file\
  \ and output found ORFs.\nORFs are annotated by which stop codon they are a part\
  \ of. As in, ORF 3 is\nannotated as the 3rd sequence if the translated sequence\
  \ is divided by stop\ncodons. This is prevent ambiguity with differing minimum lengths\
  \ of ORFs.\n\noptional arguments:\n  -h, --help            show this help message\
  \ and exit\n  -p P                  Threads to run (default: 1)\n  -f [FASTA], --fasta\
  \ [FASTA]\n                        The fasta file to operate on. (default: None)\n\
  \  -o [OUT], --out [OUT]\n                        The file to write results to.\
  \ Leave blank for stdout,\n                        (default: <_io.TextIOWrapper\
  \ name='<stdout>' mode='w'\n                        encoding='utf-8'>)\n  --min\
  \ MIN             Minimum ORF length in amino acids. (default: 50)\n  --both-strands\
  \        Search both strands for ORFs. (default: False)\n  --no-met-start      \
  \  Output ORFs starting with amino acids other than MET\n                      \
  \  (default: False)\n  --from-met            Truncate leading amino acids up to\
  \ MET (default:\n                        False)\n  --from-met-keep       Truncate\
  \ leading amino acids up to MET, but keep the\n                        untruncated\
  \ version as well. (default: False)\n"
generated_using:
- --help
docker_image:
