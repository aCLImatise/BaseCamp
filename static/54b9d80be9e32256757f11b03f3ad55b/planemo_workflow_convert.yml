!Command
command:
- planemo
- workflow_convert
positional:
- !Positional
  optional: false
  position: 0
  name: Galaxy.
  description: --galaxy_email TEXT             E-mail address to use when launching
    single-
- !Positional
  optional: false
  position: 0
  name: resolvers.
  description: --conda_prefix DIRECTORY        Conda prefix to use for conda dependency
- !Positional
  optional: false
  position: 1
  name: commands.
  description: --conda_exec FILE               Location of conda executable.
- !Positional
  optional: false
  position: 0
  name: Galaxy.
  description: --shed_tool_conf TEXT           Location of shed tools conf file for
    Galaxy.
- !Positional
  optional: false
  position: 0
  name: executing.
  description: --skip_client_build             Do not build Galaxy client when serving
- !Positional
  optional: false
  position: 1
  name: Galaxy.
  description: --shed_install / --no_shed_install
named:
- !Flag
  optional: true
  synonyms:
  - -f
  - --force
  description: Overwrite existing files if present.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -o
  - --output
  - --galaxy_root
  description: "Root of development galaxy directory to\nexecute command with."
  args: !SimpleFlagArg
    name: FILE
- !Flag
  optional: true
  synonyms:
  - --galaxy_python_version
  description: "[3|3.6|3.7|3.8|3.9]\nPython version to start Galaxy under"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --extra_tools
  description: "Extra tool sources to include in Galaxy's\ntool panel (file or directory).\
    \ These will\nnot be linted/tested/etc... but they will be\navailable to workflows\
    \ and for interactive\nuse."
  args: !SimpleFlagArg
    name: PATH
- !Flag
  optional: true
  synonyms:
  - --install_galaxy
  description: "Download and configure a disposable copy of\nGalaxy from github."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --galaxy_branch
  description: "Branch of Galaxy to target (defaults to\nmaster) if a Galaxy root\
    \ isn't specified."
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --galaxy_source
  description: "Git source of Galaxy to target (defaults to\nthe official galaxyproject\
    \ github source if\na Galaxy root isn't specified."
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --skip_venv
  description: "Do not create or source a virtualenv\nenvironment for Galaxy, this\
    \ should be used\nto preserve an externally configured virtual\nenvironment or\
    \ conda environment."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --no_cache_galaxy
  description: "Skip caching of Galaxy source and\ndependencies obtained with --install_galaxy.\n\
    Not caching this results in faster downloads\n(no git) - so is better on throw\
    \ away\ninstances such with TravisCI."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --no_cleanup
  description: Do not cleanup temp files created for and by
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --docker
  - --no_docker
  description: Run Galaxy tools in Docker if enabled.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --docker_cmd
  description: "Command used to launch docker (defaults to\ndocker)."
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --docker_sudo
  - --no_docker_sudo
  description: Flag to use sudo when running docker.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --docker_host
  description: "Docker host to target when executing docker\ncommands (defaults to\
    \ localhost)."
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --docker_sudo_cmd
  description: "sudo command to use when --docker_sudo is\nenabled (defaults to sudo)."
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --mulled_containers
  - --biocontainers
  description: "Test tools against mulled containers (forces\n--docker)."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --job_config_file
  description: Job configuration file for Galaxy to target.
  args: !SimpleFlagArg
    name: FILE
- !Flag
  optional: true
  synonyms:
  - --tool_dependency_dir
  description: Tool dependency dir for Galaxy to target.
  args: !SimpleFlagArg
    name: DIRECTORY
- !Flag
  optional: true
  synonyms:
  - --port
  description: Port to serve Galaxy on (default is 9090).
  args: !SimpleFlagArg
    name: INTEGER
- !Flag
  optional: true
  synonyms:
  - --host
  description: "Host to bind Galaxy to. Default is 127.0.0.1\nthat is restricted to\
    \ localhost connections\nfor security reasons set to 0.0.0.0 to bind\nGalaxy to\
    \ all ports including potentially\npublicly accessible ones."
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --engine
  description: "[galaxy|docker_galaxy|external_galaxy]\nSelect an engine to serve\
    \ artifacts such as\ntools and workflows. Defaults to a local\nGalaxy, but running\
    \ Galaxy within a Docker\ncontainer."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --non_strict_cwl
  description: Disable strict validation of CWL.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --docker_galaxy_image
  description: "Docker image identifier for docker-galaxy-\nflavor used if engine\
    \ type is specified as\n``docker-galaxy``. Defaults to\nquay.io/bgruening/galaxy."
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --docker_extra_volume
  description: Extra path to mount if --engine docker.
  args: !SimpleFlagArg
    name: PATH
- !Flag
  optional: true
  synonyms:
  - --test_data
  description: "test-data directory to for specified\ntool(s)."
  args: !SimpleFlagArg
    name: DIRECTORY
- !Flag
  optional: true
  synonyms:
  - --tool_data_table
  description: "tool_data_table_conf.xml file to for\nspecified tool(s)."
  args: !SimpleFlagArg
    name: PATH
- !Flag
  optional: true
  synonyms:
  - --dependency_resolvers_config_file
  description: "Dependency resolver configuration for Galaxy\nto target."
  args: !SimpleFlagArg
    name: FILE
- !Flag
  optional: true
  synonyms:
  - --brew_dependency_resolution
  description: "Configure Galaxy to use plain brew\ndependency resolution."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --shed_dependency_resolution
  description: "Configure Galaxy to use brewed Tool Shed\ndependency resolution."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --no_dependency_resolution
  description: Configure Galaxy with no dependency
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --conda_debug
  description: Enable more verbose conda logging.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --conda_channels
  - --conda_ensure_channels
  description: "Ensure conda is configured with specified\ncomma separated list of\
    \ channels."
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --conda_use_local
  description: "Use locally built packages while building\nConda environments."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --conda_dependency_resolution
  description: "Configure Galaxy to use only conda for\ndependency resolution."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --conda_copy_dependencies
  description: "Conda dependency resolution for Galaxy will\ncopy dependencies instead\
    \ of attempting to\nlink them."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --conda_auto_install
  - --no_conda_auto_install
  description: "Conda dependency resolution for Galaxy will\nattempt to install requested\
    \ but missing\npackages."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --conda_auto_init
  - --no_conda_auto_init
  description: "Conda dependency resolution for Galaxy will\nauto install conda itself\
    \ using miniconda if\nnot availabe on conda_prefix."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --profile
  description: "Name of profile (created with the\nprofile_create command) to use\
    \ with this\ncommand."
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --postgres
  description: Use postgres database type.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --database_type
  description: "[postgres|postgres_docker|sqlite|auto]\nType of database to use for\
    \ profile -\n'auto', 'sqlite', 'postgres', and\n'postgres_docker' are available\
    \ options. Use\npostgres to use an existing postgres server\nyou user can access\
    \ without a password via\nthe psql command. Use postgres_docker to\nhave Planemo\
    \ manage a docker container\nrunning postgres. Data with postgres_docker\nis not\
    \ yet persisted past when you restart\nthe docker container launched by Planemo\
    \ so\nbe careful with this option."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --postgres_psql_path
  description: "Name or or path to postgres client binary\n(psql)."
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --postgres_database_user
  description: Postgres username for managed development
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --database_connection
  description: Database connection string to use for
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --shed_tool_path
  description: Location of shed tools directory for Galaxy.
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --galaxy_single_user
  - --no_galaxy_single_user
  description: "By default Planemo will configure Galaxy to\nrun in single-user mode\
    \ where there is just\none user and this user is automatically\nlogged it. Use\
    \ --no_galaxy_single_user to\nprevent Galaxy from running this way."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --daemon
  description: Serve Galaxy process as a daemon.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --pid_file
  description: Location of pid file is executed with
  args: !SimpleFlagArg
    name: FILE
- !Flag
  optional: true
  synonyms:
  - --daemon.
  - --ignore_dependency_problems
  description: When installing shed repositories for
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - --help
  description: Show this message and exit.
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "Usage: planemo workflow_convert [OPTIONS] WORKFLOW_PATH_OR_ID\n\n  Convert\
  \ Format 2 workflows to native Galaxy workflows, and vice-versa.\n\nOptions:\n \
  \ -f, --force                     Overwrite existing files if present.\n  -o, --output\
  \ FILE\n  --galaxy_root DIRECTORY         Root of development galaxy directory to\n\
  \                                  execute command with.\n\n  --galaxy_python_version\
  \ [3|3.6|3.7|3.8|3.9]\n                                  Python version to start\
  \ Galaxy under\n  --extra_tools PATH              Extra tool sources to include\
  \ in Galaxy's\n                                  tool panel (file or directory).\
  \ These will\n                                  not be linted/tested/etc... but\
  \ they will be\n                                  available to workflows and for\
  \ interactive\n                                  use.\n\n  --install_galaxy    \
  \            Download and configure a disposable copy of\n                     \
  \             Galaxy from github.\n\n  --galaxy_branch TEXT            Branch of\
  \ Galaxy to target (defaults to\n                                  master) if a\
  \ Galaxy root isn't specified.\n\n  --galaxy_source TEXT            Git source of\
  \ Galaxy to target (defaults to\n                                  the official\
  \ galaxyproject github source if\n                                  a Galaxy root\
  \ isn't specified.\n\n  --skip_venv                     Do not create or source\
  \ a virtualenv\n                                  environment for Galaxy, this should\
  \ be used\n                                  to preserve an externally configured\
  \ virtual\n                                  environment or conda environment.\n\
  \n  --no_cache_galaxy               Skip caching of Galaxy source and\n        \
  \                          dependencies obtained with --install_galaxy.\n      \
  \                            Not caching this results in faster downloads\n    \
  \                              (no git) - so is better on throw away\n         \
  \                         instances such with TravisCI.\n\n  --no_cleanup      \
  \              Do not cleanup temp files created for and by\n                  \
  \                Galaxy.\n\n  --galaxy_email TEXT             E-mail address to\
  \ use when launching single-\n                                  user Galaxy server.\n\
  \n  --docker / --no_docker          Run Galaxy tools in Docker if enabled.\n  --docker_cmd\
  \ TEXT               Command used to launch docker (defaults to\n              \
  \                    docker).\n\n  --docker_sudo / --no_docker_sudo\n          \
  \                        Flag to use sudo when running docker.\n  --docker_host\
  \ TEXT              Docker host to target when executing docker\n              \
  \                    commands (defaults to localhost).\n\n  --docker_sudo_cmd TEXT\
  \          sudo command to use when --docker_sudo is\n                         \
  \         enabled (defaults to sudo).\n\n  --mulled_containers, --biocontainers\n\
  \                                  Test tools against mulled containers (forces\n\
  \                                  --docker).\n\n  --job_config_file FILE      \
  \    Job configuration file for Galaxy to target.\n  --tool_dependency_dir DIRECTORY\n\
  \                                  Tool dependency dir for Galaxy to target.\n \
  \ --port INTEGER                  Port to serve Galaxy on (default is 9090).\n \
  \ --host TEXT                     Host to bind Galaxy to. Default is 127.0.0.1\n\
  \                                  that is restricted to localhost connections\n\
  \                                  for security reasons set to 0.0.0.0 to bind\n\
  \                                  Galaxy to all ports including potentially\n \
  \                                 publicly accessible ones.\n\n  --engine [galaxy|docker_galaxy|external_galaxy]\n\
  \                                  Select an engine to serve artifacts such as\n\
  \                                  tools and workflows. Defaults to a local\n  \
  \                                Galaxy, but running Galaxy within a Docker\n  \
  \                                container.\n\n  --non_strict_cwl              \
  \  Disable strict validation of CWL.\n  --docker_galaxy_image TEXT      Docker image\
  \ identifier for docker-galaxy-\n                                  flavor used if\
  \ engine type is specified as\n                                  ``docker-galaxy``.\
  \ Defaults to\n                                  quay.io/bgruening/galaxy.\n\n \
  \ --docker_extra_volume PATH      Extra path to mount if --engine docker.\n  --test_data\
  \ DIRECTORY           test-data directory to for specified\n                   \
  \               tool(s).\n\n  --tool_data_table PATH          tool_data_table_conf.xml\
  \ file to for\n                                  specified tool(s).\n\n  --dependency_resolvers_config_file\
  \ FILE\n                                  Dependency resolver configuration for\
  \ Galaxy\n                                  to target.\n\n  --brew_dependency_resolution\
  \    Configure Galaxy to use plain brew\n                                  dependency\
  \ resolution.\n\n  --shed_dependency_resolution    Configure Galaxy to use brewed\
  \ Tool Shed\n                                  dependency resolution.\n\n  --no_dependency_resolution\
  \      Configure Galaxy with no dependency\n                                  resolvers.\n\
  \n  --conda_prefix DIRECTORY        Conda prefix to use for conda dependency\n \
  \                                 commands.\n\n  --conda_exec FILE             \
  \  Location of conda executable.\n  --conda_debug                   Enable more\
  \ verbose conda logging.\n  --conda_channels, --conda_ensure_channels TEXT\n   \
  \                               Ensure conda is configured with specified\n    \
  \                              comma separated list of channels.\n\n  --conda_use_local\
  \               Use locally built packages while building\n                    \
  \              Conda environments.\n\n  --conda_dependency_resolution   Configure\
  \ Galaxy to use only conda for\n                                  dependency resolution.\n\
  \n  --conda_copy_dependencies       Conda dependency resolution for Galaxy will\n\
  \                                  copy dependencies instead of attempting to\n\
  \                                  link them.\n\n  --conda_auto_install / --no_conda_auto_install\n\
  \                                  Conda dependency resolution for Galaxy will\n\
  \                                  attempt to install requested but missing\n  \
  \                                packages.\n\n  --conda_auto_init / --no_conda_auto_init\n\
  \                                  Conda dependency resolution for Galaxy will\n\
  \                                  auto install conda itself using miniconda if\n\
  \                                  not availabe on conda_prefix.\n\n  --profile\
  \ TEXT                  Name of profile (created with the\n                    \
  \              profile_create command) to use with this\n                      \
  \            command.\n\n  --postgres                      Use postgres database\
  \ type.\n  --database_type [postgres|postgres_docker|sqlite|auto]\n            \
  \                      Type of database to use for profile -\n                 \
  \                 'auto', 'sqlite', 'postgres', and\n                          \
  \        'postgres_docker' are available options. Use\n                        \
  \          postgres to use an existing postgres server\n                       \
  \           you user can access without a password via\n                       \
  \           the psql command. Use postgres_docker to\n                         \
  \         have Planemo manage a docker container\n                             \
  \     running postgres. Data with postgres_docker\n                            \
  \      is not yet persisted past when you restart\n                            \
  \      the docker container launched by Planemo so\n                           \
  \       be careful with this option.\n\n  --postgres_psql_path TEXT       Name or\
  \ or path to postgres client binary\n                                  (psql).\n\
  \n  --postgres_database_user TEXT   Postgres username for managed development\n\
  \                                  databases.\n\n  --postgres_database_host TEXT\
  \   Postgres host name for managed development\n                               \
  \   databases.\n\n  --postgres_database_port TEXT   Postgres port for managed development\n\
  \                                  databases.\n\n  --file_path DIRECTORY       \
  \    Location for files created by Galaxy (e.g.\n                              \
  \    database/files).\n\n  --database_connection TEXT      Database connection string\
  \ to use for\n                                  Galaxy.\n\n  --shed_tool_conf TEXT\
  \           Location of shed tools conf file for Galaxy.\n  --shed_tool_path TEXT\
  \           Location of shed tools directory for Galaxy.\n  --galaxy_single_user\
  \ / --no_galaxy_single_user\n                                  By default Planemo\
  \ will configure Galaxy to\n                                  run in single-user\
  \ mode where there is just\n                                  one user and this\
  \ user is automatically\n                                  logged it. Use --no_galaxy_single_user\
  \ to\n                                  prevent Galaxy from running this way.\n\n\
  \  --daemon                        Serve Galaxy process as a daemon.\n  --pid_file\
  \ FILE                 Location of pid file is executed with\n                 \
  \                 --daemon.\n\n  --ignore_dependency_problems    When installing\
  \ shed repositories for\n                                  workflows, ignore dependency\
  \ issues. These\n                                  likely indicate a problem but\
  \ in some cases\n                                  may not prevent a workflow from\
  \ successfully\n                                  executing.\n\n  --skip_client_build\
  \             Do not build Galaxy client when serving\n                        \
  \          Galaxy.\n\n  --shed_install / --no_shed_install\n                   \
  \               By default Planemo will attempt to install\n                   \
  \               repositories needed for workflow testing.\n                    \
  \              This may not be appropriate for production\n                    \
  \              servers and so this can disabled by calling\n                   \
  \               planemo with --no_shed_install.\n\n  --help                    \
  \      Show this message and exit.\n"
generated_using:
- --help
docker_image: quay.io/biocontainers/planemo:0.74.3--py_0
