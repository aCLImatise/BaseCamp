!Command
command:
- hapcmp
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - --input-regions
  description: "The input bed file specifying haplotype block\nregions (use - for\
    \ stdin)."
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - --input-vcfs
  description: "Two VCF files to compare (use file:sample for a\nspecific sample column)."
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - -b
  description: "[ --output-bed ] arg       Output block results as bed files (default\
    \ is\nto output to stdout)."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -e
  description: '[ --output-errors ] arg    Output failure information.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -d
  description: "[ --output-diffs ] arg     Output shared and different variants to\
    \ a mJSON\nfile (one json record per line, default is to\nnot output diffs)."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -r
  description: '[ --reference ] arg        The reference fasta file.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -n
  description: '[ --max-n-haplotypes ] arg Maximum number of haplotypes to enumerate.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --output-sequences
  description: Set to true to output haplotype sequences.
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - --progress
  description: Set to true to output progress information.
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - --progress-seconds
  description: Output progress information every n seconds.
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - -l
  description: '[ --limit ] arg            Maximum number of haplotype blocks to process.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -f
  description: '[ --apply-filters ] arg    Apply filtering in VCF.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --do-alignment
  description: "Perform alignments on mismatching haplotypes to\nfind best approximate\
    \ match.\n"
  args: !SimpleFlagArg
    name: arg
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  description: '[ --help ]                 produce help message'
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - --version
  description: Show version
  args: !EmptyFlagArg {}
help_text: "Allowed options:\n  -h [ --help ]                 produce help message\n\
  \  --version                     Show version\n  --input-regions arg           The\
  \ input bed file specifying haplotype block \n                                regions\
  \ (use - for stdin).\n  --input-vcfs arg              Two VCF files to compare (use\
  \ file:sample for a\n                                specific sample column).\n\
  \  -b [ --output-bed ] arg       Output block results as bed files (default is \n\
  \                                to output to stdout).\n  -e [ --output-errors ]\
  \ arg    Output failure information.\n  -d [ --output-diffs ] arg     Output shared\
  \ and different variants to a mJSON\n                                file (one json\
  \ record per line, default is to \n                                not output diffs).\n\
  \  -r [ --reference ] arg        The reference fasta file.\n  -n [ --max-n-haplotypes\
  \ ] arg Maximum number of haplotypes to enumerate.\n  --output-sequences arg   \
  \     Set to true to output haplotype sequences.\n  --progress arg             \
  \   Set to true to output progress information.\n  --progress-seconds arg      \
  \  Output progress information every n seconds.\n  -l [ --limit ] arg          \
  \  Maximum number of haplotype blocks to process.\n  -f [ --apply-filters ] arg\
  \    Apply filtering in VCF.\n  --do-alignment arg            Perform alignments\
  \ on mismatching haplotypes to\n                                find best approximate\
  \ match.\n\n"
generated_using:
- --help
docker_image: quay.io/biocontainers/hap.py:0.3.13--py27h5c5a3ab_0
