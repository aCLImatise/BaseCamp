!Command
command:
- bbmask.sh
positional:
- !Positional
  optional: false
  position: 0
  name: in
  description: ''
named:
- !Flag
  optional: true
  synonyms:
  - -Xmx
  description: "This will set Java's memory usage, overriding autodetection.\n-Xmx20g\
    \ will specify 20 gigs of RAM, and -Xmx200m will specify 200 megs.\nThe max is\
    \ typically 85% of physical memory."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -eoom
  description: "This flag will cause the process to exit if an\nout-of-memory exception\
    \ occurs.  Requires Java 8u92+."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -da
  description: Disable assertions.
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "\nWritten by Brian Bushnell\nLast modified October 17, 2017\n\nDescription:\
  \  Masks sequences of low-complexity, or containing repeat kmers, or covered by\
  \ mapped reads.\nBy default this program will mask using entropy with a window=80\
  \ and entropy=0.75\nPlease read bbmap/docs/guides/BBMaskGuide.txt for more information.\n\
  \nUsage:   bbmask.sh in=<file> out=<file> sam=<file,file,...file>\n\nInput may be\
  \ stdin or a fasta or fastq file, raw or gzipped.\nsam is optional, but may be a\
  \ comma-delimited list of sam files to mask.\nSam files may also be used as arguments\
  \ without sam=, so you can use *.sam for example.\nIf you pipe via stdin/stdout,\
  \ please include the file type; e.g. for gzipped fasta input, set in=stdin.fa.gz\n\
  \nInput parameters:\nin=<file>           Input sequences to mask. 'in=stdin.fa'\
  \ will pipe from standard in.\nsam=<file,file>     Comma-delimited list of sam files.\
  \  Optional.  Their mapped coordinates will be masked.\ntouppercase=f       (tuc)\
  \ Change all letters to upper-case.\ninterleaved=auto    (int) If true, forces fastq\
  \ input to be paired and interleaved.\nqin=auto            ASCII offset for input\
  \ quality.  May be 33 (Sanger), 64 (Illumina), or auto.\n\nOutput parameters:\n\
  out=<file>          Write masked sequences here.  'out=stdout.fa' will pipe to standard\
  \ out.\noverwrite=t         (ow) Set to false to force the program to abort rather\
  \ than overwrite an existing file.\nziplevel=2          (zl) Set to 1 (lowest) through\
  \ 9 (max) to change compression level; lower compression is faster.\nfastawrap=70\
  \        Length of lines in fasta output.\nqout=auto           ASCII offset for\
  \ output quality.  May be 33 (Sanger), 64 (Illumina), or auto (same as input).\n\
  \nProcessing parameters:\nthreads=auto        (t) Set number of threads to use;\
  \ default is number of logical processors.\nmaskrepeats=f       (mr) Mask areas\
  \ covered by exact repeat kmers.\nkr=5                Kmer size to use for repeat\
  \ detection (1-15).  Use minkr and maxkr to sweep a range of kmers.\nminlen=40 \
  \          Minimum length of repeat area to mask.\nmincount=4          Minimum number\
  \ of repeats to mask.\nmasklowentropy=t    (mle) Mask areas with low complexity\
  \ by calculating entropy over a window for a fixed kmer size.\nke=5            \
  \    Kmer size to use for entropy calculation (1-15).  Use minke and maxke to sweep\
  \ a range.  Large ke uses more memory.\nwindow=80           (w) Window size for\
  \ entropy calculation.\nentropy=0.70        (e) Mask windows with entropy under\
  \ this value (0-1).  0.0001 will mask only homopolymers and 1 will mask everything.\n\
  lowercase=f         (lc) Convert masked bases to lower case.  Default is to convert\
  \ them to N.\nsplit=f             Split into unmasked pieces and discard masked\
  \ pieces.\n\nCoverage parameters (only relevant if sam files are specified):\nmincov=-1\
  \           If nonnegative, mask bases with coverage outside this range.\nmaxcov=-1\
  \           If nonnegative, mask bases with coverage outside this range.\ndelcov=t\
  \            Include deletions when calculating coverage.\nNOTE: If neither mincov\
  \ nor maxcov are set, all covered bases will be masked.\n\nOther parameters:\npigz=t\
  \              Use pigz to compress.  If argument is a number, that will set the\
  \ number of pigz threads.\nunpigz=t            Use pigz to decompress.\n\nJava Parameters:\n\
  -Xmx                This will set Java's memory usage, overriding autodetection.\n\
  \                    -Xmx20g will specify 20 gigs of RAM, and -Xmx200m will specify\
  \ 200 megs.\n                    The max is typically 85% of physical memory.\n\
  -eoom               This flag will cause the process to exit if an\n           \
  \         out-of-memory exception occurs.  Requires Java 8u92+.\n-da           \
  \      Disable assertions.\n\nPlease contact Brian Bushnell at bbushnell@lbl.gov\
  \ if you encounter any problems.\n\n"
generated_using:
- --help
docker_image:
