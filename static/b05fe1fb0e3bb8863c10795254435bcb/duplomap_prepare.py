from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Directory, Int, Float, String, Boolean

Duplomap_Prepare_V0_1_0 = CommandToolBuilder(tool="duplomap_prepare", base_command=["duplomap-prepare"], inputs=[ToolInput(tag="in_input", input_type=File(optional=True), prefix="--input", doc=InputDocumentation(doc="Csv file with segmental duplications")), ToolInput(tag="in_reference", input_type=File(optional=True), prefix="--reference", doc=InputDocumentation(doc="Reference genome in the indexed fasta format")), ToolInput(tag="in_annotate", input_type=File(optional=True), prefix="--annotate", doc=InputDocumentation(doc="Optional: gene annotation in the GFF format, used for database annotation")), ToolInput(tag="in_output", input_type=Directory(optional=True), prefix="--output", doc=InputDocumentation(doc="Output directory")), ToolInput(tag="in_force", input_type=Directory(optional=True), prefix="--force", doc=InputDocumentation(doc="Force work with non-empty output directory")), ToolInput(tag="in_anchor", input_type=Int(optional=True), prefix="--anchor", doc=InputDocumentation(doc="Anchor size [default: 6]")), ToolInput(tag="in_area", input_type=Int(optional=True), prefix="--area", doc=InputDocumentation(doc="Anchor should be unique in the area with radius INT [default: 20]")), ToolInput(tag="in_length", input_type=Int(optional=True), prefix="--length", doc=InputDocumentation(doc="Discard duplication pairs if at least one of the sequences is shorter than INT\n[default: 5000]")), ToolInput(tag="in_seq_similarity", input_type=Float(optional=True), prefix="--seq-similarity", doc=InputDocumentation(doc="Discard duplication pairs with sequence similarity (fracMatch) less that FLOAT\n[default: 0.97]")), ToolInput(tag="in_minimap_km_er", input_type=Int(optional=True), prefix="--minimap-kmer", doc=InputDocumentation(doc="Minimap2 k-mer size [default: 15]")), ToolInput(tag="in_window_size", input_type=Int(optional=True), prefix="--window-size", doc=InputDocumentation(doc="Window size used for the identification of diverse regions [default: 100]")), ToolInput(tag="in_min_windows", input_type=Int(optional=True), prefix="--min-windows", doc=InputDocumentation(doc="Number of consecutive windows necessary to mark a region as similar or diverse\n[default: 3]")), ToolInput(tag="in_window_similarity", input_type=Float(optional=True), prefix="--window-similarity", doc=InputDocumentation(doc="Window similarity threshold (diverse regions have similarity lower than FLOAT)\n[default: 95.0]")), ToolInput(tag="in_comp_dist", input_type=Int(optional=True), prefix="--comp-dist", doc=InputDocumentation(doc="Distance between components containing segmental duplications [default: 500]")), ToolInput(tag="in_skip_copy_num", input_type=Int(optional=True), prefix="--skip-copy-num", doc=InputDocumentation(doc="<INT>    Do not analyze regions with copy number higher or equal than INT[1]. If region\nlength is less than INT[2], PSVs in the region are not constructed.\n[default 6 3000]")), ToolInput(tag="in_log", input_type=String(optional=True), prefix="--log", doc=InputDocumentation(doc="Logging level in log files (stderr shows logs with info level and higher)\n[default: debug]  [possible values: trace, debug, info, warning, error, critical,\nnone]")), ToolInput(tag="in_human", input_type=Boolean(optional=True), prefix="--human", doc=InputDocumentation(doc="Human readable database (currently cannot be loaded)"))], outputs=[ToolOutput(tag="out_output", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="Output directory")), ToolOutput(tag="out_force", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_force", type_hint=File()), doc=OutputDocumentation(doc="Force work with non-empty output directory"))], container="quay.io/biocontainers/duplomap:0.9.5--hed695b0_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Duplomap_Prepare_V0_1_0().translate("wdl")

