!Command
positional: []
named:
- !Flag
  description: "*                                           Input files (valid formats:\
    \ 'mzML')"
  synonyms:
  - -in
  args: !SimpleFlagArg
    name: file list
  optional: true
- !Flag
  description: "*                                          Identifications filtered\
    \ at PSM level (e.g., q-value < 0.01).And annotated with PEP as main score. We\
    \ suggest using: 1. PercolatorAdapter tool (score_type = 'q-value', -post-processing-tdc)\
    \ 2. FalseDiscoveryRate (FDR:PSM = 0.01) 3. IDScoreSwitcher (-old_score q-value\
    \ -new_score MS:1001493 -new_score_orientation lower_better -new_score_type) To\
    \ obtain well calibrated PEPs and an inital reduction of PSMs ID files must be\
    \ provided in same order as spectra files. (valid formats: 'idXML', 'mzId')"
  synonyms:
  - -ids
  args: !SimpleFlagArg
    name: file list
  optional: true
- !Flag
  description: "Design file (valid formats: 'tsv')"
  synonyms:
  - -design
  args: !SimpleFlagArg
    name: file
  optional: true
- !Flag
  description: "Fasta file (valid formats: 'fasta')"
  synonyms:
  - -fasta
  args: !SimpleFlagArg
    name: file
  optional: true
- !Flag
  description: "*                                               Output mzTab file\
    \ (valid formats: 'mzTab')"
  synonyms:
  - -out
  args: !SimpleFlagArg
    name: file
  optional: true
- !Flag
  description: "Output MSstats input file (valid formats: 'csv')"
  synonyms:
  - -out_msstats
  args: !SimpleFlagArg
    name: file
  optional: true
- !Flag
  description: "Output consensusXML file (valid formats: 'consensusXML')"
  synonyms:
  - -out_cxml
  args: !SimpleFlagArg
    name: file
  optional: true
- !Flag
  description: "Protein FDR threshold (0.05=5%). (default: '0.05' min: '0.0' max:\
    \ '1.0')"
  synonyms:
  - -proteinFDR
  args: !SimpleFlagArg
    name: threshold
  optional: true
- !Flag
  description: "PSM FDR threshold (e.g. 0.05=5%). If Bayesian inference was chosen,\
    \ it is equivalent with a peptide FDR (default: '1.0' min: '0.0' max: '1.0')"
  synonyms:
  - -psmFDR
  args: !SimpleFlagArg
    name: threshold
  optional: true
- !Flag
  description: Use the given TOPP INI file
  synonyms:
  - -ini
  args: !SimpleFlagArg
    name: file
  optional: true
- !Flag
  description: "Sets the number of threads allowed to be used by the TOPP tool (default:\
    \ '1')"
  synonyms:
  - -threads
  args: !SimpleFlagArg
    name: n
  optional: true
- !Flag
  description: Writes the default configuration file
  synonyms:
  - -write_ini
  args: !SimpleFlagArg
    name: file
  optional: true
- !Flag
  description: Shows all options (including advanced)
  synonyms:
  - --helphelp
  args: !EmptyFlagArg {}
  optional: true
command:
- ProteomicsLFQ
parent:
subcommands: []
help_flag: !Flag
  description: Shows options
  synonyms:
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "\nProteomicsLFQ -- A standard proteomics LFQ pipeline.\nFull documentation:\
  \ \nVersion: 2.5.0-HEAD-HASH-NOTFOUND-HEAD-HASH-NOTFOUND May 19 2020, 23:12:02,\
  \ Revision: HEAD-HASH-NOTFOUND\nTo cite OpenMS:\n  Rost HL, Sachsenberg T, Aiche\
  \ S, Bielow C et al.. OpenMS: a flexible open-source software platform for mass\
  \ spectrometry data analysis. Nat Meth. 2016; 13, 9: 741-748. doi:10.1038/nmeth.3959.\n\
  \nUsage:\n  ProteomicsLFQ <options>\n\nOptions (mandatory options marked with '*'):\n\
  \  -in <file list>*                                           Input files (valid\
  \ formats: 'mzML')\n  -ids <file list>*                                        \
  \  Identifications filtered at PSM level (e.g., q-value < 0.01).And annotated with\
  \ PEP as main score.\n                                                         \
  \    We suggest using:\n                                                       \
  \      1. PercolatorAdapter tool (score_type = 'q-value', -post-processing-tdc)\n\
  \                                                             2. FalseDiscoveryRate\
  \ (FDR:PSM = 0.01)\n                                                           \
  \  3. IDScoreSwitcher (-old_score q-value -new_score MS:1001493 -new_score_orientation\
  \ lower_better -new_score_type)\n                                              \
  \               To obtain well calibrated PEPs and an inital reduction of PSMs\n\
  \                                                             ID files must be provided\
  \ in same order as spectra files. (valid formats: 'idXML', 'mzId')\n  -design <file>\
  \                                             Design file (valid formats: 'tsv')\n\
  \  -fasta <file>                                              Fasta file (valid\
  \ formats: 'fasta')\n  -out <file>*                                            \
  \   Output mzTab file (valid formats: 'mzTab')\n  -out_msstats <file>          \
  \                              Output MSstats input file (valid formats: 'csv')\n\
  \  -out_cxml <file>                                           Output consensusXML\
  \ file (valid formats: 'consensusXML')\n  -proteinFDR <threshold>              \
  \                      Protein FDR threshold (0.05=5%). (default: '0.05' min: '0.0'\
  \ max: '1.0')\n  -psmFDR <threshold>                                        PSM\
  \ FDR threshold (e.g. 0.05=5%). If Bayesian inference was chosen, it is equivalent\
  \ with a peptide FDR (default: '1.0' min: '0.0' max: '1.0')\n\nCentroiding:\n  -Centroiding:signal_to_noise\
  \ <value>                       Minimal signal-to-noise ratio for a peak to be picked\
  \ (0.0 disables SNT estimation!) (default: '0.0' min: '0.0')\n  -Centroiding:ms_levels\
  \ <numbers>                           List of MS levels for which the peak picking\
  \ is applied. If empty, auto mode is enabled, all peaks which aren't picked yet\
  \ will get picked. Other scans are copied to the output without changes. (min: '1')\n\
  \  -Centroiding:report_FWHM                                   Add metadata for FWHM\
  \ (as floatDataArray named 'FWHM' or 'FWHM_ppm', depending on param 'report_FWHM_unit')\
  \ for each picked peak.\n  -Centroiding:report_FWHM_unit <choice>              \
  \       Unit of FWHM. Either absolute in the unit of input, e.g. 'm/z' for spectra,\
  \ or relative as ppm (only sensible for spectra, not chromatograms). (default: 'relative'\
  \ valid: 'relative', 'absolute')\n\nCentroiding:SignalToNoise:\n  -Centroiding:SignalToNoise:win_len\
  \ <value>                 Window length in Thomson (default: '200.0' min: '1.0')\n\
  \  -Centroiding:SignalToNoise:bin_count <number>              Number of bins for\
  \ intensity values (default: '30' min: '3')\n  -Centroiding:SignalToNoise:min_required_elements\
  \ <number>  Minimum number of elements required in a window (otherwise it is considered\
  \ sparse) (default: '10' min: '1')\n  -Centroiding:SignalToNoise:write_log_messages\
  \ <choice>     Write out log messages in case of sparse windows or median in rightmost\
  \ histogram bin (default: 'true' valid: 'true', 'false')\n\nPeptideQuantification:\n\
  \  -PeptideQuantification:candidates_out <text>               Optional output file\
  \ with feature candidates.\n\nParameters for ion chromatogram extraction:\n  -PeptideQuantification:extract:batch_size\
  \ <number>         Nr of peptides used in each batch of chromatogram extraction.\
  \ Smaller values decrease memory usage but increase runtime. (default: '1000' min:\
  \ '1')\n  -PeptideQuantification:extract:mz_window <value>           M/z window\
  \ size for chromatogram extraction (unit: ppm if 1 or greater, else Da/Th) (default:\
  \ '10.0' min: '0.0')\n  -PeptideQuantification:extract:n_isotopes <number>     \
  \    Number of isotopes to include in each peptide assay. (default: '2' min: '2')\n\
  \nParameters for detecting features in extracted ion chromatograms:\n  -PeptideQuantification:detect:peak_width\
  \ <value>           Expected elution peak width in seconds, for smoothing (Gauss\
  \ filter). Also determines the RT extration window, unless set explicitly via 'extract:rt_window'.\
  \ (default: '60.0' min: '0.0')\n  -PeptideQuantification:detect:mapping_tolerance\
  \ <value>    RT tolerance (plus/minus) for mapping peptide IDs to features. Absolute\
  \ value in seconds if 1 or greater, else relative to the RT span of the feature.\
  \ (default: '0.0' min: '0.0')\n\nParameters for scoring features using a support\
  \ vector machine (SVM):\n  -PeptideQuantification:svm:samples <number>         \
  \       Number of observations to use for training ('0' for all) (default: '0' min:\
  \ '0')\n  -PeptideQuantification:svm:no_selection                    By default,\
  \ roughly the same number of positive and negative observations, with the same intensity\
  \ distribution, are selected for training. This aims to reduce biases, but also\
  \ reduces the amount of training data. Set this flag to skip this procedure and\
  \ consider all available observations (subject to 'svm:samples').\n  -PeptideQuantification:svm:xval_out\
  \ <choice>               Output file: SVM cross-validation (parameter optimization)\
  \ results (valid formats: 'csv')\n  -PeptideQuantification:svm:kernel <choice> \
  \                SVM kernel (default: 'RBF' valid: 'RBF', 'linear')\n  -PeptideQuantification:svm:xval\
  \ <number>                   Number of partitions for cross-validation (parameter\
  \ optimization) (default: '5' min: '1')\n  -PeptideQuantification:svm:log2_C <values>\
  \                 Values to try for the SVM parameter 'C' during parameter optimization.\
  \ A value 'x' is used as 'C = 2^x'. (default: '[-5.0 -3.0 -1.0 1.0 3.0 5.0 7.0 9.0\
  \ 11.0 13.0 15.0]')\n  -PeptideQuantification:svm:log2_gamma <values>          \
  \   Values to try for the SVM parameter 'gamma' during parameter optimization (RBF\
  \ kernel only). A value 'x' is used as 'gamma = 2^x'. (default: '[-15.0 -13.0 -11.0\
  \ -9.0 -7.0 -5.0 -3.0 -1.0 1.0 3.0]')\n\nParameters for fitting elution models to\
  \ features:\n  -PeptideQuantification:model:type <choice>                 Type of\
  \ elution model to fit to features (default: 'symmetric' valid: 'symmetric', 'asymmetric',\
  \ 'none')\n\nAlignment:\n  -Alignment:score_cutoff                             \
  \       If only IDs above a score cutoff should be used. Used together with min_score.\n\
  \  -Alignment:min_score <value>                               Minimum score for\
  \ an ID to be considered. Applies to the last score calculated.\n              \
  \                                               Unless you have very few runs or\
  \ identifications, increase this value to focus on more informative peptides. (default:\
  \ '0.05')\n  -Alignment:min_run_occur <number>                          Minimum\
  \ number of runs (incl. reference, if any) in which a peptide must occur to be used\
  \ for the alignment.\n                                                         \
  \    Unless you have very few runs or identifications, increase this value to focus\
  \ on more informative peptides. (default: '2' min: '2')\n  -Alignment:max_rt_shift\
  \ <value>                            Maximum realistic RT difference for a peptide\
  \ (median per run vs. reference). Peptides with higher shifts (outliers) are not\
  \ used to compute the alignment.\n                                             \
  \                If 0, no limit (disable filter); if > 1, the final value in seconds;\
  \ if <= 1, taken as a fraction of the range of the reference RT scale. (default:\
  \ '0.1' min: '0.0')\n  -Alignment:use_unassigned_peptides                      \
  \   Should unassigned peptide identifications be used when computing an alignment\
  \ of feature or consensus maps? If 'false', only peptide IDs assigned to features\
  \ will be used.\n  -Alignment:use_feature_rt <choice>                         When\
  \ aligning feature or consensus maps, don't use the retention time of a peptide\
  \ identification directly; instead, use the retention time of the centroid of the\
  \ feature (apex of the elution profile) that the peptide was matched to. If different\
  \ identifications are matched to one feature, only the peptide closest to the centroid\
  \ in RT is used.\n                                                             Precludes\
  \ 'use_unassigned_peptides'. (default: 'true' valid: 'true', 'false')\n\nLinking:\n\
  \  -Linking:use_identifications                               Never link features\
  \ that are annotated with different peptides (only the best hit per peptide identification\
  \ is taken into account).\n  -Linking:nr_partitions <number>                   \
  \         How many partitions in m/z space should be used for the algorithm (more\
  \ partitions means faster runtime and more memory efficient execution ) (default:\
  \ '100' min: '1')\n  -Linking:ignore_charge                                    \
  \ False [default]: pairing requires equal charge state (or at least one unknown\
  \ charge '0'); true: Pairing irrespective of charge state\n  -Linking:ignore_adduct\
  \ <choice>                            True [default]: pairing requires equal adducts\
  \ (or at least one without adduct annotation); true: Pairing irrespective of adducts\
  \ (default: 'true' valid: 'true', 'false')\n\nDistance component based on RT differences:\n\
  \  -Linking:distance_RT:max_difference <value>                Never pair features\
  \ with a larger RT distance (in seconds). (default: '100.0' min: '0.0')\n\nDistance\
  \ component based on m/z differences:\n  -Linking:distance_MZ:max_difference <value>\
  \                Never pair features with larger m/z distance (unit defined by 'unit')\
  \ (default: '0.3' min: '0.0')\n  -Linking:distance_MZ:unit <choice>            \
  \             Unit of the 'max_difference' parameter (default: 'Da' valid: 'Da',\
  \ 'ppm')\n\nProteinQuantification:\n  -ProteinQuantification:top <number>      \
  \                  Calculate protein abundance from this number of proteotypic peptides\
  \ (most abundant first; '0' for all) (default: '3' min: '0')\n  -ProteinQuantification:average\
  \ <choice>                    Averaging method used to compute protein abundances\
  \ from peptide abundances (default: 'median' valid: 'median', 'mean', 'weighted_mean',\
  \ 'sum')\n  -ProteinQuantification:include_all <choice>                Include results\
  \ for proteins with fewer proteotypic peptides than indicated by 'top' (no effect\
  \ if 'top' is 0 or 1) (default: 'true' valid: 'true', 'false')\n  -ProteinQuantification:best_charge_and_fraction\
  \            Distinguish between fraction and charge states of a peptide. For peptides,\
  \ abundances will be reported separately for each fraction and charge;\n       \
  \                                                      for proteins, abundances\
  \ will be computed based only on the most prevalent charge observed of each peptide\
  \ (over all fractions).\n                                                      \
  \       By default, abundances are summed over all charge states.\n\nAdditional\
  \ options for consensus maps (and identification results comprising multiple runs):\n\
  \  -ProteinQuantification:consensus:normalize                 Scale peptide abundances\
  \ so that medians of all samples are equal\n  -ProteinQuantification:consensus:fix_peptides\
  \              Use the same peptides for protein quantification across all samples.\n\
  \                                                             With 'top 0', all\
  \ peptides that occur in every sample are considered.\n                        \
  \                                     Otherwise ('top N'), the N peptides that occur\
  \ in the most samples (independently of each other) are selected,\n            \
  \                                                 breaking ties by total abundance\
  \ (there is no guarantee that the best co-ocurring peptides are chosen!).\n\n  \
  \                                                           \nCommon TOPP options:\n\
  \  -ini <file>                                                Use the given TOPP\
  \ INI file\n  -threads <n>                                               Sets the\
  \ number of threads allowed to be used by the TOPP tool (default: '1')\n  -write_ini\
  \ <file>                                          Writes the default configuration\
  \ file\n  --help                                                     Shows options\n\
  \  --helphelp                                                 Shows all options\
  \ (including advanced)\n\n"
generated_using:
- --help
