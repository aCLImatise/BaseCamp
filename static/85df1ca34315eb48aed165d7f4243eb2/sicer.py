from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, Float, Directory, Boolean, String

Sicer_V0_1_0 = CommandToolBuilder(tool="sicer", base_command=["sicer"], inputs=[ToolInput(tag="in_treatment_file", input_type=File(optional=True), prefix="--treatment_file", doc=InputDocumentation(doc="Name of the sample file you wish to run SICER on. This\ncan either be the relative or the absolute path of the\nfile. Must be in BED or BAM format.")), ToolInput(tag="in_control_file", input_type=File(optional=True), prefix="--control_file", doc=InputDocumentation(doc="Name of the control library in BED or BAM format. This\ncan either be the relative or the absolute path of the\nfile. If you wish to run SICER without a control\nlibrary, simply do not enter the file.")), ToolInput(tag="in_species", input_type=Int(optional=True), prefix="--species", doc=InputDocumentation(doc="The species/genome used (ex: hg38)")), ToolInput(tag="in_redundancy_threshold", input_type=Int(optional=True), prefix="--redundancy_threshold", doc=InputDocumentation(doc="The number of copies of indentical reads allowed in a\nlibrary. Default value is 1")), ToolInput(tag="in_window_size", input_type=Int(optional=True), prefix="--window_size", doc=InputDocumentation(doc="Resolution of SICER. Default value is 200 (bp)")), ToolInput(tag="in_fragment_size", input_type=Int(optional=True), prefix="--fragment_size", doc=InputDocumentation(doc="The amount of shift from the beginning of a read to\nthe center of the DNA fragment represented by the\nread. Default value is 150 (bp).")), ToolInput(tag="in_effective_genome_fraction", input_type=Int(optional=True), prefix="--effective_genome_fraction", doc=InputDocumentation(doc="Effective genome as fraction of the genome size.\nDefault value is 0.74")), ToolInput(tag="in_false_discovery_rate", input_type=Float(optional=True), prefix="--false_discovery_rate", doc=InputDocumentation(doc="Remove all islands with an false_discovery_rate below\ncutoff. Default value is 0.01.")), ToolInput(tag="in_output_directory", input_type=Directory(optional=True), prefix="--output_directory", doc=InputDocumentation(doc="Path of the directory in which results will be stored.\nDefault path is the current path")), ToolInput(tag="in_gap_size", input_type=Int(optional=True), prefix="--gap_size", doc=InputDocumentation(doc="The minimum length of a 'gap' such that neighboring\nwindow is an 'island.' This value must be a multiple\nof the window size. Default value is 600 (bp)")), ToolInput(tag="in_e_value", input_type=Int(optional=True), prefix="--e_value", doc=InputDocumentation(doc="E-value. Requires user input when no control library\nis provided. Default value is 1000")), ToolInput(tag="in_cpu", input_type=Int(optional=True), prefix="--cpu", doc=InputDocumentation(doc="CPU Core Count: The number of CPU cores SICER program\nwill use when executing multi-processing tasks.\nOptimal core count is the species' number of\nchromosomes. Default value is the maximum number of\ncores avaiable in the system.")), ToolInput(tag="in_significant_reads", input_type=File(optional=True), prefix="--significant_reads", doc=InputDocumentation(doc="Output Significant Reads: Enter '--significant_reads'\nto have SICER produce a BED file of treatment reads\nfiltered by significant islands and WIG file of\nfiltered reads binned into windows")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="increase console output verbosity")), ToolInput(tag="in_h", input_type=String(optional=True), prefix="-h", doc=InputDocumentation(doc="")), ToolInput(tag="in_use", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_more", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_information", input_type=String(), position=2, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output_directory", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output_directory", type_hint=File()), doc=OutputDocumentation(doc="Path of the directory in which results will be stored.\nDefault path is the current path")), ToolOutput(tag="out_significant_reads", output_type=File(optional=True), selector=InputSelector(input_to_select="in_significant_reads", type_hint=File()), doc=OutputDocumentation(doc="Output Significant Reads: Enter '--significant_reads'\nto have SICER produce a BED file of treatment reads\nfiltered by significant islands and WIG file of\nfiltered reads binned into windows"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Sicer_V0_1_0().translate("wdl", allow_empty_container=True)

