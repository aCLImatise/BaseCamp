!Command
command:
- design-ligandswitch.py
positional:
- !Positional
  optional: false
  position: 0
  name: stdin
  description: -r RATIO, --ratio RATIO
named:
- !Flag
  optional: true
  synonyms:
  - -f
  - --file
  description: Read file in *.inp format
  args: !SimpleFlagArg
    name: FILE
- !Flag
  optional: true
  synonyms:
  - -i
  - --input
  description: Read custom structures and sequence constraints from
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -l
  - --ligand
  description: "Binding motif and energy of the ligand (default:\n\"GAUACCAG&CCCUUGGCAGC;(...((((&)...)))...);-9.22\"\
    )"
  args: !SimpleFlagArg
    name: LIGAND
- !Flag
  optional: true
  synonyms:
  - -T
  - --temperature
  description: Temperature of the energy calculations.
  args: !SimpleFlagArg
    name: TEMPERATURE
- !Flag
  optional: true
  synonyms:
  - -n
  - --number
  description: Number of designs to generate
  args: !SimpleFlagArg
    name: NUMBER
- !Flag
  optional: true
  synonyms:
  - -s
  - --stop
  description: "Stop optimization run if no better solution is aquired\nafter (stop)\
    \ trials."
  args: !SimpleFlagArg
    name: STOP
- !Flag
  optional: true
  synonyms:
  - -m
  - --mode
  description: "Mode for getting a new sequence: sample,\nsample_plocal, sample_clocal,\
    \ random"
  args: !SimpleFlagArg
    name: MODE
- !Flag
  optional: true
  synonyms:
  - -k
  - --kill
  description: "Timeout value of graph construction in seconds.\n(default: infinite)"
  args: !SimpleFlagArg
    name: KILL
- !Flag
  optional: true
  synonyms:
  - -g
  - --graphml
  description: Write a graphml file with the given filename.
  args: !SimpleFlagArg
    name: GRAPHML
- !Flag
  optional: true
  synonyms:
  - -c
  - --csv
  description: Write output as semi-colon csv file to stdout
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -p
  - --progress
  description: Show progress of optimization
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -d
  - --debug
  description: Show debug information of library
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -r
  description: ''
  args: !SimpleFlagArg
    name: RATIO
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "usage: design-ligandswitch.py [-h] [-f FILE] [-i] [-r RATIO] [-l LIGAND]\n\
  \                              [-T TEMPERATURE] [-n NUMBER] [-s STOP] [-m MODE]\n\
  \                              [-k KILL] [-g GRAPHML] [-c] [-p] [-d]\n\nDesign a\
  \ ligand triggered device.\n\noptional arguments:\n  -h, --help            show\
  \ this help message and exit\n  -f FILE, --file FILE  Read file in *.inp format\n\
  \  -i, --input           Read custom structures and sequence constraints from\n\
  \                        stdin\n  -r RATIO, --ratio RATIO\n                    \
  \    Ratio of the alternative to binding competent state in\n                  \
  \      percent (default: 90:10)\n  -l LIGAND, --ligand LIGAND\n                \
  \        Binding motif and energy of the ligand (default:\n                    \
  \    \"GAUACCAG&CCCUUGGCAGC;(...((((&)...)))...);-9.22\")\n  -T TEMPERATURE, --temperature\
  \ TEMPERATURE\n                        Temperature of the energy calculations.\n\
  \  -n NUMBER, --number NUMBER\n                        Number of designs to generate\n\
  \  -s STOP, --stop STOP  Stop optimization run if no better solution is aquired\n\
  \                        after (stop) trials.\n  -m MODE, --mode MODE  Mode for\
  \ getting a new sequence: sample,\n                        sample_plocal, sample_clocal,\
  \ random\n  -k KILL, --kill KILL  Timeout value of graph construction in seconds.\n\
  \                        (default: infinite)\n  -g GRAPHML, --graphml GRAPHML\n\
  \                        Write a graphml file with the given filename.\n  -c, --csv\
  \             Write output as semi-colon csv file to stdout\n  -p, --progress  \
  \      Show progress of optimization\n  -d, --debug           Show debug information\
  \ of library\n"
generated_using:
- --help
docker_image:
