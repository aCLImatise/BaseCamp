from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File

Rnazindex_Pl_V0_1_0 = CommandToolBuilder(tool="rnazIndex.pl", base_command=["rnazIndex.pl"], inputs=[ToolInput(tag="in_gff", input_type=Boolean(optional=True), prefix="--gff", doc=InputDocumentation(doc="Generate GFF formatted output.")), ToolInput(tag="in_bed", input_type=Boolean(optional=True), prefix="--bed", doc=InputDocumentation(doc="Generate BED formatted output.")), ToolInput(tag="in_label__col", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="#:LABEL, --col #:LABEL\nAppend a column named LABEL to the HTML-table holding the data\nfrom the input file column with index #. e.g. 'rnazIndex.pl\n--html --col 19:Alifoldz --col 20:RNAmicro annotated.dat'")), ToolInput(tag="in_fast_a", input_type=Boolean(optional=True), prefix="--fasta", doc=InputDocumentation(doc="Get sequences in FASTA format for loci or windows. See options\n'--seq-dir', '--forward', '--reverse'!")), ToolInput(tag="in_seq_dir", input_type=Boolean(optional=True), prefix="--seq-dir", doc=InputDocumentation(doc="Directory with sequence files. You only need this for FASTA\noutput (see option '--fasta'). The files should be named with\nthe sequence identifier and the extension '.fa' or '.fasta'. If\nyour identifier in your input file is for example 'contig100'\nthen you should have a file named 'contig100.fa'. (If your\nidentifier is of the form ``assembly.chromosome' as for example\nused by UCSC alignments, it is also possible to name the file\n'chr22.fa' for a sequence identifier 'hg17.chr22').")), ToolInput(tag="in_forward", input_type=Boolean(optional=True), prefix="--forward", doc=InputDocumentation(doc="Only relevant for FASTA output (see option '--fasta'). You can\nset if you want the forward or reverse complement of the\nsequence corresponding to a locus. Since loci don't have strand\ninformation you might consider both strands for further\nanalysis. Windows have strand information, so if you export\nwindows as FASTA these options are ignored.")), ToolInput(tag="in_ucsc", input_type=Boolean(optional=True), prefix="--ucsc", doc=InputDocumentation(doc="In UCSC MAF alignment files it is common to use sequence\nidentifiers like for example ``hg17.chr22'. However, in BED are\nusually specific for a given assembly and therefore only\n``chr22' is used in the BED files. With this option you change\nany identifier of the form ``X.Y' into ``Y'. Moreover, the\nscores are multiplied by 1000 and rounded to integers since the\nUCSC genome browser expects scores between 0 and 1000.")), ToolInput(tag="in_loci", input_type=Boolean(optional=True), prefix="--loci", doc=InputDocumentation(doc="Use the locus information to generate the lines for the GFF and\nBED files. This is the default.")), ToolInput(tag="in_windows", input_type=Boolean(optional=True), prefix="--windows", doc=InputDocumentation(doc="Print the 'windows' and not the 'loci'. Probably, rarely used\nfunction.")), ToolInput(tag="in_html", input_type=File(optional=True), prefix="--html", doc=InputDocumentation(doc="With this option you get a HTML table which links to the the\nHTML pages which you can create by using the '--html' option in\n'rnazCluster.pl'. Redirect the output to some file which resides\nin the 'results' directory created by 'rnazCluster.pl' and open\nthe file with your favourite web-browser.")), ToolInput(tag="in_man", input_type=Boolean(optional=True), prefix="--man", doc=InputDocumentation(doc="Prints a detailed manual page and exits."))], outputs=[ToolOutput(tag="out_html", output_type=File(optional=True), selector=InputSelector(input_to_select="in_html", type_hint=File()), doc=OutputDocumentation(doc="With this option you get a HTML table which links to the the\nHTML pages which you can create by using the '--html' option in\n'rnazCluster.pl'. Redirect the output to some file which resides\nin the 'results' directory created by 'rnazCluster.pl' and open\nthe file with your favourite web-browser."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Rnazindex_Pl_V0_1_0().translate("wdl", allow_empty_container=True)

