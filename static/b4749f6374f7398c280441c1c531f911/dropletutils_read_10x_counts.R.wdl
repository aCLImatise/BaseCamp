version 1.0

task Dropletutilsread10xcountsR {
  input {
    File? samples
    String? col_names
    String? metadata_files
    File? metadata_columns
    File? cell_id_column
    File? output_object_file
  }
  command <<<
    dropletutils_read_10x_counts_R \
      ~{if defined(samples) then ("--samples " +  '"' + samples + '"') else ""} \
      ~{if defined(col_names) then ("--col-names " +  '"' + col_names + '"') else ""} \
      ~{if defined(metadata_files) then ("--metadata-files " +  '"' + metadata_files + '"') else ""} \
      ~{if defined(metadata_columns) then ("--metadata-columns " +  '"' + metadata_columns + '"') else ""} \
      ~{if defined(cell_id_column) then ("--cell-id-column " +  '"' + cell_id_column + '"') else ""} \
      ~{if defined(output_object_file) then ("--output-object-file " +  '"' + output_object_file + '"') else ""}
  >>>
  runtime {
    docker: "None"
  }
  parameter_meta {
    samples: "A comma-separated list containing one or more directory names, each\\ncorresponding to a 10X sample. Each directory should contain the 'matrix.mtx',\\n'genes.tsv' and 'barcodes.tsv' files generated by CellRanger.\\nAlternatively, strings may contain a path to a HDF5 file in the sparse\\nmatrix format generated by 10X. These can be mixed with directory\\nnames when type='auto'."
    col_names: "A logical scalar indicating whether the columns of the output object\\nshould be named with the cell barcodes."
    metadata_files: "A comma-separated list containing one or more paths to\\nmetadata files in .txt format, e.g. with cell type annotations.\\nNote that gene ids must be consistent across the files\\nand correspond to the matrix data."
    metadata_columns: "A comma-separated list of metadata file field names that should be\\nadded to the SCE object. By default, all columns are kept."
    cell_id_column: "Name of the metadata file column that corresponds to the unique identifier\\nof each cell in the dataset (e.g. barcode). Must correspond to column names in\\nthe 10X directory."
    output_object_file: "File name in which to store serialized SingleCellExperiment object."
  }
  output {
    File out_stdout = stdout()
    File out_output_object_file = "${in_output_object_file}"
  }
}