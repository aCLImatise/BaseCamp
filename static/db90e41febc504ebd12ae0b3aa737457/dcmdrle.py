from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Dcmdrle_V0_1_0 = CommandToolBuilder(tool="dcmdrle", base_command=["dcmdrle"], inputs=[ToolInput(tag="in_arguments", input_type=Boolean(optional=True), prefix="--arguments", doc=InputDocumentation(doc="print expanded command line arguments")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="quiet mode, print no warnings and errors")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="verbose mode, print processing details")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="debug mode, print debug information")), ToolInput(tag="in_log_level", input_type=Boolean(optional=True), prefix="--log-level", doc=InputDocumentation(doc="[l]evel: string constant\n(fatal, error, warn, info, debug, trace)\nuse level l for the logger")), ToolInput(tag="in_log_config", input_type=Boolean(optional=True), prefix="--log-config", doc=InputDocumentation(doc="[f]ilename: string\nuse config file f for the logger")), ToolInput(tag="in_read_dataset", input_type=Boolean(optional=True), prefix="--read-dataset", doc=InputDocumentation(doc="read data set without file meta information")), ToolInput(tag="in_write_dataset", input_type=Boolean(optional=True), prefix="--write-dataset", doc=InputDocumentation(doc="write data set without file meta information")), ToolInput(tag="in_disable_new_vr", input_type=Boolean(optional=True), prefix="--disable-new-vr", doc=InputDocumentation(doc="disable support for new VRs, convert to OB")), ToolInput(tag="in_group_length_remove", input_type=Boolean(optional=True), prefix="--group-length-remove", doc=InputDocumentation(doc="always write without group length elements")), ToolInput(tag="in_length_undefined", input_type=Boolean(optional=True), prefix="--length-undefined", doc=InputDocumentation(doc="write with undefined lengths")), ToolInput(tag="in__paddingretain_change", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="=  --padding-retain       do not change padding\n(default if not --write-dataset)")), ToolInput(tag="in_padding_off", input_type=Boolean(optional=True), prefix="--padding-off", doc=InputDocumentation(doc="no padding (implicit if --write-dataset)")), ToolInput(tag="in_dcm_file_in", input_type=String(), position=0, doc=InputDocumentation(doc="DICOM input filename to be converted")), ToolInput(tag="in_dcm_file_out", input_type=String(), position=1, doc=InputDocumentation(doc="DICOM output filename"))], outputs=[], container="quay.io/biocontainers/dcmtk:3.6.5--h5fca97b_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Dcmdrle_V0_1_0().translate("wdl")

