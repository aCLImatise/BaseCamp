!Command
command:
- stats_from_bam
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - --bed
  description: ".bed file of reference regions to include. (default:\nNone)"
  args: !SimpleFlagArg
    name: BED
- !Flag
  optional: true
  synonyms:
  - -m
  - --min_length
  - -a
  - --all_alignments
  description: "Include secondary and supplementary alignments.\n(default: False)"
  args: !SimpleFlagArg
    name: MIN_LENGTH
- !Flag
  optional: true
  synonyms:
  - -o
  - --output
  description: "Output alignment stats to file instead of stdout.\n(default: <_io.TextIOWrapper\
    \ name='<stdout>' mode='w'\nencoding='ANSI_X3.4-1968'>)"
  args: !SimpleFlagArg
    name: OUTPUT
- !Flag
  optional: true
  synonyms:
  - -s
  - --summary
  description: "Output summary to file instead of stderr. (default:\n<_io.TextIOWrapper\
    \ name='<stderr>' mode='w'\nencoding='ANSI_X3.4-1968'>)"
  args: !SimpleFlagArg
    name: SUMMARY
- !Flag
  optional: true
  synonyms:
  - -t
  - --threads
  description: "Number of threads for parallel processing. (default:\n1)\n"
  args: !SimpleFlagArg
    name: THREADS
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "usage: stats_from_bam [-h] [--bed BED] [-m MIN_LENGTH] [-a] [-o OUTPUT]\n\
  \                      [-s SUMMARY] [-t THREADS]\n                      bam\n\n\
  Parse a bamfile (from a stream) and output summary stats for each read.\n\npositional\
  \ arguments:\n  bam                   Path to bam file.\n\noptional arguments:\n\
  \  -h, --help            show this help message and exit\n  --bed BED          \
  \   .bed file of reference regions to include. (default:\n                     \
  \   None)\n  -m MIN_LENGTH, --min_length MIN_LENGTH\n  -a, --all_alignments  Include\
  \ secondary and supplementary alignments.\n                        (default: False)\n\
  \  -o OUTPUT, --output OUTPUT\n                        Output alignment stats to\
  \ file instead of stdout.\n                        (default: <_io.TextIOWrapper\
  \ name='<stdout>' mode='w'\n                        encoding='ANSI_X3.4-1968'>)\n\
  \  -s SUMMARY, --summary SUMMARY\n                        Output summary to file\
  \ instead of stderr. (default:\n                        <_io.TextIOWrapper name='<stderr>'\
  \ mode='w'\n                        encoding='ANSI_X3.4-1968'>)\n  -t THREADS, --threads\
  \ THREADS\n                        Number of threads for parallel processing. (default:\n\
  \                        1)\n"
generated_using:
- --help
docker_image:
