from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Int, Boolean

Gwama_V0_1_0 = CommandToolBuilder(tool="GWAMA", base_command=["GWAMA"], inputs=[ToolInput(tag="in_random", input_type=String(optional=True), prefix="--random", doc=InputDocumentation(doc="Use random effect correction")), ToolInput(tag="in_genomic_control", input_type=String(optional=True), prefix="--genomic_control", doc=InputDocumentation(doc="Use genomic control for\nadjusting studies' result files")), ToolInput(tag="in_genomic_control_output", input_type=String(optional=True), prefix="--genomic_control_output", doc=InputDocumentation(doc="Use  genomic\ncontrol on meta-analysis summary.\n(i.e. results  of meta-\nanalysis are corrected for gc)")), ToolInput(tag="in_quantitative", input_type=Int(optional=True), prefix="--quantitative", doc=InputDocumentation(doc="Use this option, if trait is\nquantitative (columns BETA & SE).\nDefault is binary trait (columns OR,\nOR95_U, OR_95_L)")), ToolInput(tag="in_threshold", input_type=String(optional=True), prefix="--threshold", doc=InputDocumentation(doc="or -t {0-1} The p-value threshold\nfor showing direction. Default = 1")), ToolInput(tag="in_map", input_type=String(optional=True), prefix="--map", doc=InputDocumentation(doc="or -m {filename} Marker position\nfile for chromosome and position info")), ToolInput(tag="in_no_alleles", input_type=Boolean(optional=True), prefix="--no_alleles", doc=InputDocumentation(doc="No allele information has been given.\nExpecting always the same EA.")), ToolInput(tag="in_in_del_alleles", input_type=Boolean(optional=True), prefix="--indel_alleles", doc=InputDocumentation(doc="Allele labes might contain more\nthan single letter. No strand checks.")), ToolInput(tag="in_sex", input_type=Boolean(optional=True), prefix="--sex", doc=InputDocumentation(doc="Run gender-differentiated and gender-\nheterogeneity analysis. Gender info\nmust be provided in filelist file.\n(second column after file names is\neither M or F) More info in tutorial.")), ToolInput(tag="in_filter", input_type=Boolean(optional=True), prefix="--filter", doc=InputDocumentation(doc="Set a filtering based on column\nheader. It needs 3 arguments: column\nname, equation [>,<,>=,<=,==,!=],\nfilter value. Multiple filters can be\nset.")), ToolInput(tag="in_name_marker", input_type=Boolean(optional=True), prefix="--name_marker", doc=InputDocumentation(doc="alternative header to marker name col")), ToolInput(tag="in_name_strand", input_type=Boolean(optional=True), prefix="--name_strand", doc=InputDocumentation(doc="alternative header to strand column")), ToolInput(tag="in_name_n", input_type=Boolean(optional=True), prefix="--name_n", doc=InputDocumentation(doc="alternative header to sample size col")), ToolInput(tag="in_name_eaf", input_type=Boolean(optional=True), prefix="--name_eaf", doc=InputDocumentation(doc="alternative header to EAF column")), ToolInput(tag="in_name_beta", input_type=Boolean(optional=True), prefix="--name_beta", doc=InputDocumentation(doc="alternative header to beta column")), ToolInput(tag="in_name_se", input_type=Boolean(optional=True), prefix="--name_se", doc=InputDocumentation(doc="alternative header to std. err. col")), ToolInput(tag="in_name_or", input_type=Boolean(optional=True), prefix="--name_or", doc=InputDocumentation(doc="alternative header to OR column")), ToolInput(tag="in_name_or_nine_five_l", input_type=Boolean(optional=True), prefix="--name_or_95l", doc=InputDocumentation(doc="alternative header to OR 95L column")), ToolInput(tag="in_name_or_nine_five_u", input_type=Boolean(optional=True), prefix="--name_or_95u", doc=InputDocumentation(doc="alternative header to OR 95U column")), ToolInput(tag="in_gw_am_a_dot_in", input_type=String(), position=0, doc=InputDocumentation(doc="--output {fileroot} or -o  {fileroot} Specify file   "))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Gwama_V0_1_0().translate("wdl", allow_empty_container=True)

