!Command
command:
- svtk
- sr-test
positional:
- !Positional
  optional: false
  position: 0
  name: vcf
  description: "VCF of variant calls. Standardized to include CHR2,\nEND, SVTYPE,\
    \ STRANDS in INFO."
- !Positional
  optional: false
  position: 1
  name: countfile
  description: "Tabix indexed file of split counts. Columns:\nchrom,pos,clip,count,sample"
- !Positional
  optional: false
  position: 2
  name: fout
  description: Output table of most significant start/endpositions.
named:
- !Flag
  optional: true
  synonyms:
  - -w
  - --window
  description: "Window around variant start/end to consider for split\nread support.\
    \ [100]"
  args: !SimpleFlagArg
    name: WINDOW
- !Flag
  optional: true
  synonyms:
  - -b
  - --background
  description: "Number of background samples to choose for comparison\nin t-test.\
    \ [160]"
  args: !SimpleFlagArg
    name: BACKGROUND
- !Flag
  optional: true
  synonyms:
  - -s
  - --samples
  description: Whitelist of samples to restrict testing to.
  args: !SimpleFlagArg
    name: SAMPLES
- !Flag
  optional: true
  synonyms:
  - --index
  description: "Tabix index of discordant pair file. Required if\ndiscordant pair\
    \ file is hosted remotely."
  args: !SimpleFlagArg
    name: INDEX
- !Flag
  optional: true
  synonyms:
  - --medianfile
  description: "Median coverage statistics for each library\n(optional). If provided,\
    \ each sample's split counts\nwill be normalized accordingly. Same format as RdTest,\n\
    one column per sample."
  args: !SimpleFlagArg
    name: MEDIANFILE
- !Flag
  optional: true
  synonyms:
  - --log
  description: Print progress log to stderr.
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "usage: svtk sr-test [-h] [-w WINDOW] [-b BACKGROUND] [-s SAMPLES]\n  \
  \                  [--index INDEX] [--medianfile MEDIANFILE] [--log]\n         \
  \           vcf countfile fout\n\nCalculate enrichment of clipped reads at SV breakpoints.\n\
  \npositional arguments:\n  vcf                   VCF of variant calls. Standardized\
  \ to include CHR2,\n                        END, SVTYPE, STRANDS in INFO.\n  countfile\
  \             Tabix indexed file of split counts. Columns:\n                   \
  \     chrom,pos,clip,count,sample\n  fout                  Output table of most\
  \ significant start/endpositions.\n\noptional arguments:\n  -h, --help         \
  \   show this help message and exit\n  -w WINDOW, --window WINDOW\n            \
  \            Window around variant start/end to consider for split\n           \
  \             read support. [100]\n  -b BACKGROUND, --background BACKGROUND\n  \
  \                      Number of background samples to choose for comparison\n \
  \                       in t-test. [160]\n  -s SAMPLES, --samples SAMPLES\n    \
  \                    Whitelist of samples to restrict testing to.\n  --index INDEX\
  \         Tabix index of discordant pair file. Required if\n                   \
  \     discordant pair file is hosted remotely.\n  --medianfile MEDIANFILE\n    \
  \                    Median coverage statistics for each library\n             \
  \           (optional). If provided, each sample's split counts\n              \
  \          will be normalized accordingly. Same format as RdTest,\n            \
  \            one column per sample.\n  --log                 Print progress log\
  \ to stderr.\n"
generated_using:
- --help
docker_image:
