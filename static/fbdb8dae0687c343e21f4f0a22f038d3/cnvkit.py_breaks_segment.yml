&id006 !Command
command:
- cnvkit.py
- breaks
- segment
positional:
- !Positional
  description: ''
  position: 0
  name: cnvkit.py
  optional: false
- !Positional
  description: ''
  position: 1
  name: breaks
  optional: false
- !Positional
  description: ''
  position: 2
  name: filename
  optional: false
- !Positional
  description: ''
  position: 3
  name: segment
  optional: false
named:
- !Flag
  description: ''
  synonyms:
  - -o
  args: !SimpleFlagArg
    name: FILENAME
  optional: true
- !Flag
  description: ''
  synonyms:
  - -m
  args: !SimpleFlagArg
    name: MIN_PROBES
  optional: true
parent: &id004 !Command
  command:
  - cnvkit.py
  - breaks
  positional: []
  named:
  - !Flag
    description: "Minimum number of within-gene probes on both sides of\na breakpoint\
      \ to report it. [Default: 1]"
    synonyms:
    - -m
    - --min-probes
    args: !SimpleFlagArg
      name: MIN_PROBES
    optional: true
  - !Flag
    description: "Output table file name.\n"
    synonyms:
    - -o
    - --output
    args: !SimpleFlagArg
      name: FILENAME
    optional: true
  parent: &id001 !Command
    command:
    - cnvkit.py
    positional: []
    named: []
    parent:
    subcommands:
    - !Command
      command:
      - cnvkit.py
      - fix
      positional:
      - !Positional
        description: Target coverage file (.targetcoverage.cnn).
        position: 0
        name: target
        optional: false
      - !Positional
        description: Antitarget coverage file (.antitargetcoverage.cnn).
        position: 1
        name: antitarget
        optional: false
      - !Positional
        description: Reference coverage (.cnn).
        position: 2
        name: reference
        optional: false
      named:
      - !Flag
        description: "Compare and use cluster-specific values present in the\nreference\
          \ profile. (Requires that the reference\nprofile was built with the --cluster\
          \ option.)"
        synonyms:
        - -c
        - --cluster
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "Sample ID for target/antitarget files. Otherwise\ninferred from\
          \ file names."
        synonyms:
        - -i
        - --sample-id
        args: !SimpleFlagArg
          name: SAMPLE_ID
        optional: true
      - !Flag
        description: Skip GC correction.
        synonyms:
        - --no-gc
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: Skip edge-effect correction.
        synonyms:
        - --no-edge
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: Skip RepeatMasker correction.
        synonyms:
        - --no-rmask
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "Output file name.\n"
        synonyms:
        - -o
        - --output
        args: !SimpleFlagArg
          name: FILENAME
        optional: true
      parent: *id001
      subcommands: []
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: cnvkit.py fix [-h] [-c] [-i SAMPLE_ID] [--no-gc] [--no-edge]\n\
        \                     [--no-rmask] [-o FILENAME]\n                     target\
        \ antitarget reference\n\npositional arguments:\n  target                Target\
        \ coverage file (.targetcoverage.cnn).\n  antitarget            Antitarget\
        \ coverage file (.antitargetcoverage.cnn).\n  reference             Reference\
        \ coverage (.cnn).\n\noptional arguments:\n  -h, --help            show this\
        \ help message and exit\n  -c, --cluster         Compare and use cluster-specific\
        \ values present in the\n                        reference profile. (Requires\
        \ that the reference\n                        profile was built with the --cluster\
        \ option.)\n  -i SAMPLE_ID, --sample-id SAMPLE_ID\n                      \
        \  Sample ID for target/antitarget files. Otherwise\n                    \
        \    inferred from file names.\n  --no-gc               Skip GC correction.\n\
        \  --no-edge             Skip edge-effect correction.\n  --no-rmask      \
        \      Skip RepeatMasker correction.\n  -o FILENAME, --output FILENAME\n \
        \                       Output file name.\n"
      generated_using: &id002
      - --help
    - !Command
      command:
      - cnvkit.py
      - segment
      positional: []
      named:
      - !Flag
        description: "Output table file name (CNR-like table of segments,\n.cns)."
        synonyms:
        - -o
        - --output
        args: !SimpleFlagArg
          name: FILENAME
        optional: true
      - !Flag
        description: "File name to save the raw R dataframe emitted by CBS\nor Fused\
          \ Lasso. (Useful for debugging.)"
        synonyms:
        - -d
        - --dataframe
        args: !SimpleFlagArg
          name: DATAFRAME
        optional: true
      - !Flag
        description: "Segmentation method (see docs), or 'none' for\nchromosome arm-level\
          \ averages as segments. [Default:\ncbs]"
        synonyms:
        - -m
        - --method
        args: !ChoiceFlagArg
          choices: !!set
            ? cbs
            ? none
            ? hmm
            ? haar
            ? flasso
            ? hmm-germline
            ? hmm-tumor
        optional: true
      - !Flag
        description: "Significance threshold (p-value or FDR, depending on\nmethod)\
          \ to accept breakpoints during segmentation. For\nHMM methods, this is the\
          \ smoothing window size."
        synonyms:
        - -t
        - --threshold
        args: !SimpleFlagArg
          name: THRESHOLD
        optional: true
      - !Flag
        description: "Drop very-low-coverage bins before segmentation to\navoid false-positive\
          \ deletions in poor-quality tumor\nsamples."
        synonyms:
        - --drop-low-coverage
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "Drop outlier bins more than this many multiples of the\n95th\
          \ quantile away from the average within a rolling\nwindow. Set to 0 for\
          \ no outlier filtering. [Default:\n10]"
        synonyms:
        - --drop-outliers
        args: !SimpleFlagArg
          name: FACTOR
        optional: true
      - !Flag
        description: "Path to the Rscript excecutable to use for running R\ncode.\
          \ Use this option to specify a non-default R\ninstallation. [Default: Rscript]"
        synonyms:
        - --rscript-path
        args: !SimpleFlagArg
          name: PATH
        optional: true
      - !Flag
        description: "[PROCESSES], --processes [PROCESSES]\nNumber of subprocesses\
          \ to segment in parallel. Give 0\nor a negative value to use the maximum\
          \ number of\navailable CPUs. [Default: use 1 process]"
        synonyms:
        - -p
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "Perform an additional smoothing before CBS\nsegmentation, which\
          \ in some cases may increase the\nsensitivity. Used only for CBS method."
        synonyms:
        - --smooth-cbs
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "VCF file name containing variants for segmentation by\nallele\
          \ frequencies."
        synonyms:
        - -v
        - --vcf
        args: !SimpleFlagArg
          name: FILENAME
        optional: true
      - !Flag
        description: "Specify the name of the sample in the VCF (-v/--vcf)\nto use\
          \ for b-allele frequency extraction and as the\ndefault plot title."
        synonyms:
        - -i
        - --sample-id
        args: !SimpleFlagArg
          name: SAMPLE_ID
        optional: true
      - !Flag
        description: "Corresponding normal sample ID in the input VCF\n(-v/--vcf).\
          \ This sample is used to select only\ngermline SNVs to plot b-allele frequencies."
        synonyms:
        - -n
        - --normal-id
        args: !SimpleFlagArg
          name: NORMAL_ID
        optional: true
      - !Flag
        description: "Minimum read depth for a SNV to be displayed in the\nb-allele\
          \ frequency plot. [Default: 20]"
        synonyms:
        - --min-variant-depth
        args: !SimpleFlagArg
          name: MIN_VARIANT_DEPTH
        optional: true
      - !Flag
        description: "[ALT_FREQ], --zygosity-freq [ALT_FREQ]\nIgnore VCF's genotypes\
          \ (GT field) and instead infer\nzygosity from allele frequencies. [Default\
          \ if used\nwithout a number: 0.25]\n"
        synonyms:
        - -z
        args: !EmptyFlagArg {}
        optional: true
      parent: *id001
      subcommands: []
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: cnvkit.py segment [-h] [-o FILENAME] [-d DATAFRAME]\n   \
        \                      [-m {cbs,flasso,haar,none,hmm,hmm-tumor,hmm-germline}]\n\
        \                         [-t THRESHOLD] [--drop-low-coverage]\n         \
        \                [--drop-outliers FACTOR] [--rscript-path PATH]\n        \
        \                 [-p [PROCESSES]] [--smooth-cbs] [-v FILENAME]\n        \
        \                 [-i SAMPLE_ID] [-n NORMAL_ID]\n                        \
        \ [--min-variant-depth MIN_VARIANT_DEPTH]\n                         [-z [ALT_FREQ]]\n\
        \                         filename\n\npositional arguments:\n  filename  \
        \            Bin-level log2 ratios (.cnr file), as produced by\n         \
        \               'fix'.\n\noptional arguments:\n  -h, --help            show\
        \ this help message and exit\n  -o FILENAME, --output FILENAME\n         \
        \               Output table file name (CNR-like table of segments,\n    \
        \                    .cns).\n  -d DATAFRAME, --dataframe DATAFRAME\n     \
        \                   File name to save the raw R dataframe emitted by CBS\n\
        \                        or Fused Lasso. (Useful for debugging.)\n  -m {cbs,flasso,haar,none,hmm,hmm-tumor,hmm-germline},\
        \ --method {cbs,flasso,haar,none,hmm,hmm-tumor,hmm-germline}\n           \
        \             Segmentation method (see docs), or 'none' for\n            \
        \            chromosome arm-level averages as segments. [Default:\n      \
        \                  cbs]\n  -t THRESHOLD, --threshold THRESHOLD\n         \
        \               Significance threshold (p-value or FDR, depending on\n   \
        \                     method) to accept breakpoints during segmentation. For\n\
        \                        HMM methods, this is the smoothing window size.\n\
        \  --drop-low-coverage   Drop very-low-coverage bins before segmentation to\n\
        \                        avoid false-positive deletions in poor-quality tumor\n\
        \                        samples.\n  --drop-outliers FACTOR\n            \
        \            Drop outlier bins more than this many multiples of the\n    \
        \                    95th quantile away from the average within a rolling\n\
        \                        window. Set to 0 for no outlier filtering. [Default:\n\
        \                        10]\n  --rscript-path PATH   Path to the Rscript\
        \ excecutable to use for running R\n                        code. Use this\
        \ option to specify a non-default R\n                        installation.\
        \ [Default: Rscript]\n  -p [PROCESSES], --processes [PROCESSES]\n        \
        \                Number of subprocesses to segment in parallel. Give 0\n \
        \                       or a negative value to use the maximum number of\n\
        \                        available CPUs. [Default: use 1 process]\n  --smooth-cbs\
        \          Perform an additional smoothing before CBS\n                  \
        \      segmentation, which in some cases may increase the\n              \
        \          sensitivity. Used only for CBS method.\n\nTo additionally segment\
        \ SNP b-allele frequencies:\n  -v FILENAME, --vcf FILENAME\n             \
        \           VCF file name containing variants for segmentation by\n      \
        \                  allele frequencies.\n  -i SAMPLE_ID, --sample-id SAMPLE_ID\n\
        \                        Specify the name of the sample in the VCF (-v/--vcf)\n\
        \                        to use for b-allele frequency extraction and as the\n\
        \                        default plot title.\n  -n NORMAL_ID, --normal-id\
        \ NORMAL_ID\n                        Corresponding normal sample ID in the\
        \ input VCF\n                        (-v/--vcf). This sample is used to select\
        \ only\n                        germline SNVs to plot b-allele frequencies.\n\
        \  --min-variant-depth MIN_VARIANT_DEPTH\n                        Minimum\
        \ read depth for a SNV to be displayed in the\n                        b-allele\
        \ frequency plot. [Default: 20]\n  -z [ALT_FREQ], --zygosity-freq [ALT_FREQ]\n\
        \                        Ignore VCF's genotypes (GT field) and instead infer\n\
        \                        zygosity from allele frequencies. [Default if used\n\
        \                        without a number: 0.25]\n"
      generated_using: *id002
    - !Command
      command:
      - cnvkit.py
      - together.
      positional:
      - !Positional
        description: ''
        position: 0
        name: cnvkit.py
        optional: false
      named: []
      parent: *id001
      subcommands: []
      usage: []
      help_flag: !Flag
        description: ''
        synonyms:
        - -h
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: cnvkit.py [-h]\n                 {batch,target,access,antitarget,autobin,coverage,reference,fix,segment,call,diagram,scatter,heatmap,breaks,genemetrics,gainloss,sex,gender,metrics,segmetrics,bintest,import-picard,import-seg,import-theta,import-rna,export,version}\n\
        \                 ...\ncnvkit.py: error: invalid choice: 'together.' (choose\
        \ from 'batch', 'target', 'access', 'antitarget', 'autobin', 'coverage', 'reference',\
        \ 'fix', 'segment', 'call', 'diagram', 'scatter', 'heatmap', 'breaks', 'genemetrics',\
        \ 'gainloss', 'sex', 'gender', 'metrics', 'segmetrics', 'bintest', 'import-picard',\
        \ 'import-seg', 'import-theta', 'import-rna', 'export', 'version')\n"
      generated_using: *id002
    - !Command
      command:
      - cnvkit.py
      - ratios.
      positional:
      - !Positional
        description: ''
        position: 0
        name: cnvkit.py
        optional: false
      named: []
      parent: *id001
      subcommands: []
      usage: []
      help_flag: !Flag
        description: ''
        synonyms:
        - -h
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: cnvkit.py [-h]\n                 {batch,target,access,antitarget,autobin,coverage,reference,fix,segment,call,diagram,scatter,heatmap,breaks,genemetrics,gainloss,sex,gender,metrics,segmetrics,bintest,import-picard,import-seg,import-theta,import-rna,export,version}\n\
        \                 ...\ncnvkit.py: error: invalid choice: 'ratios.' (choose\
        \ from 'batch', 'target', 'access', 'antitarget', 'autobin', 'coverage', 'reference',\
        \ 'fix', 'segment', 'call', 'diagram', 'scatter', 'heatmap', 'breaks', 'genemetrics',\
        \ 'gainloss', 'sex', 'gender', 'metrics', 'segmetrics', 'bintest', 'import-picard',\
        \ 'import-seg', 'import-theta', 'import-rna', 'export', 'version')\n"
      generated_using: *id002
    - !Command
      command:
      - cnvkit.py
      - genemetrics
      positional: []
      named:
      - !Flag
        description: "Segmentation calls (.cns), the output of the 'segment'\ncommand)."
        synonyms:
        - -s
        - --segment
        args: !SimpleFlagArg
          name: SEGMENT
        optional: true
      - !Flag
        description: "Copy number change threshold to report a gene\ngain/loss. [Default:\
          \ 0.2]"
        synonyms:
        - -t
        - --threshold
        args: !SimpleFlagArg
          name: THRESHOLD
        optional: true
      - !Flag
        description: "Minimum number of covered probes to report a\ngain/loss. [Default:\
          \ 3]"
        synonyms:
        - -m
        - --min-probes
        args: !SimpleFlagArg
          name: MIN_PROBES
        optional: true
      - !Flag
        description: "Drop very-low-coverage bins before segmentation to\navoid false-positive\
          \ deletions in poor-quality tumor\nsamples."
        synonyms:
        - --drop-low-coverage
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "Assume inputs were normalized to a male reference\n(i.e. female\
          \ samples will have +1 log-coverage of\nchrX; otherwise male samples would\
          \ have -1 chrX)."
        synonyms:
        - -y
        - --male-reference
        - --haploid-x-reference
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "Specify the sample's chromosomal sex as male or\nfemale. (Otherwise\
          \ guessed from X and Y coverage)."
        synonyms:
        - -x
        - --sample-sex
        - -g
        - --gender
        args: !ChoiceFlagArg
          choices: !!set
            ? x
            ? f
            ? female
            ? y
            ? male
            ? Female
            ? Male
            ? m
        optional: true
      - !Flag
        description: Output table file name.
        synonyms:
        - -o
        - --output
        args: !SimpleFlagArg
          name: FILENAME
        optional: true
      - !Flag
        description: Mean log2-ratio (unweighted).
        synonyms:
        - --mean
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: Median.
        synonyms:
        - --median
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: Mode (i.e. peak density of log2 ratios).
        synonyms:
        - --mode
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: One-sample t-test of bin log2 ratios versus 0.0.
        synonyms:
        - --ttest
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: Standard deviation.
        synonyms:
        - --stdev
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: Standard error of the mean.
        synonyms:
        - --sem
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: Median absolute deviation (standardized).
        synonyms:
        - --mad
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: Mean squared error.
        synonyms:
        - --mse
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: Inter-quartile range.
        synonyms:
        - --iqr
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: Tukey's biweight midvariance.
        synonyms:
        - --bivar
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: Confidence interval (by bootstrap).
        synonyms:
        - --ci
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: Prediction interval.
        synonyms:
        - --pi
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "Level to estimate confidence and prediction intervals;\nuse\
          \ with --ci and --pi. [Default: 0.05]"
        synonyms:
        - -a
        - --alpha
        args: !SimpleFlagArg
          name: ALPHA
        optional: true
      - !Flag
        description: "Number of bootstrap iterations to estimate confidence\ninterval;\
          \ use with --ci. [Default: 100]\n"
        synonyms:
        - -b
        - --bootstrap
        args: !SimpleFlagArg
          name: BOOTSTRAP
        optional: true
      parent: *id001
      subcommands: []
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: cnvkit.py genemetrics [-h] [-s SEGMENT] [-t THRESHOLD] [-m\
        \ MIN_PROBES]\n                             [--drop-low-coverage] [-y]\n \
        \                            [-x {m,y,male,Male,f,x,female,Female}]\n    \
        \                         [-o FILENAME] [--mean] [--median] [--mode]\n   \
        \                          [--ttest] [--stdev] [--sem] [--mad] [--mse]\n \
        \                            [--iqr] [--bivar] [--ci] [--pi] [-a ALPHA]\n\
        \                             [-b BOOTSTRAP]\n                           \
        \  filename\n\npositional arguments:\n  filename              Processed sample\
        \ coverage data file (*.cnr), the\n                        output of the 'fix'\
        \ sub-command.\n\noptional arguments:\n  -h, --help            show this help\
        \ message and exit\n  -s SEGMENT, --segment SEGMENT\n                    \
        \    Segmentation calls (.cns), the output of the 'segment'\n            \
        \            command).\n  -t THRESHOLD, --threshold THRESHOLD\n          \
        \              Copy number change threshold to report a gene\n           \
        \             gain/loss. [Default: 0.2]\n  -m MIN_PROBES, --min-probes MIN_PROBES\n\
        \                        Minimum number of covered probes to report a\n  \
        \                      gain/loss. [Default: 3]\n  --drop-low-coverage   Drop\
        \ very-low-coverage bins before segmentation to\n                        avoid\
        \ false-positive deletions in poor-quality tumor\n                       \
        \ samples.\n  -y, --male-reference, --haploid-x-reference\n              \
        \          Assume inputs were normalized to a male reference\n           \
        \             (i.e. female samples will have +1 log-coverage of\n        \
        \                chrX; otherwise male samples would have -1 chrX).\n  -x {m,y,male,Male,f,x,female,Female},\
        \ --sample-sex {m,y,male,Male,f,x,female,Female}, -g {m,y,male,Male,f,x,female,Female},\
        \ --gender {m,y,male,Male,f,x,female,Female}\n                        Specify\
        \ the sample's chromosomal sex as male or\n                        female.\
        \ (Otherwise guessed from X and Y coverage).\n  -o FILENAME, --output FILENAME\n\
        \                        Output table file name.\n\nStatistics available:\n\
        \  --mean                Mean log2-ratio (unweighted).\n  --median       \
        \       Median.\n  --mode                Mode (i.e. peak density of log2 ratios).\n\
        \  --ttest               One-sample t-test of bin log2 ratios versus 0.0.\n\
        \  --stdev               Standard deviation.\n  --sem                 Standard\
        \ error of the mean.\n  --mad                 Median absolute deviation (standardized).\n\
        \  --mse                 Mean squared error.\n  --iqr                 Inter-quartile\
        \ range.\n  --bivar               Tukey's biweight midvariance.\n  --ci  \
        \                Confidence interval (by bootstrap).\n  --pi             \
        \     Prediction interval.\n  -a ALPHA, --alpha ALPHA\n                  \
        \      Level to estimate confidence and prediction intervals;\n          \
        \              use with --ci and --pi. [Default: 0.05]\n  -b BOOTSTRAP, --bootstrap\
        \ BOOTSTRAP\n                        Number of bootstrap iterations to estimate\
        \ confidence\n                        interval; use with --ci. [Default: 100]\n"
      generated_using: *id002
    - !Command
      command:
      - cnvkit.py
      - version
      positional:
      - !Positional
        description: ''
        position: 0
        name: cnvkit.py
        optional: false
      named: []
      parent: *id001
      subcommands: []
      usage: []
      help_flag: !Flag
        description: ''
        synonyms:
        - -h
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: cnvkit.py [-h]\n                 {batch,target,access,antitarget,autobin,coverage,reference,fix,segment,call,diagram,scatter,heatmap,breaks,genemetrics,gainloss,sex,gender,metrics,segmetrics,bintest,import-picard,import-seg,import-theta,import-rna,export,version}\n\
        \                 ...\ncnvkit.py: error: unrecognized arguments: --usage\n"
      generated_using:
      - --usage
    - !Command
      command:
      - cnvkit.py
      - counts.
      positional:
      - !Positional
        description: ''
        position: 0
        name: cnvkit.py
        optional: false
      named: []
      parent: *id001
      subcommands: []
      usage: []
      help_flag: !Flag
        description: ''
        synonyms:
        - -h
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: cnvkit.py [-h]\n                 {batch,target,access,antitarget,autobin,coverage,reference,fix,segment,call,diagram,scatter,heatmap,breaks,genemetrics,gainloss,sex,gender,metrics,segmetrics,bintest,import-picard,import-seg,import-theta,import-rna,export,version}\n\
        \                 ...\ncnvkit.py: error: invalid choice: 'counts.' (choose\
        \ from 'batch', 'target', 'access', 'antitarget', 'autobin', 'coverage', 'reference',\
        \ 'fix', 'segment', 'call', 'diagram', 'scatter', 'heatmap', 'breaks', 'genemetrics',\
        \ 'gainloss', 'sex', 'gender', 'metrics', 'segmetrics', 'bintest', 'import-picard',\
        \ 'import-seg', 'import-theta', 'import-rna', 'export', 'version')\n"
      generated_using: *id002
    - !Command
      command:
      - cnvkit.py
      - self-evaluation.
      positional:
      - !Positional
        description: ''
        position: 0
        name: cnvkit.py
        optional: false
      named: []
      parent: *id001
      subcommands: []
      usage: []
      help_flag: !Flag
        description: ''
        synonyms:
        - -h
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: cnvkit.py [-h]\n                 {batch,target,access,antitarget,autobin,coverage,reference,fix,segment,call,diagram,scatter,heatmap,breaks,genemetrics,gainloss,sex,gender,metrics,segmetrics,bintest,import-picard,import-seg,import-theta,import-rna,export,version}\n\
        \                 ...\ncnvkit.py: error: invalid choice: 'self-evaluation.'\
        \ (choose from 'batch', 'target', 'access', 'antitarget', 'autobin', 'coverage',\
        \ 'reference', 'fix', 'segment', 'call', 'diagram', 'scatter', 'heatmap',\
        \ 'breaks', 'genemetrics', 'gainloss', 'sex', 'gender', 'metrics', 'segmetrics',\
        \ 'bintest', 'import-picard', 'import-seg', 'import-theta', 'import-rna',\
        \ 'export', 'version')\n"
      generated_using: *id002
    - !Command
      command:
      - cnvkit.py
      - depths.
      positional:
      - !Positional
        description: ''
        position: 0
        name: cnvkit.py
        optional: false
      named: []
      parent: *id001
      subcommands: []
      usage: []
      help_flag: !Flag
        description: ''
        synonyms:
        - -h
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: cnvkit.py [-h]\n                 {batch,target,access,antitarget,autobin,coverage,reference,fix,segment,call,diagram,scatter,heatmap,breaks,genemetrics,gainloss,sex,gender,metrics,segmetrics,bintest,import-picard,import-seg,import-theta,import-rna,export,version}\n\
        \                 ...\ncnvkit.py: error: invalid choice: 'depths.' (choose\
        \ from 'batch', 'target', 'access', 'antitarget', 'autobin', 'coverage', 'reference',\
        \ 'fix', 'segment', 'call', 'diagram', 'scatter', 'heatmap', 'breaks', 'genemetrics',\
        \ 'gainloss', 'sex', 'gender', 'metrics', 'segmetrics', 'bintest', 'import-picard',\
        \ 'import-seg', 'import-theta', 'import-rna', 'export', 'version')\n"
      generated_using: *id002
    - !Command
      command:
      - cnvkit.py
      - import-picard
      positional:
      - !Positional
        description: Sample coverage .csv files (target and antitarget).
        position: 0
        name: targets
        optional: false
      named:
      - !Flag
        description: "Output directory name.\n"
        synonyms:
        - -d
        - --output-dir
        args: !SimpleFlagArg
          name: DIRECTORY
        optional: true
      parent: *id001
      subcommands: []
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: cnvkit.py import-picard [-h] [-d DIRECTORY] targets [targets\
        \ ...]\n\npositional arguments:\n  targets               Sample coverage .csv\
        \ files (target and antitarget).\n\noptional arguments:\n  -h, --help    \
        \        show this help message and exit\n  -d DIRECTORY, --output-dir DIRECTORY\n\
        \                        Output directory name.\n"
      generated_using: *id002
    - !Command
      command:
      - cnvkit.py
      - sex
      positional:
      - !Positional
        description: Copy number or copy ratio files (*.cnn, *.cnr).
        position: 0
        name: filenames
        optional: false
      named:
      - !Flag
        description: "Assume inputs were normalized to a male reference\n(i.e. female\
          \ samples will have +1 log-coverage of\nchrX; otherwise male samples would\
          \ have -1 chrX)."
        synonyms:
        - -y
        - --male-reference
        - --haploid-x-reference
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "Output table file name.\n"
        synonyms:
        - -o
        - --output
        args: !SimpleFlagArg
          name: FILENAME
        optional: true
      parent: *id001
      subcommands: []
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: cnvkit.py sex [-h] [-y] [-o FILENAME] filenames [filenames\
        \ ...]\n\npositional arguments:\n  filenames             Copy number or copy\
        \ ratio files (*.cnn, *.cnr).\n\noptional arguments:\n  -h, --help       \
        \     show this help message and exit\n  -y, --male-reference, --haploid-x-reference\n\
        \                        Assume inputs were normalized to a male reference\n\
        \                        (i.e. female samples will have +1 log-coverage of\n\
        \                        chrX; otherwise male samples would have -1 chrX).\n\
        \  -o FILENAME, --output FILENAME\n                        Output table file\
        \ name.\n"
      generated_using: *id002
    - !Command
      command:
      - cnvkit.py
      - diagram
      positional:
      - !Positional
        description: "Processed coverage data file (*.cnr), the output of\nthe 'fix'\
          \ sub-command."
        position: 0
        name: filename
        optional: false
      named:
      - !Flag
        description: "Segmentation calls (.cns), the output of the 'segment'\ncommand."
        synonyms:
        - -s
        - --segment
        args: !SimpleFlagArg
          name: SEGMENT
        optional: true
      - !Flag
        description: "Copy number change threshold to label genes. [Default:\n0.5]"
        synonyms:
        - -t
        - --threshold
        args: !SimpleFlagArg
          name: THRESHOLD
        optional: true
      - !Flag
        description: "Minimum number of covered probes to label a gene.\n[Default:\
          \ 3]"
        synonyms:
        - -m
        - --min-probes
        args: !SimpleFlagArg
          name: MIN_PROBES
        optional: true
      - !Flag
        description: "Assume inputs were normalized to a male reference\n(i.e. female\
          \ samples will have +1 log-CNR of chrX;\notherwise male samples would have\
          \ -1 chrX)."
        synonyms:
        - -y
        - --male-reference
        - --haploid-x-reference
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "Specify the sample's chromosomal sex as male or\nfemale. (Otherwise\
          \ guessed from X and Y coverage)."
        synonyms:
        - -x
        - --sample-sex
        - -g
        - --gender
        args: !ChoiceFlagArg
          choices: !!set
            ? x
            ? f
            ? female
            ? y
            ? male
            ? Female
            ? Male
            ? m
        optional: true
      - !Flag
        description: "Don't adjust the X and Y chromosomes according to\nsample sex."
        synonyms:
        - --no-shift-xy
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: Output PDF file name.
        synonyms:
        - -o
        - --output
        args: !SimpleFlagArg
          name: FILENAME
        optional: true
      - !Flag
        description: 'Plot title. [Default: sample ID, from filename or -i]'
        synonyms:
        - --title
        args: !SimpleFlagArg
          name: TITLE
        optional: true
      parent: *id001
      subcommands: []
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: cnvkit.py diagram [-h] [-s SEGMENT] [-t THRESHOLD] [-m MIN_PROBES]\
        \ [-y]\n                         [-x {m,y,male,Male,f,x,female,Female}]\n\
        \                         [--no-shift-xy] [-o FILENAME] [--title TITLE]\n\
        \                         [filename]\n\npositional arguments:\n  filename\
        \              Processed coverage data file (*.cnr), the output of\n     \
        \                   the 'fix' sub-command.\n\noptional arguments:\n  -h, --help\
        \            show this help message and exit\n  -s SEGMENT, --segment SEGMENT\n\
        \                        Segmentation calls (.cns), the output of the 'segment'\n\
        \                        command.\n  -t THRESHOLD, --threshold THRESHOLD\n\
        \                        Copy number change threshold to label genes. [Default:\n\
        \                        0.5]\n  -m MIN_PROBES, --min-probes MIN_PROBES\n\
        \                        Minimum number of covered probes to label a gene.\n\
        \                        [Default: 3]\n  -y, --male-reference, --haploid-x-reference\n\
        \                        Assume inputs were normalized to a male reference\n\
        \                        (i.e. female samples will have +1 log-CNR of chrX;\n\
        \                        otherwise male samples would have -1 chrX).\n  -x\
        \ {m,y,male,Male,f,x,female,Female}, --sample-sex {m,y,male,Male,f,x,female,Female},\
        \ -g {m,y,male,Male,f,x,female,Female}, --gender {m,y,male,Male,f,x,female,Female}\n\
        \                        Specify the sample's chromosomal sex as male or\n\
        \                        female. (Otherwise guessed from X and Y coverage).\n\
        \  --no-shift-xy         Don't adjust the X and Y chromosomes according to\n\
        \                        sample sex.\n  -o FILENAME, --output FILENAME\n \
        \                       Output PDF file name.\n\nPlot aesthetics:\n  --title\
        \ TITLE         Plot title. [Default: sample ID, from filename or -i]\n"
      generated_using: *id002
    - &id003 !Command
      command:
      - cnvkit.py
      - import-theta
      positional: []
      named:
      - !Flag
        description: 'Ploidy of normal cells. [Default: 2]'
        synonyms:
        - --ploidy
        args: !SimpleFlagArg
          name: PLOIDY
        optional: true
      - !Flag
        description: "Output directory name.\n"
        synonyms:
        - -d
        - --output-dir
        args: !SimpleFlagArg
          name: DIRECTORY
        optional: true
      parent: *id001
      subcommands:
      - !Command
        command:
        - cnvkit.py
        - import-theta
        - tumor_cns
        positional:
        - !Positional
          description: ''
          position: 0
          name: cnvkit.py
          optional: false
        - !Positional
          description: ''
          position: 1
          name: import-theta
          optional: false
        named:
        - !Flag
          description: ''
          synonyms:
          - -d
          args: !SimpleFlagArg
            name: DIRECTORY
          optional: true
        - !Flag
          description: ''
          synonyms:
          - --ploidy
          args: !SimpleFlagArg
            name: PLOIDY
          optional: true
        parent: *id003
        subcommands: []
        usage: []
        help_flag: !Flag
          description: ''
          synonyms:
          - -h
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "usage: cnvkit.py import-theta [-h] [--ploidy PLOIDY] [-d DIRECTORY]\n\
          \                              tumor_cns theta_results\ncnvkit.py import-theta:\
          \ error: the following arguments are required: theta_results\n"
        generated_using: &id007 []
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: cnvkit.py import-theta [-h] [--ploidy PLOIDY] [-d DIRECTORY]\n\
        \                              tumor_cns theta_results\n\npositional arguments:\n\
        \  tumor_cns\n  theta_results\n\noptional arguments:\n  -h, --help       \
        \     show this help message and exit\n  --ploidy PLOIDY       Ploidy of normal\
        \ cells. [Default: 2]\n  -d DIRECTORY, --output-dir DIRECTORY\n          \
        \              Output directory name.\n"
      generated_using: *id002
    - !Command
      command:
      - cnvkit.py
      - metrics
      positional:
      - !Positional
        description: "One or more bin-level coverage data files (*.cnn,\n*.cnr)."
        position: 0
        name: cnarrays
        optional: false
      named:
      - !Flag
        description: "One or more segmentation data files (*.cns, output of\nthe 'segment'\
          \ command). If more than one file is\ngiven, the number must match the coverage\
          \ data files,\nin which case the input files will be paired together\nin\
          \ the given order. Otherwise, the same segments will\nbe used for all coverage\
          \ files."
        synonyms:
        - -s
        - --segments
        args: !RepeatFlagArg
          name: SEGMENTS
        optional: true
      - !Flag
        description: "Drop very-low-coverage bins before calculations to\nreduce negative\
          \ \"fat tail\" of bin log2 values in poor-\nquality tumor samples."
        synonyms:
        - --drop-low-coverage
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "Output table file name.\n"
        synonyms:
        - -o
        - --output
        args: !SimpleFlagArg
          name: FILENAME
        optional: true
      parent: *id001
      subcommands: []
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: cnvkit.py metrics [-h] [-s SEGMENTS [SEGMENTS ...]]\n   \
        \                      [--drop-low-coverage] [-o FILENAME]\n             \
        \            cnarrays [cnarrays ...]\n\npositional arguments:\n  cnarrays\
        \              One or more bin-level coverage data files (*.cnn,\n       \
        \                 *.cnr).\n\noptional arguments:\n  -h, --help           \
        \ show this help message and exit\n  -s SEGMENTS [SEGMENTS ...], --segments\
        \ SEGMENTS [SEGMENTS ...]\n                        One or more segmentation\
        \ data files (*.cns, output of\n                        the 'segment' command).\
        \ If more than one file is\n                        given, the number must\
        \ match the coverage data files,\n                        in which case the\
        \ input files will be paired together\n                        in the given\
        \ order. Otherwise, the same segments will\n                        be used\
        \ for all coverage files.\n  --drop-low-coverage   Drop very-low-coverage\
        \ bins before calculations to\n                        reduce negative \"\
        fat tail\" of bin log2 values in poor-\n                        quality tumor\
        \ samples.\n  -o FILENAME, --output FILENAME\n                        Output\
        \ table file name.\n"
      generated_using: *id002
    - !Command
      command:
      - cnvkit.py
      - files.
      positional:
      - !Positional
        description: ''
        position: 0
        name: cnvkit.py
        optional: false
      named: []
      parent: *id001
      subcommands: []
      usage: []
      help_flag: !Flag
        description: ''
        synonyms:
        - -h
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: cnvkit.py [-h]\n                 {batch,target,access,antitarget,autobin,coverage,reference,fix,segment,call,diagram,scatter,heatmap,breaks,genemetrics,gainloss,sex,gender,metrics,segmetrics,bintest,import-picard,import-seg,import-theta,import-rna,export,version}\n\
        \                 ...\ncnvkit.py: error: invalid choice: 'files.' (choose\
        \ from 'batch', 'target', 'access', 'antitarget', 'autobin', 'coverage', 'reference',\
        \ 'fix', 'segment', 'call', 'diagram', 'scatter', 'heatmap', 'breaks', 'genemetrics',\
        \ 'gainloss', 'sex', 'gender', 'metrics', 'segmetrics', 'bintest', 'import-picard',\
        \ 'import-seg', 'import-theta', 'import-rna', 'export', 'version')\n"
      generated_using: *id002
    - *id004
    - !Command
      command:
      - cnvkit.py
      - import-rna
      positional:
      - !Positional
        description: "Tabular files with Ensembl gene ID and number of reads\nmapped\
          \ to each gene, from RSEM or another transcript\nquantifier."
        position: 0
        name: FILES
        optional: false
      named:
      - !Flag
        description: "Input format name: 'rsem' for RSEM gene-level read\ncounts (*_rsem.genes.results),\
          \ or 'counts' for generic\n2-column gene IDs and their read counts (e.g.\
          \ TCGA\nlevel 2 RNA expression)."
        synonyms:
        - -f
        - --format
        args: !SimpleFlagArg
          name: NAME
        optional: true
      - !Flag
        description: Location of gene info table from Ensembl BioMart.
        synonyms:
        - -g
        - --gene-resource
        args: !SimpleFlagArg
          name: FILE
        optional: true
      - !Flag
        description: "Correlation of each gene's copy number with\nexpression. Output\
          \ of cnv_expression_correlate.py."
        synonyms:
        - -c
        - --correlations
        args: !SimpleFlagArg
          name: FILE
        optional: true
      - !Flag
        description: "Maximum log2 ratio in output. Observed values above\nthis limit\
          \ will be replaced with this value. [Default:\n3.0]"
        synonyms:
        - --max-log2
        args: !SimpleFlagArg
          name: FLOAT
        optional: true
      - !Flag
        description: "Normal samples (same format as `gene_counts`) to be\nused as\
          \ a control to when normalizing and re-centering\ngene read depth ratios.\
          \ All filenames following this\noption will be used."
        synonyms:
        - -n
        - --normal
        args: !RepeatFlagArg
          name: NORMAL
        optional: true
      - !Flag
        description: "Directory to write a CNVkit .cnr file for each input\nsample.\
          \ [Default: .]"
        synonyms:
        - -d
        - --output-dir
        args: !SimpleFlagArg
          name: PATH
        optional: true
      - !Flag
        description: Output file name (summary table).
        synonyms:
        - -o
        - --output
        args: !SimpleFlagArg
          name: FILE
        optional: true
      - !Flag
        description: Skip GC correction.
        synonyms:
        - --no-gc
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: Skip transcript length correction.
        synonyms:
        - --no-txlen
        args: !EmptyFlagArg {}
        optional: true
      parent: *id001
      subcommands: []
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: cnvkit.py import-rna [-h] [-f NAME] -g FILE [-c FILE]\n \
        \                           [--max-log2 FLOAT] [-n NORMAL [NORMAL ...]]\n\
        \                            [-d PATH] [-o FILE] [--no-gc] [--no-txlen]\n\
        \                            FILES [FILES ...]\n\npositional arguments:\n\
        \  FILES                 Tabular files with Ensembl gene ID and number of\
        \ reads\n                        mapped to each gene, from RSEM or another\
        \ transcript\n                        quantifier.\n\noptional arguments:\n\
        \  -h, --help            show this help message and exit\n  -f NAME, --format\
        \ NAME\n                        Input format name: 'rsem' for RSEM gene-level\
        \ read\n                        counts (*_rsem.genes.results), or 'counts'\
        \ for generic\n                        2-column gene IDs and their read counts\
        \ (e.g. TCGA\n                        level 2 RNA expression).\n  -g FILE,\
        \ --gene-resource FILE\n                        Location of gene info table\
        \ from Ensembl BioMart.\n  -c FILE, --correlations FILE\n                \
        \        Correlation of each gene's copy number with\n                   \
        \     expression. Output of cnv_expression_correlate.py.\n  --max-log2 FLOAT\
        \      Maximum log2 ratio in output. Observed values above\n             \
        \           this limit will be replaced with this value. [Default:\n     \
        \                   3.0]\n  -n NORMAL [NORMAL ...], --normal NORMAL [NORMAL\
        \ ...]\n                        Normal samples (same format as `gene_counts`)\
        \ to be\n                        used as a control to when normalizing and\
        \ re-centering\n                        gene read depth ratios. All filenames\
        \ following this\n                        option will be used.\n  -d PATH,\
        \ --output-dir PATH\n                        Directory to write a CNVkit .cnr\
        \ file for each input\n                        sample. [Default: .]\n  -o\
        \ FILE, --output FILE\n                        Output file name (summary table).\n\
        \nTo disable specific automatic bias corrections:\n  --no-gc             \
        \  Skip GC correction.\n  --no-txlen            Skip transcript length correction.\n"
      generated_using: *id002
    - &id005 !Command
      command:
      - cnvkit.py
      - export
      positional: []
      named: []
      parent: *id001
      subcommands:
      - !Command
        command:
        - cnvkit.py
        - export
        - nexus-basic
        positional:
        - !Positional
          description: "Log2 copy ratio data file (*.cnr), the output of the\n'fix'\
            \ sub-command."
          position: 0
          name: filename
          optional: false
        named:
        - !Flag
          description: "Output file name.\n"
          synonyms:
          - -o
          - --output
          args: !SimpleFlagArg
            name: FILENAME
          optional: true
        parent: *id005
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "usage: cnvkit.py export nexus-basic [-h] [-o FILENAME] filename\n\
          \npositional arguments:\n  filename              Log2 copy ratio data file\
          \ (*.cnr), the output of the\n                        'fix' sub-command.\n\
          \noptional arguments:\n  -h, --help            show this help message and\
          \ exit\n  -o FILENAME, --output FILENAME\n                        Output\
          \ file name.\n"
        generated_using: *id002
      - !Command
        command:
        - cnvkit.py
        - export
        - theta
        positional: []
        named:
        - !Flag
          description: "Reference copy number profile (.cnn), or normal-sample\nbin-level\
            \ log2 copy ratios (.cnr). Use if the\ntumor_segment input file does not\
            \ contain a \"weight\"\ncolumn."
          synonyms:
          - -r
          - --reference
          args: !SimpleFlagArg
            name: REFERENCE
          optional: true
        - !Flag
          description: Output file name.
          synonyms:
          - -o
          - --output
          args: !SimpleFlagArg
            name: FILENAME
          optional: true
        - !Flag
          description: "VCF file containing SNVs observed in both the tumor\nand normal\
            \ samples. Tumor sample ID should match the\n`tumor_segment` filename\
            \ or be specified with\n-i/--sample-id."
          synonyms:
          - -v
          - --vcf
          args: !SimpleFlagArg
            name: VCF
          optional: true
        - !Flag
          description: "Specify the name of the tumor sample in the VCF (given\nwith\
            \ -v/--vcf). [Default: taken the tumor_segment file\nname]"
          synonyms:
          - -i
          - --sample-id
          args: !SimpleFlagArg
            name: SAMPLE_ID
          optional: true
        - !Flag
          description: Corresponding normal sample ID in the input VCF.
          synonyms:
          - -n
          - --normal-id
          args: !SimpleFlagArg
            name: NORMAL_ID
          optional: true
        - !Flag
          description: "Minimum read depth for a SNP in the VCF to be counted.\n[Default:\
            \ 20]"
          synonyms:
          - -m
          - --min-variant-depth
          args: !SimpleFlagArg
            name: MIN_VARIANT_DEPTH
          optional: true
        - !Flag
          description: "[ALT_FREQ], --zygosity-freq [ALT_FREQ]\nIgnore VCF's genotypes\
            \ (GT field) and instead infer\nzygosity from allele frequencies. [Default\
            \ if used\nwithout a number: 0.25]\n"
          synonyms:
          - -z
          args: !EmptyFlagArg {}
          optional: true
        parent: *id005
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "usage: cnvkit.py export theta [-h] [-r REFERENCE] [-o FILENAME]\
          \ [-v VCF]\n                              [-i SAMPLE_ID] [-n NORMAL_ID]\n\
          \                              [-m MIN_VARIANT_DEPTH] [-z [ALT_FREQ]]\n\
          \                              tumor_segment\n\npositional arguments:\n\
          \  tumor_segment         Tumor-sample segmentation file from CNVkit (.cns).\n\
          \noptional arguments:\n  -h, --help            show this help message and\
          \ exit\n  -r REFERENCE, --reference REFERENCE\n                        Reference\
          \ copy number profile (.cnn), or normal-sample\n                       \
          \ bin-level log2 copy ratios (.cnr). Use if the\n                      \
          \  tumor_segment input file does not contain a \"weight\"\n            \
          \            column.\n  -o FILENAME, --output FILENAME\n               \
          \         Output file name.\n\nTo also output tables of SNP b-allele frequencies\
          \ for THetA2:\n  -v VCF, --vcf VCF     VCF file containing SNVs observed\
          \ in both the tumor\n                        and normal samples. Tumor sample\
          \ ID should match the\n                        `tumor_segment` filename\
          \ or be specified with\n                        -i/--sample-id.\n  -i SAMPLE_ID,\
          \ --sample-id SAMPLE_ID\n                        Specify the name of the\
          \ tumor sample in the VCF (given\n                        with -v/--vcf).\
          \ [Default: taken the tumor_segment file\n                        name]\n\
          \  -n NORMAL_ID, --normal-id NORMAL_ID\n                        Corresponding\
          \ normal sample ID in the input VCF.\n  -m MIN_VARIANT_DEPTH, --min-variant-depth\
          \ MIN_VARIANT_DEPTH\n                        Minimum read depth for a SNP\
          \ in the VCF to be counted.\n                        [Default: 20]\n  -z\
          \ [ALT_FREQ], --zygosity-freq [ALT_FREQ]\n                        Ignore\
          \ VCF's genotypes (GT field) and instead infer\n                       \
          \ zygosity from allele frequencies. [Default if used\n                 \
          \       without a number: 0.25]\n"
        generated_using: *id002
      - !Command
        command:
        - cnvkit.py
        - export
        - bed
        positional:
        - !Positional
          description: "Segmented copy ratio data files (*.cns), the output of\nthe\
            \ 'segment' or 'call' sub-commands."
          position: 0
          name: segments
          optional: false
        named:
        - !Flag
          description: "Identifier to write in the 4th column of the BED file.\n[Default:\
            \ use the sample ID, taken from the file name]"
          synonyms:
          - -i
          - --sample-id
          args: !SimpleFlagArg
            name: LABEL
          optional: true
        - !Flag
          description: "Show gene names in the 4th column of the BED file.\n(This\
            \ is a bad idea if >1 input files are given.)"
          synonyms:
          - --label-genes
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: 'Ploidy of the sample cells. [Default: 2]'
          synonyms:
          - --ploidy
          args: !SimpleFlagArg
            name: PLOIDY
          optional: true
        - !Flag
          description: "Specify the sample's chromosomal sex as male or\nfemale. (Otherwise\
            \ guessed from X and Y coverage)."
          synonyms:
          - -x
          - --sample-sex
          - -g
          - --gender
          args: !ChoiceFlagArg
            choices: !!set
              ? x
              ? f
              ? female
              ? y
              ? male
              ? Female
              ? Male
              ? m
          optional: true
        - !Flag
          description: "Which segmented regions to show: 'all' = all segment\nregions;\
            \ 'variant' = CNA regions with non-neutral copy\nnumber; 'ploidy' = CNA\
            \ regions with non-default\nploidy. [Default: ploidy]"
          synonyms:
          - --show
          args: !ChoiceFlagArg
            choices: !!set
              ? variant
              ? ploidy
              ? all
          optional: true
        - !Flag
          description: "Was a male reference used? If so, expect half ploidy\non chrX\
            \ and chrY; otherwise, only chrY has half\nploidy. In CNVkit, if a male\
            \ reference was used, the\n\"neutral\" copy number (ploidy) of chrX is\
            \ 1; chrY is\nhaploid for either reference sex."
          synonyms:
          - -y
          - --male-reference
          - --haploid-x-reference
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "Output file name.\n"
          synonyms:
          - -o
          - --output
          args: !SimpleFlagArg
            name: FILENAME
          optional: true
        parent: *id005
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "usage: cnvkit.py export bed [-h] [-i LABEL] [--label-genes] [--ploidy\
          \ PLOIDY]\n                            [-x {m,y,male,Male,f,x,female,Female}]\n\
          \                            [--show {ploidy,variant,all}] [-y] [-o FILENAME]\n\
          \                            segments [segments ...]\n\npositional arguments:\n\
          \  segments              Segmented copy ratio data files (*.cns), the output\
          \ of\n                        the 'segment' or 'call' sub-commands.\n\n\
          optional arguments:\n  -h, --help            show this help message and\
          \ exit\n  -i LABEL, --sample-id LABEL\n                        Identifier\
          \ to write in the 4th column of the BED file.\n                        [Default:\
          \ use the sample ID, taken from the file name]\n  --label-genes        \
          \ Show gene names in the 4th column of the BED file.\n                 \
          \       (This is a bad idea if >1 input files are given.)\n  --ploidy PLOIDY\
          \       Ploidy of the sample cells. [Default: 2]\n  -x {m,y,male,Male,f,x,female,Female},\
          \ --sample-sex {m,y,male,Male,f,x,female,Female}, -g {m,y,male,Male,f,x,female,Female},\
          \ --gender {m,y,male,Male,f,x,female,Female}\n                        Specify\
          \ the sample's chromosomal sex as male or\n                        female.\
          \ (Otherwise guessed from X and Y coverage).\n  --show {ploidy,variant,all}\n\
          \                        Which segmented regions to show: 'all' = all segment\n\
          \                        regions; 'variant' = CNA regions with non-neutral\
          \ copy\n                        number; 'ploidy' = CNA regions with non-default\n\
          \                        ploidy. [Default: ploidy]\n  -y, --male-reference,\
          \ --haploid-x-reference\n                        Was a male reference used?\
          \ If so, expect half ploidy\n                        on chrX and chrY; otherwise,\
          \ only chrY has half\n                        ploidy. In CNVkit, if a male\
          \ reference was used, the\n                        \"neutral\" copy number\
          \ (ploidy) of chrX is 1; chrY is\n                        haploid for either\
          \ reference sex.\n  -o FILENAME, --output FILENAME\n                   \
          \     Output file name.\n"
        generated_using: *id002
      - !Command
        command:
        - cnvkit.py
        - export
        - nexus-ogt
        positional:
        - !Positional
          description: "Log2 copy ratio data file (*.cnr), the output of the\n'fix'\
            \ sub-command."
          position: 0
          name: filename
          optional: false
        - !Positional
          description: VCF of SNVs for the same sample, to calculate b-allele
          position: 1
          name: vcf
          optional: false
        - !Positional
          description: 'optional arguments:'
          position: 2
          name: frequencies.
          optional: false
        named:
        - !Flag
          description: "Specify the name of the sample in the VCF to use to\nextract\
            \ b-allele frequencies."
          synonyms:
          - -i
          - --sample-id
          args: !SimpleFlagArg
            name: SAMPLE_ID
          optional: true
        - !Flag
          description: Corresponding normal sample ID in the input VCF.
          synonyms:
          - -n
          - --normal-id
          args: !SimpleFlagArg
            name: NORMAL_ID
          optional: true
        - !Flag
          description: "Minimum read depth for a SNV to be included in the\nb-allele\
            \ frequency calculation. [Default: 20]"
          synonyms:
          - -m
          - --min-variant-depth
          args: !SimpleFlagArg
            name: MIN_VARIANT_DEPTH
          optional: true
        - !Flag
          description: "[ALT_FREQ], --zygosity-freq [ALT_FREQ]\nIgnore VCF's genotypes\
            \ (GT field) and instead infer\nzygosity from allele frequencies. [Default\
            \ if used\nwithout a number: 0.25]"
          synonyms:
          - -z
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "Minimum weight (between 0 and 1) for a bin to be\nincluded\
            \ in the output. [Default: 0.0]"
          synonyms:
          - -w
          - --min-weight
          args: !SimpleFlagArg
            name: MIN_WEIGHT
          optional: true
        - !Flag
          description: "Output file name.\n"
          synonyms:
          - -o
          - --output
          args: !SimpleFlagArg
            name: FILENAME
          optional: true
        parent: *id005
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "usage: cnvkit.py export nexus-ogt [-h] [-i SAMPLE_ID] [-n NORMAL_ID]\n\
          \                                  [-m MIN_VARIANT_DEPTH] [-z [ALT_FREQ]]\n\
          \                                  [-w MIN_WEIGHT] [-o FILENAME]\n     \
          \                             filename vcf\n\npositional arguments:\n  filename\
          \              Log2 copy ratio data file (*.cnr), the output of the\n  \
          \                      'fix' sub-command.\n  vcf                   VCF of\
          \ SNVs for the same sample, to calculate b-allele\n                    \
          \    frequencies.\n\noptional arguments:\n  -h, --help            show this\
          \ help message and exit\n  -i SAMPLE_ID, --sample-id SAMPLE_ID\n       \
          \                 Specify the name of the sample in the VCF to use to\n\
          \                        extract b-allele frequencies.\n  -n NORMAL_ID,\
          \ --normal-id NORMAL_ID\n                        Corresponding normal sample\
          \ ID in the input VCF.\n  -m MIN_VARIANT_DEPTH, --min-variant-depth MIN_VARIANT_DEPTH\n\
          \                        Minimum read depth for a SNV to be included in\
          \ the\n                        b-allele frequency calculation. [Default:\
          \ 20]\n  -z [ALT_FREQ], --zygosity-freq [ALT_FREQ]\n                   \
          \     Ignore VCF's genotypes (GT field) and instead infer\n            \
          \            zygosity from allele frequencies. [Default if used\n      \
          \                  without a number: 0.25]\n  -w MIN_WEIGHT, --min-weight\
          \ MIN_WEIGHT\n                        Minimum weight (between 0 and 1) for\
          \ a bin to be\n                        included in the output. [Default:\
          \ 0.0]\n  -o FILENAME, --output FILENAME\n                        Output\
          \ file name.\n"
        generated_using: *id002
      - !Command
        command:
        - cnvkit.py
        - export
        - cdt
        positional:
        - !Positional
          description: "Log2 copy ratio data file(s) (*.cnr), the output of\nthe 'fix'\
            \ sub-command."
          position: 0
          name: filenames
          optional: false
        named:
        - !Flag
          description: "Output file name.\n"
          synonyms:
          - -o
          - --output
          args: !SimpleFlagArg
            name: FILENAME
          optional: true
        parent: *id005
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "usage: cnvkit.py export cdt [-h] [-o FILENAME] filenames [filenames\
          \ ...]\n\npositional arguments:\n  filenames             Log2 copy ratio\
          \ data file(s) (*.cnr), the output of\n                        the 'fix'\
          \ sub-command.\n\noptional arguments:\n  -h, --help            show this\
          \ help message and exit\n  -o FILENAME, --output FILENAME\n            \
          \            Output file name.\n"
        generated_using: *id002
      - !Command
        command:
        - cnvkit.py
        - export
        - seg
        positional:
        - !Positional
          description: "Segmented copy ratio data file(s) (*.cns), the output\nof\
            \ the 'segment' sub-command."
          position: 0
          name: filenames
          optional: false
        named:
        - !Flag
          description: Replace chromosome names with sequential integer IDs.
          synonyms:
          - --enumerate-chroms
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "Output file name.\n"
          synonyms:
          - -o
          - --output
          args: !SimpleFlagArg
            name: FILENAME
          optional: true
        parent: *id005
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "usage: cnvkit.py export seg [-h] [--enumerate-chroms] [-o FILENAME]\n\
          \                            filenames [filenames ...]\n\npositional arguments:\n\
          \  filenames             Segmented copy ratio data file(s) (*.cns), the\
          \ output\n                        of the 'segment' sub-command.\n\noptional\
          \ arguments:\n  -h, --help            show this help message and exit\n\
          \  --enumerate-chroms    Replace chromosome names with sequential integer\
          \ IDs.\n  -o FILENAME, --output FILENAME\n                        Output\
          \ file name.\n"
        generated_using: *id002
      - !Command
        command:
        - cnvkit.py
        - export
        - jtv
        positional:
        - !Positional
          description: "Log2 copy ratio data file(s) (*.cnr), the output of\nthe 'fix'\
            \ sub-command."
          position: 0
          name: filenames
          optional: false
        named:
        - !Flag
          description: "Output file name.\n"
          synonyms:
          - -o
          - --output
          args: !SimpleFlagArg
            name: FILENAME
          optional: true
        parent: *id005
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "usage: cnvkit.py export jtv [-h] [-o FILENAME] filenames [filenames\
          \ ...]\n\npositional arguments:\n  filenames             Log2 copy ratio\
          \ data file(s) (*.cnr), the output of\n                        the 'fix'\
          \ sub-command.\n\noptional arguments:\n  -h, --help            show this\
          \ help message and exit\n  -o FILENAME, --output FILENAME\n            \
          \            Output file name.\n"
        generated_using: *id002
      - !Command
        command:
        - cnvkit.py
        - export
        - vcf
        positional: []
        named:
        - !Flag
          description: "Bin-level copy ratios (*.cnr). Used to indicate fuzzy\nboundaries\
            \ for segments in the output VCF via the\nCIPOS and CIEND tags."
          synonyms:
          - --cnr
          args: !SimpleFlagArg
            name: CNR
          optional: true
        - !Flag
          description: "Sample name to write in the genotype field of the\noutput\
            \ VCF file. [Default: use the sample ID, taken\nfrom the file name]"
          synonyms:
          - -i
          - --sample-id
          args: !SimpleFlagArg
            name: LABEL
          optional: true
        - !Flag
          description: 'Ploidy of the sample cells. [Default: 2]'
          synonyms:
          - --ploidy
          args: !SimpleFlagArg
            name: PLOIDY
          optional: true
        - !Flag
          description: "Specify the sample's chromosomal sex as male or\nfemale. (Otherwise\
            \ guessed from X and Y coverage)."
          synonyms:
          - -x
          - --sample-sex
          - -g
          - --gender
          args: !ChoiceFlagArg
            choices: !!set
              ? x
              ? f
              ? female
              ? y
              ? male
              ? Female
              ? Male
              ? m
          optional: true
        - !Flag
          description: "Was a male reference used? If so, expect half ploidy\non chrX\
            \ and chrY; otherwise, only chrY has half\nploidy. In CNVkit, if a male\
            \ reference was used, the\n\"neutral\" copy number (ploidy) of chrX is\
            \ 1; chrY is\nhaploid for either reference sex."
          synonyms:
          - -y
          - --male-reference
          - --haploid-x-reference
          args: !EmptyFlagArg {}
          optional: true
        - !Flag
          description: "Output file name.\n"
          synonyms:
          - -o
          - --output
          args: !SimpleFlagArg
            name: FILENAME
          optional: true
        parent: *id005
        subcommands: []
        usage: []
        help_flag: !Flag
          description: show this help message and exit
          synonyms:
          - -h
          - --help
          args: !EmptyFlagArg {}
          optional: true
        usage_flag:
        version_flag:
        help_text: "usage: cnvkit.py export vcf [-h] [--cnr CNR] [-i LABEL] [--ploidy\
          \ PLOIDY]\n                            [-x {m,y,male,Male,f,x,female,Female}]\
          \ [-y]\n                            [-o FILENAME]\n                    \
          \        segments\n\npositional arguments:\n  segments              Segmented\
          \ copy ratio data file (*.cns), the output of\n                        the\
          \ 'segment' or 'call' sub-commands.\n\noptional arguments:\n  -h, --help\
          \            show this help message and exit\n  --cnr CNR             Bin-level\
          \ copy ratios (*.cnr). Used to indicate fuzzy\n                        boundaries\
          \ for segments in the output VCF via the\n                        CIPOS\
          \ and CIEND tags.\n  -i LABEL, --sample-id LABEL\n                     \
          \   Sample name to write in the genotype field of the\n                \
          \        output VCF file. [Default: use the sample ID, taken\n         \
          \               from the file name]\n  --ploidy PLOIDY       Ploidy of the\
          \ sample cells. [Default: 2]\n  -x {m,y,male,Male,f,x,female,Female}, --sample-sex\
          \ {m,y,male,Male,f,x,female,Female}, -g {m,y,male,Male,f,x,female,Female},\
          \ --gender {m,y,male,Male,f,x,female,Female}\n                        Specify\
          \ the sample's chromosomal sex as male or\n                        female.\
          \ (Otherwise guessed from X and Y coverage).\n  -y, --male-reference, --haploid-x-reference\n\
          \                        Was a male reference used? If so, expect half ploidy\n\
          \                        on chrX and chrY; otherwise, only chrY has half\n\
          \                        ploidy. In CNVkit, if a male reference was used,\
          \ the\n                        \"neutral\" copy number (ploidy) of chrX\
          \ is 1; chrY is\n                        haploid for either reference sex.\n\
          \  -o FILENAME, --output FILENAME\n                        Output file name.\n"
        generated_using: *id002
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: cnvkit.py export [-h]\n                        {bed,seg,vcf,theta,nexus-basic,nexus-ogt,cdt,jtv}\
        \ ...\n\npositional arguments:\n  {bed,seg,vcf,theta,nexus-basic,nexus-ogt,cdt,jtv}\n\
        \                        Export formats (use with -h for more info).\n   \
        \ bed                 Convert segments to BED format. Input is a\n       \
        \                 segmentation file (.cns) where, preferably, log2\n     \
        \                   ratios have already been adjusted to integer absolute\n\
        \                        values using the 'call' command.\n    seg       \
        \          Convert segments to SEG format. Compatible with IGV\n         \
        \               and GenePattern.\n    vcf                 Convert segments\
        \ to VCF format. Input is a\n                        segmentation file (.cns)\
        \ where, preferably, log2\n                        ratios have already been\
        \ adjusted to integer absolute\n                        values using the 'call'\
        \ command.\n    theta               Convert segments to THetA2 input file\
        \ format\n                        (*.input).\n    nexus-basic         Convert\
        \ bin-level log2 ratios to Nexus Copy Number\n                        \"basic\"\
        \ format.\n    nexus-ogt           Convert log2 ratios and b-allele freqs\
        \ to Nexus\n                        \"Custom-OGT\" format.\n    cdt      \
        \           Convert log2 ratios to CDT format. Compatible with\n         \
        \               Java TreeView.\n    jtv                 Convert log2 ratios\
        \ to Java TreeView's native format.\n\noptional arguments:\n  -h, --help \
        \           show this help message and exit\n"
      generated_using: *id002
    - !Command
      command:
      - cnvkit.py
      - access
      positional: []
      named:
      - !Flag
        description: "Minimum gap size between accessible sequence regions.\nRegions\
          \ separated by less than this distance will be\njoined together. [Default:\
          \ 5000]"
        synonyms:
        - -s
        - --min-gap-size
        args: !SimpleFlagArg
          name: MIN_GAP_SIZE
        optional: true
      - !Flag
        description: "Additional regions to exclude, in BED format. Can be\nused multiple\
          \ times."
        synonyms:
        - -x
        - --exclude
        args: !SimpleFlagArg
          name: EXCLUDE
        optional: true
      - !Flag
        description: "Output file name\n"
        synonyms:
        - -o
        - --output
        args: !SimpleFlagArg
          name: FILENAME
        optional: true
      parent: *id001
      subcommands: []
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: cnvkit.py access [-h] [-s MIN_GAP_SIZE] [-x EXCLUDE] [-o\
        \ FILENAME]\n                        fa_fname\n\npositional arguments:\n \
        \ fa_fname              Genome FASTA file name\n\noptional arguments:\n  -h,\
        \ --help            show this help message and exit\n  -s MIN_GAP_SIZE, --min-gap-size\
        \ MIN_GAP_SIZE\n                        Minimum gap size between accessible\
        \ sequence regions.\n                        Regions separated by less than\
        \ this distance will be\n                        joined together. [Default:\
        \ 5000]\n  -x EXCLUDE, --exclude EXCLUDE\n                        Additional\
        \ regions to exclude, in BED format. Can be\n                        used\
        \ multiple times.\n  -o FILENAME, --output FILENAME\n                    \
        \    Output file name\n"
      generated_using: *id002
    - !Command
      command:
      - cnvkit.py
      - regions.
      positional:
      - !Positional
        description: ''
        position: 0
        name: cnvkit.py
        optional: false
      named: []
      parent: *id001
      subcommands: []
      usage: []
      help_flag: !Flag
        description: ''
        synonyms:
        - -h
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: cnvkit.py [-h]\n                 {batch,target,access,antitarget,autobin,coverage,reference,fix,segment,call,diagram,scatter,heatmap,breaks,genemetrics,gainloss,sex,gender,metrics,segmetrics,bintest,import-picard,import-seg,import-theta,import-rna,export,version}\n\
        \                 ...\ncnvkit.py: error: invalid choice: 'regions.' (choose\
        \ from 'batch', 'target', 'access', 'antitarget', 'autobin', 'coverage', 'reference',\
        \ 'fix', 'segment', 'call', 'diagram', 'scatter', 'heatmap', 'breaks', 'genemetrics',\
        \ 'gainloss', 'sex', 'gender', 'metrics', 'segmetrics', 'bintest', 'import-picard',\
        \ 'import-seg', 'import-theta', 'import-rna', 'export', 'version')\n"
      generated_using: *id002
    - !Command
      command:
      - cnvkit.py
      - table.
      positional:
      - !Positional
        description: ''
        position: 0
        name: cnvkit.py
        optional: false
      named: []
      parent: *id001
      subcommands: []
      usage: []
      help_flag: !Flag
        description: ''
        synonyms:
        - -h
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: cnvkit.py [-h]\n                 {batch,target,access,antitarget,autobin,coverage,reference,fix,segment,call,diagram,scatter,heatmap,breaks,genemetrics,gainloss,sex,gender,metrics,segmetrics,bintest,import-picard,import-seg,import-theta,import-rna,export,version}\n\
        \                 ...\ncnvkit.py: error: invalid choice: 'table.' (choose\
        \ from 'batch', 'target', 'access', 'antitarget', 'autobin', 'coverage', 'reference',\
        \ 'fix', 'segment', 'call', 'diagram', 'scatter', 'heatmap', 'breaks', 'genemetrics',\
        \ 'gainloss', 'sex', 'gender', 'metrics', 'segmetrics', 'bintest', 'import-picard',\
        \ 'import-seg', 'import-theta', 'import-rna', 'export', 'version')\n"
      generated_using: *id002
    - !Command
      command:
      - cnvkit.py
      - antitarget
      positional: []
      named:
      - !Flag
        description: "Regions of accessible sequence on chromosomes (.bed),\nas output\
          \ by genome2access.py."
        synonyms:
        - -g
        - --access
        args: !SimpleFlagArg
          name: FILENAME
        optional: true
      - !Flag
        description: "Average size of antitarget bins (results are\napproximate).\
          \ [Default: 150000]"
        synonyms:
        - -a
        - --avg-size
        args: !SimpleFlagArg
          name: AVG_SIZE
        optional: true
      - !Flag
        description: "Minimum size of antitarget bins (smaller regions are\ndropped).\
          \ [Default: 1/16 avg size, calculated]"
        synonyms:
        - -m
        - --min-size
        args: !SimpleFlagArg
          name: MIN_SIZE
        optional: true
      - !Flag
        description: "Output file name.\n"
        synonyms:
        - -o
        - --output
        args: !SimpleFlagArg
          name: FILENAME
        optional: true
      parent: *id001
      subcommands: []
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: cnvkit.py antitarget [-h] [-g FILENAME] [-a AVG_SIZE] [-m\
        \ MIN_SIZE]\n                            [-o FILENAME]\n                 \
        \           targets\n\npositional arguments:\n  targets               BED\
        \ or interval file listing the targeted regions.\n\noptional arguments:\n\
        \  -h, --help            show this help message and exit\n  -g FILENAME, --access\
        \ FILENAME\n                        Regions of accessible sequence on chromosomes\
        \ (.bed),\n                        as output by genome2access.py.\n  -a AVG_SIZE,\
        \ --avg-size AVG_SIZE\n                        Average size of antitarget\
        \ bins (results are\n                        approximate). [Default: 150000]\n\
        \  -m MIN_SIZE, --min-size MIN_SIZE\n                        Minimum size\
        \ of antitarget bins (smaller regions are\n                        dropped).\
        \ [Default: 1/16 avg size, calculated]\n  -o FILENAME, --output FILENAME\n\
        \                        Output file name.\n"
      generated_using: *id002
    - !Command
      command:
      - cnvkit.py
      - scatter
      positional:
      - !Positional
        description: "Processed bin-level copy ratios (*.cnr), the output of\nthe\
          \ 'fix' sub-command."
        position: 0
        name: filename
        optional: false
      named:
      - !Flag
        description: "Segmentation calls (.cns), the output of the 'segment'\ncommand."
        synonyms:
        - -s
        - --segment
        args: !SimpleFlagArg
          name: FILENAME
        optional: true
      - !Flag
        description: "Chromosome or chromosomal range, e.g. 'chr1' or\n'chr1:2333000-2444000',\
          \ to display. If a range is\ngiven, all targeted genes in this range will\
          \ be shown,\nunless -g/--gene is also given."
        synonyms:
        - -c
        - --chromosome
        args: !SimpleFlagArg
          name: RANGE
        optional: true
      - !Flag
        description: Name of gene or genes (comma-separated) to display.
        synonyms:
        - -g
        - --gene
        args: !SimpleFlagArg
          name: GENE
        optional: true
      - !Flag
        description: "File listing the chromosomal ranges to display, as\nBED, interval\
          \ list or 'chr:start-end' text. Creates\nfocal plots similar to -c/--chromosome\
          \ for each listed\nregion, combined into a multi-page PDF. The output\n\
          filename must also be specified (-o/--output)."
        synonyms:
        - -l
        - --range-list
        args: !SimpleFlagArg
          name: RANGE_LIST
        optional: true
      - !Flag
        description: "Width of margin to show around the selected gene(s)\n(-g/--gene)\
          \ or small chromosomal region\n(-c/--chromosome). [Default: 1000000]"
        synonyms:
        - -w
        - --width
        args: !SimpleFlagArg
          name: WIDTH
        optional: true
      - !Flag
        description: Output PDF file name.
        synonyms:
        - -o
        - --output
        args: !SimpleFlagArg
          name: FILENAME
        optional: true
      - !Flag
        description: "Plot antitargets using this symbol when plotting in a\nselected\
          \ chromosomal region (-g/--gene or\n-c/--chromosome). [Default: same as\
          \ targets]"
        synonyms:
        - -a
        - --antitarget-marker
        args: !SimpleFlagArg
          name: CHARACTER
        optional: true
      - !Flag
        description: "Plot data x-coordinates by bin indices instead of\ngenomic coordinates.\
          \ All bins will be shown with equal\nwidth, no blank regions will be shown,\
          \ and x-axis\nvalues indicate bin number (within chromosome) instead\nof\
          \ genomic position."
        synonyms:
        - --by-bin
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "Plot segment lines in this color. Value can be any\nstring accepted\
          \ by matplotlib, e.g. 'red' or\n'#CC0000'."
        synonyms:
        - --segment-color
        args: !SimpleFlagArg
          name: SEGMENT_COLOR
        optional: true
      - !Flag
        description: 'Plot title. [Default: sample ID, from filename or -i]'
        synonyms:
        - --title
        args: !SimpleFlagArg
          name: TITLE
        optional: true
      - !Flag
        description: Draw a smoothed local trendline on the scatter plot.
        synonyms:
        - -t
        - --trend
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: y-axis upper limit.
        synonyms:
        - --y-max
        args: !SimpleFlagArg
          name: Y_MAX
        optional: true
      - !Flag
        description: y-axis lower limit.
        synonyms:
        - --y-min
        args: !SimpleFlagArg
          name: Y_MIN
        optional: true
      - !Flag
        description: "VCF file name containing variants to plot for SNV\nb-allele\
          \ frequencies."
        synonyms:
        - -v
        - --vcf
        args: !SimpleFlagArg
          name: FILENAME
        optional: true
      - !Flag
        description: "Name of the sample in the VCF to use for b-allele\nfrequency\
          \ extraction and as the default plot title."
        synonyms:
        - -i
        - --sample-id
        args: !SimpleFlagArg
          name: SAMPLE_ID
        optional: true
      - !Flag
        description: "Corresponding normal sample ID in the input VCF. This\nsample\
          \ is used to select only germline SNVs to plot."
        synonyms:
        - -n
        - --normal-id
        args: !SimpleFlagArg
          name: NORMAL_ID
        optional: true
      - !Flag
        description: "Minimum read depth for a SNV to be used in the\nb-allele frequency\
          \ calculation. [Default: 20]"
        synonyms:
        - -m
        - --min-variant-depth
        args: !SimpleFlagArg
          name: MIN_VARIANT_DEPTH
        optional: true
      - !Flag
        description: "[ALT_FREQ], --zygosity-freq [ALT_FREQ]\nIgnore VCF's genotypes\
          \ (GT field) and instead infer\nzygosity from allele frequencies. [Default\
          \ if used\nwithout a number: 0.25]\n"
        synonyms:
        - -z
        args: !EmptyFlagArg {}
        optional: true
      parent: *id001
      subcommands: []
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: cnvkit.py scatter [-h] [-s FILENAME] [-c RANGE] [-g GENE]\n\
        \                         [-l RANGE_LIST] [-w WIDTH] [-o FILENAME]\n     \
        \                    [-a CHARACTER] [--by-bin]\n                         [--segment-color\
        \ SEGMENT_COLOR] [--title TITLE] [-t]\n                         [--y-max Y_MAX]\
        \ [--y-min Y_MIN] [-v FILENAME]\n                         [-i SAMPLE_ID] [-n\
        \ NORMAL_ID] [-m MIN_VARIANT_DEPTH]\n                         [-z [ALT_FREQ]]\n\
        \                         [filename]\n\npositional arguments:\n  filename\
        \              Processed bin-level copy ratios (*.cnr), the output of\n  \
        \                      the 'fix' sub-command.\n\noptional arguments:\n  -h,\
        \ --help            show this help message and exit\n  -s FILENAME, --segment\
        \ FILENAME\n                        Segmentation calls (.cns), the output\
        \ of the 'segment'\n                        command.\n  -c RANGE, --chromosome\
        \ RANGE\n                        Chromosome or chromosomal range, e.g. 'chr1'\
        \ or\n                        'chr1:2333000-2444000', to display. If a range\
        \ is\n                        given, all targeted genes in this range will\
        \ be shown,\n                        unless -g/--gene is also given.\n  -g\
        \ GENE, --gene GENE  Name of gene or genes (comma-separated) to display.\n\
        \  -l RANGE_LIST, --range-list RANGE_LIST\n                        File listing\
        \ the chromosomal ranges to display, as\n                        BED, interval\
        \ list or 'chr:start-end' text. Creates\n                        focal plots\
        \ similar to -c/--chromosome for each listed\n                        region,\
        \ combined into a multi-page PDF. The output\n                        filename\
        \ must also be specified (-o/--output).\n  -w WIDTH, --width WIDTH\n     \
        \                   Width of margin to show around the selected gene(s)\n\
        \                        (-g/--gene) or small chromosomal region\n       \
        \                 (-c/--chromosome). [Default: 1000000]\n  -o FILENAME, --output\
        \ FILENAME\n                        Output PDF file name.\n\nPlot aesthetics:\n\
        \  -a CHARACTER, --antitarget-marker CHARACTER\n                        Plot\
        \ antitargets using this symbol when plotting in a\n                     \
        \   selected chromosomal region (-g/--gene or\n                        -c/--chromosome).\
        \ [Default: same as targets]\n  --by-bin              Plot data x-coordinates\
        \ by bin indices instead of\n                        genomic coordinates.\
        \ All bins will be shown with equal\n                        width, no blank\
        \ regions will be shown, and x-axis\n                        values indicate\
        \ bin number (within chromosome) instead\n                        of genomic\
        \ position.\n  --segment-color SEGMENT_COLOR\n                        Plot\
        \ segment lines in this color. Value can be any\n                        string\
        \ accepted by matplotlib, e.g. 'red' or\n                        '#CC0000'.\n\
        \  --title TITLE         Plot title. [Default: sample ID, from filename or\
        \ -i]\n  -t, --trend           Draw a smoothed local trendline on the scatter\
        \ plot.\n  --y-max Y_MAX         y-axis upper limit.\n  --y-min Y_MIN    \
        \     y-axis lower limit.\n\nTo plot SNP b-allele frequencies:\n  -v FILENAME,\
        \ --vcf FILENAME\n                        VCF file name containing variants\
        \ to plot for SNV\n                        b-allele frequencies.\n  -i SAMPLE_ID,\
        \ --sample-id SAMPLE_ID\n                        Name of the sample in the\
        \ VCF to use for b-allele\n                        frequency extraction and\
        \ as the default plot title.\n  -n NORMAL_ID, --normal-id NORMAL_ID\n    \
        \                    Corresponding normal sample ID in the input VCF. This\n\
        \                        sample is used to select only germline SNVs to plot.\n\
        \  -m MIN_VARIANT_DEPTH, --min-variant-depth MIN_VARIANT_DEPTH\n         \
        \               Minimum read depth for a SNV to be used in the\n         \
        \               b-allele frequency calculation. [Default: 20]\n  -z [ALT_FREQ],\
        \ --zygosity-freq [ALT_FREQ]\n                        Ignore VCF's genotypes\
        \ (GT field) and instead infer\n                        zygosity from allele\
        \ frequencies. [Default if used\n                        without a number:\
        \ 0.25]\n"
      generated_using: *id002
    - !Command
      command:
      - cnvkit.py
      - batch
      positional:
      - !Positional
        description: Mapped sequence reads (.bam)
        position: 0
        name: bam_files
        optional: false
      - !Positional
        description: --target-avg-size TARGET_AVG_SIZE
        position: 0
        name: consistent.
        optional: false
      named:
      - !Flag
        description: "Sequencing assay type: hybridization capture\n('hybrid'), targeted\
          \ amplicon sequencing ('amplicon'),\nor whole genome sequencing ('wgs').\
          \ Determines whether\nand how to use antitarget bins. [Default: hybrid]"
        synonyms:
        - -m
        - --seq-method
        - --method
        args: !ChoiceFlagArg
          choices: !!set
            ? amplicon
            ? wgs
            ? hybrid
        optional: true
      - !Flag
        description: "Method used in the 'segment' step. [Default: cbs]"
        synonyms:
        - --segment-method
        args: !ChoiceFlagArg
          choices: !!set
            ? cbs
            ? none
            ? hmm
            ? haar
            ? flasso
            ? hmm-germline
            ? hmm-tumor
        optional: true
      - !Flag
        description: "Use or assume a male reference (i.e. female samples\nwill have\
          \ +1 log-CNR of chrX; otherwise male samples\nwould have -1 chrX)."
        synonyms:
        - -y
        - --male-reference
        - --haploid-x-reference
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "Get read depths by counting read midpoints within each\nbin.\
          \ (An alternative algorithm)."
        synonyms:
        - -c
        - --count-reads
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "Drop very-low-coverage bins before segmentation to\navoid false-positive\
          \ deletions in poor-quality tumor\nsamples."
        synonyms:
        - --drop-low-coverage
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "[PROCESSES], --processes [PROCESSES]\nNumber of subprocesses\
          \ used to running each of the BAM\nfiles in parallel. Without an argument,\
          \ use the\nmaximum number of available CPUs. [Default: process\neach BAM\
          \ in serial]"
        synonyms:
        - -p
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "Path to the Rscript excecutable to use for running R\ncode.\
          \ Use this option to specify a non-default R\ninstallation. [Default: Rscript]"
        synonyms:
        - --rscript-path
        args: !SimpleFlagArg
          name: PATH
        optional: true
      - !Flag
        description: "[FILES [FILES ...]], --normal [FILES [FILES ...]]\nNormal samples\
          \ (.bam) used to construct the pooled,\npaired, or flat reference. If this\
          \ option is used but\nno filenames are given, a \"flat\" reference will\
          \ be\nbuilt. Otherwise, all filenames following this option\nwill be used."
        synonyms:
        - -n
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: Reference genome, FASTA format (e.g. UCSC hg19.fa)
        synonyms:
        - -f
        - --fasta
        args: !SimpleFlagArg
          name: FILENAME
        optional: true
      - !Flag
        description: Target intervals (.bed or .list)
        synonyms:
        - -t
        - --targets
        args: !SimpleFlagArg
          name: FILENAME
        optional: true
      - !Flag
        description: Antitarget intervals (.bed or .list)
        synonyms:
        - -a
        - --antitargets
        args: !SimpleFlagArg
          name: FILENAME
        optional: true
      - !Flag
        description: "Use gene models from this file to assign names to the\ntarget\
          \ regions. Format: UCSC refFlat.txt or\nensFlat.txt file (preferred), or\
          \ BED, interval list,\nGFF, or similar."
        synonyms:
        - --annotate
        args: !SimpleFlagArg
          name: FILENAME
        optional: true
      - !Flag
        description: Reduce multi-accession bait labels to be short and
        synonyms:
        - --short-names
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "Regions of accessible sequence on chromosomes (.bed),\nas output\
          \ by the 'access' command."
        synonyms:
        - -g
        - --access
        args: !SimpleFlagArg
          name: FILENAME
        optional: true
      - !Flag
        description: "Average size of antitarget bins (results are\napproximate)."
        synonyms:
        - --antitarget-avg-size
        args: !SimpleFlagArg
          name: ANTITARGET_AVG_SIZE
        optional: true
      - !Flag
        description: "Minimum size of antitarget bins (smaller regions are\ndropped)."
        synonyms:
        - --antitarget-min-size
        args: !SimpleFlagArg
          name: ANTITARGET_MIN_SIZE
        optional: true
      - !Flag
        description: "Output filename/path for the new reference file being\ncreated.\
          \ (If given, ignores the -o/--output-dir option\nand will write the file\
          \ to the given path. Otherwise,\n\"reference.cnn\" will be created in the\
          \ current\ndirectory or specified output directory.)"
        synonyms:
        - --output-reference
        args: !SimpleFlagArg
          name: FILENAME
        optional: true
      - !Flag
        description: "Calculate and use cluster-specific summary stats in\nthe reference\
          \ pool to normalize samples."
        synonyms:
        - --cluster
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: Copy number reference file (.cnn).
        synonyms:
        - -r
        - --reference
        args: !SimpleFlagArg
          name: REFERENCE
        optional: true
      - !Flag
        description: Output directory.
        synonyms:
        - -d
        - --output-dir
        args: !SimpleFlagArg
          name: DIRECTORY
        optional: true
      - !Flag
        description: "Create a whole-genome copy ratio profile as a PDF\nscatter plot."
        synonyms:
        - --scatter
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "Create an ideogram of copy ratios on chromosomes as a\nPDF.\n"
        synonyms:
        - --diagram
        args: !EmptyFlagArg {}
        optional: true
      parent: *id001
      subcommands: []
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: cnvkit.py batch [-h] [-m {hybrid,amplicon,wgs}]\n       \
        \                [--segment-method {cbs,flasso,haar,none,hmm,hmm-tumor,hmm-germline}]\n\
        \                       [-y] [-c] [--drop-low-coverage] [-p [PROCESSES]]\n\
        \                       [--rscript-path PATH] [-n [FILES [FILES ...]]]\n \
        \                      [-f FILENAME] [-t FILENAME] [-a FILENAME]\n       \
        \                [--annotate FILENAME] [--short-names]\n                 \
        \      [--target-avg-size TARGET_AVG_SIZE] [-g FILENAME]\n               \
        \        [--antitarget-avg-size ANTITARGET_AVG_SIZE]\n                   \
        \    [--antitarget-min-size ANTITARGET_MIN_SIZE]\n                       [--output-reference\
        \ FILENAME] [--cluster]\n                       [-r REFERENCE] [-d DIRECTORY]\
        \ [--scatter] [--diagram]\n                       [bam_files [bam_files ...]]\n\
        \npositional arguments:\n  bam_files             Mapped sequence reads (.bam)\n\
        \noptional arguments:\n  -h, --help            show this help message and\
        \ exit\n  -m {hybrid,amplicon,wgs}, --seq-method {hybrid,amplicon,wgs}, --method\
        \ {hybrid,amplicon,wgs}\n                        Sequencing assay type: hybridization\
        \ capture\n                        ('hybrid'), targeted amplicon sequencing\
        \ ('amplicon'),\n                        or whole genome sequencing ('wgs').\
        \ Determines whether\n                        and how to use antitarget bins.\
        \ [Default: hybrid]\n  --segment-method {cbs,flasso,haar,none,hmm,hmm-tumor,hmm-germline}\n\
        \                        Method used in the 'segment' step. [Default: cbs]\n\
        \  -y, --male-reference, --haploid-x-reference\n                        Use\
        \ or assume a male reference (i.e. female samples\n                      \
        \  will have +1 log-CNR of chrX; otherwise male samples\n                \
        \        would have -1 chrX).\n  -c, --count-reads     Get read depths by\
        \ counting read midpoints within each\n                        bin. (An alternative\
        \ algorithm).\n  --drop-low-coverage   Drop very-low-coverage bins before\
        \ segmentation to\n                        avoid false-positive deletions\
        \ in poor-quality tumor\n                        samples.\n  -p [PROCESSES],\
        \ --processes [PROCESSES]\n                        Number of subprocesses\
        \ used to running each of the BAM\n                        files in parallel.\
        \ Without an argument, use the\n                        maximum number of\
        \ available CPUs. [Default: process\n                        each BAM in serial]\n\
        \  --rscript-path PATH   Path to the Rscript excecutable to use for running\
        \ R\n                        code. Use this option to specify a non-default\
        \ R\n                        installation. [Default: Rscript]\n\nTo construct\
        \ a new copy number reference:\n  -n [FILES [FILES ...]], --normal [FILES\
        \ [FILES ...]]\n                        Normal samples (.bam) used to construct\
        \ the pooled,\n                        paired, or flat reference. If this\
        \ option is used but\n                        no filenames are given, a \"\
        flat\" reference will be\n                        built. Otherwise, all filenames\
        \ following this option\n                        will be used.\n  -f FILENAME,\
        \ --fasta FILENAME\n                        Reference genome, FASTA format\
        \ (e.g. UCSC hg19.fa)\n  -t FILENAME, --targets FILENAME\n               \
        \         Target intervals (.bed or .list)\n  -a FILENAME, --antitargets FILENAME\n\
        \                        Antitarget intervals (.bed or .list)\n  --annotate\
        \ FILENAME   Use gene models from this file to assign names to the\n     \
        \                   target regions. Format: UCSC refFlat.txt or\n        \
        \                ensFlat.txt file (preferred), or BED, interval list,\n  \
        \                      GFF, or similar.\n  --short-names         Reduce multi-accession\
        \ bait labels to be short and\n                        consistent.\n  --target-avg-size\
        \ TARGET_AVG_SIZE\n                        Average size of split target bins\
        \ (results are\n                        approximate).\n  -g FILENAME, --access\
        \ FILENAME\n                        Regions of accessible sequence on chromosomes\
        \ (.bed),\n                        as output by the 'access' command.\n  --antitarget-avg-size\
        \ ANTITARGET_AVG_SIZE\n                        Average size of antitarget\
        \ bins (results are\n                        approximate).\n  --antitarget-min-size\
        \ ANTITARGET_MIN_SIZE\n                        Minimum size of antitarget\
        \ bins (smaller regions are\n                        dropped).\n  --output-reference\
        \ FILENAME\n                        Output filename/path for the new reference\
        \ file being\n                        created. (If given, ignores the -o/--output-dir\
        \ option\n                        and will write the file to the given path.\
        \ Otherwise,\n                        \"reference.cnn\" will be created in\
        \ the current\n                        directory or specified output directory.)\n\
        \  --cluster             Calculate and use cluster-specific summary stats\
        \ in\n                        the reference pool to normalize samples.\n\n\
        To reuse an existing reference:\n  -r REFERENCE, --reference REFERENCE\n \
        \                       Copy number reference file (.cnn).\n\nOutput options:\n\
        \  -d DIRECTORY, --output-dir DIRECTORY\n                        Output directory.\n\
        \  --scatter             Create a whole-genome copy ratio profile as a PDF\n\
        \                        scatter plot.\n  --diagram             Create an\
        \ ideogram of copy ratios on chromosomes as a\n                        PDF.\n"
      generated_using: *id002
    - !Command
      command:
      - cnvkit.py
      - import-seg
      positional:
      - !Positional
        description: 'optional arguments:'
        position: 2
        name: samples.
        optional: false
      named:
      - !Flag
        description: "Mapping of chromosome indexes to names. Syntax:\n\"from1:to1,from2:to2\"\
          . Or use \"human\" for the preset:\n\"23:X,24:Y,25:M\"."
        synonyms:
        - -c
        - --chromosomes
        args: !SimpleFlagArg
          name: CHROMOSOMES
        optional: true
      - !Flag
        description: "Prefix to add to chromosome names (e.g 'chr' to rename\n'8'\
          \ in the SEG file to 'chr8' in the output)."
        synonyms:
        - -p
        - --prefix
        args: !SimpleFlagArg
          name: PREFIX
        optional: true
      - !Flag
        description: "Convert base-10 logarithm values in the input to\nbase-2 logs."
        synonyms:
        - --from-log10
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "Output directory name.\n"
        synonyms:
        - -d
        - --output-dir
        args: !SimpleFlagArg
          name: DIRECTORY
        optional: true
      parent: *id001
      subcommands: []
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: cnvkit.py import-seg [-h] [-c CHROMOSOMES] [-p PREFIX] [--from-log10]\n\
        \                            [-d DIRECTORY]\n                            segfile\n\
        \npositional arguments:\n  segfile               Input file in SEG format.\
        \ May contain multiple\n                        samples.\n\noptional arguments:\n\
        \  -h, --help            show this help message and exit\n  -c CHROMOSOMES,\
        \ --chromosomes CHROMOSOMES\n                        Mapping of chromosome\
        \ indexes to names. Syntax:\n                        \"from1:to1,from2:to2\"\
        . Or use \"human\" for the preset:\n                        \"23:X,24:Y,25:M\"\
        .\n  -p PREFIX, --prefix PREFIX\n                        Prefix to add to\
        \ chromosome names (e.g 'chr' to rename\n                        '8' in the\
        \ SEG file to 'chr8' in the output).\n  --from-log10          Convert base-10\
        \ logarithm values in the input to\n                        base-2 logs.\n\
        \  -d DIRECTORY, --output-dir DIRECTORY\n                        Output directory\
        \ name.\n"
      generated_using: *id002
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: cnvkit.py [-h]\n                 {batch,target,access,antitarget,autobin,coverage,reference,fix,segment,call,diagram,scatter,heatmap,breaks,genemetrics,gainloss,sex,gender,metrics,segmetrics,bintest,import-picard,import-seg,import-theta,import-rna,export,version}\n\
      \                 ...\n\nCNVkit, a command-line toolkit for copy number analysis.\n\
      \npositional arguments:\n  {batch,target,access,antitarget,autobin,coverage,reference,fix,segment,call,diagram,scatter,heatmap,breaks,genemetrics,gainloss,sex,gender,metrics,segmetrics,bintest,import-picard,import-seg,import-theta,import-rna,export,version}\n\
      \                        Sub-commands (use with -h for more info)\n    batch\
      \               Run the complete CNVkit pipeline on one or more BAM\n      \
      \                  files.\n    target              Transform bait intervals\
      \ into targets more suitable\n                        for CNVkit.\n    access\
      \              List the locations of accessible sequence regions in a\n    \
      \                    FASTA file.\n    antitarget          Derive off-target\
      \ (\"antitarget\") bins from target\n                        regions.\n    autobin\
      \             Quickly calculate reasonable bin sizes from BAM read\n       \
      \                 counts.\n    coverage            Calculate coverage in the\
      \ given regions from BAM read\n                        depths.\n    reference\
      \           Compile a coverage reference from the given files\n            \
      \            (normal samples).\n    fix                 Combine target and antitarget\
      \ coverages and correct\n                        for biases. Adjust raw coverage\
      \ data according to the\n                        given reference, correct potential\
      \ biases and re-\n                        center.\n    segment             Infer\
      \ copy number segments from the given coverage\n                        table.\n\
      \    call                Call copy number variants from segmented log2 ratios.\n\
      \    diagram             Draw copy number (log2 coverages, segments) on\n  \
      \                      chromosomes as a diagram. If both the raw probes and\n\
      \                        segments are given, show them side-by-side on each\n\
      \                        chromosome (segments on the left side, probes on the\n\
      \                        right side).\n    scatter             Plot probe log2\
      \ coverages and segmentation calls\n                        together.\n    heatmap\
      \             Plot copy number for multiple samples as a heatmap.\n    breaks\
      \              List the targeted genes in which a copy number\n            \
      \            breakpoint occurs.\n    genemetrics         Identify targeted genes\
      \ with copy number gain or loss.\n    sex                 Guess samples' sex\
      \ from the relative coverage of\n                        chromosomes X and Y.\n\
      \    metrics             Compute coverage deviations and other metrics for\n\
      \                        self-evaluation.\n    segmetrics          Compute segment-level\
      \ metrics from bin-level log2\n                        ratios.\n    bintest\
      \             Test for single-bin copy number alterations.\n    import-picard\
      \       Convert Picard CalculateHsMetrics tabular output to\n              \
      \          CNVkit .cnn files. The input file is generated by the\n         \
      \               PER_TARGET_COVERAGE option in the CalculateHsMetrics\n     \
      \                   script in Picard tools. If 'antitarget' is in the\n    \
      \                    input filename, the generated output filename will\n  \
      \                      have the suffix '.antitargetcoverage.cnn', otherwise\n\
      \                        '.targetcoverage.cnn'.\n    import-seg          Convert\
      \ a SEG file to CNVkit .cns files.\n    import-theta        Convert THetA output\
      \ to a BED-like, CNVkit-like\n                        tabular format. Equivalently,\
      \ use the THetA results\n                        file to convert CNVkit .cns\
      \ segments to integer copy\n                        number calls.\n    import-rna\
      \          Convert a cohort of per-gene log2 ratios to CNVkit\n            \
      \            .cnr format.\n    export              Convert CNVkit output files\
      \ to another format.\n    version             Display this program's version.\n\
      \noptional arguments:\n  -h, --help            show this help message and exit\n\
      \nSee the online manual for details: https://cnvkit.readthedocs.io\n"
    generated_using: *id002
  subcommands:
  - *id006
  usage: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: cnvkit.py breaks [-h] [-m MIN_PROBES] [-o FILENAME] filename\
    \ segment\n\npositional arguments:\n  filename              Processed sample coverage\
    \ data file (*.cnr), the\n                        output of the 'fix' sub-command.\n\
    \  segment               Segmentation calls (.cns), the output of the 'segment'\n\
    \                        command).\n\noptional arguments:\n  -h, --help      \
    \      show this help message and exit\n  -m MIN_PROBES, --min-probes MIN_PROBES\n\
    \                        Minimum number of within-gene probes on both sides of\n\
    \                        a breakpoint to report it. [Default: 1]\n  -o FILENAME,\
    \ --output FILENAME\n                        Output table file name.\n"
  generated_using: *id002
subcommands: []
usage: []
help_flag: !Flag
  description: ''
  synonyms:
  - -h
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: cnvkit.py breaks [-h] [-m MIN_PROBES] [-o FILENAME] filename segment\n\
  cnvkit.py breaks: error: the following arguments are required: segment\n"
generated_using: *id007
