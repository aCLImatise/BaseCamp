!Command
command:
- ImageJ
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - --dry-run
  description: show the command line, but do not run anything
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --info
  description: informational output
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --debug
  description: verbose output
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --system
  description: do not try to run bundled Java
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --java-home
  description: specify JAVA_HOME explicitly
  args: !SimpleFlagArg
    name: path
- !Flag
  optional: true
  synonyms:
  - --print-java-home
  description: print ImageJ's idea of JAVA_HOME
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --print-ij-dir
  description: print where ImageJ thinks it is located
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --headless
  description: run in text mode
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --ij-dir
  description: "set the ImageJ directory to <path> (used to find\njars/, plugins/\
    \ and macros/)"
  args: !SimpleFlagArg
    name: path
- !Flag
  optional: true
  synonyms:
  - --heap
  - --mem
  - --memory
  description: set Java's heap size to <amount> (e.g. 512M)
  args: !SimpleFlagArg
    name: amount
- !Flag
  optional: true
  synonyms:
  - --class-path
  - --classpath
  - -classpath
  - --cp
  - -cp
  description: append <path> to the class path
  args: !SimpleFlagArg
    name: path
- !Flag
  optional: true
  synonyms:
  - --jar-path
  - --jarpath
  - -jarpath
  description: append .jar files in <path> to the class path
  args: !SimpleFlagArg
    name: path
- !Flag
  optional: true
  synonyms:
  - --pass-classpath
  description: pass -classpath <classpath> to the main() method
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --full-classpath
  description: call the main class with the full ImageJ class path
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --dont-patch-ij1
  description: do not try to runtime-patch ImageJ1
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --ext
  description: set Java's extension directory to <path>
  args: !SimpleFlagArg
    name: path
- !Flag
  optional: true
  synonyms:
  - --default-gc
  description: "do not use advanced garbage collector settings by default\n(-Xincgc\
    \ -XX:PermSize=128m)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --gc-g1
  description: use the G1 garbage collector
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --debug-gc
  description: show debug info about the garbage collector on stderr
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --debugger
  description: "[,suspend]\nstart the JVM in a mode so Eclipse's debugger can attach\
    \ to it"
  args: !SimpleFlagArg
    name: port
- !Flag
  optional: true
  synonyms:
  - --no-splash
  description: suppress showing a splash screen upon startup
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --ij2
  description: start ImageJ2 instead of ImageJ1
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --ij1
  description: start ImageJ1
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --allow-multiple
  description: do not reuse existing ImageJ instance
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --plugins
  description: use <dir> to discover plugins
  args: !SimpleFlagArg
    name: dir
- !Flag
  optional: true
  synonyms:
  - --run
  description: "[<arg>]\nrun <plugin> in ImageJ, optionally with arguments"
  args: !SimpleFlagArg
    name: plugin
- !Flag
  optional: true
  synonyms:
  - --compile-and-run
  description: compile and run <plugin> in ImageJ
  args: !SimpleFlagArg
    name: path-to-.java-file
- !Flag
  optional: true
  synonyms:
  - --edit
  description: "[<file>...]\nedit the given file in the script editor"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --update
  description: start the command-line version of the ImageJ updater
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --clojure
  description: "start Clojure instead of ImageJ (this is the\ndefault when called\
    \ with a file ending in .clj)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --beanshell
  - --bsh
  description: "start BeanShell instead of ImageJ (this is the\ndefault when called\
    \ with a file ending in .bs or .bsh"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --javascript
  - --js
  description: "start Javascript (the Rhino engine) instead of\nImageJ (this is the\
    \ default when called with a\nfile ending in .js)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --main-class
  description: "(this is the\ndefault when called with a file ending in .class)\n\
    start the given class instead of ImageJ"
  args: !SimpleFlagArg
    name: class name
- !Flag
  optional: true
  synonyms:
  - --retrotranslator
  description: "use Retrotranslator to support Java < 1.6\n"
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - --help
  - -h
  description: show this help
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "Usage: ImageJ [<Java options>.. --] [<ImageJ options>..] [<files>..]\n\
  \nImageJ launcher 4.0.5 (build 1260)\nJava options are passed to the Java Runtime,\
  \ ImageJ\noptions to ImageJ (or Jython, JRuby, ...).\n\nIn addition, the following\
  \ options are supported by ImageJ:\nGeneral options:\n--help, -h\n\tshow this help\n\
  --dry-run\n\tshow the command line, but do not run anything\n--info\n\tinformational\
  \ output\n--debug\n\tverbose output\n--system\n\tdo not try to run bundled Java\n\
  --java-home <path>\n\tspecify JAVA_HOME explicitly\n--print-java-home\n\tprint ImageJ's\
  \ idea of JAVA_HOME\n--print-ij-dir\n\tprint where ImageJ thinks it is located\n\
  --headless\n\trun in text mode\n--ij-dir <path>\n\tset the ImageJ directory to <path>\
  \ (used to find\n\t jars/, plugins/ and macros/)\n--heap, --mem, --memory <amount>\n\
  \tset Java's heap size to <amount> (e.g. 512M)\n--class-path, --classpath, -classpath,\
  \ --cp, -cp <path>\n\tappend <path> to the class path\n--jar-path, --jarpath, -jarpath\
  \ <path>\n\tappend .jar files in <path> to the class path\n--pass-classpath\n\t\
  pass -classpath <classpath> to the main() method\n--full-classpath\n\tcall the main\
  \ class with the full ImageJ class path\n--dont-patch-ij1\n\tdo not try to runtime-patch\
  \ ImageJ1\n--ext <path>\n\tset Java's extension directory to <path>\n--default-gc\n\
  \tdo not use advanced garbage collector settings by default\n\t(-Xincgc -XX:PermSize=128m)\n\
  --gc-g1\n\tuse the G1 garbage collector\n--debug-gc\n\tshow debug info about the\
  \ garbage collector on stderr\n--debugger=<port>[,suspend]\n\tstart the JVM in a\
  \ mode so Eclipse's debugger can attach to it\n--no-splash\n\tsuppress showing a\
  \ splash screen upon startup\n\nOptions for ImageJ:\n--ij2\n\tstart ImageJ2 instead\
  \ of ImageJ1\n--ij1\n\tstart ImageJ1\n--allow-multiple\n\tdo not reuse existing\
  \ ImageJ instance\n--plugins <dir>\n\tuse <dir> to discover plugins\n--run <plugin>\
  \ [<arg>]\n\trun <plugin> in ImageJ, optionally with arguments\n--compile-and-run\
  \ <path-to-.java-file>\n\tcompile and run <plugin> in ImageJ\n--edit [<file>...]\n\
  \tedit the given file in the script editor\n\nOptions to run programs other than\
  \ ImageJ:\n--update\n\tstart the command-line version of the ImageJ updater\n--clojure\n\
  \tstart Clojure instead of ImageJ (this is the \n\tdefault when called with a file\
  \ ending in .clj)\n--beanshell\n--bsh\n\tstart BeanShell instead of ImageJ (this\
  \ is the\n\tdefault when called with a file ending in .bs or .bsh\n--javascript\n\
  --js\n\tstart Javascript (the Rhino engine) instead of\n\tImageJ (this is the default\
  \ when called with a\n\tfile ending in .js)\n--main-class <class name> (this is\
  \ the\n\tdefault when called with a file ending in .class)\n\tstart the given class\
  \ instead of ImageJ\n--retrotranslator\n\tuse Retrotranslator to support Java <\
  \ 1.6\n\n\n"
generated_using:
- --help
docker_image:
