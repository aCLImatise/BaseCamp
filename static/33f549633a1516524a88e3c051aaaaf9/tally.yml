!Command
command:
- tally
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -i
  description: input stream (gzipped file allowed) (default STDIN)
  args: !SimpleFlagArg
    name: fname
- !Flag
  optional: true
  synonyms:
  - -o
  description: (gzipped!) output stream (default out.tally.gz)
  args: !SimpleFlagArg
    name: fname
- !Flag
  optional: true
  synonyms:
  - --fasta-in
  description: expect FASTA format (same as -record-format '>%I%#%R%n')
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --fasta-out
  description: write FASTA format (same as -format '>trn_%I%s%C%n%R%n')
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --with-quality
  description: pass quality scores along, collate by taking per-base max
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --no-auto
  description: do not peek in input file and set memory parameters automatically
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --peek
  description: peek in input file and output estimated memory parameters
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -zip-factor
  description: assume compression factor <num> (use 1.0 for uncompressed files
  args: !SimpleFlagArg
    name: num
- !Flag
  optional: true
  synonyms:
  - -l
  description: require read length >= <int>
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - -u
  description: require read length <= <int>
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - -tri
  description: required tri-nucleotide score <= <int>
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - -si
  description: strip <int> bases from start of read before uniquifying
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - -dsi
  description: as -si but after uniquifying (degenerate sequence insert)
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - -sumstat
  description: <fname> output file with counts of discarded categories
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -j
  description: "second paired end input stream\n-> (requires -record-format with %J\
    \ or --fastqx-in or --fastax-in)"
  args: !SimpleFlagArg
    name: fname
- !Flag
  optional: true
  synonyms:
  - -p
  description: (gzipped!) second output stream for second paired end (cf -j)
  args: !SimpleFlagArg
    name: fname
- !Flag
  optional: true
  synonyms:
  - --fastax-in
  description: expect reaper --fastax-out format (same as -record-format '>%I%brecno=%J%#%R%n')
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --fastqx-in
  description: "expect reaper --fastqx-out format (same as -record-format '@%I%brecno=%J%#%R%n+%#%Q%n')\n\
    -> these two options are for re-pairing individually processed paired-end files"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -hsd
  description: '[1,-1,2,-2]  increase or decrease hash size relative to default'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -dsd
  description: '[1,-1,2,-2]  increase or decrease data size relative to default'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -hs
  description: k in 14..32 specifies hash size 2 ** k
  args: !SimpleFlagArg
    name: k
- !Flag
  optional: true
  synonyms:
  - -ds
  description: k in 14..31 specifies storage size 2 ** k
  args: !SimpleFlagArg
    name: k
- !Flag
  optional: true
  synonyms:
  - --unsorted
  description: do not sort output sequences
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --cx
  description: "do not compress sequence (unit testing)\nNOTE with --cx output will\
    \ not be sorted in the same way\nbecause hash values change. To compare, sort\
    \ outputs"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --noput
  description: do not output uniquified sequences
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -v
  description: "turn on verbosity settings\ncmp         with cmp paired end identifier\
    \ mismatches will be reported"
  args: !SimpleFlagArg
    name: work|cmp
- !Flag
  optional: true
  synonyms:
  - -record-format
  description: "specify input format\nThe same syntax as documented under reaper --record-format,\n\
    Additionally %J is accepted and assumes a numerical ID that\nwill be strictly\
    \ increasing.\nIf -j is used this ID is required and will be used to match reads.\n\
    This can be used in conjunction with the reaper %J format directive."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -format
  description: "output format specification, syntax below\n%R  read\n%L  length\n\
    %C  number of occurrences\n%T  trinucleotide score\n%I  read identifier - numerical\
    \ identifier constructed on output\nCAVEAT read identifier could differ between\
    \ runs depending on options\nCAVEAT read identifier is not tied to the read sequence\n\
    %t  tab\n%s  tab\n%n  newline\n%%  percentage character"
  args: !SimpleFlagArg
    name: format
- !Flag
  optional: true
  synonyms:
  - --no-tally
  description: "reads are output as they are processed (use --with-quality to retain\
    \ quality)\nThis can be useful for matching up paired-end files with missing reads.\n\
    It works only if record offset information was preserved and is read back in using\
    \ %J\nThe supported output directives (besides %n %s %t and %%) are these:\n%R\
    \  read\n%Q  quality\n%I  identifier\n%J  output offset\nFilter options such as\
    \ -tri and -si are NOT active"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --pair-by-offset
  description: "assume the -i and -j input files match record-by-record\nWith this\
    \ option the %J directive is not needed\n"
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "-i <fname>        input stream (gzipped file allowed) (default STDIN)\n\
  -o <fname>        (gzipped!) output stream (default out.tally.gz)\n--fasta-in  \
  \      expect FASTA format (same as -record-format '>%I%#%R%n')\n--fasta-out   \
  \    write FASTA format (same as -format '>trn_%I%s%C%n%R%n')\n\n--with-quality\
  \    pass quality scores along, collate by taking per-base max\n--no-auto      \
  \   do not peek in input file and set memory parameters automatically\n--peek  \
  \          peek in input file and output estimated memory parameters\n-zip-factor\
  \ <num> assume compression factor <num> (use 1.0 for uncompressed files\n-l <int>\
  \          require read length >= <int>\n-u <int>          require read length <=\
  \ <int>\n-tri <int>        required tri-nucleotide score <= <int>\n-si <int>   \
  \      strip <int> bases from start of read before uniquifying\n-dsi <int>     \
  \   as -si but after uniquifying (degenerate sequence insert)\n-sumstat  <fname>\
  \ output file with counts of discarded categories\n\nPAIRED END functionality\n\
  -j <fname>        second paired end input stream\n               -> (requires -record-format\
  \ with %J or --fastqx-in or --fastax-in)\n-p <fname>        (gzipped!) second output\
  \ stream for second paired end (cf -j)\n--fastax-in       expect reaper --fastax-out\
  \ format (same as -record-format '>%I%brecno=%J%#%R%n')\n--fastqx-in       expect\
  \ reaper --fastqx-out format (same as -record-format '@%I%brecno=%J%#%R%n+%#%Q%n')\n\
  \               -> these two options are for re-pairing individually processed paired-end\
  \ files\n\n-hsd [1,-1,2,-2]  increase or decrease hash size relative to default\n\
  -dsd [1,-1,2,-2]  increase or decrease data size relative to default\n-hs k    \
  \         k in 14..32 specifies hash size 2 ** k\n-ds k             k in 14..31\
  \ specifies storage size 2 ** k\n--unsorted        do not sort output sequences\n\
  --cx              do not compress sequence (unit testing)\n   NOTE with --cx output\
  \ will not be sorted in the same way\n   because hash values change. To compare,\
  \ sort outputs\n--noput           do not output uniquified sequences\n-v <work|cmp>\
  \     turn on verbosity settings\n      cmp         with cmp paired end identifier\
  \ mismatches will be reported\n-record-format    specify input format\n     The\
  \ same syntax as documented under reaper --record-format,\n     Additionally %J\
  \ is accepted and assumes a numerical ID that\n     will be strictly increasing.\n\
  \     If -j is used this ID is required and will be used to match reads.\n     This\
  \ can be used in conjunction with the reaper %J format directive.\n-format <format>\
  \  output format specification, syntax below\n     %R  read\n     %L  length\n \
  \    %C  number of occurrences\n     %T  trinucleotide score\n     %I  read identifier\
  \ - numerical identifier constructed on output\n         CAVEAT read identifier\
  \ could differ between runs depending on options\n         CAVEAT read identifier\
  \ is not tied to the read sequence\n     %t  tab\n     %s  tab\n     %n  newline\n\
  \     %%  percentage character\n  Anything else is copied verbatim\n  Paired-end\
  \ reads (activated with -j option) can be output with -o alone or both -o and -p\n\
  \     %R  reads concatenated from -i and -j input files, matched by %J\n     %Q\
  \  quality concatenated from -i and -j input files\n     %A  matched read from -i\
  \ input file\n     %B  matched read from -j input file\n     %U  quality from -i\
  \ input file\n     %V  quality from -j input file\n     %K  length of first paired\
  \ end\n  If -p option is used, %R becomes context aware and refers to %A (-o) or\
  \ %B (-p)\n  If -p option is used, %Q becomes context aware and refers to %A (-o)\
  \ or %B (-p)\n--no-tally        reads are output as they are processed (use --with-quality\
  \ to retain quality)\n  This can be useful for matching up paired-end files with\
  \ missing reads.\n  It works only if record offset information was preserved and\
  \ is read back in using %J\n  The supported output directives (besides %n %s %t\
  \ and %%) are these:\n     %R  read\n     %Q  quality\n     %I  identifier\n   \
  \  %J  output offset\n  Filter options such as -tri and -si are NOT active\n--pair-by-offset\
  \  assume the -i and -j input files match record-by-record\n     With this option\
  \ the %J directive is not needed\n"
generated_using:
- -h
docker_image:
