from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Cpanm_V0_1_0 = CommandToolBuilder(tool="cpanm", base_command=["cpanm"], inputs=[ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Turns on chatty output")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="Turns off the most output")), ToolInput(tag="in_interactive", input_type=Boolean(optional=True), prefix="--interactive", doc=InputDocumentation(doc="Turns on interactive configure (required for Task:: modules)")), ToolInput(tag="in_force", input_type=Boolean(optional=True), prefix="--force", doc=InputDocumentation(doc="force install")), ToolInput(tag="in_not_est", input_type=Boolean(optional=True), prefix="--notest", doc=InputDocumentation(doc="Do not run unit tests")), ToolInput(tag="in_test_only", input_type=Boolean(optional=True), prefix="--test-only", doc=InputDocumentation(doc="Run tests only, do not install")), ToolInput(tag="in_sudo", input_type=Boolean(optional=True), prefix="--sudo", doc=InputDocumentation(doc="sudo to run install commands")), ToolInput(tag="in_install_deps", input_type=Boolean(optional=True), prefix="--installdeps", doc=InputDocumentation(doc="Only install dependencies")), ToolInput(tag="in_show_deps", input_type=Boolean(optional=True), prefix="--showdeps", doc=InputDocumentation(doc="Only display direct dependencies")), ToolInput(tag="in_reinstall", input_type=Boolean(optional=True), prefix="--reinstall", doc=InputDocumentation(doc="Reinstall the distribution even if you already have the latest version installed")), ToolInput(tag="in_mirror", input_type=Boolean(optional=True), prefix="--mirror", doc=InputDocumentation(doc="Specify the base URL for the mirror (e.g. http://cpan.cpantesters.org/)")), ToolInput(tag="in_mirror_only", input_type=Boolean(optional=True), prefix="--mirror-only", doc=InputDocumentation(doc="Use the mirror's index file instead of the CPAN Meta DB")), ToolInput(tag="in_from", input_type=Boolean(optional=True), prefix="--from", doc=InputDocumentation(doc="Use only this mirror base URL and its index file")), ToolInput(tag="in_prompt", input_type=Boolean(optional=True), prefix="--prompt", doc=InputDocumentation(doc="Prompt when configure/build/test fails")), ToolInput(tag="in_local_lib", input_type=Boolean(optional=True), prefix="--local-lib", doc=InputDocumentation(doc="Specify the install base to install modules")), ToolInput(tag="in_local_lib_contained", input_type=Boolean(optional=True), prefix="--local-lib-contained", doc=InputDocumentation(doc="Specify the install base to install all non-core modules")), ToolInput(tag="in_self_contained", input_type=Boolean(optional=True), prefix="--self-contained", doc=InputDocumentation(doc="Install all non-core modules, even if they're already installed.")), ToolInput(tag="in_auto_cleanup", input_type=Boolean(optional=True), prefix="--auto-cleanup", doc=InputDocumentation(doc="Number of days that cpanm's work directories expire in. Defaults to 7")), ToolInput(tag="in_self_upgrade", input_type=Boolean(optional=True), prefix="--self-upgrade", doc=InputDocumentation(doc="upgrades itself")), ToolInput(tag="in_info", input_type=Boolean(optional=True), prefix="--info", doc=InputDocumentation(doc="Displays distribution info on CPAN")), ToolInput(tag="in_look", input_type=Boolean(optional=True), prefix="--look", doc=InputDocumentation(doc="Opens the distribution with your SHELL")), ToolInput(tag="in_uninstall", input_type=Boolean(optional=True), prefix="--uninstall", doc=InputDocumentation(doc="Uninstalls the modules (EXPERIMENTAL)")), ToolInput(tag="in_module", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Cpanm_V0_1_0().translate("wdl", allow_empty_container=True)

