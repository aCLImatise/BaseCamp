!Command
command:
- yapc
positional:
- !Positional
  optional: false
  position: 0
  name: OUTPUT_PREFIX
  description: Prefix to use for all output files
- !Positional
  optional: false
  position: 1
  name: CONDITION_REP1_REP2
  description: "Name of the condition, BigWig files of first and\nsecond replicates;\
    \ all separated by spaces. (default:\nNone)"
named:
- !Flag
  optional: true
  synonyms:
  - --smoothing-window-width
  description: "Width of the smoothing window used for the second\nderivative track.\
    \ If the peak calls aren't capturing\nthe peak shape well, try setting this to\
    \ different\nvalues ranging from 75 to 200. (default: 150)"
  args: !SimpleFlagArg
    name: SMOOTHING_WINDOW_WIDTH
- !Flag
  optional: true
  synonyms:
  - --smoothing-times
  description: "Number of times smoothing is applied to the second\nderivative. (default:\
    \ 3)"
  args: !SimpleFlagArg
    name: SMOOTHING_TIMES
- !Flag
  optional: true
  synonyms:
  - --min-concave-region-width
  description: "Discard concave regions smaller than the threshold\nspecified. (default:\
    \ 75)"
  args: !SimpleFlagArg
    name: MIN_CONCAVE_REGION_WIDTH
- !Flag
  optional: true
  synonyms:
  - --truncate-idr-input
  description: "Truncate IDR input to the number of peaks specified.\n(default: 100000)"
  args: !SimpleFlagArg
    name: TRUNCATE_IDR_INPUT
- !Flag
  optional: true
  synonyms:
  - --fixed-peak-halfwidth
  description: "Set final peak coordinates to the specified number of\nbase pairs\
    \ on either side of the concave region mode.\n(default: None)"
  args: !SimpleFlagArg
    name: FIXED_PEAK_HALFWIDTH
- !Flag
  optional: true
  synonyms:
  - --pseudoreplicates
  description: "Use pseudoreplicates as implemented in modENCODE\n(Landt et al 2012;\
    \ around Fig 7): for each condition,\nassess peak reproducibility in replicates\
    \ and\npseudoreplicates; report globalIDRs for the set with a\nlarger number of\
    \ peak calls (at IDR=0.001).\nPseudoreplicates are specified as the 3rd and 4th\
    \ file\nname after every condition. (default: False)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --recycle
  description: "Do not recompute (intermediate) output files if a file\nwith the expected\
    \ name is already present. Enabling\nthis can lead to funky behaviour e.g. in\
    \ the case of a\npreviously interrupted run. (default: False)\n"
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "yapc (yet another peak caller) 0.1\n\nusage: yapc [-h] [--smoothing-window-width\
  \ SMOOTHING_WINDOW_WIDTH]\n            [--smoothing-times SMOOTHING_TIMES]\n   \
  \         [--min-concave-region-width MIN_CONCAVE_REGION_WIDTH]\n            [--truncate-idr-input\
  \ TRUNCATE_IDR_INPUT]\n            [--fixed-peak-halfwidth FIXED_PEAK_HALFWIDTH]\
  \ [--pseudoreplicates]\n            [--recycle]\n            OUTPUT_PREFIX [CONDITION_REP1_REP2\
  \ [CONDITION_REP1_REP2 ...]]\n\nAn adhoc peak caller for genomic high-throughput\
  \ sequencing data such as ATAC-\nseq, DNase-seq or ChIP-seq. Specifically written\
  \ for the purpose of capturing\nrepresentative peaks of characteristic width in\
  \ a time series data set with\ntwo biological replicates per time point. Briefly,\
  \ candidate peak locations\nare defined using concave regions (regions with negative\
  \ smoothed second\nderivative) from signal averaged across all samples. The candidate\
  \ peaks are\nthen tested for condition-specific statistical significance using IDR.\n\
  \npositional arguments:\n  OUTPUT_PREFIX         Prefix to use for all output files\n\
  \  CONDITION_REP1_REP2   Name of the condition, BigWig files of first and\n    \
  \                    second replicates; all separated by spaces. (default:\n   \
  \                     None)\n\noptional arguments:\n  -h, --help            show\
  \ this help message and exit\n  --smoothing-window-width SMOOTHING_WINDOW_WIDTH\n\
  \                        Width of the smoothing window used for the second\n   \
  \                     derivative track. If the peak calls aren't capturing\n   \
  \                     the peak shape well, try setting this to different\n     \
  \                   values ranging from 75 to 200. (default: 150)\n  --smoothing-times\
  \ SMOOTHING_TIMES\n                        Number of times smoothing is applied\
  \ to the second\n                        derivative. (default: 3)\n  --min-concave-region-width\
  \ MIN_CONCAVE_REGION_WIDTH\n                        Discard concave regions smaller\
  \ than the threshold\n                        specified. (default: 75)\n  --truncate-idr-input\
  \ TRUNCATE_IDR_INPUT\n                        Truncate IDR input to the number of\
  \ peaks specified.\n                        (default: 100000)\n  --fixed-peak-halfwidth\
  \ FIXED_PEAK_HALFWIDTH\n                        Set final peak coordinates to the\
  \ specified number of\n                        base pairs on either side of the\
  \ concave region mode.\n                        (default: None)\n  --pseudoreplicates\
  \    Use pseudoreplicates as implemented in modENCODE\n                        (Landt\
  \ et al 2012; around Fig 7): for each condition,\n                        assess\
  \ peak reproducibility in replicates and\n                        pseudoreplicates;\
  \ report globalIDRs for the set with a\n                        larger number of\
  \ peak calls (at IDR=0.001).\n                        Pseudoreplicates are specified\
  \ as the 3rd and 4th file\n                        name after every condition. (default:\
  \ False)\n  --recycle             Do not recompute (intermediate) output files if\
  \ a file\n                        with the expected name is already present. Enabling\n\
  \                        this can lead to funky behaviour e.g. in the case of a\n\
  \                        previously interrupted run. (default: False)\n"
generated_using:
- --help
docker_image:
