from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, Float, Boolean, File

Mmseqs_Result2Profile_V0_1_0 = CommandToolBuilder(tool="mmseqs_result2profile", base_command=["mmseqs", "result2profile"], inputs=[ToolInput(tag="in_comp_bias_corr", input_type=Int(optional=True), prefix="--comp-bias-corr", doc=InputDocumentation(doc="Correct for locally biased amino acid composition (range 0-1) [1]")), ToolInput(tag="in_list_matches_evalue", input_type=Float(optional=True), prefix="-e", doc=InputDocumentation(doc="List matches below this E-value (range 0.0-inf) [1.000E-03]")), ToolInput(tag="in_gap_open", input_type=Int(optional=True), prefix="--gap-open", doc=InputDocumentation(doc="Gap open cost [nucl:5,aa:11]")), ToolInput(tag="in_gap_extend", input_type=Int(optional=True), prefix="--gap-extend", doc=InputDocumentation(doc="Gap extension cost [nucl:2,aa:1]")), ToolInput(tag="in_mask_profile", input_type=Int(optional=True), prefix="--mask-profile", doc=InputDocumentation(doc="Mask query sequence of profile using tantan [0,1] [1]")), ToolInput(tag="in_e_profile", input_type=Float(optional=True), prefix="--e-profile", doc=InputDocumentation(doc="Include sequences matches with < E-value thr. into the profile (>=0.0) [1.000E-03]")), ToolInput(tag="in_wg", input_type=Boolean(optional=True), prefix="--wg", doc=InputDocumentation(doc="Use global sequence weighting for profile calculation [0]")), ToolInput(tag="in_filter_msa", input_type=Int(optional=True), prefix="--filter-msa", doc=InputDocumentation(doc="Filter msa: 0: do not filter, 1: filter [1]")), ToolInput(tag="in_max_seq_id", input_type=Float(optional=True), prefix="--max-seq-id", doc=InputDocumentation(doc="Reduce redundancy of output MSA using max. pairwise sequence identity [0.0,1.0] [0.900]")), ToolInput(tag="in_qid", input_type=Float(optional=True), prefix="--qid", doc=InputDocumentation(doc="Reduce diversity of output MSAs using min.seq. identity with query sequences [0.0,1.0] [0.000]")), ToolInput(tag="in_qsc", input_type=Float(optional=True), prefix="--qsc", doc=InputDocumentation(doc="Reduce diversity of output MSAs using min. score per aligned residue with query sequences [-50.0,100.0] [-20.000]")), ToolInput(tag="in_cov", input_type=Float(optional=True), prefix="--cov", doc=InputDocumentation(doc="Filter output MSAs using min. fraction of query residues covered by matched sequences [0.0,1.0] [0.000]")), ToolInput(tag="in_diff", input_type=Int(optional=True), prefix="--diff", doc=InputDocumentation(doc="Filter MSAs by selecting most diverse set of sequences, keeping at least this many seqs in each MSA block of length 50 [1000]")), ToolInput(tag="in_pc_a", input_type=Float(optional=True), prefix="--pca", doc=InputDocumentation(doc="Pseudo count admixture strength [0.000]")), ToolInput(tag="in_pcb", input_type=Float(optional=True), prefix="--pcb", doc=InputDocumentation(doc="Pseudo counts: Neff at half of maximum admixture (range 0.0-inf) [1.500]")), ToolInput(tag="in_allow_deletion", input_type=Boolean(optional=True), prefix="--allow-deletion", doc=InputDocumentation(doc="Allow deletions in a MSA [0]")), ToolInput(tag="in_sub_mat", input_type=File(optional=True), prefix="--sub-mat", doc=InputDocumentation(doc="Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]")), ToolInput(tag="in_db_load_mode", input_type=Int(optional=True), prefix="--db-load-mode", doc=InputDocumentation(doc="Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch [0]")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of CPU-cores used (all by default) [2]")), ToolInput(tag="in_compressed", input_type=Int(optional=True), prefix="--compressed", doc=InputDocumentation(doc="Write compressed output [0]")), ToolInput(tag="in_verbosity_level_errors", input_type=Int(optional=True), prefix="-v", doc=InputDocumentation(doc="Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]"))], outputs=[ToolOutput(tag="out_sub_mat", output_type=File(optional=True), selector=InputSelector(input_to_select="in_sub_mat", type_hint=File()), doc=OutputDocumentation(doc="Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]"))], container="quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Mmseqs_Result2Profile_V0_1_0().translate("wdl")

