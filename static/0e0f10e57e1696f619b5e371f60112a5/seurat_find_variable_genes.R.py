from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Int, Float

Seurat_Find_Variable_Genes_R_V0_1_0 = CommandToolBuilder(tool="seurat_find_variable_genes.R", base_command=["seurat-find-variable-genes.R"], inputs=[ToolInput(tag="in_input_object_file", input_type=File(optional=True), prefix="--input-object-file", doc=InputDocumentation(doc="File name in which a serialized R matrix object may be found.")), ToolInput(tag="in_input_format", input_type=String(optional=True), prefix="--input-format", doc=InputDocumentation(doc="Either loom, seurat, anndata or singlecellexperiment for the input format to read.")), ToolInput(tag="in_output_format", input_type=String(optional=True), prefix="--output-format", doc=InputDocumentation(doc="Either loom, seurat, anndata or singlecellexperiment for the output format.")), ToolInput(tag="in_selection_method", input_type=String(optional=True), prefix="--selection-method", doc=InputDocumentation(doc="How to choose top variable features. Choose one of: 'vst', 'mvp', disp.")), ToolInput(tag="in_mean_function", input_type=String(optional=True), prefix="--mean-function", doc=InputDocumentation(doc="Function to compute x-axis value (average expression). Default is to take the mean of the detected (i.e. non-zero) values.")), ToolInput(tag="in_dispersion_function", input_type=String(optional=True), prefix="--dispersion-function", doc=InputDocumentation(doc="Function to compute y-axis value (dispersion). Default is to take the standard deviation of all values.")), ToolInput(tag="in_x_low_cut_off", input_type=String(optional=True), prefix="--x-low-cutoff", doc=InputDocumentation(doc="Bottom cutoff on x-axis (mean) for identifying variable genes.")), ToolInput(tag="in_x_high_cut_off", input_type=String(optional=True), prefix="--x-high-cutoff", doc=InputDocumentation(doc="Top cutoff on x-axis (mean) for identifying variable genes.")), ToolInput(tag="in_n_features", input_type=Int(optional=True), prefix="--nfeatures", doc=InputDocumentation(doc="Number of features to return.")), ToolInput(tag="in_y_low_cut_off", input_type=String(optional=True), prefix="--y-low-cutoff", doc=InputDocumentation(doc="Bottom cutoff on y-axis (dispersion) for identifying variable genes.")), ToolInput(tag="in_y_high_cut_off", input_type=String(optional=True), prefix="--y-high-cutoff", doc=InputDocumentation(doc="Top cutoff on y-axis (dispersion) for identifying variable genes.")), ToolInput(tag="in_output_object_file", input_type=File(optional=True), prefix="--output-object-file", doc=InputDocumentation(doc="File name in which to store serialized R object of type 'Seurat'.'")), ToolInput(tag="in_output_text_file", input_type=File(optional=True), prefix="--output-text-file", doc=InputDocumentation(doc="File name in which to store variable genes in plain text.")), ToolInput(tag="in_loess_span", input_type=Float(optional=True), prefix="--loess-span", doc=InputDocumentation(doc="SPAN PARAMETER FOR VST\n(vst method) Loess span parameter used when fitting the variance-mean relationship. Default: 0.3")), ToolInput(tag="in_clip_max", input_type=Int(optional=True), prefix="--clip-max", doc=InputDocumentation(doc="MAX FOR VST\n(vst method) After standardization values larger than clip.max will be set to clip.max; default is 'auto' which sets this value to the square root of the number of cells.")), ToolInput(tag="in_num_bin", input_type=Int(optional=True), prefix="--num-bin", doc=InputDocumentation(doc="FOR SCALED ANALYSIS\nTotal number of bins to use in the scaled analysis (default is 20).")), ToolInput(tag="in_binning_method", input_type=Int(optional=True), prefix="--binning-method", doc=InputDocumentation(doc="METHOD\nSpecifies how the bins should be computed. Available methods are either equal_width: each bin is of equal width along the x-axis [default]; or equal_frequency: each bin contains an equal number of features (can increase statistical power to detect overdispersed features at high expression values, at the cost of reduced resolution along the x-axis)"))], outputs=[ToolOutput(tag="out_output_object_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_object_file", type_hint=File()), doc=OutputDocumentation(doc="File name in which to store serialized R object of type 'Seurat'.'")), ToolOutput(tag="out_output_text_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_text_file", type_hint=File()), doc=OutputDocumentation(doc="File name in which to store variable genes in plain text."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Seurat_Find_Variable_Genes_R_V0_1_0().translate("wdl", allow_empty_container=True)

