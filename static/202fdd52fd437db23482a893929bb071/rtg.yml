&id001 !Command
positional: []
named: []
command:
- rtg
parent:
subcommands:
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: OPTION
    optional: true
  named:
  - !Flag
    description: treat lower case residues as unknowns
    synonyms:
    - --duster
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: exclude input sequences based on their name. If the input sequence
      contains the specified string then that sequence is excluded from the SDF. May
      be specified 0 or more times
    synonyms:
    - --exclude
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: when formatting from SAM/BAM input, only include reads with this
      read group ID
    synonyms:
    - --select-read-group
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: trim read ends to maximise base quality above the given threshold
    synonyms:
    - --trim-threshold
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: disable checking for duplicate sequence names
    synonyms:
    - --allow-duplicate-names
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: do not include name data in the SDF output
    synonyms:
    - --no-names
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: do not include quality data in the SDF output
    synonyms:
    - --no-quality
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '|FILE       file containing a single valid read group SAM header
      line or a string in the form "@RG\tID:READGROUP1\tSM:BACT_SAMPLE\tPL:ILLUMINA"'
    synonyms:
    - --sam-rg
    args: !SimpleFlagArg
      name: STRING
    optional: true
  command:
  - rtg
  - format
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: print help on command-line flag usage
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Usage: rtg format [OPTION]... -o SDF FILE+\n                  [OPTION]...\
    \ -o SDF -I FILE\n                  [OPTION]... -o SDF -l FILE -r FILE\n\nConverts\
    \ the contents of sequence data files (FASTA/FASTQ/SAM/BAM) into the RTG Sequence\
    \ Data File (SDF) format.\n\nFile Input/Output\n  -f, --format=FORMAT        \
    \    format of input. Allowed values are [fasta, fastq, fastq-interleaved, sam-se,\
    \ sam-pe] (Default is fasta)\n  -I, --input-list-file=FILE     file containing\
    \ a list of input read files (1 per line)\n  -l, --left=FILE                left\
    \ input file for FASTA/FASTQ paired end data\n  -o, --output=SDF             \
    \  name of output SDF\n  -p, --protein                  input is protein. If this\
    \ option is not specified, then the input is assumed to consist of nucleotides\n\
    \  -q, --quality-format=FORMAT    quality data encoding method used in FASTQ input\
    \ files (Illumina 1.8+ uses sanger). Allowed values are [sanger, solexa,\n   \
    \                              illumina] (Default is sanger)\n  -r, --right=FILE\
    \               right input file for FASTA/FASTQ paired end data\n      FILE+\
    \                      input sequence files. May be specified 0 or more times\n\
    \nFiltering\n      --duster                   treat lower case residues as unknowns\n\
    \      --exclude=STRING           exclude input sequences based on their name.\
    \ If the input sequence contains the specified string then that sequence is\n\
    \                                 excluded from the SDF. May be specified 0 or\
    \ more times\n      --select-read-group=STRING when formatting from SAM/BAM input,\
    \ only include reads with this read group ID\n      --trim-threshold=INT     \
    \  trim read ends to maximise base quality above the given threshold\n\nUtility\n\
    \      --allow-duplicate-names    disable checking for duplicate sequence names\n\
    \  -h, --help                     print help on command-line flag usage\n    \
    \  --no-names                 do not include name data in the SDF output\n   \
    \   --no-quality               do not include quality data in the SDF output\n\
    \      --sam-rg=STRING|FILE       file containing a single valid read group SAM\
    \ header line or a string in the form\n                                 \"@RG\\\
    tID:READGROUP1\\tSM:BACT_SAMPLE\\tPL:ILLUMINA\"\n\n"
  generated_using: &id002
  - --help
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: OPTION
    optional: true
  named:
  - !Flag
    description: SDF containing sequences
    synonyms:
    - -i
    - --input
    args: !SimpleFlagArg
      name: SDF
    optional: true
  - !Flag
    description: output filename (extension added if not present). Use '-' to write
      to standard output
    synonyms:
    - -o
    - --output
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: interleave paired data into a single output file. Default is to split
      to separate output files
    synonyms:
    - --interleave
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: maximum number of nucleotides to print on a line of output. A value
      of 0 indicates no limit (Default is 0)
    synonyms:
    - -l
    - --line-length
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: do not gzip the output
    synonyms:
    - -Z
    - --no-gzip
    args: !EmptyFlagArg {}
    optional: true
  command:
  - rtg
  - sdf2fasta
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: print help on command-line flag usage
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Usage: rtg sdf2fasta [OPTION]... -i SDF -o FILE STRING+\n          \
    \           [OPTION]... -i SDF -o FILE -I FILE\n                     [OPTION]...\
    \ -i SDF -o FILE --end-id INT --start-id INT\n\nConverts SDF data into FASTA file(s).\n\
    \nFile Input/Output\n  -i, --input=SDF       SDF containing sequences\n  -o, --output=FILE\
    \     output filename (extension added if not present). Use '-' to write to standard\
    \ output\n\nFiltering\n      --end-id=INT      exclusive upper bound on sequence\
    \ id\n  -I, --id-file=FILE    file containing sequence ids, or sequence names\
    \ if --names flag is set, one per line\n  -n, --names           interpret supplied\
    \ sequence as names instead of numeric ids\n      --start-id=INT    inclusive\
    \ lower bound on sequence id\n      --taxons          interpret supplied sequence\
    \ as taxon ids instead of numeric sequence ids\n      STRING+           id of\
    \ sequence to extract, or sequence name if --names flag is set. May be specified\
    \ 0 or more times\n\nUtility\n  -h, --help            print help on command-line\
    \ flag usage\n      --interleave      interleave paired data into a single output\
    \ file. Default is to split to separate output files\n  -l, --line-length=INT\
    \ maximum number of nucleotides to print on a line of output. A value of 0 indicates\
    \ no limit (Default is 0)\n  -Z, --no-gzip         do not gzip the output\n\n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: OPTION
    optional: true
  named:
  - !Flag
    description: SDF containing sequences
    synonyms:
    - -i
    - --input
    args: !SimpleFlagArg
      name: SDF
    optional: true
  - !Flag
    description: output filename (extension added if not present). Use '-' to write
      to standard output
    synonyms:
    - -o
    - --output
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: default quality value to use if the SDF does not contain quality
      data (0-63)
    synonyms:
    - -q
    - --default-quality
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: interleave paired data into a single output file. Default is to split
      to separate output files
    synonyms:
    - --interleave
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: maximum number of nucleotides to print on a line of output. A value
      of 0 indicates no limit (Default is 0)
    synonyms:
    - -l
    - --line-length
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: do not gzip the output
    synonyms:
    - -Z
    - --no-gzip
    args: !EmptyFlagArg {}
    optional: true
  command:
  - rtg
  - sdf2fastq
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: print help on command-line flag usage
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Usage: rtg sdf2fastq [OPTION]... -i SDF -o FILE STRING+\n          \
    \           [OPTION]... -i SDF -o FILE -I FILE\n                     [OPTION]...\
    \ -i SDF -o FILE --end-id INT --start-id INT\n\nConverts SDF data into FASTQ file(s).\n\
    \nFile Input/Output\n  -i, --input=SDF           SDF containing sequences\n  -o,\
    \ --output=FILE         output filename (extension added if not present). Use\
    \ '-' to write to standard output\n\nFiltering\n      --end-id=INT          exclusive\
    \ upper bound on sequence id\n  -I, --id-file=FILE        file containing sequence\
    \ ids, or sequence names if --names flag is set, one per line\n  -n, --names \
    \              interpret supplied sequence as names instead of numeric ids\n \
    \     --start-id=INT        inclusive lower bound on sequence id\n      STRING+\
    \               id of sequence to extract, or sequence name if --names flag is\
    \ set. May be specified 0 or more times\n\nUtility\n  -q, --default-quality=INT\
    \ default quality value to use if the SDF does not contain quality data (0-63)\n\
    \  -h, --help                print help on command-line flag usage\n      --interleave\
    \          interleave paired data into a single output file. Default is to split\
    \ to separate output files\n  -l, --line-length=INT     maximum number of nucleotides\
    \ to print on a line of output. A value of 0 indicates no limit (Default is 0)\n\
    \  -Z, --no-gzip             do not gzip the output\n\n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: OPTION
    optional: true
  named:
  - !Flag
    description: SDF containing sequences
    synonyms:
    - -i
    - --input
    args: !SimpleFlagArg
      name: SDF
    optional: true
  - !Flag
    description: output filename (extension added if not present). Use '-' to write
      to standard output
    synonyms:
    - -o
    - --output
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: do not gzip the output
    synonyms:
    - -Z
    - --no-gzip
    args: !EmptyFlagArg {}
    optional: true
  command:
  - rtg
  - sdf2sam
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: print help on command-line flag usage
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Usage: rtg sdf2sam [OPTION]... -i SDF -o FILE STRING+\n            \
    \       [OPTION]... -i SDF -o FILE -I FILE\n                   [OPTION]... -i\
    \ SDF -o FILE --end-id INT --start-id INT\n\nConverts SDF data into SAM/BAM.\n\
    \nFile Input/Output\n  -i, --input=SDF    SDF containing sequences\n  -o, --output=FILE\
    \  output filename (extension added if not present). Use '-' to write to standard\
    \ output\n\nFiltering\n      --end-id=INT   exclusive upper bound on sequence\
    \ id\n  -I, --id-file=FILE file containing sequence ids, or sequence names if\
    \ --names flag is set, one per line\n  -n, --names        interpret supplied sequence\
    \ as names instead of numeric ids\n      --start-id=INT inclusive lower bound\
    \ on sequence id\n      STRING+        id of sequence to extract, or sequence\
    \ name if --names flag is set. May be specified 0 or more times\n\nUtility\n \
    \ -h, --help         print help on command-line flag usage\n  -Z, --no-gzip  \
    \    do not gzip the output\n\n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: OPTION
    optional: true
  named:
  - !Flag
    description: input FASTQ file, Use '-' to read from standard input
    synonyms:
    - -i
    - --input
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: output filename. Use '-' to write to standard output
    synonyms:
    - -o
    - --output
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: quality data encoding method used in FASTQ input files (Illumina
      1.8+ uses sanger). Allowed values are [sanger, solexa, illumina] (Default is
      sanger)
    synonyms:
    - -q
    - --quality-format
    args: !SimpleFlagArg
      name: FORMAT
    optional: true
  - !Flag
    description: if set, discard reads that have zero length after trimming. Should
      not be used with paired-end data
    synonyms:
    - --discard-empty-reads
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: trim read ends to maximise base quality above the given threshold
      (Default is 0)
    synonyms:
    - -E
    - --end-quality-threshold
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: if a read ends up shorter than this threshold it will be trimmed
      to zero length (Default is 0)
    synonyms:
    - --min-read-length
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: trim read starts to maximise base quality above the given threshold
      (Default is 0)
    synonyms:
    - -S
    - --start-quality-threshold
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: always trim the specified number of bases from read end (Default
      is 0)
    synonyms:
    - -e
    - --trim-end-bases
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: always trim the specified number of bases from read start (Default
      is 0)
    synonyms:
    - -s
    - --trim-start-bases
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: do not gzip the output
    synonyms:
    - -Z
    - --no-gzip
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: if set, output in reverse complement
    synonyms:
    - -r
    - --reverse-complement
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: seed used during subsampling
    synonyms:
    - --seed
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: if set, subsample the input to retain this fraction of reads
    synonyms:
    - --subsample
    args: !SimpleFlagArg
      name: FLOAT
    optional: true
  - !Flag
    description: number of threads (Default is the number of available cores)
    synonyms:
    - -T
    - --threads
    args: !SimpleFlagArg
      name: INT
    optional: true
  command:
  - rtg
  - fastqtrim
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: print help on command-line flag usage
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Usage: rtg fastqtrim [OPTION]... -i FILE -o FILE\n\nTrim reads in FASTQ\
    \ files.\n\nFile Input/Output\n  -i, --input=FILE                  input FASTQ\
    \ file, Use '-' to read from standard input\n  -o, --output=FILE             \
    \    output filename. Use '-' to write to standard output\n  -q, --quality-format=FORMAT\
    \       quality data encoding method used in FASTQ input files (Illumina 1.8+\
    \ uses sanger). Allowed values are [sanger, solexa,\n                        \
    \            illumina] (Default is sanger)\n\nFiltering\n      --discard-empty-reads\
    \         if set, discard reads that have zero length after trimming. Should not\
    \ be used with paired-end data\n  -E, --end-quality-threshold=INT   trim read\
    \ ends to maximise base quality above the given threshold (Default is 0)\n   \
    \   --min-read-length=INT         if a read ends up shorter than this threshold\
    \ it will be trimmed to zero length (Default is 0)\n  -S, --start-quality-threshold=INT\
    \ trim read starts to maximise base quality above the given threshold (Default\
    \ is 0)\n  -e, --trim-end-bases=INT          always trim the specified number\
    \ of bases from read end (Default is 0)\n  -s, --trim-start-bases=INT        always\
    \ trim the specified number of bases from read start (Default is 0)\n\nUtility\n\
    \  -h, --help                        print help on command-line flag usage\n \
    \ -Z, --no-gzip                     do not gzip the output\n  -r, --reverse-complement\
    \          if set, output in reverse complement\n      --seed=INT            \
    \        seed used during subsampling\n      --subsample=FLOAT             if\
    \ set, subsample the input to retain this fraction of reads\n  -T, --threads=INT\
    \                 number of threads (Default is the number of available cores)\n\
    \n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: OPTION
    optional: true
  named:
  - !Flag
    description: output SDF
    synonyms:
    - -o
    - --output
    args: !SimpleFlagArg
      name: SDF
    optional: true
  - !Flag
    description: comment to include in the generated SDF
    synonyms:
    - --comment
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: relative frequencies of A,C,G,T in the generated sequence (Default
      is 1,1,1,1)
    synonyms:
    - --freq
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: length of generated sequence. May be specified 0 or more times, or
      as a comma separated list
    synonyms:
    - -l
    - --length
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: maximum sequence length
    synonyms:
    - --max-length
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: minimum sequence length
    synonyms:
    - --min-length
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: number of sequences to generate
    synonyms:
    - -n
    - --num-contigs
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: sequence name prefix (Default is simulatedSequence)
    synonyms:
    - --prefix
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: seed for random number generator
    synonyms:
    - -s
    - --seed
    args: !SimpleFlagArg
      name: INT
    optional: true
  command:
  - rtg
  - genomesim
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: print help on command-line flag usage
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Usage: rtg genomesim [OPTION]... -o SDF --max-length INT --min-length\
    \ INT -n INT\n                     [OPTION]... -o SDF -l INT\n\nSimulates a reference\
    \ genome.\n\nFile Input/Output\n  -o, --output=SDF      output SDF\n\nUtility\n\
    \      --comment=STRING  comment to include in the generated SDF\n      --freq=STRING\
    \     relative frequencies of A,C,G,T in the generated sequence (Default is 1,1,1,1)\n\
    \  -h, --help            print help on command-line flag usage\n  -l, --length=INT\
    \      length of generated sequence. May be specified 0 or more times, or as a\
    \ comma separated list\n      --max-length=INT  maximum sequence length\n    \
    \  --min-length=INT  minimum sequence length\n  -n, --num-contigs=INT number of\
    \ sequences to generate\n      --prefix=STRING   sequence name prefix (Default\
    \ is simulatedSequence)\n  -s, --seed=INT        seed for random number generator\n\
    \n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: OPTION
    optional: true
  named:
  - !Flag
    description: SDF containing input genome
    synonyms:
    - -t
    - --input
    args: !SimpleFlagArg
      name: SDF
    optional: true
  - !Flag
    description: name for reads output SDF
    synonyms:
    - -o
    - --output
    args: !SimpleFlagArg
      name: SDF
    optional: true
  - !Flag
    description: if set, the user-supplied distribution represents desired abundance
    synonyms:
    - --abundance
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: allow reads to be drawn from template fragments containing unknown
      nucleotides
    synonyms:
    - -N
    - --allow-unknowns
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: coverage, must be positive
    synonyms:
    - -c
    - --coverage
    args: !SimpleFlagArg
      name: FLOAT
    optional: true
  - !Flag
    description: file containing probability distribution for sequence selection
    synonyms:
    - -D
    - --distribution
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: if set, the user-supplied distribution represents desired DNA fraction
    synonyms:
    - --dna-fraction
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: maximum fragment size (Default is 500)
    synonyms:
    - -M
    - --max-fragment-size
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: minimum fragment size (Default is 350)
    synonyms:
    - -m
    - --min-fragment-size
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: rate that the machine will generate new unknowns in the read (Default
      is 0.0)
    synonyms:
    - --n-rate
    args: !SimpleFlagArg
      name: FLOAT
    optional: true
  - !Flag
    description: number of reads to be generated
    synonyms:
    - -n
    - --num-reads
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: file containing probability distribution for sequence selection expressed
      by taxonomy id
    synonyms:
    - --taxonomy-distribution
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: select Complete Genomics read structure version, 1 (35 bp) or 2 (29
      bp)
    synonyms:
    - -V
    - --cg-read-version
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: comment to include in the generated SDF
    synonyms:
    - --comment
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: do not create read names in the output SDF
    synonyms:
    - --no-names
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: do not create read qualities in the output SDF
    synonyms:
    - --no-qualities
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: 'set the range of base quality values permitted e.g.: 3-40 (Default
      is fixed qualities corresponding to overall machine base error rate)'
    synonyms:
    - -q
    - --qual-range
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: '|FILE         file containing a single valid read group SAM header
      line or a string in the form "@RG\tID:READGROUP1\tSM:BACT_SAMPLE\tPL:ILLUMINA"'
    synonyms:
    - --sam-rg
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: seed for random number generator
    synonyms:
    - -s
    - --seed
    args: !SimpleFlagArg
      name: INT
    optional: true
  command:
  - rtg
  - cgsim
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: print help on command-line flag usage
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Usage: rtg cgsim [OPTION]... -V INT -t SDF -o SDF -c FLOAT\n       \
    \          [OPTION]... -V INT -t SDF -o SDF -n INT\n\nSimulate Complete Genomics\
    \ Inc sequencing reads. Supports the original 35 bp read structure (5-10-10-10),\
    \ and the newer 29 bp read structure (10-9-10).\n\nFile Input/Output\n  -t, --input=SDF\
    \                  SDF containing input genome\n  -o, --output=SDF           \
    \      name for reads output SDF\n\nFragment Generation\n      --abundance   \
    \               if set, the user-supplied distribution represents desired abundance\n\
    \  -N, --allow-unknowns             allow reads to be drawn from template fragments\
    \ containing unknown nucleotides\n  -c, --coverage=FLOAT             coverage,\
    \ must be positive\n  -D, --distribution=FILE          file containing probability\
    \ distribution for sequence selection\n      --dna-fraction               if set,\
    \ the user-supplied distribution represents desired DNA fraction\n  -M, --max-fragment-size=INT\
    \      maximum fragment size (Default is 500)\n  -m, --min-fragment-size=INT \
    \     minimum fragment size (Default is 350)\n      --n-rate=FLOAT           \
    \    rate that the machine will generate new unknowns in the read (Default is\
    \ 0.0)\n  -n, --num-reads=INT              number of reads to be generated\n \
    \     --taxonomy-distribution=FILE file containing probability distribution for\
    \ sequence selection expressed by taxonomy id\n\nComplete Genomics\n  -V, --cg-read-version=INT\
    \        select Complete Genomics read structure version, 1 (35 bp) or 2 (29 bp)\n\
    \nUtility\n      --comment=STRING             comment to include in the generated\
    \ SDF\n  -h, --help                       print help on command-line flag usage\n\
    \      --no-names                   do not create read names in the output SDF\n\
    \      --no-qualities               do not create read qualities in the output\
    \ SDF\n  -q, --qual-range=STRING          set the range of base quality values\
    \ permitted e.g.: 3-40 (Default is fixed qualities corresponding to overall machine\
    \ base\n                                   error rate)\n      --sam-rg=STRING|FILE\
    \         file containing a single valid read group SAM header line or a string\
    \ in the form\n                                   \"@RG\\tID:READGROUP1\\tSM:BACT_SAMPLE\\\
    tPL:ILLUMINA\"\n  -s, --seed=INT                   seed for random number generator\n\
    \n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: OPTION
    optional: true
  named:
  - !Flag
    description: SDF containing input genome
    synonyms:
    - -t
    - --input
    args: !SimpleFlagArg
      name: SDF
    optional: true
  - !Flag
    description: select the sequencing technology to model. Allowed values are [illumina_se,
      illumina_pe, complete_genomics, complete_genomics_2, 454_pe, 454_se, iontorrent]
    synonyms:
    - --machine
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: name for reads output SDF
    synonyms:
    - -o
    - --output
    args: !SimpleFlagArg
      name: SDF
    optional: true
  - !Flag
    description: if set, the user-supplied distribution represents desired abundance
    synonyms:
    - --abundance
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: allow reads to be drawn from template fragments containing unknown
      nucleotides
    synonyms:
    - -N
    - --allow-unknowns
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: coverage, must be positive
    synonyms:
    - -c
    - --coverage
    args: !SimpleFlagArg
      name: FLOAT
    optional: true
  - !Flag
    description: file containing probability distribution for sequence selection
    synonyms:
    - -D
    - --distribution
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: if set, the user-supplied distribution represents desired DNA fraction
    synonyms:
    - --dna-fraction
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: maximum fragment size (Default is 250)
    synonyms:
    - -M
    - --max-fragment-size
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: minimum fragment size (Default is 200)
    synonyms:
    - -m
    - --min-fragment-size
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: rate that the machine will generate new unknowns in the read (Default
      is 0.0)
    synonyms:
    - --n-rate
    args: !SimpleFlagArg
      name: FLOAT
    optional: true
  - !Flag
    description: number of reads to be generated
    synonyms:
    - -n
    - --num-reads
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: file containing probability distribution for sequence selection expressed
      by taxonomy id
    synonyms:
    - --taxonomy-distribution
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: target read length on the left side
    synonyms:
    - -L
    - --left-read-length
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: target read length on the right side
    synonyms:
    - -R
    - --right-read-length
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: target read length, must be positive
    synonyms:
    - -r
    - --read-length
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: maximum 454 read length (in paired end case the sum of the left and
      the right read lengths)
    synonyms:
    - --454-max-total-size
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: minimum 454 read length (in paired end case the sum of the left and
      the right read lengths)
    synonyms:
    - --454-min-total-size
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: maximum IonTorrent read length
    synonyms:
    - --ion-max-total-size
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: minimum IonTorrent read length
    synonyms:
    - --ion-min-total-size
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: comment to include in the generated SDF
    synonyms:
    - --comment
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: do not create read names in the output SDF
    synonyms:
    - --no-names
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: do not create read qualities in the output SDF
    synonyms:
    - --no-qualities
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: 'set the range of base quality values permitted e.g.: 3-40 (Default
      is fixed qualities corresponding to overall machine base error rate)'
    synonyms:
    - -q
    - --qual-range
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: '|FILE         file containing a single valid read group SAM header
      line or a string in the form "@RG\tID:READGROUP1\tSM:BACT_SAMPLE\tPL:ILLUMINA"'
    synonyms:
    - --sam-rg
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: seed for random number generator
    synonyms:
    - -s
    - --seed
    args: !SimpleFlagArg
      name: INT
    optional: true
  command:
  - rtg
  - readsim
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: print help on command-line flag usage
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Usage: rtg readsim [OPTION]... -t SDF --machine STRING -o SDF -c FLOAT\n\
    \                   [OPTION]... -t SDF --machine STRING -o SDF -n INT\n\nGenerates\
    \ reads from a reference genome.\n\nFile Input/Output\n  -t, --input=SDF     \
    \             SDF containing input genome\n      --machine=STRING            \
    \ select the sequencing technology to model. Allowed values are [illumina_se,\
    \ illumina_pe, complete_genomics,\n                                   complete_genomics_2,\
    \ 454_pe, 454_se, iontorrent]\n  -o, --output=SDF                 name for reads\
    \ output SDF\n\nFragment Generation\n      --abundance                  if set,\
    \ the user-supplied distribution represents desired abundance\n  -N, --allow-unknowns\
    \             allow reads to be drawn from template fragments containing unknown\
    \ nucleotides\n  -c, --coverage=FLOAT             coverage, must be positive\n\
    \  -D, --distribution=FILE          file containing probability distribution for\
    \ sequence selection\n      --dna-fraction               if set, the user-supplied\
    \ distribution represents desired DNA fraction\n  -M, --max-fragment-size=INT\
    \      maximum fragment size (Default is 250)\n  -m, --min-fragment-size=INT \
    \     minimum fragment size (Default is 200)\n      --n-rate=FLOAT           \
    \    rate that the machine will generate new unknowns in the read (Default is\
    \ 0.0)\n  -n, --num-reads=INT              number of reads to be generated\n \
    \     --taxonomy-distribution=FILE file containing probability distribution for\
    \ sequence selection expressed by taxonomy id\n\nIllumina PE\n  -L, --left-read-length=INT\
    \       target read length on the left side\n  -R, --right-read-length=INT   \
    \   target read length on the right side\n\nIllumina SE\n  -r, --read-length=INT\
    \            target read length, must be positive\n\n454 SE/PE\n      --454-max-total-size=INT\
    \     maximum 454 read length (in paired end case the sum of the left and the\
    \ right read lengths)\n      --454-min-total-size=INT     minimum 454 read length\
    \ (in paired end case the sum of the left and the right read lengths)\n\nIonTorrent\
    \ SE\n      --ion-max-total-size=INT     maximum IonTorrent read length\n    \
    \  --ion-min-total-size=INT     minimum IonTorrent read length\n\nUtility\n  \
    \    --comment=STRING             comment to include in the generated SDF\n  -h,\
    \ --help                       print help on command-line flag usage\n      --no-names\
    \                   do not create read names in the output SDF\n      --no-qualities\
    \               do not create read qualities in the output SDF\n  -q, --qual-range=STRING\
    \          set the range of base quality values permitted e.g.: 3-40 (Default\
    \ is fixed qualities corresponding to overall machine base\n                 \
    \                  error rate)\n      --sam-rg=STRING|FILE         file containing\
    \ a single valid read group SAM header line or a string in the form\n        \
    \                           \"@RG\\tID:READGROUP1\\tSM:BACT_SAMPLE\\tPL:ILLUMINA\"\
    \n  -s, --seed=INT                   seed for random number generator\n\n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: OPTION
    optional: true
  named:
  - !Flag
    description: output VCF file name
    synonyms:
    - -o
    - --output
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: SDF containing the reference genome
    synonyms:
    - -t
    - --reference
    args: !SimpleFlagArg
      name: SDF
    optional: true
  - !Flag
    description: do not gzip the output
    synonyms:
    - -Z
    - --no-gzip
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: seed for the random number generator
    synonyms:
    - --seed
    args: !SimpleFlagArg
      name: INT
    optional: true
  command:
  - rtg
  - popsim
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: print help on command-line flag usage
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Usage: rtg popsim [OPTION]... -o FILE -t SDF\n\nGenerates a VCF containing\
    \ simulated population variants.\n\nFile Input/Output\n  -o, --output=FILE   output\
    \ VCF file name\n  -t, --reference=SDF SDF containing the reference genome\n\n\
    Utility\n  -h, --help          print help on command-line flag usage\n  -Z, --no-gzip\
    \       do not gzip the output\n      --seed=INT      seed for the random number\
    \ generator\n\n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: OPTION
    optional: true
  named:
  - !Flag
    description: input VCF containing population variants
    synonyms:
    - -i
    - --input
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: output VCF file name
    synonyms:
    - -o
    - --output
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: if set, output an SDF containing the sample genome
    synonyms:
    - --output-sdf
    args: !SimpleFlagArg
      name: SDF
    optional: true
  - !Flag
    description: SDF containing the reference genome
    synonyms:
    - -t
    - --reference
    args: !SimpleFlagArg
      name: SDF
    optional: true
  - !Flag
    description: name for sample
    synonyms:
    - -s
    - --sample
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: set, treat variants without allele frequency annotation as uniformly
      likely
    synonyms:
    - --allow-missing-af
    args: !SimpleFlagArg
      name: if
    optional: true
  - !Flag
    description: do not gzip the output
    synonyms:
    - -Z
    - --no-gzip
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: ploidy to use. Allowed values are [auto, diploid, haploid] (Default
      is auto)
    synonyms:
    - --ploidy
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: seed for the random number generator
    synonyms:
    - --seed
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: sex of individual. Allowed values are [male, female, either] (Default
      is either)
    synonyms:
    - --sex
    args: !SimpleFlagArg
      name: SEX
    optional: true
  command:
  - rtg
  - samplesim
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: print help on command-line flag usage
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Usage: rtg samplesim [OPTION]... -i FILE -o FILE -t SDF -s STRING\n\n\
    Generates a VCF containing a genotype simulated from population variants according\
    \ to allele frequency.\n\nFile Input/Output\n  -i, --input=FILE       input VCF\
    \ containing population variants\n  -o, --output=FILE      output VCF file name\n\
    \      --output-sdf=SDF   if set, output an SDF containing the sample genome\n\
    \  -t, --reference=SDF    SDF containing the reference genome\n  -s, --sample=STRING\
    \    name for sample\n\nUtility\n      --allow-missing-af if set, treat variants\
    \ without allele frequency annotation as uniformly likely\n  -h, --help      \
    \       print help on command-line flag usage\n  -Z, --no-gzip          do not\
    \ gzip the output\n      --ploidy=STRING    ploidy to use. Allowed values are\
    \ [auto, diploid, haploid] (Default is auto)\n      --seed=INT         seed for\
    \ the random number generator\n      --sex=SEX          sex of individual. Allowed\
    \ values are [male, female, either] (Default is either)\n\n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: OPTION
    optional: true
  named:
  - !Flag
    description: name of the existing sample to use as the father
    synonyms:
    - --father
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: input VCF containing parent variants
    synonyms:
    - -i
    - --input
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: name of the existing sample to use as the mother
    synonyms:
    - --mother
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: output VCF file name
    synonyms:
    - -o
    - --output
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: if set, output an SDF containing the sample genome
    synonyms:
    - --output-sdf
    args: !SimpleFlagArg
      name: SDF
    optional: true
  - !Flag
    description: SDF containing the reference genome
    synonyms:
    - -t
    - --reference
    args: !SimpleFlagArg
      name: SDF
    optional: true
  - !Flag
    description: name for new child sample
    synonyms:
    - -s
    - --sample
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: probability of extra crossovers per chromosome (Default is 0.01)
    synonyms:
    - --extra-crossovers
    args: !SimpleFlagArg
      name: FLOAT
    optional: true
  - !Flag
    description: if set, load genetic maps from this directory for recombination point
      selection
    synonyms:
    - --genetic-map-dir
    args: !SimpleFlagArg
      name: DIR
    optional: true
  - !Flag
    description: do not gzip the output
    synonyms:
    - -Z
    - --no-gzip
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: ploidy to use. Allowed values are [auto, diploid, haploid] (Default
      is auto)
    synonyms:
    - --ploidy
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: seed for the random number generator
    synonyms:
    - --seed
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: sex of individual. Allowed values are [male, female, either] (Default
      is either)
    synonyms:
    - --sex
    args: !SimpleFlagArg
      name: SEX
    optional: true
  - !Flag
    description: if set, display information regarding haplotype selection and crossover
      points
    synonyms:
    - --show-crossovers
    args: !EmptyFlagArg {}
    optional: true
  command:
  - rtg
  - childsim
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: print help on command-line flag usage
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Usage: rtg childsim [OPTION]... --father STRING -i FILE --mother STRING\
    \ -o FILE -t SDF -s STRING\n\nGenerates a VCF containing a genotype simulated\
    \ as a child of two parents.\n\nFile Input/Output\n      --father=STRING     \
    \     name of the existing sample to use as the father\n  -i, --input=FILE   \
    \          input VCF containing parent variants\n      --mother=STRING       \
    \   name of the existing sample to use as the mother\n  -o, --output=FILE    \
    \        output VCF file name\n      --output-sdf=SDF         if set, output an\
    \ SDF containing the sample genome\n  -t, --reference=SDF          SDF containing\
    \ the reference genome\n  -s, --sample=STRING          name for new child sample\n\
    \nUtility\n      --extra-crossovers=FLOAT probability of extra crossovers per\
    \ chromosome (Default is 0.01)\n      --genetic-map-dir=DIR    if set, load genetic\
    \ maps from this directory for recombination point selection\n  -h, --help   \
    \                print help on command-line flag usage\n  -Z, --no-gzip      \
    \          do not gzip the output\n      --ploidy=STRING          ploidy to use.\
    \ Allowed values are [auto, diploid, haploid] (Default is auto)\n      --seed=INT\
    \               seed for the random number generator\n      --sex=SEX        \
    \        sex of individual. Allowed values are [male, female, either] (Default\
    \ is either)\n      --show-crossovers        if set, display information regarding\
    \ haplotype selection and crossover points\n\n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: OPTION
    optional: true
  named:
  - !Flag
    description: input VCF containing genotype of original sample
    synonyms:
    - -i
    - --input
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: name of the existing sample to use as the original genotype
    synonyms:
    - --original
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: output VCF file name
    synonyms:
    - -o
    - --output
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: if set, output an SDF containing the sample genome
    synonyms:
    - --output-sdf
    args: !SimpleFlagArg
      name: SDF
    optional: true
  - !Flag
    description: SDF containing the reference genome
    synonyms:
    - -t
    - --reference
    args: !SimpleFlagArg
      name: SDF
    optional: true
  - !Flag
    description: name for new derived sample
    synonyms:
    - -s
    - --sample
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: do not gzip the output
    synonyms:
    - -Z
    - --no-gzip
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: expected number of de novo mutations per genome (Default is 70)
    synonyms:
    - --num-mutations
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: ploidy to use. Allowed values are [auto, diploid, haploid] (Default
      is auto)
    synonyms:
    - --ploidy
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: seed for the random number generator
    synonyms:
    - --seed
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: if set, display information regarding de novo mutation points
    synonyms:
    - --show-mutations
    args: !EmptyFlagArg {}
    optional: true
  command:
  - rtg
  - denovosim
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: print help on command-line flag usage
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Usage: rtg denovosim [OPTION]... -i FILE --original STRING -o FILE -t\
    \ SDF -s STRING\n\nGenerates a VCF containing a derived genotype containing de\
    \ novo variants.\n\nFile Input/Output\n  -i, --input=FILE        input VCF containing\
    \ genotype of original sample\n      --original=STRING   name of the existing\
    \ sample to use as the original genotype\n  -o, --output=FILE       output VCF\
    \ file name\n      --output-sdf=SDF    if set, output an SDF containing the sample\
    \ genome\n  -t, --reference=SDF     SDF containing the reference genome\n  -s,\
    \ --sample=STRING     name for new derived sample\n\nUtility\n  -h, --help   \
    \           print help on command-line flag usage\n  -Z, --no-gzip           do\
    \ not gzip the output\n      --num-mutations=INT expected number of de novo mutations\
    \ per genome (Default is 70)\n      --ploidy=STRING     ploidy to use. Allowed\
    \ values are [auto, diploid, haploid] (Default is auto)\n      --seed=INT    \
    \      seed for the random number generator\n      --show-mutations    if set,\
    \ display information regarding de novo mutation points\n\n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: OPTION
    optional: true
  named:
  - !Flag
    description: input VCF containing parent variants
    synonyms:
    - -i
    - --input
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: directory for output
    synonyms:
    - -o
    - --output
    args: !SimpleFlagArg
      name: DIR
    optional: true
  - !Flag
    description: if set, output an SDF for the genome of each simulated sample
    synonyms:
    - --output-sdf
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: genome relationships PED file
    synonyms:
    - -p
    - --pedigree
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: SDF containing the reference genome
    synonyms:
    - -t
    - --reference
    args: !SimpleFlagArg
      name: SDF
    optional: true
  - !Flag
    description: probability of extra crossovers per chromosome (Default is 0.01)
    synonyms:
    - --extra-crossovers
    args: !SimpleFlagArg
      name: FLOAT
    optional: true
  - !Flag
    description: if set, load genetic maps from this directory for recombination point
      selection
    synonyms:
    - --genetic-map-dir
    args: !SimpleFlagArg
      name: DIR
    optional: true
  - !Flag
    description: do not gzip the output
    synonyms:
    - -Z
    - --no-gzip
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: expected number of mutations per genome (Default is 70)
    synonyms:
    - --num-mutations
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: ploidy to use. Allowed values are [auto, diploid, haploid] (Default
      is auto)
    synonyms:
    - --ploidy
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: if set, output only variants used by at least one sample
    synonyms:
    - --remove-unused
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: seed for the random number generator
    synonyms:
    - --seed
    args: !SimpleFlagArg
      name: INT
    optional: true
  command:
  - rtg
  - pedsamplesim
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: print help on command-line flag usage
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Usage: rtg pedsamplesim [OPTION]... -i FILE -o DIR -p FILE -t SDF\n\n\
    Generates simulated genotypes for all members of a pedigree.\n\nFile Input/Output\n\
    \  -i, --input=FILE             input VCF containing parent variants\n  -o, --output=DIR\
    \             directory for output\n      --output-sdf             if set, output\
    \ an SDF for the genome of each simulated sample\n  -p, --pedigree=FILE      \
    \    genome relationships PED file\n  -t, --reference=SDF          SDF containing\
    \ the reference genome\n\nUtility\n      --extra-crossovers=FLOAT probability\
    \ of extra crossovers per chromosome (Default is 0.01)\n      --genetic-map-dir=DIR\
    \    if set, load genetic maps from this directory for recombination point selection\n\
    \  -h, --help                   print help on command-line flag usage\n  -Z, --no-gzip\
    \                do not gzip the output\n      --num-mutations=INT      expected\
    \ number of mutations per genome (Default is 70)\n      --ploidy=STRING      \
    \    ploidy to use. Allowed values are [auto, diploid, haploid] (Default is auto)\n\
    \      --remove-unused          if set, output only variants used by at least\
    \ one sample\n      --seed=INT               seed for the random number generator\n\
    \n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: OPTION
    optional: true
  named:
  - !Flag
    description: input VCF containing the sample genotype
    synonyms:
    - -i
    - --input
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: name for output SDF
    synonyms:
    - -o
    - --output
    args: !SimpleFlagArg
      name: SDF
    optional: true
  - !Flag
    description: SDF containing the reference genome
    synonyms:
    - -t
    - --reference
    args: !SimpleFlagArg
      name: SDF
    optional: true
  - !Flag
    description: name of the sample to select from the VCF
    synonyms:
    - -s
    - --sample
    args: !SimpleFlagArg
      name: STRING
    optional: true
  command:
  - rtg
  - samplereplay
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: print help on command-line flag usage
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Usage: rtg samplereplay [OPTION]... -i FILE -o SDF -t SDF -s STRING\n\
    \nGenerates the genome corresponding to a sample genotype.\n\nFile Input/Output\n\
    \  -i, --input=FILE    input VCF containing the sample genotype\n  -o, --output=SDF\
    \    name for output SDF\n  -t, --reference=SDF SDF containing the reference genome\n\
    \  -s, --sample=STRING name of the sample to select from the VCF\n\nUtility\n\
    \  -h, --help          print help on command-line flag usage\n\n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: OPTION
    optional: true
  named: []
  command:
  - rtg
  - bgzip
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: print help on command-line flag usage
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Usage: rtg bgzip [OPTION]... FILE+\n\nCompress a file with block gzip.\n\
    \nFile Input/Output\n  -l, --compression-level=INT the compression level to use,\
    \ between 1 (least but fast) and 9 (highest but slow) (Default is 5)\n  -d, --decompress\
    \            decompress\n  -f, --force                 force overwrite of existing\
    \ output file\n      --no-terminate          if set, do not add the block gzip\
    \ termination block\n  -c, --stdout                write on standard output, keep\
    \ original files unchanged. Implied when using standard input\n      FILE+   \
    \                file to (de)compress, use '-' for standard input. Must be specified\
    \ 1 or more times\n\nUtility\n  -h, --help                  print help on command-line\
    \ flag usage\n\n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: OPTION
    optional: true
  named: []
  command:
  - rtg
  - index
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: print help on command-line flag usage
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Usage: rtg index [OPTION]... FILE+\n                 [OPTION]... -I\
    \ FILE\n\nCreates index files for block compressed TAB-delimited genome position\
    \ files.\n\nFile Input/Output\n  -f, --format=FORMAT        format of input to\
    \ index. Allowed values are [sam, bam, cram, sv, coveragetsv, bed, vcf, auto]\
    \ (Default is auto)\n  -I, --input-list-file=FILE file containing a list of block\
    \ compressed files (1 per line) containing genome position data\n      FILE+ \
    \                 block compressed files containing data to be indexed. May be\
    \ specified 0 or more times\n\nUtility\n  -h, --help                 print help\
    \ on command-line flag usage\n\n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: the indexed block compressed genome position data file to extract
    position: 0
    name: FILE
    optional: false
  named:
  - !Flag
    description: print out header also
    synonyms:
    - --header
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: out header only
    synonyms:
    - --header-only
    args: !SimpleFlagArg
      name: print
    optional: true
  command:
  - rtg
  - extract
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: print help on command-line flag usage
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Usage: rtg extract [OPTION]... FILE REGION+\n                   [OPTION]...\
    \ FILE\n\nExtract records from an indexed genomic position data file.\n\nFile\
    \ Input/Output\n      FILE          the indexed block compressed genome position\
    \ data file to extract\n\nFiltering\n      REGION+       the range to display.\
    \ The format is one of <sequence_name>, <sequence_name>:<start>-<end>, <sequence_name>:<pos>+<length>\
    \ or\n                    <sequence_name>:<pos>~<padding>. May be specified 0\
    \ or more times\n\nReporting\n      --header      print out header also\n    \
    \  --header-only print out header only\n\nUtility\n  -h, --help        print help\
    \ on command-line flag usage\n\n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: OPTION
    optional: true
  named:
  - !Flag
    description: print out the name and length of each sequence. (Not recommended
      for read sets)
    synonyms:
    - --lengths
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: display info about unknown bases (Ns) by read position
    synonyms:
    - -p
    - --position
    args: !SimpleFlagArg
      name: only
    optional: true
  - !Flag
    description: display mean of quality
    synonyms:
    - -q
    - --quality
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: display reference sequence list for the given sex, if defined. Allowed
      values are [male, female, either]. May be specified 0 or more times, or as a
      comma separated list
    synonyms:
    - --sex
    args: !SimpleFlagArg
      name: SEX
    optional: true
  - !Flag
    description: information about taxonomy
    synonyms:
    - --taxonomy
    args: !SimpleFlagArg
      name: display
    optional: true
  - !Flag
    description: info about unknown bases (Ns)
    synonyms:
    - -n
    - --unknowns
    args: !SimpleFlagArg
      name: display
    optional: true
  command:
  - rtg
  - sdfstats
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: print help on command-line flag usage
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Usage: rtg sdfstats [OPTION]... SDF+\n\nPrint statistics that describe\
    \ a directory of SDF formatted data.\n\nFile Input/Output\n      SDF+       SDF\
    \ directories. Must be specified 1 or more times\n\nReporting\n      --lengths\
    \  print out the name and length of each sequence. (Not recommended for read sets)\n\
    \  -p, --position only display info about unknown bases (Ns) by read position\n\
    \  -q, --quality  display mean of quality\n      --sex=SEX  display reference\
    \ sequence list for the given sex, if defined. Allowed values are [male, female,\
    \ either]. May be specified 0 or more times, or\n                 as a comma separated\
    \ list\n      --taxonomy display information about taxonomy\n  -n, --unknowns\
    \ display info about unknown bases (Ns)\n\nUtility\n  -h, --help     print help\
    \ on command-line flag usage\n\n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: OPTION
    optional: true
  named:
  - !Flag
    description: SDF containing sequences
    synonyms:
    - -i
    - --input
    args: !SimpleFlagArg
      name: SDF
    optional: true
  - !Flag
    description: output SDF
    synonyms:
    - -o
    - --output
    args: !SimpleFlagArg
      name: SDF
    optional: true
  command:
  - rtg
  - sdfsubset
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: print help on command-line flag usage
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Usage: rtg sdfsubset [OPTION]... -i SDF -o SDF STRING+\n           \
    \          [OPTION]... -i SDF -o SDF -I FILE\n                     [OPTION]...\
    \ -i SDF -o SDF --end-id INT --start-id INT\n\nExtracts a subset of sequences\
    \ from one SDF and outputs them to another SDF.\n\nFile Input/Output\n  -i, --input=SDF\
    \    SDF containing sequences\n  -o, --output=SDF   output SDF\n\nFiltering\n\
    \      --end-id=INT   exclusive upper bound on sequence id\n  -I, --id-file=FILE\
    \ file containing sequence ids, or sequence names if --names flag is set, one\
    \ per line\n  -n, --names        interpret supplied sequence as names instead\
    \ of numeric ids\n      --start-id=INT inclusive lower bound on sequence id\n\
    \      STRING+        id of sequence to extract, or sequence name if --names flag\
    \ is set. May be specified 0 or more times\n\nUtility\n  -h, --help         print\
    \ help on command-line flag usage\n\n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: OPTION
    optional: true
  named:
  - !Flag
    description: input SDF
    synonyms:
    - -i
    - --input
    args: !SimpleFlagArg
      name: SDF
    optional: true
  - !Flag
    description: if set, output in FASTA format
    synonyms:
    - -f
    - --fasta
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: if set, output in FASTQ format
    synonyms:
    - -q
    - --fastq
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: set, output in reverse complement
    synonyms:
    - -r
    - --reverse-complement
    args: !SimpleFlagArg
      name: if
    optional: true
  command:
  - rtg
  - sdfsubseq
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: print help on command-line flag usage
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Usage: rtg sdfsubseq [OPTION]... -i SDF REGION+\n\nPrints a subsequence\
    \ of a given sequence in an SDF.\n\nFile Input/Output\n  -i, --input=SDF     \
    \     input SDF\n\nFiltering\n  -I, --sequence-id        if set, use sequence\
    \ id instead of sequence name in region (0-based)\n      REGION+             \
    \ the range to display. The format is one of <sequence_name>, <sequence_name>:<start>-<end>,\
    \ <sequence_name>:<pos>+<length> or\n                           <sequence_name>:<pos>~<padding>.\
    \ Must be specified 1 or more times\n\nUtility\n  -f, --fasta              if\
    \ set, output in FASTA format\n  -q, --fastq              if set, output in FASTQ\
    \ format\n  -h, --help               print help on command-line flag usage\n \
    \ -r, --reverse-complement if set, output in reverse complement\n\n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: OPTION
    optional: true
  named:
  - !Flag
    description: VCF file containing multi-sample variant calls. Use '-' to read from
      standard input
    synonyms:
    - -i
    - --input
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: if set, output annotated calls to this VCF file. Use '-' to write
      to standard output
    synonyms:
    - -o
    - --output
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: if set, output only consistent calls to this VCF file
    synonyms:
    - --output-consistent
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: if set, output only non-Mendelian calls to this VCF file
    synonyms:
    - --output-inconsistent
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: SDF containing the reference genome
    synonyms:
    - -t
    - --template
    args: !SimpleFlagArg
      name: SDF
    optional: true
  - !Flag
    description: use all records, regardless of filters (Default is to only process
      records where FILTER is "." or "PASS")
    synonyms:
    - --all-records
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: allow homozygous diploid calls in place of haploid calls and assume
      missing values are equal to the reference
    synonyms:
    - -l
    - --lenient
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: percentage concordance required for consistent parentage (Default
      is 99.0)
    synonyms:
    - --min-concordance
    args: !SimpleFlagArg
      name: FLOAT
    optional: true
  - !Flag
    description: genome relationships PED file (Default is to extract pedigree information
      from VCF header fields)
    synonyms:
    - --pedigree
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: do not gzip the output
    synonyms:
    - -Z
    - --no-gzip
    args: !EmptyFlagArg {}
    optional: true
  command:
  - rtg
  - mendelian
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: print help on command-line flag usage
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Usage: rtg mendelian [OPTION]... -i FILE -t SDF\n\nCheck a multi-sample\
    \ VCF for Mendelian consistency.\n\nFile Input/Output\n  -i, --input=FILE    \
    \           VCF file containing multi-sample variant calls. Use '-' to read from\
    \ standard input\n  -o, --output=FILE              if set, output annotated calls\
    \ to this VCF file. Use '-' to write to standard output\n      --output-consistent=FILE\
    \   if set, output only consistent calls to this VCF file\n      --output-inconsistent=FILE\
    \ if set, output only non-Mendelian calls to this VCF file\n  -t, --template=SDF\
    \             SDF containing the reference genome\n\nSensitivity Tuning\n    \
    \  --all-records              use all records, regardless of filters (Default\
    \ is to only process records where FILTER is \".\" or \"PASS\")\n  -l, --lenient\
    \                  allow homozygous diploid calls in place of haploid calls and\
    \ assume missing values are equal to the reference\n      --min-concordance=FLOAT\
    \    percentage concordance required for consistent parentage (Default is 99.0)\n\
    \      --pedigree=FILE            genome relationships PED file (Default is to\
    \ extract pedigree information from VCF header fields)\n\nUtility\n  -h, --help\
    \                     print help on command-line flag usage\n  -Z, --no-gzip \
    \                 do not gzip the output\n\n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: OPTION
    optional: true
  named:
  - !Flag
    description: variant length histogram
    synonyms:
    - --allele-lengths
    args: !SimpleFlagArg
      name: output
    optional: true
  command:
  - rtg
  - vcfstats
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: print help on command-line flag usage
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Usage: rtg vcfstats [OPTION]... FILE+\n\nDisplay statistics from a set\
    \ of VCF files.\n\nFile Input/Output\n      --known          only calculate statistics\
    \ for known variants (Default is to ignore known/novel status)\n      --novel\
    \          only calculate statistics for novel variants (Default is to ignore\
    \ known/novel status)\n      --sample=STRING  only calculate statistics for the\
    \ specified sample (Default is to include all samples). May be specified 0 or\
    \ more times\n      FILE+            input VCF files from which to derive statistics\
    \ or '-' to read from standard input. Must be specified 1 or more times\n\nReporting\n\
    \      --allele-lengths output variant length histogram\n\nUtility\n  -h, --help\
    \           print help on command-line flag usage\n\n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: OPTION
    optional: true
  named:
  - !Flag
    description: '|FILE file containing VCF header lines to add, or a literal header
      line. May be specified 0 or more times'
    synonyms:
    - -a
    - --add-header
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: allow merging of specified header ID even when descriptions do not
      match. May be specified 0 or more times, or as a comma separated list
    synonyms:
    - -f
    - --force-merge
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: attempt merging of all non-matching header declarations
    synonyms:
    - -F
    - --force-merge-all
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: do not gzip the output
    synonyms:
    - -Z
    - --no-gzip
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: prevent VCF header from being written
    synonyms:
    - --no-header
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: do not merge multiple records if the ALTs are different
    synonyms:
    - --no-merge-alts
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: do not merge multiple records at the same position into one
    synonyms:
    - --no-merge-records
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: do not merge multiple records containing unmergeable FORMAT fields
      (Default is to remove those FORMAT fields so the variants can be combined)
    synonyms:
    - --preserve-formats
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: output statistics for the merged VCF file
    synonyms:
    - --stats
    args: !EmptyFlagArg {}
    optional: true
  command:
  - rtg
  - vcfmerge
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: print help on command-line flag usage
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Usage: rtg vcfmerge [OPTION]... -o FILE FILE+\n                    [OPTION]...\
    \ -o FILE -I FILE\n\nMerge a one or more input VCF files to a single output VCF.\
    \ Use cases include combining single sample calls into a multi-sample VCF, or\
    \ to combine calls on\nseparate chromosomes into a single VCF.\n\nFile Input/Output\n\
    \      --bed-regions=FILE       if set, only read VCF records that overlap the\
    \ ranges contained in the specified BED file\n  -I, --input-list-file=FILE   file\
    \ containing a list of VCF format files (1 per line) to be merged\n  -o, --output=FILE\
    \            output VCF file. Use '-' to write to standard output\n      --region=REGION\
    \          if set, only read VCF records within the specified range. The format\
    \ is one of <sequence_name>, <sequence_name>:<start>-<end>,\n                \
    \               <sequence_name>:<pos>+<length> or <sequence_name>:<pos>~<padding>\n\
    \      FILE+                    input VCF files to merge. May be specified 0 or\
    \ more times\n\nUtility\n  -a, --add-header=STRING|FILE file containing VCF header\
    \ lines to add, or a literal header line. May be specified 0 or more times\n \
    \ -f, --force-merge=STRING     allow merging of specified header ID even when\
    \ descriptions do not match. May be specified 0 or more times, or as a comma\n\
    \                               separated list\n  -F, --force-merge-all      \
    \  attempt merging of all non-matching header declarations\n  -h, --help     \
    \              print help on command-line flag usage\n  -Z, --no-gzip        \
    \        do not gzip the output\n      --no-header              prevent VCF header\
    \ from being written\n      --no-merge-alts          do not merge multiple records\
    \ if the ALTs are different\n      --no-merge-records       do not merge multiple\
    \ records at the same position into one\n      --preserve-formats       do not\
    \ merge multiple records containing unmergeable FORMAT fields (Default is to remove\
    \ those FORMAT fields so the variants can\n                               be combined)\n\
    \      --stats                  output statistics for the merged VCF file\n\n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: OPTION
    optional: true
  named:
  - !Flag
    description: apply sample-specific criteria to all samples contained in the input
      VCF
    synonyms:
    - --all-samples
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: if set, only read VCF records that overlap the ranges contained in
      the specified BED file
    synonyms:
    - --bed-regions
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: VCF file containing variants to be filtered. Use '-' to read from
      standard input
    synonyms:
    - -i
    - --input
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: output VCF file. Use '-' to write to standard output. This option
      is required, unless "--javascript" is being used
    synonyms:
    - -o
    - --output
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: if set, only read VCF records within the specified range. The format
      is one of <sequence_name>, <sequence_name>:<start>-<end>, <sequence_name>:<pos>+<length>
      or <sequence_name>:<pos>~<padding>
    synonyms:
    - --region
    args: !SimpleFlagArg
      name: REGION
    optional: true
  - !Flag
    description: apply sample-specific criteria to the named sample contained in the
      input VCF. May be specified 0 or more times
    synonyms:
    - --sample
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: window within which multiple variants are discarded
    synonyms:
    - -w
    - --density-window
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: discard all variants within the regions in this BED file
    synonyms:
    - --exclude-bed
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: discard all variants that overlap with the ones in this file
    synonyms:
    - --exclude-vcf
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: only keep variants within the regions in this BED file
    synonyms:
    - --include-bed
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: only keep variants that overlap with the ones in this file
    synonyms:
    - --include-vcf
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: javascript filtering functions for determining whether to keep record.
      May be either an expression or a file name. May be specified 0 or more times
    synonyms:
    - -j
    - --javascript
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: records for which this expression evaluates to true will be retained
    synonyms:
    - -e
    - --keep-expr
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: only keep variants with this FILTER tag. May be specified 0 or more
      times, or as a comma separated list
    synonyms:
    - -k
    - --keep-filter
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: only keep variants with this INFO tag. May be specified 0 or more
      times, or as a comma separated list
    synonyms:
    - -K
    - --keep-info
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: maximum number of alleles (REF included)
    synonyms:
    - --max-alleles
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: maximum allowed combined read depth
    synonyms:
    - -C
    - --max-combined-read-depth
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: maximum allowed quality
    synonyms:
    - -Q
    - --max-quality
    args: !SimpleFlagArg
      name: FLOAT
    optional: true
  - !Flag
    description: minimum number of alleles (REF included)
    synonyms:
    - --min-alleles
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: minimum allowed combined read depth
    synonyms:
    - -c
    - --min-combined-read-depth
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: minimum allowed quality
    synonyms:
    - -q
    - --min-quality
    args: !SimpleFlagArg
      name: FLOAT
    optional: true
  - !Flag
    description: remove variants with this FILTER tag. May be specified 0 or more
      times, or as a comma separated list
    synonyms:
    - -r
    - --remove-filter
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: remove variants with this INFO tag. May be specified 0 or more times,
      or as a comma separated list
    synonyms:
    - -R
    - --remove-info
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: remove records that overlap with previous records
    synonyms:
    - --remove-overlapping
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: maximum allowed ambiguity ratio
    synonyms:
    - -A
    - --max-ambiguity-ratio
    args: !SimpleFlagArg
      name: FLOAT
    optional: true
  - !Flag
    description: maximum allowed AVR score
    synonyms:
    - --max-avr-score
    args: !SimpleFlagArg
      name: FLOAT
    optional: true
  - !Flag
    description: maximum de novo score threshold
    synonyms:
    - --max-denovo-score
    args: !SimpleFlagArg
      name: FLOAT
    optional: true
  - !Flag
    description: maximum allowed genotype quality
    synonyms:
    - -G
    - --max-genotype-quality
    args: !SimpleFlagArg
      name: FLOAT
    optional: true
  - !Flag
    description: maximum allowed sample read depth
    synonyms:
    - -D
    - --max-read-depth
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: minimum allowed AVR score
    synonyms:
    - --min-avr-score
    args: !SimpleFlagArg
      name: FLOAT
    optional: true
  - !Flag
    description: minimum de novo score threshold
    synonyms:
    - --min-denovo-score
    args: !SimpleFlagArg
      name: FLOAT
    optional: true
  - !Flag
    description: minimum allowed genotype quality
    synonyms:
    - -g
    - --min-genotype-quality
    args: !SimpleFlagArg
      name: FLOAT
    optional: true
  - !Flag
    description: minimum allowed sample read depth
    synonyms:
    - -d
    - --min-read-depth
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: only keep where sample variant is MNP or INDEL
    synonyms:
    - --non-snps-only
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: remove where all samples are same as reference
    synonyms:
    - --remove-all-same-as-ref
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: remove where sample is homozygous
    synonyms:
    - --remove-hom
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: remove where sample is same as reference
    synonyms:
    - --remove-same-as-ref
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: only keep where sample variant is a simple SNP
    synonyms:
    - --snps-only
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: retain failed records, set the sample GT field to missing
    synonyms:
    - --clear-failed-samples
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: retain failed records, add the provided label to the FILTER field
    synonyms:
    - -f
    - --fail
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: retain failed records, add the provided label to the sample FT field
    synonyms:
    - -F
    - --fail-samples
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: '|FILE      file containing VCF header lines to add, or a literal
      header line. May be specified 0 or more times'
    synonyms:
    - -a
    - --add-header
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: do not gzip the output
    synonyms:
    - -Z
    - --no-gzip
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: prevent VCF header from being written
    synonyms:
    - --no-header
    args: !EmptyFlagArg {}
    optional: true
  command:
  - rtg
  - vcffilter
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: print help on command-line flag usage
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Usage: rtg vcffilter [OPTION]... -i FILE -o FILE\n                 \
    \    [OPTION]... -i FILE -j STRING\n\nFilters VCF records based on various criteria.\
    \ When filtering on multiple samples, if any of the specified samples fail the\
    \ criteria, the record will be\nfiltered. By default filtered records are removed,\
    \ but see the --fail, --clear-failed-samples, and --fail-samples options for alternatives.\n\
    \nFile Input/Output\n      --all-samples                 apply sample-specific\
    \ criteria to all samples contained in the input VCF\n      --bed-regions=FILE\
    \            if set, only read VCF records that overlap the ranges contained in\
    \ the specified BED file\n  -i, --input=FILE                  VCF file containing\
    \ variants to be filtered. Use '-' to read from standard input\n  -o, --output=FILE\
    \                 output VCF file. Use '-' to write to standard output. This option\
    \ is required, unless \"--javascript\" is being used\n      --region=REGION  \
    \             if set, only read VCF records within the specified range. The format\
    \ is one of <sequence_name>,\n                                    <sequence_name>:<start>-<end>,\
    \ <sequence_name>:<pos>+<length> or <sequence_name>:<pos>~<padding>\n      --sample=STRING\
    \               apply sample-specific criteria to the named sample contained in\
    \ the input VCF. May be specified 0 or more times\n\nFiltering (Record based)\n\
    \  -w, --density-window=INT          window within which multiple variants are\
    \ discarded\n      --exclude-bed=FILE            discard all variants within the\
    \ regions in this BED file\n      --exclude-vcf=FILE            discard all variants\
    \ that overlap with the ones in this file\n      --include-bed=FILE          \
    \  only keep variants within the regions in this BED file\n      --include-vcf=FILE\
    \            only keep variants that overlap with the ones in this file\n  -j,\
    \ --javascript=STRING           javascript filtering functions for determining\
    \ whether to keep record. May be either an expression or a file name. May be\n\
    \                                    specified 0 or more times\n  -e, --keep-expr=STRING\
    \            records for which this expression evaluates to true will be retained\n\
    \  -k, --keep-filter=STRING          only keep variants with this FILTER tag.\
    \ May be specified 0 or more times, or as a comma separated list\n  -K, --keep-info=STRING\
    \            only keep variants with this INFO tag. May be specified 0 or more\
    \ times, or as a comma separated list\n      --max-alleles=INT             maximum\
    \ number of alleles (REF included)\n  -C, --max-combined-read-depth=INT maximum\
    \ allowed combined read depth\n  -Q, --max-quality=FLOAT           maximum allowed\
    \ quality\n      --min-alleles=INT             minimum number of alleles (REF\
    \ included)\n  -c, --min-combined-read-depth=INT minimum allowed combined read\
    \ depth\n  -q, --min-quality=FLOAT           minimum allowed quality\n  -r, --remove-filter=STRING\
    \        remove variants with this FILTER tag. May be specified 0 or more times,\
    \ or as a comma separated list\n  -R, --remove-info=STRING          remove variants\
    \ with this INFO tag. May be specified 0 or more times, or as a comma separated\
    \ list\n      --remove-overlapping          remove records that overlap with previous\
    \ records\n\nFiltering (Sample based)\n  -A, --max-ambiguity-ratio=FLOAT   maximum\
    \ allowed ambiguity ratio\n      --max-avr-score=FLOAT         maximum allowed\
    \ AVR score\n      --max-denovo-score=FLOAT      maximum de novo score threshold\n\
    \  -G, --max-genotype-quality=FLOAT  maximum allowed genotype quality\n  -D, --max-read-depth=INT\
    \          maximum allowed sample read depth\n      --min-avr-score=FLOAT    \
    \     minimum allowed AVR score\n      --min-denovo-score=FLOAT      minimum de\
    \ novo score threshold\n  -g, --min-genotype-quality=FLOAT  minimum allowed genotype\
    \ quality\n  -d, --min-read-depth=INT          minimum allowed sample read depth\n\
    \      --non-snps-only               only keep where sample variant is MNP or\
    \ INDEL\n      --remove-all-same-as-ref      remove where all samples are same\
    \ as reference\n      --remove-hom                  remove where sample is homozygous\n\
    \      --remove-same-as-ref          remove where sample is same as reference\n\
    \      --snps-only                   only keep where sample variant is a simple\
    \ SNP\n\nReporting\n      --clear-failed-samples        retain failed records,\
    \ set the sample GT field to missing\n  -f, --fail=STRING                 retain\
    \ failed records, add the provided label to the FILTER field\n  -F, --fail-samples=STRING\
    \         retain failed records, add the provided label to the sample FT field\n\
    \nUtility\n  -a, --add-header=STRING|FILE      file containing VCF header lines\
    \ to add, or a literal header line. May be specified 0 or more times\n  -h, --help\
    \                        print help on command-line flag usage\n  -Z, --no-gzip\
    \                     do not gzip the output\n      --no-header              \
    \     prevent VCF header from being written\n\n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: OPTION
    optional: true
  named:
  - !Flag
    description: if set, only read VCF records that overlap the ranges contained in
      the specified BED file
    synonyms:
    - --bed-regions
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: VCF file containing variants to annotate. Use '-' to read from standard
      input
    synonyms:
    - -i
    - --input
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: output VCF file name. Use '-' to write to standard output
    synonyms:
    - -o
    - --output
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: if set, only read VCF records within the specified range. The format
      is one of <sequence_name>, <sequence_name>:<start>-<end>, <sequence_name>:<pos>+<length>
      or <sequence_name>:<pos>~<padding>
    synonyms:
    - --region
    args: !SimpleFlagArg
      name: REGION
    optional: true
  - !Flag
    description: add computed annotation to VCF records. Allowed values are [AC, AN,
      EP, GQD, IC, LAL, MEANQAD, NAA, PD, QA, QD, RA, SCONT, VAF, VAF1, ZY]. May be
      specified 0 or more times, or as a comma separated list
    synonyms:
    - -A
    - --annotation
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: add variant IDs from BED file. May be specified 0 or more times
    synonyms:
    - --bed-ids
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: add INFO annotations from BED file. May be specified 0 or more times
    synonyms:
    - --bed-info
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: add or update the AN and AC INFO fields
    synonyms:
    - --fill-an-ac
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: if the BED INFO field is not already declared, use this description
      in the header (Default is Annotation)
    synonyms:
    - --info-description
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: the INFO ID for BED INFO annotations (Default is ANN)
    synonyms:
    - --info-id
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: relabel samples according to "old-name new-name" pairs in specified
      file
    synonyms:
    - --relabel
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: add variant IDs from VCF file. May be specified 0 or more times
    synonyms:
    - --vcf-ids
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: '|FILE  file containing VCF header lines to add, or a literal header
      line. May be specified 0 or more times'
    synonyms:
    - -a
    - --add-header
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: do not gzip the output
    synonyms:
    - -Z
    - --no-gzip
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: prevent VCF header from being written
    synonyms:
    - --no-header
    args: !EmptyFlagArg {}
    optional: true
  command:
  - rtg
  - vcfannotate
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: print help on command-line flag usage
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Usage: rtg vcfannotate [OPTION]... -i FILE -o FILE\n\nAdds annotations\
    \ to a VCF file, either to the VCF ID field, or as a VCF INFO sub-field.\n\nFile\
    \ Input/Output\n      --bed-regions=FILE        if set, only read VCF records\
    \ that overlap the ranges contained in the specified BED file\n  -i, --input=FILE\
    \              VCF file containing variants to annotate. Use '-' to read from\
    \ standard input\n  -o, --output=FILE             output VCF file name. Use '-'\
    \ to write to standard output\n      --region=REGION           if set, only read\
    \ VCF records within the specified range. The format is one of <sequence_name>,\
    \ <sequence_name>:<start>-<end>,\n                                <sequence_name>:<pos>+<length>\
    \ or <sequence_name>:<pos>~<padding>\n\nReporting\n  -A, --annotation=STRING \
    \      add computed annotation to VCF records. Allowed values are [AC, AN, EP,\
    \ GQD, IC, LAL, MEANQAD, NAA, PD, QA, QD, RA, SCONT, VAF,\n                  \
    \              VAF1, ZY]. May be specified 0 or more times, or as a comma separated\
    \ list\n      --bed-ids=FILE            add variant IDs from BED file. May be\
    \ specified 0 or more times\n      --bed-info=FILE           add INFO annotations\
    \ from BED file. May be specified 0 or more times\n      --fill-an-ac        \
    \      add or update the AN and AC INFO fields\n      --info-description=STRING\
    \ if the BED INFO field is not already declared, use this description in the header\
    \ (Default is Annotation)\n      --info-id=STRING          the INFO ID for BED\
    \ INFO annotations (Default is ANN)\n      --relabel=FILE            relabel samples\
    \ according to \"old-name new-name\" pairs in specified file\n      --vcf-ids=FILE\
    \            add variant IDs from VCF file. May be specified 0 or more times\n\
    \nUtility\n  -a, --add-header=STRING|FILE  file containing VCF header lines to\
    \ add, or a literal header line. May be specified 0 or more times\n  -h, --help\
    \                    print help on command-line flag usage\n  -Z, --no-gzip  \
    \               do not gzip the output\n      --no-header               prevent\
    \ VCF header from being written\n\n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: OPTION
    optional: true
  named:
  - !Flag
    description: if set, only read VCF records that overlap the ranges contained in
      the specified BED file
    synonyms:
    - --bed-regions
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: VCF file containing variants to manipulate. Use '-' to read from
      standard input
    synonyms:
    - -i
    - --input
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: output VCF file. Use '-' to write to standard output
    synonyms:
    - -o
    - --output
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: if set, only read VCF records within the specified range. The format
      is one of <sequence_name>, <sequence_name>:<start>-<end>, <sequence_name>:<pos>+<length>
      or <sequence_name>:<pos>~<padding>
    synonyms:
    - --region
    args: !SimpleFlagArg
      name: REGION
    optional: true
  - !Flag
    description: keep the specified FILTER tag. May be specified 0 or more times,
      or as a comma separated list
    synonyms:
    - --keep-filter
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: keep the specified FORMAT field. May be specified 0 or more times,
      or as a comma separated list
    synonyms:
    - --keep-format
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: keep the specified INFO tag. May be specified 0 or more times, or
      as a comma separated list
    synonyms:
    - --keep-info
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: '|FILE   file containing sample IDs to keep, or a literal sample
      name. May be specified 0 or more times, or as a comma separated list'
    synonyms:
    - --keep-sample
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: remove the specified FILTER tag. May be specified 0 or more times,
      or as a comma separated list
    synonyms:
    - --remove-filter
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: remove all FILTER tags
    synonyms:
    - --remove-filters
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: remove the specified FORMAT field. May be specified 0 or more times,
      or as a comma separated list
    synonyms:
    - --remove-format
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: remove the contents of the ID field
    synonyms:
    - --remove-ids
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: remove the specified INFO tag. May be specified 0 or more times,
      or as a comma separated list
    synonyms:
    - --remove-info
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: remove all INFO tags
    synonyms:
    - --remove-infos
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: remove the QUAL field
    synonyms:
    - --remove-qual
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '|FILE file containing sample IDs to remove, or a literal sample
      name. May be specified 0 or more times, or as a comma separated list'
    synonyms:
    - --remove-sample
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: remove all samples
    synonyms:
    - --remove-samples
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: do not gzip the output
    synonyms:
    - -Z
    - --no-gzip
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: prevent VCF header from being written
    synonyms:
    - --no-header
    args: !EmptyFlagArg {}
    optional: true
  command:
  - rtg
  - vcfsubset
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: print help on command-line flag usage
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Usage: rtg vcfsubset [OPTION]... -i FILE -o FILE\n\nRemoves columnar\
    \ data from VCF records.\n\nFile Input/Output\n      --bed-regions=FILE      \
    \    if set, only read VCF records that overlap the ranges contained in the specified\
    \ BED file\n  -i, --input=FILE                VCF file containing variants to\
    \ manipulate. Use '-' to read from standard input\n  -o, --output=FILE       \
    \        output VCF file. Use '-' to write to standard output\n      --region=REGION\
    \             if set, only read VCF records within the specified range. The format\
    \ is one of <sequence_name>,\n                                  <sequence_name>:<start>-<end>,\
    \ <sequence_name>:<pos>+<length> or <sequence_name>:<pos>~<padding>\n\nFiltering\n\
    \      --keep-filter=STRING        keep the specified FILTER tag. May be specified\
    \ 0 or more times, or as a comma separated list\n      --keep-format=STRING  \
    \      keep the specified FORMAT field. May be specified 0 or more times, or as\
    \ a comma separated list\n      --keep-info=STRING          keep the specified\
    \ INFO tag. May be specified 0 or more times, or as a comma separated list\n \
    \     --keep-sample=STRING|FILE   file containing sample IDs to keep, or a literal\
    \ sample name. May be specified 0 or more times, or as a comma separated list\n\
    \      --remove-filter=STRING      remove the specified FILTER tag. May be specified\
    \ 0 or more times, or as a comma separated list\n      --remove-filters      \
    \      remove all FILTER tags\n      --remove-format=STRING      remove the specified\
    \ FORMAT field. May be specified 0 or more times, or as a comma separated list\n\
    \      --remove-ids                remove the contents of the ID field\n     \
    \ --remove-info=STRING        remove the specified INFO tag. May be specified\
    \ 0 or more times, or as a comma separated list\n      --remove-infos        \
    \      remove all INFO tags\n      --remove-qual               remove the QUAL\
    \ field\n      --remove-sample=STRING|FILE file containing sample IDs to remove,\
    \ or a literal sample name. May be specified 0 or more times, or as a comma separated\n\
    \                                  list\n      --remove-samples            remove\
    \ all samples\n\nUtility\n  -h, --help                      print help on command-line\
    \ flag usage\n  -Z, --no-gzip                   do not gzip the output\n     \
    \ --no-header                 prevent VCF header from being written\n\n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: OPTION
    optional: true
  named:
  - !Flag
    description: if set, only read VCF records that overlap the ranges contained in
      the specified BED file
    synonyms:
    - --bed-regions
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: the input VCF, or '-' to read from standard input
    synonyms:
    - -i
    - --input
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: directory for output
    synonyms:
    - -o
    - --output
    args: !SimpleFlagArg
      name: DIR
    optional: true
  - !Flag
    description: if set, only read VCF records within the specified range. The format
      is one of <sequence_name>, <sequence_name>:<start>-<end>, <sequence_name>:<pos>+<length>
      or <sequence_name>:<pos>~<padding>
    synonyms:
    - --region
    args: !SimpleFlagArg
      name: REGION
    optional: true
  - !Flag
    description: keep records where the sample is reference
    synonyms:
    - --keep-ref
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '|FILE   file containing sample IDs to select, or a literal sample
      name. May be specified 0 or more times, or as a comma separated list'
    synonyms:
    - --keep-sample
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: '|FILE file containing sample IDs to ignore, or a literal sample
      name. May be specified 0 or more times, or as a comma separated list'
    synonyms:
    - --remove-sample
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: do not gzip the output
    synonyms:
    - -Z
    - --no-gzip
    args: !EmptyFlagArg {}
    optional: true
  command:
  - rtg
  - vcfsplit
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: print help on command-line flag usage
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Usage: rtg vcfsplit [OPTION]... -i FILE -o DIR\n\nSplits samples contained\
    \ within a VCF into separate files, one per sample.\n\nFile Input/Output\n   \
    \   --bed-regions=FILE          if set, only read VCF records that overlap the\
    \ ranges contained in the specified BED file\n  -i, --input=FILE             \
    \   the input VCF, or '-' to read from standard input\n  -o, --output=DIR    \
    \            directory for output\n      --region=REGION             if set, only\
    \ read VCF records within the specified range. The format is one of <sequence_name>,\n\
    \                                  <sequence_name>:<start>-<end>, <sequence_name>:<pos>+<length>\
    \ or <sequence_name>:<pos>~<padding>\n\nFiltering\n      --keep-ref          \
    \        keep records where the sample is reference\n      --keep-sample=STRING|FILE\
    \   file containing sample IDs to select, or a literal sample name. May be specified\
    \ 0 or more times, or as a comma separated\n                                 \
    \ list\n      --remove-sample=STRING|FILE file containing sample IDs to ignore,\
    \ or a literal sample name. May be specified 0 or more times, or as a comma separated\n\
    \                                  list\n\nUtility\n  -h, --help             \
    \         print help on command-line flag usage\n  -Z, --no-gzip             \
    \      do not gzip the output\n\n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: OPTION
    optional: true
  named:
  - !Flag
    description: VCF file containing variants to decompose. Use '-' to read from standard
      input
    synonyms:
    - -i
    - --input
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: output VCF file name. Use '-' to write to standard output
    synonyms:
    - -o
    - --output
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: SDF of the reference genome the variants are called against
    synonyms:
    - -t
    - --template
    args: !SimpleFlagArg
      name: SDF
    optional: true
  - !Flag
    description: set, peel as many SNPs off an indel as possible
    synonyms:
    - --break-indels
    args: !SimpleFlagArg
      name: if
    optional: true
  - !Flag
    description: if set, break MNPs into individual SNPs
    synonyms:
    - --break-mnps
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: do not gzip the output
    synonyms:
    - -Z
    - --no-gzip
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: prevent VCF header from being written
    synonyms:
    - --no-header
    args: !EmptyFlagArg {}
    optional: true
  command:
  - rtg
  - vcfdecompose
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: print help on command-line flag usage
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Usage: rtg vcfdecompose [OPTION]... -i FILE -o FILE\n\nDecomposes complex\
    \ variants within a VCF file into smaller components.\n\nFile Input/Output\n \
    \ -i, --input=FILE   VCF file containing variants to decompose. Use '-' to read\
    \ from standard input\n  -o, --output=FILE  output VCF file name. Use '-' to write\
    \ to standard output\n  -t, --template=SDF SDF of the reference genome the variants\
    \ are called against\n\nSensitivity Tuning\n      --break-indels if set, peel\
    \ as many SNPs off an indel as possible\n      --break-mnps   if set, break MNPs\
    \ into individual SNPs\n\nUtility\n  -h, --help         print help on command-line\
    \ flag usage\n  -Z, --no-gzip      do not gzip the output\n      --no-header \
    \   prevent VCF header from being written\n\n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: OPTION
    optional: true
  named:
  - !Flag
    description: VCF file containing baseline variants
    synonyms:
    - -b
    - --baseline
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: if set, only read VCF records that overlap the ranges contained in
      the specified BED file
    synonyms:
    - --bed-regions
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: VCF file containing called variants
    synonyms:
    - -c
    - --calls
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: if set, evaluate within regions contained in the supplied BED file,
      allowing transborder matches. To be used for truth-set high-confidence regions
      or other regions of interest where region boundary effects should be minimized
    synonyms:
    - -e
    - --evaluation-regions
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: directory for output
    synonyms:
    - -o
    - --output
    args: !SimpleFlagArg
      name: DIR
    optional: true
  - !Flag
    description: if set, only read VCF records within the specified range. The format
      is one of <sequence_name>, <sequence_name>:<start>-<end>, <sequence_name>:<pos>+<length>
      or <sequence_name>:<pos>~<padding>
    synonyms:
    - --region
    args: !SimpleFlagArg
      name: REGION
    optional: true
  - !Flag
    description: SDF of the reference genome the variants are called against
    synonyms:
    - -t
    - --template
    args: !SimpleFlagArg
      name: SDF
    optional: true
  - !Flag
    description: use all records regardless of FILTER status (Default is to only process
      records where FILTER is "." or "PASS")
    synonyms:
    - --all-records
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: decompose complex variants into smaller constituents to allow partial
      credit
    synonyms:
    - --decompose
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: allow alleles to overlap where bases of either allele are same-as-ref
      (Default is to only allow VCF anchor base overlap)
    synonyms:
    - --ref-overlap
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: the name of the sample to select. Use <baseline_sample>,<calls_sample>
      to select different sample names for baseline and calls. (Required when using
      multi-sample VCF files)
    synonyms:
    - --sample
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: treat heterozygous genotypes as homozygous ALT in both baseline and
      calls, to allow matches that ignore zygosity differences
    synonyms:
    - --squash-ploidy
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: output summary statistics where precision >= supplied value (Default
      is to summarize at maximum F-measure)
    synonyms:
    - --at-precision
    args: !SimpleFlagArg
      name: FLOAT
    optional: true
  - !Flag
    description: output summary statistics where sensitivity >= supplied value (Default
      is to summarize at maximum F-measure)
    synonyms:
    - --at-sensitivity
    args: !SimpleFlagArg
      name: FLOAT
    optional: true
  - !Flag
    description: do not produce ROCs
    synonyms:
    - --no-roc
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: output reporting mode. Allowed values are [split, annotate, combine,
      ga4gh, roc-only] (Default is split)
    synonyms:
    - -m
    - --output-mode
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: the order in which to sort the ROC scores so that "good" scores come
      before "bad" scores. Allowed values are [ascending, descending] (Default is
      descending)
    synonyms:
    - -O
    - --sort-order
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: the name of the VCF FORMAT field to use as the ROC score. Also valid
      are "QUAL", "INFO.<name>" or "FORMAT.<name>" to select the named VCF FORMAT
      or INFO field (Default is GQ)
    synonyms:
    - -f
    - --vcf-score-field
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: do not gzip the output
    synonyms:
    - -Z
    - --no-gzip
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: number of threads (Default is the number of available cores)
    synonyms:
    - -T
    - --threads
    args: !SimpleFlagArg
      name: INT
    optional: true
  command:
  - rtg
  - vcfeval
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: print help on command-line flag usage
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Usage: rtg vcfeval [OPTION]... -b FILE -c FILE -o DIR -t SDF\n\nEvaluates\
    \ called variants for genotype agreement with a baseline variant set irrespective\
    \ of representational differences. Outputs a weighted ROC file which\ncan be viewed\
    \ with rtg rocplot and VCF files containing false positives (called variants not\
    \ matched in the baseline), false negatives (baseline variants not\nmatched in\
    \ the call set), and true positives (variants that match between the baseline\
    \ and calls).\n\nFile Input/Output\n  -b, --baseline=FILE           VCF file containing\
    \ baseline variants\n      --bed-regions=FILE        if set, only read VCF records\
    \ that overlap the ranges contained in the specified BED file\n  -c, --calls=FILE\
    \              VCF file containing called variants\n  -e, --evaluation-regions=FILE\
    \ if set, evaluate within regions contained in the supplied BED file, allowing\
    \ transborder matches. To be used for truth-set\n                            \
    \    high-confidence regions or other regions of interest where region boundary\
    \ effects should be minimized\n  -o, --output=DIR              directory for output\n\
    \      --region=REGION           if set, only read VCF records within the specified\
    \ range. The format is one of <sequence_name>, <sequence_name>:<start>-<end>,\n\
    \                                <sequence_name>:<pos>+<length> or <sequence_name>:<pos>~<padding>\n\
    \  -t, --template=SDF            SDF of the reference genome the variants are\
    \ called against\n\nFiltering\n      --all-records             use all records\
    \ regardless of FILTER status (Default is to only process records where FILTER\
    \ is \".\" or \"PASS\")\n      --decompose               decompose complex variants\
    \ into smaller constituents to allow partial credit\n      --ref-overlap     \
    \        allow alleles to overlap where bases of either allele are same-as-ref\
    \ (Default is to only allow VCF anchor base overlap)\n      --sample=STRING  \
    \         the name of the sample to select. Use <baseline_sample>,<calls_sample>\
    \ to select different sample names for baseline and calls.\n                 \
    \               (Required when using multi-sample VCF files)\n      --squash-ploidy\
    \           treat heterozygous genotypes as homozygous ALT in both baseline and\
    \ calls, to allow matches that ignore zygosity differences\n\nReporting\n    \
    \  --at-precision=FLOAT      output summary statistics where precision >= supplied\
    \ value (Default is to summarize at maximum F-measure)\n      --at-sensitivity=FLOAT\
    \    output summary statistics where sensitivity >= supplied value (Default is\
    \ to summarize at maximum F-measure)\n      --no-roc                  do not produce\
    \ ROCs\n  -m, --output-mode=STRING      output reporting mode. Allowed values\
    \ are [split, annotate, combine, ga4gh, roc-only] (Default is split)\n  -O, --sort-order=STRING\
    \       the order in which to sort the ROC scores so that \"good\" scores come\
    \ before \"bad\" scores. Allowed values are [ascending,\n                    \
    \            descending] (Default is descending)\n  -f, --vcf-score-field=STRING\
    \  the name of the VCF FORMAT field to use as the ROC score. Also valid are \"\
    QUAL\", \"INFO.<name>\" or \"FORMAT.<name>\" to select the\n                 \
    \               named VCF FORMAT or INFO field (Default is GQ)\n\nUtility\n  -h,\
    \ --help                    print help on command-line flag usage\n  -Z, --no-gzip\
    \                 do not gzip the output\n  -T, --threads=INT             number\
    \ of threads (Default is the number of available cores)\n\n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: OPTION
    optional: true
  named:
  - !Flag
    description: VCF file containing variants to filter. Use '-' to read from standard
      input
    synonyms:
    - -i
    - --input
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: output VCF file name. Use '-' to write to standard output
    synonyms:
    - -o
    - --output
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: minimum length for converting precise insertions and deletions to
      breakend (Default is 20)
    synonyms:
    - --min-indel-length
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: do not gzip the output
    synonyms:
    - -Z
    - --no-gzip
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: prevent VCF header from being written
    synonyms:
    - --no-header
    args: !EmptyFlagArg {}
    optional: true
  command:
  - rtg
  - svdecompose
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: print help on command-line flag usage
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Usage: rtg svdecompose [OPTION]... -i FILE -o FILE\n\nSplit composite\
    \ structural variants into a breakend representation.\n\nFile Input/Output\n \
    \ -i, --input=FILE           VCF file containing variants to filter. Use '-' to\
    \ read from standard input\n  -o, --output=FILE          output VCF file name.\
    \ Use '-' to write to standard output\n\nUtility\n  -h, --help               \
    \  print help on command-line flag usage\n      --min-indel-length=INT minimum\
    \ length for converting precise insertions and deletions to breakend (Default\
    \ is 20)\n  -Z, --no-gzip              do not gzip the output\n      --no-header\
    \            prevent VCF header from being written\n\n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: OPTION
    optional: true
  named:
  - !Flag
    description: VCF file containing baseline variants
    synonyms:
    - -b
    - --baseline
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: if set, only read VCF records that overlap the ranges contained in
      the specified BED file
    synonyms:
    - --bed-regions
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: VCF file containing called variants
    synonyms:
    - -c
    - --calls
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: directory for output
    synonyms:
    - -o
    - --output
    args: !SimpleFlagArg
      name: DIR
    optional: true
  - !Flag
    description: if set, only read VCF records within the specified range. The format
      is one of <sequence_name>, <sequence_name>:<start>-<end>, <sequence_name>:<pos>+<length>
      or <sequence_name>:<pos>~<padding>
    synonyms:
    - --region
    args: !SimpleFlagArg
      name: REGION
    optional: true
  - !Flag
    description: use all records regardless of FILTER status (Default is to only process
      records where FILTER is "." or "PASS")
    synonyms:
    - --all-records
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: if set, allow matches between flipped breakends
    synonyms:
    - --bidirectional
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: positional tolerance for breakend matching (Default is 100)
    synonyms:
    - --tolerance
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: do not produce ROCs
    synonyms:
    - --no-roc
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: output reporting mode. Allowed values are [split, annotate] (Default
      is split)
    synonyms:
    - -m
    - --output-mode
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: the order in which to sort the ROC scores so that "good" scores come
      before "bad" scores. Allowed values are [ascending, descending] (Default is
      descending)
    synonyms:
    - -O
    - --sort-order
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: the name of the VCF FORMAT field to use as the ROC score. Also valid
      are "QUAL", "INFO.<name>" or "FORMAT.<name>" to select the named VCF FORMAT
      or INFO field (Default is INFO.DP)
    synonyms:
    - -f
    - --vcf-score-field
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: do not gzip the output
    synonyms:
    - -Z
    - --no-gzip
    args: !EmptyFlagArg {}
    optional: true
  command:
  - rtg
  - bndeval
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: print help on command-line flag usage
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Usage: rtg bndeval [OPTION]... -b FILE -c FILE -o DIR\n\nEvaluate called\
    \ breakends for agreement with a baseline breakend set. Outputs a weighted ROC\
    \ file which can be viewed with rtg rocplot and VCF files containing\nfalse positives\
    \ (called breakends not matched in the baseline), false negatives (baseline breakends\
    \ not matched in the call set), and true positives (breakends\nthat match between\
    \ the baseline and calls).\n\nFile Input/Output\n  -b, --baseline=FILE       \
    \   VCF file containing baseline variants\n      --bed-regions=FILE       if set,\
    \ only read VCF records that overlap the ranges contained in the specified BED\
    \ file\n  -c, --calls=FILE             VCF file containing called variants\n \
    \ -o, --output=DIR             directory for output\n      --region=REGION   \
    \       if set, only read VCF records within the specified range. The format is\
    \ one of <sequence_name>, <sequence_name>:<start>-<end>,\n                   \
    \            <sequence_name>:<pos>+<length> or <sequence_name>:<pos>~<padding>\n\
    \nFiltering\n      --all-records            use all records regardless of FILTER\
    \ status (Default is to only process records where FILTER is \".\" or \"PASS\"\
    )\n      --bidirectional          if set, allow matches between flipped breakends\n\
    \      --tolerance=INT          positional tolerance for breakend matching (Default\
    \ is 100)\n\nReporting\n      --no-roc                 do not produce ROCs\n \
    \ -m, --output-mode=STRING     output reporting mode. Allowed values are [split,\
    \ annotate] (Default is split)\n  -O, --sort-order=STRING      the order in which\
    \ to sort the ROC scores so that \"good\" scores come before \"bad\" scores. Allowed\
    \ values are [ascending,\n                               descending] (Default\
    \ is descending)\n  -f, --vcf-score-field=STRING the name of the VCF FORMAT field\
    \ to use as the ROC score. Also valid are \"QUAL\", \"INFO.<name>\" or \"FORMAT.<name>\"\
    \ to select the\n                               named VCF FORMAT or INFO field\
    \ (Default is INFO.DP)\n\nUtility\n  -h, --help                   print help on\
    \ command-line flag usage\n  -Z, --no-gzip                do not gzip the output\n\
    \n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: the pedigree file to process, may be PED or VCF, use '-' to read
      from stdin
    position: 0
    name: FILE
    optional: false
  named:
  - !Flag
    description: keep only individuals with the specified family ID. May be specified
      0 or more times, or as a comma separated list
    synonyms:
    - --keep-family
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: keep only individuals with the specified ID. May be specified 0 or
      more times, or as a comma separated list
    synonyms:
    - --keep-ids
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: keep only primary individuals (those with a PED individual line /
      VCF sample column)
    synonyms:
    - --keep-primary
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: remove all parent-child relationship information
    synonyms:
    - --remove-parentage
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: output pedigree in the form of a VCF header
    synonyms:
    - --vcf
    args: !EmptyFlagArg {}
    optional: true
  command:
  - rtg
  - pedfilter
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: print help on command-line flag usage
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Usage: rtg pedfilter [OPTION]... FILE\n\nFilter and convert a pedigree\
    \ file.\n\nFile Input/Output\n      FILE                 the pedigree file to\
    \ process, may be PED or VCF, use '-' to read from stdin\n\nFiltering\n      --keep-family=STRING\
    \ keep only individuals with the specified family ID. May be specified 0 or more\
    \ times, or as a comma separated list\n      --keep-ids=STRING    keep only individuals\
    \ with the specified ID. May be specified 0 or more times, or as a comma separated\
    \ list\n      --keep-primary       keep only primary individuals (those with a\
    \ PED individual line / VCF sample column)\n      --remove-parentage   remove\
    \ all parent-child relationship information\n\nReporting\n      --vcf        \
    \        output pedigree in the form of a VCF header\n\nUtility\n  -h, --help\
    \               print help on command-line flag usage\n\n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: the pedigree file to process, may be PED or VCF, use '-' to read
      from stdin
    position: 0
    name: FILE
    optional: false
  named:
  - !Flag
    description: output id lists using this separator (Default is \n)
    synonyms:
    - -d
    - --delimiter
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: output pedigree in Graphviz format, using the supplied text as a
      title
    synonyms:
    - --dot
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: output information about family structures
    synonyms:
    - --families
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: output ids of all females
    synonyms:
    - --female-ids
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: output ids of all founders
    synonyms:
    - --founder-ids
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: output ids of all males
    synonyms:
    - --male-ids
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: output ids of maternal individuals
    synonyms:
    - --maternal-ids
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: output ids of paternal individuals
    synonyms:
    - --paternal-ids
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: output ids of all primary individuals
    synonyms:
    - --primary-ids
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: when outputting Graphviz format, use a layout that looks less like
      a traditional pedigree diagram but works better with large complex pedigrees
    synonyms:
    - --simple-dot
    args: !EmptyFlagArg {}
    optional: true
  command:
  - rtg
  - pedstats
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: print help on command-line flag usage
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Usage: rtg pedstats [OPTION]... FILE\n\nOutput information from pedigree\
    \ files of various formats. For quick pedigree visualization using Graphviz, try:\n\
    \n  dot -Tpng <(rtg pedstats --dot \"A Title\" PEDFILE) | display -\n\nor for\
    \ a larger pedigree:\n\n  dot -Tpdf -o mypedigree.pdf <(rtg pedstats --dot \"\
    A Title\" PEDFILE)\n\nFile Input/Output\n      FILE               the pedigree\
    \ file to process, may be PED or VCF, use '-' to read from stdin\n\nReporting\n\
    \  -d, --delimiter=STRING output id lists using this separator (Default is \\\
    n)\n      --dot=STRING       output pedigree in Graphviz format, using the supplied\
    \ text as a title\n      --families         output information about family structures\n\
    \      --female-ids       output ids of all females\n      --founder-ids     \
    \ output ids of all founders\n      --male-ids         output ids of all males\n\
    \      --maternal-ids     output ids of maternal individuals\n      --paternal-ids\
    \     output ids of paternal individuals\n      --primary-ids      output ids\
    \ of all primary individuals\n      --simple-dot       when outputting Graphviz\
    \ format, use a layout that looks less like a traditional pedigree diagram but\
    \ works better with large complex\n                         pedigrees\n\nUtility\n\
    \  -h, --help             print help on command-line flag usage\n\n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: OPTION
    optional: true
  named:
  - !Flag
    description: if set, hide the side pane from the GUI on startup
    synonyms:
    - --hide-sidepane
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: if set, interpolate curves at regular intervals
    synonyms:
    - --interpolate
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: sets the plot line width (Default is 2)
    synonyms:
    - --line-width
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: set, plot precision vs sensitivity rather than ROC
    synonyms:
    - -P
    - --precision-sensitivity
    args: !SimpleFlagArg
      name: if
    optional: true
  - !Flag
    description: if set, show scores on the plot
    synonyms:
    - --scores
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: title for the plot
    synonyms:
    - -t
    - --title
    args: !SimpleFlagArg
      name: STRING
    optional: true
  command:
  - rtg
  - rocplot
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: print help on command-line flag usage
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Usage: rtg rocplot [OPTION]... FILE+\n                   [OPTION]...\
    \ --curve STRING\n\nPlot ROC curves from vcfeval ROC data files, either to an\
    \ image, or an interactive GUI.\n\nFile Input/Output\n      --curve=STRING   \
    \       ROC data file with title optionally specified (path[=title]). May be specified\
    \ 0 or more times\n      --png=FILE              if set, output a PNG image to\
    \ the given file\n      --svg=FILE              if set, output a SVG image to\
    \ the given file\n      --zoom=STRING           show a zoomed view with the given\
    \ coordinates, supplied in the form <xmax>,<ymax> or <xmin>,<ymin>,<xmax>,<ymax>\n\
    \      FILE+                   ROC data file. May be specified 0 or more times\n\
    \nReporting\n      --hide-sidepane         if set, hide the side pane from the\
    \ GUI on startup\n      --interpolate           if set, interpolate curves at\
    \ regular intervals\n      --line-width=INT        sets the plot line width (Default\
    \ is 2)\n  -P, --precision-sensitivity if set, plot precision vs sensitivity rather\
    \ than ROC\n      --scores                if set, show scores on the plot\n  -t,\
    \ --title=STRING          title for the plot\n\nUtility\n  -h, --help        \
    \          print help on command-line flag usage\n\n"
  generated_using: *id002
help_flag:
usage_flag:
version_flag:
help_text: "Usage: rtg COMMAND [OPTION]...\n       rtg RTG_MEM=16G COMMAND [OPTION]...\
  \  (e.g. to set maximum memory use to 16 GB)\n\nType 'rtg help COMMAND' for help\
  \ on a specific command.\nThe following commands are available:\n\nData formatting:\n\
  \tformat       \tconvert sequence data files to SDF\n\tsdf2fasta    \tconvert SDF\
  \ to FASTA\n\tsdf2fastq    \tconvert SDF to FASTQ\n\tsdf2sam      \tconvert SDF\
  \ to SAM/BAM\n\tfastqtrim    \ttrim reads in FASTQ files\n\nSimulation:\n\tgenomesim\
  \    \tgenerate simulated genome sequence\n\tcgsim        \tgenerate simulated reads\
  \ from a sequence\n\treadsim      \tgenerate simulated reads from a sequence\n\t\
  popsim       \tgenerate a VCF containing simulated population variants\n\tsamplesim\
  \    \tgenerate a VCF containing a genotype simulated from a population\n\tchildsim\
  \     \tgenerate a VCF containing a genotype simulated as a child of two parents\n\
  \tdenovosim    \tgenerate a VCF containing a derived genotype containing de novo\
  \ variants\n\tpedsamplesim \tgenerate simulated genotypes for all members of a pedigree\n\
  \tsamplereplay \tgenerate the genome corresponding to a sample genotype\n\nUtility:\n\
  \tbgzip        \tcompress a file using block gzip\n\tindex        \tcreate a tabix\
  \ index\n\textract      \textract data from a tabix indexed file\n\tsdfstats   \
  \  \tprint statistics about an SDF\n\tsdfsubset    \textract a subset of an SDF\
  \ into a new SDF\n\tsdfsubseq    \textract a subsequence from an SDF as text\n\t\
  mendelian    \tcheck a multisample VCF for Mendelian consistency\n\tvcfstats   \
  \  \tprint statistics about variants contained within a VCF file\n\tvcfmerge   \
  \  \tmerge single-sample VCF files into a single multi-sample VCF\n\tvcffilter \
  \   \tfilter records within a VCF file\n\tvcfannotate  \tannotate variants within\
  \ a VCF file\n\tvcfsubset    \tcreate a VCF file containing a subset of the original\
  \ columns\n\tvcfsplit     \tsplit a multi-sample VCF into one file per sample\n\t\
  vcfdecompose \tdecompose complex variants within a VCF file\n\tvcfeval      \tevaluate\
  \ called variants for agreement with a baseline variant set\n\tsvdecompose  \tsplit\
  \ composite structural variants into a breakend representation\n\tbndeval      \t\
  evaluate called breakends for agreement with a baseline breakend set\n\tpedfilter\
  \    \tfilter and convert a pedigree file\n\tpedstats     \tprint information about\
  \ a pedigree file\n\trocplot      \tplot ROC curves from vcfeval ROC data files\n\
  \tversion      \tprint version and license information\n\tlicense      \tprint license\
  \ information for all commands\n\thelp         \tprint this screen or help for specified\
  \ command\n"
generated_using: *id002
