!Command
command:
- make-consensus_poly
positional:
- !Positional
  optional: false
  position: 0
  name: make-consensus_poly
  description: <tig-file> <bank-name>
named:
- !Flag
  optional: true
  synonyms:
  - -a
  description: Output alignments instead of consensus messages
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -A
  description: Output an AMOS message file
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -b
  description: Input from AMOS bank
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -B
  description: Output to an AMOS bank
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -c
  description: Process contig messages
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -C
  description: Input is Celera msg format, i.e., a .cgb or .cgw file
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -e
  description: Set alignment error rate to <x>, e.g.,  -e 0.05  for 5% error
  args: !SimpleFlagArg
    name: x
- !Flag
  optional: true
  synonyms:
  - -E
  description: Get extra sequences to align from fasta file <fn>
  args: !SimpleFlagArg
    name: fn
- !Flag
  optional: true
  synonyms:
  - -f
  description: Output consensus only in FASTA format
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -i
  description: File containing list of IIDs to be processed
  args: !SimpleFlagArg
    name: fn
- !Flag
  optional: true
  synonyms:
  - -n
  description: File containing list of EIDs (names) to be processed
  args: !SimpleFlagArg
    name: fn
- !Flag
  optional: true
  synonyms:
  - -o
  description: Set minimum overlap bases to <n>
  args: !SimpleFlagArg
    name: n
- !Flag
  optional: true
  synonyms:
  - -P
  description: "Input is simple contig format, i.e., UMD format\nusing partial reads"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -s
  description: Output EID seqnames for reads instead of IID ints
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -S
  description: Input is simple contig format, i.e., UMD format
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -T
  description: Output in TIGR Assembler contig format
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -u
  description: Process unitig messages
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -v
  description: Set verbose level to <n>.  Higher produces more output.
  args: !SimpleFlagArg
    name: n
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  description: Print this usage message
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "Starting on Wed Sep  9 18:44:33 2020\n\nmake-consensus_poly: invalid option\
  \ -- '-'\nUnrecognized option --\n\n.USAGE.\n  make-consensus_poly  <tig-file> <bank-name>\n\
  \n.DESCRIPTION.\n  Read layout information from <tig-file> describing positions\n\
  \  of reads, and create multialignments and/or consensus sequences\n  for them.\
  \  Read sequences are obtained from <bank-name>. The\n  alphabet supported (acgtmrwsykvhdbn)\
  \ includes all ambiguities\n\n.OPTIONS.\n  -a       Output alignments instead of\
  \ consensus messages\n  -A       Output an AMOS message file\n  -b       Input from\
  \ AMOS bank\n  -B       Output to an AMOS bank\n  -c       Process contig messages\n\
  \  -C       Input is Celera msg format, i.e., a .cgb or .cgw file\n  -e <x>   Set\
  \ alignment error rate to <x>, e.g.,  -e 0.05  for 5% error\n  -E <fn>  Get extra\
  \ sequences to align from fasta file <fn>\n  -f       Output consensus only in FASTA\
  \ format\n  -h       Print this usage message\n  -i <fn>  File containing list of\
  \ IIDs to be processed\n  -n <fn>  File containing list of EIDs (names) to be processed\n\
  \  -o <n>   Set minimum overlap bases to <n>\n  -P       Input is simple contig\
  \ format, i.e., UMD format\n              using partial reads\n  -s       Output\
  \ EID seqnames for reads instead of IID ints\n  -S       Input is simple contig\
  \ format, i.e., UMD format\n  -T       Output in TIGR Assembler contig format\n\
  \  -u       Process unitig messages\n  -v <n>   Set verbose level to <n>.  Higher\
  \ produces more output.\n\n.KEYWORDS.\n  reads, consensus\n\n"
generated_using:
- --help
docker_image:
