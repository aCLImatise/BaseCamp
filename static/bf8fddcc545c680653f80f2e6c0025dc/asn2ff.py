from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File

Asn2Ff_V0_1_0 = CommandToolBuilder(tool="asn2ff", base_command=["asn2ff"], inputs=[ToolInput(tag="in_filename_input_optionaldefault", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="Filename for asn.1 input [File In]  Optional\ndefault = stdin")), ToolInput(tag="in_input_seqentry_optionaldefault", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc="Input is a Seq-entry [T/F]  Optional\ndefault = F")), ToolInput(tag="in_input_asnfile_binary", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc="Input asnfile in binary mode [T/F]  Optional\ndefault = F")), ToolInput(tag="in_output_filename_optionaldefault", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="Output Filename [File Out]  Optional\ndefault = stdout")), ToolInput(tag="in_log_errors_file", input_type=File(optional=True), prefix="-l", doc=InputDocumentation(doc="Log errors to file named: [File Out]  Optional")), ToolInput(tag="in_output_format_b", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc="Output Format?: b for GenBank, p for GenPept, e for EMBL, s for PseudoEMBL, x for   GenBankSelect, z for EMBLPEPT [String]  Optional\ndefault = b")), ToolInput(tag="in_output_mode_r", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="Output mode?: r for release, d for dump, s for Sequin, c for Chromoscope, k for dir-sub-debug, l for dir-sub, e for revise, p for partial report [String]  Optional\ndefault = r")), ToolInput(tag="in_input_seqsubmit_optionaldefault", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="Input is a Seq-submit [T/F]  Optional\ndefault = F")), ToolInput(tag="in_show_numbers_optionaldefault", input_type=Boolean(optional=True), prefix="-g", doc=InputDocumentation(doc="Show gi numbers? [T/F]  Optional\ndefault = F")), ToolInput(tag="in_nonstrict_genebinding_optionaldefault", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="Non-Strict gene_binding [T/F]  Optional\ndefault = T")), ToolInput(tag="in_show_error_messages", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="Show error messages [T/F]  Optional\ndefault = T")), ToolInput(tag="in_show_verbose_text", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="Show verbose message text [T/F]  Optional\ndefault = F")), ToolInput(tag="in_use_html_format", input_type=Boolean(optional=True), prefix="-w", doc=InputDocumentation(doc="Use HTML output format? [T/F]  Optional\ndefault = F")), ToolInput(tag="in_output_only_", input_type=Boolean(optional=True), prefix="-q", doc=InputDocumentation(doc="Output is one top bioseq only [T/F]  Optional\ndefault = F")), ToolInput(tag="in_only_in_view", input_type=Boolean(optional=True), prefix="-G", doc=InputDocumentation(doc="Output is one top bioseq only in genome view [T/F]  Optional\ndefault = F")), ToolInput(tag="in_output_map_bioseqs", input_type=Boolean(optional=True), prefix="-M", doc=InputDocumentation(doc="Output is map bioseqs only  [T/F]  Optional\ndefault = F")), ToolInput(tag="in_output_error_logfile", input_type=File(optional=True), prefix="-r", doc=InputDocumentation(doc="Output error logfile [File Out]  Optional\ndefault = stderr")), ToolInput(tag="in_show_gene_features", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="Show new gene features? [T/F]  Optional\ndefault = T")), ToolInput(tag="in_new_algorithm_orgnames", input_type=Boolean(optional=True), prefix="-z", doc=InputDocumentation(doc="New algorithm for orgnames? [T/F]  Optional\ndefault = F")), ToolInput(tag="in_print_help_format", input_type=Boolean(optional=True), prefix="-y", doc=InputDocumentation(doc="Print help format only? [T/F]  Optional\ndefault = F")), ToolInput(tag="in_from_show_region_optionaldefault", input_type=Boolean(optional=True), prefix="-A", doc=InputDocumentation(doc="From to show a region [Real]  Optional\ndefault = 0")), ToolInput(tag="in_to_show_region_optionaldefault", input_type=Boolean(optional=True), prefix="-B", doc=InputDocumentation(doc="To to show a region [Real]  Optional\ndefault = 0")), ToolInput(tag="in_complex_sets_physetmutset", input_type=Boolean(optional=True), prefix="-k", doc=InputDocumentation(doc="Complex sets (phy-set,mut-set, pop-set)? [T/F]  Optional\ndefault = T")), ToolInput(tag="in_use_seqmgr_indexing", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc="Use SeqMgr indexing? [T/F]  Optional\ndefault = F")), ToolInput(tag="in_use_version_optionaldefault", input_type=Boolean(optional=True), prefix="-V", doc=InputDocumentation(doc="Use VERSION? [T/F]  Optional\ndefault = T")), ToolInput(tag="in_show_bankit_comments", input_type=Boolean(optional=True), prefix="-C", doc=InputDocumentation(doc="Show Bankit comments? [T/F]  Optional\ndefault = F")), ToolInput(tag="in_genbank_release_optionaldefault", input_type=Boolean(optional=True), prefix="-R", doc=InputDocumentation(doc="For GenBank Release? [T/F]  Optional\ndefault = F")), ToolInput(tag="in_new_locus_line", input_type=Boolean(optional=True), prefix="-L", doc=InputDocumentation(doc="New LOCUS line format? [T/F]  Optional\ndefault = T\n"))], outputs=[ToolOutput(tag="out_output_filename_optionaldefault", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_filename_optionaldefault", type_hint=File()), doc=OutputDocumentation(doc="Output Filename [File Out]  Optional\ndefault = stdout")), ToolOutput(tag="out_log_errors_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_log_errors_file", type_hint=File()), doc=OutputDocumentation(doc="Log errors to file named: [File Out]  Optional")), ToolOutput(tag="out_output_error_logfile", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_error_logfile", type_hint=File()), doc=OutputDocumentation(doc="Output error logfile [File Out]  Optional\ndefault = stderr"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Asn2Ff_V0_1_0().translate("wdl", allow_empty_container=True)

