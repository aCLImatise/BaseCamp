from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, String, Boolean, Float

Msgfplus_Search_Rb_V0_1_0 = CommandToolBuilder(tool="msgfplus_search.rb", base_command=["msgfplus_search.rb"], inputs=[ToolInput(tag="in_replace_output", input_type=File(optional=True), prefix="--replace-output", doc=InputDocumentation(doc="Dont skip analyses for which the output file already exists [false]")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="An explicitly named output file.")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of processing threads to use. Set to 0 to autodetect an appropriate value [1]")), ToolInput(tag="in_database", input_type=File(optional=True), prefix="--database", doc=InputDocumentation(doc="Specify the database to use for this search. Can be a named protk database or the path to a fasta file [sphuman]")), ToolInput(tag="in_enzyme", input_type=String(optional=True), prefix="--enzyme", doc=InputDocumentation(doc="Enzyme [Trypsin]")), ToolInput(tag="in_var_mods", input_type=String(optional=True), prefix="--var-mods", doc=InputDocumentation(doc="Variable modifications. These should be provided in a comma separated list")), ToolInput(tag="in_fix_mods", input_type=String(optional=True), prefix="--fix-mods", doc=InputDocumentation(doc="Fixed modifications. These should be provided in a comma separated list")), ToolInput(tag="in_instrument", input_type=String(optional=True), prefix="--instrument", doc=InputDocumentation(doc="Instrument [ESI-QUAD-TOF]")), ToolInput(tag="in_cleavage_semi", input_type=Boolean(optional=True), prefix="--cleavage-semi", doc=InputDocumentation(doc="Search for peptides with up to 1 non-enzymatic cleavage site [false]")), ToolInput(tag="in_glyco", input_type=Boolean(optional=True), prefix="--glyco", doc=InputDocumentation(doc="Expect N-Glycosylation modifications as variable mod in a search or as a parameter when building statistical models [false]")), ToolInput(tag="in_acetyl_n_term", input_type=Boolean(optional=True), prefix="--acetyl-nterm", doc=InputDocumentation(doc="Expect N-terminal acetylation as a variable mod in a search or as a parameter when building statistical models [false]")), ToolInput(tag="in_methionine_o", input_type=Boolean(optional=True), prefix="--methionineo", doc=InputDocumentation(doc="Expect Oxidised Methionine modifications as variable mod in a search [false]")), ToolInput(tag="in_carb_amido_methyl", input_type=Boolean(optional=True), prefix="--carbamidomethyl", doc=InputDocumentation(doc="Expect Carbamidomethyl C modifications as fixed mod in a search [false]")), ToolInput(tag="in_precursor_ion_to_l", input_type=Int(optional=True), prefix="--precursor-ion-tol", doc=InputDocumentation(doc="Precursor ion mass tolerance. [20]")), ToolInput(tag="in_precursor_ion_to_l_units", input_type=String(optional=True), prefix="--precursor-ion-tol-units", doc=InputDocumentation(doc="Precursor ion mass tolerance units (ppm or Da). [ppm]")), ToolInput(tag="in_pep_xml", input_type=Boolean(optional=True), prefix="--pepxml", doc=InputDocumentation(doc="Convert results to pepxml. [false]")), ToolInput(tag="in_isotope_error_range", input_type=Int(optional=True), prefix="--isotope-error-range", doc=InputDocumentation(doc="Takes into account of the error introduced by chooosing a non-monoisotopic peak for fragmentation. [0,1]")), ToolInput(tag="in_fragment_method", input_type=Int(optional=True), prefix="--fragment-method", doc=InputDocumentation(doc="Fragment method 0: As written in the spectrum or CID if no info (Default), 1: CID, 2: ETD, 3: HCD, 4: Merge spectra from the same precursor [0]")), ToolInput(tag="in_decoy_search", input_type=Boolean(optional=True), prefix="--decoy-search", doc=InputDocumentation(doc="Build and search a decoy database on the fly. Input db should not contain decoys if this option is used [false]")), ToolInput(tag="in_min_pep_length", input_type=Int(optional=True), prefix="--min-pep-length", doc=InputDocumentation(doc="Minimum peptide length to consider [6]")), ToolInput(tag="in_max_pep_length", input_type=Int(optional=True), prefix="--max-pep-length", doc=InputDocumentation(doc="Maximum peptide length to consider [40]")), ToolInput(tag="in_min_pep_charge", input_type=Int(optional=True), prefix="--min-pep-charge", doc=InputDocumentation(doc="Minimum precursor charge to consider if charges are not specified in the spectrum file [2]")), ToolInput(tag="in_max_pep_charge", input_type=Int(optional=True), prefix="--max-pep-charge", doc=InputDocumentation(doc="Maximum precursor charge to consider if charges are not specified in the spectrum file [3]")), ToolInput(tag="in_num_reported_matches", input_type=Int(optional=True), prefix="--num-reported-matches", doc=InputDocumentation(doc="Number of matches per spectrum to be reported, Default: 1 [1]")), ToolInput(tag="in_add_features", input_type=Boolean(optional=True), prefix="--add-features", doc=InputDocumentation(doc="output additional features [false]")), ToolInput(tag="in_java_mem", input_type=Float(optional=True), prefix="--java-mem", doc=InputDocumentation(doc="Java memory limit when running the search (Default 3.5Gb) [3500M]")), ToolInput(tag="in_file_two_dot_mzm_l", input_type=Int(), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_replace_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_replace_output", type_hint=File()), doc=OutputDocumentation(doc="Dont skip analyses for which the output file already exists [false]")), ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="An explicitly named output file."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Msgfplus_Search_Rb_V0_1_0().translate("wdl", allow_empty_container=True)

