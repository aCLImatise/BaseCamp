!Command
positional:
- !Positional
  description: 'XML input filename to be converted (stdin: "-")'
  position: 0
  name: xmlfile-in
  optional: false
- !Positional
  description: DICOM SR output filename
  position: 1
  name: dsrfile-out
  optional: false
named:
- !Flag
  description: --quiet                quiet mode, print no warnings and errors
  synonyms:
  - -q
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: --verbose              verbose mode, print processing details
  synonyms:
  - -v
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: --debug                debug mode, print debug information
  synonyms:
  - -d
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '--log-level            [l]evel: string constant (fatal, error, warn,
    info, debug, trace) use level l for the logger'
  synonyms:
  - -ll
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '--log-config           [f]ilename: string use config file f for the
    logger'
  synonyms:
  - -lc
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: --write-dataset        write data set without file meta information
  synonyms:
  - -F
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: --disable-new-vr       disable support for new VRs, convert to OB
  synonyms:
  - -u
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: --group-length-remove  always write without group length elements
  synonyms:
  - -g
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: --length-undefined     write with undefined lengths
  synonyms:
  - -e
  args: !EmptyFlagArg {}
  optional: true
command:
- xml2dsr
parent:
subcommands: []
help_flag: !Flag
  description: --help                 print this help text and exit --version              print
    version information and exit --arguments            print expanded command line
    arguments
  synonyms:
  - -h
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "$dcmtk: xml2dsr v3.6.1 2016-11-02 $\n\nxml2dsr: Convert XML document to\
  \ DICOM SR file\nusage: xml2dsr [options] xmlfile-in dsrfile-out\n\nparameters:\n\
  \  xmlfile-in                    XML input filename to be converted (stdin: \"-\"\
  )\n  dsrfile-out                   DICOM SR output filename\n\ngeneral options:\n\
  \  -h     --help                 print this help text and exit\n         --version\
  \              print version information and exit\n         --arguments        \
  \    print expanded command line arguments\n  -q     --quiet                quiet\
  \ mode, print no warnings and errors\n  -v     --verbose              verbose mode,\
  \ print processing details\n  -d     --debug                debug mode, print debug\
  \ information\n  -ll    --log-level            [l]evel: string constant\n      \
  \                          (fatal, error, warn, info, debug, trace)\n          \
  \                      use level l for the logger\n  -lc    --log-config       \
  \    [f]ilename: string\n                                use config file f for the\
  \ logger\ninput options:\n  encoding:\n    +Ee  --template-envelope    template\
  \ element encloses content items\nprocessing options:\n  validation:\n    +Vs  --validate-schema\
  \      validate XML document against Schema\n                                (not\
  \ with --template-envelope)\n    +Vn  --check-namespace      check XML namespace\
  \ in document root\n  unique identifiers:\n    +Ug  --generate-new-uids    generate\
  \ new Study/Series/SOP Instance UID\n    -Uo  --dont-overwrite-uids  do not overwrite\
  \ existing UIDs (default)\n    +Uo  --overwrite-uids       overwrite existing UIDs\n\
  output options:\n  output file format:\n    +F   --write-file           write file\
  \ format (default)\n    -F   --write-dataset        write data set without file\
  \ meta information\n  output transfer syntax:\n    +te  --write-xfer-little    write\
  \ with explicit VR little endian TS (def.)\n    +tb  --write-xfer-big       write\
  \ with explicit VR big endian TS\n    +ti  --write-xfer-implicit  write with implicit\
  \ VR little endian TS\n    +td  --write-xfer-deflated  write with deflated expl.\
  \ VR little endian TS\n  post-1993 value representations:\n    +u   --enable-new-vr\
  \        enable support for new VRs (UN/UT) (default)\n    -u   --disable-new-vr\
  \       disable support for new VRs, convert to OB\n  group length encoding:\n \
  \   +g=  --group-length-recalc  recalculate group lengths if present (default)\n\
  \    +g   --group-length-create  always write with group length elements\n    -g\
  \   --group-length-remove  always write without group length elements\n  length\
  \ encoding in sequences and items:\n    +e   --length-explicit      write with explicit\
  \ lengths (default)\n    -e   --length-undefined     write with undefined lengths\n\
  \  data set trailing padding (not with --write-dataset):\n    -p=  --padding-retain\
  \       do not change padding\n                                (default if not --write-dataset)\n\
  \    -p   --padding-off          no padding (implicit if --write-dataset)\n    +p\
  \   --padding-create       [f]ile-pad [i]tem-pad: integer\n                    \
  \            align file on multiple of f bytes\n                               \
  \ and items on multiple of i bytes\n  deflate compression level (only with --write-xfer-deflated):\n\
  \    +cl  --compression-level    [l]evel: integer (default: 6)\n               \
  \                 0=uncompressed, 1=fastest, 9=best compression\n\n"
generated_using:
- --help
