version 1.0

task BarcodeSplit {
  input {
    Boolean? summary_file
    Boolean? barcode_file
    String? output_dir
    Boolean? output_unclassified
    Int? min_barcode_percent
    Boolean? verbose
    Boolean? quiet
  }
  command <<<
    Barcode_split \
      ~{true="--summary_file" false="" summary_file} \
      ~{true="--barcode_file" false="" barcode_file} \
      ~{if defined(output_dir) then ("--output_dir " +  '"' + output_dir + '"') else ""} \
      ~{true="--output_unclassified" false="" output_unclassified} \
      ~{if defined(min_barcode_percent) then ("--min_barcode_percent " +  '"' + min_barcode_percent + '"') else ""} \
      ~{true="--verbose" false="" verbose} \
      ~{true="--quiet" false="" quiet}
  >>>
  parameter_meta {
    summary_file: "[SUMMARY_FILE [SUMMARY_FILE ...]], -f [SUMMARY_FILE [SUMMARY_FILE ...]] Path to a sequencing_summary generated by Albacore 1.0.0 + (read_fast5_basecaller.py) / Guppy 2.1.3+ (guppy_basecaller). One can also pass multiple space separated file paths or a UNIX style regex matching multiple files"
    barcode_file: "[BARCODE_FILE [BARCODE_FILE ...]], -b [BARCODE_FILE [BARCODE_FILE ...]] Path to the barcode_file generated by Guppy 2.1.3+ (guppy_barcoder) or Deepbinner 0.2.0+. One can also pass multiple space separated file paths or a UNIX style regex matching multiple files"
    output_dir: "Folder where to output split barcode data (default: current dir"
    output_unclassified: "If given, unclassified barcodes are also written in a file. By default they are skiped"
    min_barcode_percent: "Minimal percent of total reads to retain barcode label. If below, the barcode value is set as `unclassified` (default: 0.1)"
    verbose: "Increase verbosity"
    quiet: "Reduce verbosity"
  }
}