!Command
command:
- nanonet2d
positional:
- !Positional
  optional: false
  position: 0
  name: input
  description: 'A path to fast5 files. (default: None)'
- !Positional
  optional: false
  position: 1
  name: output_prefix
  description: Output prefix, output will be in fasta format.
named:
- !Flag
  optional: true
  synonyms:
  - --fastq
  - --no-fastq
  description: "Output fastq rather than fasta. (Default: --no-fastq)\n(default: False)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --watch
  description: "Switch to watching folder, argument value used as\ntimeout period.\
    \ (default: None)"
  args: !SimpleFlagArg
    name: WATCH
- !Flag
  optional: true
  synonyms:
  - --section
  description: "Section of read for which to produce basecalls, will\noverride that\
    \ stored in model file. (default: None)"
  args: !ChoiceFlagArg
    choices: !!set
      complement:
      template:
- !Flag
  optional: true
  synonyms:
  - --event_detect
  - --no-event_detect
  description: "Perform event detection, else use existing event data\n(Default: --event_detect)\
    \ (default: True)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --write_events
  - --no-write_events
  description: "Write event datasets to .fast5. (Default: --no-\nwrite_events) (default:\
    \ False)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --strand_list
  description: 'List of reads to process. (default: None)'
  args: !SimpleFlagArg
    name: STRAND_LIST
- !Flag
  optional: true
  synonyms:
  - --limit
  description: "Limit the number of input for processing. (default:\nNone)"
  args: !SimpleFlagArg
    name: LIMIT
- !Flag
  optional: true
  synonyms:
  - --min_len
  description: 'Min. read length (events) to basecall. (default: 500)'
  args: !SimpleFlagArg
    name: MIN_LEN
- !Flag
  optional: true
  synonyms:
  - --max_len
  description: "Max. read length (events) to basecall. (default:\n15000)"
  args: !SimpleFlagArg
    name: MAX_LEN
- !Flag
  optional: true
  synonyms:
  - --template_model
  description: "Trained ANN. (default: /root/.cache/Python-\nEggs/nanonet-2.0.0-py2.7-linux-x86_64.egg-\n\
    tmp/nanonet/data/default_template.npy)"
  args: !SimpleFlagArg
    name: TEMPLATE_MODEL
- !Flag
  optional: true
  synonyms:
  - --complement_model
  description: "Trained ANN. (default: /root/.cache/Python-\nEggs/nanonet-2.0.0-py2.7-linux-x86_64.egg-\n\
    tmp/nanonet/data/default_complement.npy)"
  args: !SimpleFlagArg
    name: COMPLEMENT_MODEL
- !Flag
  optional: true
  synonyms:
  - --jobs
  description: 'No of decoding jobs to run in parallel. (default: 1)'
  args: !SimpleFlagArg
    name: JOBS
- !Flag
  optional: true
  synonyms:
  - --opencl_2d
  - --no-opencl_2d
  description: "Use OpenCL for 2D calls. (Default: --no-opencl_2d)\n(default: False)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --trans
  description: "step skip\nBase transition probabilities (default: None)"
  args: !SimpleFlagArg
    name: stay
- !Flag
  optional: true
  synonyms:
  - --fast_decode
  - --no-fast_decode
  description: "Use simple, fast decoder with no transition estimates.\n(Default:\
    \ --no-fast_decode) (default: False)\n"
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "usage: nanonet2d [-h] [--fastq] [--watch WATCH]\n                 [--section\
  \ {template,complement}] [--event_detect]\n                 [--write_events] [--strand_list\
  \ STRAND_LIST] [--limit LIMIT]\n                 [--min_len MIN_LEN] [--max_len\
  \ MAX_LEN]\n                 [--template_model TEMPLATE_MODEL]\n               \
  \  [--complement_model COMPLEMENT_MODEL] [--jobs JOBS]\n                 [--opencl_2d]\
  \ [--trans stay step skip] [--fast_decode]\n                 [input] output_prefix\n\
  \nA simple RNN basecaller for Oxford Nanopore data.\n\npositional arguments:\n \
  \ input                 A path to fast5 files. (default: None)\n  output_prefix\
  \         Output prefix, output will be in fasta format.\n\noptional arguments:\n\
  \  -h, --help            show this help message and exit\n  --fastq, --no-fastq\
  \   Output fastq rather than fasta. (Default: --no-fastq)\n                    \
  \    (default: False)\n  --watch WATCH         Switch to watching folder, argument\
  \ value used as\n                        timeout period. (default: None)\n  --section\
  \ {template,complement}\n                        Section of read for which to produce\
  \ basecalls, will\n                        override that stored in model file. (default:\
  \ None)\n  --event_detect, --no-event_detect\n                        Perform event\
  \ detection, else use existing event data\n                        (Default: --event_detect)\
  \ (default: True)\n  --write_events, --no-write_events\n                       \
  \ Write event datasets to .fast5. (Default: --no-\n                        write_events)\
  \ (default: False)\n  --strand_list STRAND_LIST\n                        List of\
  \ reads to process. (default: None)\n  --limit LIMIT         Limit the number of\
  \ input for processing. (default:\n                        None)\n  --min_len MIN_LEN\
  \     Min. read length (events) to basecall. (default: 500)\n  --max_len MAX_LEN\
  \     Max. read length (events) to basecall. (default:\n                       \
  \ 15000)\n  --template_model TEMPLATE_MODEL\n                        Trained ANN.\
  \ (default: /root/.cache/Python-\n                        Eggs/nanonet-2.0.0-py2.7-linux-x86_64.egg-\n\
  \                        tmp/nanonet/data/default_template.npy)\n  --complement_model\
  \ COMPLEMENT_MODEL\n                        Trained ANN. (default: /root/.cache/Python-\n\
  \                        Eggs/nanonet-2.0.0-py2.7-linux-x86_64.egg-\n          \
  \              tmp/nanonet/data/default_complement.npy)\n  --jobs JOBS         \
  \  No of decoding jobs to run in parallel. (default: 1)\n  --opencl_2d, --no-opencl_2d\n\
  \                        Use OpenCL for 2D calls. (Default: --no-opencl_2d)\n  \
  \                      (default: False)\n  --trans stay step skip\n            \
  \            Base transition probabilities (default: None)\n  --fast_decode, --no-fast_decode\n\
  \                        Use simple, fast decoder with no transition estimates.\n\
  \                        (Default: --no-fast_decode) (default: False)\n"
generated_using:
- --help
docker_image:
