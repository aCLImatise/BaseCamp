from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, Float, File, Directory, String, Boolean

Ppanggolin_Rgp_V0_1_0 = CommandToolBuilder(tool="ppanggolin_rgp", base_command=["ppanggolin", "rgp"], inputs=[ToolInput(tag="in_persistent_penalty", input_type=Int(optional=True), prefix="--persistent_penalty", doc=InputDocumentation(doc="Penalty score to apply to persistent genes (default:\n3)")), ToolInput(tag="in_variable_gain", input_type=Int(optional=True), prefix="--variable_gain", doc=InputDocumentation(doc="Gain score to apply to variable genes (default: 1)")), ToolInput(tag="in_min_score", input_type=Int(optional=True), prefix="--min_score", doc=InputDocumentation(doc="Minimal score wanted for considering a region as being\na RGP (default: 4)")), ToolInput(tag="in_min_length", input_type=Int(optional=True), prefix="--min_length", doc=InputDocumentation(doc="Minimum length (bp) of a region to be considered a RGP\n(default: 3000)")), ToolInput(tag="in_dup_margin", input_type=Float(optional=True), prefix="--dup_margin", doc=InputDocumentation(doc="Minimum ratio of organisms where the family is present\nin which the family must have multiple genes for it to\nbe considered 'duplicated' (default: 0.05)")), ToolInput(tag="in_pan_genome", input_type=File(optional=True), prefix="--pangenome", doc=InputDocumentation(doc="The pangenome .h5 file (default: None)")), ToolInput(tag="in_tmpdir", input_type=Directory(optional=True), prefix="--tmpdir", doc=InputDocumentation(doc="directory for storing temporary files (default: /tmp)")), ToolInput(tag="in_verbose", input_type=String(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Indicate verbose level (0 for warning and errors only,\n1 for info, 2 for debug) (default: 1)")), ToolInput(tag="in_log", input_type=File(optional=True), prefix="--log", doc=InputDocumentation(doc="log output file (default: stdout)")), ToolInput(tag="in_disable_prog_bar", input_type=Boolean(optional=True), prefix="--disable_prog_bar", doc=InputDocumentation(doc="disables the progress bars (default: False)")), ToolInput(tag="in_cpu", input_type=Int(optional=True), prefix="--cpu", doc=InputDocumentation(doc="Number of available cpus (default: 1)")), ToolInput(tag="in_force", input_type=File(optional=True), prefix="--force", doc=InputDocumentation(doc="Force writing in output directory and in pangenome\noutput file. (default: False)\n"))], outputs=[ToolOutput(tag="out_log", output_type=File(optional=True), selector=InputSelector(input_to_select="in_log", type_hint=File()), doc=OutputDocumentation(doc="log output file (default: stdout)")), ToolOutput(tag="out_force", output_type=File(optional=True), selector=InputSelector(input_to_select="in_force", type_hint=File()), doc=OutputDocumentation(doc="Force writing in output directory and in pangenome\noutput file. (default: False)\n"))], container="quay.io/biocontainers/ppanggolin:1.1.131--py37hf01694f_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Ppanggolin_Rgp_V0_1_0().translate("wdl")

