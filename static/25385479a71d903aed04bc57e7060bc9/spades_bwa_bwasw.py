from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, Float, File, Boolean, String

Spades_Bwa_Bwasw_V0_1_0 = CommandToolBuilder(tool="spades_bwa_bwasw", base_command=["spades-bwa", "bwasw"], inputs=[ToolInput(tag="in_score_for_match", input_type=Int(optional=True), prefix="-a", doc=InputDocumentation(doc="score for a match [1]")), ToolInput(tag="in_mismatch_penalty", input_type=Int(optional=True), prefix="-b", doc=InputDocumentation(doc="mismatch penalty [3]")), ToolInput(tag="in_gap_open_penalty", input_type=Int(optional=True), prefix="-q", doc=InputDocumentation(doc="gap open penalty [5]")), ToolInput(tag="in_gap_extension_penalty", input_type=Int(optional=True), prefix="-r", doc=InputDocumentation(doc="gap extension penalty [2]")), ToolInput(tag="in_band_width", input_type=Int(optional=True), prefix="-w", doc=InputDocumentation(doc="band width [50]")), ToolInput(tag="in_mask_level", input_type=Float(optional=True), prefix="-m", doc=InputDocumentation(doc="mask level [0.50]")), ToolInput(tag="in_number_of_threads", input_type=Int(optional=True), prefix="-t", doc=InputDocumentation(doc="number of threads [1]")), ToolInput(tag="in_file_output_results", input_type=File(optional=True), prefix="-f", doc=InputDocumentation(doc="file to output results to instead of stdout")), ToolInput(tag="in_sam_output_use", input_type=Boolean(optional=True), prefix="-H", doc=InputDocumentation(doc="in SAM output, use hard clipping instead of soft clipping")), ToolInput(tag="in_copy_fastaq_comment", input_type=Boolean(optional=True), prefix="-C", doc=InputDocumentation(doc="copy FASTA/Q comment to SAM output")), ToolInput(tag="in_mark_multipart_alignments", input_type=Boolean(optional=True), prefix="-M", doc=InputDocumentation(doc="mark multi-part alignments as secondary")), ToolInput(tag="in_skip_smithwaterman_read", input_type=Boolean(optional=True), prefix="-S", doc=InputDocumentation(doc="skip Smith-Waterman read pairing")), ToolInput(tag="in_ignore_pairs_distr", input_type=Int(optional=True), prefix="-I", doc=InputDocumentation(doc="ignore pairs with insert >=INT for inferring the size distr [20000]")), ToolInput(tag="in_score_threshold_divided", input_type=Int(optional=True), prefix="-T", doc=InputDocumentation(doc="score threshold divided by a [30]")), ToolInput(tag="in_coefficient_lengththreshold_adjustment", input_type=Float(optional=True), prefix="-c", doc=InputDocumentation(doc="coefficient of length-threshold adjustment [5.5]")), ToolInput(tag="in_zbest", input_type=Int(optional=True), prefix="-z", doc=InputDocumentation(doc="Z-best [1]")), ToolInput(tag="in_maximum_seeding_interval", input_type=Int(optional=True), prefix="-s", doc=InputDocumentation(doc="maximum seeding interval size [3]")), ToolInput(tag="in_seeds_trigger_rev", input_type=Int(optional=True), prefix="-N", doc=InputDocumentation(doc="# seeds to trigger rev aln; 2*INT is also the chaining threshold [5]")), ToolInput(tag="in_maximum_gap_size", input_type=Int(optional=True), prefix="-G", doc=InputDocumentation(doc="maximum gap size during chaining [10000]")), ToolInput(tag="in_bwa", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_b_was_w", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_target_dot_prefix", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_query_dot_fa", input_type=String(), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_query_two_dot_fa", input_type=Int(optional=True), position=4, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_file_output_results", output_type=File(optional=True), selector=InputSelector(input_to_select="in_file_output_results", type_hint=File()), doc=OutputDocumentation(doc="file to output results to instead of stdout"))], container="quay.io/biocontainers/pathracer:3.15.0.dev--h2d02072_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Spades_Bwa_Bwasw_V0_1_0().translate("wdl")

