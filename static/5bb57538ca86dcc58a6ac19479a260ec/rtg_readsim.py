from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Int, Boolean, Float, File

Rtg_Readsim_V0_1_0 = CommandToolBuilder(tool="rtg_readsim", base_command=["rtg", "readsim"], inputs=[ToolInput(tag="in_input", input_type=String(optional=True), prefix="--input", doc=InputDocumentation(doc="SDF containing input genome")), ToolInput(tag="in_machine", input_type=Int(optional=True), prefix="--machine", doc=InputDocumentation(doc="select the sequencing technology to model.\nAllowed values are [illumina_se,\nillumina_pe, complete_genomics,\ncomplete_genomics_2, 454_pe, 454_se,\niontorrent]")), ToolInput(tag="in_output", input_type=String(optional=True), prefix="--output", doc=InputDocumentation(doc="name for reads output SDF")), ToolInput(tag="in_abundance", input_type=Boolean(optional=True), prefix="--abundance", doc=InputDocumentation(doc="if set, the user-supplied distribution\nrepresents desired abundance")), ToolInput(tag="in_allow_unknowns", input_type=Boolean(optional=True), prefix="--allow-unknowns", doc=InputDocumentation(doc="allow reads to be drawn from template\nfragments containing unknown nucleotides")), ToolInput(tag="in_coverage", input_type=Float(optional=True), prefix="--coverage", doc=InputDocumentation(doc="coverage, must be positive")), ToolInput(tag="in_distribution", input_type=File(optional=True), prefix="--distribution", doc=InputDocumentation(doc="file containing probability distribution for\nsequence selection")), ToolInput(tag="in_dna_fraction", input_type=Boolean(optional=True), prefix="--dna-fraction", doc=InputDocumentation(doc="if set, the user-supplied distribution\nrepresents desired DNA fraction")), ToolInput(tag="in_max_fragment_size", input_type=Int(optional=True), prefix="--max-fragment-size", doc=InputDocumentation(doc="maximum fragment size (Default is 250)")), ToolInput(tag="in_min_fragment_size", input_type=Int(optional=True), prefix="--min-fragment-size", doc=InputDocumentation(doc="minimum fragment size (Default is 200)")), ToolInput(tag="in_n_rate", input_type=Float(optional=True), prefix="--n-rate", doc=InputDocumentation(doc="rate that the machine will generate new\nunknowns in the read (Default is 0.0)")), ToolInput(tag="in_num_reads", input_type=Int(optional=True), prefix="--num-reads", doc=InputDocumentation(doc="number of reads to be generated")), ToolInput(tag="in_taxonomy_distribution", input_type=File(optional=True), prefix="--taxonomy-distribution", doc=InputDocumentation(doc="file containing probability distribution for\nsequence selection expressed by taxonomy id")), ToolInput(tag="in_left_read_length", input_type=Int(optional=True), prefix="--left-read-length", doc=InputDocumentation(doc="target read length on the left side")), ToolInput(tag="in_right_read_length", input_type=Int(optional=True), prefix="--right-read-length", doc=InputDocumentation(doc="target read length on the right side")), ToolInput(tag="in_read_length", input_type=Int(optional=True), prefix="--read-length", doc=InputDocumentation(doc="target read length, must be positive")), ToolInput(tag="in_four_five_four_max_total_size", input_type=Int(optional=True), prefix="--454-max-total-size", doc=InputDocumentation(doc="maximum 454 read length (in paired end case\nthe sum of the left and the right read\nlengths)")), ToolInput(tag="in_four_five_four_min_total_size", input_type=Int(optional=True), prefix="--454-min-total-size", doc=InputDocumentation(doc="minimum 454 read length (in paired end case\nthe sum of the left and the right read\nlengths)")), ToolInput(tag="in_ion_max_total_size", input_type=Int(optional=True), prefix="--ion-max-total-size", doc=InputDocumentation(doc="maximum IonTorrent read length")), ToolInput(tag="in_ion_min_total_size", input_type=Int(optional=True), prefix="--ion-min-total-size", doc=InputDocumentation(doc="minimum IonTorrent read length")), ToolInput(tag="in_comment", input_type=String(optional=True), prefix="--comment", doc=InputDocumentation(doc="comment to include in the generated SDF")), ToolInput(tag="in_no_names", input_type=Boolean(optional=True), prefix="--no-names", doc=InputDocumentation(doc="do not create read names in the output SDF")), ToolInput(tag="in_no_qualities", input_type=Boolean(optional=True), prefix="--no-qualities", doc=InputDocumentation(doc="do not create read qualities in the output")), ToolInput(tag="in_sam_rg", input_type=File(optional=True), prefix="--sam-rg", doc=InputDocumentation(doc="|FILE         file containing a single valid read group\nSAM header line or a string in the form\n'@RG\tID:READGROUP1\tSM:BACT_SAMPLE\tPL:ILLUMINA'")), ToolInput(tag="in_seed", input_type=Int(optional=True), prefix="--seed", doc=InputDocumentation(doc="seed for random number generator")), ToolInput(tag="in_sdf", input_type=String(), position=0, doc=InputDocumentation(doc="-q, --qual-range=STRING          set the range of base quality values"))], outputs=[], container="quay.io/biocontainers/rtg-tools:3.12--0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Rtg_Readsim_V0_1_0().translate("wdl")

