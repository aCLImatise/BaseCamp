from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Directory, File, Int, String

Findtadsandloops_Pl_V0_1_0 = CommandToolBuilder(tool="findTADsAndLoops.pl", base_command=["findTADsAndLoops.pl"], inputs=[ToolInput(tag="in_cpu", input_type=Boolean(optional=True), prefix="-cpu", doc=InputDocumentation(doc="<#> (max CPUs to use)")), ToolInput(tag="in_res", input_type=Boolean(optional=True), prefix="-res", doc=InputDocumentation(doc="<#> (resolution, default: 3000)")), ToolInput(tag="in_window", input_type=Boolean(optional=True), prefix="-window", doc=InputDocumentation(doc="<#> (overlapping window size, i.e. superRes, default: 15000)")), ToolInput(tag="in_no_balance", input_type=Boolean(optional=True), prefix="-nobalance", doc=InputDocumentation(doc="(balance contact maps, default: -nobalance)")), ToolInput(tag="in_mind_ist", input_type=Boolean(optional=True), prefix="-minDist", doc=InputDocumentation(doc="<#> (minimum interaction distance to consider, default: 25000)")), ToolInput(tag="in_max_dist", input_type=Boolean(optional=True), prefix="-maxDist", doc=InputDocumentation(doc="<#> (maximum interaction distance to consider, default: 2000000)")), ToolInput(tag="in_default_place_files", input_type=Directory(optional=True), prefix="-o", doc=InputDocumentation(doc="(by default will place output files within the Tag Directory)")), ToolInput(tag="in_mint_ad_size", input_type=Boolean(optional=True), prefix="-minTADsize", doc=InputDocumentation(doc="<#> (default: 45000)")), ToolInput(tag="in_mint_ad_score", input_type=Boolean(optional=True), prefix="-minTADscore", doc=InputDocumentation(doc="<#> (minimum inclusion score to call TAD, default: 1.5)")), ToolInput(tag="in_keep_overlapping_tads", input_type=Boolean(optional=True), prefix="-keepOverlappingTADs", doc=InputDocumentation(doc="(by default, program removes overlapping TAD calls)")), ToolInput(tag="in_fold_loop_local_bg", input_type=Boolean(optional=True), prefix="-foldLoopLocalBg", doc=InputDocumentation(doc="<#> (fold threshold for local loop enrichment, default: 1.5)")), ToolInput(tag="in_fold_loop_global_bg", input_type=Boolean(optional=True), prefix="-foldLoopGlobalBg", doc=InputDocumentation(doc="<#> (fold threshold over avg. interactions of similar distance, default: 2)")), ToolInput(tag="in_poisson_loop_local_bg", input_type=Boolean(optional=True), prefix="-poissonLoopLocalBg", doc=InputDocumentation(doc="<#> (poisson p-value threshold for differential interactions per loop, default: 0.01)")), ToolInput(tag="in_poisson_loop_global_bg", input_type=Boolean(optional=True), prefix="-poissonLoopGlobalBg", doc=InputDocumentation(doc="<#> (poisson p-value threshold for minimum interactions per loop, default: 1e-05)")), ToolInput(tag="in_min_loop_dist", input_type=Boolean(optional=True), prefix="-minLoopDist", doc=InputDocumentation(doc="<#> (minimum length of contact points to find, default: 3x window size)")), ToolInput(tag="in_anchor_size", input_type=Boolean(optional=True), prefix="-anchorSize", doc=InputDocumentation(doc="<#> (size of region used to calculate loop score, default: window size)")), ToolInput(tag="in_anchor_local_bg_size", input_type=Boolean(optional=True), prefix="-anchorLocalBgSize", doc=InputDocumentation(doc="<#> (size of region used to calculate local bg, default: 5x window size)")), ToolInput(tag="in_min_loop_reads", input_type=Boolean(optional=True), prefix="-minLoopReads", doc=InputDocumentation(doc="<#> (minimum number of adjusted reads for contact point, default: use -poissonLoopGlobalBg)")), ToolInput(tag="in_skip_filtering", input_type=Boolean(optional=True), prefix="-skipFiltering", doc=InputDocumentation(doc="(skip post-feature finding filtering step)")), ToolInput(tag="in_keep_unfiltered", input_type=Boolean(optional=True), prefix="-keepUnfiltered", doc=InputDocumentation(doc="(keep unfiltered version of TADs/Loops)")), ToolInput(tag="in_file_genome_duplicationsbadblacklisted", input_type=File(optional=True), prefix="-p", doc=InputDocumentation(doc="(File of genome duplications/bad/blacklisted regions to exclude from Loop/TAD endpoints)")), ToolInput(tag="in_genome", input_type=Int(optional=True), prefix="-genome", doc=InputDocumentation(doc="(i.e. hg19, hg38)")), ToolInput(tag="in_bad_chr", input_type=String(optional=True), prefix="-badChr", doc=InputDocumentation(doc="[chr] ... (chromosomes to skip/exclude)")), ToolInput(tag="in_min_coverage_tad", input_type=Boolean(optional=True), prefix="-minCoverageTAD", doc=InputDocumentation(doc="<#> (minimum ratio of read coverage in TAD relative to genome average, def: 0.25)")), ToolInput(tag="in_min_coverage_anchor", input_type=Boolean(optional=True), prefix="-minCoverageAnchor", doc=InputDocumentation(doc="<#> (minimum ratio of read coverage at anchors relative to average, def: 0.25)")), ToolInput(tag="in_ins_dist", input_type=Boolean(optional=True), prefix="-insDist", doc=InputDocumentation(doc="<#> (distance across which to calculate insulation ratio, default: 150000)")), ToolInput(tag="in_did_ist", input_type=Boolean(optional=True), prefix="-diDist", doc=InputDocumentation(doc="<#> (distance across which to calculate directionality index , default: 1000000)")), ToolInput(tag="in_override", input_type=Boolean(optional=True), prefix="-override", doc=InputDocumentation(doc="(if res/maxDist are set to produce huge matrices and you have the RAM, you may need to include this)")), ToolInput(tag="in_d", input_type=Int(optional=True), prefix="-d", doc=InputDocumentation(doc="[HiC TagDir2] ...")), ToolInput(tag="in_loop", input_type=File(optional=True), prefix="-loop", doc=InputDocumentation(doc="(will score loop interaction rates from this file)")), ToolInput(tag="in_tad", input_type=File(optional=True), prefix="-tad", doc=InputDocumentation(doc="(will score TAD inclusion ratios from this file)")), ToolInput(tag="in_raw", input_type=Boolean(optional=True), prefix="-raw", doc=InputDocumentation(doc="(report raw interaction counts, will impact TAD inclusion ratio scoring too)")), ToolInput(tag="in_norm_total", input_type=Boolean(optional=True), prefix="-normTotal", doc=InputDocumentation(doc="<#> (normalize based on this depth of sequencing for Hi-C experiments)"))], outputs=[ToolOutput(tag="out_default_place_files", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_default_place_files", type_hint=File()), doc=OutputDocumentation(doc="(by default will place output files within the Tag Directory)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Findtadsandloops_Pl_V0_1_0().translate("wdl", allow_empty_container=True)

