from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Boolean, File, Int

Get_Organelle_Config_Py_V0_1_0 = CommandToolBuilder(tool="get_organelle_config.py", base_command=["get_organelle_config.py"], inputs=[ToolInput(tag="in_add", input_type=String(optional=True), prefix="--add", doc=InputDocumentation(doc="Add database for organelle type(s). Followed by any of\nall/embplant_pt/embplant_mt/embplant_nr/fungus_mt/fung\nus_nr/animal_mt/other_pt or multiple types joined by\ncomma such as embplant_pt,embplant_mt,fungus_mt.")), ToolInput(tag="in_use_version", input_type=String(optional=True), prefix="--use-version", doc=InputDocumentation(doc="The version of database to add. Find more versions at\ngithub.com/Kinggerm/GetOrganelleDB. Default: latest")), ToolInput(tag="in_rm", input_type=String(optional=True), prefix="--rm", doc=InputDocumentation(doc="Remove local database(s) for organelle type(s).\nFollowed by any of all/embplant_pt/embplant_mt/embplan\nt_nr/fungus_mt/fungus_nr/animal_mt/other_pt or\nmultiple types joined by comma such as\nembplant_pt,embplant_mt.")), ToolInput(tag="in_update", input_type=Boolean(optional=True), prefix="--update", doc=InputDocumentation(doc="Update local databases to the latest online version,\nor the local version if '--use-local LOCAL_DB_PATH'\nprovided.")), ToolInput(tag="in_config_dir", input_type=File(optional=True), prefix="--config-dir", doc=InputDocumentation(doc="The directory where the default databases were placed.\nThe default value also can be changed by adding\n'export GETORG_PATH=your_favor' to the shell script\n(e.g. ~/.bash_profile or ~/.bashrc) Default:\n/root/.GetOrganelle")), ToolInput(tag="in_use_local", input_type=File(optional=True), prefix="--use-local", doc=InputDocumentation(doc="Input a path. This local database path must include\nsubdirectories LabelDatabase and SeedDatabase, under\nwhich there is the fasta file(s) named by the\norganelle type you want add, such as fungus_mt.fasta.")), ToolInput(tag="in_clean", input_type=Boolean(optional=True), prefix="--clean", doc=InputDocumentation(doc="Remove all configured database files (=='--rm all').")), ToolInput(tag="in_list", input_type=Boolean(optional=True), prefix="--list", doc=InputDocumentation(doc="List configured databases checking and exit.")), ToolInput(tag="in_check", input_type=Boolean(optional=True), prefix="--check", doc=InputDocumentation(doc="Check configured database files and exit.")), ToolInput(tag="in_db_type", input_type=String(optional=True), prefix="--db-type", doc=InputDocumentation(doc="The database type (seed/label/both). Default: both")), ToolInput(tag="in_which_blast", input_type=File(optional=True), prefix="--which-blast", doc=InputDocumentation(doc="Assign the path to BLAST binary files if not added to\nthe path. Default: try '/GetOrganelleDep/linux/ncbi-\nblast' first, then $PATH")), ToolInput(tag="in_which_bowtie_two", input_type=Int(optional=True), prefix="--which-bowtie2", doc=InputDocumentation(doc="Assign the path to Bowtie2 binary files if not added\nto the path. Default: try\n'/GetOrganelleDep/linux/bowtie2' first, then $PATH")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="verbose output to the screen. Default: False"))], outputs=[], container="quay.io/biocontainers/getorganelle:1.7.3.5--pyh3252c3a_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Get_Organelle_Config_Py_V0_1_0().translate("wdl")

