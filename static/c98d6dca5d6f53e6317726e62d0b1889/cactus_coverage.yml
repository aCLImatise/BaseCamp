!Command
command:
- cactus_coverage
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - --onlyContig1
  description: ': Only print coverage that occurs when a sequence from the fasta is
    in the contig1 field of the CIGAR.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --onlyContig2
  description: ': Only print coverage that occurs when a sequence from the fasta is
    in the contig2 field of the CIGAR.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --depthById
  description: ": Assume that headers have an 'id=N|' prefix, where N is an integer.\
    \ Score coverage depth by the number of different prefixes that align to a region,\
    \ rather than the total number of alignments. Uses much more memory than the standard\
    \ mode."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --from
  description: ': Only consider alignments for which one sequence is in fastaFile
    and the other is in fromFastaFile.'
  args: !SimpleFlagArg
    name: fromFastaFile
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "cactus_coverage: unrecognized option '--help'\ncactus_coverage fastaFile\
  \ alignmentsFile\nPrints a bed file representing coverage from a CIGAR file on the\
  \ sequences provided in the fasta file.\nFormat: seq\tregionStart\tregionStop\t\
  coverageDepthOptions:\n--onlyContig1: Only print coverage that occurs when a sequence\
  \ from the fasta is in the contig1 field of the CIGAR.\n--onlyContig2: Only print\
  \ coverage that occurs when a sequence from the fasta is in the contig2 field of\
  \ the CIGAR.\n--depthById: Assume that headers have an 'id=N|' prefix, where N is\
  \ an integer. Score coverage depth by the number of different prefixes that align\
  \ to a region, rather than the total number of alignments. Uses much more memory\
  \ than the standard mode.\n--from <fromFastaFile>: Only consider alignments for\
  \ which one sequence is in fastaFile and the other is in fromFastaFile.\n"
generated_using:
- --help
docker_image:
