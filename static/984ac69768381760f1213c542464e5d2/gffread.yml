!Command
positional:
- !Positional
  description: ''
  position: 0
  name: input_gff
  optional: false
named:
- !Flag
  description: expose (warn about) duplicate transcript IDs and other potential  problems
    with the given GFF/GTF records
  synonyms:
  - -E
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: decode url encoded characters within attributes
  synonyms:
  - -D
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: merge close exons into a single exon (for intron size<4)
  synonyms:
  - -Z
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: write a fasta file with spliced exons for each GFF transcript
  synonyms:
  - -w
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: write a fasta file with spliced CDS for each GFF transcript
  synonyms:
  - -x
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: for -w and -x options, also write for each fasta record the exon coordinates
    projected onto the spliced sequence
  synonyms:
  - -W
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: write a protein fasta file with the translation of CDS for each record
  synonyms:
  - -y
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Ensembl GTF to GFF3 conversion (implies -F; should be used with -m)
  synonyms:
  - -L
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '<chr_replace> is a reference (genomic) sequence replacement table
    with this format: <original_ref_ID> <new_ref_ID> GFF records on reference sequences
    that are not found among the <original_ref_ID> entries in this file will be filtered
    out'
  synonyms:
  - -m
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: the "filtered" GFF records will be written to <outfile.gff> (use -o-
    for printing to stdout)
  synonyms:
  - -o
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: use <trackname> in the second column of each GFF output line
  synonyms:
  - -t
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: will output GTF format instead of GFF3
  synonyms:
  - -T
  - -o
  args: !SimpleFlagArg
    name: option
  optional: true
command:
- gffread
parent:
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "Usage:\ngffread <input_gff> [-g <genomic_seqs_fasta> | <dir>][-s <seq_info.fsize>]\
  \ \n [-o <outfile.gff>] [-t <tname>] [-r [[<strand>]<chr>:]<start>..<end> [-R]]\n\
  \ [-CTVNJMKQAFGUBHZWTOLE] [-w <exons.fa>] [-x <cds.fa>] [-y <tr_cds.fa>]\n [-i <maxintron>]\
  \ \n Filters and/or converts GFF3/GTF2 records.\n <input_gff> is a GFF file, use\
  \ '-' if the GFF records will be given at stdin\n \n Options:\n  -g  full path to\
  \ a multi-fasta file with the genomic sequences\n      for all input mappings, OR\
  \ a directory with single-fasta files\n      (one per genomic sequence, with file\
  \ names matching sequence names)\n  -s  <seq_info.fsize> is a tab-delimited file\
  \ providing this info\n      for each of the mapped sequences:\n      <seq-name>\
  \ <seq-length> <seq-description>\n      (useful for -A option with mRNA/EST/protein\
  \ mappings)\n  -i  discard transcripts having an intron larger than <maxintron>\n\
  \  -r  only show transcripts overlapping coordinate range <start>..<end>\n     \
  \ (on chromosome/contig <chr>, strand <strand> if provided)\n  -R  for -r option,\
  \ discard all transcripts that are not fully \n      contained within the given\
  \ range\n  -U  discard single-exon transcripts\n  -C  coding only: discard mRNAs\
  \ that have no CDS feature\n  -F  full GFF attribute preservation (all attributes\
  \ are shown)\n  -G  only parse additional exon attributes from the first exon\n\
  \      and move them to the mRNA level (useful for GTF input)\n  -A  use the description\
  \ field from <seq_info.fsize> and add it\n      as the value for a 'descr' attribute\
  \ to the GFF record\n  \n  -O  process also non-transcript GFF records (by default\
  \ non-transcript\n      records are ignored)\n  -V  discard any mRNAs with CDS having\
  \ in-frame stop codons\n  -H  for -V option, check and adjust the starting CDS phase\n\
  \      if the original phase leads to a translation with an \n      in-frame stop\
  \ codon\n  -B  for -V option, single-exon transcripts are also checked on the\n\
  \      opposite strand\n  -N  discard multi-exon mRNAs that have any intron with\
  \ a non-canonical\n      splice site consensus (i.e. not GT-AG, GC-AG or AT-AC)\n\
  \  -J  discard any mRNAs that either lack initial START codon\n      or the terminal\
  \ STOP codon, or have an in-frame stop codon\n      (only print mRNAs with a fulll,\
  \ valid CDS)\n  --no-pseudo: filter out records matching the 'pseudo' keyword\n\
  \ \n  -M/--merge : cluster the input transcripts into loci, collapsing matching\n\
  \       transcripts (those with the same exact introns and fully contained)\n  -d\
  \ <dupinfo> : for -M option, write collapsing info to file <dupinfo>\n  --cluster-only:\
  \ same as --merge but without collapsing matching transcripts\n  -K  for -M option:\
  \ also collapse shorter, fully contained transcripts\n      with fewer introns than\
  \ the container\n  -Q  for -M option, remove the containment restriction:\n    \
  \  (multi-exon transcripts will be collapsed if just their introns match,\n    \
  \  while single-exon transcripts can partially overlap (80%))\n \n  --force-exons:\
  \ make sure that the lowest level GFF features are printed as \n      \"exon\" features\n\
  \  -E  expose (warn about) duplicate transcript IDs and other potential \n     \
  \ problems with the given GFF/GTF records\n  -D  decode url encoded characters within\
  \ attributes\n  -Z  merge close exons into a single exon (for intron size<4)\n \
  \ -w  write a fasta file with spliced exons for each GFF transcript\n  -x  write\
  \ a fasta file with spliced CDS for each GFF transcript\n  -W  for -w and -x options,\
  \ also write for each fasta record the exon\n      coordinates projected onto the\
  \ spliced sequence\n  -y  write a protein fasta file with the translation of CDS\
  \ for each record\n  -L  Ensembl GTF to GFF3 conversion (implies -F; should be used\
  \ with -m)\n  -m  <chr_replace> is a reference (genomic) sequence replacement table\
  \ with\n      this format:\n      <original_ref_ID> <new_ref_ID>\n      GFF records\
  \ on reference sequences that are not found among the\n      <original_ref_ID> entries\
  \ in this file will be filtered out\n  -o  the \"filtered\" GFF records will be\
  \ written to <outfile.gff>\n      (use -o- for printing to stdout)\n  -t  use <trackname>\
  \ in the second column of each GFF output line\n  -T  -o option will output GTF\
  \ format instead of GFF3\n "
generated_using:
- --help
