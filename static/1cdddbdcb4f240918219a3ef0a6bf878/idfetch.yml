!Command
command:
- idfetch
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -o
  description: "Filename for output  [File Out]\ndefault = stdout"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -t
  description: "Output type:      1=text asn.1\n2=Binary asn.1\n3=Genbank (Seq-entry\
    \ only)\n4=genpept (Seq-entry only)\n5=fasta (table for history)\n6=quality scores\
    \ (Seq-entry only)\n7=Entrez DocSums\n8=fasta reverse complement"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -d
  description: 'Database to use (special meaning for -q flag: n - nucleotide, p -
    protein) [String]  Optional'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -e
  description: "Entity number (retrieval number) to dump [Integer]  Optional\ndefault\
    \ = 0"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -i
  description: "Type of lookup:   0 - get Seq-entry\n1 - get gi state (output to stderr)\n\
    2 - get SeqIds\n3 - get gi historyn (sequence change only)\n4 - get gi revision\
    \ history (any change to asn.1)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -g
  description: "GI id for single Entity to dump [Integer]  Optional\ndefault = 0"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -G
  description: File with list of gi's, accessions, accession.version's, fasta seqid's
    to dump [File In]  Optional
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -c
  description: "Max complexity:   0 - get the whole blob\n1 - get the bioseq of interest\n\
    2 - get the minimal bioseq-set containing the bioseq of interest\n3 - get the\
    \ minimal nuc-prot containing the bioseq of interest\n4 - get the minimal pub-set\
    \ containing the bioseq of interest"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -f
  description: "flaTtened SeqId, format:\n'type(name,accession,release,version)'\n\
    as '5(HUMHBB)' or\ntype=accession, or\ntype:number  [String]  Optional"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -s
  description: "Fasta style SeqId ENCLOSED IN QUOTES:\nlcl|int or str bbs|int bbm|int\
    \ gb|acc|loc\nemb|acc|loc pir|acc|name sp|acc|name\npat|country|patent|seq gi|int\
    \ dbj|acc|loc\nprf|acc|name pdb|entry|chain [String]  Optional"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -l
  description: Log file [File Out]  Optional
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -q
  description: Generate gi list by entrez query [String]  Optional
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -Q
  description: Generate gi list by entrez query [File In]  Optional
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -n
  description: Output only the list of gis, used with -q [T/F]  Optional
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -F
  description: "Add features delimited by ','. Allowed values are: 'CDD', 'SNP', 'SNP_graph',\
    \ 'MGC', 'HPRD', 'STS','tRNA','microRNA'. [String]  Optional"
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "\nidfetch.c   arguments:\n\n  -o  Filename for output  [File Out]\n  \
  \  default = stdout\n  -t  Output type:\t1=text asn.1\n\t\t\t2=Binary asn.1\n\t\t\
  \t3=Genbank (Seq-entry only)\n\t\t\t4=genpept (Seq-entry only)\n\t\t\t5=fasta (table\
  \ for history)\n\t\t\t6=quality scores (Seq-entry only)\n\t\t\t7=Entrez DocSums\n\
  \t\t\t8=fasta reverse complement\n [Integer]\n    default = 1\n    range from 1\
  \ to 8\n  -d  Database to use (special meaning for -q flag: n - nucleotide, p -\
  \ protein) [String]  Optional\n  -e  Entity number (retrieval number) to dump [Integer]\
  \  Optional\n    default = 0\n  -i  Type of lookup:\t0 - get Seq-entry\n\t\t\t1\
  \ - get gi state (output to stderr)\n\t\t\t2 - get SeqIds\n\t\t\t3 - get gi historyn\
  \ (sequence change only)\n\t\t\t4 - get gi revision history (any change to asn.1)\n\
  \ [Integer]  Optional\n    default = 0\n    range from 0 to 4\n  -g  GI id for single\
  \ Entity to dump [Integer]  Optional\n    default = 0\n  -G  File with list of gi's,\
  \ accessions, accession.version's, fasta seqid's to dump [File In]  Optional\n \
  \ -c  Max complexity:\t0 - get the whole blob\n\t\t\t1 - get the bioseq of interest\n\
  \t\t\t2 - get the minimal bioseq-set containing the bioseq of interest\n\t\t\t3\
  \ - get the minimal nuc-prot containing the bioseq of interest\n\t\t\t4 - get the\
  \ minimal pub-set containing the bioseq of interest\n [Integer]  Optional\n    default\
  \ = 0\n  -f  flaTtened SeqId, format: \n\t\t'type(name,accession,release,version)'\n\
  \t\t\tas '5(HUMHBB)' or \n\t\ttype=accession, or \n\t\ttype:number  [String]  Optional\n\
  \  -s  Fasta style SeqId ENCLOSED IN QUOTES:\n\t\t\tlcl|int or str bbs|int bbm|int\
  \ gb|acc|loc\n\t\t\temb|acc|loc pir|acc|name sp|acc|name\n\t\t\tpat|country|patent|seq\
  \ gi|int dbj|acc|loc\n\t\t\tprf|acc|name pdb|entry|chain [String]  Optional\n  -l\
  \  Log file [File Out]  Optional\n  -q  Generate gi list by entrez query [String]\
  \  Optional\n  -Q  Generate gi list by entrez query [File In]  Optional\n  -n  Output\
  \ only the list of gis, used with -q [T/F]  Optional\n  -F  Add features delimited\
  \ by ','. Allowed values are: 'CDD', 'SNP', 'SNP_graph', 'MGC', 'HPRD', 'STS','tRNA','microRNA'.\
  \ [String]  Optional\n\n"
generated_using:
- --help
docker_image:
