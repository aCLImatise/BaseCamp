from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String

Rsat_Classfreq_V0_1_0 = CommandToolBuilder(tool="rsat_classfreq", base_command=["rsat", "classfreq"], inputs=[ToolInput(tag="in_help", input_type=Boolean(optional=True), prefix="-help", doc=InputDocumentation(doc="(must be first argument) display options")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="verbose")), ToolInput(tag="in_only_numbers_read", input_type=File(optional=True), prefix="-i", doc=InputDocumentation(doc="Only the numbers will be read, other words are ignored.\nif not specified, the standard input is used.\nThis allows to place the command within a pipe.")), ToolInput(tag="in_specified_standard_output", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="if not specified, the standard output is used.\nThis allows to place the command within a pipe.")), ToolInput(tag="in_ci", input_type=Boolean(optional=True), prefix="-ci", doc=InputDocumentation(doc="class interval. If not specified, takes the value\n(max - min)/20\nso that 21 classes are specified.")), ToolInput(tag="in_col", input_type=Boolean(optional=True), prefix="-col", doc=InputDocumentation(doc="column to which apply the program. This option can\nbe used iteratively.")), ToolInput(tag="in_min", input_type=Boolean(optional=True), prefix="-min", doc=InputDocumentation(doc="#  nusmbers strictly smaller than # are not taken into account.\n# also determines the lower limit of the first class.")), ToolInput(tag="in_max", input_type=Boolean(optional=True), prefix="-max", doc=InputDocumentation(doc="#  numbers strictly greater than # are not taken into account.")), ToolInput(tag="in_from", input_type=Boolean(optional=True), prefix="-from", doc=InputDocumentation(doc="# inferior limit for the classes to display\nvalues lower than this limit are however taken into account\nin the calculation of statistics (mean, variance, ...) and of\nclass frequencies (In contrast with the -min option).")), ToolInput(tag="in_to", input_type=Boolean(optional=True), prefix="-to", doc=InputDocumentation(doc="#   superior limit for the classes to display\nvalues higher than this limit are however taken into account\nin the calculation of statistics (mean, variance, ...) and of\nclass frequencies (In contrast with the -max option).")), ToolInput(tag="in_thr", input_type=Boolean(optional=True), prefix="-thr", doc=InputDocumentation(doc="# threshold\nOnly display classes with absolute frequency higher\nthan or equal to the threshold. This option is useful\nfor sparse data, where many classes do not contain any\nobservation (-thr 1).")), ToolInput(tag="in_class_freq", input_type=String(), position=0, doc=InputDocumentation(doc="AUTHORS")), ToolInput(tag="in_statistics", input_type=String(), position=0, doc=InputDocumentation(doc="USAGE")), ToolInput(tag="in_cum", input_type=String(), position=0, doc=InputDocumentation(doc="is the count of (x <= upperlimit)")), ToolInput(tag="in_d_cum", input_type=String(), position=1, doc=InputDocumentation(doc="is the count of (x >= lowerlimit)"))], outputs=[ToolOutput(tag="out_specified_standard_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_specified_standard_output", type_hint=File()), doc=OutputDocumentation(doc="if not specified, the standard output is used.\nThis allows to place the command within a pipe."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Rsat_Classfreq_V0_1_0().translate("wdl", allow_empty_container=True)

