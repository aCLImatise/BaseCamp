from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Directory, Boolean

Itsx_V0_1_0 = CommandToolBuilder(tool="ITSx", base_command=["ITSx"], inputs=[ToolInput(tag="in_dna_fasta_input", input_type=String(optional=True), prefix="-i", doc=InputDocumentation(doc=": DNA FASTA input file to investigate")), ToolInput(tag="in_base_names_output", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc=": Base for the names of output file(s)")), ToolInput(tag="in_path_directory_hmmprofile", input_type=String(optional=True), prefix="-p", doc=InputDocumentation(doc=": A path to a directory of HMM-profile collections representing ITS conserved regions, default is in the same directory as ITSx itself")), ToolInput(tag="in_stdin", input_type=String(optional=True), prefix="--stdin", doc=InputDocumentation(doc=": Use input from standard input instead of an input file, off (F) by default")), ToolInput(tag="in_date", input_type=Directory(optional=True), prefix="--date", doc=InputDocumentation(doc=": Adds a date and time stamp to the output directory, off (F) by default")), ToolInput(tag="in_reset", input_type=String(optional=True), prefix="--reset", doc=InputDocumentation(doc=": Re-creates the HMM-database before ITSx is run, off (F) by default")), ToolInput(tag="in_profile_set_use", input_type=String(optional=True), prefix="-t", doc=InputDocumentation(doc=": Profile set to use for the search, see the User's Guide (comma-separated), default is all")), ToolInput(tag="in_domain_evalue_cutoff", input_type=String(optional=True), prefix="-E", doc=InputDocumentation(doc=": Domain E-value cutoff for a sequence to be included in the output, default = 1e-5")), ToolInput(tag="in_domain_score_cutoff", input_type=String(optional=True), prefix="-S", doc=InputDocumentation(doc=": Domain score cutoff for a sequence to be included in the output, default = 0")), ToolInput(tag="in_minimal_number_match", input_type=String(optional=True), prefix="-N", doc=InputDocumentation(doc=": The minimal number of domains that must match a sequence before it is included, default = 2")), ToolInput(tag="in_selection_priority", input_type=String(optional=True), prefix="--selection_priority", doc=InputDocumentation(doc=": Selects what will be of highest priority when determining the origin of the sequence, default is score")), ToolInput(tag="in_search_eval", input_type=String(optional=True), prefix="--search_eval", doc=InputDocumentation(doc=": The E-value cutoff used in the HMMER search, high numbers may slow down the process, cannot be used with the --search_score option, default is to use score cutoff, not E-value")), ToolInput(tag="in_search_score", input_type=String(optional=True), prefix="--search_score", doc=InputDocumentation(doc=": The score cutoff used in the HMMER search, low numbers may slow down the process, cannot be used with the --search_eval option, default = 0")), ToolInput(tag="in_allow_single_domain", input_type=String(optional=True), prefix="--allow_single_domain", doc=InputDocumentation(doc=": Allow inclusion of sequences that only find a single domain, given that they meet the given E-value and score thresholds, on with parameters 1e-9,0 by default")), ToolInput(tag="in_allow_reorder", input_type=String(optional=True), prefix="--allow_reorder", doc=InputDocumentation(doc=": Allows profiles to be in the wrong order on extracted sequences, off (F) by default")), ToolInput(tag="in_complement", input_type=String(optional=True), prefix="--complement", doc=InputDocumentation(doc=": Checks both DNA strands against the database, creating reverse complements, on (T) by default")), ToolInput(tag="in_cpu", input_type=String(optional=True), prefix="--cpu", doc=InputDocumentation(doc=": the number of CPU threads to use, default is 1")), ToolInput(tag="in_multi_thread", input_type=String(optional=True), prefix="--multi_thread", doc=InputDocumentation(doc=": Multi-thread the HMMER-search, on (T) if number of CPUs (--cpu option > 1), else off (F) by default")), ToolInput(tag="in_heuristics", input_type=String(optional=True), prefix="--heuristics", doc=InputDocumentation(doc=": Selects whether to use HMMER's heuristic filtering, off (F) by default")), ToolInput(tag="in_n_hmmer", input_type=String(optional=True), prefix="--nhmmer", doc=InputDocumentation(doc=": Selects whether to use nhmmer instead of hmmsearch for HMMER searches, off (F) by default")), ToolInput(tag="in_summary", input_type=String(optional=True), prefix="--summary", doc=InputDocumentation(doc=": Summary of results output, on (T) by default")), ToolInput(tag="in_graphical", input_type=String(optional=True), prefix="--graphical", doc=InputDocumentation(doc=": 'Graphical' output, on (T) by default")), ToolInput(tag="in_fast_a", input_type=String(optional=True), prefix="--fasta", doc=InputDocumentation(doc=": FASTA-format output of extracted ITS sequences, on (T) by default")), ToolInput(tag="in_preserve", input_type=String(optional=True), prefix="--preserve", doc=InputDocumentation(doc=": Preserve sequence headers in input file instead of printing out ITSx headers, off (F) by default")), ToolInput(tag="in_save_regions", input_type=String(optional=True), prefix="--save_regions", doc=InputDocumentation(doc=": A comma separated list of regions to output separate FASTA files for, 'ITS1,ITS2' by default")), ToolInput(tag="in_anchor", input_type=String(optional=True), prefix="--anchor", doc=InputDocumentation(doc=": Saves an additional number of bases before and after each extracted region. If set to 'HMM' all bases matching the corresponding HMM will be output, default = 0")), ToolInput(tag="in_require_anchor", input_type=String(optional=True), prefix="--require_anchor", doc=InputDocumentation(doc=": Requires the complete anchor to found in order to be included in the output sequences (see --anchor above). Cannot be used together with the --anchor option, default = 0")), ToolInput(tag="in_only_full", input_type=String(optional=True), prefix="--only_full", doc=InputDocumentation(doc=": If true, output is limited to full-length regions, off (F) by default")), ToolInput(tag="in_partial", input_type=String(optional=True), prefix="--partial", doc=InputDocumentation(doc=": Saves additional FASTA-files for full and partial ITS sequences longer than the specified cutoff, default = 0 (off)")), ToolInput(tag="in_concat", input_type=String(optional=True), prefix="--concat", doc=InputDocumentation(doc=": Saves a FASTA-file with concatenated ITS sequences (with 5.8S removed), off (F) by default")), ToolInput(tag="in_min_len", input_type=String(optional=True), prefix="--minlen", doc=InputDocumentation(doc=": Minimum length the ITS regions must be to be outputted in the concatenated file (see above), default = 0")), ToolInput(tag="in_positions", input_type=String(optional=True), prefix="--positions", doc=InputDocumentation(doc=": Table format output containing the positions ITS sequences were found in, on (T) by default")), ToolInput(tag="in_table", input_type=String(optional=True), prefix="--table", doc=InputDocumentation(doc=": Table format output of sequences containing probable ITS sequences, off (F) by default")), ToolInput(tag="in_not_found", input_type=String(optional=True), prefix="--not_found", doc=InputDocumentation(doc=": Saves a list of non-found entries, on (T) by default")), ToolInput(tag="in_detailed_results", input_type=String(optional=True), prefix="--detailed_results", doc=InputDocumentation(doc=": Saves a tab-separated list of all results, off (F) by default")), ToolInput(tag="in_truncate", input_type=String(optional=True), prefix="--truncate", doc=InputDocumentation(doc=": Truncates the FASTA output to only contain the actual ITS sequences found, on (T) by default")), ToolInput(tag="in_silent", input_type=String(optional=True), prefix="--silent", doc=InputDocumentation(doc=": Supresses printing progress info to stderr, off (F) by default")), ToolInput(tag="in_graph_scale", input_type=String(optional=True), prefix="--graph_scale", doc=InputDocumentation(doc=": Sets the scale of the graph output, if value is zero, a percentage view is shown, default = 0")), ToolInput(tag="in_save_raw", input_type=String(optional=True), prefix="--save_raw", doc=InputDocumentation(doc=": Saves all raw data for searches etc. instead of removing it on finish, off (F) by default")), ToolInput(tag="in_temp", input_type=String(optional=True), prefix="--temp", doc=InputDocumentation(doc=": Custom directory to put the temporary files in")), ToolInput(tag="in_help", input_type=Boolean(optional=True), prefix="--help", doc=InputDocumentation(doc=": displays this help message")), ToolInput(tag="in_bugs", input_type=Boolean(optional=True), prefix="--bugs", doc=InputDocumentation(doc=": displays the bug fixes and known bugs in this version of ITSx")), ToolInput(tag="in_license", input_type=Boolean(optional=True), prefix="--license", doc=InputDocumentation(doc=": displays licensing information"))], outputs=[ToolOutput(tag="out_base_names_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_base_names_output", type_hint=File()), doc=OutputDocumentation(doc=": Base for the names of output file(s)")), ToolOutput(tag="out_date", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_date", type_hint=File()), doc=OutputDocumentation(doc=": Adds a date and time stamp to the output directory, off (F) by default"))], container="quay.io/biocontainers/itsx:1.1.3--0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Itsx_V0_1_0().translate("wdl")

