from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Float, Int, Boolean, String

Mmseqs_Prefilter_V0_1_0 = CommandToolBuilder(tool="mmseqs_prefilter", base_command=["mmseqs", "prefilter"], inputs=[ToolInput(tag="in_seed_sub_mat", input_type=File(optional=True), prefix="--seed-sub-mat", doc=InputDocumentation(doc="Substitution matrix file for k-mer generation [nucl:nucleotide.out,aa:VTML80.out]")), ToolInput(tag="in_sensitivity_faster_fast", input_type=Float(optional=True), prefix="-s", doc=InputDocumentation(doc="Sensitivity: 1.0 faster; 4.0 fast; 7.5 sensitive [4.000]")), ToolInput(tag="in_kmer_length_set", input_type=Int(optional=True), prefix="-k", doc=InputDocumentation(doc="k-mer length (0: automatically set to optimum) [0]")), ToolInput(tag="in_k_score", input_type=Int(optional=True), prefix="--k-score", doc=InputDocumentation(doc="k-mer threshold for generating similar k-mer lists [2147483647]")), ToolInput(tag="in_alph_size", input_type=Int(optional=True), prefix="--alph-size", doc=InputDocumentation(doc="Alphabet size (range 2-21) [nucl:5,aa:21]")), ToolInput(tag="in_max_seqs", input_type=Int(optional=True), prefix="--max-seqs", doc=InputDocumentation(doc="Maximum results per query sequence allowed to pass the prefilter (affects sensitivity) [300]")), ToolInput(tag="in_split", input_type=Int(optional=True), prefix="--split", doc=InputDocumentation(doc="Split input into N equally distributed chunks. 0: set the best split automatically [0]")), ToolInput(tag="in_split_mode", input_type=Int(optional=True), prefix="--split-mode", doc=InputDocumentation(doc="0: split target db; 1: split query db; 2: auto, depending on main memory [2]")), ToolInput(tag="in_split_memory_limit", input_type=Int(optional=True), prefix="--split-memory-limit", doc=InputDocumentation(doc="Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to all available system memory [0]")), ToolInput(tag="in_comp_bias_corr", input_type=Int(optional=True), prefix="--comp-bias-corr", doc=InputDocumentation(doc="Correct for locally biased amino acid composition (range 0-1) [1]")), ToolInput(tag="in_diag_score", input_type=Boolean(optional=True), prefix="--diag-score", doc=InputDocumentation(doc="Use ungapped diagonal scoring during prefilter [1]")), ToolInput(tag="in_exact_km_er_matching", input_type=Int(optional=True), prefix="--exact-kmer-matching", doc=InputDocumentation(doc="Extract only exact k-mers for matching (range 0-1) [0]")), ToolInput(tag="in_mask", input_type=Int(optional=True), prefix="--mask", doc=InputDocumentation(doc="Mask sequences in k-mer stage: 0: w/o low complexity masking, 1: with low complexity masking [1]")), ToolInput(tag="in_mask_lower_case", input_type=Int(optional=True), prefix="--mask-lower-case", doc=InputDocumentation(doc="Lowercase letters will be excluded from k-mer search 0: include region, 1: exclude region [0]")), ToolInput(tag="in_min_un_gapped_score", input_type=Int(optional=True), prefix="--min-ungapped-score", doc=InputDocumentation(doc="Accept only matches with ungapped alignment score above threshold [15]")), ToolInput(tag="in_add_self_matches", input_type=Boolean(optional=True), prefix="--add-self-matches", doc=InputDocumentation(doc="Artificially add entries of queries with themselves (for clustering) [0]")), ToolInput(tag="in_spaced_km_er_mode", input_type=Int(optional=True), prefix="--spaced-kmer-mode", doc=InputDocumentation(doc="0: use consecutive positions in k-mers; 1: use spaced k-mers [1]")), ToolInput(tag="in_spaced_km_er_pattern", input_type=String(optional=True), prefix="--spaced-kmer-pattern", doc=InputDocumentation(doc="User-specified spaced k-mer pattern []")), ToolInput(tag="in_local_tmp", input_type=File(optional=True), prefix="--local-tmp", doc=InputDocumentation(doc="Path where some of the temporary files will be created []")), ToolInput(tag="in_list_matches_fraction", input_type=Float(optional=True), prefix="-c", doc=InputDocumentation(doc="List matches above this fraction of aligned (covered) residues (see --cov-mode) [0.000]")), ToolInput(tag="in_cov_mode", input_type=Int(optional=True), prefix="--cov-mode", doc=InputDocumentation(doc="0: coverage of query and target\n1: coverage of target\n2: coverage of query\n3: target seq. length has to be at least x% of query length\n4: query seq. length has to be at least x% of target length\n5: short seq. needs to be at least x% of the other seq. length [0]")), ToolInput(tag="in_pc_a", input_type=Float(optional=True), prefix="--pca", doc=InputDocumentation(doc="Pseudo count admixture strength [1.000]")), ToolInput(tag="in_pcb", input_type=Float(optional=True), prefix="--pcb", doc=InputDocumentation(doc="Pseudo counts: Neff at half of maximum admixture (range 0.0-inf) [1.500]")), ToolInput(tag="in_sub_mat", input_type=File(optional=True), prefix="--sub-mat", doc=InputDocumentation(doc="Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]")), ToolInput(tag="in_max_seq_len", input_type=Int(optional=True), prefix="--max-seq-len", doc=InputDocumentation(doc="Maximum sequence length [65535]")), ToolInput(tag="in_db_load_mode", input_type=Int(optional=True), prefix="--db-load-mode", doc=InputDocumentation(doc="Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch [0]")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of CPU-cores used (all by default) [2]")), ToolInput(tag="in_compressed", input_type=Int(optional=True), prefix="--compressed", doc=InputDocumentation(doc="Write compressed output [0]")), ToolInput(tag="in_verbosity_level_errors", input_type=Int(optional=True), prefix="-v", doc=InputDocumentation(doc="Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]"))], outputs=[ToolOutput(tag="out_seed_sub_mat", output_type=File(optional=True), selector=InputSelector(input_to_select="in_seed_sub_mat", type_hint=File()), doc=OutputDocumentation(doc="Substitution matrix file for k-mer generation [nucl:nucleotide.out,aa:VTML80.out]")), ToolOutput(tag="out_sub_mat", output_type=File(optional=True), selector=InputSelector(input_to_select="in_sub_mat", type_hint=File()), doc=OutputDocumentation(doc="Substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]"))], container="quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Mmseqs_Prefilter_V0_1_0().translate("wdl")

