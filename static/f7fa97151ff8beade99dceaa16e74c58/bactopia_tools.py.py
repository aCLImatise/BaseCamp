from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Directory, Boolean, String

Bactopia_Tools_Py_V0_1_0 = CommandToolBuilder(tool="bactopia_tools.py", base_command=["bactopia-tools.py"], inputs=[ToolInput(tag="in_bac_topia", input_type=Directory(optional=True), prefix="--bactopia", doc=InputDocumentation(doc="Directory where Bactopia repository is stored.")), ToolInput(tag="in_force_rebuild", input_type=Boolean(optional=True), prefix="--force_rebuild", doc=InputDocumentation(doc="Force overwrite of existing Conda environments.")), ToolInput(tag="in_skip_cond_a", input_type=Boolean(optional=True), prefix="--skip_conda", doc=InputDocumentation(doc="Skip all things conda related.")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Print debug related text.")), ToolInput(tag="in_silent", input_type=Boolean(optional=True), prefix="--silent", doc=InputDocumentation(doc="Only critical errors will be printed.")), ToolInput(tag="in_var_5", input_type=String(), position=0, doc=InputDocumentation(doc="Functional annotation using orthologous groups")), ToolInput(tag="in_var_6", input_type=String(), position=1, doc=InputDocumentation(doc="Pairwise average nucleotide identity")), ToolInput(tag="in_var_7", input_type=String(), position=2, doc=InputDocumentation(doc="Identify marker genes and assign taxonomic classifications")), ToolInput(tag="in_var_8", input_type=String(), position=3, doc=InputDocumentation(doc="in silico typing of the H. influenzae cap locus")), ToolInput(tag="in_var_9", input_type=String(), position=4, doc=InputDocumentation(doc="Identify positions of insertion sites")), ToolInput(tag="in_var_10", input_type=String(), position=5, doc=InputDocumentation(doc="Trees based on Mash distances")), ToolInput(tag="in_var_11", input_type=String(), position=6, doc=InputDocumentation(doc="16s assembly, alignment and tree")), ToolInput(tag="in_var_12", input_type=String(), position=7, doc=InputDocumentation(doc="Pan-genome with optional core-genome tree")), ToolInput(tag="in_var_13", input_type=String(), position=8, doc=InputDocumentation(doc="Pan-genome with optional core-genome tree")), ToolInput(tag="in_var_14", input_type=String(), position=9, doc=InputDocumentation(doc="A report summarizing Bactopia project")), ToolInput(tag="in_var_15", input_type=String(), position=0, doc=InputDocumentation(doc="Functional annotation using orthologous groups")), ToolInput(tag="in_var_16", input_type=String(), position=1, doc=InputDocumentation(doc="Pairwise average nucleotide identity")), ToolInput(tag="in_var_17", input_type=String(), position=2, doc=InputDocumentation(doc="Identify marker genes and assign taxonomic classifications")), ToolInput(tag="in_var_18", input_type=String(), position=3, doc=InputDocumentation(doc="in silico typing of the H. influenzae cap locus")), ToolInput(tag="in_var_19", input_type=String(), position=4, doc=InputDocumentation(doc="Identify positions of insertion sites")), ToolInput(tag="in_var_20", input_type=String(), position=5, doc=InputDocumentation(doc="Trees based on Mash distances")), ToolInput(tag="in_var_21", input_type=String(), position=6, doc=InputDocumentation(doc="16s assembly, alignment and tree")), ToolInput(tag="in_var_22", input_type=String(), position=7, doc=InputDocumentation(doc="Pan-genome with optional core-genome tree")), ToolInput(tag="in_var_23", input_type=String(), position=8, doc=InputDocumentation(doc="Pan-genome with optional core-genome tree")), ToolInput(tag="in_var_24", input_type=String(), position=9, doc=InputDocumentation(doc="A report summarizing Bactopia project"))], outputs=[], container="quay.io/biocontainers/bactopia:1.6.4--0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bactopia_Tools_Py_V0_1_0().translate("wdl")

