!Command
command:
- planemo
- shed_update
positional:
- !Positional
  description: '% planemo shed_update --shed_target testtoolshed path/to/repo'
  position: 0
  name: shed.
  optional: false
- !Positional
  description: The lower-level ``shed_upload`` command should be used instead if the
  position: 0
  name: changes.
  optional: false
named:
- !Flag
  description: Output an XUnit report, useful for CI testing
  synonyms:
  - --report_xunit
  args: !SimpleFlagArg
    name: PATH
  optional: true
- !Flag
  description: "Recursively perform command for nested\nrepository directories."
  synonyms:
  - -r
  - --recursive
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "If multiple repositories are specified and an\nerror occurs stop immediately\
    \ instead of\nprocessing remaining repositories."
  synonyms:
  - --fail_fast
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Tool Shed repository owner (username).
  synonyms:
  - --owner
  args: !SimpleFlagArg
    name: TEXT
  optional: true
- !Flag
  description: "Tool Shed repository name (defaults to the\ninferred tool directory\
    \ name)."
  synonyms:
  - --name
  args: !SimpleFlagArg
    name: TEXT
  optional: true
- !Flag
  description: "E-mail for Tool Shed auth (required unless\nshed_key is specified)."
  synonyms:
  - --shed_email
  args: !SimpleFlagArg
    name: TEXT
  optional: true
- !Flag
  description: "API key for Tool Shed access. An API key is\nrequired unless e-mail\
    \ and password is\nspecified. This key can be specified with\neither --shed_key\
    \ or --shed_key_from_env."
  synonyms:
  - --shed_key
  args: !SimpleFlagArg
    name: TEXT
  optional: true
- !Flag
  description: "Environment variable to read API key for Tool\nShed access from."
  synonyms:
  - --shed_key_from_env
  args: !SimpleFlagArg
    name: TEXT
  optional: true
- !Flag
  description: "Password for Tool Shed auth (required unless\nshed_key is specified)."
  synonyms:
  - --shed_password
  args: !SimpleFlagArg
    name: TEXT
  optional: true
- !Flag
  description: "Tool Shed to target (this can be 'toolshed',\n'testtoolshed', 'local'\
    \ (alias for\nhttp://localhost:9009/), an arbitrary url or\nmappings defined ~/.planemo.yml."
  synonyms:
  - -t
  - --shed_target
  args: !SimpleFlagArg
    name: TEXT
  optional: true
- !Flag
  description: Commit message for tool shed upload.
  synonyms:
  - -m
  - --message
  args: !SimpleFlagArg
    name: TEXT
  optional: true
- !Flag
  description: "If a repository cannot be found for the\nspecified user/repo name\
    \ pair, then\nautomatically create the repository in the\ntoolshed."
  synonyms:
  - --force_repository_creation
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Skip uploading if the shed_diff detects there\nwould be no 'difference'\
    \ (only attributes\npopulated by the shed would be updated.)"
  synonyms:
  - --check_diff
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Skip upload contents as part of operation, only\nupdate metadata."
  synonyms:
  - --skip_upload
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Skip metadata update as part of operation, only\nupload new contents."
  synonyms:
  - --skip_metadata
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: Show this message and exit.
  synonyms:
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "Usage: planemo shed_update [OPTIONS] PROJECT\n\n  Update Tool Shed repository.\n\
  \n  By default this command will update both repository metadata from\n  ``.shed.yml``\
  \ and upload new contents from the repository directory.\n\n      % planemo shed_update\n\
  \n  This will update the main tool shed with the repository defined by a\n  ``.shed.yml``\
  \ file in the current working directory. Both the location of\n  the ``.shed.yml``\
  \ and the tool shed to upload to can be easily configured.\n  For instance, the\
  \ following command can be used if ``.shed.yml`` if\n  contained in ``path/to/repo``\
  \ and the desire is to update the test tool\n  shed.\n\n      % planemo shed_update\
  \ --shed_target testtoolshed path/to/repo\n\n  Another important option is ``--check_diff``\
  \ - this doesn't affect the\n  updating of shed metadata but it will check for differences\
  \ before\n  uploading new contents to the tool shed. This may important because\
  \ the\n  tool shed will automatically populate certain attributes in tool shed\n\
  \  artifact files (such as ``tool_dependencies.xml``) and this may cause\n  unwanted\
  \ installable revisions to be created when there are no important\n  changes.\n\n\
  \  The lower-level ``shed_upload`` command should be used instead if the\n  repository\
  \ doesn't define complete metadata in a ``.shed.yml``.\n\nOptions:\n  --report_xunit\
  \ PATH          Output an XUnit report, useful for CI testing\n  -r, --recursive\
  \              Recursively perform command for nested\n                        \
  \       repository directories.\n  --fail_fast                  If multiple repositories\
  \ are specified and an\n                               error occurs stop immediately\
  \ instead of\n                               processing remaining repositories.\n\
  \  --owner TEXT                 Tool Shed repository owner (username).\n  --name\
  \ TEXT                  Tool Shed repository name (defaults to the\n           \
  \                    inferred tool directory name).\n  --shed_email TEXT       \
  \     E-mail for Tool Shed auth (required unless\n                             \
  \  shed_key is specified).\n  --shed_key TEXT              API key for Tool Shed\
  \ access. An API key is\n                               required unless e-mail and\
  \ password is\n                               specified. This key can be specified\
  \ with\n                               either --shed_key or --shed_key_from_env.\n\
  \  --shed_key_from_env TEXT     Environment variable to read API key for Tool\n\
  \                               Shed access from.\n  --shed_password TEXT      \
  \   Password for Tool Shed auth (required unless\n                             \
  \  shed_key is specified).\n  -t, --shed_target TEXT       Tool Shed to target (this\
  \ can be 'toolshed',\n                               'testtoolshed', 'local' (alias\
  \ for\n                               http://localhost:9009/), an arbitrary url\
  \ or\n                               mappings defined ~/.planemo.yml.\n  -m, --message\
  \ TEXT           Commit message for tool shed upload.\n  --force_repository_creation\
  \  If a repository cannot be found for the\n                               specified\
  \ user/repo name pair, then\n                               automatically create\
  \ the repository in the\n                               toolshed.\n  --check_diff\
  \                 Skip uploading if the shed_diff detects there\n              \
  \                 would be no 'difference' (only attributes\n                  \
  \             populated by the shed would be updated.)\n  --skip_upload        \
  \        Skip upload contents as part of operation, only\n                     \
  \          update metadata.\n  --skip_metadata              Skip metadata update\
  \ as part of operation, only\n                               upload new contents.\n\
  \  --help                       Show this message and exit.\n"
generated_using:
- --help
