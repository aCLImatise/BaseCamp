from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, File, String

Kmerfreq_Ha_V0_1_0 = CommandToolBuilder(tool="KmerFreq_HA", base_command=["KmerFreq_HA"], inputs=[ToolInput(tag="in_set_kmer_size", input_type=Int(optional=True), prefix="-k", doc=InputDocumentation(doc="Set kmer size(13~27), default=17.\nNote: kmer size should be set between 13 and 27.")), ToolInput(tag="in_set_read_length", input_type=Int(optional=True), prefix="-r", doc=InputDocumentation(doc="Set read length used to get kmers, default=read's real length.\nNote: the max read length to get kmer frequency spectrum.")), ToolInput(tag="in_a", input_type=Int(optional=True), prefix="-a", doc=InputDocumentation(doc="Set ignored length of the beginning of a read, default=0.\nNote: set this option when sequencing quality is low in the beginning of reads.")), ToolInput(tag="in_d", input_type=Int(optional=True), prefix="-d", doc=InputDocumentation(doc="Set ignored length of the end of a read, default=0\nNote: set this option when sequencing quality is low in the end of reads.")), ToolInput(tag="in_set_total_number", input_type=Int(optional=True), prefix="-g", doc=InputDocumentation(doc="Set total bases number used to get kmers, default=all input bases.\nNote: when sequencing depth is too much, you can set this option, about 30X\ndata bases is preferred.")), ToolInput(tag="in_set_input_read", input_type=File(optional=True), prefix="-l", doc=InputDocumentation(doc="Set input read file list.\nNote: no default value, the address list of reads file, each reads files take a line.")), ToolInput(tag="in_set_output_prefix", input_type=String(optional=True), prefix="-p", doc=InputDocumentation(doc="Set the output prefix, default=output.\nNote: often use species name as prefix.")), ToolInput(tag="in_set_initial_size", input_type=Int(optional=True), prefix="-i", doc=InputDocumentation(doc="Set initial size of hash table, default=50000000.\nNote: this is the initial size, and program will enlarge the HashSet memory\nspace (*2 each time) when memeory is insufficient.")), ToolInput(tag="in_set_thread_number", input_type=Int(optional=True), prefix="-t", doc=InputDocumentation(doc="Set thread number, default=1.\nNote: the more thread number, the high speed, however, this should be less than\nthe number of CPU cores.")), ToolInput(tag="in_set_maximum_read", input_type=Int(optional=True), prefix="-L", doc=InputDocumentation(doc="Set maximum read length, default=100.\nNote: program will alloc memeory buffer base on read length, so you should set the\nmaximun read length in the read files.")), ToolInput(tag="in_set_use_filter", input_type=Int(optional=True), prefix="-f", doc=InputDocumentation(doc="Set whether use Bloom filter to reduce memory usage, 0:no; 1:yes; default=0.\nNote: reduce memeory usage by using Bloom filter to reduce kmer which frequency lower than(<=) 2.")), ToolInput(tag="in_set_bloom_size", input_type=Int(optional=True), prefix="-s", doc=InputDocumentation(doc="Set the Bloom array size, default=1000000000.\nNote: you can set by this formula:(genome_size+genome_size*coverage*error_rate*kmer_size)*5/4.")), ToolInput(tag="in_set_kmerfreq_analysis", input_type=Int(optional=True), prefix="-b", doc=InputDocumentation(doc="Set the kmer-freq analysis divide into how many steps(=1, 2, 4, 8), default =1.\nNote: the more step, the less memeory usage, but need more time.")), ToolInput(tag="in_usage__kmerfreqha", input_type=Int(), position=0, doc=InputDocumentation(doc="Usage:  KmerFreq_HA [OPTION]"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Kmerfreq_Ha_V0_1_0().translate("wdl", allow_empty_container=True)

