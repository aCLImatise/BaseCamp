from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Directory, File, String

Msconvert_V0_1_0 = CommandToolBuilder(tool="msconvert", base_command=["msconvert"], inputs=[ToolInput(tag="in_arg_specify_text", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc="[ --filelist ] arg           : specify text file containing filenames")), ToolInput(tag="in_o", input_type=Directory(optional=True), prefix="-o", doc=InputDocumentation(doc="[ --outdir ] arg (=.)        : set output directory ('-' for stdout) [.]")), ToolInput(tag="in_arg_configuration_file", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="[ --config ] arg             : configuration file (optionName=value)")), ToolInput(tag="in_outfile", input_type=File(optional=True), prefix="--outfile", doc=InputDocumentation(doc=": Override the name of output file.")), ToolInput(tag="in_arg_set_extension", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc="[ --ext ] arg                : set extension for output files\n[mzML|mzXML|mgf|txt|mz5]")), ToolInput(tag="in_mzm_l", input_type=Boolean(optional=True), prefix="--mzML", doc=InputDocumentation(doc=": write mzML format [default]")), ToolInput(tag="in_mz_xml", input_type=Boolean(optional=True), prefix="--mzXML", doc=InputDocumentation(doc=": write mzXML format")), ToolInput(tag="in_mz_five", input_type=Boolean(optional=True), prefix="--mz5", doc=InputDocumentation(doc=": write mz5 format")), ToolInput(tag="in_mgf", input_type=Boolean(optional=True), prefix="--mgf", doc=InputDocumentation(doc=": write Mascot generic format")), ToolInput(tag="in_text", input_type=Boolean(optional=True), prefix="--text", doc=InputDocumentation(doc=": write ProteoWizard internal text format")), ToolInput(tag="in_ms_one", input_type=Boolean(optional=True), prefix="--ms1", doc=InputDocumentation(doc=": write MS1 format")), ToolInput(tag="in_cms_one", input_type=Boolean(optional=True), prefix="--cms1", doc=InputDocumentation(doc=": write CMS1 format")), ToolInput(tag="in_ms_two", input_type=Boolean(optional=True), prefix="--ms2", doc=InputDocumentation(doc=": write MS2 format")), ToolInput(tag="in_cms_two", input_type=Boolean(optional=True), prefix="--cms2", doc=InputDocumentation(doc=": write CMS2 format")), ToolInput(tag="in_display_detailed_information", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="[ --verbose ]                : display detailed progress information")), ToolInput(tag="in_set_default_bitprecision", input_type=Boolean(optional=True), prefix="--64", doc=InputDocumentation(doc=": set default binary encoding to 64-bit\nprecision [default]")), ToolInput(tag="in_set_default_bit", input_type=Boolean(optional=True), prefix="--32", doc=InputDocumentation(doc=": set default binary encoding to 32-bit")), ToolInput(tag="in_mz_three_two", input_type=Boolean(optional=True), prefix="--mz32", doc=InputDocumentation(doc=": encode m/z values in 32-bit precision")), ToolInput(tag="in_in_ten_six_four", input_type=Boolean(optional=True), prefix="--inten64", doc=InputDocumentation(doc=": encode intensity values in 64-bit precision")), ToolInput(tag="in_in_ten_three_two", input_type=Boolean(optional=True), prefix="--inten32", doc=InputDocumentation(doc=": encode intensity values in 32-bit precision\n[default]")), ToolInput(tag="in_no_index", input_type=Boolean(optional=True), prefix="--noindex", doc=InputDocumentation(doc=": do not write index")), ToolInput(tag="in_arg_filename_contact", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="[ --contactInfo ] arg        : filename for contact info")), ToolInput(tag="in_use_zlib_compression", input_type=Boolean(optional=True), prefix="-z", doc=InputDocumentation(doc="[ --zlib ]                   : use zlib compression for binary data")), ToolInput(tag="in_num_press_linear", input_type=Boolean(optional=True), prefix="--numpressLinear", doc=InputDocumentation(doc="[=arg(=2e-09)] : use numpress linear prediction compression\nfor binary mz and rt data (relative accuracy\nloss will not exceed given tolerance arg,\nunless set to 0)")), ToolInput(tag="in_num_press_pic", input_type=Boolean(optional=True), prefix="--numpressPic", doc=InputDocumentation(doc=": use numpress positive integer compression\nfor binary intensities (absolute accuracy\nloss will not exceed 0.5)")), ToolInput(tag="in_num_press_sl_of", input_type=Boolean(optional=True), prefix="--numpressSlof", doc=InputDocumentation(doc="[=arg(=0.0002)]  : use numpress short logged float compression\nfor binary intensities (relative accuracy\nloss will not exceed given tolerance arg,\nunless set to 0)")), ToolInput(tag="in_same_numpresslinear_", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="[ --numpressAll ]            : same as --numpressLinear --numpressSlof\n(see https://github.com/fickludd/ms-numpress\nfor more info)")), ToolInput(tag="in_gzip_entire_file", input_type=File(optional=True), prefix="-g", doc=InputDocumentation(doc="[ --gzip ]                   : gzip entire output file (adds .gz to\nfilename)")), ToolInput(tag="in_filter", input_type=String(optional=True), prefix="--filter", doc=InputDocumentation(doc=": add a spectrum list filter")), ToolInput(tag="in_merge", input_type=Boolean(optional=True), prefix="--merge", doc=InputDocumentation(doc=": create a single output file from multiple\ninput files by merging file-level metadata\nand concatenating spectrum lists")), ToolInput(tag="in_simas_spectra", input_type=Boolean(optional=True), prefix="--simAsSpectra", doc=InputDocumentation(doc=": write selected ion monitoring as spectra,\nnot chromatograms")), ToolInput(tag="in_srm_as_spectra", input_type=Boolean(optional=True), prefix="--srmAsSpectra", doc=InputDocumentation(doc=": write selected reaction monitoring as\nspectra, not chromatograms")), ToolInput(tag="in_combine_ion_mobility_spectra", input_type=Boolean(optional=True), prefix="--combineIonMobilitySpectra", doc=InputDocumentation(doc=": write all drift bins/scans in a frame/block\nas one spectrum instead of individual spectra")), ToolInput(tag="in_accept_zero_length_spectra", input_type=File(optional=True), prefix="--acceptZeroLengthSpectra", doc=InputDocumentation(doc=": some vendor readers have an efficient way\nof filtering out empty spectra, but it takes\nmore time to open the file")), ToolInput(tag="in_ignore_unknown_instrument_error", input_type=Boolean(optional=True), prefix="--ignoreUnknownInstrumentError", doc=InputDocumentation(doc=": if true, if an instrument cannot be\ndetermined from a vendor file, it will not be\nan error")), ToolInput(tag="in_precision", input_type=String(), position=0, doc=InputDocumentation(doc="--mz64                          : encode m/z values in 64-bit precision "))], outputs=[ToolOutput(tag="out_o", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_o", type_hint=File()), doc=OutputDocumentation(doc="[ --outdir ] arg (=.)        : set output directory ('-' for stdout) [.]")), ToolOutput(tag="out_outfile", output_type=File(optional=True), selector=InputSelector(input_to_select="in_outfile", type_hint=File()), doc=OutputDocumentation(doc=": Override the name of output file.")), ToolOutput(tag="out_gzip_entire_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_gzip_entire_file", type_hint=File()), doc=OutputDocumentation(doc="[ --gzip ]                   : gzip entire output file (adds .gz to\nfilename)")), ToolOutput(tag="out_accept_zero_length_spectra", output_type=File(optional=True), selector=InputSelector(input_to_select="in_accept_zero_length_spectra", type_hint=File()), doc=OutputDocumentation(doc=": some vendor readers have an efficient way\nof filtering out empty spectra, but it takes\nmore time to open the file"))], container="quay.io/biocontainers/proteowizard:3.0.9992", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Msconvert_V0_1_0().translate("wdl")

