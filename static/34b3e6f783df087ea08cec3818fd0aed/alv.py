from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Boolean, Int

Alv_V0_1_0 = CommandToolBuilder(tool="alv", base_command=["alv"], inputs=[ToolInput(tag="in_format", input_type=String(optional=True), prefix="--format", doc=InputDocumentation(doc="Specify what sequence type to assume. Be specific if\nthe file is not recognized automatically. When reading\nfrom stdin, the format is always guessed to be FASTA.\nDefault: guess")), ToolInput(tag="in_type", input_type=String(optional=True), prefix="--type", doc=InputDocumentation(doc="Specify what sequence type to assume. Coding DNA/RNA\nis assumed with the 'codon' option. Guessing the\nformat only chooses between 'aa' and 'dna', but\nassumes the standard genetic code. Default: guess")), ToolInput(tag="in_glimpse", input_type=Boolean(optional=True), prefix="--glimpse", doc=InputDocumentation(doc="Give a glimpse of an alignment. If the alignment fits\nwithout any scrolling and without line breaks, then\njust view the alignment. Otherwise, identify a\nconserved part of the MSA and show a random sample of\nthe sequences that fits the screen.")), ToolInput(tag="in_color_scheme", input_type=String(optional=True), prefix="--color-scheme", doc=InputDocumentation(doc="Color scheme for AA and coding DNA/RNA. The clustal\ncoloring scheme is an approximation of the original,\ndue to the limited color choices for consoles. The\n'hydrophobicity' gives red to hydrophobic, blue to\npolar, and green to charged residues. Default: clustal")), ToolInput(tag="in_color_mode", input_type=String(optional=True), prefix="--color-mode", doc=InputDocumentation(doc="With a dark terminal, you probably want to set the\ncolor mode to 'dark'.")), ToolInput(tag="in_code", input_type=String(optional=True), prefix="--code", doc=InputDocumentation(doc="Genetic code to use, based on NCBI's code list, see\ndetails below. Show alternatives with the --list-codes\noption. Default: 1.")), ToolInput(tag="in_dotted", input_type=Boolean(optional=True), prefix="--dotted", doc=InputDocumentation(doc="Let the first sequence in output alignment be a\ntemplate and, for other sequences, show identity to\ntemplate using a period. Useful for alignments with\nhigh similarity.")), ToolInput(tag="in_list_codes", input_type=Boolean(optional=True), prefix="--list-codes", doc=InputDocumentation(doc="List the available genetic codes and exit.")), ToolInput(tag="in_width", input_type=String(optional=True), prefix="--width", doc=InputDocumentation(doc="Width of alignment blocks. Defaults to terminal width\nminus accession width, essentially.")), ToolInput(tag="in_keep_colors_when_redirecting", input_type=Boolean(optional=True), prefix="--keep-colors-when-redirecting", doc=InputDocumentation(doc="Do not strip colors when redirecting to stdout, or\nsimilar. In particular useful with the command 'less\n-R'.")), ToolInput(tag="in_pipe_to_less", input_type=Boolean(optional=True), prefix="--pipe-to-less", doc=InputDocumentation(doc="Do not break the alignment into blocks. Implies -k.\nSuitable when piping to commands like 'less -RS'.")), ToolInput(tag="in_info", input_type=Boolean(optional=True), prefix="--info", doc=InputDocumentation(doc="Append basic information about the alignment at the")), ToolInput(tag="in_cite", input_type=Boolean(optional=True), prefix="--cite", doc=InputDocumentation(doc="Write citation example: plain text and a BibTeX item.")), ToolInput(tag="in_method", input_type=Boolean(optional=True), prefix="--method", doc=InputDocumentation(doc="Write a suggested text to add to a methods section.")), ToolInput(tag="in_random_accessions", input_type=String(optional=True), prefix="--random-accessions", doc=InputDocumentation(doc="Only view a random sample of the alignment sequences.")), ToolInput(tag="in_sorting", input_type=String(optional=True), prefix="--sorting", doc=InputDocumentation(doc="Sort the sequences as given in the infile or\nalphabetically (by accession). Default: infile")), ToolInput(tag="in_sort_by_id", input_type=String(optional=True), prefix="--sort-by-id", doc=InputDocumentation(doc="Sort the output alignment by similarity (percent\nidentity) to named sequence. Overrides -s.")), ToolInput(tag="in_sorting_order", input_type=String(optional=True), prefix="--sorting-order", doc=InputDocumentation(doc="Comma-separated list of accessions. Sequences will be\npresented in this order. Also note that one can choose\nwhich sequences to present with this opion. Overrides\n-s and -si.")), ToolInput(tag="in_select_matching", input_type=String(optional=True), prefix="--select-matching", doc=InputDocumentation(doc="Only show sequences with accessions containing\nACCESSION_PATTERN.")), ToolInput(tag="in_majority", input_type=Boolean(optional=True), prefix="--majority", doc=InputDocumentation(doc="Only color those column where the most common amino\nacid is found in 50 percent of sequences.")), ToolInput(tag="in_no_indels", input_type=Boolean(optional=True), prefix="--no-indels", doc=InputDocumentation(doc="Only color column without indels.")), ToolInput(tag="in_as", input_type=Int(optional=True), prefix="-as", doc=InputDocumentation(doc="INT, --acc-substring INT INT\nSpecify what substring of an accession to keep. '-as\n10 15' discards all but position 10 to 14 in any\naccession.")), ToolInput(tag="in_acc_abbreviate", input_type=String(optional=True), prefix="--acc-abbreviate", doc=InputDocumentation(doc="Keep only the first N and last N characters of the\naccession\n")), ToolInput(tag="in_in_file", input_type=String(), position=0, doc=InputDocumentation(doc="The infile is the path to a file, or '-' if reading\nfrom stdin.")), ToolInput(tag="in_end_dot", input_type=String(), position=0, doc=InputDocumentation(doc="-j, --just-info       Write basic information about the alignment and exit."))], outputs=[], container="quay.io/biocontainers/alv:1.5.1--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Alv_V0_1_0().translate("wdl")

