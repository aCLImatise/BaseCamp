&id001 !Command
positional: []
named:
- !Flag
  description: Path to directory containing *.fasta files for input to the core pipeline  [required]
  synonyms:
  - -f
  - --fasta-dir
  args: !SimpleFlagArg
    name: PATH
  optional: true
- !Flag
  description: Root directory to store all output files. If this directory already
    exists, the pipeline will attempt to skip the Prokka step by reading in the existing
    Prokka output directory, but will overwrite all other existing result files. [required]
  synonyms:
  - -o
  - --outdir
  args: !SimpleFlagArg
    name: PATH
  optional: true
- !Flag
  description: Number of CPUs to dedicate to parallelizable steps of the pipeline.
    Will take all available CPUs - 1 by default.
  synonyms:
  - -n
  - --n-cpu
  args: !SimpleFlagArg
    name: INTEGER
  optional: true
- !Flag
  description: Number of CPUs for the representative medoid picking step (if enabled).
    You will need substantial RAM per CPU.
  synonyms:
  - --n-cpu-medoid
  args: !SimpleFlagArg
    name: INTEGER
  optional: true
- !Flag
  description: Sets the mmseqs cluster parameter "--min-seq- id". Defaults to 0.95.
  synonyms:
  - -m
  - --min-seq-id
  args: !SimpleFlagArg
    name: FLOAT
  optional: true
- !Flag
  description: Sets the mmseqs cluster coverage parameter "-c" directly. Defaults
    to 0.95, which is the recommended setting.
  synonyms:
  - -c
  - --coverage-length
  args: !SimpleFlagArg
    name: FLOAT
  optional: true
- !Flag
  description: This setting will identify the representative medoid nucleotide sequence
    for each core cluster. Enabling this will increase computation time considerably.
    Note that this parameter has no effect on the number of core clusters detected.
  synonyms:
  - --medoid-repseqs
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Generate pairwise comparisons of all core genomes. This setting allows
    for viewing an interactive network chart which visualizes core genome relatedness.
  synonyms:
  - --pairwise
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Set this flag to enable more verbose logging.
  synonyms:
  - -v
  - --verbose
  args: !EmptyFlagArg {}
  optional: true
command:
- centreseq
- core
parent: &id002 !Command
  positional: []
  named: []
  command:
  - centreseq
  parent:
  subcommands:
  - *id001
  - !Command
    positional: []
    named:
    - !Flag
      description: Path to your centreseq output directory [required]
      synonyms:
      - -i
      - --indir
      args: !SimpleFlagArg
        name: PATH
      optional: true
    - !Flag
      description: Root directory to store all output files [required]
      synonyms:
      - -o
      - --outdir
      args: !SimpleFlagArg
        name: PATH
      optional: true
    - !Flag
      description: Name of the target cluster representative e.g. "Typhi.2299.BMH_00195"  [required]
      synonyms:
      - -c
      - --cluster_representative
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    command:
    - centreseq
    - extract
    parent: *id002
    subcommands: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag: !Flag
      description: Use this flag to print the version and exit.
      synonyms:
      - --version
      args: !EmptyFlagArg {}
      optional: true
    help_text: "Usage: centreseq extract [OPTIONS]\n\n  Given the path to the centreseq\
      \ core directory and the ID of a cluster\n  representative, will create a multi-FASTA\
      \ containing the sequences for all\n  members of that cluster. Generates both\
      \ an .ffn and .faa file.\n\nOptions:\n  -i, --indir PATH                Path\
      \ to your centreseq output directory\n                                  [required]\n\
      \n  -o, --outdir PATH               Root directory to store all output files\n\
      \                                  [required]\n\n  -c, --cluster_representative\
      \ TEXT\n                                  Name of the target cluster representative\n\
      \                                  e.g. \"Typhi.2299.BMH_00195\"  [required]\n\
      \n  --version                       Use this flag to print the version and exit.\n\
      \  --help                          Show this message and exit.\n"
    generated_using: &id003
    - --help
  - !Command
    positional: []
    named:
    - !Flag
      description: Path to a new line separated text file containing each Sample ID
        to target  [required]
      synonyms:
      - -i
      - --input-samples
      args: !SimpleFlagArg
        name: PATH
      optional: true
    - !Flag
      description: Path to summary report generated by the centreseq core command,
        i.e. summary_report.tsv  [required]
      synonyms:
      - -s
      - --summary-report
      args: !SimpleFlagArg
        name: PATH
      optional: true
    - !Flag
      description: Path to desired output file. If no value is provided, will create
        a new report in the same directory as the input summary report.
      synonyms:
      - -o
      - --outpath
      args: !SimpleFlagArg
        name: PATH
      optional: true
    command:
    - centreseq
    - subset
    parent: *id002
    subcommands: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: centreseq subset [OPTIONS]\n\n  Given an input text file of\
      \ Sample IDs and a summary report, will return a\n  filtered version of the\
      \ summary report for clusters that belong\n  exclusively in the input sample\
      \ ID list\n\nOptions:\n  -i, --input-samples PATH   Path to a new line separated\
      \ text file containing\n                             each Sample ID to target\
      \  [required]\n\n  -s, --summary-report PATH  Path to summary report generated\
      \ by the centreseq\n                             core command, i.e. summary_report.tsv\
      \  [required]\n\n  -o, --outpath PATH         Path to desired output file. If\
      \ no value is\n                             provided, will create a new report\
      \ in the same\n                             directory as the input summary report.\n\
      \n  --help                     Show this message and exit.\n"
    generated_using: *id003
  - !Command
    positional: []
    named:
    - !Flag
      description: Path to summary_report.csv file produced by the core pipeline  [required]
      synonyms:
      - -s
      - --summary-report
      args: !SimpleFlagArg
        name: PATH
      optional: true
    - !Flag
      description: Path to the Prokka output directory generated by the core pipeline  [required]
      synonyms:
      - -p
      - --prokka-dir
      args: !SimpleFlagArg
        name: PATH
      optional: true
    - !Flag
      description: Root directory to store all output files [required]
      synonyms:
      - -o
      - --outdir
      args: !SimpleFlagArg
        name: PATH
      optional: true
    - !Flag
      description: Filter summary report by n_members to the top nth percentile. Defaults
        to 99.0.
      synonyms:
      - -pct
      - --percentile
      args: !SimpleFlagArg
        name: FLOAT
      optional: true
    - !Flag
      description: Number of CPUs to dedicate to parallelizable steps of the pipeline.Will
        take all available CPUs - 1 if not specified.
      synonyms:
      - -n
      - --n-cpu
      args: !SimpleFlagArg
        name: INTEGER
      optional: true
    - !Flag
      description: Set this flag to enable more verbose logging.
      synonyms:
      - -v
      - --verbose
      args: !EmptyFlagArg {}
      optional: true
    command:
    - centreseq
    - tree
    parent: *id002
    subcommands: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag: !Flag
      description: Use this flag to print the version and exit.
      synonyms:
      - --version
      args: !EmptyFlagArg {}
      optional: true
    help_text: "Usage: centreseq tree [OPTIONS]\n\n  Processes centreseq core output\
      \ files to produce files that can be fed\n  into phylogenetic tree building\
      \ software.\n\nOptions:\n  -s, --summary-report PATH  Path to summary_report.csv\
      \ file produced by the\n                             core pipeline  [required]\n\
      \n  -p, --prokka-dir PATH      Path to the Prokka output directory generated\
      \ by\n                             the core pipeline  [required]\n\n  -o, --outdir\
      \ PATH          Root directory to store all output files\n                 \
      \            [required]\n\n  -pct, --percentile FLOAT   Filter summary report\
      \ by n_members to the top nth\n                             percentile. Defaults\
      \ to 99.0.\n\n  -n, --n-cpu INTEGER        Number of CPUs to dedicate to parallelizable\n\
      \                             steps of the pipeline.Will take all available\n\
      \                             CPUs - 1 if not specified.\n\n  -v, --verbose\
      \              Set this flag to enable more verbose logging.\n  --version  \
      \                Use this flag to print the version and exit.\n  --help    \
      \                 Show this message and exit.\n"
    generated_using: *id003
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag: !Flag
    description: Print the version and exit.
    synonyms:
    - --version
    args: !EmptyFlagArg {}
    optional: true
  help_text: "Usage: centreseq [OPTIONS] COMMAND [ARGS]...\n\n  centreseq builds an\
    \ annotated core genome using assemblies as input.\n\nOptions:\n  --version  Print\
    \ the version and exit.\n  --help     Show this message and exit.\n\nCommands:\n\
    \  core     Given an input directory containing assemblies, establishes a core\n\
    \           genome\n\n  extract  Helper tool to extract sequences from a particular\
    \ core cluster\n  subset   Subset summary_report.tsv to only samples of interest\n\
    \  tree     Produces output for phylogenetic tree software\n"
  generated_using: *id003
subcommands: []
help_flag: !Flag
  description: Show this message and exit.
  synonyms:
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: Use this flag to print the version and exit.
  synonyms:
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "Usage: centreseq core [OPTIONS]\n\n  Given an input directory containing\
  \ any number of assemblies (.fasta),\n  centreseq core will 1) annotate the genomes\
  \ with Prokka, 2) perform self-\n  clustering on each genome with MMSeqs2 linclust,\
  \ 3) concatenate the self-\n  clustered genomes into a single pan-genome, 4) cluster\
  \ the pan-genome with\n  MMSeqs2 linclust, establishing a core genome, 5) generate\
  \ helpful reports\n  to interrogate your dataset Note that if specified output directory\n\
  \  already exists, centreseq will search for an existing Prokka directory and\n\
  \  skip this step if possible.\n\nOptions:\n  -f, --fasta-dir PATH         Path\
  \ to directory containing *.fasta files for\n                               input\
  \ to the core pipeline  [required]\n\n  -o, --outdir PATH            Root directory\
  \ to store all output files. If\n                               this directory already\
  \ exists, the pipeline\n                               will attempt to skip the\
  \ Prokka step by reading\n                               in the existing Prokka\
  \ output directory, but\n                               will overwrite all other\
  \ existing result files.\n                               [required]\n\n  -n, --n-cpu\
  \ INTEGER          Number of CPUs to dedicate to parallelizable\n              \
  \                 steps of the pipeline. Will take all available\n             \
  \                  CPUs - 1 by default.\n\n  --n-cpu-medoid INTEGER       Number\
  \ of CPUs for the representative medoid\n                               picking\
  \ step (if enabled). You will need\n                               substantial RAM\
  \ per CPU.\n\n  -m, --min-seq-id FLOAT       Sets the mmseqs cluster parameter \"\
  --min-seq-\n                               id\". Defaults to 0.95.\n\n  -c, --coverage-length\
  \ FLOAT  Sets the mmseqs cluster coverage parameter \"-c\"\n                   \
  \            directly. Defaults to 0.95, which is the\n                        \
  \       recommended setting.\n\n  --medoid-repseqs             This setting will\
  \ identify the representative\n                               medoid nucleotide\
  \ sequence for each core\n                               cluster. Enabling this\
  \ will increase\n                               computation time considerably. Note\
  \ that this\n                               parameter has no effect on the number\
  \ of core\n                               clusters detected.\n\n  --pairwise   \
  \                Generate pairwise comparisons of all core\n                   \
  \            genomes. This setting allows for viewing an\n                     \
  \          interactive network chart which visualizes core\n                   \
  \            genome relatedness.\n\n  -v, --verbose                Set this flag\
  \ to enable more verbose logging.\n  --version                    Use this flag\
  \ to print the version and exit.\n  --help                       Show this message\
  \ and exit.\n"
generated_using: *id003
