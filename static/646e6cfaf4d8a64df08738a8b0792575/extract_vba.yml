!Command
positional: []
named: []
command:
- extract_vba
parent:
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "\e[1mNAME\e[0m\n    extract_vba - A utility to extract a VBA project from\
  \ an Excel 2007+ xlsm\n    file.\n\n\e[1mDESCRIPTION\e[0m\n    This utility is used\
  \ to extract the VBA project binary from an Excel 2007+\n    xlsm file. The VBA\
  \ project can then be added to an Excel::Writer::XLSX\n    file to enable it to\
  \ have macros.\n\n    An \"xlsm\" file is a version of an Excel \"xlsx\" file that\
  \ contains an\n    additional VBA project binary file. The \"xlsm\" file format\
  \ is a collection\n    of mainly XML files in a ZIP container.\n\n    The extracted\
  \ VBA project is an OLE Compound Document in binary format. It\n    is named \"\
  vbaProject.bin\" and is generally located in the \"xl\" directory\n    of the \"\
  xlsm\" file.\n\n    See the \"add_vba_project()\" section of the Excel::Writer::XLSX\n\
  \    documentation for more details.\n\n    Note: you can also extract the VBA project\
  \ from an \"xlsm\" file using the\n    standard Linux \"unzip\" command:\n\n   \
  \     unzip -j macro01.xlsm xl/vbaProject.bin\n\n    On Windows you can use any\
  \ suitable Unzip application.\n\n\e[1mSYNOPSIS\e[0m\n        $ extract_vba file.xlsm\n\
  \        Extracted 'vbaProject.bin' successfully\n\n        $ extract_vba -h # For\
  \ help.\n\n\e[1mOPTIONS\e[0m\n    \e[1m--help or -h\e[0m\n        Print the help\
  \ documentation.\n\n\e[1mAUTHOR\e[0m\n    John McNamara jmcnamara@cpan.org\n\n\e\
  [1mVERSION\e[0m\n    Version 0.01.\n\n\e[1mCOPYRIGHT\e[0m\n    (c) MMXV, John McNamara.\n\
  \n    All Rights Reserved. This program is free software. It may be used,\n    redistributed\
  \ and/or modified under the same terms as Perl itself.\n\n"
generated_using:
- --help
