from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Int, Float, Boolean

Updhunter_V0_1_0 = CommandToolBuilder(tool="UpdHunter", base_command=["UpdHunter"], inputs=[ToolInput(tag="in_in", input_type=File(optional=True), prefix="-in", doc=InputDocumentation(doc="Input VCF file of trio.")), ToolInput(tag="in_header_name_child", input_type=String(optional=True), prefix="-c", doc=InputDocumentation(doc="Header name of child.")), ToolInput(tag="in_header_name_father", input_type=String(optional=True), prefix="-f", doc=InputDocumentation(doc="Header name of father.")), ToolInput(tag="in_header_name_mother", input_type=String(optional=True), prefix="-m", doc=InputDocumentation(doc="Header name of mother.")), ToolInput(tag="in_out", input_type=File(optional=True), prefix="-out", doc=InputDocumentation(doc="Output TSV file containing the detected UPDs.")), ToolInput(tag="in_exclude", input_type=File(optional=True), prefix="-exclude", doc=InputDocumentation(doc="BED file with regions to exclude, e.g. copy-number variant regions.\nDefault value: ''")), ToolInput(tag="in_var_min_dp", input_type=Int(optional=True), prefix="-var_min_dp", doc=InputDocumentation(doc="Minimum depth (DP) of a variant (in all three samples).\nDefault value: '20'")), ToolInput(tag="in_var_min_q", input_type=Float(optional=True), prefix="-var_min_q", doc=InputDocumentation(doc="Minimum quality (QUAL) of a variant.\nDefault value: '30'")), ToolInput(tag="in_var_use_indels", input_type=Boolean(optional=True), prefix="-var_use_indels", doc=InputDocumentation(doc="Also use InDels. The default is to use SNVs only.\nDefault value: 'false'")), ToolInput(tag="in_ext_marker_perc", input_type=Float(optional=True), prefix="-ext_marker_perc", doc=InputDocumentation(doc="Percentage of markers that can be spanned when merging adjacent regions .\nDefault value: '1'")), ToolInput(tag="in_ext_size_perc", input_type=Float(optional=True), prefix="-ext_size_perc", doc=InputDocumentation(doc="Percentage of base size that can be spanned when merging adjacent regions.\nDefault value: '20'")), ToolInput(tag="in_reg_min_kb", input_type=Float(optional=True), prefix="-reg_min_kb", doc=InputDocumentation(doc="Mimimum size in kilo-bases required for a UPD region.\nDefault value: '1000'")), ToolInput(tag="in_reg_min_markers", input_type=Int(optional=True), prefix="-reg_min_markers", doc=InputDocumentation(doc="Mimimum number of UPD markers required in a region.\nDefault value: '15'")), ToolInput(tag="in_reg_min_q", input_type=Float(optional=True), prefix="-reg_min_q", doc=InputDocumentation(doc="Mimimum Q-score required for a UPD region.\nDefault value: '20'")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="-debug", doc=InputDocumentation(doc="Enable verbose debug output.\nDefault value: 'false'")), ToolInput(tag="in_changelog", input_type=Boolean(optional=True), prefix="--changelog", doc=InputDocumentation(doc="Prints changeloge and exits.")), ToolInput(tag="in_tdx", input_type=Boolean(optional=True), prefix="--tdx", doc=InputDocumentation(doc="Writes a Tool Definition Xml file. The file name is the application name with the suffix '.tdx'."))], outputs=[ToolOutput(tag="out_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out", type_hint=File()), doc=OutputDocumentation(doc="Output TSV file containing the detected UPDs."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Updhunter_V0_1_0().translate("wdl", allow_empty_container=True)

