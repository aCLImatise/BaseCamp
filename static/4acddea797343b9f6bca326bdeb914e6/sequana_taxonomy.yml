!Command
command:
- sequana_taxonomy
positional:
- !Positional
  description: ''
  position: 0
  name: Welcome
  optional: false
- !Positional
  description: ''
  position: 1
  name: to
  optional: false
- !Positional
  description: ''
  position: 2
  name: SEQUANA
  optional: false
named:
- !Flag
  description: "/home/user/.config/sequana/kraken_toydb\n--show-html --thread 4"
  synonyms:
  - --databases
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: "show this help message and exit\n--file1 FILE1         R1 fastq file\
    \ (zipped)\n--file2 FILE2         R2 fastq file (zipped)\n--databases DATABASES\
    \ [DATABASES ...]\nPath to a valid Kraken database(s). If you do not have\nany,\
    \ use --download option. You may use several, in\nwhich case, an iterative taxonomy\
    \ is performed as\nexplained in online sequana documentation (see\nHierarchicalKRaken\n\
    --output-directory DIRECTORY\nname of the output directory\n--keep-temp-files\
    \     keep temporary files (hierarchical case with several\ndatabases\n--thread\
    \ THREAD       number of threads to use (default 4)\n--show-html           Results\
    \ are stored in report/ directory and results\nare not shown by default\n--download\
    \ {sequana_db1,toydb,minikraken}\ndownload an official sequana DB. The sequana_db1\
    \ is\nstored in a dedicated Synapse page (www.synapse.org).\nminikraken is downloaded\
    \ from the kraken's author\npage, and toydb from sequana github.\n--unclassified-out\
    \ UNCLASSIFIED_OUT\nsave unclassified sequences to filename\n--classified-out\
    \ CLASSIFIED_OUT\nsave unclassified sequences to filename\n--level {DEBUG,INFO,WARNING,ERROR,CRITICAL}\n"
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: Welcome to SEQUANA - Taxonomy standalone\n\n        This standalone\
  \ takes as input one or two (paired end) FastQ files.\n        Using Kraken, Krona\
  \ and some codecs from Sequana, it tries to identify\n        the taxon/organism\
  \ that match each reads found in the input files.\n\n        Kraken requires an\
  \ input database. We provide 3 databases but you can\n        also use Sequana to\
  \ help you building a customised one.\n\n        We provide a DB called toydb. It\
  \ contains only a few\n        measles viruses. Its size is only 32Mb and should\
  \ be used for testing\n        and examples only.\n\n        Another database is\
  \ the so-called minikraken provided by Kraken's\n        authors. It is about 4Gb\
  \ and contains viruses and bacteria only.\n\n        A third database is built with\
  \ Sequana and is about 8Gb. It is\n        stored on Synapse website and you will\
  \ need an account (synapse.org).\n        It contains about 22,000 species: viruses,\
  \ bacteria, homo sapiens, fungi,\n\n        Each DB can be downloaded using:\n\n\
  \            sequana_taxonomy --download toydb\n\n        Then, you need to use\
  \ this kind of command:\n\n            sequana_taxonomy --file1 R1.fastq --file2\
  \ R2.fastq\n                --databases /home/user/.config/sequana/kraken_toydb\n\
  \                --show-html --thread 4\n\nAUTHORS: Thomas Cokelaer\nDocumentation:\
  \ http://sequana.readthedocs.io\nIssues: http://github.com/sequana/sequana\n   \
  \     \n\nDESCRIPTION:\n\noptional arguments:\n  -h, --help            show this\
  \ help message and exit\n  --file1 FILE1         R1 fastq file (zipped)\n  --file2\
  \ FILE2         R2 fastq file (zipped)\n  --databases DATABASES [DATABASES ...]\n\
  \                        Path to a valid Kraken database(s). If you do not have\n\
  \                        any, use --download option. You may use several, in\n \
  \                       which case, an iterative taxonomy is performed as\n    \
  \                    explained in online sequana documentation (see\n          \
  \              HierarchicalKRaken\n  --output-directory DIRECTORY\n            \
  \            name of the output directory\n  --keep-temp-files     keep temporary\
  \ files (hierarchical case with several\n                        databases\n  --thread\
  \ THREAD       number of threads to use (default 4)\n  --show-html           Results\
  \ are stored in report/ directory and results\n                        are not shown\
  \ by default\n  --download {sequana_db1,toydb,minikraken}\n                    \
  \    download an official sequana DB. The sequana_db1 is\n                     \
  \   stored in a dedicated Synapse page (www.synapse.org).\n                    \
  \    minikraken is downloaded from the kraken's author\n                       \
  \ page, and toydb from sequana github.\n  --unclassified-out UNCLASSIFIED_OUT\n\
  \                        save unclassified sequences to filename\n  --classified-out\
  \ CLASSIFIED_OUT\n                        save unclassified sequences to filename\n\
  \  --level {DEBUG,INFO,WARNING,ERROR,CRITICAL}\n"
generated_using:
- --help
