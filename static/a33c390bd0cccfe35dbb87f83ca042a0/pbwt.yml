!Command
command:
- pbwt
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -log
  description: log file; '-' for stderr
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -check
  description: do various checks
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -stats
  description: print stats depending on commands; writes to stdout
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -read
  description: read pbwt file; '-' for stdin
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -readSites
  description: read sites file; '-' for stdin
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -readSamples
  description: read samples file; '-' for stdin
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -readMissing
  description: read missing file; '-' for stdin
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -readDosage
  description: read dosage file; '-' for stdin
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -readReverse
  description: read reverse file; '-' for stdin
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -readAll
  description: read .pbwt and if present .sites, .samples, .missing - note not by
    default dosage
  args: !SimpleFlagArg
    name: rootname
- !Flag
  optional: true
  synonyms:
  - -readVcfGT
  description: read GTs from vcf or bcf file; '-' for stdin vcf only ; biallelic sites
    only - require diploid!
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -readVcfPL
  description: read PLs from vcf or bcf file; '-' for stdin vcf only ; biallelic sites
    only - require diploid!
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -readMacs
  description: read MaCS output file; '-' for stdin
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -readVcfq
  description: read VCFQ file; '-' for stdin
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -readGen
  description: <chrom>   read impute2 gen file - must set chrom
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -readHap
  description: <chrom>   read impute2 hap file - must set chrom
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -readHapLegend
  description: "<legend_file> <chrom>\nread impute2 hap and legend file - must set\
    \ chrom"
  args: !SimpleFlagArg
    name: hap_file
- !Flag
  optional: true
  synonyms:
  - -readPhase
  description: read Li and Stephens phase file
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -checkpoint
  description: checkpoint every n sites while reading
  args: !SimpleFlagArg
    name: n
- !Flag
  optional: true
  synonyms:
  - -merge
  description: '...         merge two or more pbwt files'
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -write
  description: write pbwt file; '-' for stdout
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -writeSites
  description: write sites file; '-' for stdout
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -writeSamples
  description: write samples file; '-' for stdout
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -writeMissing
  description: write missing file; '-' for stdout
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -writeDosage
  description: write missing file; '-' for stdout
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -writeReverse
  description: write reverse file; '-' for stdout
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -writeAll
  description: write .pbwt and if present .sites, .samples, .missing, .dosage
  args: !SimpleFlagArg
    name: rootname
- !Flag
  optional: true
  synonyms:
  - -writeImputeRef
  description: write .imputeHaps and .imputeLegend
  args: !SimpleFlagArg
    name: rootname
- !Flag
  optional: true
  synonyms:
  - -writeImputeHapsG
  description: write haplotype file for IMPUTE -known_haps_g
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -writePhase
  description: write FineSTRUCTURE/ChromoPainter input format (Impute/ShapeIT output
    format) phase file
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -writeTransposeHaplotypes
  description: write transposed haplotype file (one hap per row); '-' for stdout
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -haps
  description: write haplotype file; '-' for stdout
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -writeGen
  description: write impute2 gen file; '-' for stdout
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -writeVcf
  - -writeVcfGz
  - -writeBcf
  - -writeBcfGz
  description: write VCF or BCF; uncompressed or bgzip (Gz) compressed file; '-' for
    stdout
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -referenceFasta
  description: reference fasta filename for VCF/BCF writing (optional)
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -subsites
  description: <frac>   subsample <frac> sites with AF > <fmin>
  args: !SimpleFlagArg
    name: fmin
- !Flag
  optional: true
  synonyms:
  - -subsample
  description: <n>    subsample <n> samples from index <start>
  args: !SimpleFlagArg
    name: start
- !Flag
  optional: true
  synonyms:
  - -subrange
  description: <end>   cut down to sites in [start,end)
  args: !SimpleFlagArg
    name: start
- !Flag
  optional: true
  synonyms:
  - -corruptSites
  description: <q>     randomise fraction q of positions at fraction p of sites, according
    to site frequency
  args: !SimpleFlagArg
    name: p
- !Flag
  optional: true
  synonyms:
  - -corruptSamples
  description: <q>   randomise fraction q of positions for fraction p of samples,
    according to site frequency
  args: !SimpleFlagArg
    name: p
- !Flag
  optional: true
  synonyms:
  - -copySamples
  description: <len>    make M new samples copied from current haplotypes with mean
    switch length len
  args: !SimpleFlagArg
    name: M
- !Flag
  optional: true
  synonyms:
  - -selectSites
  description: select sites as in sites file
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -removeSites
  description: remove sites as in sites file
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -selectSamples
  description: select samples as in samples file
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -longWithin
  description: find matches within set longer than L
  args: !SimpleFlagArg
    name: L
- !Flag
  optional: true
  synonyms:
  - -maxWithin
  description: find maximal matches within set
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -matchNaive
  description: maximal match seqs in pbwt file to reference
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -matchIndexed
  description: maximal match seqs in pbwt file to reference
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -matchDynamic
  description: maximal match seqs in pbwt file to reference
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -imputeExplore
  description: n'th impute test
  args: !SimpleFlagArg
    name: n
- !Flag
  optional: true
  synonyms:
  - -phase
  description: phase with n sparse pbwts
  args: !SimpleFlagArg
    name: n
- !Flag
  optional: true
  synonyms:
  - -referencePhase
  description: phase current pbwt against reference whose root name is the argument
    - only keeps shared sites
  args: !SimpleFlagArg
    name: root
- !Flag
  optional: true
  synonyms:
  - -referenceImpute
  description: "[nSparse=1] [fSparse=1]  impute current pbwt into reference whose\
    \ root name is the first argument;\ndoes not rephase either pbwt; optional nSparse\
    \ > 1 also does sparse matching, fSparse is relative weight"
  args: !SimpleFlagArg
    name: root
- !Flag
  optional: true
  synonyms:
  - -genotypeCompare
  description: compare genotypes with those from reference whose root name is the
    argument - need compatible sites
  args: !SimpleFlagArg
    name: root
- !Flag
  optional: true
  synonyms:
  - -imputeMissing
  description: impute data marked as missing
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -fitAlphaBeta
  description: fit probabilistic model 1..3
  args: !SimpleFlagArg
    name: model
- !Flag
  optional: true
  synonyms:
  - -llCopyModel
  description: <rho>  log likelihood of Li-Stephens model
  args: !SimpleFlagArg
    name: theta
- !Flag
  optional: true
  synonyms:
  - -paint
  description: '[n] output painting co-ancestry matrix to fileroot, optionally specififying
    the number per region'
  args: !SimpleFlagArg
    name: fileNameRoot
- !Flag
  optional: true
  synonyms:
  - -paintSparse
  description: '[n] output sparse painting to fileroot, optionally specififying the
    number per region'
  args: !SimpleFlagArg
    name: fileNameRoot
- !Flag
  optional: true
  synonyms:
  - -pretty
  description: <k>        pretty plot at site k
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -sfs
  description: print site frequency spectrum (log scale) - also writes sites.freq
    file
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -refFreq
  description: read site frequency information into the refFreq field of current sites
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -siteInfo
  description: <kmin> <kmax> export PBWT information at sites with allele count kmin
    <= k < kmax
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -buildReverse
  description: build reverse pbwt
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -readGeneticMap
  description: read Oxford format genetic map file
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - -4hapsStats
  description: mu:rho 4 hap test stats
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "Program: pbwt\nVersion: 3.0 (using htslib 1.10.2)\nContact: Richard Durbin\
  \ [rd@sanger.ac.uk]\nUsage: pbwt [ -<command> [options]* ]+\nCommands:\n  -log <file>\
  \               log file; '-' for stderr\n  -check                    do various\
  \ checks\n  -stats                    print stats depending on commands; writes\
  \ to stdout\n  -read <file>              read pbwt file; '-' for stdin\n  -readSites\
  \ <file>         read sites file; '-' for stdin\n  -readSamples <file>       read\
  \ samples file; '-' for stdin\n  -readMissing <file>       read missing file; '-'\
  \ for stdin\n  -readDosage <file>        read dosage file; '-' for stdin\n  -readReverse\
  \ <file>       read reverse file; '-' for stdin\n  -readAll <rootname>       read\
  \ .pbwt and if present .sites, .samples, .missing - note not by default dosage\n\
  \  -readVcfGT <file>         read GTs from vcf or bcf file; '-' for stdin vcf only\
  \ ; biallelic sites only - require diploid!\n  -readVcfPL <file>         read PLs\
  \ from vcf or bcf file; '-' for stdin vcf only ; biallelic sites only - require\
  \ diploid!\n  -readMacs <file>          read MaCS output file; '-' for stdin\n \
  \ -readVcfq <file>          read VCFQ file; '-' for stdin\n  -readGen <file> <chrom>\
  \   read impute2 gen file - must set chrom\n  -readHap <file> <chrom>   read impute2\
  \ hap file - must set chrom\n  -readHapLegend <hap_file> <legend_file> <chrom>\n\
  \                            read impute2 hap and legend file - must set chrom\n\
  \  -readPhase <file>         read Li and Stephens phase file\n  -checkpoint <n>\
  \           checkpoint every n sites while reading\n  -merge <file> ...        \
  \ merge two or more pbwt files\n  -write <file>             write pbwt file; '-'\
  \ for stdout\n  -writeSites <file>        write sites file; '-' for stdout\n  -writeSamples\
  \ <file>      write samples file; '-' for stdout\n  -writeMissing <file>      write\
  \ missing file; '-' for stdout\n  -writeDosage <file>       write missing file;\
  \ '-' for stdout\n  -writeReverse <file>      write reverse file; '-' for stdout\n\
  \  -writeAll <rootname>      write .pbwt and if present .sites, .samples, .missing,\
  \ .dosage\n  -writeImputeRef <rootname> write .imputeHaps and .imputeLegend\n  -writeImputeHapsG\
  \ <file>  write haplotype file for IMPUTE -known_haps_g\n  -writePhase <file>  \
  \      write FineSTRUCTURE/ChromoPainter input format (Impute/ShapeIT output format)\
  \ phase file\n  -writeTransposeHaplotypes <file>    write transposed haplotype file\
  \ (one hap per row); '-' for stdout\n  -haps <file>              write haplotype\
  \ file; '-' for stdout\n  -writeGen <file>          write impute2 gen file; '-'\
  \ for stdout\n  -writeVcf|-writeVcfGz|-writeBcf|-writeBcfGz <file>\n           \
  \                 write VCF or BCF; uncompressed or bgzip (Gz) compressed file;\
  \ '-' for stdout\n  -referenceFasta <file>    reference fasta filename for VCF/BCF\
  \ writing (optional)\n  -subsites <fmin> <frac>   subsample <frac> sites with AF\
  \ > <fmin>\n  -subsample <start> <n>    subsample <n> samples from index <start>\n\
  \  -subrange <start> <end>   cut down to sites in [start,end)\n  -corruptSites <p>\
  \ <q>     randomise fraction q of positions at fraction p of sites, according to\
  \ site frequency\n  -corruptSamples <p> <q>   randomise fraction q of positions\
  \ for fraction p of samples, according to site frequency\n  -copySamples <M> <len>\
  \    make M new samples copied from current haplotypes with mean switch length len\n\
  \  -selectSites <file>       select sites as in sites file\n  -removeSites <file>\
  \       remove sites as in sites file\n  -selectSamples <file>     select samples\
  \ as in samples file\n  -longWithin <L>           find matches within set longer\
  \ than L\n  -maxWithin                find maximal matches within set\n  -matchNaive\
  \ <file>        maximal match seqs in pbwt file to reference\n  -matchIndexed <file>\
  \      maximal match seqs in pbwt file to reference\n  -matchDynamic <file>    \
  \  maximal match seqs in pbwt file to reference\n  -imputeExplore <n>        n'th\
  \ impute test\n  -phase <n>                phase with n sparse pbwts\n  -referencePhase\
  \ <root>    phase current pbwt against reference whose root name is the argument\
  \ - only keeps shared sites\n  -referenceImpute <root> [nSparse=1] [fSparse=1] \
  \ impute current pbwt into reference whose root name is the first argument;\n  \
  \                          does not rephase either pbwt; optional nSparse > 1 also\
  \ does sparse matching, fSparse is relative weight\n  -genotypeCompare <root>  \
  \ compare genotypes with those from reference whose root name is the argument -\
  \ need compatible sites\n  -imputeMissing            impute data marked as missing\n\
  \  -fitAlphaBeta <model>     fit probabilistic model 1..3\n  -llCopyModel <theta>\
  \ <rho>  log likelihood of Li-Stephens model\n  -paint <fileNameRoot> [n] output\
  \ painting co-ancestry matrix to fileroot, optionally specififying the number per\
  \ region\n  -paintSparse <fileNameRoot> [n] output sparse painting to fileroot,\
  \ optionally specififying the number per region\n  -pretty <file> <k>        pretty\
  \ plot at site k\n  -sfs                      print site frequency spectrum (log\
  \ scale) - also writes sites.freq file\n  -refFreq <file>           read site frequency\
  \ information into the refFreq field of current sites\n  -siteInfo <file> <kmin>\
  \ <kmax> export PBWT information at sites with allele count kmin <= k < kmax\n \
  \ -buildReverse             build reverse pbwt\n  -readGeneticMap <file>    read\
  \ Oxford format genetic map file\n  -4hapsStats               mu:rho 4 hap test\
  \ stats\n"
generated_using: []
docker_image:
