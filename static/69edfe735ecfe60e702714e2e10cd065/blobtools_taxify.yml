!Command
command:
- blobtools
- taxify
positional:
- !Positional
  optional: false
  position: 0
  name: General
  description: -o, --out <PREFIX>                  Output prefix
named:
- !Flag
  optional: true
  synonyms:
  - -f
  - --hit_file
  description: "BLAST/Diamond similarity search result (TSV format).\nDefaults assume\
    \ \"-outfmt '6 qseqid sseqid pident length mismatch gapopen qstart qend sstart\
    \ send evalue bitscore'\""
  args: !SimpleFlagArg
    name: FILE
- !Flag
  optional: true
  synonyms:
  - -a
  - --hit_column_qseqid
  description: "Zero-based column of qseqid in similarity search result [default:\
    \ 0]\nChange if different format than (-outfmt '6')"
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - -b
  - --hit_column_sseqid
  description: "Zero-based column of sseqid in similarity search result [default:\
    \ 1]\nChange if different format than (-outfmt '6')"
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - -c
  - --hit_column_score
  description: "Zero-based column of (bit)score in similarity search result [default:\
    \ 11]\nChange if different format than (-outfmt '6')"
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - -m
  - --taxid_mapping_file
  description: TaxID mapping file (contains seqid and taxid)
  args: !SimpleFlagArg
    name: FILE
- !Flag
  optional: true
  synonyms:
  - -s
  - --map_col_sseqid
  description: Zero-based column of sseqid in TaxID mapping file (it will search for
    sseqid in this column)
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - -t
  - --map_col_taxid
  description: Zero-based Column of taxid in TaxID mapping file (it will extract for
    taxid from this column)
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - -i
  - --custom
  description: File containing list of sequence IDs
  args: !SimpleFlagArg
    name: FILE
- !Flag
  optional: true
  synonyms:
  - -x
  - --custom_taxid
  description: TaxID to assign to all sequence IDs in list
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - -v
  - --custom_score
  description: Score to assign to all sequence IDs in list
  args: !SimpleFlagArg
    name: FLOAT
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "usage: blobtools taxify          -f FILE [-a INT] [-b INT] [-c INT]\n\
  \                                    [-m FILE] [-s INT] [-t INT]\n             \
  \                       [-i FILE] [-x INT] [-v FLOAT]\n                        \
  \            [-o PREFIX] [-h|--help]\n\n    Options:\n        -h --help        \
  \                   show this\n\n    Options for similarity search input\n     \
  \   -f, --hit_file <FILE>               BLAST/Diamond similarity search result (TSV\
  \ format).\n                                                Defaults assume \"-outfmt\
  \ '6 qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue\
  \ bitscore'\"\n        -a, --hit_column_qseqid <INT>       Zero-based column of\
  \ qseqid in similarity search result [default: 0]\n                            \
  \                    Change if different format than (-outfmt '6')\n        -b,\
  \ --hit_column_sseqid <INT>       Zero-based column of sseqid in similarity search\
  \ result [default: 1]\n                                                Change if\
  \ different format than (-outfmt '6')\n        -c, --hit_column_score <INT>    \
  \    Zero-based column of (bit)score in similarity search result [default: 11]\n\
  \                                                Change if different format than\
  \ (-outfmt '6')\n    Options for TaxID mapping file\n        -m, --taxid_mapping_file\
  \ <FILE>     TaxID mapping file (contains seqid and taxid)\n        -s, --map_col_sseqid\
  \ <INT>          Zero-based column of sseqid in TaxID mapping file (it will search\
  \ for sseqid in this column)\n        -t, --map_col_taxid <INT>           Zero-based\
  \ Column of taxid in TaxID mapping file (it will extract for taxid from this column)\n\
  \n    Options for custom input\n        -i, --custom <FILE>                 File\
  \ containing list of sequence IDs\n        -x, --custom_taxid <INT>            TaxID\
  \ to assign to all sequence IDs in list\n        -v, --custom_score <FLOAT>    \
  \      Score to assign to all sequence IDs in list\n\n    General\n        -o, --out\
  \ <PREFIX>                  Output prefix\n"
generated_using:
- --help
docker_image:
