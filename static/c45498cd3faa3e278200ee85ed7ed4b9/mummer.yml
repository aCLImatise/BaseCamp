!Command
command:
- mummer
positional:
- !Positional
  optional: false
  position: 0
  name: query file1
  description: ''
- !Positional
  optional: true
  position: 1
  name: query
  description: ''
- !Positional
  optional: true
  position: 2
  name: file32
  description: ''
named:
- !Flag
  optional: true
  synonyms:
  - -mum
  description: compute maximal matches that are unique in both sequences
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -mumreference
  description: "compute maximal matches that are unique in the reference-\nsequence\
    \ but not necessarily in the query-sequence (default)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -mumcand
  description: same as -mumreference
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -maxmatch
  description: compute all maximal matches regardless of their uniqueness
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -l
  description: "set the minimum length of a match\nif not set, the default value is\
    \ 20"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -b
  description: compute forward and reverse complement matches
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -F
  description: "force 4 column output format regardless of the number of\nreference\
    \ sequence inputs"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -n
  description: match only the characters a, c, g, or t
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -L
  description: print length of query sequence in header of matches
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -r
  description: compute only reverse complement matches
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -s
  description: print first 53 characters of the matching substring
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -c
  description: Report the query position of a reverse complement match relative to
    the forward strand of the query sequence
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -k
  description: sampled suffix positions (one by default)
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -threads
  description: number of threads to use for -maxmatch, only valid k > 1
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -qthreads
  description: number of threads to use for queries
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -suflink
  description: use suffix links (1=yes or 0=no) in the index and during search [auto]
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -child
  description: use child table (1=yes or 0=no) in the index and during search [auto]
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -skip
  description: "sparsify the MEM-finding algorithm even more, performing jumps of\
    \ skip*k [auto (l-10)/k]\nthis is a performance parameter that trade-offs SA traversal\
    \ with checking of right-maximal MEMs"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -kmer
  description: use kmer table containing sa-intervals (speeds up searching first k
    characters) in the index and during search [int value, auto]
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -save
  description: (string) save index to file to use again later (string)
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -load
  description: (string) load index from file
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "mummer: unrecognized option '--help'\nInvalid parameters.\nUsage: mummer\
  \ [options] <reference-file> <query file1> . . . [query file32]\nImplemented MUMmer\
  \ v3 options:\n-mum           compute maximal matches that are unique in both sequences\n\
  -mumreference  compute maximal matches that are unique in the reference-\n     \
  \          sequence but not necessarily in the query-sequence (default)\n-mumcand\
  \       same as -mumreference\n-maxmatch      compute all maximal matches regardless\
  \ of their uniqueness\n-l             set the minimum length of a match\n      \
  \         if not set, the default value is 20\n-b             compute forward and\
  \ reverse complement matches\n-F             force 4 column output format regardless\
  \ of the number of\n               reference sequence inputs\n-n             match\
  \ only the characters a, c, g, or t\n-L             print length of query sequence\
  \ in header of matches\n-r             compute only reverse complement matches\n\
  -s             print first 53 characters of the matching substring\n-c         \
  \    Report the query position of a reverse complement match relative to the forward\
  \ strand of the query sequence\n\nAdditional options:\n-k             sampled suffix\
  \ positions (one by default)\n-threads       number of threads to use for -maxmatch,\
  \ only valid k > 1 \n-qthreads      number of threads to use for queries \n-suflink\
  \       use suffix links (1=yes or 0=no) in the index and during search [auto]\n\
  -child         use child table (1=yes or 0=no) in the index and during search [auto]\n\
  -skip          sparsify the MEM-finding algorithm even more, performing jumps of\
  \ skip*k [auto (l-10)/k]\n               this is a performance parameter that trade-offs\
  \ SA traversal with checking of right-maximal MEMs\n-kmer          use kmer table\
  \ containing sa-intervals (speeds up searching first k characters) in the index\
  \ and during search [int value, auto]\n-save (string) save index to file to use\
  \ again later (string)\n-load (string) load index from file\n\nExample usage:\n\n\
  ./mummer -maxmatch -l 20 -b -n -k 3 -threads 3 ref.fa query.fa\nFind all maximal\
  \ matches on forward and reverse strands\nof length 20 or greater, matching only\
  \ a, c, t, or g.\nIndex every 3rd position in the ref.fa and use 3 threads to find\
  \ MEMs.\nFastest method for one long query sequence.\n\n./mummer -maxmatch -l 20\
  \ -b -n -k 3 -qthreads 3 ref.fa query.fa\nSame as above, but now use a single thread\
  \ for every query sequence in\nquery.fa. Fastest for many small query sequences.\n"
generated_using:
- --help
docker_image:
