!Command
command:
- split
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -a
  - --suffix-length
  description: generate suffixes of length N (default 2)
  args: !SimpleFlagArg
    name: N
- !Flag
  optional: true
  synonyms:
  - --additional-suffix
  description: append an additional SUFFIX to file names
  args: !SimpleFlagArg
    name: SUFFIX
- !Flag
  optional: true
  synonyms:
  - -b
  - --bytes
  description: put SIZE bytes per output file
  args: !SimpleFlagArg
    name: SIZE
- !Flag
  optional: true
  synonyms:
  - -C
  - --line-bytes
  description: put at most SIZE bytes of records per output file
  args: !SimpleFlagArg
    name: SIZE
- !Flag
  optional: true
  synonyms:
  - -d
  description: use numeric suffixes starting at 0, not alphabetic
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --numeric-suffixes
  description: '[=FROM]  same as -d, but allow setting the start value'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -x
  description: use hex suffixes starting at 0, not alphabetic
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --hex-suffixes
  description: '[=FROM]  same as -x, but allow setting the start value'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -e
  - --elide-empty-files
  description: do not generate empty output files with '-n'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --filter
  description: write to shell COMMAND; file name is $FILE
  args: !SimpleFlagArg
    name: COMMAND
- !Flag
  optional: true
  synonyms:
  - -l
  - --lines
  description: put NUMBER lines/records per output file
  args: !SimpleFlagArg
    name: NUMBER
- !Flag
  optional: true
  synonyms:
  - -n
  - --number
  description: generate CHUNKS output files; see explanation below
  args: !SimpleFlagArg
    name: CHUNKS
- !Flag
  optional: true
  synonyms:
  - -t
  - --separator
  description: "use SEP instead of newline as the record separator;\n'\\0' (zero)\
    \ specifies the NUL character"
  args: !SimpleFlagArg
    name: SEP
- !Flag
  optional: true
  synonyms:
  - -u
  - --unbuffered
  description: immediately copy input to output with '-n r/...'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --verbose
  description: "print a diagnostic just before each\noutput file is opened"
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - --help
  description: display this help and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - --version
  description: output version information and exit
  args: !EmptyFlagArg {}
help_text: "Usage: split [OPTION]... [FILE [PREFIX]]\nOutput pieces of FILE to PREFIXaa,\
  \ PREFIXab, ...;\ndefault size is 1000 lines, and default PREFIX is 'x'.\n\nWith\
  \ no FILE, or when FILE is -, read standard input.\n\nMandatory arguments to long\
  \ options are mandatory for short options too.\n  -a, --suffix-length=N   generate\
  \ suffixes of length N (default 2)\n      --additional-suffix=SUFFIX  append an\
  \ additional SUFFIX to file names\n  -b, --bytes=SIZE        put SIZE bytes per\
  \ output file\n  -C, --line-bytes=SIZE   put at most SIZE bytes of records per output\
  \ file\n  -d                      use numeric suffixes starting at 0, not alphabetic\n\
  \      --numeric-suffixes[=FROM]  same as -d, but allow setting the start value\n\
  \  -x                      use hex suffixes starting at 0, not alphabetic\n    \
  \  --hex-suffixes[=FROM]  same as -x, but allow setting the start value\n  -e, --elide-empty-files\
  \  do not generate empty output files with '-n'\n      --filter=COMMAND    write\
  \ to shell COMMAND; file name is $FILE\n  -l, --lines=NUMBER      put NUMBER lines/records\
  \ per output file\n  -n, --number=CHUNKS     generate CHUNKS output files; see explanation\
  \ below\n  -t, --separator=SEP     use SEP instead of newline as the record separator;\n\
  \                            '\\0' (zero) specifies the NUL character\n  -u, --unbuffered\
  \        immediately copy input to output with '-n r/...'\n      --verbose     \
  \      print a diagnostic just before each\n                            output file\
  \ is opened\n      --help     display this help and exit\n      --version  output\
  \ version information and exit\n\nThe SIZE argument is an integer and optional unit\
  \ (example: 10K is 10*1024).\nUnits are K,M,G,T,P,E,Z,Y (powers of 1024) or KB,MB,...\
  \ (powers of 1000).\nBinary prefixes can be used, too: KiB=K, MiB=M, and so on.\n\
  \nCHUNKS may be:\n  N       split into N files based on size of input\n  K/N   \
  \  output Kth of N to stdout\n  l/N     split into N files without splitting lines/records\n\
  \  l/K/N   output Kth of N to stdout without splitting lines/records\n  r/N    \
  \ like 'l' but use round robin distribution\n  r/K/N   likewise but only output\
  \ Kth of N to stdout\n\nGNU coreutils online help: <https://www.gnu.org/software/coreutils/>\n\
  Report any translation bugs to <https://translationproject.org/team/>\nFull documentation\
  \ <https://www.gnu.org/software/coreutils/split>\nor available locally via: info\
  \ '(coreutils) split invocation'\n"
generated_using:
- --help
docker_image:
