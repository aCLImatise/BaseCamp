from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Cmph_Keysfile_V0_1_0 = CommandToolBuilder(tool="cmph_keysfile", base_command=["cmph", "keysfile"], inputs=[ToolInput(tag="in_value_determines_number", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="c value determines:\n* the number of vertices in the graph for the algorithms BMZ and CHM\n* the number of bits per key required in the FCH algorithm\n* the load factor in the CHD_PH algorithm")), ToolInput(tag="in_algorithm_valid_values", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="algorithm - valid values are\n* bmz\n* bmz8\n* chm\n* brz\n* fch\n* bdz\n* bdz_ph\n* chd_ph\n* chd")), ToolInput(tag="in_hash_function_used", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc="hash function (may be used multiple times) - valid values are\n* jenkins")), ToolInput(tag="in_print_version_number", input_type=Boolean(optional=True), prefix="-V", doc=InputDocumentation(doc="print version number and exit")), ToolInput(tag="in_increase_verbosity_used", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="increase verbosity (may be used multiple times)")), ToolInput(tag="in_number_of_keys", input_type=Boolean(optional=True), prefix="-k", doc=InputDocumentation(doc="number of keys")), ToolInput(tag="in_generation_mode", input_type=Boolean(optional=True), prefix="-g", doc=InputDocumentation(doc="generation mode")), ToolInput(tag="in_random_seed", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="random seed")), ToolInput(tag="in_minimum_perfect_hash", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="minimum perfect hash function file")), ToolInput(tag="in_main_memory_availability", input_type=Boolean(optional=True), prefix="-M", doc=InputDocumentation(doc="main memory availability (in MB) used in BRZ algorithm")), ToolInput(tag="in_temporary_directory_used", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc="temporary directory used in BRZ algorithm")), ToolInput(tag="in_meaning_parameter_depends", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc="the meaning of this parameter depends on the algorithm selected in the -a option:\n* For BRZ it is used to make the maximal number of keys in a bucket lower than 256.\nIn this case its value should be an integer in the range [64,175]. Default is 128.\n* For BDZ it is used to determine the size of some precomputed rank\ninformation and its value should be an integer in the range [3,10]. Default\nis 7. The larger is this value, the more compact are the resulting functions\nand the slower are them at evaluation time.\n* For CHD and CHD_PH it is used to set the average number of keys per bucket\nand its value should be an integer in the range [1,32]. Default is 4. The\nlarger is this value, the slower is the construction of the functions.\nThis parameter has no effect for other algorithms.")), ToolInput(tag="in_set_number_function", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="set the number of keys per bin for a t-perfect hashing function. A t-perfect\nhash function allows at most t collisions in a given bin. This parameter applies\nonly to the CHD and CHD_PH algorithms. Its value should be an integer in the\nrange [1,128]. Defaul is 1")), ToolInput(tag="in_keys_file", input_type=String(), position=0, doc=InputDocumentation(doc="line separated file with keys"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Cmph_Keysfile_V0_1_0().translate("wdl", allow_empty_container=True)

