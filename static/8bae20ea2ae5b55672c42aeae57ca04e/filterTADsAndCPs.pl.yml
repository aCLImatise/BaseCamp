!Command
command:
- filterTADsAndCPs.pl
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -o
  description: '(def: out)'
  args: !SimpleFlagArg
    name: prefix for output files
- !Flag
  optional: true
  synonyms:
  - -cp
  description: (input contact point file, 2D BED format
  args: !SimpleFlagArg
    name: contact point 2D bed
- !Flag
  optional: true
  synonyms:
  - -tad
  description: (input TAD file, 2D BED format
  args: !SimpleFlagArg
    name: TAD 2D bed
- !Flag
  optional: true
  synonyms:
  - -d
  description: '[tagdir2] ... (Used to calculate experiment coverage)'
  args: !SimpleFlagArg
    name: Hi-C tag dirctory
- !Flag
  optional: true
  synonyms:
  - -cpu
  description: '<#> (number of processes to use to count reads in mult. tagdirs at
    once)]n         -genome <genome version> (genome version, def: none)'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -badChr
  description: '[chr] ... (chromosomes to skip e.g. chrY, def: none)'
  args: !SimpleFlagArg
    name: chr
- !Flag
  optional: true
  synonyms:
  - -res
  description: '<#> (resolution for interaction/region overlap, def: 15000)'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -minTADir
  description: '<#> (minimum TAD inclusion ratio, def: 0)'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -minTADcov
  description: '<#> (minimum TAD coverage ratio relative to average, def: 0.25)'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -minCPscore
  description: '<#> (minimum int score, def: 0)'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -minCPcov
  description: '<#> (minimum int coverage ratio relative to average, def: 0.25)'
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "\n\tfilterTADsAndInts.pl [options] -cp <CP 2D bed> -tad <TAD 2D bed> -d\
  \ <tagDir> -genome <genome> -o <outPrefix>\n\n\tParamters: (no strict order needed)\n\
  \t\t-o <prefix for output files> (def: out)\n\t\t-cp <contact point 2D bed> (input\
  \ contact point file, 2D BED format\n\t\t-tad <TAD 2D bed> (input TAD file, 2D BED\
  \ format\n\t\t-d <Hi-C tag dirctory> [tagdir2] ... (Used to calculate experiment\
  \ coverage)\n\t\t\t-cpu <#> (number of processes to use to count reads in mult.\
  \ tagdirs at once)]n\t\t-genome <genome version> (genome version, def: none)\n\t\
  **\t-p <peak/BED file of duplication/bad/blacklist regions> (def: gaps/segDup from\
  \ UCSC)\n\t\t-badChr <chr> [chr] ... (chromosomes to skip e.g. chrY, def: none)\n\
  \n\tThresholds:\n\t\t-res <#> (resolution for interaction/region overlap, def: 15000)\n\
  \t\t-minTADir <#> (minimum TAD inclusion ratio, def: 0)\n\t\t-minTADcov <#> (minimum\
  \ TAD coverage ratio relative to average, def: 0.25)\n\t\t-minCPscore <#> (minimum\
  \ int score, def: 0)\n\t\t-minCPcov <#> (minimum int coverage ratio relative to\
  \ average, def: 0.25)\n\n\tco-filter score files:\n\t\t-TADscore <TAD score file>\n\
  \t\t-CPscore <CP score file>\n\n\n\t** Notes on -p <peak/BED bad regions>:\n\t\t\
  Recommend to use genome assembly gaps and known duplicated regions. To get these\
  \ if you're using a UCSC\n\t\tannotated genome, try something like the following\
  \ to create BED file with these regions (for hg38):\n\t\t\twget -O gap.txt.gz http://hgdownload.soe.ucsc.edu/goldenPath/hg38/database/gap.txt.gz\n\
  \t\t\twget -O dups.txt.gz http://hgdownload.soe.ucsc.edu/goldenPath/hg38/database/genomicSuperDups.txt.gz\n\
  \t\t\tzcat gap.txt.gz dups.txt.gz | cut -f2-4 > badRegions.bed\n\t\t\t(then use\
  \ \"badRegions.bed\" with the -p option\n\t\tNote that depending on the genome,\
  \ UCSC might have different file names...\n\n"
generated_using:
- --help
docker_image:
