!Command
command:
- pyqi
- make-command
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -a
  - --author
  description: 'author/maintainer name [default: none]'
  args: !SimpleFlagArg
    name: AUTHOR
- !Flag
  optional: true
  synonyms:
  - -e
  - --email
  description: 'maintainer email address [default: none]'
  args: !SimpleFlagArg
    name: EMAIL
- !Flag
  optional: true
  synonyms:
  - -l
  - --license
  description: 'license (e.g., BSD) [default: none]'
  args: !SimpleFlagArg
    name: LICENSE
- !Flag
  optional: true
  synonyms:
  - -c
  - --copyright
  description: "copyright (e.g., Copyright 2013, The pyqi project)\n[default: none]"
  args: !SimpleFlagArg
    name: COPYRIGHT
- !Flag
  optional: true
  synonyms:
  - --command-version
  description: 'version (e.g., 0.1) [default: none]'
  args: !SimpleFlagArg
    name: COMMAND_VERSION
- !Flag
  optional: true
  synonyms:
  - --credits
  description: 'comma-separated list of other authors [default: none]'
  args: !SimpleFlagArg
    name: CREDITS
- !Flag
  optional: true
  synonyms:
  - --test-code
  description: 'create stubbed out unit test code [default: False]'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -n
  - --name
  description: the name of the Command [REQUIRED]
  args: !SimpleFlagArg
    name: NAME
- !Flag
  optional: true
  synonyms:
  - -o
  - --output-fp
  description: "output filepath to store generated Python code\n[REQUIRED]\n"
  args: !SimpleFlagArg
    name: OUTPUT_FP
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - --version
  description: show program's version number and exit
  args: !EmptyFlagArg {}
help_text: "Usage: pyqi make-command [options] {-n/--name NAME -o/--output-fp OUTPUT-FP}\n\
  \n[] indicates optional input (order unimportant)\n{} indicates required input (order\
  \ unimportant)\n\nThis command is intended to construct the basics of a Command\
  \ object so that a developer can dive straight into the implementation of the command\n\
  \nExample usage: \nPrint help message and exit\n pyqi make-command -h\n\nBasic Command:\
  \ Create a basic Command with appropriate attribution\n pyqi make-command -n example\
  \ -a \"some author\" -c \"Copyright 2013, The pyqi project\" -e \"foo@bar.com\"\
  \ -l BSD --command-version \"0.1\" --credits \"someone else\",\"and another person\"\
  \ -o example.py\n\nOptions:\n  --version             show program's version number\
  \ and exit\n  -h, --help            show this help message and exit\n  -a AUTHOR,\
  \ --author=AUTHOR\n                        author/maintainer name [default: none]\n\
  \  -e EMAIL, --email=EMAIL\n                        maintainer email address [default:\
  \ none]\n  -l LICENSE, --license=LICENSE\n                        license (e.g.,\
  \ BSD) [default: none]\n  -c COPYRIGHT, --copyright=COPYRIGHT\n                \
  \        copyright (e.g., Copyright 2013, The pyqi project)\n                  \
  \      [default: none]\n  --command-version=COMMAND_VERSION\n                  \
  \      version (e.g., 0.1) [default: none]\n  --credits=CREDITS     comma-separated\
  \ list of other authors [default: none]\n  --test-code           create stubbed\
  \ out unit test code [default: False]\n\n  REQUIRED options:\n    The following\
  \ options must be provided under all circumstances.\n\n    -n NAME, --name=NAME\n\
  \                        the name of the Command [REQUIRED]\n    -o OUTPUT_FP, --output-fp=OUTPUT_FP\n\
  \                        output filepath to store generated Python code\n      \
  \                  [REQUIRED]\n"
generated_using:
- --help
docker_image:
