from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, String, Float, Boolean

Fu_Orf_V0_1_0 = CommandToolBuilder(tool="fu_orf", base_command=["fu-orf"], inputs=[ToolInput(tag="in_r_one", input_type=File(optional=True), prefix="--R1", doc=InputDocumentation(doc="First paired end file")), ToolInput(tag="in_r_two", input_type=File(optional=True), prefix="--R2", doc=InputDocumentation(doc="Second paired end file")), ToolInput(tag="in_min_size", input_type=Int(optional=True), prefix="--min-size", doc=InputDocumentation(doc="Minimum ORF size (aa) [default: 25]")), ToolInput(tag="in_prefix", input_type=String(optional=True), prefix="--prefix", doc=InputDocumentation(doc="Rename reads using this prefix")), ToolInput(tag="in_min_overlap", input_type=Int(optional=True), prefix="--min-overlap", doc=InputDocumentation(doc="Minimum PE overlap [default: 12]")), ToolInput(tag="in_max_overlap", input_type=Int(optional=True), prefix="--max-overlap", doc=InputDocumentation(doc="Maximum PE overlap [default: 200]")), ToolInput(tag="in_min_identity", input_type=Float(optional=True), prefix="--min-identity", doc=InputDocumentation(doc="Minimum sequence identity in overlap [default: 0.80]")), ToolInput(tag="in_join", input_type=Boolean(optional=True), prefix="--join", doc=InputDocumentation(doc="Attempt Paired-End joining")), ToolInput(tag="in_pool_size", input_type=Int(optional=True), prefix="--pool-size", doc=InputDocumentation(doc="Size of the sequences array to be processed\nby each working thread [default: 250]")), ToolInput(tag="in_print_verbose_log", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Print verbose log")), ToolInput(tag="in_maximum", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_minimum", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_print", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_show", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_size", input_type=Int(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_pe", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_of", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_sequence", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_var_18", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_identity", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_overlap", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_the", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_in", input_type=String(), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_sequences", input_type=String(), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_array", input_type=String(), position=4, doc=InputDocumentation(doc="")), ToolInput(tag="in_to", input_type=String(), position=5, doc=InputDocumentation(doc="")), ToolInput(tag="in_be", input_type=String(), position=6, doc=InputDocumentation(doc="")), ToolInput(tag="in_processed", input_type=String(), position=7, doc=InputDocumentation(doc=""))], outputs=[], container="quay.io/biocontainers/seqfu:0.9.6--h38613fd_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Fu_Orf_V0_1_0().translate("wdl")

