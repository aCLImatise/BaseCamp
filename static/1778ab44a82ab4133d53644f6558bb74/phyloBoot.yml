!Command
command:
- phyloBoot
positional:
- !Positional
  optional: false
  position: 0
  name: options.
  description: 'EXAMPLES:'
- !Positional
  optional: false
  position: 0
  name: nonpar_errors
  description: 3. Parametric generation of simulated data.
named:
- !Flag
  optional: true
  synonyms:
  - --tree
  - -t
  description: "|<tree_string>\n(Required if non-parametric and more than two species)\
    \ Name\nof file or literal string defining tree topology."
  args: !SimpleFlagArg
    name: tree_fname
- !Flag
  optional: true
  synonyms:
  - --nsites
  - -L
  description: "Number of sites in sampled alignments.  If an alignment is\ngiven\
    \ (non-parametric case), default is number of sites in\nalignment, otherwise default\
    \ is 1000."
  args: !SimpleFlagArg
    name: number
- !Flag
  optional: true
  synonyms:
  - --nreps
  - -n
  description: Number of replicates.  Default is 100.
  args: !SimpleFlagArg
    name: number
- !Flag
  optional: true
  synonyms:
  - --msa-format
  - -i
  description: "|PHYLIP|MPM|MAF|SS\n(non-parametric case only)  Alignment format.\
    \  Default is to guess\nformat from file contents."
  args: !SimpleFlagArg
    name: FASTA
- !Flag
  optional: true
  synonyms:
  - --alignments-only
  - -a
  description: "Generate alignments and write them to files with given filename\n\
    root, but do not estimate parameters."
  args: !SimpleFlagArg
    name: fname_root
- !Flag
  optional: true
  synonyms:
  - --dump-mods
  - -d
  description: "Dump .mod files for individual estimated models (one for each\nreplicate)."
  args: !SimpleFlagArg
    name: fname_root
- !Flag
  optional: true
  synonyms:
  - --dump-samples
  - -m
  description: "Dump simulated alignments to files with given filename root.\nSimilar\
    \ to --alignments-only but does not disable parameter\nestimation."
  args: !SimpleFlagArg
    name: fname_root
- !Flag
  optional: true
  synonyms:
  - --dump-format
  - -o
  description: "|PHYLIP|MPM|SS.\n(For use with --alignments-only or --dump-samples)\
    \ File format to\nuse when dumping raw alignments.  Default FASTA."
  args: !SimpleFlagArg
    name: FASTA
- !Flag
  optional: true
  synonyms:
  - --read-mods
  - -R
  description: "Read estimated models from list of filenames instead of generating\n\
    alignments and estimating parameters.  fname_list can be comma-\ndelimited list\
    \ of files, or, if preceded by a '*', the name of a\nfile containing the file\
    \ names (one per line).  Can be used to compute\nstatistics for replicates that\
    \ have been processed separately (see\n--alignments-only).  When this option is\
    \ used, the primary argument\nto the program (<model_fname>|<msa_fname>) will\
    \ be ignored."
  args: !SimpleFlagArg
    name: fname_list
- !Flag
  optional: true
  synonyms:
  - --output-average
  - -A
  description: "Output a tree model representing the average of all input\nmodels\
    \ to the specified file."
  args: !SimpleFlagArg
    name: fname
- !Flag
  optional: true
  synonyms:
  - --quiet
  - -q
  description: Proceed quietly.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --subst-mod
  - -s
  description: "|F81|HKY85|REV|SSREV|UNREST|R2|R2S|U2|U2S|R3|R3S|U3|U3S\n(default\
    \ REV).  Nucleotide substitution model."
  args: !SimpleFlagArg
    name: JC69
- !Flag
  optional: true
  synonyms:
  - --nrates
  - -k
  description: "(default 1).  Number of rate categories to use.  Specifying a\nvalue\
    \ of greater than one causes the discrete gamma model for\nrate variation to be\
    \ used."
  args: !SimpleFlagArg
    name: nratecats
- !Flag
  optional: true
  synonyms:
  - --EM
  - -E
  description: "Use EM rather than the BFGS quasi-Newton algorithm for parameter\n\
    estimation."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --precision
  - -p
  description: "|MED|LOW\n(default HIGH) Level of precision to use in estimating model\n\
    parameters."
  args: !SimpleFlagArg
    name: HIGH
- !Flag
  optional: true
  synonyms:
  - --init-model
  - -M
  description: Initialize optimization procedure with specified tree model.
  args: !SimpleFlagArg
    name: mod_fname
- !Flag
  optional: true
  synonyms:
  - --init-random
  - -r
  description: Initialize parameters randomly.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --scale
  - -P
  description: Scale input tree by factor rho before doing parametric simulations.
  args: !SimpleFlagArg
    name: rho
- !Flag
  optional: true
  synonyms:
  - --subtree
  - -S
  description: "For use with --subtree-scale and/or subtree-switch.  Define\nsubtree\
    \ including all children of named node, including branch\nleading up to node."
  args: !SimpleFlagArg
    name: node
- !Flag
  optional: true
  synonyms:
  - --subtree-scale
  - -l
  description: Scale subtree defined with --subtree option by factor lambda.
  args: !SimpleFlagArg
    name: lambda
- !Flag
  optional: true
  synonyms:
  - --subtree-switch
  - -w
  description: "With given probability, randomly switch branches in tree from\nsubtree\
    \ to supertree and vice versa.  Randomization is performed\nindependently for\
    \ each branch in every column of simulated data."
  args: !SimpleFlagArg
    name: prob
- !Flag
  optional: true
  synonyms:
  - --scale-file
  - -F
  description: "(For use with --subtree in parametric mode).  Instead of using\n--subtree-scale\
    \ or --scale, read in a tab-delimited file with\nthree columns: numSite,scale,subtree_scale.\
    \  For each row in the\nfile phyloBoot will simulate the given number of sites\
    \ with those\nscaling factors, and then will move on to the next row, so that\
    \ the\ntotal number of sites is the sum of the first column.\n"
  args: !SimpleFlagArg
    name: file
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - --help
  - -h
  description: Print this help message.
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "\nPROGRAM: phyloBoot\n\nUSAGE: phyloBoot [OPTIONS] <model_fname>|<msa_fname>\n\
  \nDESCRIPTION:\n\n    Generate simulated alignment data by parametric or nonparametric\n\
  \    bootstrapping, and/or estimate errors in phylogenetic model parameters.\n \
  \   When estimating errors in parameters, the tree topology is not inferred\n  \
  \  -- estimated errors are conditional on the given topology.\n\n    If a model\
  \ is given in the form of a .mod file (<model_fname>), then\n    parametric bootstrapping\
  \ is performed -- i.e., synthetic data sets are\n    drawn from the distribution\
  \ defined by the model.  Otherwise, the input\n    file is assumed to be a multiple\
  \ alignment, and non-parametric\n    bootstrapping is performed -- i.e., sites are\
  \ drawn (with replacement)\n    from the empirical distribution defined by the given\
  \ alignment.  \n\n    The default behavior is to produce simulated alignments, estimate\
  \ model\n    parameters for each one, and then write a table to stdout with a row\n\
  \    for each parameter and columns for the mean, standard deviation\n    (approximate\
  \ standard error), median, minimum, and maximum of estimated\n    values, plus the\
  \ boundaries of 95%% and 90%% confidence intervals.  \n    \n    The --alignments-only\
  \ option, however, allows the parameter estimation\n    step to be bypassed entirely,\
  \ and the program to be used simply to\n    generate simulated data sets.\n\n  \
  \  See usage for phyloFit for additional details on tree-building\n    options.\n\
  \nEXAMPLES:\n    \n    (See below for more details on options)\n\n    1. Estimation\
  \ of parameter errors by parametric bootstrapping.\n\n        phyloBoot --nreps\
  \ 500 --nsites 10000 mymodel.mod > par_errors\n\n    2. Estimation of parameter\
  \ errors by nonparametric bootstrapping.\n\n        phyloBoot --nreps 500 --nsites\
  \ 10000 \\\n            --tree \"((human,chimp),(mouse,rat))\" myalignment.fa >\
  \ \\\n            nonpar_errors\n\n    3. Parametric generation of simulated data.\n\
  \    \n        phyloBoot mymodel.mod --alignments-only pardata \\\n            --nreps\
  \ 500 --nsites 10000 \n\n    4. Nonparametric generation of simulated data.\n  \
  \  \n        phyloBoot myalignment.fa --alignments-only nonpardata \\\n        \
  \    --nreps 500 --nsites 10000 \n\nOPTIONS:\n\n (bootstrapping options)\n\n   \
  \ --nsites, -L <number>\n        Number of sites in sampled alignments.  If an alignment\
  \ is\n        given (non-parametric case), default is number of sites in\n     \
  \   alignment, otherwise default is 1000.\n\n    --nreps, -n <number>\n        Number\
  \ of replicates.  Default is 100.\n\n    --msa-format, -i FASTA|PHYLIP|MPM|MAF|SS\n\
  \        (non-parametric case only)  Alignment format.  Default is to guess\n\t\
  format from file contents.        \n\n    --alignments-only, -a <fname_root>\n \
  \       Generate alignments and write them to files with given filename\n      \
  \  root, but do not estimate parameters.  \n\n    --dump-mods, -d <fname_root>\n\
  \        Dump .mod files for individual estimated models (one for each\n       \
  \ replicate).\n\n    --dump-samples, -m <fname_root>\n        Dump simulated alignments\
  \ to files with given filename root.\n        Similar to --alignments-only but does\
  \ not disable parameter\n        estimation.\n\n    --dump-format, -o FASTA|PHYLIP|MPM|SS.\n\
  \        (For use with --alignments-only or --dump-samples) File format to\n   \
  \     use when dumping raw alignments.  Default FASTA.\n\n    --read-mods, -R <fname_list>\n\
  \        Read estimated models from list of filenames instead of generating\n  \
  \      alignments and estimating parameters.  fname_list can be comma-\n       \
  \ delimited list of files, or, if preceded by a '*', the name of a \n        file\
  \ containing the file names (one per line).  Can be used to compute\n        statistics\
  \ for replicates that have been processed separately (see\n        --alignments-only).\
  \  When this option is used, the primary argument\n        to the program (<model_fname>|<msa_fname>)\
  \ will be ignored.\n\n    --output-average, -A <fname>\n        Output a tree model\
  \ representing the average of all input\n        models to the specified file.\n\
  \n    --quiet, -q\n        Proceed quietly.\n\n    --help, -h\n        Print this\
  \ help message.\n\n (tree-building options)\n\n    --tree, -t <tree_fname>|<tree_string>\n\
  \        (Required if non-parametric and more than two species) Name\n        of\
  \ file or literal string defining tree topology.\n\n    --subst-mod, -s JC69|F81|HKY85|REV|SSREV|UNREST|R2|R2S|U2|U2S|R3|R3S|U3|U3S\n\
  \        (default REV).  Nucleotide substitution model.\n\n    --nrates, -k <nratecats>\n\
  \        (default 1).  Number of rate categories to use.  Specifying a\n       \
  \ value of greater than one causes the discrete gamma model for\n        rate variation\
  \ to be used.\n\n    --EM, -E\n        Use EM rather than the BFGS quasi-Newton\
  \ algorithm for parameter\n        estimation.\n\n    --precision, -p HIGH|MED|LOW\n\
  \        (default HIGH) Level of precision to use in estimating model\n        parameters.\n\
  \n    --init-model, -M <mod_fname>\n        Initialize optimization procedure with\
  \ specified tree model.\n\n    --init-random, -r\n        Initialize parameters\
  \ randomly.\n\n    --scale,-P <rho>\n        Scale input tree by factor rho before\
  \ doing parametric simulations.\n\n    --subtree,-S <node>\n        For use with\
  \ --subtree-scale and/or subtree-switch.  Define \n        subtree including all\
  \ children of named node, including branch \n\tleading up to node.\n\n    --subtree-scale,-l\
  \ <lambda>\n        Scale subtree defined with --subtree option by factor lambda.\n\
  \n    --subtree-switch,-w <prob>\n        With given probability, randomly switch\
  \ branches in tree from\n\tsubtree to supertree and vice versa.  Randomization is\
  \ performed\n\tindependently for each branch in every column of simulated data.\n\
  \n    --scale-file,-F <file>\n        (For use with --subtree in parametric mode).\
  \  Instead of using \n        --subtree-scale or --scale, read in a tab-delimited\
  \ file with \n        three columns: numSite,scale,subtree_scale.  For each row\
  \ in the \n        file phyloBoot will simulate the given number of sites with those\
  \ \n        scaling factors, and then will move on to the next row, so that the\
  \ \n        total number of sites is the sum of the first column.\n"
generated_using:
- --help
docker_image:
