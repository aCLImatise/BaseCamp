from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, String

Novasplice_V0_1_0 = CommandToolBuilder(tool="novasplice", base_command=["novasplice"], inputs=[ToolInput(tag="in_vcf", input_type=File(optional=True), prefix="--vcf", doc=InputDocumentation(doc="Full path to the sorted vcf file being used")), ToolInput(tag="in_zipped_vcf", input_type=File(optional=True), prefix="--zippedvcf", doc=InputDocumentation(doc="Full path to the sorted zipped vcf file being used")), ToolInput(tag="in_reference", input_type=File(optional=True), prefix="--reference", doc=InputDocumentation(doc="Full path to the reference genome being used")), ToolInput(tag="in_zipped_reference", input_type=File(optional=True), prefix="--zippedreference", doc=InputDocumentation(doc="Full path to the zipped reference genome being used")), ToolInput(tag="in_bed", input_type=File(optional=True), prefix="--bed", doc=InputDocumentation(doc="Full path to the reference exon boundary bed file\nbeing used")), ToolInput(tag="in_chr_lens", input_type=Int(optional=True), prefix="--chrlens", doc=InputDocumentation(doc="Full path to the chromosome length file being used")), ToolInput(tag="in_percent", input_type=String(optional=True), prefix="--percent", doc=InputDocumentation(doc="Lower bound percent to call novel splice site")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="Path to the output folder to dump simdigree's output\nto. Default is working directory under\n/novasplice_output")), ToolInput(tag="in_intermediate", input_type=Int(optional=True), prefix="--intermediate", doc=InputDocumentation(doc="Path to output folder that will hold intermediate\nfiles generated, not specific to the provided vcf.\nEspecially useful when running NovaSplice on a large\nnumber of VCFs that all come from the same reference\nand make use of the same --bed option.")), ToolInput(tag="in_temp", input_type=File(optional=True), prefix="--temp", doc=InputDocumentation(doc="Full path to an alternative directory to use for temp\nfiles. Default is /tmp")), ToolInput(tag="in_library_name", input_type=File(optional=True), prefix="--libraryname", doc=InputDocumentation(doc="Name of the final file novasplice outputs with\npredictions\n"))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="Path to the output folder to dump simdigree's output\nto. Default is working directory under\n/novasplice_output"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Novasplice_V0_1_0().translate("wdl", allow_empty_container=True)

