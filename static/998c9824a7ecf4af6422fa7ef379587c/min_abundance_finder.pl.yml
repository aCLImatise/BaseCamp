!Command
command:
- min_abundance_finder.pl
positional:
- !Positional
  optional: false
  position: 0
  name: MISC
  description: "--kmerCounter ''  The kmer counting program to use.\nDefault: (empty\
    \ string) auto-choose\nOptions: perl, jellyfish\nat /usr/local/bin/min_abundance_finder.pl\
    \ line 46.\n"
named:
- !Flag
  optional: true
  synonyms:
  - --gt
  description: "1   Look for the first peak at this kmer count\nand then the next\
    \ valley."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --kmer
  description: 21  kmer length
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --numcpus
  description: "This script will apply one thread per kmer\nlength. Multiple values\
    \ of k are tested to\nget a consensus value."
  args: !SimpleFlagArg
    name: '1'
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "\n  min_abundance_finder.pl: \n       Find the valley between two peaks\
  \ on a set of kmers\n       such that you can discard the kmers that are \n    \
  \   likely representative of contamination.\n       This script does not require\
  \ any dependencies.\n\n  Usage: min_abundance_finder.pl file.fastq[.gz]\n  --gt\
  \     1   Look for the first peak at this kmer count\n               and then the\
  \ next valley.\n  --kmer   21  kmer length\n  --numcpus 1  This script will apply\
  \ one thread per kmer\n               length. Multiple values of k are tested to\n\
  \               get a consensus value.\n\n  MISC\n  --kmerCounter ''  The kmer counting\
  \ program to use.\n                    Default: (empty string) auto-choose\n   \
  \                 Options: perl, jellyfish\n   at /usr/local/bin/min_abundance_finder.pl\
  \ line 46.\n"
generated_using:
- --help
docker_image:
