!Command
command:
- findjuncs
positional:
- !Positional
  optional: false
  position: 0
  name: outbase
  description: Basename for output files
named:
- !Flag
  optional: true
  synonyms:
  - --annotation_files
  description: newly_discovered.bed
  args: !SimpleFlagArg
    name: annotation.bed
- !Flag
  optional: true
  synonyms:
  - --export_tophat
  description: Export tophat `.juncs` file in addition to BED output
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -q
  - --quiet
  description: Suppress all warning messages. Cannot use with '-v'.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -v
  - --verbose
  description: "Increase verbosity. With '-v', show every warning.\nWith '-vv', turn\
    \ warnings into exceptions. Cannot use\nwith '-q'. (Default: show each type of\
    \ warning once)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --annotation_format
  description: "Format of annotation_files (Default: GTF2). Note: GFF3\nassembly assumes\
    \ SO v.2.5.2 feature ontologies, which\nmay or may not match your specific file."
  args: !ChoiceFlagArg
    choices: !!set
      GFF3:
      GTF2:
      PSL:
      BigBed:
      BED:
- !Flag
  optional: true
  synonyms:
  - --add_three
  description: "If supplied, coding regions will be extended by 3\nnucleotides at\
    \ their 3' ends (except for GTF2 files\nthat explicitly include `stop_codon` features).\
    \ Use if\nyour annotation file excludes stop codons from CDS."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --tabix
  description: "annotation_files are tabix-compressed and indexed\n(Default: False).\
    \ Ignored for BigBed files."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --sorted
  description: "annotation_files are sorted by chromosomal position\n(Default: False)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --bed_extra_columns
  description: "Number of extra columns in BED file (e.g. in custom\nENCODE formats)\
    \ or list of names for those columns.\n(Default: 0)."
  args: !RepeatFlagArg
    name: BED_EXTRA_COLUMNS
- !Flag
  optional: true
  synonyms:
  - --maxmem
  description: "Maximum desired memory footprint in MB to devote to\nBigBed/BigWig\
    \ files. May be exceeded by large queries.\n(Default: 0, No maximum)"
  args: !SimpleFlagArg
    name: MAXMEM
- !Flag
  optional: true
  synonyms:
  - --gff_transcript_types
  description: "GFF3 feature types to include as transcripts, even if\nno exons are\
    \ present (for GFF3 only; default: use SO\nv2.5.3 specification)"
  args: !RepeatFlagArg
    name: GFF_TRANSCRIPT_TYPES
- !Flag
  optional: true
  synonyms:
  - --gff_exon_types
  description: "GFF3 feature types to include as exons (for GFF3 only;\ndefault: use\
    \ SO v2.5.3 specification)"
  args: !RepeatFlagArg
    name: GFF_EXON_TYPES
- !Flag
  optional: true
  synonyms:
  - --gff_cds_types
  description: "GFF3 feature types to include as CDS (for GFF3 only;\ndefault: use\
    \ SO v2.5.3 specification)\n"
  args: !RepeatFlagArg
    name: GFF_CDS_TYPES
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "usage: findjuncs [-h] [-q] [-v]\n                 [--annotation_files\
  \ infile.[BED | BigBed | GTF2 | GFF3 | PSL]\n                 [infile.[BED | BigBed\
  \ | GTF2 | GFF3 | PSL] ...]]\n                 [--annotation_format {BED,BigBed,GTF2,GFF3,PSL}]\n\
  \                 [--add_three] [--tabix] [--sorted]\n                 [--bed_extra_columns\
  \ BED_EXTRA_COLUMNS [BED_EXTRA_COLUMNS ...]]\n                 [--maxmem MAXMEM]\n\
  \                 [--gff_transcript_types GFF_TRANSCRIPT_TYPES [GFF_TRANSCRIPT_TYPES\
  \ ...]]\n                 [--gff_exon_types GFF_EXON_TYPES [GFF_EXON_TYPES ...]]\n\
  \                 [--gff_cds_types GFF_CDS_TYPES [GFF_CDS_TYPES ...]]\n        \
  \         [--export_tophat]\n                 outbase\n\n------------------------------------------------------------------------------\n\
  \nThis script identify all the unique splice junctions in one or more transcript\n\
  annotations, and exports these as a BED file with one splice junction per line\n\
  Optionally, this script can also export junctions as a Tophat ``.juncs`` file.\n\
  \nIf a splice junction appears multiple times (e.g. used by more than one transcript),\n\
  only the first occurrence of the junction will be reported. Scores, if present,\n\
  are exported unaltered in BED output.\n\nExamples:\n\n.. code-block:: shell\n\n\
  \   # identify splice junctions from a transcript annotation supplied in GTF2\n\
  \   # creates output file 'annotation.bed'\n   $ findjuncs my_annotation --annotation_format\
  \ GTF2 \\\n               --annotation_files transcripts.gtf\n    \n   # merge unique\
  \ annotations from annotation.bed and newly_discovered.bed,\n   # export only unique\
  \ junctions to 'merged_unique.bed'\n   $ findjuncs merged_unique --annotation_format\
  \ BED \\\n               --annotation_files annotation.bed newly_discovered.bed\n\
  \nSee also\n--------\nplastid.bin.slidejuncs\n   Script that makes richer comparisons\
  \ between discovered and annotated\n   junctions, using genomic sequence and plastid.bin.crossmap\n\
  \   results to classify junctions\n\n------------------------------------------------------------------------------\n\
  \npositional arguments:\n  outbase               Basename for output files\n\noptional\
  \ arguments:\n  -h, --help            show this help message and exit\n  --export_tophat\
  \       Export tophat `.juncs` file in addition to BED output\n\nwarning/error options:\n\
  \  -q, --quiet           Suppress all warning messages. Cannot use with '-v'.\n\
  \  -v, --verbose         Increase verbosity. With '-v', show every warning.\n  \
  \                      With '-vv', turn warnings into exceptions. Cannot use\n \
  \                       with '-q'. (Default: show each type of warning once)\n\n\
  annotation file options (one or more annotation files required):\n  Open one or\
  \ more genome annotation files\n\n  --annotation_files infile.[BED | BigBed | GTF2\
  \ | GFF3 | PSL] [infile.[BED | BigBed | GTF2 | GFF3 | PSL] ...]\n              \
  \          Zero or more annotation files (max 1 file if BigBed)\n  --annotation_format\
  \ {BED,BigBed,GTF2,GFF3,PSL}\n                        Format of annotation_files\
  \ (Default: GTF2). Note: GFF3\n                        assembly assumes SO v.2.5.2\
  \ feature ontologies, which\n                        may or may not match your specific\
  \ file.\n  --add_three           If supplied, coding regions will be extended by\
  \ 3\n                        nucleotides at their 3' ends (except for GTF2 files\n\
  \                        that explicitly include `stop_codon` features). Use if\n\
  \                        your annotation file excludes stop codons from CDS.\n \
  \ --tabix               annotation_files are tabix-compressed and indexed\n    \
  \                    (Default: False). Ignored for BigBed files.\n  --sorted   \
  \           annotation_files are sorted by chromosomal position\n              \
  \          (Default: False)\n\nBED-specific options:\n  --bed_extra_columns BED_EXTRA_COLUMNS\
  \ [BED_EXTRA_COLUMNS ...]\n                        Number of extra columns in BED\
  \ file (e.g. in custom\n                        ENCODE formats) or list of names\
  \ for those columns.\n                        (Default: 0).\n\nBigBed-specific options:\n\
  \  --maxmem MAXMEM       Maximum desired memory footprint in MB to devote to\n \
  \                       BigBed/BigWig files. May be exceeded by large queries.\n\
  \                        (Default: 0, No maximum)\n\nGFF3-specific options:\n  --gff_transcript_types\
  \ GFF_TRANSCRIPT_TYPES [GFF_TRANSCRIPT_TYPES ...]\n                        GFF3\
  \ feature types to include as transcripts, even if\n                        no exons\
  \ are present (for GFF3 only; default: use SO\n                        v2.5.3 specification)\n\
  \  --gff_exon_types GFF_EXON_TYPES [GFF_EXON_TYPES ...]\n                      \
  \  GFF3 feature types to include as exons (for GFF3 only;\n                    \
  \    default: use SO v2.5.3 specification)\n  --gff_cds_types GFF_CDS_TYPES [GFF_CDS_TYPES\
  \ ...]\n                        GFF3 feature types to include as CDS (for GFF3 only;\n\
  \                        default: use SO v2.5.3 specification)\n"
generated_using:
- --help
docker_image:
