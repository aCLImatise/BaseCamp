from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, File, Boolean, String

Cooltools_Compute_Expected_V0_1_0 = CommandToolBuilder(tool="cooltools_compute_expected", base_command=["cooltools", "compute-expected"], inputs=[ToolInput(tag="in_nproc", input_type=Int(optional=True), prefix="--nproc", doc=InputDocumentation(doc="Number of processes to split the work\nbetween.[default: 1, i.e. no process pool]")), ToolInput(tag="in_chunksize", input_type=Int(optional=True), prefix="--chunksize", doc=InputDocumentation(doc="Control the number of pixels handled by each\nworker process at a time.  [default:\n10000000]")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="Specify output file name to store the\nexpected in a tsv format.")), ToolInput(tag="in_hdf", input_type=File(optional=True), prefix="--hdf", doc=InputDocumentation(doc="Use hdf5 format instead of tsv. Output file\nname must be specified [Not Implemented].")), ToolInput(tag="in_contact_type", input_type=Boolean(optional=True), prefix="--contact-type", doc=InputDocumentation(doc="[cis|trans]  compute expected for cis or trans region of\na Hi-C map.Ignored when genomic-regions are\nprovided  [default: cis]")), ToolInput(tag="in_genomic_regions", input_type=File(optional=True), prefix="--genomic-regions", doc=InputDocumentation(doc="Path to a BED or BEDPE file containing\ngenomic regions for which expected will be\ncalculated. [Not Implemented]")), ToolInput(tag="in_no_balance", input_type=Boolean(optional=True), prefix="--no-balance", doc=InputDocumentation(doc="Apply balancing weights to data before\ncalculating expected.Bins masked in the\nbalancing weights are ignored from\ncalcualtions.  [default: True]")), ToolInput(tag="in_weight_name", input_type=String(optional=True), prefix="--weight-name", doc=InputDocumentation(doc="Use balancing weight with this name.\n[default: weight]")), ToolInput(tag="in_blacklist", input_type=File(optional=True), prefix="--blacklist", doc=InputDocumentation(doc="Path to a 3-column BED file containing\ngenomic regions to mask out during\ncalculation of expected. Overwrites\ninference of 'bad' regions from balancing\nweights. [Not Implemented]")), ToolInput(tag="in_ignore_diags", input_type=Int(optional=True), prefix="--ignore-diags", doc=InputDocumentation(doc="Number of diagonals to neglect for cis\ncontact type  [default: 2]")), ToolInput(tag="in_cool_path", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="Specify output file name to store the\nexpected in a tsv format.")), ToolOutput(tag="out_hdf", output_type=File(optional=True), selector=InputSelector(input_to_select="in_hdf", type_hint=File()), doc=OutputDocumentation(doc="Use hdf5 format instead of tsv. Output file\nname must be specified [Not Implemented].")), ToolOutput(tag="out_blacklist", output_type=File(optional=True), selector=InputSelector(input_to_select="in_blacklist", type_hint=File()), doc=OutputDocumentation(doc="Path to a 3-column BED file containing\ngenomic regions to mask out during\ncalculation of expected. Overwrites\ninference of 'bad' regions from balancing\nweights. [Not Implemented]"))], container="quay.io/biocontainers/cooltools:0.3.2--py36h29c9776_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Cooltools_Compute_Expected_V0_1_0().translate("wdl")

