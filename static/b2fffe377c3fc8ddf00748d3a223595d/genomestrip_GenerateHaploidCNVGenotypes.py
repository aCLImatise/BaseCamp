from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Boolean

Genomestrip_Generatehaploidcnvgenotypes_V0_1_0 = CommandToolBuilder(tool="genomestrip_GenerateHaploidCNVGenotypes", base_command=["genomestrip", "GenerateHaploidCNVGenotypes"], inputs=[ToolInput(tag="in_vcf_file", input_type=File(optional=True), prefix="--vcfFile", doc=InputDocumentation(doc="Input file (vcf)")), ToolInput(tag="in_output_file", input_type=File(optional=True), prefix="--outputFile", doc=InputDocumentation(doc="Output file (vcf)")), ToolInput(tag="in_reference_file", input_type=File(optional=True), prefix="--referenceFile", doc=InputDocumentation(doc="Reference fasta file")), ToolInput(tag="in_debug", input_type=String(optional=True), prefix="--debug", doc=InputDocumentation(doc="Print extra debugging output")), ToolInput(tag="in_verbose", input_type=String(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Enable verbose output")), ToolInput(tag="in_ploidy_map_file", input_type=File(optional=True), prefix="--ploidyMapFile", doc=InputDocumentation(doc="Ploidy map specifying\ngender-dependent ploidy for\neach region of the reference")), ToolInput(tag="in_gender_map_file", input_type=File(optional=True), prefix="--genderMapFile", doc=InputDocumentation(doc="Map file or files containing\nthe gender for each sample")), ToolInput(tag="in_population_map_file", input_type=File(optional=True), prefix="--populationMapFile", doc=InputDocumentation(doc="Map file or files containing\nthe assigned population for\neach sample")), ToolInput(tag="in_site", input_type=File(optional=True), prefix="--site", doc=InputDocumentation(doc="List (or .list file) of CNV\nsites to be included in the\noutput")), ToolInput(tag="in_estimate_allele_frequencies", input_type=String(optional=True), prefix="--estimateAlleleFrequencies", doc=InputDocumentation(doc="Whether to estimate and use\npopulation-based frequency\npriors at diploid sites\n(default true)")), ToolInput(tag="in_genotype_likelihood_threshold", input_type=Boolean(optional=True), prefix="--genotypeLikelihoodThreshold", doc=InputDocumentation(doc="Threshold at which to consider")), ToolInput(tag="in_logging_level", input_type=String(optional=True), prefix="--logging_level", doc=InputDocumentation(doc="Set the minimum level of")), ToolInput(tag="in_jar", input_type=String(optional=True), prefix="-jar", doc=InputDocumentation(doc="")), ToolInput(tag="in_logging", input_type=String(), position=0, doc=InputDocumentation(doc="-log,--log_to_file <log_to_file>                                                         Set the logging location"))], outputs=[ToolOutput(tag="out_output_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_file", type_hint=File()), doc=OutputDocumentation(doc="Output file (vcf)")), ToolOutput(tag="out_site", output_type=File(optional=True), selector=InputSelector(input_to_select="in_site", type_hint=File()), doc=OutputDocumentation(doc="List (or .list file) of CNV\nsites to be included in the\noutput"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Genomestrip_Generatehaploidcnvgenotypes_V0_1_0().translate("wdl", allow_empty_container=True)

