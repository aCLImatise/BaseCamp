from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, File, String

Bp_Flanks_Pl_V0_1_0 = CommandToolBuilder(tool="bp_flanks.pl", base_command=["bp_flanks.pl"], inputs=[ToolInput(tag="in_position_uses_table", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="Position uses simple nucleotide sequence feature table")), ToolInput(tag="in_define_region_repeat", input_type=Int(optional=True), prefix="--position", doc=InputDocumentation(doc="to define the region of interest, typically a\nSNP or microsatellite repeat around which the flanks are\ndefined.\nThere can be more than one position option or you can\ngive a comma separated list to one position option.\nThe format of a position is:\n[id:] int | range | in-between [-]\nThe optional id is the name you want to call the new\nsequence. If it not given in joins running number to the\nentry name with an underscore.\nThe position is either a point (e.g. 234), a range (e.g\n250..300) or insertion point between nucleotides\n(e.g. 234^235)\nIf the position is not completely within the source\nsequence the output sequence will be truncated and it\nwill print a warning.\nThe optional hyphen [-] at the end of the position\nindicates that that you want the retrieved sequence to be\nin the opposite strand.")), ToolInput(tag="in_defaults_length_nucleotides", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc="Defaults to 100. This is the length of the nucleotides")), ToolInput(tag="in_flank_len", input_type=File(optional=True), prefix="--flanklen", doc=InputDocumentation(doc="retrieved on both sides of the given position.\nIf the source file does not contain")), ToolInput(tag="in_var_4", input_type=String(), position=0, doc=InputDocumentation(doc="SYNOPSIS\nbp_flanks --position POS [-p POS ...]  [--flanklen INT]\naccession | filename")), ToolInput(tag="in_var_5", input_type=String(), position=0, doc=InputDocumentation(doc="ttttgtttttttcttttaagatctgggcatcttttgaatCtacccttcaagtattaagag")), ToolInput(tag="in_var_6", input_type=String(), position=1, doc=InputDocumentation(doc="tttgaggctgtcagagcgct")), ToolInput(tag="in_var_7", input_type=String(), position=0, doc=InputDocumentation(doc="head1 FEEDBACK")), ToolInput(tag="in_var_8", input_type=String(), position=0, doc=InputDocumentation(doc="- General discussion")), ToolInput(tag="in_var_9", input_type=String(), position=0, doc=InputDocumentation(doc="SYNOPSIS\nbp_flanks --position POS [-p POS ...]  [--flanklen INT]\naccession | filename")), ToolInput(tag="in_var_10", input_type=String(), position=0, doc=InputDocumentation(doc="ttttgtttttttcttttaagatctgggcatcttttgaatCtacccttcaagtattaagag")), ToolInput(tag="in_var_11", input_type=String(), position=1, doc=InputDocumentation(doc="tttgaggctgtcagagcgct")), ToolInput(tag="in_var_12", input_type=String(), position=0, doc=InputDocumentation(doc="head1 FEEDBACK")), ToolInput(tag="in_var_13", input_type=String(), position=0, doc=InputDocumentation(doc="- General discussion")), ToolInput(tag="in_var_14", input_type=String(), position=0, doc=InputDocumentation(doc="SYNOPSIS\nbp_flanks --position POS [-p POS ...]  [--flanklen INT]\naccession | filename")), ToolInput(tag="in_var_15", input_type=String(), position=0, doc=InputDocumentation(doc="ttttgtttttttcttttaagatctgggcatcttttgaatCtacccttcaagtattaagag")), ToolInput(tag="in_var_16", input_type=String(), position=1, doc=InputDocumentation(doc="tttgaggctgtcagagcgct")), ToolInput(tag="in_var_17", input_type=String(), position=0, doc=InputDocumentation(doc="head1 FEEDBACK")), ToolInput(tag="in_var_18", input_type=String(), position=0, doc=InputDocumentation(doc="- General discussion")), ToolInput(tag="in_var_19", input_type=String(), position=0, doc=InputDocumentation(doc="SYNOPSIS\nbp_flanks --position POS [-p POS ...]  [--flanklen INT]\naccession | filename")), ToolInput(tag="in_var_20", input_type=String(), position=0, doc=InputDocumentation(doc="ttttgtttttttcttttaagatctgggcatcttttgaatCtacccttcaagtattaagag")), ToolInput(tag="in_var_21", input_type=String(), position=1, doc=InputDocumentation(doc="tttgaggctgtcagagcgct")), ToolInput(tag="in_var_22", input_type=String(), position=0, doc=InputDocumentation(doc="head1 FEEDBACK")), ToolInput(tag="in_var_23", input_type=String(), position=0, doc=InputDocumentation(doc="- General discussion"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bp_Flanks_Pl_V0_1_0().translate("wdl", allow_empty_container=True)

