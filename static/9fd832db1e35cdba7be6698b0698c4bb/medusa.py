from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String

Medusa_V0_1_0 = CommandToolBuilder(tool="medusa", base_command=["medusa"], inputs=[ToolInput(tag="in_optional_parameterthe_option_dallows", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc="OPTIONAL PARAMETER;The option *-d*\nallows for the estimation of the\ndistance between pairs of contigs\nbased on the reference genome(s):\nin this case the scaffolded contigs\nwill be separated by a number of N\ncharacters equal to this estimate.\nThe estimated distances are also\nsaved in the\n<targetGenome>_distanceTable file.\nBy default the scaffolded contigs\nare separated by 100 Ns")), ToolInput(tag="in_draftsfolder_optional_parameter", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc="<<draftsFolder>>                   OPTIONAL PARAMETER; The option *-f*\nis optional and indicates the path\nto the comparison drafts folder")), ToolInput(tag="in_gex_f", input_type=Boolean(optional=True), prefix="-gexf", doc=InputDocumentation(doc="OPTIONAL PARAMETER;Conting network\nand path cover are given in gexf\nformat.")), ToolInput(tag="in_targetgenome_option_iindicates", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="<<targetGenome>>                   REQUIRED PARAMETER;The option *-i*\nindicates the name of the target\ngenome file.")), ToolInput(tag="in_n_five_zero", input_type=Boolean(optional=True), prefix="-n50", doc=InputDocumentation(doc="<<fastaFile>>                    OPTIONAL PARAMETER; The option\n*-n50* allows the calculation of\nthe N50 statistic on a FASTA file.\nIn this case the usage is the\nfollowing: java -jar medusa.jar\n-n50 <name_of_the_fasta>. All the\nother options will be ignored.")), ToolInput(tag="in_outputname_optional_parameter", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="<<outputName>>                     OPTIONAL PARAMETER; The option *-o*\nindicates the name of output fasta\nfile.")), ToolInput(tag="in_random", input_type=Boolean(optional=True), prefix="-random", doc=InputDocumentation(doc="<<numberOfRounds>>            OPTIONAL PARAMETER;The option\n*-random* is available (not\nrequired). This option allows the\nuser to run a given number of\ncleaning rounds and keep the best\nsolution. Since the variability is\nsmall 5 rounds are usually\nsufficient to find the best score.")), ToolInput(tag="in_script_path", input_type=Boolean(optional=True), prefix="-scriptPath", doc=InputDocumentation(doc="<<medusaScriptsFolder>>   OPTIONAL PARAMETER; The folder\ncontaining the medusa scripts.\nDefault value: medusa_scripts")), ToolInput(tag="in_recommended_parameter_optionv", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="RECOMMENDED PARAMETER; The option\n*-v* (recommended) print on console\nthe information given by the\npackage MUMmer. This option is\nstrongly suggested to understand if\nMUMmer is not running properly.")), ToolInput(tag="in_w_two", input_type=Boolean(optional=True), prefix="-w2", doc=InputDocumentation(doc="OPTIONAL PARAMETER;The option *-w2*\nis optional and allows for a\nsequence similarity based weighting\nscheme. Using a different weighting\nscheme may lead to better results.\n")), ToolInput(tag="in_jar", input_type=String(optional=True), prefix="-jar", doc=InputDocumentation(doc="")), ToolInput(tag="in_java", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_outputname_optional_parameter", output_type=File(optional=True), selector=InputSelector(input_to_select="in_outputname_optional_parameter", type_hint=File()), doc=OutputDocumentation(doc="<<outputName>>                     OPTIONAL PARAMETER; The option *-o*\nindicates the name of output fasta\nfile."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Medusa_V0_1_0().translate("wdl", allow_empty_container=True)

