!Command
command:
- nw_trim
- depth
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -a
  description: ": the maximum depth is expressed in number of ancestors, not distance.\n\
    Nodes are not shortened, but no node is retained that has more\nancestors than\
    \ the maximum."
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  description: ': print this message and exit'
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "Trims a tree in various ways.\n\nSynopsis\n--------\n\nnw_trim [-ah] <newick\
  \ trees filename|-> <maximum depth>\n\nor\nnw_trim [-h] <newick trees filename|->\n\
  \nInput\n-----\n\nTwo-argument form:\nThe first argument is the name of a file that\
  \ contains Newick trees, or '-'\n(in which case trees are read from standard input).\
  \ The second argument is\nthe maximum depth: nodes deeper than this will be trimmed.\n\
  \nOne-argument form:\nThe argument is the name of the trees file, or '-' for standard\
  \ input. The \nprogram trims the tree's root.\n\nOutput\n------\n\nA tree whose\
  \ depth is at most the maximum depth (second argument).\nEffectively, it is like\
  \ cutting the tree at that value: nodes that are too\ndeep get trimmed, and internal\
  \ nodes also lose their children.\n\nOptions\n-------\n\n    -a: the maximum depth\
  \ is expressed in number of ancestors, not distance.\n        Nodes are not shortened,\
  \ but no node is retained that has more\n        ancestors than the maximum.\n \
  \   -h: print this message and exit\n\nExamples\n--------\n\n# Cut tree at depth\
  \ 20\n$ nw_trim data/catarrhini 20\n\n# Discard nodes with more than 3 ancestors\n\
  $ nw_trim -a data/catarrhini 3\n"
generated_using:
- -h
docker_image:
