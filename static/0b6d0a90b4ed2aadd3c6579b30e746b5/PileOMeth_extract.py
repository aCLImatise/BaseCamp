from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, Boolean, String, File

Pileometh_Extract_V0_1_0 = CommandToolBuilder(tool="PileOMeth_extract", base_command=["PileOMeth", "extract"], inputs=[ToolInput(tag="in_minimum_mapq_threshold", input_type=Int(optional=True), prefix="-q", doc=InputDocumentation(doc="Minimum MAPQ threshold to include an alignment (default 10)")), ToolInput(tag="in_minimum_phred_threshold", input_type=Int(optional=True), prefix="-p", doc=InputDocumentation(doc="Minimum Phred threshold to include a base (default 5). This\nmust be >0.")), ToolInput(tag="in_maximum_perbase_depth", input_type=Int(optional=True), prefix="-D", doc=InputDocumentation(doc="Maximum per-base depth (default 2000)")), ToolInput(tag="in_minimum_perbase_depth", input_type=Int(optional=True), prefix="-d", doc=InputDocumentation(doc="Minimum per-base depth for reporting output. If you use")), ToolInput(tag="in_merge_context", input_type=Boolean(optional=True), prefix="--mergeContext", doc=InputDocumentation(doc=", this then applies to the merged CpG/CHG.")), ToolInput(tag="in_region_string_extract", input_type=String(optional=True), prefix="-r", doc=InputDocumentation(doc="Region string in which to extract methylation")), ToolInput(tag="in_bed_file_listing", input_type=File(optional=True), prefix="-l", doc=InputDocumentation(doc="A BED file listing regions for inclusion. Note that unlike\nsamtools mpileup, this option will utilize the strand column\n(column 6) if present. Thus, if a region has a '+' in this\ncolumn, then only metrics from the top strand will be\noutput. Note that the -r option can be used to limit the\nregions of -l.")), ToolInput(tag="in_op_ref", input_type=File(optional=True), prefix="--opref", doc=InputDocumentation(doc="Output filename prefix. CpG/CHG/CHH context metrics will be\noutput to STR_CpG.bedGraph and so on.")), ToolInput(tag="in_keep_dupes", input_type=Boolean(optional=True), prefix="--keepDupes", doc=InputDocumentation(doc="By default, any alignment marked as a duplicate is ignored.\nThis option causes them to be incorporated.")), ToolInput(tag="in_keep_singleton", input_type=Boolean(optional=True), prefix="--keepSingleton", doc=InputDocumentation(doc="By default, if only one read in a pair aligns (a singleton)\nthen it's ignored.")), ToolInput(tag="in_keep_discordant", input_type=String(optional=True), prefix="--keepDiscordant", doc=InputDocumentation(doc="default, paired-end alignments with the properly-paired bit\nunset in the FLAG field are ignored. Note that the definition\nof concordant and discordant is based on your aligner\nsettings.")), ToolInput(tag="in_ignore_flags", input_type=Boolean(optional=True), prefix="--ignoreFlags", doc=InputDocumentation(doc="By deault, any alignment marked as secondary (bit 0x100),\nfailing QC (bit 0x200), a PCR/optical duplicate (0x400) or\nsupplemental (0x800) is ignored. This equates to a value of\n0xF00 or 3840 in decimal. If you would like to change that,\nyou can specify a new value here.\nignored. Specifying this causes them to be included.")), ToolInput(tag="in_no_cpg", input_type=Boolean(optional=True), prefix="--noCpG", doc=InputDocumentation(doc="Do not output CpG context methylation metrics")), ToolInput(tag="in_chg", input_type=Boolean(optional=True), prefix="--CHG", doc=InputDocumentation(doc="Output CHG context methylation metrics")), ToolInput(tag="in_chh", input_type=Boolean(optional=True), prefix="--CHH", doc=InputDocumentation(doc="Output CHH context methylation metrics")), ToolInput(tag="in_fraction", input_type=Boolean(optional=True), prefix="--fraction", doc=InputDocumentation(doc="Extract fractional methylation (only) at each position. This\nproduces a file with a .meth.bedGraph extension.")), ToolInput(tag="in_counts", input_type=Boolean(optional=True), prefix="--counts", doc=InputDocumentation(doc="Extract base counts (only) at each position. This produces a\nfile with a .counts.bedGraph extension.")), ToolInput(tag="in_log_it", input_type=Boolean(optional=True), prefix="--logit", doc=InputDocumentation(doc="Extract logit(M/(M+U)) (only) at each position. This produces\na file with a .logit.bedGraph extension.")), ToolInput(tag="in_methyl_kit", input_type=Boolean(optional=True), prefix="--methylKit", doc=InputDocumentation(doc="Output in the format required by methylKit. Note that this is\nincompatible with --mergeContext, --fraction and --counts.")), ToolInput(tag="in_ot", input_type=Int(optional=True), prefix="--OT", doc=InputDocumentation(doc=",INT,INT,INT Inclusion bounds for methylation calls from reads/pairs\norigination from the original top strand. Suggested values can\nbe obtained from the MBias program. Each integer represents a\n1-based position on a read. For example --OT A,B,C,D\ntranslates to, 'Include calls at positions from A through B\non read #1 and C through D on read #2'. If a 0 is used a any\nposition then that is translated to mean start/end of the\nalignment, as appropriate. For example, --OT 5,0,0,0 would\ninclude all but the first 4 bases on read #1. Users are\nstrongly advised to consult a methylation bias plot, for\nexample by using the MBias program.")), ToolInput(tag="in_ob", input_type=Int(optional=True), prefix="--OB", doc=InputDocumentation(doc=",INT,INT,INT")), ToolInput(tag="in_c_tot", input_type=Int(optional=True), prefix="--CTOT", doc=InputDocumentation(doc=",INT,INT,INT")), ToolInput(tag="in_cto_b", input_type=Int(optional=True), prefix="--CTOB", doc=InputDocumentation(doc=",INT,INT,INT As with --OT, but for the original bottom, complementary\nto the original top, and complementary to the original bottom\nstrands, respectively.")), ToolInput(tag="in_ref_dot_fa", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_sorted_alignments_dot_bam", input_type=String(), position=1, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_bed_file_listing", output_type=File(optional=True), selector=InputSelector(input_to_select="in_bed_file_listing", type_hint=File()), doc=OutputDocumentation(doc="A BED file listing regions for inclusion. Note that unlike\nsamtools mpileup, this option will utilize the strand column\n(column 6) if present. Thus, if a region has a '+' in this\ncolumn, then only metrics from the top strand will be\noutput. Note that the -r option can be used to limit the\nregions of -l.")), ToolOutput(tag="out_op_ref", output_type=File(optional=True), selector=InputSelector(input_to_select="in_op_ref", type_hint=File()), doc=OutputDocumentation(doc="Output filename prefix. CpG/CHG/CHH context metrics will be\noutput to STR_CpG.bedGraph and so on."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Pileometh_Extract_V0_1_0().translate("wdl", allow_empty_container=True)

