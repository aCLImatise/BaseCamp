!Command
command:
- iCount
- rnamaps
positional:
- !Positional
  optional: false
  position: 0
  name: rna_map_type
  description: position    all     explicit
- !Positional
  optional: false
  position: 0
  name: bam
  description: BAM file with alligned reads
- !Positional
  optional: false
  position: 1
  name: segmentation
  description: "GTF file with segmentation. Should be a file produced by function\n\
    `get_regions`"
- !Positional
  optional: false
  position: 2
  name: out_file
  description: Output file with analysis results
- !Positional
  optional: false
  position: 3
  name: strange
  description: File with strange propertieas obtained when processing bam file
- !Positional
  optional: false
  position: 4
  name: cross_transcript
  description: File with reads spanning over multiple transcripts or multiple genes
named:
- !Flag
  optional: true
  synonyms:
  - --implicit_handling
  description: "Can be 'closest' or 'split'. In case of implicit read - split score\
    \ to\nboth neighbours or give it just to the closest neighbour (default: closest)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -mis
  - --mismatches
  description: "Reads on same position with random barcode differing less than\n``mismatches``\
    \ are grouped together (default: 2)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --mapq_th
  description: 'Ignore hits with MAPQ < mapq_th (default: 0)'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --holesize_th
  description: "Raeads with size of holes less than holesize_th are treted as if they\n\
    would have no holes (default: 4)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -S
  - --stdout_log
  description: Threshold value (0-50) for logging to stdout. If 0, logging to stdout
    if turned OFF.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -F
  - --file_log
  description: Threshold value (0-50) for logging to file. If 0, logging to file if
    turned OFF.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -P
  - --file_logpath
  description: Path to log file.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -M
  - --results_file
  description: File into which to store Metrics.
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "usage: iCount rnamaps [-h] [--implicit_handling] [-mis] [--mapq_th]\n\
  \                      [--holesize_th] [-S] [-F] [-P] [-M]\n                   \
  \   bam segmentation out_file strange cross_transcript\n\nDistribution of cross-links\
  \ relative to genomic landmarks.\n\nWhat is an RNA-map?\n^^^^^^^^^^^^^^^^^^^\n\n\
  Imagine the following situation (on positive strand)::\n\n    |---intron1---||---exon2---||---intron2---||---exon3---|\n\
  \                              x|-----R1-----|\n\nSituation is simple: a read perfectly\
  \ maps to reference genome. First cross-link\n(nucletide before the start of read\
  \ R1) is located 2 nucleotides before\nlandmark of type 'exon-intron'. By examining\
  \ all cross-links(reads) that are\nlocated in vicinity of landmarks one can obtain\
  \ the distribution of\ncross-link-to-landmark distances. Such distibution is called\
  \ an RNA map.\n\nOf course, situation gets complicated. Real-world-situation more\
  \ likely looks\nlike this::\n\n    |--------transcript1-------|\n    |-ncRNA-||-intron-||-ncRNA-|\n\
  \            |------------------transcript2-----------------|\n            |--CDS--||-intron-||--CDS--||-intron-||--UTR3--|\n\
  \                                    |---------------transcript3--------------|\n\
  \                                    |-UTR5-||-intron-||-CDS-||-intron-||-CDS-|\n\
  \n             x|-----R1-----|\n             x|R2.1->          <--R2.2-|\n     \
  \                           x|-R3-|\n\nAll sort of situations can arise:\n\n   \
  \ * read can intersect with multiple genes/transcripts/segments\n      simultaneously,\
  \ which means that one read is relevant for different types\n      of RNA maps.\n\
  \    * if whole read is mapped to one segment (as is read R3 on transcript2),\n\
  \      then it is impossible to tell the type of RNA map it belongs to: is it\n\
  \      CDS-intron or intron-CDS?\n    * read can be mapped in multiple parts - for\
  \ example when introns are\n      removed before translation, first half of read\
  \ will map to ``exon1`` and\n      second half to ``exon2``.\n    * same cross-link\
  \ event can be represented by multiple reads with same\n      random barcode.\n\
  \    * ...\n\nThe algorithm takes care for all of this, as explained below. It outputs\
  \ a file,\nthat looks like this::\n\n    rna_map_type    position    all     explicit\n\
  \    exon-intron     42          13      14\n    exon-intron     43          123\
  \     19\n    exon-intron     44          56      16\n    ....\n    intron-CDS \
  \     23474       34      2\n    intron-CDS      23475       85      65\n    intron-CDS\
  \      23476       92      1\n    ...\n\nEach line consits of four columns: RNA\
  \ map type, position, all and explicit. RNA\nmap type defines the landmark type,\
  \ while position defines relative distance of\ncross-links to this landmark. All\
  \ and explicit are counting number of crosslinks\nthat are ``positions`` away from\
  \ landmark of type RNA map type. Cross link is\nexplicit, if read identifying cross-link\
  \ is mapped to both parts of RNA-map. In\nupper example, R1 is explicit, since it\
  \ maps to intron *and* exon. Read R3 on\ntranscript2 is implicit, since one has\
  \ to decide wheather it's cross-link\nbelongs to ``CDS-intron`` or ``intron-CDS``\
  \ RNA map. The term *all* means\nexplicit + implicit in this context.\n\nIf read\
  \ is implicit (start and stop within same segment), one can choose two\nvarinats\
  \ of the algorithm. One option is that whole score of read is given to\nRNA-map\
  \ of the *closest* landmark. Other option is to *split* score on half to\nboth neighbouring\
  \ segments. This behaviour is controlled by parameter\nimplicit_handling.\n\nThere\
  \ are also two cases when a read can map in a way that is not predicted by\nannotation:\n\
  \n    * For split reads, second start can fall on nucleotide that is not start of\n\
  \      a new segment. This behaviour is excactly the same as in xlsites analysis.\n\
  \      Such reads are reported in file defined with ``strange`` parameter.\n   \
  \ * Reads that map on two different transcripts or even two different genes\n  \
  \    are repoted in file with name defined in cross_transcript.\n\n-------------------------------------------------------------------------------\n\
  \nThings that still need to be resolved:\n\n    * negative strand inspection:\n\
  \        * for each ss_group, take annotation from reverse strand and check what\n\
  \          is the situation on other side.\n        * What si again the bio-contxt\
  \ here - explain in docs...?\n    * Test: Each cross-link should have the same cDNA\
  \ count as in xlsites\n      results. The final check should be: sum all scores\
  \ - the result should be\n      the same as for xlsites. Actually, the metrics.cross_transcript\
  \ should\n      also be considered:\n      assert: sum(xlsites scores) == sum(RNAmaps\
  \ \"all\" + metrics.cross_transc)\n    * if read crosses two ore more regions from\
  \ start to end, only end-type is\n      considered for RNAmap type. Should we fix\
  \ this and which region type to\n      take? Since reads are tpyically much shorted\
  \ than regions, this is\n      probably a rare case.\n\n-------------------------------------------------------------------------------\n\
  \nWishes and ideas(Jernej, Tomaz):\n\n    * The whole idea is to get a feeling what\
  \ is happening around landmarks\n\n    * separate pre-mRNA and mRNA [this is partially\
  \ done in _add_entry]\n        * Life cyle of RNA: part of DNA in transcribed to\
  \ RNA in nucleus. Introns\n          are cut out already between this process! Really???\n\
  \        * pre-mRNA contains introns, mature mRNA has no introns and goes outside\n\
  \          from the nucleus.\n        * so: RNAmap exon-intron will for sure contain\
  \ only pre-mRNA, but RNAmap\n          exon-exon can contain pre-mRNA and mRNA...\
  \ It would be really nice to\n          report on percentage of theese two categories.\n\
  \        * This can be done by introducing three categories:  pre-mRNa, mRNA and\n\
  \          undecided. This can be determined from results - they contain explicit\
  \ /\n          implicit info and RNAmap type:\n\n    * Intoduce three categories\
  \ (colors in visualisation?) in every RNAmap type.\n      Let's take exon-intron\
  \ as example:\n\n        * whole read in left part - color #1 (negative coord, implicit)\n\
  \        * whole read in right part - color #2 (positive coord, implicit)\n    \
  \    * read crossing junction - color #3 (explicit)\n\n    * How to handle situation\
  \ when one region in individual's sequence clearly\n      differs from reference\
  \ sequence but it is just some variation?\n\n        * Change the reference sequence?\
  \ This can be complex... Make a helper\n          tool for this?\n        * Provide\
  \ additional data in function - which exceptions /abnormalities\n          to ignore?\n\
  \n    * Gaussian smooting of RNAmaps?\n\n    * split read - it can differ also on\
  \ \"first-stop\", not juts second-start\n        * we could have some sort of quality\
  \ check when observing the variance\n          of first-stop-s. THe major question\
  \ is: \"Do all reads for certain\n          xlink event indicate the same behaviour?\"\
  \n\npositional arguments:\n  bam                   BAM file with alligned reads\n\
  \  segmentation          GTF file with segmentation. Should be a file produced by\
  \ function\n                        `get_regions`\n  out_file              Output\
  \ file with analysis results\n  strange               File with strange propertieas\
  \ obtained when processing bam file\n  cross_transcript      File with reads spanning\
  \ over multiple transcripts or multiple genes\n\noptional arguments:\n  -h, --help\
  \            show this help message and exit\n  --implicit_handling   Can be 'closest'\
  \ or 'split'. In case of implicit read - split score to\n                      \
  \  both neighbours or give it just to the closest neighbour (default: closest)\n\
  \  -mis , --mismatches   Reads on same position with random barcode differing less\
  \ than\n                        ``mismatches`` are grouped together (default: 2)\n\
  \  --mapq_th             Ignore hits with MAPQ < mapq_th (default: 0)\n  --holesize_th\
  \         Raeads with size of holes less than holesize_th are treted as if they\n\
  \                        would have no holes (default: 4)\n  -S , --stdout_log \
  \    Threshold value (0-50) for logging to stdout. If 0, logging to stdout if turned\
  \ OFF.\n  -F , --file_log       Threshold value (0-50) for logging to file. If 0,\
  \ logging to file if turned OFF.\n  -P , --file_logpath   Path to log file.\n  -M\
  \ , --results_file   File into which to store Metrics.\n"
generated_using:
- --help
docker_image:
