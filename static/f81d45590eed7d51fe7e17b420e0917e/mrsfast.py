from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Int

Mrsfast_V0_1_0 = CommandToolBuilder(tool="mrsfast", base_command=["mrsfast"], inputs=[ToolInput(tag="in_mrs_fast_ultra", input_type=String(), position=0, doc=InputDocumentation(doc="DDEESSCCRRIIPPTTIIOONN")), ToolInput(tag="in_treated", input_type=String(), position=0, doc=InputDocumentation(doc="sequences are not supported in this version.")), ToolInput(tag="in_to", input_type=String(), position=0, doc=InputDocumentation(doc="install  mrsFAST-ultra, please download the source zip package from")), ToolInput(tag="in_loaded", input_type=String(), position=0, doc=InputDocumentation(doc="file 'mrsfast-ultra-3.X.X.zip', change the current directory to")), ToolInput(tag="in_minal_dot", input_type=String(), position=0, doc=InputDocumentation(doc="The  binary  file  'mrsfast' will be created, which is ready to")), ToolInput(tag="in_use_dot", input_type=String(), position=1, doc=InputDocumentation(doc="$ unzip mrsfast-ultra-3.X.X.zip")), ToolInput(tag="in_t_number_cores", input_type=String(), position=0, doc=InputDocumentation(doc="_t  number  of cores for mapping the sequences (default: 1).")), ToolInput(tag="in_set", input_type=String(), position=0, doc=InputDocumentation(doc="the  input sequence (left mate) to _f_i_l_e_.  Paired-end option")), ToolInput(tag="in_only_dot", input_type=String(), position=1, doc=InputDocumentation(doc="----sseeqq22 _f_i_l_e")), ToolInput(tag="in_length", input_type=Int(), position=0, doc=InputDocumentation(doc="will  be  calculated  if  not  provided by corresponding")), ToolInput(tag="in_options_dot", input_type=String(), position=1, doc=InputDocumentation(doc="----mmiinn _m_i_n_-_d_i_s_c_o_r_d_a_n_t_-_l_e_n_g_t_h")), ToolInput(tag="in_maxdiscordantlength_maximum_", input_type=String(), position=0, doc=InputDocumentation(doc="_m_a_x_-_d_i_s_c_o_r_d_a_n_t_-_l_e_n_g_t_h for maximum length of concordant map-")), ToolInput(tag="in_variation", input_type=String(), position=0, doc=InputDocumentation(doc="Hunter / Common Law. Output will be generate in DIVET")), ToolInput(tag="in_format_dot", input_type=String(), position=1, doc=InputDocumentation(doc="----mmaaxx--ddiissccoorrddaanntt--ccuuttooffff _m")), ToolInput(tag="in_should", input_type=String(), position=0, doc=InputDocumentation(doc="be  created  from  the  dbSNP  (.vcf)  file  using  the")), ToolInput(tag="in_ignored", input_type=String(), position=0, doc=InputDocumentation(doc="only  if  the corresponding read location has a quality")), ToolInput(tag="in_is", input_type=String(), position=0, doc=InputDocumentation(doc="a  Phred-Value  base  33. The default is 53 (base call error")), ToolInput(tag="in_please", input_type=String(), position=0, doc=InputDocumentation(doc="report  the  bugs  through  mrsfast's  web  page at http://mrs-")), ToolInput(tag="in_fast_dot_sourceforge_dotnet", input_type=String(), position=1, doc=InputDocumentation(doc="AAuutthhoorrss")), ToolInput(tag="in_faraz", input_type=String(), position=0, doc=InputDocumentation(doc="Hach, Iman Sarrafi, Farhad Hormozdiari, Can Alkan, Evan E. Eich-")), ToolInput(tag="in_high", input_type=String(), position=0, doc=InputDocumentation(doc="performance  sequencing  applications',  Nucl. Acids Res. (1 July")), ToolInput(tag="in_right", input_type=String(), position=0, doc=InputDocumentation(doc="notice,  thislist  of  conditions  and the following dis-")), ToolInput(tag="in_derived", input_type=String(), position=0, doc=InputDocumentation(doc="from  this software without specific prior written per-")), ToolInput(tag="in_mission_dot", input_type=String(), position=1, doc=InputDocumentation(doc="THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS")), ToolInput(tag="in_ular", input_type=String(), position=0, doc=InputDocumentation(doc="PURPOSE  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR")), ToolInput(tag="in_negligence", input_type=String(), position=0, doc=InputDocumentation(doc="OR  OTHERWISE)  ARISING  IN  ANY WAY OUT OF THE USE OF THIS"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Mrsfast_V0_1_0().translate("wdl", allow_empty_container=True)

