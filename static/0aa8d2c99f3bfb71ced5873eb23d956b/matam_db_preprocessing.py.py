from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean, Int, Float, Array, String

Matam_Db_Preprocessing_Py_V0_1_0 = CommandToolBuilder(tool="matam_db_preprocessing.py", base_command=["matam_db_preprocessing.py"], inputs=[ToolInput(tag="in_input_ref", input_type=File(optional=True), prefix="--input_ref", doc=InputDocumentation(doc="Input reference file (fasta format). Silva-formated taxonomies will be used if")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Increase verbosity")), ToolInput(tag="in_cpu", input_type=Int(optional=True), prefix="--cpu", doc=InputDocumentation(doc="Max number of CPU to use. Default is 1 cpu")), ToolInput(tag="in_max_memory", input_type=Int(optional=True), prefix="--max_memory", doc=InputDocumentation(doc="Maximum memory to use (in MBi). Default is 10000 MBi")), ToolInput(tag="in_min_length", input_type=Int(optional=True), prefix="--min_length", doc=InputDocumentation(doc="Ref sequences minimum length")), ToolInput(tag="in_max_length", input_type=Int(optional=True), prefix="--max_length", doc=InputDocumentation(doc="Ref sequences maximum length")), ToolInput(tag="in_max_consecutive_n", input_type=Int(optional=True), prefix="--max_consecutive_n", doc=InputDocumentation(doc="Maximum nb of consecutive Ns a sequence is allowed to have. Default is 5. Setting\nit to 0 will remove all sequences with Ns. Ns in accepted sequences will be\nreplaced by As")), ToolInput(tag="in_clustering_id_threshold", input_type=Float(optional=True), prefix="--clustering_id_threshold", doc=InputDocumentation(doc="Identity threshold for clustering. Default is 0.95")), ToolInput(tag="in_by_kingdom", input_type=Boolean(optional=True), prefix="--by_kingdom", doc=InputDocumentation(doc="Perform clustering by kingdom")), ToolInput(tag="in_kingdoms", input_type=Array(t=String(), optional=True), prefix="--kingdoms", doc=InputDocumentation(doc="Kingdoms to clusterize the DB for. Default is ['archaea', 'bacteria', 'eukaryota']")), ToolInput(tag="in_out_db_name", input_type=String(optional=True), prefix="--out_db_name", doc=InputDocumentation(doc="Output MATAM db name. Default is composed from parameters")), ToolInput(tag="in_keep_tmp", input_type=Boolean(optional=True), prefix="--keep_tmp", doc=InputDocumentation(doc="Do not remove tmp files")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="Output debug infos")), ToolInput(tag="in_d", input_type=String(optional=True), prefix="-d", doc=InputDocumentation(doc="")), ToolInput(tag="in_available", input_type=String(), position=0, doc=InputDocumentation(doc="-d DBDIR, --db_dir DBDIR           Database output directory. Default is cwd"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Matam_Db_Preprocessing_Py_V0_1_0().translate("wdl", allow_empty_container=True)

