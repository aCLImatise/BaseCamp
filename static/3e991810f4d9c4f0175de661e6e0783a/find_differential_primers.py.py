from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Directory, Int, Boolean, String

Find_Differential_Primers_Py_V0_1_0 = CommandToolBuilder(tool="find_differential_primers.py", base_command=["find_differential_primers.py"], inputs=[ToolInput(tag="in_in_file", input_type=File(optional=True), prefix="--infile", doc=InputDocumentation(doc="location of configuration file")), ToolInput(tag="in_outdir", input_type=Directory(optional=True), prefix="--outdir", doc=InputDocumentation(doc="directory for output files")), ToolInput(tag="in_num_return", input_type=Int(optional=True), prefix="--numreturn", doc=InputDocumentation(doc="number of primers to find")), ToolInput(tag="in_hybrid_probe", input_type=Boolean(optional=True), prefix="--hybridprobe", doc=InputDocumentation(doc="generate internal oligo as a hybridisation probe")), ToolInput(tag="in_filter_gc_three_prime", input_type=Boolean(optional=True), prefix="--filtergc3prime", doc=InputDocumentation(doc="allow no more than two GC at the 3` end of primers")), ToolInput(tag="in_single_product", input_type=File(optional=True), prefix="--single_product", doc=InputDocumentation(doc="location of FASTA sequence file containing sequences\nfrom which a sequence-specific primer must amplify\nexactly one product.")), ToolInput(tag="in_prodigal", input_type=String(optional=True), prefix="--prodigal", doc=InputDocumentation(doc="location of Prodigal executable")), ToolInput(tag="in_e_primer_three", input_type=Int(optional=True), prefix="--eprimer3", doc=InputDocumentation(doc="location of EMBOSS eprimer3 executable")), ToolInput(tag="in_blast_exe", input_type=String(optional=True), prefix="--blast_exe", doc=InputDocumentation(doc="location of BLASTN/BLASTALL executable")), ToolInput(tag="in_blast_db", input_type=String(optional=True), prefix="--blastdb", doc=InputDocumentation(doc="location of BLAST database")), ToolInput(tag="in_use_blast", input_type=Boolean(optional=True), prefix="--useblast", doc=InputDocumentation(doc="use existing BLAST results")), ToolInput(tag="in_no_cds", input_type=Boolean(optional=True), prefix="--nocds", doc=InputDocumentation(doc="do not restrict primer prediction to CDS")), ToolInput(tag="in_no_prodigal", input_type=Boolean(optional=True), prefix="--noprodigal", doc=InputDocumentation(doc="do not carry out Prodigal prediction step")), ToolInput(tag="in_no_primer_three", input_type=Boolean(optional=True), prefix="--noprimer3", doc=InputDocumentation(doc="do not carry out ePrimer3 prediction step")), ToolInput(tag="in_no_primer_search", input_type=Boolean(optional=True), prefix="--noprimersearch", doc=InputDocumentation(doc="do not carry out PrimerSearch step")), ToolInput(tag="in_no_classify", input_type=Boolean(optional=True), prefix="--noclassify", doc=InputDocumentation(doc="do not carry out primer classification step")), ToolInput(tag="in_o_size", input_type=Int(optional=True), prefix="--osize", doc=InputDocumentation(doc="optimal size for primer oligo")), ToolInput(tag="in_minsize", input_type=Int(optional=True), prefix="--minsize", doc=InputDocumentation(doc="minimum size for primer oligo")), ToolInput(tag="in_maxsize", input_type=Int(optional=True), prefix="--maxsize", doc=InputDocumentation(doc="maximum size for primer oligo")), ToolInput(tag="in_otm", input_type=String(optional=True), prefix="--otm", doc=InputDocumentation(doc="optimal melting temperature for primer oligo")), ToolInput(tag="in_mint_m", input_type=String(optional=True), prefix="--mintm", doc=InputDocumentation(doc="minimum melting temperature for primer oligo")), ToolInput(tag="in_max_tm", input_type=Int(optional=True), prefix="--maxtm", doc=InputDocumentation(doc="maximum melting temperature for primer oligo")), ToolInput(tag="in_ogc_percent", input_type=String(optional=True), prefix="--ogcpercent", doc=InputDocumentation(doc="optimal %GC for primer oligo")), ToolInput(tag="in_ming_c", input_type=String(optional=True), prefix="--mingc", doc=InputDocumentation(doc="minimum %GC for primer oligo")), ToolInput(tag="in_max_gc", input_type=Int(optional=True), prefix="--maxgc", doc=InputDocumentation(doc="maximum %GC for primer oligo")), ToolInput(tag="in_p_size_opt", input_type=Int(optional=True), prefix="--psizeopt", doc=InputDocumentation(doc="optimal size for amplified region")), ToolInput(tag="in_p_size_min", input_type=Int(optional=True), prefix="--psizemin", doc=InputDocumentation(doc="minimum size for amplified region")), ToolInput(tag="in_p_size_max", input_type=Int(optional=True), prefix="--psizemax", doc=InputDocumentation(doc="maximum size for amplified region")), ToolInput(tag="in_max_poly_x", input_type=Int(optional=True), prefix="--maxpolyx", doc=InputDocumentation(doc="maximum run of repeated nucleotides in primer")), ToolInput(tag="in_mismatch_percent", input_type=String(optional=True), prefix="--mismatchpercent", doc=InputDocumentation(doc="allowed percentage mismatch in primersearch")), ToolInput(tag="in_oligo_o_size", input_type=Int(optional=True), prefix="--oligoosize", doc=InputDocumentation(doc="optimal size for internal oligo")), ToolInput(tag="in_oligo_minsize", input_type=Int(optional=True), prefix="--oligominsize", doc=InputDocumentation(doc="minimum size for internal oligo")), ToolInput(tag="in_oligo_maxsize", input_type=Int(optional=True), prefix="--oligomaxsize", doc=InputDocumentation(doc="maximum size for internal oligo")), ToolInput(tag="in_oligo_otm", input_type=String(optional=True), prefix="--oligootm", doc=InputDocumentation(doc="optimal melting temperature for internal oligo")), ToolInput(tag="in_oligo_mint_m", input_type=String(optional=True), prefix="--oligomintm", doc=InputDocumentation(doc="minimum melting temperature for internal oligo")), ToolInput(tag="in_oligo_max_tm", input_type=Int(optional=True), prefix="--oligomaxtm", doc=InputDocumentation(doc="maximum melting temperature for internal oligo")), ToolInput(tag="in_oligo_ogc_percent", input_type=String(optional=True), prefix="--oligoogcpercent", doc=InputDocumentation(doc="optimal %GC for internal oligo")), ToolInput(tag="in_oligo_ming_c", input_type=String(optional=True), prefix="--oligomingc", doc=InputDocumentation(doc="minimum %GC for internal oligo")), ToolInput(tag="in_oligo_max_gc", input_type=Int(optional=True), prefix="--oligomaxgc", doc=InputDocumentation(doc="maximum %GC for internal oligo")), ToolInput(tag="in_oligo_max_poly_x", input_type=Int(optional=True), prefix="--oligomaxpolyx", doc=InputDocumentation(doc="maximum run of repeated nt in internal oligo")), ToolInput(tag="in_cpus", input_type=Int(optional=True), prefix="--cpus", doc=InputDocumentation(doc="number of CPUs to use in multiprocessing")), ToolInput(tag="in_sge", input_type=Boolean(optional=True), prefix="--sge", doc=InputDocumentation(doc="use SGE job scheduler")), ToolInput(tag="in_clean", input_type=Boolean(optional=True), prefix="--clean", doc=InputDocumentation(doc="clean up old output files before running")), ToolInput(tag="in_clean_only", input_type=Boolean(optional=True), prefix="--cleanonly", doc=InputDocumentation(doc="clean up old output files and exit")), ToolInput(tag="in_log_file", input_type=File(optional=True), prefix="--logfile", doc=InputDocumentation(doc="script logfile location")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="report progress to log")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="report extra progress to log for debugging")), ToolInput(tag="in_keep_logs", input_type=Boolean(optional=True), prefix="--keep_logs", doc=InputDocumentation(doc="store log files from each process")), ToolInput(tag="in_log_dir", input_type=Directory(optional=True), prefix="--log_dir", doc=InputDocumentation(doc="store called process log files in this directory")), ToolInput(tag="in_arg", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_outdir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_outdir", type_hint=File()), doc=OutputDocumentation(doc="directory for output files"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Find_Differential_Primers_Py_V0_1_0().translate("wdl", allow_empty_container=True)

