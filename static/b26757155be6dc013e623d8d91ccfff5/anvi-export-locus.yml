!Command
positional: []
named:
- !Flag
  description: Anvi'o contigs database generated by 'anvi-gen- contigs'
  synonyms:
  - -c
  - --contigs-db
  args: !SimpleFlagArg
    name: CONTIGS_DB
  optional: true
- !Flag
  description: search term.
  synonyms:
  - -s
  - --search-term
  args: !SimpleFlagArg
    name: SEARCH_TERM
  optional: true
- !Flag
  description: Gene caller ids. Multiple of them can be declared separated by a delimiter
    (the default is a comma). In anvi-gen-variability-profile, if you declare nothing
    you will get all genes matching your other filtering criteria. In other programs,
    you may get everything, nothing, or an error. It really depends on the situation.
    Fortunately, mistakes are cheap, so it's worth a try.
  synonyms:
  - --gene-caller-ids
  args: !SimpleFlagArg
    name: GENE_CALLER_IDS
  optional: true
- !Flag
  description: The delimiter to parse multiple input terms. The default is ','.
  synonyms:
  - --delimiter
  args: !SimpleFlagArg
    name: CHAR
  optional: true
- !Flag
  description: Directory path for output files
  synonyms:
  - -o
  - --output-dir
  args: !SimpleFlagArg
    name: DIR_PATH
  optional: true
- !Flag
  description: A prefix to be used while naming the output files (no file type extensions
    please; just a prefix).
  synonyms:
  - -O
  - --output-file-prefix
  args: !SimpleFlagArg
    name: FILENAME_PREFIX
  optional: true
- !Flag
  description: Overwrite if the output files and/or directories exist.
  synonyms:
  - -W
  - --overwrite-output-destinations
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: By default anvi'o will return hits even if they are partial. Declaring
    this flag will make anvi'o filter all hits that are partial. Partial hits are
    hits in which you asked for n1 genes before and n2 genes after the gene that matched
    the search criteria but the search hits the end of the contig before finding the
    number of genes that you asked.
  synonyms:
  - --remove-partial-hits
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: By default, if a gene that is found by the search criteria is reverse
    in it's direction, then the sequence of the entire locus is reversed before it
    is saved to the output. If you wish to prevent this behavior then use the flag
    --never-reverse-complement.
  synonyms:
  - --never-reverse-complement
  args: !EmptyFlagArg {}
  optional: true
command:
- anvi-export-locus
parent:
subcommands: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: anvi-export-locus [-h] -c CONTIGS_DB [-s SEARCH_TERM]\n       \
  \                  [--gene-caller-ids GENE_CALLER_IDS]\n                       \
  \  [--delimiter CHAR] [-o DIR_PATH] -O FILENAME_PREFIX\n                       \
  \  [--flank-mode] [-n NUM_GENES] [--use-hmm]\n                         [--hmm-sources\
  \ SOURCE NAME] [-l]\n                         [--annotation-sources SOURCE NAME[S]]\
  \ [-W]\n                         [--remove-partial-hits] [--never-reverse-complement]\n\
  \nThis program helps you cut a 'locus' from a larger genetic context (e.g.,\ncontigs,\
  \ genomes). By default, anvi'o will locate a user-defined anchor gene,\nextend its\
  \ selection upstream and downstream based on the --num-genes\nargument, then extract\
  \ the locus to create a new contigs database. The anchor\ngene must be provided\
  \ as --search-term, --gene-caller-ids, or --hmm-sources.\nIf --flank-mode is designated,\
  \ you MUST provide TWO flanking genes that define\nthe locus region (Please see\
  \ --flank-mode help for more information). If\neverything goes as plan, anvi'o will\
  \ give you individual locus contigs\ndatabases for every matching anchor gene found\
  \ in the original contigs\ndatabase provided. Enjoy your mini contigs databases!\n\
  \noptional arguments:\n  -h, --help            show this help message and exit\n\
  \nEssential INPUT:\n  -c CONTIGS_DB, --contigs-db CONTIGS_DB\n                 \
  \       Anvi'o contigs database generated by 'anvi-gen-\n                      \
  \  contigs'\n\nQuery options for locating locus:\n  search according to either hmm\
  \ or functional annotations\n\n  -s SEARCH_TERM, --search-term SEARCH_TERM\n   \
  \                     search term.\n  --gene-caller-ids GENE_CALLER_IDS\n      \
  \                  Gene caller ids. Multiple of them can be declared\n         \
  \               separated by a delimiter (the default is a comma). In\n        \
  \                anvi-gen-variability-profile, if you declare nothing\n        \
  \                you will get all genes matching your other filtering\n        \
  \                criteria. In other programs, you may get everything,\n        \
  \                nothing, or an error. It really depends on the\n              \
  \          situation. Fortunately, mistakes are cheap, so it's\n               \
  \         worth a try.\n  --delimiter CHAR      The delimiter to parse multiple\
  \ input terms. The\n                        default is ','.\n\nTHE OUTPUT:\n  Where\
  \ should the output go. It will be one FASTA file with all matches or\n  one FASTA\
  \ per match (see --separate-fasta)\n\n  -o DIR_PATH, --output-dir DIR_PATH\n   \
  \                     Directory path for output files\n  -O FILENAME_PREFIX, --output-file-prefix\
  \ FILENAME_PREFIX\n                        A prefix to be used while naming the\
  \ output files (no\n                        file type extensions please; just a\
  \ prefix).\n\nADDITIONAL STUFF:\n  Flags and parameters you can set according to\
  \ your need\n\n  --flank-mode          If in --flank-mode, anvi-export-locus will\
  \ extract a\n                        locus based on the coordinates of flanking\
  \ genes. You\n                        MUST provide 2 flanking genes in the form\
  \ of TWO\n                        --search-term, --gene-caller-ids, or --hmm-sources.\n\
  \                        The --flank-mode option is appropriate for extracting\n\
  \                        loci of variable gene number lengths, but are\n       \
  \                 consistently located between the same flanking genes\n       \
  \                 in the genome(s) of interest.\n  -n NUM_GENES, --num-genes NUM_GENES\n\
  \                        Required for DEFAULT mode. For each match (to the\n   \
  \                     function, or HMM that was searched) a sequence which\n   \
  \                     includes a block of genes will be saved. The block\n     \
  \                   could include either genes only in the forward\n           \
  \             direction of the gene (defined according to the\n                \
  \        direction of transcription of the gene) or reverse or\n               \
  \         both. If you wish to get both direction use a comma\n                \
  \        (no spaces) to define the block For example, '-n 4,5'\n               \
  \         will give you four genes before and five genes after.\n              \
  \          Whereas, '-n 5' will give you five genes after (in\n                \
  \        addition to the gene that matched). To get only genes\n               \
  \         preceding the match use '-n 5,0'. If the number of\n                 \
  \       genes requested exceeds the length of the contig, then\n               \
  \         the output will include the sequence until the end of\n              \
  \          the contig.\n  --use-hmm             Use HMM hits instead of functional\
  \ annotations. In\n                        other words, --search-term will be queried\
  \ against HMM\n                        source annotations, NOT functional annotations.\
  \ If you\n                        choose this option, you must also say which HMM\
  \ source\n                        to use.\n  --hmm-sources SOURCE NAME\n       \
  \                 Get sequences for a specific list of HMM sources. You\n      \
  \                  can list one or more sources by separating them from\n      \
  \                  each other with a comma character (i.e., '--hmm-\n          \
  \              sources source_1,source_2,source_3'). If you would\n            \
  \            like to see a list of available sources in the contigs\n          \
  \              database, run this program with '--list-hmm-sources'\n          \
  \              flag.\n  -l, --list-hmm-sources\n                        List available\
  \ HMM sources in the contigs database and\n                        quit.\n  --annotation-sources\
  \ SOURCE NAME[S]\n                        Get functional annotations for a specific\
  \ list of\n                        annotation sources. You can specify one or more\n\
  \                        sources by separating them from each other with a\n   \
  \                     comma character (i.e., '--annotation-sources\n           \
  \             source_1,source_2,source_3'). The default behavior is\n          \
  \              to return everything\n  -W, --overwrite-output-destinations\n   \
  \                     Overwrite if the output files and/or directories\n       \
  \                 exist.\n  --remove-partial-hits\n                        By default\
  \ anvi'o will return hits even if they are\n                        partial. Declaring\
  \ this flag will make anvi'o filter\n                        all hits that are partial.\
  \ Partial hits are hits in\n                        which you asked for n1 genes\
  \ before and n2 genes after\n                        the gene that matched the search\
  \ criteria but the\n                        search hits the end of the contig before\
  \ finding the\n                        number of genes that you asked.\n  --never-reverse-complement\n\
  \                        By default, if a gene that is found by the search\n   \
  \                     criteria is reverse in it's direction, then the\n        \
  \                sequence of the entire locus is reversed before it is\n       \
  \                 saved to the output. If you wish to prevent this\n           \
  \             behavior then use the flag --never-reverse-complement.\n"
generated_using:
- --help
