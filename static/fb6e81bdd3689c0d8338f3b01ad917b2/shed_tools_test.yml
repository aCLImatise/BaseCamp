!Command
command:
- shed-tools
- test
positional: []
named:
- !Flag
  description: Tools file to use (see tool_list.yaml.sample)
  synonyms:
  - -t
  - --toolsfile
  args: !SimpleFlagArg
    name: TOOL_LIST_FILE
  optional: true
- !Flag
  description: Install tool represented by yaml string
  synonyms:
  - -y
  - --yaml_tool
  args: !SimpleFlagArg
    name: TOOL_YAML
  optional: true
- !Flag
  description: "The name of the tool to install (only applicable if\nthe tools file\
    \ is not provided)."
  synonyms:
  - --name
  args: !SimpleFlagArg
    name: NAME
  optional: true
- !Flag
  description: "The owner of the tool to install (only applicable if\nthe tools file\
    \ is not provided)."
  synonyms:
  - --owner
  args: !SimpleFlagArg
    name: OWNER
  optional: true
- !Flag
  description: "[REVISIONS [REVISIONS ...]]\nThe revisions of the tool repository\
    \ that will be\ninstalled. All revisions must be specified after this\nflag by\
    \ a space.Example: --revisions 0a5c7992b1ac\nf048033da666(Only applicable if the\
    \ tools file is not\nprovided)."
  synonyms:
  - --revisions
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "The Tool Shed URL where to install the tool from. This\nis applicable\
    \ only if the tool info is provided as an\noption vs. in the tools file."
  synonyms:
  - --toolshed
  args: !SimpleFlagArg
    name: TOOL_SHED_URL
  optional: true
- !Flag
  description: "Record tool test output to specified file. This file\ncan be turned\
    \ into reports with ``planemo test_reports\n<output.json>``."
  synonyms:
  - --test_json
  args: !SimpleFlagArg
    name: TEST_JSON
  optional: true
- !Flag
  description: "A user is needed to execute the tests. This can be\ndifferent the\
    \ --api_key which is assumed to be an\nadmin key. If --api_key is a valid user\
    \ (e.g. it is\nnot a master API key) this does not need to be\nspecified and --api_key\
    \ will be reused."
  synonyms:
  - --test_user_api_key
  args: !SimpleFlagArg
    name: TEST_USER_API_KEY
  optional: true
- !Flag
  description: "A user is needed to execute the tests. If --api_key is\na master api\
    \ key (i.e. not tied to a real user) and\n--test_user_api_key isn't specified,\
    \ this user email\nwill be used. This user will be created if needed."
  synonyms:
  - --test_user
  args: !SimpleFlagArg
    name: TEST_USER
  optional: true
- !Flag
  description: "Specify the maximum number of tests that will be run\nin parallel."
  synonyms:
  - --parallel_tests
  args: !SimpleFlagArg
    name: PARALLEL_TESTS
  optional: true
- !Flag
  description: Increase output verbosity.
  synonyms:
  - -v
  - --verbose
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Where the log file should be stored. Default is a file\nin your system's\
    \ temp folder"
  synonyms:
  - --log_file
  args: !SimpleFlagArg
    name: LOG_FILE
  optional: true
- !Flag
  description: Target Galaxy instance URL/IP address
  synonyms:
  - -g
  - --galaxy
  args: !SimpleFlagArg
    name: GALAXY
  optional: true
- !Flag
  description: Galaxy user email address
  synonyms:
  - -u
  - --user
  args: !SimpleFlagArg
    name: USER
  optional: true
- !Flag
  description: Password for the Galaxy user
  synonyms:
  - -p
  - --password
  args: !SimpleFlagArg
    name: PASSWORD
  optional: true
- !Flag
  description: "Galaxy admin user API key (required if not defined in\nthe tools list\
    \ file)\n"
  synonyms:
  - -a
  - --api_key
  args: !SimpleFlagArg
    name: API_KEY
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: shed-tools test [-h] [-v] [--log_file LOG_FILE] [-g GALAXY] [-u\
  \ USER]\n                       [-p PASSWORD] [-a API_KEY] [-t TOOL_LIST_FILE]\n\
  \                       [-y TOOL_YAML] [--name NAME] [--owner OWNER]\n         \
  \              [--revisions [REVISIONS [REVISIONS ...]]]\n                     \
  \  [--toolshed TOOL_SHED_URL] [--test_json TEST_JSON]\n                       [--test_user_api_key\
  \ TEST_USER_API_KEY]\n                       [--test_user TEST_USER]\n         \
  \              [--parallel_tests PARALLEL_TESTS]\n\noptional arguments:\n  -h, --help\
  \            show this help message and exit\n  -t TOOL_LIST_FILE, --toolsfile TOOL_LIST_FILE\n\
  \                        Tools file to use (see tool_list.yaml.sample)\n  -y TOOL_YAML,\
  \ --yaml_tool TOOL_YAML\n                        Install tool represented by yaml\
  \ string\n  --name NAME           The name of the tool to install (only applicable\
  \ if\n                        the tools file is not provided).\n  --owner OWNER\
  \         The owner of the tool to install (only applicable if\n               \
  \         the tools file is not provided).\n  --revisions [REVISIONS [REVISIONS\
  \ ...]]\n                        The revisions of the tool repository that will\
  \ be\n                        installed. All revisions must be specified after this\n\
  \                        flag by a space.Example: --revisions 0a5c7992b1ac\n   \
  \                     f048033da666(Only applicable if the tools file is not\n  \
  \                      provided).\n  --toolshed TOOL_SHED_URL\n                \
  \        The Tool Shed URL where to install the tool from. This\n              \
  \          is applicable only if the tool info is provided as an\n             \
  \           option vs. in the tools file.\n  --test_json TEST_JSON\n           \
  \             Record tool test output to specified file. This file\n           \
  \             can be turned into reports with ``planemo test_reports\n         \
  \               <output.json>``.\n  --test_user_api_key TEST_USER_API_KEY\n    \
  \                    A user is needed to execute the tests. This can be\n      \
  \                  different the --api_key which is assumed to be an\n         \
  \               admin key. If --api_key is a valid user (e.g. it is\n          \
  \              not a master API key) this does not need to be\n                \
  \        specified and --api_key will be reused.\n  --test_user TEST_USER\n    \
  \                    A user is needed to execute the tests. If --api_key is\n  \
  \                      a master api key (i.e. not tied to a real user) and\n   \
  \                     --test_user_api_key isn't specified, this user email\n   \
  \                     will be used. This user will be created if needed.\n  --parallel_tests\
  \ PARALLEL_TESTS\n                        Specify the maximum number of tests that\
  \ will be run\n                        in parallel.\n\nGeneral options:\n  -v, --verbose\
  \         Increase output verbosity.\n  --log_file LOG_FILE   Where the log file\
  \ should be stored. Default is a file\n                        in your system's\
  \ temp folder\n\nGalaxy connection:\n  -g GALAXY, --galaxy GALAXY\n            \
  \            Target Galaxy instance URL/IP address\n  -u USER, --user USER  Galaxy\
  \ user email address\n  -p PASSWORD, --password PASSWORD\n                     \
  \   Password for the Galaxy user\n  -a API_KEY, --api_key API_KEY\n            \
  \            Galaxy admin user API key (required if not defined in\n           \
  \             the tools list file)\n"
generated_using:
- --help
