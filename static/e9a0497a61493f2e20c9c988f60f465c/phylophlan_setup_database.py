from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Boolean

Phylophlan_Setup_Database_V0_1_0 = CommandToolBuilder(tool="phylophlan_setup_database", base_command=["phylophlan_setup_database"], inputs=[ToolInput(tag="in_input", input_type=File(optional=True), prefix="--input", doc=InputDocumentation(doc="Specify the path to either the folder containing the\nmarker files or the file of markers, in (multi-)fasta\nformat (default: None)")), ToolInput(tag="in_get_core_proteins", input_type=String(optional=True), prefix="--get_core_proteins", doc=InputDocumentation(doc="Specify the taxonomic label for which download the set\nof core proteins. The label must represent a species:\n'--get_core_proteins s__Escherichia_coli' (default:\nNone)")), ToolInput(tag="in_database_update", input_type=Boolean(optional=True), prefix="--database_update", doc=InputDocumentation(doc="Update the databases file (default: False)")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="Specify path to the output folder where to save the\ndatabase (default: None)")), ToolInput(tag="in_db_name", input_type=String(optional=True), prefix="--db_name", doc=InputDocumentation(doc="Specify the name of the output database (default:\nNone)")), ToolInput(tag="in_input_extension", input_type=File(optional=True), prefix="--input_extension", doc=InputDocumentation(doc="Specify the extension of the input file(s) specified\nvia -i/--input (default: None)")), ToolInput(tag="in_db_type", input_type=String(optional=True), prefix="--db_type", doc=InputDocumentation(doc="Specify the type of the database, where 'n' stands for\nnucleotides and 'a' for amino acids (default: None)")), ToolInput(tag="in_output_extension", input_type=String(optional=True), prefix="--output_extension", doc=InputDocumentation(doc="Set the database output extension (default: None)")), ToolInput(tag="in_overwrite", input_type=File(optional=True), prefix="--overwrite", doc=InputDocumentation(doc="If specified and the output file exists it will be\noverwritten (default: False)")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Prints more stuff (default: False)"))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="Specify path to the output folder where to save the\ndatabase (default: None)")), ToolOutput(tag="out_overwrite", output_type=File(optional=True), selector=InputSelector(input_to_select="in_overwrite", type_hint=File()), doc=OutputDocumentation(doc="If specified and the output file exists it will be\noverwritten (default: False)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Phylophlan_Setup_Database_V0_1_0().translate("wdl", allow_empty_container=True)

