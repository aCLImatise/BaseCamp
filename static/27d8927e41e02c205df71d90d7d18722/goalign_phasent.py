from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean, Float, String, Int

Goalign_Phasent_V0_1_0 = CommandToolBuilder(tool="goalign_phasent", base_command=["goalign", "phasent"], inputs=[ToolInput(tag="in_aa_output", input_type=File(optional=True), prefix="--aa-output", doc=InputDocumentation(doc="Output translated sequences FASTA file (default 'none')")), ToolInput(tag="in_cut_end", input_type=Boolean(optional=True), prefix="--cut-end", doc=InputDocumentation(doc="If true, then also remove the end of sequences that do not align with orf")), ToolInput(tag="in_gap_extend", input_type=Float(optional=True), prefix="--gap-extend", doc=InputDocumentation(doc="Score for extending a gap  (default -0.5)")), ToolInput(tag="in_gap_open", input_type=Float(optional=True), prefix="--gap-open", doc=InputDocumentation(doc="Score for opening a gap  (default -12)")), ToolInput(tag="in_genetic_code", input_type=String(optional=True), prefix="--genetic-code", doc=InputDocumentation(doc="Genetic Code: standard, mitoi (invertebrate mitochondrial) or mitov (vertebrate mitochondrial) (default 'standard')")), ToolInput(tag="in_len_cut_off", input_type=Float(optional=True), prefix="--len-cutoff", doc=InputDocumentation(doc="Length cutoff, over orf length, to consider sequence hits (-1==No cutoff) (default -1)")), ToolInput(tag="in_log", input_type=String(optional=True), prefix="--log", doc=InputDocumentation(doc="Output log: positions of the considered ATG for each sequence (default 'none')")), ToolInput(tag="in_match", input_type=Float(optional=True), prefix="--match", doc=InputDocumentation(doc="Score for a match for pairwise alignment (if omitted, then take substitution matrix) (default 1)")), ToolInput(tag="in_match_cut_off", input_type=Float(optional=True), prefix="--match-cutoff", doc=InputDocumentation(doc="Nb Matches cutoff, over alignment length, to consider sequence hits (-1==No cutoff) (default 0.5)")), ToolInput(tag="in_mismatch", input_type=Float(optional=True), prefix="--mismatch", doc=InputDocumentation(doc="Score for a mismatch for pairwise alignment (if omitted, then take substitution matrix) (default -1)")), ToolInput(tag="in_nt_output", input_type=File(optional=True), prefix="--nt-output", doc=InputDocumentation(doc="Output ATG 'phased' FASTA file + first nts not in ref phase removed (nt corresponding to aa-output sequence) (default 'none')")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="Output ATG 'phased' FASTA file (default 'stdout')")), ToolInput(tag="in_ref_orf", input_type=String(optional=True), prefix="--ref-orf", doc=InputDocumentation(doc="Reference ORF to phase against (if none is given, then will try to get the longest orf in the input data) (default 'none')")), ToolInput(tag="in_reverse", input_type=Boolean(optional=True), prefix="--reverse", doc=InputDocumentation(doc="Search ALSO in the reverse strand (in addition to the forward strand)")), ToolInput(tag="in_unaligned", input_type=Boolean(optional=True), prefix="--unaligned", doc=InputDocumentation(doc="Considers sequences as unaligned and only format fasta is accepted (phylip, nexus,... options are ignored)")), ToolInput(tag="in_align", input_type=File(optional=True), prefix="--align", doc=InputDocumentation(doc="Alignment input file (default 'stdin')")), ToolInput(tag="in_auto_detect", input_type=Boolean(optional=True), prefix="--auto-detect", doc=InputDocumentation(doc="Auto detects input format (overrides -p, -x and -u)")), ToolInput(tag="in_clustal", input_type=Boolean(optional=True), prefix="--clustal", doc=InputDocumentation(doc="Alignment is in clustal? default fasta")), ToolInput(tag="in_ignore_identical", input_type=Boolean(optional=True), prefix="--ignore-identical", doc=InputDocumentation(doc="Ignore duplicated sequences that have the same name and same sequences")), ToolInput(tag="in_input_strict", input_type=Boolean(optional=True), prefix="--input-strict", doc=InputDocumentation(doc="Strict phylip input format (only used with -p)")), ToolInput(tag="in_nexus", input_type=Boolean(optional=True), prefix="--nexus", doc=InputDocumentation(doc="Alignment is in nexus? default fasta")), ToolInput(tag="in_no_block", input_type=Boolean(optional=True), prefix="--no-block", doc=InputDocumentation(doc="Write Phylip sequences without space separated blocks (only used with -p)")), ToolInput(tag="in_one_line", input_type=Boolean(optional=True), prefix="--one-line", doc=InputDocumentation(doc="Write Phylip sequences on 1 line (only used with -p)")), ToolInput(tag="in_output_strict", input_type=Boolean(optional=True), prefix="--output-strict", doc=InputDocumentation(doc="Strict phylip output format (only used with -p)")), ToolInput(tag="in_phylip", input_type=Boolean(optional=True), prefix="--phylip", doc=InputDocumentation(doc="Alignment is in phylip? default fasta")), ToolInput(tag="in_seed", input_type=Int(optional=True), prefix="--seed", doc=InputDocumentation(doc="Random Seed: -1 = nano seconds since 1970/01/01 00:00:00 (default -1)")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of threads (default 1)"))], outputs=[ToolOutput(tag="out_aa_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_aa_output", type_hint=File()), doc=OutputDocumentation(doc="Output translated sequences FASTA file (default 'none')")), ToolOutput(tag="out_nt_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_nt_output", type_hint=File()), doc=OutputDocumentation(doc="Output ATG 'phased' FASTA file + first nts not in ref phase removed (nt corresponding to aa-output sequence) (default 'none')")), ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="Output ATG 'phased' FASTA file (default 'stdout')"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Goalign_Phasent_V0_1_0().translate("wdl", allow_empty_container=True)

