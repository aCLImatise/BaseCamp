from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean, String, Int

Trimal_V0_1_0 = CommandToolBuilder(tool="trimal", base_command=["trimal"], inputs=[ToolInput(tag="in_in", input_type=File(optional=True), prefix="-in", doc=InputDocumentation(doc="Input file in several formats (clustal, fasta, NBRF/PIR, nexus, phylip3.2, phylip).")), ToolInput(tag="in_compare_set", input_type=File(optional=True), prefix="-compareset", doc=InputDocumentation(doc="Input list of paths for the files containing the alignments to compare.")), ToolInput(tag="in_force_select", input_type=File(optional=True), prefix="-forceselect", doc=InputDocumentation(doc="Force selection of the given input file in the files comparison method.")), ToolInput(tag="in_back_trans", input_type=File(optional=True), prefix="-backtrans", doc=InputDocumentation(doc="Use a Coding Sequences file to get a backtranslation for a given AA alignment")), ToolInput(tag="in_ignore_stop_codon", input_type=Boolean(optional=True), prefix="-ignorestopcodon", doc=InputDocumentation(doc="Ignore stop codons in the input coding sequences")), ToolInput(tag="in_split_by_stop_codon", input_type=Boolean(optional=True), prefix="-splitbystopcodon", doc=InputDocumentation(doc="Split input coding sequences up to first stop codon appearance")), ToolInput(tag="in_matrix", input_type=File(optional=True), prefix="-matrix", doc=InputDocumentation(doc="Input file for user-defined similarity matrix (default is Blosum62).")), ToolInput(tag="in_out", input_type=File(optional=True), prefix="-out", doc=InputDocumentation(doc="Output alignment in the same input format (default stdout). (default input format)")), ToolInput(tag="in_html_out", input_type=File(optional=True), prefix="-htmlout", doc=InputDocumentation(doc="Get a summary of trimal's work in an HTML file.")), ToolInput(tag="in_keep_header", input_type=Boolean(optional=True), prefix="-keepheader", doc=InputDocumentation(doc="Keep original sequence header including non-alphanumeric characters.\nOnly available for input FASTA format files. (future versions will extend this feature)")), ToolInput(tag="in_nbr_f", input_type=File(optional=True), prefix="-nbrf", doc=InputDocumentation(doc="Output file in NBRF/PIR format")), ToolInput(tag="in_mega", input_type=File(optional=True), prefix="-mega", doc=InputDocumentation(doc="Output file in MEGA format")), ToolInput(tag="in_nexus", input_type=File(optional=True), prefix="-nexus", doc=InputDocumentation(doc="Output file in NEXUS format")), ToolInput(tag="in_clustal", input_type=File(optional=True), prefix="-clustal", doc=InputDocumentation(doc="Output file in CLUSTAL format")), ToolInput(tag="in_fast_a", input_type=File(optional=True), prefix="-fasta", doc=InputDocumentation(doc="Output file in FASTA format")), ToolInput(tag="in_fast_a_m_one_zero", input_type=Boolean(optional=True), prefix="-fasta_m10", doc=InputDocumentation(doc="Output file in FASTA format. Sequences name length up to 10 characters.")), ToolInput(tag="in_phylip", input_type=File(optional=True), prefix="-phylip", doc=InputDocumentation(doc="Output file in PHYLIP/PHYLIP4 format")), ToolInput(tag="in_phylip_m_one_zero", input_type=Boolean(optional=True), prefix="-phylip_m10", doc=InputDocumentation(doc="Output file in PHYLIP/PHYLIP4 format. Sequences name length up to 10 characters.")), ToolInput(tag="in_phylip_paml", input_type=File(optional=True), prefix="-phylip_paml", doc=InputDocumentation(doc="Output file in PHYLIP format compatible with PAML")), ToolInput(tag="in_phylip_paml_m_one_zero", input_type=Boolean(optional=True), prefix="-phylip_paml_m10", doc=InputDocumentation(doc="Output file in PHYLIP format compatible with PAML. Sequences name length up to 10 characters.")), ToolInput(tag="in_phylip_three_dot_two", input_type=File(optional=True), prefix="-phylip3.2", doc=InputDocumentation(doc="Output file in PHYLIP3.2 format")), ToolInput(tag="in_phylip_three_dot_two_m_one_zero", input_type=Boolean(optional=True), prefix="-phylip3.2_m10", doc=InputDocumentation(doc="Output file in PHYLIP3.2 format. Sequences name length up to 10 characters.")), ToolInput(tag="in_complementary", input_type=Boolean(optional=True), prefix="-complementary", doc=InputDocumentation(doc="Get the complementary alignment.")), ToolInput(tag="in_col_numbering", input_type=Boolean(optional=True), prefix="-colnumbering", doc=InputDocumentation(doc="Get the relationship between the columns in the old and new alignment.")), ToolInput(tag="in_select_cols", input_type=String(optional=True), prefix="-selectcols", doc=InputDocumentation(doc="Selection of columns to be removed from the alignment. Range: [0 - (Number of Columns - 1)]. (see User Guide).")), ToolInput(tag="in_select_seqs", input_type=String(optional=True), prefix="-selectseqs", doc=InputDocumentation(doc="Selection of sequences to be removed from the alignment. Range: [0 - (Number of Sequences - 1)]. (see User Guide).")), ToolInput(tag="in_gap_threshold", input_type=Int(optional=True), prefix="-gapthreshold", doc=InputDocumentation(doc="1 - (fraction of sequences with a gap allowed). Range: [0 - 1]")), ToolInput(tag="in_sim_threshold", input_type=Int(optional=True), prefix="-simthreshold", doc=InputDocumentation(doc="Minimum average similarity allowed. Range: [0 - 1]")), ToolInput(tag="in_con_threshold", input_type=Int(optional=True), prefix="-conthreshold", doc=InputDocumentation(doc="Minimum consistency value allowed.Range: [0 - 1]")), ToolInput(tag="in_cons", input_type=Int(optional=True), prefix="-cons", doc=InputDocumentation(doc="Minimum percentage of the positions in the original alignment to conserve. Range: [0 - 100]")), ToolInput(tag="in_nogaps", input_type=Boolean(optional=True), prefix="-nogaps", doc=InputDocumentation(doc="Remove all positions with gaps in the alignment.")), ToolInput(tag="in_no_all_gaps", input_type=Boolean(optional=True), prefix="-noallgaps", doc=InputDocumentation(doc="Remove columns composed only by gaps.")), ToolInput(tag="in_keep_seqs", input_type=Boolean(optional=True), prefix="-keepseqs", doc=InputDocumentation(doc="Keep sequences even if they are composed only by gaps.")), ToolInput(tag="in_gapp_you_t", input_type=Boolean(optional=True), prefix="-gappyout", doc=InputDocumentation(doc="Use automated selection on 'gappyout' mode. This method only uses information based on gaps' distribution. (see User Guide).")), ToolInput(tag="in_strict", input_type=Boolean(optional=True), prefix="-strict", doc=InputDocumentation(doc="Use automated selection on 'strict' mode. (see User Guide).")), ToolInput(tag="in_strict_plus", input_type=Boolean(optional=True), prefix="-strictplus", doc=InputDocumentation(doc="Use automated selection on 'strictplus' mode. (see User Guide).\n(Optimized for Neighbour Joining phylogenetic tree reconstruction).")), ToolInput(tag="in_automated_one", input_type=Boolean(optional=True), prefix="-automated1", doc=InputDocumentation(doc="Use a heuristic selection of the automatic method based on similarity statistics. (see User Guide). (Optimized for Maximum Likelihood phylogenetic tree reconstruction).")), ToolInput(tag="in_terminal_only", input_type=Boolean(optional=True), prefix="-terminalonly", doc=InputDocumentation(doc="Only columns out of internal boundaries (first and last column without gaps) are\ncandidated to be trimmed depending on the applied method")), ToolInput(tag="in_block", input_type=Int(optional=True), prefix="-block", doc=InputDocumentation(doc="Minimum column block size to be kept in the trimmed alignment. Available with manual and automatic (gappyout) methods")), ToolInput(tag="in_res_overlap", input_type=Boolean(optional=True), prefix="-resoverlap", doc=InputDocumentation(doc="Minimum overlap of a positions with other positions in the column to be considered a 'good position'. Range: [0 - 1]. (see User Guide).")), ToolInput(tag="in_seq_overlap", input_type=Boolean(optional=True), prefix="-seqoverlap", doc=InputDocumentation(doc="Minimum percentage of 'good positions' that a sequence must have in order to be conserved. Range: [0 - 100](see User Guide).")), ToolInput(tag="in_clusters", input_type=Int(optional=True), prefix="-clusters", doc=InputDocumentation(doc="Get the most Nth representatives sequences from a given alignment. Range: [1 - (Number of sequences)]")), ToolInput(tag="in_max_identity", input_type=Int(optional=True), prefix="-maxidentity", doc=InputDocumentation(doc="Get the representatives sequences for a given identity threshold. Range: [0 - 1].")), ToolInput(tag="in_half_window_size", input_type=Int(optional=True), prefix="-w", doc=InputDocumentation(doc="(half) Window size, score of position i is the average of the window (i - n) to (i + n).")), ToolInput(tag="in_gw", input_type=Int(optional=True), prefix="-gw", doc=InputDocumentation(doc="(half) Window size only applies to statistics/methods based on Gaps.")), ToolInput(tag="in_sw", input_type=Int(optional=True), prefix="-sw", doc=InputDocumentation(doc="(half) Window size only applies to statistics/methods based on Similarity.")), ToolInput(tag="in_cw", input_type=Int(optional=True), prefix="-cw", doc=InputDocumentation(doc="(half) Window size only applies to statistics/methods based on Consistency.")), ToolInput(tag="in_sgc", input_type=Boolean(optional=True), prefix="-sgc", doc=InputDocumentation(doc="Print gap scores for each column in the input alignment.")), ToolInput(tag="in_sgt", input_type=Boolean(optional=True), prefix="-sgt", doc=InputDocumentation(doc="Print accumulated gap scores for the input alignment.")), ToolInput(tag="in_ssc", input_type=Boolean(optional=True), prefix="-ssc", doc=InputDocumentation(doc="Print similarity scores for each column in the input alignment.")), ToolInput(tag="in_sst", input_type=Boolean(optional=True), prefix="-sst", doc=InputDocumentation(doc="Print accumulated similarity scores for the input alignment.")), ToolInput(tag="in_sfc", input_type=Boolean(optional=True), prefix="-sfc", doc=InputDocumentation(doc="Print sum-of-pairs scores for each column from the selected alignment")), ToolInput(tag="in_sft", input_type=Boolean(optional=True), prefix="-sft", doc=InputDocumentation(doc="Print accumulated sum-of-pairs scores for the selected alignment")), ToolInput(tag="in_sident", input_type=Boolean(optional=True), prefix="-sident", doc=InputDocumentation(doc="Print identity scores for all sequences in the input alignment. (see User Guide)."))], outputs=[ToolOutput(tag="out_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out", type_hint=File()), doc=OutputDocumentation(doc="Output alignment in the same input format (default stdout). (default input format)")), ToolOutput(tag="out_html_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_html_out", type_hint=File()), doc=OutputDocumentation(doc="Get a summary of trimal's work in an HTML file.")), ToolOutput(tag="out_nbr_f", output_type=File(optional=True), selector=InputSelector(input_to_select="in_nbr_f", type_hint=File()), doc=OutputDocumentation(doc="Output file in NBRF/PIR format")), ToolOutput(tag="out_mega", output_type=File(optional=True), selector=InputSelector(input_to_select="in_mega", type_hint=File()), doc=OutputDocumentation(doc="Output file in MEGA format")), ToolOutput(tag="out_nexus", output_type=File(optional=True), selector=InputSelector(input_to_select="in_nexus", type_hint=File()), doc=OutputDocumentation(doc="Output file in NEXUS format")), ToolOutput(tag="out_clustal", output_type=File(optional=True), selector=InputSelector(input_to_select="in_clustal", type_hint=File()), doc=OutputDocumentation(doc="Output file in CLUSTAL format")), ToolOutput(tag="out_fast_a", output_type=File(optional=True), selector=InputSelector(input_to_select="in_fast_a", type_hint=File()), doc=OutputDocumentation(doc="Output file in FASTA format")), ToolOutput(tag="out_phylip", output_type=File(optional=True), selector=InputSelector(input_to_select="in_phylip", type_hint=File()), doc=OutputDocumentation(doc="Output file in PHYLIP/PHYLIP4 format")), ToolOutput(tag="out_phylip_paml", output_type=File(optional=True), selector=InputSelector(input_to_select="in_phylip_paml", type_hint=File()), doc=OutputDocumentation(doc="Output file in PHYLIP format compatible with PAML")), ToolOutput(tag="out_phylip_three_dot_two", output_type=File(optional=True), selector=InputSelector(input_to_select="in_phylip_three_dot_two", type_hint=File()), doc=OutputDocumentation(doc="Output file in PHYLIP3.2 format"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Trimal_V0_1_0().translate("wdl", allow_empty_container=True)

