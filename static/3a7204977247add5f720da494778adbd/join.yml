!Command
command:
- join
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -a
  description: "also print unpairable lines from file FILENUM, where\nFILENUM is 1\
    \ or 2, corresponding to FILE1 or FILE2"
  args: !SimpleFlagArg
    name: FILENUM
- !Flag
  optional: true
  synonyms:
  - -e
  description: replace missing input fields with EMPTY
  args: !SimpleFlagArg
    name: EMPTY
- !Flag
  optional: true
  synonyms:
  - -i
  - --ignore-case
  description: ignore differences in case when comparing fields
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -j
  description: equivalent to '-1 FIELD -2 FIELD'
  args: !SimpleFlagArg
    name: FIELD
- !Flag
  optional: true
  synonyms:
  - -o
  description: obey FORMAT while constructing output line
  args: !SimpleFlagArg
    name: FORMAT
- !Flag
  optional: true
  synonyms:
  - -t
  description: use CHAR as input and output field separator
  args: !SimpleFlagArg
    name: CHAR
- !Flag
  optional: true
  synonyms:
  - -v
  description: like -a FILENUM, but suppress joined output lines
  args: !SimpleFlagArg
    name: FILENUM
- !Flag
  optional: true
  synonyms:
  - '-1'
  description: join on this FIELD of file 1
  args: !SimpleFlagArg
    name: FIELD
- !Flag
  optional: true
  synonyms:
  - '-2'
  description: join on this FIELD of file 2
  args: !SimpleFlagArg
    name: FIELD
- !Flag
  optional: true
  synonyms:
  - --check-order
  description: "check that the input is correctly sorted, even\nif all input lines\
    \ are pairable"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --nocheck-order
  description: do not check that the input is correctly sorted
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --header
  description: "treat the first line in each file as field headers,\nprint them without\
    \ trying to pair them"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -z
  - --zero-terminated
  description: line delimiter is NUL, not newline
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - --help
  description: display this help and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - --version
  description: output version information and exit
  args: !EmptyFlagArg {}
help_text: "Usage: join [OPTION]... FILE1 FILE2\nFor each pair of input lines with\
  \ identical join fields, write a line to\nstandard output.  The default join field\
  \ is the first, delimited by blanks.\n\nWhen FILE1 or FILE2 (not both) is -, read\
  \ standard input.\n\n  -a FILENUM        also print unpairable lines from file FILENUM,\
  \ where\n                      FILENUM is 1 or 2, corresponding to FILE1 or FILE2\n\
  \  -e EMPTY          replace missing input fields with EMPTY\n  -i, --ignore-case\
  \  ignore differences in case when comparing fields\n  -j FIELD          equivalent\
  \ to '-1 FIELD -2 FIELD'\n  -o FORMAT         obey FORMAT while constructing output\
  \ line\n  -t CHAR           use CHAR as input and output field separator\n  -v FILENUM\
  \        like -a FILENUM, but suppress joined output lines\n  -1 FIELD         \
  \ join on this FIELD of file 1\n  -2 FIELD          join on this FIELD of file 2\n\
  \  --check-order     check that the input is correctly sorted, even\n          \
  \            if all input lines are pairable\n  --nocheck-order   do not check that\
  \ the input is correctly sorted\n  --header          treat the first line in each\
  \ file as field headers,\n                      print them without trying to pair\
  \ them\n  -z, --zero-terminated     line delimiter is NUL, not newline\n      --help\
  \     display this help and exit\n      --version  output version information and\
  \ exit\n\nUnless -t CHAR is given, leading blanks separate fields and are ignored,\n\
  else fields are separated by CHAR.  Any FIELD is a field number counted\nfrom 1.\
  \  FORMAT is one or more comma or blank separated specifications,\neach being 'FILENUM.FIELD'\
  \ or '0'.  Default FORMAT outputs the join field,\nthe remaining fields from FILE1,\
  \ the remaining fields from FILE2, all\nseparated by CHAR.  If FORMAT is the keyword\
  \ 'auto', then the first\nline of each file determines the number of fields output\
  \ for each line.\n\nImportant: FILE1 and FILE2 must be sorted on the join fields.\n\
  E.g., use \"sort -k 1b,1\" if 'join' has no options,\nor use \"join -t ''\" if 'sort'\
  \ has no options.\nNote, comparisons honor the rules specified by 'LC_COLLATE'.\n\
  If the input is not sorted and some lines cannot be joined, a\nwarning message will\
  \ be given.\n\nGNU coreutils online help: <https://www.gnu.org/software/coreutils/>\n\
  Report any translation bugs to <https://translationproject.org/team/>\nFull documentation\
  \ <https://www.gnu.org/software/coreutils/join>\nor available locally via: info\
  \ '(coreutils) join invocation'\n"
generated_using:
- --help
docker_image:
