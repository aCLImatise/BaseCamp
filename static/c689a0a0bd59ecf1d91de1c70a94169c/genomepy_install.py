from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Directory, String, Boolean, Int, File

Genomepy_Install_V0_1_0 = CommandToolBuilder(tool="genomepy_install", base_command=["genomepy", "install"], inputs=[ToolInput(tag="in_genomes_dir", input_type=Directory(optional=True), prefix="--genomes_dir", doc=InputDocumentation(doc="genomes directory")), ToolInput(tag="in_local_name", input_type=String(optional=True), prefix="--localname", doc=InputDocumentation(doc="custom name")), ToolInput(tag="in_mask", input_type=String(optional=True), prefix="--mask", doc=InputDocumentation(doc="DNA masking: hard/soft/none (default: soft)")), ToolInput(tag="in_regex", input_type=String(optional=True), prefix="--regex", doc=InputDocumentation(doc="regex to filter sequences")), ToolInput(tag="in_no_match", input_type=Boolean(optional=True), prefix="--no-match", doc=InputDocumentation(doc="select sequences that *don't* match regex")), ToolInput(tag="in_b_gzip", input_type=Boolean(optional=True), prefix="--bgzip", doc=InputDocumentation(doc="bgzip genome")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="build index using multithreading")), ToolInput(tag="in_force", input_type=Boolean(optional=True), prefix="--force", doc=InputDocumentation(doc="overwrite existing files")), ToolInput(tag="in_annotation", input_type=Boolean(optional=True), prefix="--annotation", doc=InputDocumentation(doc="download annotation")), ToolInput(tag="in_only_annotation", input_type=Boolean(optional=True), prefix="--only_annotation", doc=InputDocumentation(doc="only download annotation (sets -a)")), ToolInput(tag="in_skip_sanitizing", input_type=Boolean(optional=True), prefix="--skip_sanitizing", doc=InputDocumentation(doc="skip (check for) matching of contig names\nbetween annotation and fasta (sets -a)")), ToolInput(tag="in_ensembl_top_level", input_type=Boolean(optional=True), prefix="--ensembl-toplevel", doc=InputDocumentation(doc="always download toplevel-genome")), ToolInput(tag="in_ensembl_version", input_type=Int(optional=True), prefix="--ensembl-version", doc=InputDocumentation(doc="select release version")), ToolInput(tag="in_ucsc_annotation", input_type=String(optional=True), prefix="--ucsc-annotation", doc=InputDocumentation(doc="specify annotation to download: UCSC, Ensembl,\nNCBI_refseq or UCSC_refseq")), ToolInput(tag="in_url_to_annotation", input_type=File(optional=True), prefix="--url-to-annotation", doc=InputDocumentation(doc="link to the annotation file, required if this\nis not in the same directory as the fasta file")), ToolInput(tag="in_name", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_provider", input_type=String(), position=1, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Genomepy_Install_V0_1_0().translate("wdl", allow_empty_container=True)

