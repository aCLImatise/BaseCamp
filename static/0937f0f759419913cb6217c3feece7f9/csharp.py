from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File

Csharp_V0_1_0 = CommandToolBuilder(tool="csharp", base_command=["csharp"], inputs=[ToolInput(tag="in_about", input_type=Boolean(optional=True), prefix="--about", doc=InputDocumentation(doc="About the Mono C# compiler")), ToolInput(tag="in_addmodule", input_type=Boolean(optional=True), prefix="-addmodule", doc=InputDocumentation(doc=":M1[,Mn]   Adds the module to the generated assembly")), ToolInput(tag="in_checked", input_type=Boolean(optional=True), prefix="-checked", doc=InputDocumentation(doc="[+|-]        Sets default aritmetic overflow context")), ToolInput(tag="in_cls_check", input_type=Boolean(optional=True), prefix="-clscheck", doc=InputDocumentation(doc="[+|-]       Disables CLS Compliance verifications")), ToolInput(tag="in_codepage", input_type=Boolean(optional=True), prefix="-codepage", doc=InputDocumentation(doc=":ID         Sets code page to the one in ID (number, utf8, reset)")), ToolInput(tag="in_define", input_type=Boolean(optional=True), prefix="-define", doc=InputDocumentation(doc=":S1[;S2]      Defines one or more conditional symbols (short: -d)")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="-debug", doc=InputDocumentation(doc="[+|-], -g      Generate debugging information")), ToolInput(tag="in_delay_sign", input_type=Boolean(optional=True), prefix="-delaysign", doc=InputDocumentation(doc="[+|-]      Only insert the public key into the assembly (no signing)")), ToolInput(tag="in_doc", input_type=Boolean(optional=True), prefix="-doc", doc=InputDocumentation(doc=":FILE            Process documentation comments to XML file")), ToolInput(tag="in_full_paths", input_type=Boolean(optional=True), prefix="-fullpaths", doc=InputDocumentation(doc="Any issued error or warning uses absolute file path")), ToolInput(tag="in_key_container", input_type=Boolean(optional=True), prefix="-keycontainer", doc=InputDocumentation(doc=":NAME   The key pair container used to sign the output assembly")), ToolInput(tag="in_keyfile", input_type=Boolean(optional=True), prefix="-keyfile", doc=InputDocumentation(doc=":FILE        The key file used to strongname the ouput assembly")), ToolInput(tag="in_lang_version", input_type=Boolean(optional=True), prefix="-langversion", doc=InputDocumentation(doc=":TEXT    Specifies language version: ISO-1, ISO-2, 3, 4, 5, Default or Experimental")), ToolInput(tag="in_lib", input_type=Boolean(optional=True), prefix="-lib", doc=InputDocumentation(doc=":PATH1[,PATHn]   Specifies the location of referenced assemblies")), ToolInput(tag="in_main", input_type=Boolean(optional=True), prefix="-main", doc=InputDocumentation(doc=":CLASS          Specifies the class with the Main method (short: -m)")), ToolInput(tag="in_no_config", input_type=Boolean(optional=True), prefix="-noconfig", doc=InputDocumentation(doc="Disables implicitly referenced assemblies")), ToolInput(tag="in_nostdlib", input_type=Boolean(optional=True), prefix="-nostdlib", doc=InputDocumentation(doc="[+|-]       Does not reference mscorlib.dll library")), ToolInput(tag="in_nowarn", input_type=Boolean(optional=True), prefix="-nowarn", doc=InputDocumentation(doc=":W1[,Wn]      Suppress one or more compiler warnings")), ToolInput(tag="in_optimize", input_type=Boolean(optional=True), prefix="-optimize", doc=InputDocumentation(doc="[+|-]       Enables advanced compiler optimizations (short: -o)")), ToolInput(tag="in_out", input_type=File(optional=True), prefix="-out", doc=InputDocumentation(doc=":FILE            Specifies output assembly name")), ToolInput(tag="in_pkg", input_type=Boolean(optional=True), prefix="-pkg", doc=InputDocumentation(doc=":P1[,Pn]         References packages P1..Pn")), ToolInput(tag="in_platform", input_type=Boolean(optional=True), prefix="-platform", doc=InputDocumentation(doc=":ARCH       Specifies the target platform of the output assembly\nARCH can be one of: anycpu, anycpu32bitpreferred, arm,\nx86, x64 or itanium. The default is anycpu.")), ToolInput(tag="in_recurse", input_type=Boolean(optional=True), prefix="-recurse", doc=InputDocumentation(doc=":SPEC        Recursively compiles files according to SPEC pattern")), ToolInput(tag="in_sdk", input_type=Boolean(optional=True), prefix="-sdk", doc=InputDocumentation(doc=":VERSION         Specifies SDK version of referenced assemblies\nVERSION can be one of: 2, 4, 4.5 (default) or a custom value")), ToolInput(tag="in_target", input_type=Boolean(optional=True), prefix="-target", doc=InputDocumentation(doc=":KIND         Specifies the format of the output assembly (short: -t)\nKIND can be one of: exe, winexe, library, module")), ToolInput(tag="in_unsafe", input_type=Boolean(optional=True), prefix="-unsafe", doc=InputDocumentation(doc="[+|-]         Allows to compile code which uses unsafe keyword")), ToolInput(tag="in_warn", input_type=Boolean(optional=True), prefix="-warn", doc=InputDocumentation(doc=":0-4            Sets warning level, the default is 4 (short -w:)")), ToolInput(tag="in_help_internal", input_type=Boolean(optional=True), prefix="-helpinternal", doc=InputDocumentation(doc="Shows internal and advanced compiler options")), ToolInput(tag="in_link_resource", input_type=Boolean(optional=True), prefix="-linkresource", doc=InputDocumentation(doc=":FILE[,ID] Links FILE as a resource (short: -linkres)")), ToolInput(tag="in_resource", input_type=Boolean(optional=True), prefix="-resource", doc=InputDocumentation(doc=":FILE[,ID]     Embed FILE as a resource (short: -res)")), ToolInput(tag="in_win_three_two_res", input_type=Boolean(optional=True), prefix="-win32res", doc=InputDocumentation(doc=":FILE          Specifies Win32 resource file (.res)")), ToolInput(tag="in_win_three_two_icon", input_type=File(optional=True), prefix="-win32icon", doc=InputDocumentation(doc=":FILE         Use this icon for the output")), ToolInput(tag="in_at_file", input_type=File(), position=0, doc=InputDocumentation(doc="Read response file for more options"))], outputs=[ToolOutput(tag="out_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out", type_hint=File()), doc=OutputDocumentation(doc=":FILE            Specifies output assembly name")), ToolOutput(tag="out_win_three_two_icon", output_type=File(optional=True), selector=InputSelector(input_to_select="in_win_three_two_icon", type_hint=File()), doc=OutputDocumentation(doc=":FILE         Use this icon for the output"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Csharp_V0_1_0().translate("wdl", allow_empty_container=True)

