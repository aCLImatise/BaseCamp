from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Int, Boolean

Rgi_Main_V0_1_0 = CommandToolBuilder(tool="rgi_main", base_command=["rgi", "main"], inputs=[ToolInput(tag="in_input_sequence", input_type=File(optional=True), prefix="--input_sequence", doc=InputDocumentation(doc="input file must be in either FASTA (contig and\nprotein) or gzip format! e.g myFile.fasta,\nmyFasta.fasta.gz")), ToolInput(tag="in_output_file", input_type=File(optional=True), prefix="--output_file", doc=InputDocumentation(doc="output folder and base filename")), ToolInput(tag="in_input_type", input_type=String(optional=True), prefix="--input_type", doc=InputDocumentation(doc="specify data input type (default = contig)")), ToolInput(tag="in_alignment_tool", input_type=String(optional=True), prefix="--alignment_tool", doc=InputDocumentation(doc="specify alignment tool (default = BLAST)")), ToolInput(tag="in_num_threads", input_type=Int(optional=True), prefix="--num_threads", doc=InputDocumentation(doc="number of threads (CPUs) to use in the BLAST search\n(default=2)")), ToolInput(tag="in_include_loose", input_type=Boolean(optional=True), prefix="--include_loose", doc=InputDocumentation(doc="include loose hits in addition to strict and perfect")), ToolInput(tag="in_local", input_type=Boolean(optional=True), prefix="--local", doc=InputDocumentation(doc="use local database (default: uses database in\nexecutable directory)")), ToolInput(tag="in_clean", input_type=Boolean(optional=True), prefix="--clean", doc=InputDocumentation(doc="removes temporary files")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="debug mode")), ToolInput(tag="in_low_quality", input_type=Boolean(optional=True), prefix="--low_quality", doc=InputDocumentation(doc="use for short contigs to predict partial genes")), ToolInput(tag="in_data", input_type=String(optional=True), prefix="--data", doc=InputDocumentation(doc="specify a data-type (default = NA)")), ToolInput(tag="in_split_prodigal_jobs", input_type=Boolean(optional=True), prefix="--split_prodigal_jobs", doc=InputDocumentation(doc="run multiple prodigal jobs simultaneously for contigs\nin a fasta file\n")), ToolInput(tag="in_hits", input_type=String(), position=0, doc=InputDocumentation(doc="--exclude_nudge       exclude hits nudged from loose to strict hits"))], outputs=[ToolOutput(tag="out_output_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_file", type_hint=File()), doc=OutputDocumentation(doc="output folder and base filename"))], container="quay.io/biocontainers/rgi:5.2.0--pyhdfd78af_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Rgi_Main_V0_1_0().translate("wdl")

