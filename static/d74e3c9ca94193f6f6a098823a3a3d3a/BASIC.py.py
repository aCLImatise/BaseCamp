from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Int, File, Directory, Boolean

Basic_Py_V0_1_0 = CommandToolBuilder(tool="BASIC.py", base_command=["BASIC.py"], inputs=[ToolInput(tag="in_type_receptor_defaultbcr", input_type=String(optional=True), prefix="-i", doc=InputDocumentation(doc="Type of receptor. Choices: 'BCR' or 'TCR' (default:\nBCR)")), ToolInput(tag="in_launch_threads_run", input_type=Int(optional=True), prefix="-p", doc=InputDocumentation(doc="Launch p > 2 threads that will run on separate\nprocessors/cores (default: 2)")), ToolInput(tag="in_name_output_file", input_type=File(optional=True), prefix="-n", doc=InputDocumentation(doc="Name of output file. Note: a '.fasta' extension will\nbe added (default: result.fasta)")), ToolInput(tag="in_se", input_type=File(optional=True), prefix="-SE", doc=InputDocumentation(doc="Single end FASTQ file (optionally gzipped). (example:\nse.fastq)")), ToolInput(tag="in_pe_one", input_type=Int(optional=True), prefix="-PE_1", doc=InputDocumentation(doc="Paired end (left) FASTQ file (optionally gzipped).")), ToolInput(tag="in_options_default_human", input_type=Directory(optional=True), prefix="-g", doc=InputDocumentation(doc="Options: 'human' or 'mouse' (default: human). Note:\nother species are possible by adding the appropriate\nBowtie2 indices and following the existing db/\ndirectory structure")), ToolInput(tag="in_absolute_path_bowtie", input_type=File(optional=True), prefix="-b", doc=InputDocumentation(doc="Absolute path to bowtie2 executable or directory\ncontaining it")), ToolInput(tag="in_path_directory_writing", input_type=File(optional=True), prefix="-t", doc=InputDocumentation(doc="Path to directory for writing intermediate files.\n(default: current working directory)")), ToolInput(tag="in_output_directory_default", input_type=Directory(optional=True), prefix="-o", doc=InputDocumentation(doc="Output directory (default: current working directory)")), ToolInput(tag="in_allow_ie_terminateif", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="Allow for partial reconstruction i.e. do not terminate\nif one or both chains do not assemble.")), ToolInput(tag="in_turns_verbosity_more", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="Turns on verbosity for more details.")), ToolInput(tag="in_path_database_defaults", input_type=File(optional=True), prefix="-d", doc=InputDocumentation(doc="Path to database directory. Defaults to <path of\nBASIC.py>/db")), ToolInput(tag="in_subsample", input_type=Int(optional=True), prefix="--subsample", doc=InputDocumentation(doc="Use the first <int> number of reads of the input.\nDefault: no limit"))], outputs=[ToolOutput(tag="out_name_output_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_name_output_file", type_hint=File()), doc=OutputDocumentation(doc="Name of output file. Note: a '.fasta' extension will\nbe added (default: result.fasta)")), ToolOutput(tag="out_output_directory_default", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output_directory_default", type_hint=File()), doc=OutputDocumentation(doc="Output directory (default: current working directory)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Basic_Py_V0_1_0().translate("wdl", allow_empty_container=True)

