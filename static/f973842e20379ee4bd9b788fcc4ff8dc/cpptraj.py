from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, File, String, Boolean

Cpptraj_V0_1_0 = CommandToolBuilder(tool="cpptraj", base_command=["cpptraj"], inputs=[ToolInput(tag="in_load_top_topology", input_type=Int(optional=True), prefix="-p", doc=InputDocumentation(doc=": * Load <Top0> as a topology file.")), ToolInput(tag="in_read_input_input", input_type=Int(optional=True), prefix="-i", doc=InputDocumentation(doc=": * Read input from file <Input0>.")), ToolInput(tag="in_read_trajectory_same", input_type=File(optional=True), prefix="-y", doc=InputDocumentation(doc=": * Read from trajectory file <trajin>; same as input 'trajin <trajin>'.")), ToolInput(tag="in_write_trajectory_file", input_type=File(optional=True), prefix="-x", doc=InputDocumentation(doc=": * Write trajectory file <trajout>; same as input 'trajout <trajout>'.")), ToolInput(tag="in_ya", input_type=File(optional=True), prefix="-ya", doc=InputDocumentation(doc=": * Input trajectory file arguments.")), ToolInput(tag="in_x_a", input_type=File(optional=True), prefix="-xa", doc=InputDocumentation(doc=": * Output trajectory file arguments.")), ToolInput(tag="in_read_reference_same", input_type=String(optional=True), prefix="-c", doc=InputDocumentation(doc=": * Read <reference> as reference coordinates; same as input 'reference <reference>'.")), ToolInput(tag="in_read_data_in", input_type=File(optional=True), prefix="-d", doc=InputDocumentation(doc=": * Read data in from file <datain> ('readdata <datain>').")), ToolInput(tag="in_write_data_datain", input_type=File(optional=True), prefix="-w", doc=InputDocumentation(doc=": Write data from <datain> as file <dataout> ('writedata <dataout>).")), ToolInput(tag="in_write_cpptraj_output", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc=": Write CPPTRAJ STDOUT output to file <output>.")), ToolInput(tag="in_defines", input_type=Boolean(optional=True), prefix="--defines", doc=InputDocumentation(doc=": Print compiler defines and exit.")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="-debug", doc=InputDocumentation(doc="<#>       : Set global debug level to <#>; same as input 'debug <#>'.")), ToolInput(tag="in_interactive", input_type=Boolean(optional=True), prefix="--interactive", doc=InputDocumentation(doc=": Force interactive mode.")), ToolInput(tag="in_log", input_type=File(optional=True), prefix="--log", doc=InputDocumentation(doc=": Record commands to <logfile> (interactive mode only). Default is 'cpptraj.log'.")), ToolInput(tag="in_tl", input_type=Boolean(optional=True), prefix="-tl", doc=InputDocumentation(doc=": Print length of all input trajectories specified on the command line to STDOUT.")), ToolInput(tag="in_ms", input_type=String(optional=True), prefix="-ms", doc=InputDocumentation(doc=": Print selected atom numbers to STDOUT.")), ToolInput(tag="in_mr", input_type=String(optional=True), prefix="-mr", doc=InputDocumentation(doc=": Print selected residue numbers to STDOUT.")), ToolInput(tag="in_mask", input_type=String(optional=True), prefix="--mask", doc=InputDocumentation(doc=": Print detailed atom selection to STDOUT.")), ToolInput(tag="in_res_mask", input_type=String(optional=True), prefix="--resmask", doc=InputDocumentation(doc=": Print detailed residue selection to STDOUT."))], outputs=[ToolOutput(tag="out_x_a", output_type=File(optional=True), selector=InputSelector(input_to_select="in_x_a", type_hint=File()), doc=OutputDocumentation(doc=": * Output trajectory file arguments.")), ToolOutput(tag="out_write_cpptraj_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_write_cpptraj_output", type_hint=File()), doc=OutputDocumentation(doc=": Write CPPTRAJ STDOUT output to file <output>."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Cpptraj_V0_1_0().translate("wdl", allow_empty_container=True)

