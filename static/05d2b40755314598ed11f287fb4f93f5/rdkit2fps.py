from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, String, File, Boolean

Rdkit2Fps_V0_1_0 = CommandToolBuilder(tool="rdkit2fps", base_command=["rdkit2fps"], inputs=[ToolInput(tag="in_fp_size", input_type=Int(optional=True), prefix="--fpSize", doc=InputDocumentation(doc="number of bits in the fingerprint. Default of 2048 for\nRDK, Morgan, topological torsion, atom pair, and\npattern fingerprints, and 512 for Avalon fingerprints")), ToolInput(tag="in_from_atoms", input_type=Int(optional=True), prefix="--from-atoms", doc=InputDocumentation(doc=",INT,...\nfingerprint generation must use these atom indices\n(out of range indices are ignored)")), ToolInput(tag="in_id_tag", input_type=String(optional=True), prefix="--id-tag", doc=InputDocumentation(doc="tag name containing the record id (SD files only)")), ToolInput(tag="in_in", input_type=File(optional=True), prefix="--in", doc=InputDocumentation(doc="input structure format (default guesses from filename)")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="save the fingerprints to FILENAME (default=stdout)")), ToolInput(tag="in_out", input_type=File(optional=True), prefix="--out", doc=InputDocumentation(doc="output structure format (default guesses from output\nfilename, or is 'fps')")), ToolInput(tag="in_errors", input_type=String(optional=True), prefix="--errors", doc=InputDocumentation(doc="how should structure parse errors be handled?\n(default=ignore)")), ToolInput(tag="in_rdk", input_type=Boolean(optional=True), prefix="--RDK", doc=InputDocumentation(doc="generate RDK fingerprints (default)")), ToolInput(tag="in_min_path", input_type=Int(optional=True), prefix="--minPath", doc=InputDocumentation(doc="minimum number of bonds to include in the subgraph\n(default=1)")), ToolInput(tag="in_max_path", input_type=Int(optional=True), prefix="--maxPath", doc=InputDocumentation(doc="maximum number of bonds to include in the subgraph\n(default=7)")), ToolInput(tag="in_n_bits_per_hash", input_type=Int(optional=True), prefix="--nBitsPerHash", doc=InputDocumentation(doc="number of bits to set per path (default=2)")), ToolInput(tag="in_use_hs", input_type=Int(optional=True), prefix="--useHs", doc=InputDocumentation(doc="|1           include information about the number of hydrogens on\neach atom (default=1)")), ToolInput(tag="in_morgan", input_type=Boolean(optional=True), prefix="--morgan", doc=InputDocumentation(doc="generate Morgan fingerprints")), ToolInput(tag="in_radius", input_type=Int(optional=True), prefix="--radius", doc=InputDocumentation(doc="radius for the Morgan algorithm (default=2)")), ToolInput(tag="in_use_features", input_type=Int(optional=True), prefix="--useFeatures", doc=InputDocumentation(doc="|1     use chemical-feature invariants (default=0)")), ToolInput(tag="in_use_chirality", input_type=Int(optional=True), prefix="--useChirality", doc=InputDocumentation(doc="|1    include chirality information (default=0)")), ToolInput(tag="in_use_bond_types", input_type=Int(optional=True), prefix="--useBondTypes", doc=InputDocumentation(doc="|1    include bond type information (default=1)")), ToolInput(tag="in_torsions", input_type=Boolean(optional=True), prefix="--torsions", doc=InputDocumentation(doc="generate Topological Torsion fingerprints")), ToolInput(tag="in_target_size", input_type=Int(optional=True), prefix="--targetSize", doc=InputDocumentation(doc="number of bits in the fingerprint (default=4)")), ToolInput(tag="in_pairs", input_type=Boolean(optional=True), prefix="--pairs", doc=InputDocumentation(doc="generate Atom Pair fingerprints")), ToolInput(tag="in_minlength", input_type=Int(optional=True), prefix="--minLength", doc=InputDocumentation(doc="minimum bond count for a pair (default=1)")), ToolInput(tag="in_maxlength", input_type=Int(optional=True), prefix="--maxLength", doc=InputDocumentation(doc="maximum bond count for a pair (default=30)")), ToolInput(tag="in_mac_cs_one_six_six", input_type=Boolean(optional=True), prefix="--maccs166", doc=InputDocumentation(doc="generate MACCS fingerprints")), ToolInput(tag="in_avalon", input_type=Boolean(optional=True), prefix="--avalon", doc=InputDocumentation(doc="generate Avalon fingerprints")), ToolInput(tag="in_is_query", input_type=Int(optional=True), prefix="--isQuery", doc=InputDocumentation(doc="|1         is the fingerprint for a query structure? (1 if yes, 0\nif no) (default=0)")), ToolInput(tag="in_bit_flags", input_type=Int(optional=True), prefix="--bitFlags", doc=InputDocumentation(doc="bit flags, SSSBits are 32767 and similarity bits are\n15761407 (default=15761407)")), ToolInput(tag="in_pattern", input_type=Boolean(optional=True), prefix="--pattern", doc=InputDocumentation(doc="generate (substructure) pattern fingerprints")), ToolInput(tag="in_sub_struct", input_type=Boolean(optional=True), prefix="--substruct", doc=InputDocumentation(doc="generate ChemFP substructure fingerprints")), ToolInput(tag="in_filenames", input_type=String(), position=0, doc=InputDocumentation(doc="input structure files (default is stdin)")), ToolInput(tag="in_smiles", input_type=String(), position=0, doc=InputDocumentation(doc="smi, ism, usm, can, smi.gz, ism.gz, usm.gz, can.gz")), ToolInput(tag="in_sdf", input_type=String(), position=1, doc=InputDocumentation(doc="sdf, mol, sd, mdl, sdf.gz, mol.gz, sd.gz, mdl.gz"))], outputs=[ToolOutput(tag="out_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out", type_hint=File()), doc=OutputDocumentation(doc="output structure format (default guesses from output\nfilename, or is 'fps')"))], container="quay.io/biocontainers/chemfp:1.6.1--py27h3dcb392_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Rdkit2Fps_V0_1_0().translate("wdl")

