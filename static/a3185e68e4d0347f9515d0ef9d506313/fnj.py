from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Boolean, Int

Fnj_V0_1_0 = CommandToolBuilder(tool="fnj", base_command=["fnj"], inputs=[ToolInput(tag="in_outfile", input_type=File(optional=True), prefix="--outfile", doc=InputDocumentation(doc="output filename. If not specifed, output is\nwritten to stdout")), ToolInput(tag="in_input_format", input_type=String(optional=True), prefix="--input-format", doc=InputDocumentation(doc="input format. 'xml' means the 'Fastphylo\ndistance matrix XML format'  (possible\nvalues='phylip', 'xml', 'binary'\ndefault=`xml')")), ToolInput(tag="in_output_format", input_type=String(optional=True), prefix="--output-format", doc=InputDocumentation(doc="output format. 'xml' means the 'Fastphylo tree\ncount XML format'  (possible\nvalues='newick', 'xml' default=`xml')")), ToolInput(tag="in_print_counts", input_type=Boolean(optional=True), prefix="--print-counts", doc=InputDocumentation(doc="print the tree count before each the newick\ntree. This flag has no effect on the XML\noutput format.  (default=off)")), ToolInput(tag="in_analyze_run_number", input_type=Int(optional=True), prefix="--analyze-run-number", doc=InputDocumentation(doc="Determines which dataset should be analyzed\nwith 1 being the first dataset. By default\nall are analyzed")), ToolInput(tag="in_method", input_type=String(optional=True), prefix="--method", doc=InputDocumentation(doc="reconstruction method to apply  (possible\nvalues='NJ', 'FNJ', 'BIONJ'\ndefault=`FNJ')")), ToolInput(tag="in_dm_per_run", input_type=Int(optional=True), prefix="--dm-per-run", doc=InputDocumentation(doc="nr of Distance matrices per run. Is only used\nif the input format is phylip  (default=`1')")), ToolInput(tag="in_number_of_runs", input_type=Int(optional=True), prefix="--number-of-runs", doc=InputDocumentation(doc="nr of runs. Is only used if the input format is")), ToolInput(tag="in_bootstraps", input_type=Int(optional=True), prefix="--bootstraps", doc=InputDocumentation(doc="number of boot straps  (default=`0')")), ToolInput(tag="in_print_relaxng_input", input_type=Boolean(optional=True), prefix="--print-relaxng-input", doc=InputDocumentation(doc="print the Relax NG schema for the XML input\nformat (Fastphylo distance matrix XML format)\nand then exit  (default=off)")), ToolInput(tag="in_print_relaxng_output", input_type=Boolean(optional=True), prefix="--print-relaxng-output", doc=InputDocumentation(doc="print the Relax NG schema for the XML output\nformat (Fastphylo tree count XML format) and\nthen exit.  (default=off)")), ToolInput(tag="in_phylip", input_type=String(), position=0, doc=InputDocumentation(doc="(default=`1')"))], outputs=[ToolOutput(tag="out_outfile", output_type=File(optional=True), selector=InputSelector(input_to_select="in_outfile", type_hint=File()), doc=OutputDocumentation(doc="output filename. If not specifed, output is\nwritten to stdout"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Fnj_V0_1_0().translate("wdl", allow_empty_container=True)

