from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Int

Beast_V0_1_0 = CommandToolBuilder(tool="beast", base_command=["beast"], inputs=[ToolInput(tag="in_window", input_type=String(optional=True), prefix="-window", doc=InputDocumentation(doc="a console window")), ToolInput(tag="in_options", input_type=String(optional=True), prefix="-options", doc=InputDocumentation(doc="an options dialog")), ToolInput(tag="in_working", input_type=File(optional=True), prefix="-working", doc=InputDocumentation(doc="working directory to input file's directory")), ToolInput(tag="in_seed", input_type=Int(optional=True), prefix="-seed", doc=InputDocumentation(doc="a random number generator seed")), ToolInput(tag="in_prefix", input_type=String(optional=True), prefix="-prefix", doc=InputDocumentation(doc="a prefix for all output log filenames")), ToolInput(tag="in_state_file", input_type=File(optional=True), prefix="-statefile", doc=InputDocumentation(doc="the filename for storing/restoring the state")), ToolInput(tag="in_overwrite", input_type=String(optional=True), prefix="-overwrite", doc=InputDocumentation(doc="overwriting of log files")), ToolInput(tag="in_resume", input_type=String(optional=True), prefix="-resume", doc=InputDocumentation(doc="appending of log files")), ToolInput(tag="in_validate", input_type=String(optional=True), prefix="-validate", doc=InputDocumentation(doc="the XML, but do not run -- useful for debugging XML")), ToolInput(tag="in_errors", input_type=Int(optional=True), prefix="-errors", doc=InputDocumentation(doc="maximum number of numerical errors before stopping")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="-threads", doc=InputDocumentation(doc="number of computational threads to use (default 1), -1 for number of cores")), ToolInput(tag="in_java", input_type=String(optional=True), prefix="-java", doc=InputDocumentation(doc="Java only, no native implementations")), ToolInput(tag="in_noerr", input_type=String(optional=True), prefix="-noerr", doc=InputDocumentation(doc="all output to standard error")), ToolInput(tag="in_loglevel", input_type=String(optional=True), prefix="-loglevel", doc=InputDocumentation(doc=",warning,info,debug,trace")), ToolInput(tag="in_instances", input_type=Int(optional=True), prefix="-instances", doc=InputDocumentation(doc="site patterns amongst number of threads (use with -threads option)")), ToolInput(tag="in_beagle", input_type=String(optional=True), prefix="-beagle", doc=InputDocumentation(doc="beagle library if available")), ToolInput(tag="in_beagle_info", input_type=String(optional=True), prefix="-beagle_info", doc=InputDocumentation(doc=": show information on available resources")), ToolInput(tag="in_beagle_order", input_type=String(optional=True), prefix="-beagle_order", doc=InputDocumentation(doc=": set order of resource use")), ToolInput(tag="in_beagle_cpu", input_type=String(optional=True), prefix="-beagle_CPU", doc=InputDocumentation(doc=": use CPU instance")), ToolInput(tag="in_beagle_gpu", input_type=String(optional=True), prefix="-beagle_GPU", doc=InputDocumentation(doc=": use GPU instance if available")), ToolInput(tag="in_beagle_sse", input_type=String(optional=True), prefix="-beagle_SSE", doc=InputDocumentation(doc=": use SSE extensions if available")), ToolInput(tag="in_beagle_single", input_type=String(optional=True), prefix="-beagle_single", doc=InputDocumentation(doc=": use single precision if available")), ToolInput(tag="in_beagle_double", input_type=String(optional=True), prefix="-beagle_double", doc=InputDocumentation(doc=": use double precision if available")), ToolInput(tag="in_beagle_scaling", input_type=String(optional=True), prefix="-beagle_scaling", doc=InputDocumentation(doc=": specify scaling scheme to use")), ToolInput(tag="in_version", input_type=String(optional=True), prefix="-version", doc=InputDocumentation(doc="version and stop")), ToolInput(tag="in_strict_versions", input_type=String(optional=True), prefix="-strictversions", doc=InputDocumentation(doc="only package versions as specified in the 'required' attribute")), ToolInput(tag="in_pairs_replaced_xml", input_type=Int(optional=True), prefix="-D", doc=InputDocumentation(doc="pairs to be replaced in the XML, e.g., -D 'arg1=10,arg2=20'")), ToolInput(tag="in_df", input_type=File(optional=True), prefix="-DF", doc=InputDocumentation(doc=", but attribute-value pairs defined in file in JSON format")), ToolInput(tag="in_df_out", input_type=File(optional=True), prefix="-DFout", doc=InputDocumentation(doc="XML file written when -DF option is used")), ToolInput(tag="in_sample_from_prior", input_type=String(optional=True), prefix="-sampleFromPrior", doc=InputDocumentation(doc="from prior for MCMC analysis (by adding sampleFromPrior='true' in the first run element)")), ToolInput(tag="in_input_file_name", input_type=File(optional=True), position=0, doc=InputDocumentation(doc=""))], outputs=[], container="quay.io/biocontainers/beast2:2.6.3--hf1b8bbb_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Beast_V0_1_0().translate("wdl")

