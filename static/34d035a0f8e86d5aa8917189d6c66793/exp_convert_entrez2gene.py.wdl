version 1.0

task ExpConvertEntrez2genepy {
  input {
    File? expression_file
    File? gene_file
    File? entrez_two_gene_file
    File? output_file
    Boolean? strip_affy_suffix
    File? log_file
    Boolean? quiet
    Boolean? verbose
  }
  command <<<
    exp_convert_entrez2gene_py \
      ~{if defined(expression_file) then ("--expression-file " +  '"' + expression_file + '"') else ""} \
      ~{if defined(gene_file) then ("--gene-file " +  '"' + gene_file + '"') else ""} \
      ~{if defined(entrez_two_gene_file) then ("--entrez2gene-file " +  '"' + entrez_two_gene_file + '"') else ""} \
      ~{if defined(output_file) then ("--output-file " +  '"' + output_file + '"') else ""} \
      ~{if (strip_affy_suffix) then "--strip-affy-suffix" else ""} \
      ~{if defined(log_file) then ("--log-file " +  '"' + log_file + '"') else ""} \
      ~{if (quiet) then "--quiet" else ""} \
      ~{if (verbose) then "--verbose" else ""}
  >>>
  runtime {
    docker: "None"
  }
  parameter_meta {
    expression_file: "The expression file."
    gene_file: "The gene file (e.g., generated by the\\nensembl_extract_protein_coding_genes.py script)."
    entrez_two_gene_file: "The entrez2gene file (.e.g., generated by the\\nncbi_extract_entrez2gene.py script)."
    output_file: "The output file."
    strip_affy_suffix: "Strip the suffix \\\"_at\\\" from all Entrez IDs.\\n(For use in affymetrix microarray pipeline.)"
    log_file: "Path of log file (if specified, report to stdout AND file."
    quiet: "Only output errors and warnings."
    verbose: "Enable verbose output. Ignored if --quiet is specified."
  }
  output {
    File out_stdout = stdout()
    File out_output_file = "${in_output_file}"
  }
}