from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Float, Int

Pan_Genome_Post_Analysis_V0_1_0 = CommandToolBuilder(tool="pan_genome_post_analysis", base_command=["pan_genome_post_analysis"], inputs=[ToolInput(tag="in_delete_intermediate_files", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="dont delete intermediate files")), ToolInput(tag="in_create_r_plots", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc="dont create R plots")), ToolInput(tag="in_clusters_filename", input_type=File(optional=True), prefix="-c", doc=InputDocumentation(doc="clusters filename [_clustered.clstr]")), ToolInput(tag="in_cd", input_type=Float(optional=True), prefix="-cd", doc=InputDocumentation(doc="percentage of isolates a gene must be in to be core [0.99]")), ToolInput(tag="in_do_split_groups", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc="dont split groups")), ToolInput(tag="in_add_inference_values", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc="add inference values to gene presence and absence spreadsheet")), ToolInput(tag="in_file_protein_filenames", input_type=File(optional=True), prefix="-f", doc=InputDocumentation(doc="file of protein filenames [_fasta_files]")), ToolInput(tag="in_maximum_number_clusters", input_type=Int(optional=True), prefix="-g", doc=InputDocumentation(doc="maximum number of clusters [50000]")), ToolInput(tag="in_file_gff_filenames", input_type=File(optional=True), prefix="-i", doc=InputDocumentation(doc="file of GFF filenames [_gff_files]")), ToolInput(tag="in_core_gene_alignement", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="core gene alignement with PRANK")), ToolInput(tag="in_fast_core_gene", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="fast core gene alignement with MAFFT instead of PRANK")), ToolInput(tag="in_clusters_output_filename", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="clusters output filename [clustered_proteins]")), ToolInput(tag="in_output_pan_genome", input_type=File(optional=True), prefix="-p", doc=InputDocumentation(doc="output pan genome filename [pan_genome.fa]")), ToolInput(tag="in_allow_paralogs_core", input_type=Boolean(optional=True), prefix="-q", doc=InputDocumentation(doc="allow paralogs in core alignment")), ToolInput(tag="in_output_gene_presence", input_type=File(optional=True), prefix="-s", doc=InputDocumentation(doc="output gene presence and absence filename [gene_presence_absence.csv]")), ToolInput(tag="in_translation_table", input_type=Int(optional=True), prefix="-t", doc=InputDocumentation(doc="translation table [11]")), ToolInput(tag="in_number_of_threads", input_type=Int(optional=True), prefix="-z", doc=InputDocumentation(doc="number of threads [1]")), ToolInput(tag="in_verbose_output_stdout", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="verbose output to STDOUT"))], outputs=[ToolOutput(tag="out_clusters_output_filename", output_type=File(optional=True), selector=InputSelector(input_to_select="in_clusters_output_filename", type_hint=File()), doc=OutputDocumentation(doc="clusters output filename [clustered_proteins]")), ToolOutput(tag="out_output_pan_genome", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_pan_genome", type_hint=File()), doc=OutputDocumentation(doc="output pan genome filename [pan_genome.fa]")), ToolOutput(tag="out_output_gene_presence", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_gene_presence", type_hint=File()), doc=OutputDocumentation(doc="output gene presence and absence filename [gene_presence_absence.csv]"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Pan_Genome_Post_Analysis_V0_1_0().translate("wdl", allow_empty_container=True)

