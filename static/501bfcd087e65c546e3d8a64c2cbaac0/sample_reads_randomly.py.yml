!Command
command:
- sample-reads-randomly.py
positional:
- !Positional
  optional: false
  position: 0
  name: filenames
  description: 'optional arguments:'
named:
- !Flag
  optional: true
  synonyms:
  - --info
  description: print citation information
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -N
  - --num_reads
  description: "samples the number of sequences or pairs specified\nwith -N (default:\
    \ 100000)"
  args: !SimpleFlagArg
    name: NUM_READS
- !Flag
  optional: true
  synonyms:
  - -M
  - --max_reads
  - -S
  - --samples
  - -R
  - --random-seed
  description: "Provide a random seed for the generator (default:\nNone)"
  args: !SimpleFlagArg
    name: MAX_READS
- !Flag
  optional: true
  synonyms:
  - --force_single
  description: "Ignore read pair information if present (default:\nFalse)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -o
  - --output
  - -f
  - --force
  description: 'Overwrite output file if it exits (default: False)'
  args: !SimpleFlagArg
    name: filename
- !Flag
  optional: true
  synonyms:
  - --gzip
  description: 'Compress output using gzip (default: False)'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --bzip
  description: 'Compress output using bzip2 (default: False)'
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - --version
  description: show program's version number and exit
  args: !EmptyFlagArg {}
help_text: "usage: sample-reads-randomly.py [--version] [--info] [-h] [-N NUM_READS]\n\
  \                                [-M MAX_READS] [-S NUM_SAMPLES]\n             \
  \                   [-R RANDOM_SEED] [--force_single]\n                        \
  \        [-o filename] [-f] [--gzip | --bzip]\n                                filenames\
  \ [filenames ...]\n\nUniformly subsample sequences from a collection of files\n\n\
  positional arguments:\n  filenames\n\noptional arguments:\n  --version         \
  \    show program's version number and exit\n  --info                print citation\
  \ information\n  -h, --help            show this help message and exit\n  -N NUM_READS,\
  \ --num_reads NUM_READS\n                        samples the number of sequences\
  \ or pairs specified\n                        with -N (default: 100000)\n  -M MAX_READS,\
  \ --max_reads MAX_READS\n  -S NUM_SAMPLES, --samples NUM_SAMPLES\n  -R RANDOM_SEED,\
  \ --random-seed RANDOM_SEED\n                        Provide a random seed for the\
  \ generator (default:\n                        None)\n  --force_single        Ignore\
  \ read pair information if present (default:\n                        False)\n \
  \ -o filename, --output filename\n  -f, --force           Overwrite output file\
  \ if it exits (default: False)\n  --gzip                Compress output using gzip\
  \ (default: False)\n  --bzip                Compress output using bzip2 (default:\
  \ False)\n\nTake a list of files containing sequences, and subsample 100,000 sequences\n\
  (`-N`/`--num_reads`) uniformly, using reservoir sampling.  Stop after first\n100m\
  \ sequences (`-M`/`--max_reads`). By default take one subsample, but take\n`-S`/`--samples`\
  \ samples if specified.\n\nThe output is placed in `-o`/`--output` <file> (for a\
  \ single sample) or in\n\"<file>.subset.0\" to \"<file>.subset.S-1\" (for more than\
  \ one sample).\n\nThis script uses the reservoir sampling algorithm.\nhttp://en.wikipedia.org/wiki/Reservoir_sampling\n"
generated_using:
- --help
docker_image:
