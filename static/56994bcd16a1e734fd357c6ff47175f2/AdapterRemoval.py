from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Array, File, Boolean, Int, String

Adapterremoval_V0_1_0 = CommandToolBuilder(tool="AdapterRemoval", base_command=["AdapterRemoval"], inputs=[ToolInput(tag="in_file_one", input_type=Array(t=File(), optional=True), prefix="--file1", doc=InputDocumentation(doc="Input files containing mate 1 reads or single-ended reads; one or\nmore files may be listed [REQUIRED].")), ToolInput(tag="in_file_two", input_type=Boolean(optional=True), prefix="--file2", doc=InputDocumentation(doc="[FILE ...]\nInput files containing mate 2 reads; if used, then the same number of\nfiles as --file1 must be listed [OPTIONAL].")), ToolInput(tag="in_identify_adapters", input_type=Boolean(optional=True), prefix="--identify-adapters", doc=InputDocumentation(doc="Attempt to identify the adapter pair of PE reads, by searching for\noverlapping mate reads [default: off].")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Maximum number of threads [default: 1]")), ToolInput(tag="in_quality_base", input_type=Int(optional=True), prefix="--qualitybase", doc=InputDocumentation(doc="Quality base used to encode Phred scores in input; either 33, 64, or\nsolexa [default: 33].")), ToolInput(tag="in_quality_base_output", input_type=Int(optional=True), prefix="--qualitybase-output", doc=InputDocumentation(doc="Quality base used to encode Phred scores in output; either 33, 64, or\nsolexa. By default, reads will be written in the same format as the\nthat specified using --qualitybase.")), ToolInput(tag="in_quality_max", input_type=Int(optional=True), prefix="--qualitymax", doc=InputDocumentation(doc="Specifies the maximum Phred score expected in input files, and used\nwhen writing output. ASCII encoded values are limited to the\ncharacters '!' (ASCII = 33) to '~' (ASCII = 126), meaning that\npossible scores are 0 - 93 with offset 33, and 0 - 62 for offset 64\nand Solexa scores [default: 41].")), ToolInput(tag="in_mate_separator", input_type=Int(optional=True), prefix="--mate-separator", doc=InputDocumentation(doc="Character separating the mate number (1 or 2) from the read name in\nFASTQ records [default: '/'].")), ToolInput(tag="in_interleaved", input_type=Boolean(optional=True), prefix="--interleaved", doc=InputDocumentation(doc="This option enables both the --interleaved-input option and the\n--interleaved-output option [default: off].")), ToolInput(tag="in_interleaved_input", input_type=Boolean(optional=True), prefix="--interleaved-input", doc=InputDocumentation(doc="The (single) input file provided contains both the mate 1 and mate 2\nreads, one pair after the other, with one mate 1 reads followed by\none mate 2 read. This option is implied by the --interleaved option\n[default: off].")), ToolInput(tag="in_interleaved_output", input_type=Boolean(optional=True), prefix="--interleaved-output", doc=InputDocumentation(doc="If set, trimmed paired-end reads are written to a single file\ncontaining mate 1 and mate 2 reads, one pair after the other. This\noption is implied by the --interleaved option [default: off].")), ToolInput(tag="in_combined_output", input_type=File(optional=True), prefix="--combined-output", doc=InputDocumentation(doc="If set, all reads are written to the same file(s), specified by\n--output1 and --output2 (--output1 only if --interleaved-output is\nnot set). Discarded reads are replaced with a single 'N' with Phred\nscore 0 [default: off].")), ToolInput(tag="in_basename", input_type=File(optional=True), prefix="--basename", doc=InputDocumentation(doc="Default prefix for all output files for which no filename was\nexplicitly set [default: your_output].")), ToolInput(tag="in_settings", input_type=File(optional=True), prefix="--settings", doc=InputDocumentation(doc="Output file containing information on the parameters used in the run\nas well as overall statistics on the reads after trimming [default:\nBASENAME.settings]")), ToolInput(tag="in_output_one", input_type=File(optional=True), prefix="--output1", doc=InputDocumentation(doc="Output file containing trimmed mate1 reads [default:\nBASENAME.pair1.truncated (PE), BASENAME.truncated (SE), or\nBASENAME.paired.truncated (interleaved PE)]")), ToolInput(tag="in_output_two", input_type=File(optional=True), prefix="--output2", doc=InputDocumentation(doc="Output file containing trimmed mate 2 reads [default:\nBASENAME.pair2.truncated (only used in PE mode, but not if\n--interleaved-output is enabled)]")), ToolInput(tag="in_singleton", input_type=File(optional=True), prefix="--singleton", doc=InputDocumentation(doc="Output file to which containing paired reads for which the mate has\nbeen discarded [default: BASENAME.singleton.truncated]")), ToolInput(tag="in_output_collapsed", input_type=File(optional=True), prefix="--outputcollapsed", doc=InputDocumentation(doc="If --collapsed is set, contains overlapping mate-pairs which have\nbeen merged into a single read (PE mode) or reads for which the\nadapter was identified by a minimum overlap, indicating that the\nentire template molecule is present. This does not include which have\nsubsequently been trimmed due to low-quality or ambiguous nucleotides\n[default: BASENAME.collapsed]")), ToolInput(tag="in_output_collapsed_truncated", input_type=File(optional=True), prefix="--outputcollapsedtruncated", doc=InputDocumentation(doc="Collapsed reads (see --outputcollapsed) which were trimmed due the\npresence of low-quality or ambiguous nucleotides [default:\nBASENAME.collapsed.truncated]")), ToolInput(tag="in_discarded", input_type=File(optional=True), prefix="--discarded", doc=InputDocumentation(doc="Contains reads discarded due to the --minlength, --maxlength or\n--maxns options [default: BASENAME.discarded]")), ToolInput(tag="in_gzip", input_type=Boolean(optional=True), prefix="--gzip", doc=InputDocumentation(doc="Enable gzip compression [default: off]")), ToolInput(tag="in_gzip_level", input_type=Int(optional=True), prefix="--gzip-level", doc=InputDocumentation(doc="Compression level, 0 - 9 [default: 6]")), ToolInput(tag="in_bzip_two", input_type=Boolean(optional=True), prefix="--bzip2", doc=InputDocumentation(doc="Enable bzip2 compression [default: off]")), ToolInput(tag="in_bzip_two_level", input_type=Int(optional=True), prefix="--bzip2-level", doc=InputDocumentation(doc="Compression level, 0 - 9 [default: 9]")), ToolInput(tag="in_adapter_one", input_type=Int(optional=True), prefix="--adapter1", doc=InputDocumentation(doc="Adapter sequence expected to be found in mate 1 reads [default:\nAGATCGGAAGAGCACACGTCTGAACTCCAGTCACNNNNNNATCTCGTATGCCGTCTTCTGCTTG].")), ToolInput(tag="in_adapter_two", input_type=Int(optional=True), prefix="--adapter2", doc=InputDocumentation(doc="Adapter sequence expected to be found in mate 2 reads [default:\nAGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT].")), ToolInput(tag="in_adapter_list", input_type=File(optional=True), prefix="--adapter-list", doc=InputDocumentation(doc="Read table of white-space separated adapters pairs, used as if the\nfirst column was supplied to --adapter1, and the second column was\nsupplied to --adapter2; only the first adapter in each pair is\nrequired SE trimming mode [default: <not set>].")), ToolInput(tag="in_min_adapter_overlap", input_type=Int(optional=True), prefix="--minadapteroverlap", doc=InputDocumentation(doc="In single-end mode, reads are only trimmed if the overlap between\nread and the adapter is at least X bases long, not counting ambiguous\nnucleotides (N); this is independent of the --minalignmentlength when\nusing --collapse, allowing a conservative selection of putative\ncomplete inserts while ensuring that all possible adapter\ncontamination is trimmed [default: 0].")), ToolInput(tag="in_mm", input_type=Int(optional=True), prefix="--mm", doc=InputDocumentation(doc="Max error-rate when aligning reads and/or adapters. If > 1, the max\nerror-rate is set to 1 / MISMATCH_RATE; if < 0, the defaults are\nused, otherwise the user-supplied value is used directly [default:\n1/3 for trimming; 1/10 when identifying adapters].")), ToolInput(tag="in_shift", input_type=Int(optional=True), prefix="--shift", doc=InputDocumentation(doc="Consider alignments where up to N nucleotides are missing from the 5'\ntermini [default: 2].")), ToolInput(tag="in_trim_five_p", input_type=Int(optional=True), prefix="--trim5p", doc=InputDocumentation(doc="[N]\nTrim the 5' of reads by a fixed amount after removing adapters, but\nbefore carrying out quality based trimming. Specify one value to trim\nmate 1 and mate 2 reads the same amount, or two values separated by a\nspace to trim each mate different amounts [default: no trimming].")), ToolInput(tag="in_trim_three_p", input_type=Int(optional=True), prefix="--trim3p", doc=InputDocumentation(doc="[N]\nTrim the 3' of reads by a fixed amount. See --trim5p.")), ToolInput(tag="in_trim_ns", input_type=Boolean(optional=True), prefix="--trimns", doc=InputDocumentation(doc="If set, trim ambiguous bases (N) at 5'/3' termini [default: off]")), ToolInput(tag="in_max_ns", input_type=Int(optional=True), prefix="--maxns", doc=InputDocumentation(doc="Reads containing more ambiguous bases (N) than this number after\ntrimming are discarded [default: 1000].")), ToolInput(tag="in_trim_qualities", input_type=Boolean(optional=True), prefix="--trimqualities", doc=InputDocumentation(doc="If set, trim bases at 5'/3' termini with quality scores <= to\n--minquality value [default: off]")), ToolInput(tag="in_trim_windows", input_type=Int(optional=True), prefix="--trimwindows", doc=InputDocumentation(doc="If set, quality trimming will be carried out using window based\napproach, where windows with an average quality less than\n--minquality will be trimmed. If >= 1, this value will be used as the\nwindow size. If the value is < 1, the value will be multiplied with\nthe read length to determine a window size per read. If the resulting\nwindow size is 0 or larger than the read length, the read length is\nused as the window size. This option implies --trimqualities\n[default: <not set>].")), ToolInput(tag="in_min_quality", input_type=Int(optional=True), prefix="--minquality", doc=InputDocumentation(doc="Inclusive minimum; see --trimqualities for details [default: 2]")), ToolInput(tag="in_preserve_five_p", input_type=Boolean(optional=True), prefix="--preserve5p", doc=InputDocumentation(doc="If set, bases at the 5p will not be trimmed by --trimns,\n--trimqualities, and --trimwindows. Collapsed reads will not be\nquality trimmed when this option is enabled [default: 5p bases are\ntrimmed]")), ToolInput(tag="in_minlength", input_type=Int(optional=True), prefix="--minlength", doc=InputDocumentation(doc="Reads shorter than this length are discarded following trimming\n[default: 15].")), ToolInput(tag="in_maxlength", input_type=Int(optional=True), prefix="--maxlength", doc=InputDocumentation(doc="Reads longer than this length are discarded following trimming\n[default: 4294967295].")), ToolInput(tag="in_collapse", input_type=Boolean(optional=True), prefix="--collapse", doc=InputDocumentation(doc="When set, paired ended read alignments of --minalignmentlength or\nmore bases are combined into a single consensus sequence,\nrepresenting the complete insert, and written to either\nbasename.collapsed or basename.collapsed.truncated (if trimmed due to\nlow-quality bases following collapse); for single-ended reads,\nputative complete inserts are identified as having at least\n--minalignmentlength bases overlap with the adapter sequence, and are\nwritten to the the same files [default: off].")), ToolInput(tag="in_collapse_deterministic", input_type=Boolean(optional=True), prefix="--collapse-deterministic", doc=InputDocumentation(doc="In standard --collapse mode, AdapterRemoval will randomly select one\nof two different overlapping bases if these have the same quality\n(otherwise it picks the highest quality base). With\n--collapse-deterministic, AdapterRemoval will instead set such bases\nto N. Setting this option also sets--collapse [default: off].")), ToolInput(tag="in_collapse_conservatively", input_type=Boolean(optional=True), prefix="--collapse-conservatively", doc=InputDocumentation(doc="Enables a more conservative merging algorithm inspired by fastq-join,\nin which the higher quality score is picked for matching bases and\nthe max score minus the min score is picked for mismatching bases.\nFor more details, see the documentation. --seed and\n--collapse-deterministic have no effect when this is enabled. Setting\nthis option also sets --collapse [default: off].")), ToolInput(tag="in_min_alignment_length", input_type=Int(optional=True), prefix="--minalignmentlength", doc=InputDocumentation(doc="If --collapse is set, paired reads must overlap at least this number\nof bases to be collapsed, and single-ended reads must overlap at\nleast this number of bases with the adapter to be considered complete\ntemplate molecules [default: 11].")), ToolInput(tag="in_seed", input_type=String(optional=True), prefix="--seed", doc=InputDocumentation(doc="Sets the RNG seed used when choosing between bases with equal Phred\nscores when --collapse is enabled. This option is not available if\nmore than one thread is used. If not specified, aseed is generated\nusing the current time.")), ToolInput(tag="in_barcode_list", input_type=File(optional=True), prefix="--barcode-list", doc=InputDocumentation(doc="List of barcodes or barcode pairs for single or double-indexed\ndemultiplexing. Note that both indexes should be specified for both\nsingle-end and paired-end trimming, if double-indexed multiplexing\nwas used, in order to ensure that the demultiplexed reads can be\ntrimmed correctly [default: <not set>].")), ToolInput(tag="in_barcode_mm", input_type=Int(optional=True), prefix="--barcode-mm", doc=InputDocumentation(doc="Maximum number of mismatches allowed when counting mismatches in both\nthe mate 1 and the mate 2 barcode for paired reads.")), ToolInput(tag="in_barcode_mm_r_one", input_type=Int(optional=True), prefix="--barcode-mm-r1", doc=InputDocumentation(doc="Maximum number of mismatches allowed for the mate 1 barcode; if not\nset, this value is equal to the '--barcode-mm' value; cannot be\nhigher than the '--barcode-mm value'.")), ToolInput(tag="in_barcode_mm_r_two", input_type=Int(optional=True), prefix="--barcode-mm-r2", doc=InputDocumentation(doc="Maximum number of mismatches allowed for the mate 2 barcode; if not\nset, this value is equal to the '--barcode-mm' value; cannot be\nhigher than the '--barcode-mm value'.")), ToolInput(tag="in_demultiplex_only", input_type=Boolean(optional=True), prefix="--demultiplex-only", doc=InputDocumentation(doc="Only carry out demultiplexing using the list of barcodes supplied\nwith --barcode-list. No other processing is done.\n"))], outputs=[ToolOutput(tag="out_combined_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_combined_output", type_hint=File()), doc=OutputDocumentation(doc="If set, all reads are written to the same file(s), specified by\n--output1 and --output2 (--output1 only if --interleaved-output is\nnot set). Discarded reads are replaced with a single 'N' with Phred\nscore 0 [default: off].")), ToolOutput(tag="out_basename", output_type=File(optional=True), selector=InputSelector(input_to_select="in_basename", type_hint=File()), doc=OutputDocumentation(doc="Default prefix for all output files for which no filename was\nexplicitly set [default: your_output].")), ToolOutput(tag="out_settings", output_type=File(optional=True), selector=InputSelector(input_to_select="in_settings", type_hint=File()), doc=OutputDocumentation(doc="Output file containing information on the parameters used in the run\nas well as overall statistics on the reads after trimming [default:\nBASENAME.settings]")), ToolOutput(tag="out_output_one", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_one", type_hint=File()), doc=OutputDocumentation(doc="Output file containing trimmed mate1 reads [default:\nBASENAME.pair1.truncated (PE), BASENAME.truncated (SE), or\nBASENAME.paired.truncated (interleaved PE)]")), ToolOutput(tag="out_output_two", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_two", type_hint=File()), doc=OutputDocumentation(doc="Output file containing trimmed mate 2 reads [default:\nBASENAME.pair2.truncated (only used in PE mode, but not if\n--interleaved-output is enabled)]")), ToolOutput(tag="out_singleton", output_type=File(optional=True), selector=InputSelector(input_to_select="in_singleton", type_hint=File()), doc=OutputDocumentation(doc="Output file to which containing paired reads for which the mate has\nbeen discarded [default: BASENAME.singleton.truncated]"))], container="quay.io/biocontainers/adapterremoval:2.3.2--hb7ba0dd_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Adapterremoval_V0_1_0().translate("wdl")

