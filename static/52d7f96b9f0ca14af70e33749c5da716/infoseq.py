from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Infoseq_V0_1_0 = CommandToolBuilder(tool="infoseq", base_command=["infoseq"], inputs=[ToolInput(tag="in_outfile", input_type=Boolean(optional=True), prefix="-outfile", doc=InputDocumentation(doc="outfile    [stdout] If you enter the name of a file\nhere then this program will write the\nsequence details into that file.")), ToolInput(tag="in_html", input_type=Boolean(optional=True), prefix="-html", doc=InputDocumentation(doc="boolean    [N] Format output as an HTML table")), ToolInput(tag="in_columns", input_type=String(optional=True), prefix="-columns", doc=InputDocumentation(doc="set on, the -delimiter option is")), ToolInput(tag="in_only", input_type=Boolean(optional=True), prefix="-only", doc=InputDocumentation(doc="boolean    [N] This is a way of shortening the command\nline if you only want a few things to be\ndisplayed. Instead of specifying:\n'-nohead -noname -noacc -notype -nopgc\n-nodesc'\nto get only the length output, you can\nspecify\n'-only -length'")), ToolInput(tag="in_usa", input_type=Boolean(optional=True), prefix="-usa", doc=InputDocumentation(doc="boolean    [@(!$(only))] Display the USA of the")), ToolInput(tag="in_name", input_type=Boolean(optional=True), prefix="-name", doc=InputDocumentation(doc="boolean    [@(!$(only))] Display 'name' column")), ToolInput(tag="in_accession", input_type=Boolean(optional=True), prefix="-accession", doc=InputDocumentation(doc="boolean    [@(!$(only))] Display 'accession' column")), ToolInput(tag="in_gi", input_type=Boolean(optional=True), prefix="-gi", doc=InputDocumentation(doc="boolean    [N] Display 'GI' column")), ToolInput(tag="in_seq_version", input_type=Boolean(optional=True), prefix="-seqversion", doc=InputDocumentation(doc="boolean    [N] Display 'version' column")), ToolInput(tag="in_type", input_type=Boolean(optional=True), prefix="-type", doc=InputDocumentation(doc="boolean    [@(!$(only))] Display 'type' column")), ToolInput(tag="in_length", input_type=Boolean(optional=True), prefix="-length", doc=InputDocumentation(doc="boolean    [@(!$(only))] Display 'length' column")), ToolInput(tag="in_pgc", input_type=Boolean(optional=True), prefix="-pgc", doc=InputDocumentation(doc="boolean    [@(!$(only))] Display 'percent GC content'")), ToolInput(tag="in_description", input_type=Boolean(optional=True), prefix="-description", doc=InputDocumentation(doc="boolean    [@(!$(only))] Display 'description' column")), ToolInput(tag="in_overriden_dot", input_type=String(), position=0, doc=InputDocumentation(doc="-delimiter          string     [|] This string, which is usually a single")), ToolInput(tag="in_sequence", input_type=String(), position=0, doc=InputDocumentation(doc="-database           boolean    [@(!$(only))] Display 'database' column")), ToolInput(tag="in_column", input_type=String(), position=1, doc=InputDocumentation(doc="-organism           boolean    [@(!$(only))] Display 'organism' column"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Infoseq_V0_1_0().translate("wdl", allow_empty_container=True)

