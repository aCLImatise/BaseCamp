from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String, Int

Olap_From_Seeds_V0_1_0 = CommandToolBuilder(tool="olap_from_seeds", base_command=["olap-from-seeds"], inputs=[ToolInput(tag="in_asymmetric_overlaps_ie", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="Asymmetric overlaps, i.e., only output overlaps with\na_iid < b_iid")), ToolInput(tag="in_output_binary_overlap", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc="Output binary overlap messages")), ToolInput(tag="in_output_corrections_file", input_type=File(optional=True), prefix="-c", doc=InputDocumentation(doc="Output corrections to file <f>")), ToolInput(tag="in_use_clear_range", input_type=String(optional=True), prefix="-C", doc=InputDocumentation(doc="Use clear range <s> for reads.  Default value is\nAS_READ_CLEAR_LATEST")), ToolInput(tag="in_set_keep_flag", input_type=String(optional=True), prefix="-d", doc=InputDocumentation(doc="Set keep flag in correction record on end of frags with less\nthan <n> olaps")), ToolInput(tag="in_extend_fragments_range", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc="Extend fragments beyond 3' clear range")), ToolInput(tag="in_read_seeds_sorted", input_type=File(optional=True), prefix="-F", doc=InputDocumentation(doc="Read seeds from sorted file <f>.  Format is:\n<a_iid> <b_iid> [f\r] <a_pos> <b_pos> <ct> <len>\nadditional entries on line are ignored.\nEntries are not reversed, i.e., a/b seed does NOT\nautomatically generate the b/a seed, too")), ToolInput(tag="in_do_partial_overlaps", input_type=Boolean(optional=True), prefix="-G", doc=InputDocumentation(doc="Do partial overlaps (i.e., local alignments)")), ToolInput(tag="in_prevent_correction_have", input_type=String(optional=True), prefix="-k", doc=InputDocumentation(doc="Prevent correction when have an exact match of <n> bases")), ToolInput(tag="in_send_overlaps_file", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="Send overlaps to file or store <f>")), ToolInput(tag="in_use_haplotype_counts", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="Don't use haplotype counts to correct")), ToolInput(tag="in_read_seeds_binary", input_type=String(optional=True), prefix="-S", doc=InputDocumentation(doc="Read seeds from binary overlap store <f>")), ToolInput(tag="in_use_n_pthreads", input_type=String(optional=True), prefix="-t", doc=InputDocumentation(doc="Use <n> p-threads")), ToolInput(tag="in_set_verbose_level", input_type=String(optional=True), prefix="-v", doc=InputDocumentation(doc="Set verbose level to <n>; higher is more debugging output")), ToolInput(tag="in_require_exact_match", input_type=String(optional=True), prefix="-V", doc=InputDocumentation(doc="Require <n> exact match bases around an error (combined count\non both sides) to vote to change a base")), ToolInput(tag="in_use_correlated_differences", input_type=Boolean(optional=True), prefix="-w", doc=InputDocumentation(doc="Use correlated differences to disqualify overlaps")), ToolInput(tag="in_prevent_correction_first", input_type=Int(optional=True), prefix="-x", doc=InputDocumentation(doc="Don't prevent correction on first and last <n> bp of exact match\nregions (whose length is set by -k option).")), ToolInput(tag="in_expert_bit_options", input_type=Int(optional=True), prefix="-X", doc=InputDocumentation(doc="Expert bit options.  <h> is a hexadecimal constant:\n(<h> & 0x1) == 1 forces old banded forward homopoly alignment\n(<h> & 0x2) == 1 forces faster non-homopoly forward alignment\n(<h> & 0x4) == 1 forces faster non-homopoly reverse alignment")), ToolInput(tag="in_allow_error_rate", input_type=Int(optional=True), prefix="-y", doc=InputDocumentation(doc="Allow max error rate of <x> in alignments (e.g., 0.03 for 3% error)\nValue cannot exceed  0.060")), ToolInput(tag="in_try_correct_errors", input_type=Boolean(optional=True), prefix="-z", doc=InputDocumentation(doc="Do NOT try to correct read errors")), ToolInput(tag="in_be_hp", input_type=Boolean(optional=True), prefix="-behp", doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output_corrections_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_corrections_file", type_hint=File()), doc=OutputDocumentation(doc="Output corrections to file <f>"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Olap_From_Seeds_V0_1_0().translate("wdl", allow_empty_container=True)

