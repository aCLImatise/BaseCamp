from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Int, File

Ghostx_V0_1_0 = CommandToolBuilder(tool="ghostx", base_command=["ghostx"], inputs=[ToolInput(tag="in_protein_sequences_fasta", input_type=String(optional=True), prefix="-i", doc=InputDocumentation(doc="Protein sequences in FASTA format for a database")), ToolInput(tag="in_the_name_database", input_type=String(optional=True), prefix="-o", doc=InputDocumentation(doc="The name of database")), ToolInput(tag="in_chunk_size_database", input_type=Int(optional=True), prefix="-l", doc=InputDocumentation(doc="Chunk size of the database (bytes) [1073741824 (=1GB)]")), ToolInput(tag="in_database_sequence_type", input_type=String(optional=True), prefix="-t", doc=InputDocumentation(doc="Database sequence type, p (protein) or d (dna) [p]")), ToolInput(tag="in_database_name_formatted", input_type=String(optional=True), prefix="-d", doc=InputDocumentation(doc="database name (must be formatted)")), ToolInput(tag="in_maximum_number_alignments", input_type=Int(optional=True), prefix="-v", doc=InputDocumentation(doc="Maximum number of alignments for each subject [1]")), ToolInput(tag="in_maximum_number_output", input_type=Int(optional=True), prefix="-b", doc=InputDocumentation(doc="Maximum number of the output for a query [10]")), ToolInput(tag="in_score_matrix_file", input_type=File(optional=True), prefix="-M", doc=InputDocumentation(doc="Score matrix file[BLOSUM62]")), ToolInput(tag="in_open_gap_penalty", input_type=Int(optional=True), prefix="-G", doc=InputDocumentation(doc="Open gap penalty [11]")), ToolInput(tag="in_extend_gap_penalty", input_type=Int(optional=True), prefix="-E", doc=InputDocumentation(doc="Extend gap penalty [1]")), ToolInput(tag="in_lower_limit_score", input_type=Int(optional=True), prefix="-s", doc=InputDocumentation(doc="Lower limit cutoff score for seed search [4]")), ToolInput(tag="in_upper_limit_score", input_type=Int(optional=True), prefix="-T", doc=InputDocumentation(doc="Upper limit cutoff score for seed search [30]")), ToolInput(tag="in_maximum_length_alignments", input_type=Int(optional=True), prefix="-S", doc=InputDocumentation(doc="Maximum length of alignments in seed search [10]")), ToolInput(tag="in_query_sequence_type", input_type=String(optional=True), prefix="-q", doc=InputDocumentation(doc="Query sequence type, p (protein) or d (dna) [p]")), ToolInput(tag="in_filter_query_sequence", input_type=String(optional=True), prefix="-F", doc=InputDocumentation(doc="Filter query sequence, T (enable) or F (disable) [T]")), ToolInput(tag="in_the_number_threads", input_type=Int(optional=True), prefix="-a", doc=InputDocumentation(doc="The number of threads [1]")), ToolInput(tag="in_maximum_number_hits", input_type=Int(optional=True), prefix="-L", doc=InputDocumentation(doc="Maximum number of hits [67108864]"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Ghostx_V0_1_0().translate("wdl", allow_empty_container=True)

