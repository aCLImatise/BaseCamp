from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Directory, Int, String, Boolean

Chewiesnake_Join_V0_1_0 = CommandToolBuilder(tool="chewiesnake_join", base_command=["chewiesnake_join"], inputs=[ToolInput(tag="in_sample_list", input_type=File(optional=True), prefix="--sample_list", doc=InputDocumentation(doc="List of allele profiles to analyze, containg a tab\nseparated file with the columns: sender profiles\nstatistics timestamps")), ToolInput(tag="in_working_directory", input_type=Directory(optional=True), prefix="--working_directory", doc=InputDocumentation(doc="Working directory where results are saved")), ToolInput(tag="in_snake_file", input_type=File(optional=True), prefix="--snakefile", doc=InputDocumentation(doc="Path to Snakefile of chewieSnake pipeline, default is\npath to Snakefile in same directory")), ToolInput(tag="in_cond_a_prefix", input_type=File(optional=True), prefix="--condaprefix", doc=InputDocumentation(doc="Path of default conda environment, enables recycling\nbuilt environments, default is in folder conda_env in\nrepository directory.")), ToolInput(tag="in_clustering_method", input_type=Int(optional=True), prefix="--clustering_method", doc=InputDocumentation(doc="The agglomeration method to be used for hierarchical\nclustering. This should be (an unambiguous\nabbreviation of) one of 'ward.D', 'ward.D2', 'single',\n'complete', 'average' (= UPGMA), 'mcquitty' (= WPGMA),\n'median' (= WPGMC) or 'centroid' (= UPGMC); default =\nsingle")), ToolInput(tag="in_distance_threshold", input_type=Int(optional=True), prefix="--distance_threshold", doc=InputDocumentation(doc="A single distance threshold for the exctraction of\nsub-trees; default = 10")), ToolInput(tag="in_cluster_names", input_type=File(optional=True), prefix="--cluster_names", doc=InputDocumentation(doc="A file with potential names for cluster names, one\nname per line, default:\nrepo_path/scripts/cluster_names_reservoir.txt")), ToolInput(tag="in_sub_cluster_thresholds", input_type=Int(optional=True), prefix="--subcluster_thresholds", doc=InputDocumentation(doc="A list of distance thresholds for subclustering;\ndefault = [3]")), ToolInput(tag="in_sub_cluster_names", input_type=String(optional=True), prefix="--subcluster_names", doc=InputDocumentation(doc="A list of name types for nomenclature of subclusters;\nchoose from 'numerical' and 'greek-alphabet'; one\nentry for each subcluster_threshold; default =\n['greek-alphabet']")), ToolInput(tag="in_external_cluster_names", input_type=File(optional=True), prefix="--external_cluster_names", doc=InputDocumentation(doc="A tab seperated file with external cluster names, e.g.\nEpi clusters. Must contain one representative sample\nper cluster: sample<tab>cluster_name")), ToolInput(tag="in_serovar_info", input_type=File(optional=True), prefix="--serovar_info", doc=InputDocumentation(doc="A tab seperated file with serovar or clade names:\nsample<tab>cluster_name")), ToolInput(tag="in_no_report", input_type=Boolean(optional=True), prefix="--noreport", doc=InputDocumentation(doc="Do not create html report")), ToolInput(tag="in_report_only", input_type=Boolean(optional=True), prefix="--report_only", doc=InputDocumentation(doc="Only create html report")), ToolInput(tag="in_cluster", input_type=Boolean(optional=True), prefix="--cluster", doc=InputDocumentation(doc="Assign cluster type and cluster addresses")), ToolInput(tag="in_distance_method", input_type=Int(optional=True), prefix="--distance_method", doc=InputDocumentation(doc="Grapetree distance method; default = 3")), ToolInput(tag="in_species_short_name", input_type=String(optional=True), prefix="--species_shortname", doc=InputDocumentation(doc="Abbreviated Species name for cluster names; default =\n'SE'")), ToolInput(tag="in_use_cond_a", input_type=Boolean(optional=True), prefix="--use_conda", doc=InputDocumentation(doc="Utilize '--useconda' option, i.e. all software\ndependencies are available in a single env")), ToolInput(tag="in_cond_a_front_end", input_type=Boolean(optional=True), prefix="--conda_frontend", doc=InputDocumentation(doc="Do not mamba but conda as frontend to create\nindividual module' software environments")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of Threads to use. Note that samples can only\nbe processed sequentially due to the required database\naccess. However the allele calling can be executed in\nparallel for the different loci, default = 10")), ToolInput(tag="in_dry_run", input_type=Boolean(optional=True), prefix="--dryrun", doc=InputDocumentation(doc="Snakemake dryrun. Only calculate graph without\nexecuting anything")), ToolInput(tag="in_force", input_type=Boolean(optional=True), prefix="--force", doc=InputDocumentation(doc="Snakemake force. Force recalculation of all steps")), ToolInput(tag="in_force_all", input_type=Boolean(optional=True), prefix="--forceall", doc=InputDocumentation(doc="Snakemake force. Force recalculation of all steps")), ToolInput(tag="in_unlock", input_type=Boolean(optional=True), prefix="--unlock", doc=InputDocumentation(doc="unlock snakemake")), ToolInput(tag="in_logdir", input_type=File(optional=True), prefix="--logdir", doc=InputDocumentation(doc="Path to directory whete .snakemake output is to be\nsaved\n"))], outputs=[ToolOutput(tag="out_logdir", output_type=File(optional=True), selector=InputSelector(input_to_select="in_logdir", type_hint=File()), doc=OutputDocumentation(doc="Path to directory whete .snakemake output is to be\nsaved\n"))], container="quay.io/biocontainers/chewiesnake:3.0.0--1", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Chewiesnake_Join_V0_1_0().translate("wdl")

