from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, String, Directory

Kobas_Identify_V0_1_0 = CommandToolBuilder(tool="kobas_identify", base_command=["kobas-identify"], inputs=[ToolInput(tag="in_fg_file", input_type=File(optional=True), prefix="--fgfile", doc=InputDocumentation(doc="foreground file, the output of annotate")), ToolInput(tag="in_bg_file", input_type=File(optional=True), prefix="--bgfile", doc=InputDocumentation(doc="background file, the output of annotate (3 or 4-letter\nfile name is not allowed), or species abbreviation\n(for example: hsa for Homo sapiens, mmu for Mus\nmusculus, dme for Drosophila melanogaster, ath for\nArabidopsis thaliana, sce for Saccharomyces cerevisiae\nand eco for Escherichia coli K-12 MG1655), default\nsame species as annotate")), ToolInput(tag="in_db", input_type=Int(optional=True), prefix="--db", doc=InputDocumentation(doc="databases for selection, 1-letter abbreviation\nseparated by '/': K for KEGG PATHWAY, R for Reactome,\nB for BioCyc, p for PANTHER, o for OMIM, k for KEGG\nDISEASE, N for NHGRI GWAS Catalog, G for Gene\nOntology,  S for Gene Ontology Slim(GOslim), default\nK/R/B/p/o/k/N/G/S")), ToolInput(tag="in_method", input_type=String(optional=True), prefix="--method", doc=InputDocumentation(doc="choose statistical test method: b for binomial test, c\nfor chi-square test, h for hypergeometric test /\nFisher's exact test, and x for frequency list, default\nhypergeometric test / Fisher's exact test")), ToolInput(tag="in_fdr", input_type=String(optional=True), prefix="--fdr", doc=InputDocumentation(doc="choose false discovery rate (FDR) correction method:\nBH for Benjamini and Hochberg, BY for Benjamini and\nYekutieli, QVALUE, and None, default BH")), ToolInput(tag="in_outfile", input_type=File(optional=True), prefix="--outfile", doc=InputDocumentation(doc="output file for identification result, default stdout")), ToolInput(tag="in_cut_off", input_type=Int(optional=True), prefix="--cutoff", doc=InputDocumentation(doc="terms with less than cutoff number of genes are not\nused for statistical tests, default 5")), ToolInput(tag="in_kob_as_home", input_type=File(optional=True), prefix="--kobashome", doc=InputDocumentation(doc="Optional parameter. To set path to kobas_home, which\nis parent directory of sqlite3/ and seq_pep/ , default\nvalue is read from ~/.kobasrcwhere you set before\nrunning kobas. If you set this parameter, it means you\nset 'kobasdb' and 'blastdb' in this following\ndirectory. e.g. '-k /home/user/kobas/', means that you\nset kobasdb = /home/user/kobas/sqlite3/ and blastdb =\n/home/user/kobas/seq_pep/")), ToolInput(tag="in_blast_home", input_type=Directory(optional=True), prefix="--blasthome", doc=InputDocumentation(doc="Optional parameter. To set parent directory of blastx\nand blastp. If you set this parameter, it means you\nset 'blastx' and 'blastp' in this following directory.\nDefault value is read from ~/.kobasrc where you set\nbefore running kobas")), ToolInput(tag="in_blast_db", input_type=File(optional=True), prefix="--blastdb", doc=InputDocumentation(doc="Optional parameter. To set path to sep_pep/, default\nvalue is read from ~/.kobasrc where you set before\nrunning kobas")), ToolInput(tag="in_koba_sdb", input_type=File(optional=True), prefix="--kobasdb", doc=InputDocumentation(doc="Optional parameter. To set path to sqlite3/, default\nvalue is read from ~/.kobasrc where you set before\nrunning kobas, e.g. '-q /kobas_home/sqlite3/'")), ToolInput(tag="in_blastp", input_type=File(optional=True), prefix="--blastp", doc=InputDocumentation(doc="Optional parameter. To set path to blastp program,\ndefault value is read from ~/.kobasrc where you set\nbefore running kobas")), ToolInput(tag="in_blastx", input_type=File(optional=True), prefix="--blastx", doc=InputDocumentation(doc="Optional parameter. To set path to  blasx program,\ndefault value is read from ~/.kobasrc where you set\nbefore running kobas\n"))], outputs=[ToolOutput(tag="out_fg_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_fg_file", type_hint=File()), doc=OutputDocumentation(doc="foreground file, the output of annotate")), ToolOutput(tag="out_bg_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_bg_file", type_hint=File()), doc=OutputDocumentation(doc="background file, the output of annotate (3 or 4-letter\nfile name is not allowed), or species abbreviation\n(for example: hsa for Homo sapiens, mmu for Mus\nmusculus, dme for Drosophila melanogaster, ath for\nArabidopsis thaliana, sce for Saccharomyces cerevisiae\nand eco for Escherichia coli K-12 MG1655), default\nsame species as annotate")), ToolOutput(tag="out_outfile", output_type=File(optional=True), selector=InputSelector(input_to_select="in_outfile", type_hint=File()), doc=OutputDocumentation(doc="output file for identification result, default stdout"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Kobas_Identify_V0_1_0().translate("wdl", allow_empty_container=True)

