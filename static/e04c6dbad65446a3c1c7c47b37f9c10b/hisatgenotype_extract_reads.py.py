from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Directory, Boolean, Int, String

Hisatgenotype_Extract_Reads_Py_V0_1_0 = CommandToolBuilder(tool="hisatgenotype_extract_reads.py", base_command=["hisatgenotype_extract_reads.py"], inputs=[ToolInput(tag="in_base_fname", input_type=File(optional=True), prefix="--base-fname", doc=InputDocumentation(doc="base filename for genotype genome")), ToolInput(tag="in_read_dir", input_type=Directory(optional=True), prefix="--read-dir", doc=InputDocumentation(doc="Directory name for read files")), ToolInput(tag="in_out_dir", input_type=Directory(optional=True), prefix="--out-dir", doc=InputDocumentation(doc="Directory name for extracted read files")), ToolInput(tag="in_suffix", input_type=File(optional=True), prefix="--suffix", doc=InputDocumentation(doc="Read file suffix (Default: fq.gz)")), ToolInput(tag="in_fast_a", input_type=Boolean(optional=True), prefix="--fasta", doc=InputDocumentation(doc="FASTA format")), ToolInput(tag="in_filename_singleend_reads", input_type=File(optional=True), prefix="-U", doc=InputDocumentation(doc="filename for single-end reads")), ToolInput(tag="in_one", input_type=Int(optional=True), prefix="-1", doc=InputDocumentation(doc="filename for paired-end reads")), ToolInput(tag="in_two", input_type=Int(optional=True), prefix="-2", doc=InputDocumentation(doc="filename for paired-end reads")), ToolInput(tag="in_database_list", input_type=String(optional=True), prefix="--database-list", doc=InputDocumentation(doc="A comma-separated list of database (default: empty)")), ToolInput(tag="in_simulation", input_type=Boolean(optional=True), prefix="--simulation", doc=InputDocumentation(doc="Simulated reads (Default: False)")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of threads")), ToolInput(tag="in_threads_a_process", input_type=Int(optional=True), prefix="--threads-aprocess", doc=InputDocumentation(doc="Number of threads a process")), ToolInput(tag="in_max_sample", input_type=Int(optional=True), prefix="--max-sample", doc=InputDocumentation(doc="Number of samples to be extracted (default:\nsys.maxint)")), ToolInput(tag="in_job_range", input_type=Int(optional=True), prefix="--job-range", doc=InputDocumentation(doc="two numbers (e.g. 1,3)")), ToolInput(tag="in_aligner", input_type=Int(optional=True), prefix="--aligner", doc=InputDocumentation(doc="Aligner (default: hisat2)")), ToolInput(tag="in_extract_whole", input_type=Boolean(optional=True), prefix="--extract-whole", doc=InputDocumentation(doc="Extract all reads")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="also print some statistics to stderr"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Hisatgenotype_Extract_Reads_Py_V0_1_0().translate("wdl", allow_empty_container=True)

