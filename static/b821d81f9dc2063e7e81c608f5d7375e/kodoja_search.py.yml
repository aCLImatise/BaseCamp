!Command
command:
- kodoja_search.py
positional: []
named:
- !Flag
  description: Output directory path, required
  synonyms:
  - -o
  - --output_dir
  args: !SimpleFlagArg
    name: OUTPUT_DIR
  optional: true
- !Flag
  description: Kraken database path, required
  synonyms:
  - -d1
  - --kraken_db
  args: !SimpleFlagArg
    name: KRAKEN_DB
  optional: true
- !Flag
  description: Kaiju database path, required
  synonyms:
  - -d2
  - --kaiju_db
  args: !SimpleFlagArg
    name: KAIJU_DB
  optional: true
- !Flag
  description: Read 1 file path, required
  synonyms:
  - -r1
  - --read1
  args: !SimpleFlagArg
    name: READ1
  optional: true
- !Flag
  description: Read 2 file path
  synonyms:
  - -r2
  - --read2
  args: !SimpleFlagArg
    name: READ2
  optional: true
- !Flag
  description: Sequence data format (default fastq)
  synonyms:
  - -f
  - --data_format
  args: !SimpleFlagArg
    name: DATA_FORMAT
  optional: true
- !Flag
  description: Number of threads (default 1)
  synonyms:
  - -t
  - --threads
  args: !SimpleFlagArg
    name: THREADS
  optional: true
- !Flag
  description: Subset sequences with this tax id from results
  synonyms:
  - -s
  - --host_subset
  args: !SimpleFlagArg
    name: HOST_SUBSET
  optional: true
- !Flag
  description: Trimmomatic minimum length
  synonyms:
  - -m
  - --trim_minlen
  args: !SimpleFlagArg
    name: TRIM_MINLEN
  optional: true
- !Flag
  description: Illumina adapter sequence file
  synonyms:
  - -a
  - --trim_adapt
  args: !SimpleFlagArg
    name: TRIM_ADAPT
  optional: true
- !Flag
  description: Number of minium hits by Kraken
  synonyms:
  - -q
  - --kraken_quick
  args: !SimpleFlagArg
    name: KRAKEN_QUICK
  optional: true
- !Flag
  description: Kraken preload database
  synonyms:
  - -p
  - --kraken_preload
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Kaju alignment score
  synonyms:
  - -c
  - --kaiju_score
  args: !SimpleFlagArg
    name: KAIJU_SCORE
  optional: true
- !Flag
  description: Kaju minimum length
  synonyms:
  - -l
  - --kaiju_minlen
  args: !SimpleFlagArg
    name: KAIJU_MINLEN
  optional: true
- !Flag
  description: Kaju allowed mismatches
  synonyms:
  - -i
  - --kaiju_mismatch
  args: !SimpleFlagArg
    name: KAIJU_MISMATCH
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: show program's version number and exit
  synonyms:
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "usage: kodoja_search.py [-h] [--version] -o OUTPUT_DIR -d1 KRAKEN_DB -d2\n\
  \                        KAIJU_DB -r1 READ1 [-r2 READ2] [-f DATA_FORMAT]\n     \
  \                   [-t THREADS] [-s HOST_SUBSET] [-m TRIM_MINLEN]\n           \
  \             [-a TRIM_ADAPT] [-q KRAKEN_QUICK] [-p]\n                        [-c\
  \ KAIJU_SCORE] [-l KAIJU_MINLEN] [-i KAIJU_MISMATCH]\n\nKodoja Search is a tool\
  \ intended to identify viral sequences\nin a FASTQ/FASTA sequencing run by matching\
  \ them against both Kraken and\nKaiju databases.\n\noptional arguments:\n  -h, --help\
  \            show this help message and exit\n  --version             show program's\
  \ version number and exit\n  -o OUTPUT_DIR, --output_dir OUTPUT_DIR\n          \
  \              Output directory path, required\n  -d1 KRAKEN_DB, --kraken_db KRAKEN_DB\n\
  \                        Kraken database path, required\n  -d2 KAIJU_DB, --kaiju_db\
  \ KAIJU_DB\n                        Kaiju database path, required\n  -r1 READ1,\
  \ --read1 READ1\n                        Read 1 file path, required\n  -r2 READ2,\
  \ --read2 READ2\n                        Read 2 file path\n  -f DATA_FORMAT, --data_format\
  \ DATA_FORMAT\n                        Sequence data format (default fastq)\n  -t\
  \ THREADS, --threads THREADS\n                        Number of threads (default\
  \ 1)\n  -s HOST_SUBSET, --host_subset HOST_SUBSET\n                        Subset\
  \ sequences with this tax id from results\n  -m TRIM_MINLEN, --trim_minlen TRIM_MINLEN\n\
  \                        Trimmomatic minimum length\n  -a TRIM_ADAPT, --trim_adapt\
  \ TRIM_ADAPT\n                        Illumina adapter sequence file\n  -q KRAKEN_QUICK,\
  \ --kraken_quick KRAKEN_QUICK\n                        Number of minium hits by\
  \ Kraken\n  -p, --kraken_preload  Kraken preload database\n  -c KAIJU_SCORE, --kaiju_score\
  \ KAIJU_SCORE\n                        Kaju alignment score\n  -l KAIJU_MINLEN,\
  \ --kaiju_minlen KAIJU_MINLEN\n                        Kaju minimum length\n  -i\
  \ KAIJU_MISMATCH, --kaiju_mismatch KAIJU_MISMATCH\n                        Kaju\
  \ allowed mismatches\n\nThe main output of ``kodoja_search.py`` is a file called\
  \ ``virus_table.txt``\nin the specified output directory. This is a plain text tab-separated\
  \ table,\nthe columns are as follows:\n\n1. Species name,\n2. Species NCBI taxonomy\
  \ identifier (TaxID),\n3. Number of reads assigned by *either* Kraken or Kaiju to\
  \ this species,\n4. Number of Reads assigned by *both* Kraken and Kaiju to this\
  \ species,\n5. Genus name,\n6. Number of reads assigned by *either* Kraken or Kaiju\
  \ to this genus,\n7. Number of reads assigned by *both* Kraken and Kaiju to this\
  \ genus.\n\nThe output directory includes additional files, including ``kodoja_VRL.txt``\n\
  (a table listing the read identifiers used) which is intended mainly as\ninput to\
  \ the ``kodoja_retrieve.py`` script.\n\nSee also https://github.com/abaizan/kodoja/wiki/Kodoja-Manual\n"
generated_using:
- --help
