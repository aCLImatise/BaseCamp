from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Directory, Int, Boolean

Metawrap_Bin_Refinement_V0_1_0 = CommandToolBuilder(tool="metaWRAP_bin_refinement", base_command=["metaWRAP", "bin_refinement"], inputs=[ToolInput(tag="in_output_directory", input_type=Directory(optional=True), prefix="-o", doc=InputDocumentation(doc="output directory")), ToolInput(tag="in_number_threads_default", input_type=Int(optional=True), prefix="-t", doc=InputDocumentation(doc="number of threads (default=1)")), ToolInput(tag="in_memory_available_default", input_type=Int(optional=True), prefix="-m", doc=InputDocumentation(doc="memory available (default=40)")), ToolInput(tag="in_minimum_completion_default", input_type=Int(optional=True), prefix="-c", doc=InputDocumentation(doc="minimum % completion of bins [should be >50%] (default=70)")), ToolInput(tag="in_maximum_contamination_is", input_type=Int(optional=True), prefix="-x", doc=InputDocumentation(doc="maximum % contamination of bins that is acceptable (default=10)")), ToolInput(tag="in_folder_metagenomic_bins_files", input_type=Directory(optional=True), prefix="-A", doc=InputDocumentation(doc="folder with metagenomic bins (files must have .fa or .fasta extension)")), ToolInput(tag="in_b", input_type=Directory(optional=True), prefix="-B", doc=InputDocumentation(doc="another folder with metagenomic bins")), ToolInput(tag="in_var_7", input_type=Directory(optional=True), prefix="-C", doc=InputDocumentation(doc="another folder with metagenomic bins")), ToolInput(tag="in_skip_refinement", input_type=Boolean(optional=True), prefix="--skip-refinement", doc=InputDocumentation(doc="dont use binning_refiner to come up with refined bins based on combinations of binner outputs")), ToolInput(tag="in_skip_check_m", input_type=Boolean(optional=True), prefix="--skip-checkm", doc=InputDocumentation(doc="dont run CheckM to assess bins")), ToolInput(tag="in_skip_consolidation", input_type=Boolean(optional=True), prefix="--skip-consolidation", doc=InputDocumentation(doc="choose the best version of each bin from all bin refinement iteration")), ToolInput(tag="in_keep_ambiguous", input_type=Boolean(optional=True), prefix="--keep-ambiguous", doc=InputDocumentation(doc="for contigs that end up in more than one bin, keep them in all bins (default: keeps them only in the best bin)")), ToolInput(tag="in_remove_ambiguous", input_type=Boolean(optional=True), prefix="--remove-ambiguous", doc=InputDocumentation(doc="for contigs that end up in more than one bin, remove them in all bins (default: keeps them only in the best bin)")), ToolInput(tag="in_quick", input_type=Boolean(optional=True), prefix="--quick", doc=InputDocumentation(doc="adds --reduced_tree option to checkm, reducing runtime, especially with low memory"))], outputs=[ToolOutput(tag="out_output_directory", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output_directory", type_hint=File()), doc=OutputDocumentation(doc="output directory"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Metawrap_Bin_Refinement_V0_1_0().translate("wdl", allow_empty_container=True)

