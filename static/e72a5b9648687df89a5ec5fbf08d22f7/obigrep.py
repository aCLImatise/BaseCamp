from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, File, Int

Obigrep_V0_1_0 = CommandToolBuilder(tool="obigrep", base_command=["obigrep"], inputs=[ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--DEBUG", doc=InputDocumentation(doc="Set logging in debug mode")), ToolInput(tag="in_without_progress_bar", input_type=Boolean(optional=True), prefix="--without-progress-bar", doc=InputDocumentation(doc="desactivate progress bar")), ToolInput(tag="in_sequence", input_type=String(optional=True), prefix="--sequence", doc=InputDocumentation(doc="regular expression pattern used to select the\nsequence. The pattern is case insensitive")), ToolInput(tag="in_definition", input_type=String(optional=True), prefix="--definition", doc=InputDocumentation(doc="regular expression pattern matched against the\ndefinition of the sequence. The pattern is case\nsensitive")), ToolInput(tag="in_identifier", input_type=String(optional=True), prefix="--identifier", doc=InputDocumentation(doc="regular expression pattern matched against the\nidentifier of the sequence. The pattern is case\nsensitive")), ToolInput(tag="in_id_list", input_type=File(optional=True), prefix="--id-list", doc=InputDocumentation(doc="file containing identifiers of sequences to select")), ToolInput(tag="in_regularpattern__attributeattributenameregularpatternregular", input_type=String(optional=True), prefix="-a", doc=InputDocumentation(doc=":<REGULAR_PATTERN>, --attribute=<ATTRIBUTE_NAME>:<REGULAR_PATTERN>\nregular expression pattern matched against the\nattributes of the sequence. the value of this atribute\nis of the form : attribute_name:regular_pattern. The\npattern is case sensitive.Several -a option can be\nused on the same commande line.")), ToolInput(tag="in_has_attribute", input_type=String(optional=True), prefix="--has-attribute", doc=InputDocumentation(doc="select sequence with attribute <ATTRIBUTE_NAME>\ndefined")), ToolInput(tag="in_predic_at", input_type=Boolean(optional=True), prefix="--predicat", doc=InputDocumentation(doc="python boolean expression to be evaluated in the\nsequence context. The attribute name can be used in\nthe expression as variable name .An extra variable\nnamed 'sequence' refersto the sequence object itself.\nSeveral -p option can be used on the same commande\nline.")), ToolInput(tag="in__lmaxkeep_sequences", input_type=Boolean(optional=True), prefix="-L", doc=InputDocumentation(doc="<##>, --lmax=<##>\nkeep sequences shorter than lmax")), ToolInput(tag="in__lminkeep_sequences", input_type=Boolean(optional=True), prefix="-l", doc=InputDocumentation(doc="<##>, --lmin=<##>\nkeep sequences longer than lmin")), ToolInput(tag="in_inverse_match", input_type=Boolean(optional=True), prefix="--inverse-match", doc=InputDocumentation(doc="revert the sequence selection [default : False]")), ToolInput(tag="in_database", input_type=File(optional=True), prefix="--database", doc=InputDocumentation(doc="ecoPCR taxonomy Database name")), ToolInput(tag="in_taxonomy_dump", input_type=File(optional=True), prefix="--taxonomy-dump", doc=InputDocumentation(doc="NCBI Taxonomy dump repository name")), ToolInput(tag="in_require_rank", input_type=String(optional=True), prefix="--require-rank", doc=InputDocumentation(doc="select sequence with taxid tag containing a parent of\nrank <RANK_NAME>")), ToolInput(tag="in_required", input_type=Int(optional=True), prefix="--required", doc=InputDocumentation(doc="Select the sequences having the ancestor of taxid\n<TAXID>. If several ancestors are specified (with  '-r\ntaxid1 -r taxid2'), the sequences having at least one\nof them are selected")), ToolInput(tag="in_ignore", input_type=String(optional=True), prefix="--ignore", doc=InputDocumentation(doc="ignored taxid")), ToolInput(tag="in_skip", input_type=String(optional=True), prefix="--skip", doc=InputDocumentation(doc="skip the N first sequences")), ToolInput(tag="in_only", input_type=String(optional=True), prefix="--only", doc=InputDocumentation(doc="treat only N sequences")), ToolInput(tag="in_genbank", input_type=Boolean(optional=True), prefix="--genbank", doc=InputDocumentation(doc="Input file is in genbank format")), ToolInput(tag="in_embl", input_type=Boolean(optional=True), prefix="--embl", doc=InputDocumentation(doc="Input file is in embl format")), ToolInput(tag="in_skip_on_error", input_type=Boolean(optional=True), prefix="--skip-on-error", doc=InputDocumentation(doc="Skip sequence entries with parse error")), ToolInput(tag="in_fast_a", input_type=Boolean(optional=True), prefix="--fasta", doc=InputDocumentation(doc="Input file is in fasta nucleic format (including\nobitools fasta extentions)")), ToolInput(tag="in_eco_pcr", input_type=Boolean(optional=True), prefix="--ecopcr", doc=InputDocumentation(doc="Input file is in ecopcr format")), ToolInput(tag="in_raw_fast_a", input_type=Boolean(optional=True), prefix="--raw-fasta", doc=InputDocumentation(doc="Input file is in fasta format (but more tolerant to\nformat variant)")), ToolInput(tag="in_sanger", input_type=Boolean(optional=True), prefix="--sanger", doc=InputDocumentation(doc="Input file is in sanger fastq nucleic format (standard\nfastq)")), ToolInput(tag="in_solexa", input_type=Boolean(optional=True), prefix="--solexa", doc=InputDocumentation(doc="Input file is in fastq nucleic format produced by\nsolexa sequencer")), ToolInput(tag="in_eco_pcr_db", input_type=Boolean(optional=True), prefix="--ecopcrdb", doc=InputDocumentation(doc="Input file is an ecopcr database")), ToolInput(tag="in_nuc", input_type=Boolean(optional=True), prefix="--nuc", doc=InputDocumentation(doc="Input file contains nucleic sequences")), ToolInput(tag="in_prot", input_type=Boolean(optional=True), prefix="--prot", doc=InputDocumentation(doc="Input file contains protein sequences")), ToolInput(tag="in_fast_a_output", input_type=Boolean(optional=True), prefix="--fasta-output", doc=InputDocumentation(doc="Output sequences in obitools fasta format")), ToolInput(tag="in_fast_q_output", input_type=Boolean(optional=True), prefix="--fastq-output", doc=InputDocumentation(doc="Output sequences in sanger fastq format")), ToolInput(tag="in_eco_pcr_db_output", input_type=String(optional=True), prefix="--ecopcrdb-output", doc=InputDocumentation(doc="Output sequences in ecopcr database format (sequence\nrecords are not printed on standard output)")), ToolInput(tag="in_uppercase", input_type=Boolean(optional=True), prefix="--uppercase", doc=InputDocumentation(doc="Print sequences in upper case (default is lower case)"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Obigrep_V0_1_0().translate("wdl", allow_empty_container=True)

