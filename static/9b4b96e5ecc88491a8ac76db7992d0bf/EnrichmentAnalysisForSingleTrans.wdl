version 1.0

task EnrichmentAnalysisForSingleTrans {
  input {
    File? ratio_file_generated
    String? ot_put_prefix
    File? coordinate_file
    String? single_trans
    File? selected_trans_list
    Int? ymin
    Int? ymax
    String? unit
    String? a_xv_line
    String? a_xh_line
    Int? slide_window
    Int? start
    Int? window
    Int? step
    String? id_type
  }
  command <<<
    EnrichmentAnalysisForSingleTrans \
      ~{if defined(ratio_file_generated) then ("--input " +  '"' + ratio_file_generated + '"') else ""} \
      ~{if defined(ot_put_prefix) then ("--otput_prefix " +  '"' + ot_put_prefix + '"') else ""} \
      ~{if defined(coordinate_file) then ("--coordinateFile " +  '"' + coordinate_file + '"') else ""} \
      ~{if defined(single_trans) then ("--single-trans " +  '"' + single_trans + '"') else ""} \
      ~{if defined(selected_trans_list) then ("--selected-trans-list " +  '"' + selected_trans_list + '"') else ""} \
      ~{if defined(ymin) then ("--ymin " +  '"' + ymin + '"') else ""} \
      ~{if defined(ymax) then ("--ymax " +  '"' + ymax + '"') else ""} \
      ~{if defined(unit) then ("--unit " +  '"' + unit + '"') else ""} \
      ~{if defined(a_xv_line) then ("--axvline " +  '"' + a_xv_line + '"') else ""} \
      ~{if defined(a_xh_line) then ("--axhline " +  '"' + a_xh_line + '"') else ""} \
      ~{if defined(slide_window) then ("--slide-window " +  '"' + slide_window + '"') else ""} \
      ~{if defined(start) then ("--start " +  '"' + start + '"') else ""} \
      ~{if defined(window) then ("--window " +  '"' + window + '"') else ""} \
      ~{if defined(step) then ("--step " +  '"' + step + '"') else ""} \
      ~{if defined(id_type) then ("--id-type " +  '"' + id_type + '"') else ""}
  >>>
  runtime {
    docker: "quay.io/biocontainers/ribominer:0.2.3.1--pyh3252c3a_0"
  }
  parameter_meta {
    ratio_file_generated: "All ratio file generated by EnrichmentAnalysis.py."
    ot_put_prefix: "Prefix of output files.[required]"
    coordinate_file: "The file should contain the coordinate of start and\\nstop codon. Generated by\\nOutputTranscriptInfo.py.[required]"
    single_trans: "A single selected transcript."
    selected_trans_list: "Selected transcripts list. The first column of this\\nfile must be transcript id or gene identifier with a\\ncolumn name."
    ymin: "The max of ylim. default=none"
    ymax: "The max of ylim. default=none"
    unit: "Unit for density calculation.[codon or nt]"
    a_xv_line: "Position to plot a vertical line in x axis.\\ndefault=none"
    a_xh_line: "Position to plot a vertical line in y axis.\\ndefault=none"
    slide_window: "Using slide window to average the density.Input a\\ntrue strings such as yes, y or 1. none=default"
    start: "The start position need to be averaged.default=5"
    window: "The length of silde window. default=7"
    step: "The step length of slide window. default=1"
    id_type: "define the id type users input. the default is\\ntranscript id, if not, will be transformed into\\ntranscript id. transcript_id=default\\n"
  }
  output {
    File out_stdout = stdout()
  }
}