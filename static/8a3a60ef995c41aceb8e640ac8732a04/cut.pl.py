from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, String, File

Cut_Pl_V0_1_0 = CommandToolBuilder(tool="cut.pl", base_command=["cut.pl"], inputs=[ToolInput(tag="in_quiet_mode_turn", input_type=Boolean(optional=True), prefix="-q", doc=InputDocumentation(doc=": Quiet mode: turn verbosity off (default verbose)")), ToolInput(tag="in_set_number_row", input_type=Int(optional=True), prefix="-h", doc=InputDocumentation(doc=": Set the number of row headers to NUM (default 0).")), ToolInput(tag="in_change_input_output", input_type=String(optional=True), prefix="-d", doc=InputDocumentation(doc=": Change the input and output delimiter to DELIM (default <tab>).")), ToolInput(tag="in_di", input_type=String(optional=True), prefix="-di", doc=InputDocumentation(doc=": Change the input delimiter to DELIM (default <tab>).")), ToolInput(tag="in_do", input_type=String(optional=True), prefix="-do", doc=InputDocumentation(doc=": Change the output delimiter to DELIM (default <tab>).")), ToolInput(tag="in__suppress_blanks", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc=":        Suppress blanks")), ToolInput(tag="in_invert_use_complement", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc=":        Invert. Use the complement of the fields specified in -f.")), ToolInput(tag="in_tight_tell_script", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc=":        Tight.  Tell the script to expect different number of columns in\neach row so that it needs to recompute the column boundaries for\neach row.  Note this option slows the script down somewhat.")), ToolInput(tag="in_specify_column_ranges", input_type=Int(optional=True), prefix="-f", doc=InputDocumentation(doc=": specify column ranges to include.  RANGES are comma-\nseperated lists of single columns or a range of columns\nfor example:\n5-6,2,1-3\nwould select columns 1 through 6 except column 4.  Note\nthat 2 is redundantly specified by no error results.")), ToolInput(tag="in_specify_columns_ranges", input_type=String(optional=True), prefix="-n", doc=InputDocumentation(doc=":  specify columns by names (instead of by numbers with -f). Assumes\nthe first line is a header, and translates column names in <str>\ninto their respective column numbers in the header. Supports\nmultiple ranges. Column names are assumed to be unique and not to\ncontain any commas.")), ToolInput(tag="in_file", input_type=File(optional=True), prefix="-file", doc=InputDocumentation(doc=": get column names (as in -n) from specified file. each column name\nshould appear on a separate line.")), ToolInput(tag="in_zerobased_column_numbers", input_type=Boolean(optional=True), prefix="-0", doc=InputDocumentation(doc=":        zero-based column numbers.")), ToolInput(tag="in_preserve_empty_values", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc=":        preserve empty values.")), ToolInput(tag="in_sk", input_type=Boolean(optional=True), prefix="-sk", doc=InputDocumentation(doc=":       number of header columns (default 0)")), ToolInput(tag="in_input_dot", input_type=String(), position=0, doc=InputDocumentation(doc="OPTIONS are:"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Cut_Pl_V0_1_0().translate("wdl", allow_empty_container=True)

