from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File

Testval_V0_1_0 = CommandToolBuilder(tool="testval", base_command=["testval"], inputs=[ToolInput(tag="in_filename_input_optionaldefault", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="Filename for asn.1 input [File In]  Optional\ndefault = stdin")), ToolInput(tag="in_input_seqentry_optionaldefault", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc="Input is a Seq-entry [T/F]  Optional\ndefault = F")), ToolInput(tag="in_input_seqsubmit_optionaldefault", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="Input is a Seq-submit [T/F]  Optional\ndefault = F")), ToolInput(tag="in_input_asnfile_binary", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc="Input asnfile in binary mode [T/F]  Optional\ndefault = F")), ToolInput(tag="in_filename_error_messages", input_type=File(optional=True), prefix="-x", doc=InputDocumentation(doc="Filename for error messages [File Out]  Optional\ndefault = stderr")), ToolInput(tag="in_filename_asn_optional", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="Filename for asn.1 output [File Out]  Optional")), ToolInput(tag="in_output_asnfile_binary", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="Output asnfile in binary mode [T/F]  Optional\ndefault = F")), ToolInput(tag="in_severity_error_count", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="Severity of error for count in return code [Integer]\ndefault = 4\nrange from 0 to 4")), ToolInput(tag="in_continue_asn_error", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="Continue on ASN.1 error? [T/F]  Optional\ndefault = F")), ToolInput(tag="in_patch_invalid_sequence", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="Patch invalid sequence residues? [T/F]  Optional\ndefault = F")), ToolInput(tag="in_lowest_severity_show", input_type=Boolean(optional=True), prefix="-q", doc=InputDocumentation(doc="Lowest severity of error to show [Integer]\ndefault = 3\nrange from 0 to 4")), ToolInput(tag="in_asn_spec_level", input_type=Boolean(optional=True), prefix="-l", doc=InputDocumentation(doc="ASN.1 spec level to filter [Integer]\ndefault = 0\nrange from 0 to 3")), ToolInput(tag="in_use_seqmgr_indexing", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc="Use SeqMgr indexing? [T/F]  Optional\ndefault = T")), ToolInput(tag="in_validate_alignments_optionaldefault", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="Validate alignments? [T/F]  Optional\ndefault = F")), ToolInput(tag="in_require_isojta_optionaldefault", input_type=Boolean(optional=True), prefix="-j", doc=InputDocumentation(doc="Require ISO-JTA? [T/F]  Optional\ndefault = F\n"))], outputs=[ToolOutput(tag="out_filename_error_messages", output_type=File(optional=True), selector=InputSelector(input_to_select="in_filename_error_messages", type_hint=File()), doc=OutputDocumentation(doc="Filename for error messages [File Out]  Optional\ndefault = stderr")), ToolOutput(tag="out_filename_asn_optional", output_type=File(optional=True), selector=InputSelector(input_to_select="in_filename_asn_optional", type_hint=File()), doc=OutputDocumentation(doc="Filename for asn.1 output [File Out]  Optional"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Testval_V0_1_0().translate("wdl", allow_empty_container=True)

