from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Directory, File, String, Int, Float

Virsorter_Run_V0_1_0 = CommandToolBuilder(tool="virsorter_run", base_command=["virsorter", "run"], inputs=[ToolInput(tag="in_hallmark_required_on_short", input_type=Boolean(optional=True), prefix="--hallmark-required-on-short", doc=InputDocumentation(doc="). Most snakemake arguments can be")), ToolInput(tag="in_working_dir", input_type=Directory(optional=True), prefix="--working-dir", doc=InputDocumentation(doc="output directory")), ToolInput(tag="in_db_dir", input_type=File(optional=True), prefix="--db-dir", doc=InputDocumentation(doc="database directory, default to the --db-dir\nset during installation")), ToolInput(tag="in_seq_file", input_type=File(optional=True), prefix="--seqfile", doc=InputDocumentation(doc="sequence file in fa or fq format (could be\ncompressed by gzip or bz2)  [required]")), ToolInput(tag="in_label", input_type=String(optional=True), prefix="--label", doc=InputDocumentation(doc="add label as prefix to output files; this is\nuseful when re-running classify with different\nfiltering options")), ToolInput(tag="in_include_groups", input_type=String(optional=True), prefix="--include-groups", doc=InputDocumentation(doc="classifiers of viral groups to included (comma\nseparated and no space in between); available\noptions are:\ndsDNAphage,NCLDV,RNA,ssDNA,lavidaviridae\n[default:\ndsDNAphage,NCLDV,RNA,ssDNA,lavidaviridae]")), ToolInput(tag="in_jobs", input_type=Int(optional=True), prefix="--jobs", doc=InputDocumentation(doc="max # of jobs allowed in parallel.  [default:\n8]")), ToolInput(tag="in_min_score", input_type=Float(optional=True), prefix="--min-score", doc=InputDocumentation(doc="minimal score to be identified as viral\n[default: 0.5]")), ToolInput(tag="in_min_length", input_type=Int(optional=True), prefix="--min-length", doc=InputDocumentation(doc="minimal seq length required; all seqs shorter\nthan this will be removed  [default: 0]")), ToolInput(tag="in_keep_original_seq", input_type=Boolean(optional=True), prefix="--keep-original-seq", doc=InputDocumentation(doc="keep the original sequences instead of\ntrimmed; By default, the untranslated regions\nat both ends of identified viral seqs are\ntrimmed; circular sequences are modified to\nremove overlap between both ends and adjusted\nfor the gene splitted into two ends;\n[default: False]")), ToolInput(tag="in_prep_for_dram_v", input_type=Boolean(optional=True), prefix="--prep-for-dramv", doc=InputDocumentation(doc="turn on generating viral seqfile and viral-\naffi-contigs.tab for DRAMv  [default: False]")), ToolInput(tag="in_provirus_off", input_type=Boolean(optional=True), prefix="--provirus-off", doc=InputDocumentation(doc="turn off extracting provirus after classifying\nfull contigs; Togetehr with lower --max-orf-\nper-seq, can speed up a run significantly\n[default: False]")), ToolInput(tag="in_max_orf_per_seq", input_type=Int(optional=True), prefix="--max-orf-per-seq", doc=InputDocumentation(doc="max # of orf used for computing taxonomic\nfeature; this option can only be used in\n--provirus-off mode; if # of orf in a seq\nexceeds the max limit, it is sub-sampled to\nthis # to reduce computation  [default: -1]")), ToolInput(tag="in_tmpdir", input_type=Directory(optional=True), prefix="--tmpdir", doc=InputDocumentation(doc="directory name for intermediate files")), ToolInput(tag="in_rm_tmpdir", input_type=Boolean(optional=True), prefix="--rm-tmpdir", doc=InputDocumentation(doc="remove intermediate file directory (--tmpdir);\nMore than 100 intermediate files are created\nfor each run, so this is recommended when 100s\nof samples are processed to avoid exceeding\nfile # quota for user  [default: False]")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="shows detailed rules output  [default: False]")), ToolInput(tag="in_profile", input_type=String(optional=True), prefix="--profile", doc=InputDocumentation(doc="snakemake profile e.g. for cluster execution.")), ToolInput(tag="in_dry_run", input_type=Boolean(optional=True), prefix="--dryrun", doc=InputDocumentation(doc="Check rules to run and files to produce\n[default: False]")), ToolInput(tag="in_use_cond_a_off", input_type=Boolean(optional=True), prefix="--use-conda-off", doc=InputDocumentation(doc="Stop using the conda envs (vs2.yaml) that come\nwith this package and use what are installed\nin current system; Only useful when you want\nto install dependencies on your own with your\nown prefer versions  [default: False]")), ToolInput(tag="in_all_vertical_line_classify", input_type=String(optional=True), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_snake_make_args", input_type=String(optional=True), position=1, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_working_dir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_working_dir", type_hint=File()), doc=OutputDocumentation(doc="output directory"))], container="quay.io/biocontainers/virsorter:2.1--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Virsorter_Run_V0_1_0().translate("wdl")

