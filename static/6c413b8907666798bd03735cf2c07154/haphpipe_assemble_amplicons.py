from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Directory, String, Int, Boolean

Haphpipe_Assemble_Amplicons_V0_1_0 = CommandToolBuilder(tool="haphpipe_assemble_amplicons", base_command=["haphpipe", "assemble_amplicons"], inputs=[ToolInput(tag="in_contigs_fa", input_type=File(optional=True), prefix="--contigs_fa", doc=InputDocumentation(doc="Fasta file with assembled contigs")), ToolInput(tag="in_ref_fa", input_type=File(optional=True), prefix="--ref_fa", doc=InputDocumentation(doc="Fasta file with reference genome to scaffold against")), ToolInput(tag="in_ref_gtf", input_type=File(optional=True), prefix="--ref_gtf", doc=InputDocumentation(doc="GTF format file containing amplicon regions")), ToolInput(tag="in_outdir", input_type=Directory(optional=True), prefix="--outdir", doc=InputDocumentation(doc="Output directory (default: .)")), ToolInput(tag="in_sample_id", input_type=String(optional=True), prefix="--sample_id", doc=InputDocumentation(doc="Sample ID. (default: sampleXX)")), ToolInput(tag="in_padding", input_type=Int(optional=True), prefix="--padding", doc=InputDocumentation(doc="Bases to include outside reference annotation.\n(default: 50)")), ToolInput(tag="in_min_contig_len", input_type=Int(optional=True), prefix="--min_contig_len", doc=InputDocumentation(doc="Minimum contig length for tiling path (default: 200)")), ToolInput(tag="in_keep_tmp", input_type=Boolean(optional=True), prefix="--keep_tmp", doc=InputDocumentation(doc="Additional options (default: False)")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="Do not write output to console (silence stdout and\nstderr) (default: False)")), ToolInput(tag="in_log_file", input_type=File(optional=True), prefix="--logfile", doc=InputDocumentation(doc="Append console output to this file")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="Print commands but do not run (default: False)"))], outputs=[ToolOutput(tag="out_outdir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_outdir", type_hint=File()), doc=OutputDocumentation(doc="Output directory (default: .)")), ToolOutput(tag="out_log_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_log_file", type_hint=File()), doc=OutputDocumentation(doc="Append console output to this file"))], container="quay.io/biocontainers/haphpipe:1.0.3--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Haphpipe_Assemble_Amplicons_V0_1_0().translate("wdl")

