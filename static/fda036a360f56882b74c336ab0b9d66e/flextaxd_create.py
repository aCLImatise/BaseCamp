from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Directory, Boolean, File

Flextaxd_Create_V0_1_0 = CommandToolBuilder(tool="flextaxd_create", base_command=["flextaxd-create"], inputs=[ToolInput(tag="in_outdir", input_type=Directory(optional=True), prefix="--outdir", doc=InputDocumentation(doc="Output directory (same directory as\ncustom_taxonomy_databases dump)")), ToolInput(tag="in_database", input_type=Boolean(optional=True), prefix="--database", doc=InputDocumentation(doc="Custom taxonomy sqlite3 database file")), ToolInput(tag="in_processes", input_type=Boolean(optional=True), prefix="--processes", doc=InputDocumentation(doc="Use multiple cores for downloading genomes and kraken\nif -kp is not set")), ToolInput(tag="in_download", input_type=Boolean(optional=True), prefix="--download", doc=InputDocumentation(doc="Download additional sequences")), ToolInput(tag="in_representative", input_type=Boolean(optional=True), prefix="--representative", doc=InputDocumentation(doc="Download GTDB representative genomes")), ToolInput(tag="in_rep_path", input_type=File(optional=True), prefix="--rep_path", doc=InputDocumentation(doc="Specify GTDB representative version URL full path")), ToolInput(tag="in_force_download", input_type=Boolean(optional=True), prefix="--force_download", doc=InputDocumentation(doc="Download sequences from genbank if not in refseq\n(WARNING: might include genome withdrawals)")), ToolInput(tag="in_genomes_path", input_type=Boolean(optional=True), prefix="--genomes_path", doc=InputDocumentation(doc="path to genomes")), ToolInput(tag="in_create_db", input_type=Boolean(optional=True), prefix="--create_db", doc=InputDocumentation(doc="Start create db after loading databases")), ToolInput(tag="in_db_program", input_type=Boolean(optional=True), prefix="--dbprogram", doc=InputDocumentation(doc="Select one of the supported programs [kraken2,\nkrakenuniq, ganon]")), ToolInput(tag="in_db_name", input_type=Boolean(optional=True), prefix="--db_name", doc=InputDocumentation(doc="database directory (fullpath)")), ToolInput(tag="in_params", input_type=Boolean(optional=True), prefix="--params", doc=InputDocumentation(doc="Add extra params to create command (supports kraken*)")), ToolInput(tag="in_test", input_type=Boolean(optional=True), prefix="--test", doc=InputDocumentation(doc="test database structure, only use 100 seqs")), ToolInput(tag="in_keep", input_type=Boolean(optional=True), prefix="--keep", doc=InputDocumentation(doc="Keep temporary files")), ToolInput(tag="in_skip", input_type=Boolean(optional=True), prefix="--skip", doc=InputDocumentation(doc="Do not include genomes within this taxonomy (child\ntree) in the database (works for kraken)")), ToolInput(tag="in_build_processes", input_type=Boolean(optional=True), prefix="--build_processes", doc=InputDocumentation(doc="Use a different number of cores for kraken\nclassification")), ToolInput(tag="in_logs", input_type=Boolean(optional=True), prefix="--logs", doc=InputDocumentation(doc="Specify log directory")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Verbose output")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="Debug output")), ToolInput(tag="in_supress", input_type=Boolean(optional=True), prefix="--supress", doc=InputDocumentation(doc="Supress warnings"))], outputs=[ToolOutput(tag="out_outdir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_outdir", type_hint=File()), doc=OutputDocumentation(doc="Output directory (same directory as\ncustom_taxonomy_databases dump)"))], container="quay.io/biocontainers/flextaxd:0.3.5--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Flextaxd_Create_V0_1_0().translate("wdl")

