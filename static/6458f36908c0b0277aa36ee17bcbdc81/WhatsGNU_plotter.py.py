from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Boolean, Int

Whatsgnu_Plotter_Py_V0_1_0 = CommandToolBuilder(tool="WhatsGNU_plotter.py", base_command=["WhatsGNU_plotter.py"], inputs=[ToolInput(tag="in_heat_map", input_type=String(optional=True), prefix="--heatmap", doc=InputDocumentation(doc="heatmap of GNU scores for orthologous genes in\nmultiple isolates")), ToolInput(tag="in_list_genes", input_type=File(optional=True), prefix="--list_genes", doc=InputDocumentation(doc="a txt file of ortholog group names from one of the\nWhatsGNU reports for heatmap")), ToolInput(tag="in_fast_a", input_type=File(optional=True), prefix="--fasta", doc=InputDocumentation(doc="a FASTA file of sequences for the proteins of interest\nfor heatmap or metadata barplot")), ToolInput(tag="in_output_blastp", input_type=Boolean(optional=True), prefix="--output_blastp", doc=InputDocumentation(doc="get the output report of blastp run, it has to be used\nwith -q")), ToolInput(tag="in_strains_order", input_type=String(optional=True), prefix="--strains_order", doc=InputDocumentation(doc="list of strains order for heatmap")), ToolInput(tag="in_rarity", input_type=Boolean(optional=True), prefix="--rarity", doc=InputDocumentation(doc="Annotate heatmap cells with OVRI(default: off)")), ToolInput(tag="in_rarity_color", input_type=String(optional=True), prefix="--rarity_color", doc=InputDocumentation(doc="OVRI data text color in the heatmap")), ToolInput(tag="in_fs", input_type=Int(optional=True), prefix="-fs", doc=InputDocumentation(doc="FIGURE_SIZE, --figure_size FIGURE_SIZE FIGURE_SIZE\nheatmap width and height in inches w,h, respectively")), ToolInput(tag="in_heat_map_color", input_type=String(optional=True), prefix="--heatmap_color", doc=InputDocumentation(doc="heatmap color")), ToolInput(tag="in_masked_color", input_type=String(optional=True), prefix="--masked_color", doc=InputDocumentation(doc="missing data color in heatmap")), ToolInput(tag="in_font_size", input_type=Int(optional=True), prefix="--font_size", doc=InputDocumentation(doc="heatmap font size")), ToolInput(tag="in_title", input_type=String(optional=True), prefix="--title", doc=InputDocumentation(doc="title for the heatmap [Default:WhatsGNU heatmap]")), ToolInput(tag="in_metadata_barplot", input_type=String(optional=True), prefix="--metadata_barplot", doc=InputDocumentation(doc="Metadata percentage distribution for proteins in a\nFASTA file")), ToolInput(tag="in_all_metadata", input_type=Boolean(optional=True), prefix="--all_metadata", doc=InputDocumentation(doc="all metadata")), ToolInput(tag="in_select_metadata", input_type=String(optional=True), prefix="--select_metadata", doc=InputDocumentation(doc="select some metadata")), ToolInput(tag="in_histogram", input_type=Boolean(optional=True), prefix="--histogram", doc=InputDocumentation(doc="histogram of GNU scores")), ToolInput(tag="in_histogram_color", input_type=String(optional=True), prefix="--histogram_color", doc=InputDocumentation(doc="histogram color")), ToolInput(tag="in_histogram_bins", input_type=Int(optional=True), prefix="--histogram_bins", doc=InputDocumentation(doc="number of bins for the histograms [10]")), ToolInput(tag="in__novelconserved_novelconserved", input_type=Int(optional=True), prefix="-p", doc=InputDocumentation(doc="NOVEL_CONSERVED, --novel_conserved NOVEL_CONSERVED NOVEL_CONSERVED\nupper and lower GNU score limits for novel and\nconserved proteins novel_GNU_upper_limit,\nconserved_GNU_lower_limit, respectively [Default 10,\n100]")), ToolInput(tag="in_strains_tag_volcano", input_type=File(optional=True), prefix="--strains_tag_volcano", doc=InputDocumentation(doc="a csv file of the strains of the two groups to be\ncompared with (case/control) tag")), ToolInput(tag="in_cut_off_volcano", input_type=Int(optional=True), prefix="--cutoff_volcano", doc=InputDocumentation(doc="a percentage of isolates a protein must be in\n[Default: 100]")), ToolInput(tag="in_cc", input_type=String(optional=True), prefix="-cc", doc=InputDocumentation(doc="CASE_CONTROL_NAME, --case_control_name CASE_CONTROL_NAME CASE_CONTROL_NAME\ncase and control groups' names [Default: case control]\n")), ToolInput(tag="in_prefix_name", input_type=String(), position=0, doc=InputDocumentation(doc="prefix name for the the output folder and\nheatmap/volcano output files")), ToolInput(tag="in_directory_path", input_type=String(), position=1, doc=InputDocumentation(doc="path to directory of WhatsGNU reports"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Whatsgnu_Plotter_Py_V0_1_0().translate("wdl", allow_empty_container=True)

