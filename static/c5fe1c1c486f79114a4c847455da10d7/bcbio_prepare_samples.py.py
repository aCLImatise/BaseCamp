from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Boolean, Int

Bcbio_Prepare_Samples_Py_V0_1_0 = CommandToolBuilder(tool="bcbio_prepare_samples.py", base_command=["bcbio_prepare_samples.py"], inputs=[ToolInput(tag="in_csv", input_type=File(optional=True), prefix="--csv", doc=InputDocumentation(doc="csv file with metadata")), ToolInput(tag="in_out", input_type=String(optional=True), prefix="--out", doc=InputDocumentation(doc="output dir")), ToolInput(tag="in_force_single", input_type=Boolean(optional=True), prefix="--force-single", doc=InputDocumentation(doc="Treat all files as single reads")), ToolInput(tag="in_separators", input_type=Boolean(optional=True), prefix="--separators", doc=InputDocumentation(doc="[SEPARATORS [SEPARATORS ...]]\nSpace separated list of separators that indicates\npaired files.")), ToolInput(tag="in_remove_source", input_type=Boolean(optional=True), prefix="--remove-source", doc=InputDocumentation(doc="Remove original files.")), ToolInput(tag="in_num_cores", input_type=Int(optional=True), prefix="--numcores", doc=InputDocumentation(doc="Number of concurrent jobs to process.")), ToolInput(tag="in_cores_per_job", input_type=Int(optional=True), prefix="--cores-per-job", doc=InputDocumentation(doc="Number of cores to use.")), ToolInput(tag="in_memory_per_job", input_type=String(optional=True), prefix="--memory-per-job", doc=InputDocumentation(doc="Memory in GB to reserve per job.")), ToolInput(tag="in_timeout", input_type=String(optional=True), prefix="--timeout", doc=InputDocumentation(doc="Time to wait before giving up starting.")), ToolInput(tag="in_retries", input_type=Int(optional=True), prefix="--retries", doc=InputDocumentation(doc="Number of retries of failed tasks during distributed\nprocessing. Default 0 (no retries)")), ToolInput(tag="in_scheduler", input_type=String(optional=True), prefix="--scheduler", doc=InputDocumentation(doc="Type of scheduler to use.")), ToolInput(tag="in_resources", input_type=String(optional=True), prefix="--resources", doc=InputDocumentation(doc="Extra scheduler resource flags.")), ToolInput(tag="in_queue", input_type=String(optional=True), prefix="--queue", doc=InputDocumentation(doc="Queue to submit jobs to.")), ToolInput(tag="in_tag", input_type=String(optional=True), prefix="--tag", doc=InputDocumentation(doc="Tag name to label jobs on the cluster")), ToolInput(tag="in_parallel_type", input_type=String(optional=True), prefix="--paralleltype", doc=InputDocumentation(doc="Run with iptyhon\n"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bcbio_Prepare_Samples_Py_V0_1_0().translate("wdl", allow_empty_container=True)

