from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, String, Boolean

Monocle3_Plotcells_V0_1_0 = CommandToolBuilder(tool="monocle3_plotCells", base_command=["monocle3", "plotCells"], inputs=[ToolInput(tag="in_input_object_format", input_type=Int(optional=True), prefix="--input-object-format", doc=InputDocumentation(doc="Format of input object. [Default: cds3]")), ToolInput(tag="in_output_plot_format", input_type=String(optional=True), prefix="--output-plot-format", doc=InputDocumentation(doc="Format of output plot, choose from {png, pdf}. [Default: png]")), ToolInput(tag="in_xdim", input_type=Int(optional=True), prefix="--xdim", doc=InputDocumentation(doc="The column of reducedDimS(cds) to plot on the horizontal axis. [Default: 1]")), ToolInput(tag="in_ydim", input_type=Int(optional=True), prefix="--ydim", doc=InputDocumentation(doc="The column of reducedDimS(cds) to plot on the vertical axis. [Default: 2]")), ToolInput(tag="in_reduction_method", input_type=String(optional=True), prefix="--reduction-method", doc=InputDocumentation(doc="The dimensionality reduction for plotting, choose from {UMAP, tSNE, PCA, LSI}. [Default: UMAP]")), ToolInput(tag="in_color_cells_by", input_type=String(optional=True), prefix="--color-cells-by", doc=InputDocumentation(doc="The cell attribute (e.g. the column of pData(cds)) to map to each cell's color, or one of {clusters, partitions, pseudotime}. [Default: pseudotime]")), ToolInput(tag="in_genes", input_type=String(optional=True), prefix="--genes", doc=InputDocumentation(doc="A comma-separated list of gene IDs/short names to plot, one per panel.")), ToolInput(tag="in_norm_method", input_type=String(optional=True), prefix="--norm-method", doc=InputDocumentation(doc="Determines how to transform expression values for plotting, choose from {log, size_only}. [Default: log]")), ToolInput(tag="in_cell_size", input_type=Int(optional=True), prefix="--cell-size", doc=InputDocumentation(doc="The size of the point for each cell. [Default: 1.5]")), ToolInput(tag="in_alpha", input_type=String(optional=True), prefix="--alpha", doc=InputDocumentation(doc="The alpha aesthetics for the original cell points, useful to highlight the learned principal graph.")), ToolInput(tag="in_label_cell_groups", input_type=Boolean(optional=True), prefix="--label-cell-groups", doc=InputDocumentation(doc="If set, display the cell group names directly on the plot. Otherwise include a color legend on the side of the plot.")), ToolInput(tag="in_no_trajectory_graph", input_type=Boolean(optional=True), prefix="--no-trajectory-graph", doc=InputDocumentation(doc="When this option is set, skip displaying the trajectory graph inferred by learn_graph().")), ToolInput(tag="in_label_groups_by_cluster", input_type=Boolean(optional=True), prefix="--label-groups-by-cluster", doc=InputDocumentation(doc="If set, and setting --color-cells-by to something other than cluster, label the cells of each cluster independently. Can result in duplicate labels being present in the manifold.")), ToolInput(tag="in_label_leaves", input_type=Boolean(optional=True), prefix="--label-leaves", doc=InputDocumentation(doc="If set, label the leaves of the principal graph.")), ToolInput(tag="in_label_roots", input_type=Boolean(optional=True), prefix="--label-roots", doc=InputDocumentation(doc="If set, label the roots of the principal graph.")), ToolInput(tag="in_label_branch_points", input_type=Boolean(optional=True), prefix="--label-branch-points", doc=InputDocumentation(doc="If set, label the branch points of the principal graph.")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Emit verbose output.")), ToolInput(tag="in_input_object", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_output_plot", input_type=String(), position=1, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Monocle3_Plotcells_V0_1_0().translate("wdl", allow_empty_container=True)

