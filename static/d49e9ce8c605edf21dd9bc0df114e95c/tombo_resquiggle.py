from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Array, String, Float, Int, File

Tombo_Resquiggle_V0_1_0 = CommandToolBuilder(tool="tombo_resquiggle", base_command=["tombo", "resquiggle"], inputs=[ToolInput(tag="in_dna", input_type=Boolean(optional=True), prefix="--dna", doc=InputDocumentation(doc="Explicitly select canonical DNA model. Default:\nAutomatically determine from FAST5s")), ToolInput(tag="in_rna", input_type=Boolean(optional=True), prefix="--rna", doc=InputDocumentation(doc="Explicitly select canonical RNA model. Default:\nAutomatically determine from FAST5s")), ToolInput(tag="in_obs_per_base_filter", input_type=Array(t=String(), optional=True), prefix="--obs-per-base-filter", doc=InputDocumentation(doc="Filter reads based on observations per base percentile\nthresholds. Format thresholds as 'percentile:thresh\n[pctl2:thresh2 ...]'. For example to filter reads with\n99th pctl > 200 obs/base or max > 5k obs/base use\n'99:200 100:5000'.")), ToolInput(tag="in_q_score", input_type=Float(optional=True), prefix="--q-score", doc=InputDocumentation(doc="Q-score threshold for filtering low quality reads.\nDefault: 0.000000")), ToolInput(tag="in_signal_matching_score", input_type=Float(optional=True), prefix="--signal-matching-score", doc=InputDocumentation(doc="Observed to expected signal matching score (higher\nscore indicates poor matching). Sample type defaults:\nRNA : 2 || DNA : 1.1")), ToolInput(tag="in_processes", input_type=Int(optional=True), prefix="--processes", doc=InputDocumentation(doc="Number of processes. Default: 1")), ToolInput(tag="in_corrected_group", input_type=Int(optional=True), prefix="--corrected-group", doc=InputDocumentation(doc="FAST5 group created by resquiggle command. Default:\nRawGenomeCorrected_000")), ToolInput(tag="in_base_call_group", input_type=Int(optional=True), prefix="--basecall-group", doc=InputDocumentation(doc="FAST5 group obtain original basecalls (under Analyses\ngroup). Default: Basecall_1D_000")), ToolInput(tag="in_base_call_subgroups", input_type=Array(t=String(), optional=True), prefix="--basecall-subgroups", doc=InputDocumentation(doc="FAST5 subgroup(s) (under /Analyses/[--basecall-\ngroup]/) containing basecalls and created within\n[--corrected-group] containing re-squiggle results.\nDefault: ['BaseCalled_template']")), ToolInput(tag="in_overwrite", input_type=Boolean(optional=True), prefix="--overwrite", doc=InputDocumentation(doc="Overwrite previous corrected group in FAST5 files.\nNote: only effects --corrected-group or --new-\ncorrected-group.")), ToolInput(tag="in_failed_reads_filename", input_type=File(optional=True), prefix="--failed-reads-filename", doc=InputDocumentation(doc="Output failed read filenames with assoicated error.\nDefault: Do not store failed reads.")), ToolInput(tag="in_num_most_common_errors", input_type=Int(optional=True), prefix="--num-most-common-errors", doc=InputDocumentation(doc="Dynamically show this many most common errors so far\nthrough run. Default: 0; Just show progress")), ToolInput(tag="in_print_advanced_arguments", input_type=Boolean(optional=True), prefix="--print-advanced-arguments", doc=InputDocumentation(doc="Print advanced re-squiggle arguments and exit.")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="Don't print status information.")), ToolInput(tag="in_fast_fives_basedir", input_type=Int(), position=0, doc=InputDocumentation(doc="Directory containing fast5 files. All files ending in\n'fast5' found recursively within this base directory\nwill be processed.")), ToolInput(tag="in_reference", input_type=String(), position=1, doc=InputDocumentation(doc="Reference genome/transcriptome FASTA file or minimap2\nindex (with 'map-ont' preset) for mapping."))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Tombo_Resquiggle_V0_1_0().translate("wdl", allow_empty_container=True)

