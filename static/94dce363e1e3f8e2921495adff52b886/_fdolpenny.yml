!Command
positional: []
named:
- !Flag
  description: properties Weights file
  synonyms:
  - -weights
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: properties Ancestral states file
  synonyms:
  - -ancfile
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: toggle     [N] Use threshold parsimony
  synonyms:
  - -dothreshold
  args: !EmptyFlagArg {}
  optional: true
command:
- _fdolpenny
parent:
subcommands: []
help_flag: !Flag
  description: boolean    Report command line options and exit. More information on
    associated and general qualifiers can be found with -help -verbose
  synonyms:
  - -help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "Penny algorithm Dollo or polymorphism\nVersion: EMBOSS:6.5.7.0 PHYLIPNEW:3.69.650\n\
  \n   Standard (Mandatory) qualifiers:\n  [-infile]            discretestates File\
  \ containing one or more data sets\n  [-outfile]           outfile    [*.fdolpenny]\
  \ Phylip dolpenny program output\n                                  file\n\n   Additional\
  \ (Optional) qualifiers (* if not always prompted):\n   -weights            properties\
  \ Weights file\n   -ancfile            properties Ancestral states file\n   -dothreshold\
  \        toggle     [N] Use threshold parsimony\n*  -threshold          float  \
  \    [1] Threshold value (Number 0.000 or more)\n   -howmany            integer\
  \    [1000] How many groups of trees (Any integer\n                            \
  \      value)\n   -howoften           integer    [100] How often to report, in trees\
  \ (Any\n                                  integer value)\n   -[no]simple       \
  \  boolean    [Y] Branch and bound is simple\n   -method             menu      \
  \ [d] Parsimony method (Values: d (Dollo); p\n                                 \
  \ (Polymorphism))\n   -[no]trout          toggle     [Y] Write out trees to tree\
  \ file\n*  -outtreefile        outfile    [*.fdolpenny] Phylip tree output file\n\
  \                                  (optional)\n   -printdata          boolean  \
  \  [N] Print data at start of run\n   -[no]progress       boolean    [Y] Print indications\
  \ of progress of run\n   -[no]treeprint      boolean    [Y] Print out tree\n   -ancseq\
  \             boolean    [N] Print states at all nodes of tree\n   -stepbox    \
  \        boolean    [N] Print out steps in each character\n\n   Advanced (Unprompted)\
  \ qualifiers: (none)\n   General qualifiers:\n   -help               boolean   \
  \ Report command line options and exit. More\n                                 \
  \ information on associated and general\n                                  qualifiers\
  \ can be found with -help -verbose\n\n"
generated_using:
- --help
