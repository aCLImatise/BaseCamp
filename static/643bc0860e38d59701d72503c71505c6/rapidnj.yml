!Command
command:
- rapidnj
positional:
- !Positional
  optional: false
  position: 0
  name: INPUT
  description: ''
named:
- !Flag
  optional: true
  synonyms:
  - -v
  - --verbose
  description: turn on verbose output.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -i
  - --input-format
  description: "Specifies the type of input. pd = distance\nmatrix in phylip format,\
    \ sth = multiple alignment in (single line) stockholm format.\nfa = multiple alignment\
    \ in (single line) FASTA format."
  args: !SimpleFlagArg
    name: ARG
- !Flag
  optional: true
  synonyms:
  - -o
  - --output-format
  description: "Specifies the type of output. t = phylogenetic tree in newick format\n\
    (default), m = distance matrix."
  args: !SimpleFlagArg
    name: ARG
- !Flag
  optional: true
  synonyms:
  - -a
  - --evolution-model
  description: "Specifies which sequence evolution method to use when computing\n\
    distance estimates from multiple alignments. jc = juke cantor,\nkim = Kimura's\
    \ distance (default)."
  args: !SimpleFlagArg
    name: ARG
- !Flag
  optional: true
  synonyms:
  - -m
  - --memory-size
  description: "The maximum amount of memory which rapidNJ is allowed to use (in MB).\n\
    Default is 90% of all available memory."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -k
  - --rapidnj-mem
  description: "Force RapidNJ to use a memory efficient version of rapidNJ. The 'arg'\n\
    specifies the percentage of a sorted distance matrix which should be\nstored in\
    \ memory (arg=10 means 10%)."
  args: !SimpleFlagArg
    name: ARG
- !Flag
  optional: true
  synonyms:
  - -d
  - --rapidnj-disk
  description: "Force RapidNJ to use HDD caching where 'arg' is the directory used\
    \ to\nstore cached files."
  args: !SimpleFlagArg
    name: ARG
- !Flag
  optional: true
  synonyms:
  - -c
  - --cores
  description: "Number of cores to use for computating distance matrices from multiple\n\
    alignments. All available cores are used by default."
  args: !SimpleFlagArg
    name: ARG
- !Flag
  optional: true
  synonyms:
  - -b
  - --bootstrap
  description: "Compute bootstrap values using ARG samples. The output tree will be\n\
    annotated with the bootstrap values."
  args: !SimpleFlagArg
    name: ARG
- !Flag
  optional: true
  synonyms:
  - -t
  - --alignment-type
  description: "Force the input alignment to be treated as: p = protein alignment,\n\
    d = DNA alignment."
  args: !SimpleFlagArg
    name: ARG
- !Flag
  optional: true
  synonyms:
  - -n
  - --no-negative-length
  description: Adjust for negative branch lengths.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -x
  - --output-file
  description: Output the result to this file instead of stdout.
  args: !SimpleFlagArg
    name: ARG
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: display this help message and exit.
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "Rapid neighbour-joining. An implementation of the canonical neighbour-joining\
  \ method which utilize a fast search heuristic to reduce the running time. RapidNJ\
  \ can be used to reconstruct large trees using a very small amount of memory by\
  \ utilizing the HDD as storage.\n\nUSAGE: rapidnj INPUT [OPTIONS]\nThe INPUT can\
  \ be a distance matrix in phylip (.phylip) format or a multiple alignment in stockholm\
  \ (.sth) or phylip format (.phylip).\nOPTIONS:\n  -h, --help                display\
  \ this help message and exit.\n  -v, --verbose             turn on verbose output.\n\
  \  -i, --input-format ARG    Specifies the type of input. pd = distance\n      \
  \                      matrix in phylip format, sth = multiple alignment in (single\
  \ line) stockholm format.\n                            fa = multiple alignment in\
  \ (single line) FASTA format.\n  -o, --output-format ARG   Specifies the type of\
  \ output. t = phylogenetic tree in newick format\n                            (default),\
  \ m = distance matrix.\n  -a, --evolution-model ARG Specifies which sequence evolution\
  \ method to use when computing\n                            distance estimates from\
  \ multiple alignments. jc = juke cantor,\n                            kim = Kimura's\
  \ distance (default).\n  -m, --memory-size         The maximum amount of memory\
  \ which rapidNJ is allowed to use (in MB).\n                            Default\
  \ is 90% of all available memory.\n  -k, --rapidnj-mem ARG     Force RapidNJ to\
  \ use a memory efficient version of rapidNJ. The 'arg'\n                       \
  \     specifies the percentage of a sorted distance matrix which should be\n   \
  \                         stored in memory (arg=10 means 10%).\n  -d, --rapidnj-disk\
  \ ARG    Force RapidNJ to use HDD caching where 'arg' is the directory used to\n\
  \                            store cached files.\n  -c, --cores ARG           Number\
  \ of cores to use for computating distance matrices from multiple\n            \
  \                alignments. All available cores are used by default.\n  -b  --bootstrap\
  \ ARG       Compute bootstrap values using ARG samples. The output tree will be\n\
  \                            annotated with the bootstrap values.\n  -t, --alignment-type\
  \ ARG  Force the input alignment to be treated as: p = protein alignment, \n   \
  \                         d = DNA alignment.\n  -n  --no-negative-length  Adjust\
  \ for negative branch lengths.\n  -x  --output-file ARG     Output the result to\
  \ this file instead of stdout.\n"
generated_using:
- --help
docker_image:
