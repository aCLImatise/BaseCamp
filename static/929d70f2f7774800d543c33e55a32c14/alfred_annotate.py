from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String

Alfred_Annotate_V0_1_0 = CommandToolBuilder(tool="alfred_annotate", base_command=["alfred", "annotate"], inputs=[ToolInput(tag="in_arg_max_distance", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc="[ --distance ] arg (=0)            max. distance (0: overlapping features\nonly)")), ToolInput(tag="in_arg_genemotiflevel_output", input_type=Boolean(optional=True), prefix="-u", doc=InputDocumentation(doc="[ --outgene ] arg (='gene.bed')    gene/motif-level output")), ToolInput(tag="in_arg_annotated_peaks", input_type=Boolean(optional=True), prefix="-o", doc=InputDocumentation(doc="[ --outfile ] arg (='anno.bed')    annotated peaks output")), ToolInput(tag="in_nearest_feature_only", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="[ --nearest ]                      nearest feature only")), ToolInput(tag="in_arg_gtfgff_file", input_type=Boolean(optional=True), prefix="-g", doc=InputDocumentation(doc="[ --gtf ] arg                      gtf/gff3 file")), ToolInput(tag="in_arg_genename_gtfgff", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="[ --id ] arg (=gene_name)          gtf/gff3 attribute")), ToolInput(tag="in_arg_gene_gtfgff", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc="[ --feature ] arg (=gene)          gtf/gff3 feature")), ToolInput(tag="in_arg_bed_file", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc="[ --bed ] arg                      bed file")), ToolInput(tag="in_arg_motif_file", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="[ --motif ] arg                    motif file in jaspar or raw format")), ToolInput(tag="in_arg_reference_file", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="[ --reference ] arg                reference file")), ToolInput(tag="in_q", input_type=Boolean(optional=True), prefix="-q", doc=InputDocumentation(doc="[ --quantile ] arg (=0.949999988)  motif quantile score [0,1]")), ToolInput(tag="in_arg_gzipped_output", input_type=File(optional=True), prefix="-p", doc=InputDocumentation(doc="[ --position ] arg                 gzipped output file of motif hits")), ToolInput(tag="in_exclude_overlapping_hits", input_type=Boolean(optional=True), prefix="-x", doc=InputDocumentation(doc="[ --exclude ]                      exclude overlapping hits of the same\nmotif\n")), ToolInput(tag="in_peaks_dot_bed", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_arg_gzipped_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_arg_gzipped_output", type_hint=File()), doc=OutputDocumentation(doc="[ --position ] arg                 gzipped output file of motif hits"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Alfred_Annotate_V0_1_0().translate("wdl", allow_empty_container=True)

