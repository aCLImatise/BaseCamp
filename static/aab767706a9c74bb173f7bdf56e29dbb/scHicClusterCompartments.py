from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Int, File, Array, Boolean

Schicclustercompartments_V0_1_0 = CommandToolBuilder(tool="scHicClusterCompartments", base_command=["scHicClusterCompartments"], inputs=[ToolInput(tag="in_schic_matrix_m", input_type=String(optional=True), prefix="--matrix", doc=InputDocumentation(doc="scHi-C matrix, -m scool scHi-C matrix\nThe single cell Hi-C interaction matrices to cluster.\nNeeds to be in scool format (default: None)")), ToolInput(tag="in_number_of_clusters", input_type=Int(optional=True), prefix="--numberOfClusters", doc=InputDocumentation(doc="Number of to be computed clusters (default: 12)")), ToolInput(tag="in_out_filename", input_type=File(optional=True), prefix="--outFileName", doc=InputDocumentation(doc="File name to save the resulting clusters (default:\nclusters.txt)")), ToolInput(tag="in_cluster_method", input_type=String(optional=True), prefix="--clusterMethod", doc=InputDocumentation(doc="Algorithm to cluster the Hi-C matrices (default:\nspectral)")), ToolInput(tag="in_chromosomes", input_type=Array(t=String(), optional=True), prefix="--chromosomes", doc=InputDocumentation(doc="List of chromosomes to be included in the correlation.\n(default: None)")), ToolInput(tag="in_norm", input_type=Boolean(optional=True), prefix="--norm", doc=InputDocumentation(doc="Different obs-exp normalization as used by Homer\nsoftware. (default: False)")), ToolInput(tag="in_bin_a_rization", input_type=Boolean(optional=True), prefix="--binarization", doc=InputDocumentation(doc="Set all positive values of eigenvector to 1 and all\nnegative ones to 0. (default: False)")), ToolInput(tag="in_extra_track", input_type=File(optional=True), prefix="--extraTrack", doc=InputDocumentation(doc="Either a gene track or a histon mark coverage\nfile(preferably a broad mark) is needed to decide if\nthe values of the eigenvector need a sign flip or not.\n(default: None)")), ToolInput(tag="in_hist_on_mark_type", input_type=File(optional=True), prefix="--histonMarkType", doc=InputDocumentation(doc="set it to active or inactive. This is only necessary\nif a histon mark coverage file is given as an\nextraTrack. (default: active)")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of threads. Using the python multiprocessing\nmodule. (default: 4)")), ToolInput(tag="in_sch_i_c", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_var_11", input_type=String(), position=1, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_out_filename", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_filename", type_hint=File()), doc=OutputDocumentation(doc="File name to save the resulting clusters (default:\nclusters.txt)"))], container="quay.io/biocontainers/schicexplorer:7--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Schicclustercompartments_V0_1_0().translate("wdl")

