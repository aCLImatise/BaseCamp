from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, Boolean, Directory

Bcl_To_Fastq_V0_1_0 = CommandToolBuilder(tool="bcl_to_fastq", base_command=["bcl_to_fastq"], inputs=[ToolInput(tag="in_input_dir", input_type=File(optional=True), prefix="--input-dir", doc=InputDocumentation(doc="path to input directory; default is RUNFOLDER-\nDIR/Data/Intensities/BaseCalls")), ToolInput(tag="in_run_folder_dir", input_type=File(optional=True), prefix="--runfolder-dir", doc=InputDocumentation(doc="path to directory containing run data\n[default: /]")), ToolInput(tag="in_output_dir", input_type=File(optional=True), prefix="--output-dir", doc=InputDocumentation(doc="path to demultiplexed output; default is same\nas INPUT-DIR")), ToolInput(tag="in_sample_sheet", input_type=File(optional=True), prefix="--sample-sheet", doc=InputDocumentation(doc="file path to sample sheet; default is\nRUNFOLDER-DIR/SampleSheet.csv")), ToolInput(tag="in_loading", input_type=Int(optional=True), prefix="--loading", doc=InputDocumentation(doc="number of threads used for loading BCL data\n[default: 12]")), ToolInput(tag="in_demultiplexing", input_type=Int(optional=True), prefix="--demultiplexing", doc=InputDocumentation(doc="number of threads used for demultiplexing\n[default: 12]")), ToolInput(tag="in_processing", input_type=Int(optional=True), prefix="--processing", doc=InputDocumentation(doc="number of threads used for processing\ndemultiplexed data  [default: 24]")), ToolInput(tag="in_writing", input_type=Int(optional=True), prefix="--writing", doc=InputDocumentation(doc="number of threads used for writing FASTQ data\n[default: 12]")), ToolInput(tag="in_barcode_mismatches", input_type=Int(optional=True), prefix="--barcode-mismatches", doc=InputDocumentation(doc="number of allowed mismatches per index\n[default: 0]")), ToolInput(tag="in_keep_tmp", input_type=Boolean(optional=True), prefix="--keep-tmp", doc=InputDocumentation(doc="save Undetermined reads  [default: False]")), ToolInput(tag="in_reverse_complement", input_type=Boolean(optional=True), prefix="--reverse-complement", doc=InputDocumentation(doc="reverse complement index 2 of the sample sheet\n[default: False]")), ToolInput(tag="in_no_wait", input_type=Boolean(optional=True), prefix="--no-wait", doc=InputDocumentation(doc="process the run without checking its\ncompletion status  [default: False]")), ToolInput(tag="in_overwrite", input_type=Boolean(optional=True), prefix="--overwrite", doc=InputDocumentation(doc="overwrite existing fastq files in the output")), ToolInput(tag="in_determine", input_type=Boolean(optional=True), prefix="--determine", doc=InputDocumentation(doc="use barcodes in samplesheet as well as the\nreverse complement of index 2, then\ndemultiplex with best  [default: False]")), ToolInput(tag="in_no_cleanup", input_type=Boolean(optional=True), prefix="--no-cleanup", doc=InputDocumentation(doc="skip all cleaning up -- do not rename fastq\noutput and do not delete undetermined files\n[default: False]")), ToolInput(tag="in_directory", input_type=Directory(), position=0, doc=InputDocumentation(doc="[default: False]"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bcl_To_Fastq_V0_1_0().translate("wdl", allow_empty_container=True)

