from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, Float, File

Gangstr_V0_1_0 = CommandToolBuilder(tool="GangSTR", base_command=["GangSTR"], inputs=[ToolInput(tag="in_bam", input_type=Boolean(optional=True), prefix="--bam", doc=InputDocumentation(doc="<file.bam,[file2.bam]>    Comma separated list of input BAM files")), ToolInput(tag="in_ref", input_type=Boolean(optional=True), prefix="--ref", doc=InputDocumentation(doc="<genome.fa>       FASTA file for the reference genome")), ToolInput(tag="in_regions", input_type=Boolean(optional=True), prefix="--regions", doc=InputDocumentation(doc="<regions.bed>     BED file containing TR coordinates")), ToolInput(tag="in_out", input_type=Boolean(optional=True), prefix="--out", doc=InputDocumentation(doc="<outprefix>       Prefix to name output files")), ToolInput(tag="in_targeted", input_type=Boolean(optional=True), prefix="--targeted", doc=InputDocumentation(doc="Targeted mode")), ToolInput(tag="in_chrom", input_type=Boolean(optional=True), prefix="--chrom", doc=InputDocumentation(doc="Only genotype regions on this chromosome")), ToolInput(tag="in_bam_s_amps", input_type=Boolean(optional=True), prefix="--bam-samps", doc=InputDocumentation(doc="<string>          Comma separated list of sample IDs for --bam")), ToolInput(tag="in_samp_sex", input_type=Boolean(optional=True), prefix="--samp-sex", doc=InputDocumentation(doc="<string>          Comma separated list of sample sex for each sample ID (--bam-samps must be provided)")), ToolInput(tag="in_str_info", input_type=Boolean(optional=True), prefix="--str-info", doc=InputDocumentation(doc="<string>          Tab file with additional per-STR info (see docs)")), ToolInput(tag="in_period", input_type=Boolean(optional=True), prefix="--period", doc=InputDocumentation(doc="<string>          Only genotype loci with periods (motif lengths) in this comma-separated list.")), ToolInput(tag="in_skip_q_score", input_type=Boolean(optional=True), prefix="--skip-qscore", doc=InputDocumentation(doc="Skip calculation of Q-score")), ToolInput(tag="in_read_length", input_type=Boolean(optional=True), prefix="--readlength", doc=InputDocumentation(doc="<int>             Read length. Default: -1")), ToolInput(tag="in_coverage", input_type=Boolean(optional=True), prefix="--coverage", doc=InputDocumentation(doc="<float>           Average coverage. must be set for exome/targeted data. Comma separated list to specify for each BAM")), ToolInput(tag="in_model_gc_coverage", input_type=Boolean(optional=True), prefix="--model-gc-coverage", doc=InputDocumentation(doc="Model coverage as a function of GC content. Requires genome-wide data")), ToolInput(tag="in_insert_mean", input_type=Boolean(optional=True), prefix="--insertmean", doc=InputDocumentation(doc="<float>           Fragment length mean. Comma separated list to specify for each BAM separately.")), ToolInput(tag="in_inserts_dev", input_type=Boolean(optional=True), prefix="--insertsdev", doc=InputDocumentation(doc="<float>           Fragment length standard deviation. Comma separated list to specify for each BAM separately.")), ToolInput(tag="in_nonuniform", input_type=Boolean(optional=True), prefix="--nonuniform", doc=InputDocumentation(doc="Indicate whether data has non-uniform coverage (i.e., exome)")), ToolInput(tag="in_min_sample_reads", input_type=Int(optional=True), prefix="--min-sample-reads", doc=InputDocumentation(doc="Minimum number of reads per sample.")), ToolInput(tag="in_frr_weight", input_type=Boolean(optional=True), prefix="--frrweight", doc=InputDocumentation(doc="<float>           Weight for FRR reads. Default: 1")), ToolInput(tag="in_encl_weight", input_type=Boolean(optional=True), prefix="--enclweight", doc=InputDocumentation(doc="<float>           Weight for enclosing reads. Default: 1")), ToolInput(tag="in_span_weight", input_type=Boolean(optional=True), prefix="--spanweight", doc=InputDocumentation(doc="<float>           Weight for spanning reads. Default: 1")), ToolInput(tag="in_flank_weight", input_type=Float(optional=True), prefix="--flankweight", doc=InputDocumentation(doc="Weight for flanking reads. Default: 1")), ToolInput(tag="in_ploidy", input_type=Boolean(optional=True), prefix="--ploidy", doc=InputDocumentation(doc="<int>             Indicate whether data is haploid (1) or diploid (2). Default: -1")), ToolInput(tag="in_skip_off_target", input_type=Boolean(optional=True), prefix="--skipofftarget", doc=InputDocumentation(doc="Skip off target regions included in the BED file.")), ToolInput(tag="in_read_prob_mode", input_type=Boolean(optional=True), prefix="--read-prob-mode", doc=InputDocumentation(doc="Use only read probability (ignore class probability)")), ToolInput(tag="in_numb_strap", input_type=Boolean(optional=True), prefix="--numbstrap", doc=InputDocumentation(doc="<int>             Number of bootstrap samples. Default: 100")), ToolInput(tag="in_grid_threshold", input_type=Int(optional=True), prefix="--grid-threshold", doc=InputDocumentation(doc="Use optimization rather than grid search to find MLE if more than this many possible alleles. Default: 10000")), ToolInput(tag="in_rescue_count", input_type=Int(optional=True), prefix="--rescue-count", doc=InputDocumentation(doc="Number of regions that GangSTR attempts to rescue mates from (excluding off-target regions) Default: 0")), ToolInput(tag="in_max_proc_read", input_type=Int(optional=True), prefix="--max-proc-read", doc=InputDocumentation(doc="Maximum number of processed reads per sample before a region is skipped. Default: 3000")), ToolInput(tag="in_min_score", input_type=Boolean(optional=True), prefix="--minscore", doc=InputDocumentation(doc="<int>             Minimum alignment score (out of 100). Default: 75")), ToolInput(tag="in_min_match", input_type=Boolean(optional=True), prefix="--minmatch", doc=InputDocumentation(doc="<int>             Minimum number of matching basepairs on each end of enclosing reads. Default: 5")), ToolInput(tag="in_stutter_up", input_type=Boolean(optional=True), prefix="--stutterup", doc=InputDocumentation(doc="<float>           Stutter insertion probability. Default: 0.05")), ToolInput(tag="in_stutter_down", input_type=Float(optional=True), prefix="--stutterdown", doc=InputDocumentation(doc="Stutter deletion probability. Default: 0.05")), ToolInput(tag="in_stutter_prob", input_type=Float(optional=True), prefix="--stutterprob", doc=InputDocumentation(doc="Stutter step size parameter. Default: 0.9")), ToolInput(tag="in_output_bootstraps", input_type=File(optional=True), prefix="--output-bootstraps", doc=InputDocumentation(doc="Output file with bootstrap samples")), ToolInput(tag="in_output_read_info", input_type=Boolean(optional=True), prefix="--output-readinfo", doc=InputDocumentation(doc="Output read class info (for debugging)")), ToolInput(tag="in_include_ggl", input_type=Boolean(optional=True), prefix="--include-ggl", doc=InputDocumentation(doc="Output GGL (special GL field) in VCF")), ToolInput(tag="in_seed", input_type=Boolean(optional=True), prefix="--seed", doc=InputDocumentation(doc="Random number generator initial seed")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Print out useful progress messages")), ToolInput(tag="in_very", input_type=Boolean(optional=True), prefix="--very", doc=InputDocumentation(doc="Print out more detailed progress messages for debugging")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="Don't print anything"))], outputs=[ToolOutput(tag="out_output_bootstraps", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_bootstraps", type_hint=File()), doc=OutputDocumentation(doc="Output file with bootstrap samples"))], container="quay.io/biocontainers/gangstr:2.5.0--h2ab8aec_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Gangstr_V0_1_0().translate("wdl")

