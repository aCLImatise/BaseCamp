from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, Int

Metagraph_Query_V0_1_0 = CommandToolBuilder(tool="metagraph_query", base_command=["metagraph", "query"], inputs=[ToolInput(tag="in_fwd_and_reverse", input_type=Boolean(optional=True), prefix="--fwd-and-reverse", doc=InputDocumentation(doc="for each input sequence, query its reverse complement as well [off]")), ToolInput(tag="in_align", input_type=Boolean(optional=True), prefix="--align", doc=InputDocumentation(doc="align sequences instead of mapping k-mers [off]")), ToolInput(tag="in_sparse", input_type=Boolean(optional=True), prefix="--sparse", doc=InputDocumentation(doc="use row-major sparse matrix for row annotation [off]")), ToolInput(tag="in_count_labels", input_type=Boolean(optional=True), prefix="--count-labels", doc=InputDocumentation(doc="count labels for k-mers from querying sequences [off]")), ToolInput(tag="in_print_signature", input_type=Boolean(optional=True), prefix="--print-signature", doc=InputDocumentation(doc="print vectors indicating present/absent k-mers [off]")), ToolInput(tag="in_num_top_labels", input_type=Boolean(optional=True), prefix="--num-top-labels", doc=InputDocumentation(doc="maximum number of frequent labels to print [off]")), ToolInput(tag="in_discovery_fraction", input_type=Boolean(optional=True), prefix="--discovery-fraction", doc=InputDocumentation(doc="[FLOAT] fraction of labeled k-mers required for annotation [0.7]")), ToolInput(tag="in_labels_delimiter", input_type=Boolean(optional=True), prefix="--labels-delimiter", doc=InputDocumentation(doc="[STR]     delimiter for annotation labels [':']")), ToolInput(tag="in_suppress_unlabeled", input_type=Boolean(optional=True), prefix="--suppress-unlabeled", doc=InputDocumentation(doc="do not show results for sequences missing in graph [off]")), ToolInput(tag="in_parallel", input_type=Boolean(optional=True), prefix="--parallel", doc=InputDocumentation(doc="[INT]     use multiple threads for computation [1]")), ToolInput(tag="in_fast", input_type=Boolean(optional=True), prefix="--fast", doc=InputDocumentation(doc="query in batches [off]")), ToolInput(tag="in_batch_size", input_type=Boolean(optional=True), prefix="--batch-size", doc=InputDocumentation(doc="query batch size (number of base pairs) [100000000]")), ToolInput(tag="in_align_both_strands", input_type=Boolean(optional=True), prefix="--align-both-strands", doc=InputDocumentation(doc="return best alignments for either input sequence or its reverse complement [off]")), ToolInput(tag="in_align_min_path_score", input_type=Boolean(optional=True), prefix="--align-min-path-score", doc=InputDocumentation(doc="[INT]                 the minimum score that a reported path can have [0]")), ToolInput(tag="in_align_edit_distance", input_type=Boolean(optional=True), prefix="--align-edit-distance", doc=InputDocumentation(doc="use unit costs for scoring matrix [off]")), ToolInput(tag="in_align_max_nodes_per_seq_char", input_type=Boolean(optional=True), prefix="--align-max-nodes-per-seq-char", doc=InputDocumentation(doc="[FLOAT]       maximum number of nodes to consider per sequence character [12.0]")), ToolInput(tag="in_align_max_ram", input_type=Boolean(optional=True), prefix="--align-max-ram", doc=InputDocumentation(doc="[FLOAT]              maximum amount of RAM used per alignment in MB [200.0]")), ToolInput(tag="in_batch_align", input_type=Boolean(optional=True), prefix="--batch-align", doc=InputDocumentation(doc="align against query graph [off]")), ToolInput(tag="in_max_hull_forks", input_type=Boolean(optional=True), prefix="--max-hull-forks", doc=InputDocumentation(doc="[INT]       maximum number of forks to take when expanding query graph [4]")), ToolInput(tag="in_max_hull_depth", input_type=Boolean(optional=True), prefix="--max-hull-depth", doc=InputDocumentation(doc="[INT]       maximum number of steps to traverse when expanding query graph [max_nodes_per_seq_char * max_seq_len]")), ToolInput(tag="in_align_match_score", input_type=Boolean(optional=True), prefix="--align-match-score", doc=InputDocumentation(doc="[INT]                    positive match score [2]")), ToolInput(tag="in_align_mm_transition_penalty", input_type=Boolean(optional=True), prefix="--align-mm-transition-penalty", doc=InputDocumentation(doc="[INT]          positive transition penalty (DNA only) [3]")), ToolInput(tag="in_align_mm_transversion_penalty", input_type=Boolean(optional=True), prefix="--align-mm-transversion-penalty", doc=InputDocumentation(doc="[INT]        positive transversion penalty (DNA only) [3]")), ToolInput(tag="in_align_gap_open_penalty", input_type=Boolean(optional=True), prefix="--align-gap-open-penalty", doc=InputDocumentation(doc="[INT]               positive gap opening penalty [5]")), ToolInput(tag="in_align_gap_extension_penalty", input_type=Boolean(optional=True), prefix="--align-gap-extension-penalty", doc=InputDocumentation(doc="[INT]          positive gap extension penalty [2]")), ToolInput(tag="in_align_min_cell_score", input_type=Boolean(optional=True), prefix="--align-min-cell-score", doc=InputDocumentation(doc="[INT]                 the minimum value that a cell in the alignment table can hold [0]")), ToolInput(tag="in_align_x_drop", input_type=Boolean(optional=True), prefix="--align-xdrop", doc=InputDocumentation(doc="[INT]                          the maximum difference between the current and the best alignment [27]")), ToolInput(tag="in_align_min_seed_length", input_type=Boolean(optional=True), prefix="--align-min-seed-length", doc=InputDocumentation(doc="[INT]                the minimum length of a seed [graph k]")), ToolInput(tag="in_align_max_seed_length", input_type=Boolean(optional=True), prefix="--align-max-seed-length", doc=InputDocumentation(doc="[INT]                the maximum length of a seed [graph k]")), ToolInput(tag="in_align_min_exact_match", input_type=Boolean(optional=True), prefix="--align-min-exact-match", doc=InputDocumentation(doc="[FLOAT] fraction of matching nucleotides required to align sequence [0.7]")), ToolInput(tag="in_align_max_num_seeds_per_locus", input_type=Boolean(optional=True), prefix="--align-max-num-seeds-per-locus", doc=InputDocumentation(doc="[INT]        the maximum number of allowed inexact seeds per locus [inf]")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="switch on verbose output [off]")), ToolInput(tag="in_a", input_type=String(optional=True), prefix="-a", doc=InputDocumentation(doc="")), ToolInput(tag="in_i", input_type=String(optional=True), prefix="-i", doc=InputDocumentation(doc="")), ToolInput(tag="in_file_one", input_type=Int(), position=0, doc=InputDocumentation(doc=""))], outputs=[], container="quay.io/biocontainers/metagraph:0.2.0--h74b8f77_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Metagraph_Query_V0_1_0().translate("wdl")

