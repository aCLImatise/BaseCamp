from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Int, Float

Enrichmentanalysis_V0_1_0 = CommandToolBuilder(tool="EnrichmentAnalysis", base_command=["EnrichmentAnalysis"], inputs=[ToolInput(tag="in_ctrl", input_type=File(optional=True), prefix="--ctrl", doc=InputDocumentation(doc="Control density file generated by\nRiboDensityAtEachPosition.py.[required].")), ToolInput(tag="in_treat", input_type=File(optional=True), prefix="--treat", doc=InputDocumentation(doc="Treat density file generated by\nRiboDensityAtEachPosition.py.[required].")), ToolInput(tag="in_coordinate_file", input_type=File(optional=True), prefix="--coordinateFile", doc=InputDocumentation(doc="The file should contain the coordinate of start and\nstop codon. Generated by\nOutputTranscriptInfo.py.[required]")), ToolInput(tag="in_ot_put_prefix", input_type=String(optional=True), prefix="--otput_prefix", doc=InputDocumentation(doc="Prefix of output files.[required]")), ToolInput(tag="in_unit_type", input_type=String(optional=True), prefix="--unit_type", doc=InputDocumentation(doc="Unit type we used for metagene analysis. Either 'nt'\nor 'codon'. default=codon")), ToolInput(tag="in_filter_mode", input_type=String(optional=True), prefix="--filter_mode", doc=InputDocumentation(doc="Mode for filtering transcripts. Either 'counts' or\n'RPKM'. default=counts.")), ToolInput(tag="in_select_trans_list", input_type=String(optional=True), prefix="--select_trans_list", doc=InputDocumentation(doc="Selected transcript list used for metagene\nanalysis.This files requires the first column must be\nthe transcript ID  with a column name.")), ToolInput(tag="in_minimum_cds_codon", input_type=Int(optional=True), prefix="--minimum_cds_codon", doc=InputDocumentation(doc="Minimum CDS codon (codon unit). CDS codons smaller\nthan 'minimum_cds_codon' will be skipped. default=150")), ToolInput(tag="in_minimum_cds_counts", input_type=Int(optional=True), prefix="--minimum_cds_counts", doc=InputDocumentation(doc="Minimum CDS counts. CDS counts smaller than\n'min_cds_counts' will be skipped. default=128")), ToolInput(tag="in_minimum_norm_region_counts", input_type=Int(optional=True), prefix="--minimum_norm_region_counts", doc=InputDocumentation(doc="Minimum counts in normalization region . Counts in\nnorm region smaller than 'minimum_norm_region_counts'\nwill be skipped. default=64")), ToolInput(tag="in_upstream_codon", input_type=String(optional=True), prefix="--upstream_codon", doc=InputDocumentation(doc="Upstream codon corresponding to start codon (codon\nunit). While corresponding to stop codon, it is the\ndownstream codon.")), ToolInput(tag="in_downstream_codon", input_type=String(optional=True), prefix="--downstream_codon", doc=InputDocumentation(doc="Downstream codon corresponding to start codon (codon\nunit). While corresponding to stop codon, it is the\nupstream codon.")), ToolInput(tag="in_normalize_exclude_codon", input_type=Int(optional=True), prefix="--normalize_exclude_codon", doc=InputDocumentation(doc="The region of the normalization for each genes should\nexclude the first 'normalize_exclude_codon'.\ndefault=30")), ToolInput(tag="in_ci", input_type=Float(optional=True), prefix="--CI", doc=InputDocumentation(doc="The confidence intervals of mean on each position\nbased on t distribution. default=0.95")), ToolInput(tag="in_id_type", input_type=String(optional=True), prefix="--id-type", doc=InputDocumentation(doc="define the id type users input. the default is\ntranscript id, if not, will be transformed into\ntranscript id. default=transcript_id\n"))], outputs=[], container="quay.io/biocontainers/ribominer:0.2.3.1--pyh3252c3a_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Enrichmentanalysis_V0_1_0().translate("wdl")

