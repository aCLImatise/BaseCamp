!Command
command:
- sumatra
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -l
  description: ': Reference sequence length is the shortest.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -L
  description: ': Reference sequence length is the largest.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -a
  description: ': Reference sequence length is the alignment length (default).'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -n
  description: ': Score is normalized by reference sequence length (default).'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -r
  description: ': Raw score, not normalized.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -d
  description: ': Score is expressed in distance (default: score is expressed in similarity).'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -t
  description: "##.## : Score threshold. If the score is normalized and expressed\
    \ in similarity (default),\nit is an identity, e.g. 0.95 for an identity of 95%.\
    \ If the score is normalized\nand expressed in distance, it is (1.0 - identity),\
    \ e.g. 0.05 for an identity of 95%.\nIf the score is not normalized and expressed\
    \ in similarity, it is the length of the\nLongest Common Subsequence. If the score\
    \ is not normalized and expressed in distance,\nit is (reference length - LCS\
    \ length).\nOnly sequence pairs with a similarity above ##.## are printed. Default:\
    \ 0.00\n(no threshold)."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -p
  description: '##    : Number of threads used for computation (default=1).'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -g
  description: ": n's are replaced with a's (default: sequences with n's are discarded)."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -x
  description: ': Adds four extra columns with the count and length of both sequences.'
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  description: ': [H]elp - print <this> help'
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "-----------------------------------------------------------------------------------------------------------------------------\n\
  \ SUMATRA Version 1.0.00\n-----------------------------------------------------------------------------------------------------------------------------\n\
  \ Synopsis : sumatra computes all the pairwise LCS (Longest Common Subsequence)\
  \ scores\n of one nucleotide dataset or between two nucleotide datasets.\n Usage:\
  \ sumatra [options] <dataset1> [dataset2]\n-----------------------------------------------------------------------------------------------------------------------------\n\
  \ Options:\n\n -h       : [H]elp - print <this> help\n\n -l       : Reference sequence\
  \ length is the shortest. \n\n -L       : Reference sequence length is the largest.\
  \ \n\n -a       : Reference sequence length is the alignment length (default). \n\
  \n -n       : Score is normalized by reference sequence length (default).\n\n -r\
  \       : Raw score, not normalized. \n\n -d       : Score is expressed in distance\
  \ (default: score is expressed in similarity). \n\n -t ##.## : Score threshold.\
  \ If the score is normalized and expressed in similarity (default),\n          \
  \  it is an identity, e.g. 0.95 for an identity of 95%. If the score is normalized\n\
  \            and expressed in distance, it is (1.0 - identity), e.g. 0.05 for an\
  \ identity of 95%.\n            If the score is not normalized and expressed in\
  \ similarity, it is the length of the\n            Longest Common Subsequence. If\
  \ the score is not normalized and expressed in distance,\n            it is (reference\
  \ length - LCS length).\n            Only sequence pairs with a similarity above\
  \ ##.## are printed. Default: 0.00 \n            (no threshold).\n\n -p ##    :\
  \ Number of threads used for computation (default=1).\n\n -g       : n's are replaced\
  \ with a's (default: sequences with n's are discarded).\n -x       : Adds four extra\
  \ columns with the count and length of both sequences.\n-----------------------------------------------------------------------------------------------------------------------------\n\
  \ First argument  : the nucleotide dataset to analyze\n\n Second argument : optionally\
  \ the second nucleotide dataset\n-----------------------------------------------------------------------------------------------------------------------------\n\
  \ Results table description : \n column 1 : Identifier sequence 1\n column 2 : Identifier\
  \ sequence 2\n column 3 : Score\n column 4 : Count of sequence 1  (only with option\
  \ -x)\n column 5 : Count of sequence 2  (only with option -x)\n column 6 : Length\
  \ of sequence 1 (only with option -x)\n column 7 : Length of sequence 2 (only with\
  \ option -x)\n-----------------------------------------------------------------------------------------------------------------------------\n\
  \ http://metabarcoding.org/sumatra\n-----------------------------------------------------------------------------------------------------------------------------\n\
  \n"
generated_using:
- --help
docker_image:
