from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Directory, File, Boolean, String, Int

Pangolin_V0_1_0 = CommandToolBuilder(tool="pangolin", base_command=["pangolin"], inputs=[ToolInput(tag="in_outdir", input_type=Directory(optional=True), prefix="--outdir", doc=InputDocumentation(doc="Output directory. Default: current working directory")), ToolInput(tag="in_outfile", input_type=File(optional=True), prefix="--outfile", doc=InputDocumentation(doc="Optional output file name. Default: lineage_report.csv")), ToolInput(tag="in_alignment", input_type=Boolean(optional=True), prefix="--alignment", doc=InputDocumentation(doc="Optional alignment output.")), ToolInput(tag="in_datadir", input_type=Directory(optional=True), prefix="--datadir", doc=InputDocumentation(doc="Data directory minimally containing a fasta alignment\nand guide tree")), ToolInput(tag="in_tempdir", input_type=String(optional=True), prefix="--tempdir", doc=InputDocumentation(doc="Specify where you want the temp stuff to go. Default:\n$TMPDIR")), ToolInput(tag="in_no_temp", input_type=Boolean(optional=True), prefix="--no-temp", doc=InputDocumentation(doc="Output all intermediate files, for dev purposes.")), ToolInput(tag="in_decompress_model", input_type=Boolean(optional=True), prefix="--decompress-model", doc=InputDocumentation(doc="Permanently decompress the model file to save time\nrunning pangolin.")), ToolInput(tag="in_max_am_big", input_type=Int(optional=True), prefix="--max-ambig", doc=InputDocumentation(doc="Maximum proportion of Ns allowed for pangolin to\nattempt assignment. Default: 0.5")), ToolInput(tag="in_min_length", input_type=Int(optional=True), prefix="--min-length", doc=InputDocumentation(doc="Minimum query length allowed for pangolin to attempt\nassignment. Default: 10000")), ToolInput(tag="in_pan_guilin", input_type=Boolean(optional=True), prefix="--panGUIlin", doc=InputDocumentation(doc="Run web-app version of pangolin")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Print lots of stuff to screen")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of threads")), ToolInput(tag="in_pango_learn_version", input_type=Boolean(optional=True), prefix="--pangoLEARN-version", doc=InputDocumentation(doc="show pangoLEARN's version number and exit")), ToolInput(tag="in_update", input_type=Boolean(optional=True), prefix="--update", doc=InputDocumentation(doc="Automatically updates to latest release of pangolin\nand pangoLEARN, then exits\n")), ToolInput(tag="in_query", input_type=String(), position=0, doc=InputDocumentation(doc="Query fasta file of sequences to analyse."))], outputs=[ToolOutput(tag="out_outdir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_outdir", type_hint=File()), doc=OutputDocumentation(doc="Output directory. Default: current working directory")), ToolOutput(tag="out_outfile", output_type=File(optional=True), selector=InputSelector(input_to_select="in_outfile", type_hint=File()), doc=OutputDocumentation(doc="Optional output file name. Default: lineage_report.csv"))], container="quay.io/biocontainers/pangolin:2.3.2--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Pangolin_V0_1_0().translate("wdl")

