from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Boolean, File

Utrrnaseq_V0_1_0 = CommandToolBuilder(tool="utrrnaseq", base_command=["utrrnaseq"], inputs=[ToolInput(tag="in_long", input_type=String(optional=True), prefix="--long", doc=InputDocumentation(doc="data type       description")), ToolInput(tag="in_in_scaffold_file", input_type=Boolean(optional=True), prefix="--in-scaffold-file", doc=InputDocumentation(doc="s               scaffold file in FASTA-format. Required.")), ToolInput(tag="in_in_coding_region_file", input_type=Boolean(optional=True), prefix="--in-coding-region-file", doc=InputDocumentation(doc="s               file with start and stop features in GTF/GFF format. Required.")), ToolInput(tag="in_in_intron_file", input_type=Boolean(optional=True), prefix="--in-intron-file", doc=InputDocumentation(doc="s               intron file in GTF/GFF format. Required.")), ToolInput(tag="in_in_wiggle_file", input_type=Boolean(optional=True), prefix="--in-wiggle-file", doc=InputDocumentation(doc="s               wiggle file in WIG-format. Required.")), ToolInput(tag="in_in_repeat_file", input_type=Boolean(optional=True), prefix="--in-repeat-file", doc=InputDocumentation(doc="s               repeat file in GTF/GFF format.")), ToolInput(tag="in_out_file_name", input_type=File(optional=True), prefix="--out-file-name", doc=InputDocumentation(doc="s               output filename. Optional. Default Value: 'UTRs.gff'")), ToolInput(tag="in_smoothing_window_size", input_type=Boolean(optional=True), prefix="--smoothing-window-size", doc=InputDocumentation(doc="i               smoothing window size. Optional. Default Value: 150")), ToolInput(tag="in_read_length", input_type=Boolean(optional=True), prefix="--read-length", doc=InputDocumentation(doc="i               read length of RNA-Seq data. Optional. Default Value: 150")), ToolInput(tag="in_limit", input_type=Boolean(optional=True), prefix="--limit", doc=InputDocumentation(doc="i               maximal distance from computation start. Optional. Default Value: 5000")), ToolInput(tag="in_drop_window_size", input_type=Boolean(optional=True), prefix="--drop-window-size", doc=InputDocumentation(doc="i               window size after UTR end. Optional. Default Value: 50")), ToolInput(tag="in_minimum_length", input_type=Boolean(optional=True), prefix="--minimum-length", doc=InputDocumentation(doc="i               minimal UTR length. Optional. Default Value: 2")), ToolInput(tag="in_minimum_average_coverage", input_type=Boolean(optional=True), prefix="--minimum-average-coverage", doc=InputDocumentation(doc="i               minimal average UTR coverage. Optional. Default Value: 10")), ToolInput(tag="in_percent_window", input_type=Boolean(optional=True), prefix="--percent-window", doc=InputDocumentation(doc="d               percentage of window coverage after UTR. Optional. Default Value: 0.6")), ToolInput(tag="in_percent_intron", input_type=Boolean(optional=True), prefix="--percent-intron", doc=InputDocumentation(doc="d               percentage of coverage in introns. Optional. Default Value: 0.5")), ToolInput(tag="in_percent_multiplicity", input_type=Boolean(optional=True), prefix="--percent-multiplicity", doc=InputDocumentation(doc="d               percentage of multiplicity of introns. Optional. Default Value: 0.1")), ToolInput(tag="in_splices_sites", input_type=Boolean(optional=True), prefix="--splices-sites", doc=InputDocumentation(doc="s               accepted splice sites. If 'all' is chosen, no splice site filtering is done.Optional. Default Value: GT_AG")), ToolInput(tag="in_zero_coverage", input_type=Boolean(optional=True), prefix="--zero-coverage", doc=InputDocumentation(doc="none            Determination of UTRs based on zero coverage. Optional. Default Value: false")), ToolInput(tag="in_format_examples", input_type=Boolean(optional=True), prefix="--format-examples", doc=InputDocumentation(doc="none            Only print format examples of input files. Optional. Default Value: false"))], outputs=[ToolOutput(tag="out_out_file_name", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_file_name", type_hint=File()), doc=OutputDocumentation(doc="s               output filename. Optional. Default Value: 'UTRs.gff'"))], container="quay.io/biocontainers/augustus:3.4.0--pl526h0faeac2_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Utrrnaseq_V0_1_0().translate("wdl")

