from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, File, String, Float, Array, Boolean

Hiccorrectmatrix_Correct_V0_1_0 = CommandToolBuilder(tool="hicCorrectMatrix_correct", base_command=["hicCorrectMatrix", "correct"], inputs=[ToolInput(tag="in_matrix", input_type=Int(optional=True), prefix="--matrix", doc=InputDocumentation(doc="Name of the Hi-C matrix to correct in .h5 format.\n(default: None)")), ToolInput(tag="in_out_filename", input_type=File(optional=True), prefix="--outFileName", doc=InputDocumentation(doc="File name to save the resulting matrix. The output is\na .h5 file. (default: None)")), ToolInput(tag="in_correction_method", input_type=String(optional=True), prefix="--correctionMethod", doc=InputDocumentation(doc="Method to be used for matrix correction. It can be set\nto KR or ICE (Default: KR).")), ToolInput(tag="in_filter_threshold", input_type=Float(optional=True), prefix="--filterThreshold", doc=InputDocumentation(doc="FILTERTHRESHOLD, -t FILTERTHRESHOLD FILTERTHRESHOLD\nRemoves bins of low or large coverage. Usually these\nbins do not contain valid Hi-C data or represent\nregions that accumulate reads and thus must be\ndiscarded. Use hicCorrectMatrix diagnostic_plot to\nidentify the modified z-value thresholds. A lower and\nupper threshold are required separated by space, e.g.\n--filterThreshold -1.5 5. Applied only for ICE!\n(default: None)")), ToolInput(tag="in_iter_num", input_type=Int(optional=True), prefix="--iterNum", doc=InputDocumentation(doc="Number of iterations to compute.only for ICE!\n(Default: 500).")), ToolInput(tag="in_inflation_cut_off", input_type=Int(optional=True), prefix="--inflationCutoff", doc=InputDocumentation(doc="Value corresponding to the maximum number of times a\nbin can be scaled up during the iterative correction.\nFor example, an inflation cutoff of 3 will filter out\nall bins that were expanded 3 times or more during the\niterative correctionself.Only for ICE! (default: None)")), ToolInput(tag="in_trans_cut_off", input_type=Float(optional=True), prefix="--transCutoff", doc=InputDocumentation(doc="Clip high counts in the top -transcut trans regions\n(i.e. between chromosomes). A usual value is 0.05.\nOnly for ICE! (default: None)")), ToolInput(tag="in_sequenced_count_cut_off", input_type=Float(optional=True), prefix="--sequencedCountCutoff", doc=InputDocumentation(doc="Each bin receives a value indicating the fraction that\nis covered by reads. A cutoff of 0.5 will discard all\nthose bins that have less than half of the bin\ncovered. Only for ICE! (default: None)")), ToolInput(tag="in_chromosomes", input_type=Array(t=String(), optional=True), prefix="--chromosomes", doc=InputDocumentation(doc="List of chromosomes to be included in the iterative\ncorrection. The order of the given chromosomes will be\nthen kept for the resulting corrected matrix (default:\nNone)")), ToolInput(tag="in_skip_diagonal", input_type=Boolean(optional=True), prefix="--skipDiagonal", doc=InputDocumentation(doc="If set, diagonal counts are not included. Only for\nICE! (default: False)")), ToolInput(tag="in_per_chr", input_type=Boolean(optional=True), prefix="--perchr", doc=InputDocumentation(doc="Normalize each chromosome separately. This is useful\nfor samples from cells with uneven number of\nchromosomes and/or translocations. (default: False)")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Print processing status. (default: False)")), ToolInput(tag="in_one_dot_two", input_type=Int(optional=True), prefix="-1.2", doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_out_filename", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_filename", type_hint=File()), doc=OutputDocumentation(doc="File name to save the resulting matrix. The output is\na .h5 file. (default: None)"))], container="quay.io/biocontainers/hicexplorer:3.6--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Hiccorrectmatrix_Correct_V0_1_0().translate("wdl")

