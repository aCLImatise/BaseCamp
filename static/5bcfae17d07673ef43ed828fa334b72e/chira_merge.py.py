from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File

Chira_Merge_Py_V0_1_0 = CommandToolBuilder(tool="chira_merge.py", base_command=["chira_merge.py"], inputs=[ToolInput(tag="in_block_based", input_type=Boolean(optional=True), prefix="--block_based", doc=InputDocumentation(doc="Input BED file with alignments (default: None)")), ToolInput(tag="in_outdir", input_type=File(optional=True), prefix="--outdir", doc=InputDocumentation(doc="Output directory path for the whole analysis (default:\nNone)")), ToolInput(tag="in_gtf", input_type=Boolean(optional=True), prefix="--gtf", doc=InputDocumentation(doc="Annotation GTF file (default: None)")), ToolInput(tag="in_alignment_overlap", input_type=Boolean(optional=True), prefix="--alignment_overlap", doc=InputDocumentation(doc="Minimum percentage overlap among BED entries inorder\nto merge. [0-1.0] (default: 0.7)")), ToolInput(tag="in_segment_overlap", input_type=Boolean(optional=True), prefix="--segment_overlap", doc=InputDocumentation(doc="Matching read positions with greater than this %\noverlap are merged into a segment (default: 0.7)")), ToolInput(tag="in_length_threshold", input_type=Boolean(optional=True), prefix="--length_threshold", doc=InputDocumentation(doc="Minimum length of the alignments to consider as a\nfraction of longest alignmnet. [0.8-1.0] (default:\n0.9)")), ToolInput(tag="in_distance", input_type=Boolean(optional=True), prefix="--distance", doc=InputDocumentation(doc="Blockbuster parameter distance (default: 30)")), ToolInput(tag="in_min_cluster_height", input_type=Boolean(optional=True), prefix="--min_cluster_height", doc=InputDocumentation(doc="Blockbuster parameter minClusterHeight (default: 10)")), ToolInput(tag="in_min_block_height", input_type=Boolean(optional=True), prefix="--min_block_height", doc=InputDocumentation(doc="Blockbuster parameter minBlockHeight (default: 10)")), ToolInput(tag="in_scale", input_type=Boolean(optional=True), prefix="--scale", doc=InputDocumentation(doc="Blockbuster parameter scale (default: 0.1)")), ToolInput(tag="in_chimeric_overlap", input_type=Boolean(optional=True), prefix="--chimeric_overlap", doc=InputDocumentation(doc="Maximum number of bases allowed between the chimeric\nsegments of a read (default: 2)")), ToolInput(tag="in_ref_fast_a_one", input_type=Boolean(optional=True), prefix="--ref_fasta1", doc=InputDocumentation(doc="First prioroty fasta file (default: None)")), ToolInput(tag="in_ref_fast_a_two", input_type=Boolean(optional=True), prefix="--ref_fasta2", doc=InputDocumentation(doc="second priority fasta file (default: None)")), ToolInput(tag="in_chimeric_only", input_type=Boolean(optional=True), prefix="--chimeric_only", doc=InputDocumentation(doc="Consider chimeric reads only for merging (default:\nFalse)")), ToolInput(tag="in_min_locus_size", input_type=Boolean(optional=True), prefix="--min_locus_size", doc=InputDocumentation(doc="Minimum number of alignments required per mered locus\n(default: 1)"))], outputs=[ToolOutput(tag="out_outdir", output_type=File(optional=True), selector=InputSelector(input_to_select="in_outdir", type_hint=File()), doc=OutputDocumentation(doc="Output directory path for the whole analysis (default:\nNone)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Chira_Merge_Py_V0_1_0().translate("wdl", allow_empty_container=True)

