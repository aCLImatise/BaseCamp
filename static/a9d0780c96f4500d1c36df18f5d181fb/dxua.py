from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Int, String

Dxua_V0_1_0 = CommandToolBuilder(tool="dxua", base_command=["dxua"], inputs=[ToolInput(tag="in_print_environment_information", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc="[ --env ]                       Print environment information")), ToolInput(tag="in_arg_specify_authentication", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="[ --auth-token ] arg            Specify the authentication token")), ToolInput(tag="in_arg_name_id", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="[ --project ] arg               Name or ID of the destination project")), ToolInput(tag="in_arg_name_destination", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc="[ --folder ] arg (=/)           Name of the destination folder")), ToolInput(tag="in_arg_name_remote", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="[ --name ] arg                  Name of the remote file (Note: Extension\n'.gz' will be appended if the file is\ncompressed before uploading)")), ToolInput(tag="in_visibility", input_type=File(optional=True), prefix="--visibility", doc=InputDocumentation(doc="(=visible)        Use '--visibility hidden' to set the\nfile's visibility as hidden.")), ToolInput(tag="in_property", input_type=Int(optional=True), prefix="--property", doc=InputDocumentation(doc="Key-value pair to add as a property;\nrepeat as necessary, e.g. '--property\nkey1=val1 --property key2=val2'")), ToolInput(tag="in_type", input_type=Int(optional=True), prefix="--type", doc=InputDocumentation(doc="Type of the data object; repeat as\nnecessary, e.g. '--type type1 --type\ntype2'")), ToolInput(tag="in_tag", input_type=Int(optional=True), prefix="--tag", doc=InputDocumentation(doc="Tag of the data object; repeat as\nnecessary, e.g. '--tag tag1 --tag tag2'")), ToolInput(tag="in_details", input_type=String(optional=True), prefix="--details", doc=InputDocumentation(doc="JSON to store as details")), ToolInput(tag="in_recursive", input_type=Boolean(optional=True), prefix="--recursive", doc=InputDocumentation(doc="Recursively upload the directories")), ToolInput(tag="in_read_threads", input_type=Int(optional=True), prefix="--read-threads", doc=InputDocumentation(doc="(=2)            Number of parallel disk read threads")), ToolInput(tag="in_arg_number_parallel_compression", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="[ --compress-threads ] arg (=7) Number of parallel compression threads")), ToolInput(tag="in_arg_number_parallel_upload", input_type=Boolean(optional=True), prefix="-u", doc=InputDocumentation(doc="[ --upload-threads ] arg (=8)   Number of parallel upload threads")), ToolInput(tag="in_arg_m_size", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="[ --chunk-size ] arg (=75M)     Size of chunks in which the file should be\nuploaded. Specify an integer size in bytes\nor append optional units (B, K, M, G).\nE.g., '50M' sets chunk size to 50\nmegabytes.")), ToolInput(tag="in_throttle", input_type=Int(optional=True), prefix="--throttle", doc=InputDocumentation(doc="Limit maximum upload speed. Specify an\ninteger to set speed in bytes/second or\nappend optional units (B, K, M, G). E.g.,\n'3M' limits upload speed to 3\nmegabytes/second. If not set, uploads are\nnot throttled.")), ToolInput(tag="in_arg_number_tries", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="[ --tries ] arg (=3)            Number of tries to upload each chunk")), ToolInput(tag="in_do_not_compress", input_type=Boolean(optional=True), prefix="--do-not-compress", doc=InputDocumentation(doc="Do not compress file(s) before upload")), ToolInput(tag="in_report_upload_progress", input_type=Boolean(optional=True), prefix="-g", doc=InputDocumentation(doc="[ --progress ]                  Report upload progress")), ToolInput(tag="in__verbose_logging", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="[ --verbose ]                   Verbose logging")), ToolInput(tag="in_wait_on_close", input_type=Boolean(optional=True), prefix="--wait-on-close", doc=InputDocumentation(doc="Wait for file objects to be closed before")), ToolInput(tag="in_read_file_content", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="[ --read-from-stdin ]           Read file content from stdin")), ToolInput(tag="in_exiting", input_type=String(), position=0, doc=InputDocumentation(doc="--do-not-resume                    Do not attempt to resume any incomplete ")), ToolInput(tag="in_uploads", input_type=String(), position=1, doc=InputDocumentation(doc="--test                             Test upload agent settings"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Dxua_V0_1_0().translate("wdl", allow_empty_container=True)

