!Command
command:
- convert_coords
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -m
  description: (required) Name of file in which alignment is defined.
  args: !SimpleFlagArg
    name: msa_fname
- !Flag
  optional: true
  synonyms:
  - -f
  description: (required) Name of file in which features are defined (GFF).
  args: !SimpleFlagArg
    name: gff_fname
- !Flag
  optional: true
  synonyms:
  - -s
  description: "Index of frame of reference for feature coordinates, as\ndefined in\
    \ the GFF file.  Use an integer 1-N (if N seqs)\nor 0 to indicate the coordinate\
    \ system of the alignment\nas a whole.  Default behavior is to match features\
    \ with\nalignment sequences by name (feature by feature)."
  args: !SimpleFlagArg
    name: src_frame
- !Flag
  optional: true
  synonyms:
  - -d
  description: "Index of destination frame of reference.  Default is 0\n(whole MSA)."
  args: !SimpleFlagArg
    name: dest_frame
- !Flag
  optional: true
  synonyms:
  - -p
  description: "Positive coordinate offset.  This value will be\nadded to all coordinates.\
    \  Useful when\nthe alignment (or sequence) for which the coordinates\nare specified\
    \ is a sub-alignment of yours."
  args: !SimpleFlagArg
    name: coord_off
- !Flag
  optional: true
  synonyms:
  - -n
  description: "Negative coordinate offset.  This value will be\nsubtracted from all\
    \ coordinates.  Useful when your\nalignment is a sub-alignment of the alignment\
    \ (or\nsequence) for which the coordinates are specified."
  args: !SimpleFlagArg
    name: coord_off
- !Flag
  optional: true
  synonyms:
  - -i
  description: "|PHYLIP|MPM|SS\nAlignment format.  Default is to guess format from\
    \ file\ncontents\n"
  args: !SimpleFlagArg
    name: FASTA
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "convert_coords: invalid option -- '-'\nUSAGE: convert_coords -m <msa_fname>\
  \ -f <feature_fname> [-s <src_frame>] [-d <dest_frame>] [-p] [-n] [-i PHYLIP|FASTA|MPM]\n\
  \nDESCRIPTION:\nConverts coordinates of features in a GFF file according to a multiple\n\
  alignment.  Will map from the coordinate system of any sequence to any\nother sequence;\
  \ can also map to or from the coordinate system of the\nentire alignment.  In addition,\
  \ supports translation of coordinates by\nspecified offset.\n\nOPTIONS:\n    -m\
  \ <msa_fname>  (required) Name of file in which alignment is defined.\n    -f <gff_fname>\
  \  (required) Name of file in which features are defined (GFF). \n    -s <src_frame>\
  \  Index of frame of reference for feature coordinates, as \n                  \
  \  defined in the GFF file.  Use an integer 1-N (if N seqs) \n                 \
  \   or 0 to indicate the coordinate system of the alignment \n                 \
  \   as a whole.  Default behavior is to match features with \n                 \
  \   alignment sequences by name (feature by feature).\n    -d <dest_frame> Index\
  \ of destination frame of reference.  Default is 0\n                    (whole MSA).\n\
  \    -p <coord_off>  Positive coordinate offset.  This value will be\n         \
  \           added to all coordinates.  Useful when \n                    the alignment\
  \ (or sequence) for which the coordinates \n                    are specified is\
  \ a sub-alignment of yours. \n    -n <coord_off>  Negative coordinate offset.  This\
  \ value will be\n                    subtracted from all coordinates.  Useful when\
  \ your\n                    alignment is a sub-alignment of the alignment (or \n\
  \                    sequence) for which the coordinates are specified.\n    -i\
  \ FASTA|PHYLIP|MPM|SS\n                    Alignment format.  Default is to guess\
  \ format from file\n                    contents\n\n"
generated_using:
- --help
docker_image:
