&id003 !Command
positional: []
named:
- !Flag
  description: "Log level (default: 'info')"
  synonyms:
  - --loglevel
  args: !SimpleFlagArg
    name: LOGLEVEL
  optional: true
command:
- bioconda-utils
- bot
parent: &id001 !Command
  positional: []
  named: []
  command:
  - bioconda-utils
  parent:
  subcommands:
  - !Command
    positional:
    - !Positional
      description: 'Path to folder containing recipes (default: recipes/) (default:
        -)'
      position: 0
      name: recipe_folder
      optional: false
    - !Positional
      description: 'Path to Bioconda config (default: config.yml) (default: -)'
      position: 1
      name: config
      optional: false
    named:
    - !Flag
      description: "Glob for package[s] to show in DAG. Default is to show all packages.\
        \ Can be specified more than once (default: '*')"
      synonyms:
      - --packages
      args: !RepeatFlagArg
        name: PACKAGES
      optional: true
    - !Flag
      description: "Set format to print graph. \"gml\" and \"dot\" can be imported\
        \ into graph visualization tools (graphviz, gephi, cytoscape). \"txt\" will\
        \ print out recipes grouped by independent subdags, largest subdag first,\
        \ each in topologically sorted order. Singleton subdags (if not hidden with\
        \ --hide-singletons) are reported as one large group at the end. (default:\
        \ 'gml')"
      synonyms:
      - --format
      args: !ChoiceFlagArg
        choices: !!set
          ? txt
          ? dot
          ? gml
      optional: true
    - !Flag
      description: 'Hide singletons in the printed graph. (default: False)'
      synonyms:
      - --hide-singletons
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Set logging level (debug, info, warning, error, critical) (default:\
        \ 'info')"
      synonyms:
      - --loglevel
      args: !SimpleFlagArg
        name: LOGLEVEL
      optional: true
    - !Flag
      description: 'Write log to file (default: -)'
      synonyms:
      - --logfile
      args: !SimpleFlagArg
        name: LOGFILE
      optional: true
    - !Flag
      description: "Log level for log file (default: 'debug')"
      synonyms:
      - --logfile-level
      args: !SimpleFlagArg
        name: LOGFILE_LEVEL
      optional: true
    - !Flag
      description: 'Limit lines emitted for commands executed (default: -)'
      synonyms:
      - --log-command-max-lines
      args: !SimpleFlagArg
        name: LOG_COMMAND_MAX_LINES
      optional: true
    command:
    - bioconda-utils
    - dag
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: bioconda-utils dag [-h] [--packages PACKAGES [PACKAGES ...]]\n\
      \                          [--format {gml,dot,txt}] [--hide-singletons]\n  \
      \                        [--loglevel LOGLEVEL] [--logfile LOGFILE]\n       \
      \                   [--logfile-level LOGFILE_LEVEL]\n                      \
      \    [--log-command-max-lines LOG_COMMAND_MAX_LINES]\n                     \
      \     [recipe_folder] [config]\n\n    Export the DAG of packages to a graph\
      \ format file for visualization\n    \n\npositional arguments:\n  recipe_folder\
      \         Path to folder containing recipes (default: recipes/)\n          \
      \              (default: -)\n  config                Path to Bioconda config\
      \ (default: config.yml)\n                        (default: -)\n\noptional arguments:\n\
      \  -h, --help            show this help message and exit\n  --packages PACKAGES\
      \ [PACKAGES ...]\n                        Glob for package[s] to show in DAG.\
      \ Default is to show\n                        all packages. Can be specified\
      \ more than once\n                        (default: '*')\n  --format {gml,dot,txt}\n\
      \                        Set format to print graph. \"gml\" and \"dot\" can\
      \ be\n                        imported into graph visualization tools (graphviz,\n\
      \                        gephi, cytoscape). \"txt\" will print out recipes\n\
      \                        grouped by independent subdags, largest subdag first,\n\
      \                        each in topologically sorted order. Singleton subdags\n\
      \                        (if not hidden with --hide-singletons) are reported\
      \ as\n                        one large group at the end. (default: 'gml')\n\
      \  --hide-singletons     Hide singletons in the printed graph. (default: False)\n\
      \  --loglevel LOGLEVEL   Set logging level (debug, info, warning, error,\n \
      \                       critical) (default: 'info')\n  --logfile LOGFILE   \
      \  Write log to file (default: -)\n  --logfile-level LOGFILE_LEVEL\n       \
      \                 Log level for log file (default: 'debug')\n  --log-command-max-lines\
      \ LOG_COMMAND_MAX_LINES\n                        Limit lines emitted for commands\
      \ executed (default: -)\n"
    generated_using: &id002
    - --help
  - !Command
    positional:
    - !Positional
      description: 'Path to folder containing recipes (default: recipes/) (default:
        -)'
      position: 0
      name: recipe_folder
      optional: false
    - !Positional
      description: 'Path to Bioconda config (default: config.yml) (default: -)'
      position: 1
      name: config
      optional: false
    named:
    - !Flag
      description: 'Restrict --dependencies to packages in `recipe_folder`. Has no
        effect if --reverse- dependencies, which always looks just in the recipe dir.
        (default: False)'
      synonyms:
      - --restrict
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Return recipes in `recipe_folder` in the dependency chain for
        the packages listed here. Answers the question "what does PACKAGE need?" (default:
        -)'
      synonyms:
      - --dependencies
      args: !RepeatFlagArg
        name: DEPENDENCIES
      optional: true
    - !Flag
      description: 'Return recipes in `recipe_folder` in the reverse dependency chain
        for packages listed here. Answers the question "what depends on PACKAGE?"
        (default: -)'
      synonyms:
      - --reverse-dependencies
      args: !RepeatFlagArg
        name: REVERSE_DEPENDENCIES
      optional: true
    - !Flag
      description: "Set logging level (debug, info, warning, error, critical) (default:\
        \ 'info')"
      synonyms:
      - --loglevel
      args: !SimpleFlagArg
        name: LOGLEVEL
      optional: true
    - !Flag
      description: 'Write log to file (default: -)'
      synonyms:
      - --logfile
      args: !SimpleFlagArg
        name: LOGFILE
      optional: true
    - !Flag
      description: "Log level for log file (default: 'debug')"
      synonyms:
      - --logfile-level
      args: !SimpleFlagArg
        name: LOGFILE_LEVEL
      optional: true
    - !Flag
      description: 'Limit lines emitted for commands executed (default: -)'
      synonyms:
      - --log-command-max-lines
      args: !SimpleFlagArg
        name: LOG_COMMAND_MAX_LINES
      optional: true
    command:
    - bioconda-utils
    - dependent
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: bioconda-utils dependent [-h] [--restrict]\n              \
      \                  [--dependencies DEPENDENCIES [DEPENDENCIES ...]]\n      \
      \                          [--reverse-dependencies REVERSE_DEPENDENCIES [REVERSE_DEPENDENCIES\
      \ ...]]\n                                [--loglevel LOGLEVEL] [--logfile LOGFILE]\n\
      \                                [--logfile-level LOGFILE_LEVEL]\n         \
      \                       [--log-command-max-lines LOG_COMMAND_MAX_LINES]\n  \
      \                              [recipe_folder] [config]\n\n    Print recipes\
      \ dependent on a package\n    \n\npositional arguments:\n  recipe_folder   \
      \      Path to folder containing recipes (default: recipes/)\n             \
      \           (default: -)\n  config                Path to Bioconda config (default:\
      \ config.yml)\n                        (default: -)\n\noptional arguments:\n\
      \  -h, --help            show this help message and exit\n  --restrict     \
      \       Restrict --dependencies to packages in\n                        `recipe_folder`.\
      \ Has no effect if --reverse-\n                        dependencies, which always\
      \ looks just in the recipe\n                        dir. (default: False)\n\
      \  --dependencies DEPENDENCIES [DEPENDENCIES ...]\n                        Return\
      \ recipes in `recipe_folder` in the dependency\n                        chain\
      \ for the packages listed here. Answers the\n                        question\
      \ \"what does PACKAGE need?\" (default: -)\n  --reverse-dependencies REVERSE_DEPENDENCIES\
      \ [REVERSE_DEPENDENCIES ...]\n                        Return recipes in `recipe_folder`\
      \ in the reverse\n                        dependency chain for packages listed\
      \ here. Answers the\n                        question \"what depends on PACKAGE?\"\
      \ (default: -)\n  --loglevel LOGLEVEL   Set logging level (debug, info, warning,\
      \ error,\n                        critical) (default: 'info')\n  --logfile LOGFILE\
      \     Write log to file (default: -)\n  --logfile-level LOGFILE_LEVEL\n    \
      \                    Log level for log file (default: 'debug')\n  --log-command-max-lines\
      \ LOG_COMMAND_MAX_LINES\n                        Limit lines emitted for commands\
      \ executed (default: -)\n"
    generated_using: *id002
  - !Command
    positional:
    - !Positional
      description: 'Path to folder containing recipes (default: recipes/) (default:
        -)'
      position: 0
      name: recipe_folder
      optional: false
    - !Positional
      description: 'Path to Bioconda config (default: config.yml) (default: -)'
      position: 1
      name: config
      optional: false
    named:
    - !Flag
      description: "Glob for package[s] to build. Default is to build all packages.\
        \ Can be specified more than once (default: '*')"
      synonyms:
      - --packages
      args: !RepeatFlagArg
        name: PACKAGES
      optional: true
    - !Flag
      description: 'To speed up debugging, use repodata cached locally in the provided
        filename. If the file does not exist, it will be created the first time. (default:
        -)'
      synonyms:
      - --cache
      args: !SimpleFlagArg
        name: CACHE
      optional: true
    - !Flag
      description: 'List the linting functions to be used and then exit (default:
        False)'
      synonyms:
      - --list-checks
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Exclude this linting function. Can be used multiple times. (default:
        -)'
      synonyms:
      - --exclude
      args: !RepeatFlagArg
        name: EXCLUDE
      optional: true
    - !Flag
      description: 'If set, the lint status will be sent to the current commit on
        github. Also needs --user and --repo to be set. Requires the env var GITHUB_TOKEN
        to be set. Note that pull requests from forks will not have access to encrypted
        variables on ci, so this feature may be of limited use. (default: False)'
      synonyms:
      - --push-status
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Github user (default: 'bioconda')"
      synonyms:
      - --user
      args: !SimpleFlagArg
        name: USER
      optional: true
    - !Flag
      description: 'Commit on github on which to update status (default: -)'
      synonyms:
      - --commit
      args: !SimpleFlagArg
        name: COMMIT
      optional: true
    - !Flag
      description: 'If set, the lint status will be posted as a comment in the corresponding
        pull request (given by --pull- request). Also needs --user and --repo to be
        set. Requires the env var GITHUB_TOKEN to be set. (default: False)'
      synonyms:
      - --push-comment
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Pull request id on github on which to post a comment. (default:
        -)'
      synonyms:
      - --pull-request
      args: !SimpleFlagArg
        name: PULL_REQUEST
      optional: true
    - !Flag
      description: "Github repo (default: 'bioconda-recipes')"
      synonyms:
      - --repo
      args: !SimpleFlagArg
        name: REPO
      optional: true
    - !Flag
      description: 'Git range (e.g. commits or something like "master HEAD" to check
        commits in HEAD vs master, or just "HEAD" to include uncommitted changes).
        All recipes modified within this range will be built if not present in the
        channel. (default: -)'
      synonyms:
      - --git-range
      args: !RepeatFlagArg
        name: GIT_RANGE
      optional: true
    - !Flag
      description: 'Default behavior is to summarize the linting results; use this
        argument to get the full results as a TSV printed to stdout. (default: False)'
      synonyms:
      - --full-report
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Attempt to fix problems where found (default: False)'
      synonyms:
      - --try-fix
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Drop into debugger on exception (default: False)'
      synonyms:
      - -P
      - --pdb
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Set logging level (debug, info, warning, error, critical) (default:\
        \ 'info')"
      synonyms:
      - --loglevel
      args: !SimpleFlagArg
        name: LOGLEVEL
      optional: true
    - !Flag
      description: 'Write log to file (default: -)'
      synonyms:
      - --logfile
      args: !SimpleFlagArg
        name: LOGFILE
      optional: true
    - !Flag
      description: "Log level for log file (default: 'debug')"
      synonyms:
      - --logfile-level
      args: !SimpleFlagArg
        name: LOGFILE_LEVEL
      optional: true
    - !Flag
      description: 'Limit lines emitted for commands executed (default: -)'
      synonyms:
      - --log-command-max-lines
      args: !SimpleFlagArg
        name: LOG_COMMAND_MAX_LINES
      optional: true
    command:
    - bioconda-utils
    - lint
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: bioconda-utils lint [-h] [--packages PACKAGES [PACKAGES ...]]\n\
      \                           [--cache CACHE] [--list-checks]\n              \
      \             [--exclude EXCLUDE [EXCLUDE ...]] [--push-status]\n          \
      \                 [--user USER] [--commit COMMIT] [--push-comment]\n       \
      \                    [--pull-request PULL_REQUEST] [--repo REPO]\n         \
      \                  [--git-range GIT_RANGE [GIT_RANGE ...]]\n               \
      \            [--full-report] [--try-fix] [-P]\n                           [--loglevel\
      \ LOGLEVEL] [--logfile LOGFILE]\n                           [--logfile-level\
      \ LOGFILE_LEVEL]\n                           [--log-command-max-lines LOG_COMMAND_MAX_LINES]\n\
      \                           [recipe_folder] [config]\n\n    Lint recipes\n\n\
      \    If --push-status is not set, reports a TSV of linting results to stdout.\n\
      \    Otherwise pushes a commit status to the specified commit on github.\n \
      \   \n\npositional arguments:\n  recipe_folder         Path to folder containing\
      \ recipes (default: recipes/)\n                        (default: -)\n  config\
      \                Path to Bioconda config (default: config.yml)\n           \
      \             (default: -)\n\noptional arguments:\n  -h, --help            show\
      \ this help message and exit\n  --packages PACKAGES [PACKAGES ...]\n       \
      \                 Glob for package[s] to build. Default is to build all\n  \
      \                      packages. Can be specified more than once (default:\n\
      \                        '*')\n  --cache CACHE         To speed up debugging,\
      \ use repodata cached locally in\n                        the provided filename.\
      \ If the file does not exist, it\n                        will be created the\
      \ first time. (default: -)\n  --list-checks         List the linting functions\
      \ to be used and then exit\n                        (default: False)\n  --exclude\
      \ EXCLUDE [EXCLUDE ...]\n                        Exclude this linting function.\
      \ Can be used multiple\n                        times. (default: -)\n  --push-status\
      \         If set, the lint status will be sent to the current\n            \
      \            commit on github. Also needs --user and --repo to be\n        \
      \                set. Requires the env var GITHUB_TOKEN to be set. Note\n  \
      \                      that pull requests from forks will not have access to\n\
      \                        encrypted variables on ci, so this feature may be of\n\
      \                        limited use. (default: False)\n  --user USER      \
      \     Github user (default: 'bioconda')\n  --commit COMMIT       Commit on github\
      \ on which to update status (default:\n                        -)\n  --push-comment\
      \        If set, the lint status will be posted as a comment in\n          \
      \              the corresponding pull request (given by --pull-\n          \
      \              request). Also needs --user and --repo to be set.\n         \
      \               Requires the env var GITHUB_TOKEN to be set. (default:\n   \
      \                     False)\n  --pull-request PULL_REQUEST\n              \
      \          Pull request id on github on which to post a comment.\n         \
      \               (default: -)\n  --repo REPO           Github repo (default:\
      \ 'bioconda-recipes')\n  --git-range GIT_RANGE [GIT_RANGE ...]\n           \
      \             Git range (e.g. commits or something like \"master\n         \
      \               HEAD\" to check commits in HEAD vs master, or just\n       \
      \                 \"HEAD\" to include uncommitted changes). All recipes\n  \
      \                      modified within this range will be built if not\n   \
      \                     present in the channel. (default: -)\n  --full-report\
      \         Default behavior is to summarize the linting results;\n          \
      \              use this argument to get the full results as a TSV\n        \
      \                printed to stdout. (default: False)\n  --try-fix          \
      \   Attempt to fix problems where found (default: False)\n  -P, --pdb      \
      \       Drop into debugger on exception (default: False)\n  --loglevel LOGLEVEL\
      \   Set logging level (debug, info, warning, error,\n                      \
      \  critical) (default: 'info')\n  --logfile LOGFILE     Write log to file (default:\
      \ -)\n  --logfile-level LOGFILE_LEVEL\n                        Log level for\
      \ log file (default: 'debug')\n  --log-command-max-lines LOG_COMMAND_MAX_LINES\n\
      \                        Limit lines emitted for commands executed (default:\
      \ -)\n"
    generated_using: *id002
  - !Command
    positional:
    - !Positional
      description: Path to yaml file specifying the configuration
      position: 0
      name: config
      optional: false
    named:
    - !Flag
      description: 'Require version to strictly match. (default: False)'
      synonyms:
      - --strict-version
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Require version and build to strictly match. (default: False)'
      synonyms:
      - --strict-build
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Only print removal plan. (default: False)'
      synonyms:
      - --dryrun
      - -n
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Remove packages from anaconda. (default: False)'
      synonyms:
      - --remove
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Print anaconda urls. (default: False)'
      synonyms:
      - --url
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Channel to check for duplicates (default: 'bioconda')"
      synonyms:
      - --channel
      args: !SimpleFlagArg
        name: CHANNEL
      optional: true
    - !Flag
      description: "Set logging level (debug, info, warning, error, critical) (default:\
        \ 'info')"
      synonyms:
      - --loglevel
      args: !SimpleFlagArg
        name: LOGLEVEL
      optional: true
    - !Flag
      description: 'Write log to file (default: -)'
      synonyms:
      - --logfile
      args: !SimpleFlagArg
        name: LOGFILE
      optional: true
    - !Flag
      description: "Log level for log file (default: 'debug')"
      synonyms:
      - --logfile-level
      args: !SimpleFlagArg
        name: LOGFILE_LEVEL
      optional: true
    - !Flag
      description: 'Limit lines emitted for commands executed (default: -)'
      synonyms:
      - --log-command-max-lines
      args: !SimpleFlagArg
        name: LOG_COMMAND_MAX_LINES
      optional: true
    command:
    - bioconda-utils
    - duplicates
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: bioconda-utils duplicates [-h] [--strict-version] [--strict-build]\n\
      \                                 [--dryrun] [--remove] [--url]\n          \
      \                       [--channel CHANNEL] [--loglevel LOGLEVEL]\n        \
      \                         [--logfile LOGFILE]\n                            \
      \     [--logfile-level LOGFILE_LEVEL]\n                                 [--log-command-max-lines\
      \ LOG_COMMAND_MAX_LINES]\n                                 config\n\n    Detect\
      \ packages in bioconda that have duplicates in the other defined\n    channels.\n\
      \    \n\npositional arguments:\n  config                Path to yaml file specifying\
      \ the configuration\n\noptional arguments:\n  -h, --help            show this\
      \ help message and exit\n  --strict-version      Require version to strictly\
      \ match. (default: False)\n  --strict-build        Require version and build\
      \ to strictly match. (default:\n                        False)\n  --dryrun,\
      \ -n          Only print removal plan. (default: False)\n  --remove        \
      \      Remove packages from anaconda. (default: False)\n  --url            \
      \     Print anaconda urls. (default: False)\n  --channel CHANNEL     Channel\
      \ to check for duplicates (default: 'bioconda')\n  --loglevel LOGLEVEL   Set\
      \ logging level (debug, info, warning, error,\n                        critical)\
      \ (default: 'info')\n  --logfile LOGFILE     Write log to file (default: -)\n\
      \  --logfile-level LOGFILE_LEVEL\n                        Log level for log\
      \ file (default: 'debug')\n  --log-command-max-lines LOG_COMMAND_MAX_LINES\n\
      \                        Limit lines emitted for commands executed (default:\
      \ -)\n"
    generated_using: *id002
  - !Command
    positional:
    - !Positional
      description: 'Path to folder containing recipes (default: recipes/) (default:
        -)'
      position: 0
      name: recipe_folder
      optional: false
    - !Positional
      description: 'Path to Bioconda config (default: config.yml) (default: -)'
      position: 1
      name: config
      optional: false
    named:
    - !Flag
      description: 'Bump package build numbers even if the only applicable pinning
        change is the python version. This is generally required unless you plan on
        building everything. (default: False)'
      synonyms:
      - --bump-only-python
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'To speed up debugging, use repodata cached locally in the provided
        filename. If the file does not exist, it will be created the first time. (default:
        -)'
      synonyms:
      - --cache
      args: !SimpleFlagArg
        name: CACHE
      optional: true
    - !Flag
      description: 'Drop into debugger on exception (default: False)'
      synonyms:
      - -P
      - --pdb
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Limit maximum number of processes used. (default: 16)'
      synonyms:
      - -t
      - --threads
      args: !SimpleFlagArg
        name: THREADS
      optional: true
    - !Flag
      description: "Set logging level (debug, info, warning, error, critical) (default:\
        \ 'info')"
      synonyms:
      - --loglevel
      args: !SimpleFlagArg
        name: LOGLEVEL
      optional: true
    - !Flag
      description: 'Write log to file (default: -)'
      synonyms:
      - --logfile
      args: !SimpleFlagArg
        name: LOGFILE
      optional: true
    - !Flag
      description: "Log level for log file (default: 'debug')"
      synonyms:
      - --logfile-level
      args: !SimpleFlagArg
        name: LOGFILE_LEVEL
      optional: true
    - !Flag
      description: 'Limit lines emitted for commands executed (default: -)'
      synonyms:
      - --log-command-max-lines
      args: !SimpleFlagArg
        name: LOG_COMMAND_MAX_LINES
      optional: true
    - !Flag
      description: ''
      synonyms:
      - --packages
      args: !RepeatFlagArg
        name: PACKAGES
      optional: true
    command:
    - bioconda-utils
    - update-pinning
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: ''
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: bioconda-utils update-pinning [-h] [--packages PACKAGES [PACKAGES\
      \ ...]]\n                                     [--skip-additional-channels [SKIP_ADDITIONAL_CHANNELS\
      \ [SKIP_ADDITIONAL_CHANNELS ...]]]\n                                     [--bump-only-python]\
      \ [--cache CACHE] [-P]\n                                     [-t THREADS] [--loglevel\
      \ LOGLEVEL]\n                                     [--logfile LOGFILE]\n    \
      \                                 [--logfile-level LOGFILE_LEVEL]\n        \
      \                             [--log-command-max-lines LOG_COMMAND_MAX_LINES]\n\
      \                                     [recipe_folder] [config]\n\nBump a package\
      \ build number and all dependencies as required due\n    to a change in pinnings\n\
      \    \n\npositional arguments:\n  recipe_folder         Path to folder containing\
      \ recipes (default: recipes/)\n                        (default: -)\n  config\
      \                Path to Bioconda config (default: config.yml)\n           \
      \             (default: -)\n\noptional arguments:\n  -h, --help            show\
      \ this help message and exit\n  --packages PACKAGES [PACKAGES ...]\n       \
      \                 Glob for package[s] to update, as needed due to a\n      \
      \                  change in pinnings (default: '*')\n  --skip-additional-channels\
      \ [SKIP_ADDITIONAL_CHANNELS [SKIP_ADDITIONAL_CHANNELS ...]]\n              \
      \          Skip updating/bumping packges that are already built\n          \
      \              with compatible pinnings in one of the given channels\n     \
      \                   in addition to those listed in 'config'. (default: -)\n\
      \  --bump-only-python    Bump package build numbers even if the only applicable\n\
      \                        pinning change is the python version. This is\n   \
      \                     generally required unless you plan on building\n     \
      \                   everything. (default: False)\n  --cache CACHE         To\
      \ speed up debugging, use repodata cached locally in\n                     \
      \   the provided filename. If the file does not exist, it\n                \
      \        will be created the first time. (default: -)\n  -P, --pdb         \
      \    Drop into debugger on exception (default: False)\n  -t THREADS, --threads\
      \ THREADS\n                        Limit maximum number of processes used. (default:\
      \ 16)\n  --loglevel LOGLEVEL   Set logging level (debug, info, warning, error,\n\
      \                        critical) (default: 'info')\n  --logfile LOGFILE  \
      \   Write log to file (default: -)\n  --logfile-level LOGFILE_LEVEL\n      \
      \                  Log level for log file (default: 'debug')\n  --log-command-max-lines\
      \ LOG_COMMAND_MAX_LINES\n                        Limit lines emitted for commands\
      \ executed (default: -)\n"
    generated_using: *id002
  - !Command
    positional:
    - !Positional
      description: 'Path to folder containing recipes (default: recipes/) (default:
        -)'
      position: 0
      name: recipe_folder
      optional: false
    - !Positional
      description: 'Path to Bioconda config (default: config.yml) (default: -)'
      position: 1
      name: config
      optional: false
    - !Positional
      description: Bioconductor package name. This is case-sensitive, and must match
        the package name on the Bioconductor site. If "update-all-packages" is specified,
        then all packages in a given bioconductor release will be created/updated
        (--force is then implied).
      position: 2
      name: package
      optional: false
    named:
    - !Flag
      description: 'If specified, recipe will be created in RECIPES/<package>/<version>
        (default: False)'
      synonyms:
      - --versioned
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Overwrite the contents of an existing recipe. If --recursive is
        also used, then overwrite *all* recipes created. (default: False)'
      synonyms:
      - --force
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Package version to use instead of the current one (default: -)'
      synonyms:
      - --pkg-version
      args: !SimpleFlagArg
        name: PKG_VERSION
      optional: true
    - !Flag
      description: 'Version of Bioconductor to target. If not specified, then automatically
        finds the latest version of Bioconductor with the specified version in --pkg-
        version, or if --pkg-version not specified, then finds the the latest package
        version in the latest Bioconductor version (default: -)'
      synonyms:
      - --bioc-version
      args: !SimpleFlagArg
        name: BIOC_VERSION
      optional: true
    - !Flag
      description: 'Creates the recipes for all Bioconductor and CRAN dependencies
        of the specified package. (default: False)'
      synonyms:
      - --recursive
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "[SKIP_IF_IN_CHANNELS [SKIP_IF_IN_CHANNELS ...]] When --recursive\
        \ is used, it will build *all* recipes. Use this argument to skip recursive\
        \ building for packages that already exist in the packages listed here. (default:\
        \ ['conda-forge', 'bioconda'])"
      synonyms:
      - --skip-if-in-channels
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Set logging level (debug, info, warning, error, critical) (default:\
        \ 'debug')"
      synonyms:
      - --loglevel
      args: !SimpleFlagArg
        name: LOGLEVEL
      optional: true
    - !Flag
      description: 'Write log to file (default: -)'
      synonyms:
      - --logfile
      args: !SimpleFlagArg
        name: LOGFILE
      optional: true
    - !Flag
      description: "Log level for log file (default: 'debug')"
      synonyms:
      - --logfile-level
      args: !SimpleFlagArg
        name: LOGFILE_LEVEL
      optional: true
    - !Flag
      description: 'Limit lines emitted for commands executed (default: -)'
      synonyms:
      - --log-command-max-lines
      args: !SimpleFlagArg
        name: LOG_COMMAND_MAX_LINES
      optional: true
    command:
    - bioconda-utils
    - bioconductor-skeleton
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: bioconda-utils bioconductor-skeleton [-h] [--versioned] [--force]\n\
      \                                            [--pkg-version PKG_VERSION]\n \
      \                                           [--bioc-version BIOC_VERSION]\n\
      \                                            [--recursive]\n               \
      \                             [--skip-if-in-channels [SKIP_IF_IN_CHANNELS [SKIP_IF_IN_CHANNELS\
      \ ...]]]\n                                            [--loglevel LOGLEVEL]\n\
      \                                            [--logfile LOGFILE]\n         \
      \                                   [--logfile-level LOGFILE_LEVEL]\n      \
      \                                      [--log-command-max-lines LOG_COMMAND_MAX_LINES]\n\
      \                                            [recipe_folder] [config] package\n\
      \n    Build a Bioconductor recipe. The recipe will be created in the 'recipes'\n\
      \    directory and will be prefixed by \"bioconductor-\". If --recursive is\
      \ set,\n    then any R dependency recipes will be prefixed by \"r-\".\n\n  \
      \  These R recipes must be evaluated on a case-by-case basis to determine if\n\
      \    they are relevant to biology (in which case they should be submitted to\n\
      \    bioconda) or not (submit to conda-forge).\n\n    Biology-related:\n   \
      \     'bioconda-utils clean-cran-skeleton <recipe> --no-windows'\n        and\
      \ submit to Bioconda.\n\n    Not bio-related:\n        'bioconda-utils clean-cran-skeleton\
      \ <recipe>'\n        and submit to conda-forge.\n\n    \n\npositional arguments:\n\
      \  recipe_folder         Path to folder containing recipes (default: recipes/)\n\
      \                        (default: -)\n  config                Path to Bioconda\
      \ config (default: config.yml)\n                        (default: -)\n  package\
      \               Bioconductor package name. This is case-sensitive, and\n   \
      \                     must match the package name on the Bioconductor site.\n\
      \                        If \"update-all-packages\" is specified, then all\n\
      \                        packages in a given bioconductor release will be\n\
      \                        created/updated (--force is then implied).\n\noptional\
      \ arguments:\n  -h, --help            show this help message and exit\n  --versioned\
      \           If specified, recipe will be created in\n                      \
      \  RECIPES/<package>/<version> (default: False)\n  --force               Overwrite\
      \ the contents of an existing recipe. If\n                        --recursive\
      \ is also used, then overwrite *all* recipes\n                        created.\
      \ (default: False)\n  --pkg-version PKG_VERSION\n                        Package\
      \ version to use instead of the current one\n                        (default:\
      \ -)\n  --bioc-version BIOC_VERSION\n                        Version of Bioconductor\
      \ to target. If not specified,\n                        then automatically finds\
      \ the latest version of\n                        Bioconductor with the specified\
      \ version in --pkg-\n                        version, or if --pkg-version not\
      \ specified, then finds\n                        the the latest package version\
      \ in the latest\n                        Bioconductor version (default: -)\n\
      \  --recursive           Creates the recipes for all Bioconductor and CRAN\n\
      \                        dependencies of the specified package. (default:\n\
      \                        False)\n  --skip-if-in-channels [SKIP_IF_IN_CHANNELS\
      \ [SKIP_IF_IN_CHANNELS ...]]\n                        When --recursive is used,\
      \ it will build *all* recipes.\n                        Use this argument to\
      \ skip recursive building for\n                        packages that already\
      \ exist in the packages listed\n                        here. (default: ['conda-forge',\
      \ 'bioconda'])\n  --loglevel LOGLEVEL   Set logging level (debug, info, warning,\
      \ error,\n                        critical) (default: 'debug')\n  --logfile\
      \ LOGFILE     Write log to file (default: -)\n  --logfile-level LOGFILE_LEVEL\n\
      \                        Log level for log file (default: 'debug')\n  --log-command-max-lines\
      \ LOG_COMMAND_MAX_LINES\n                        Limit lines emitted for commands\
      \ executed (default: -)\n"
    generated_using: *id002
  - !Command
    positional:
    - !Positional
      description: Path to recipe to be cleaned
      position: 0
      name: recipe
      optional: false
    named:
    - !Flag
      description: 'Use this when submitting an R package to Bioconda. After a CRAN
        skeleton is created, any Windows-related lines will be removed and the bld.bat
        file will be removed. (default: False)'
      synonyms:
      - --no-windows
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Set logging level (debug, info, warning, error, critical) (default:\
        \ 'info')"
      synonyms:
      - --loglevel
      args: !SimpleFlagArg
        name: LOGLEVEL
      optional: true
    - !Flag
      description: 'Write log to file (default: -)'
      synonyms:
      - --logfile
      args: !SimpleFlagArg
        name: LOGFILE
      optional: true
    - !Flag
      description: "Log level for log file (default: 'debug')"
      synonyms:
      - --logfile-level
      args: !SimpleFlagArg
        name: LOGFILE_LEVEL
      optional: true
    - !Flag
      description: 'Limit lines emitted for commands executed (default: -)'
      synonyms:
      - --log-command-max-lines
      args: !SimpleFlagArg
        name: LOG_COMMAND_MAX_LINES
      optional: true
    command:
    - bioconda-utils
    - clean-cran-skeleton
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: bioconda-utils clean-cran-skeleton [-h] [--no-windows]\n  \
      \                                        [--loglevel LOGLEVEL]\n           \
      \                               [--logfile LOGFILE]\n                      \
      \                    [--logfile-level LOGFILE_LEVEL]\n                     \
      \                     [--log-command-max-lines LOG_COMMAND_MAX_LINES]\n    \
      \                                      recipe\n\n    Cleans skeletons created\
      \ by ``conda skeleton cran``.\n\n    Before submitting to conda-forge or Bioconda,\
      \ recipes generated with ``conda\n    skeleton cran`` need to be cleaned up:\
      \ comments removed, licenses fixed, and\n    other linting.\n\n    Use --no-windows\
      \ for a Bioconda submission.\n    \n\npositional arguments:\n  recipe      \
      \          Path to recipe to be cleaned\n\noptional arguments:\n  -h, --help\
      \            show this help message and exit\n  --no-windows          Use this\
      \ when submitting an R package to Bioconda.\n                        After a\
      \ CRAN skeleton is created, any Windows-related\n                        lines\
      \ will be removed and the bld.bat file will be\n                        removed.\
      \ (default: False)\n  --loglevel LOGLEVEL   Set logging level (debug, info,\
      \ warning, error,\n                        critical) (default: 'info')\n  --logfile\
      \ LOGFILE     Write log to file (default: -)\n  --logfile-level LOGFILE_LEVEL\n\
      \                        Log level for log file (default: 'debug')\n  --log-command-max-lines\
      \ LOG_COMMAND_MAX_LINES\n                        Limit lines emitted for commands\
      \ executed (default: -)\n"
    generated_using: *id002
  - !Command
    positional:
    - !Positional
      description: 'Path to folder containing recipes (default: recipes/) (default:
        -)'
      position: 0
      name: recipe_folder
      optional: false
    - !Positional
      description: 'Path to Bioconda config (default: config.yml) (default: -)'
      position: 1
      name: config
      optional: false
    named:
    - !Flag
      description: "Glob(s) for package[s] to scan. Can be specified more than once\
        \ (default: '*')"
      synonyms:
      - --packages
      args: !RepeatFlagArg
        name: PACKAGES
      optional: true
    - !Flag
      description: 'Globs for package[s] to exclude from scan. Can be specified more
        than once (default: -)'
      synonyms:
      - --exclude
      args: !RepeatFlagArg
        name: EXCLUDE
      optional: true
    - !Flag
      description: 'To speed up debugging, use repodata cached locally in the provided
        filename. If the file does not exist, it will be created the first time. Caution:
        The cache will not be updated if exclude-channels is changed (default: -)'
      synonyms:
      - --cache
      args: !SimpleFlagArg
        name: CACHE
      optional: true
    - !Flag
      description: 'Write urls with permanent failure to this file (default: -)'
      synonyms:
      - --failed-urls
      args: !SimpleFlagArg
        name: FAILED_URLS
      optional: true
    - !Flag
      description: 'Write unrecognized urls to this file (default: -)'
      synonyms:
      - --unparsed-urls
      args: !SimpleFlagArg
        name: UNPARSED_URLS
      optional: true
    - !Flag
      description: 'Write status for each recipe to this file (default: -)'
      synonyms:
      - --recipe-status
      args: !SimpleFlagArg
        name: RECIPE_STATUS
      optional: true
    - !Flag
      description: "By default, only subrecipes explicitly enabled for watch in meta.yaml\
        \ are considered. Set to 'always' to exclude all subrecipes. Set to 'never'\
        \ to include all subrecipes (default: -)"
      synonyms:
      - --exclude-subrecipes
      args: !SimpleFlagArg
        name: EXCLUDE_SUBRECIPES
      optional: true
    - !Flag
      description: "Exclude recipes building packages present in other channels. Set\
        \ to 'none' to disable check. (default: 'conda-forge')"
      synonyms:
      - --exclude-channels
      args: !RepeatFlagArg
        name: EXCLUDE_CHANNELS
      optional: true
    - !Flag
      description: 'Do not exclude recipes from blacklist (default: False)'
      synonyms:
      - --ignore-blacklists
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Try to fetch python requirements. Please note that this requires
        downloading packages and executing setup.py, so presents a potential security
        problem. (default: False)'
      synonyms:
      - --fetch-requirements
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Check if recipe has active branch (default: False)'
      synonyms:
      - --check-branch
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Create branch for each update (default: False)'
      synonyms:
      - --create-branch
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Create PR for each update. Implies create-branch. (default: False)'
      synonyms:
      - --create-pr
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Check only recipes with active update (default: False)'
      synonyms:
      - --only-active
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Do not shuffle recipe order (default: False)'
      synonyms:
      - --no-shuffle
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Exit after ARG updates (default: 0)'
      synonyms:
      - --max-updates
      args: !SimpleFlagArg
        name: MAX_UPDATES
      optional: true
    - !Flag
      description: "Don't update remote git or github\" (default: False)"
      synonyms:
      - --dry-run
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Don't check for pinning updates (default: False)"
      synonyms:
      - --no-check-pinnings
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Don't process recipes in graph order or add dependent recipes\
        \ to checks. Implies --no-skip-pending-deps. (default: False)"
      synonyms:
      - --no-follow-graph
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Don't check for version updates to recipes (default: False)"
      synonyms:
      - --no-check-version-update
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Don't check for recipes having a dependency with a pending update.\
        \ Update all recipes, including those having deps in need or rebuild. (default:\
        \ False)"
      synonyms:
      - --no-check-pending-deps
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Bump package build numbers even if the only applicable pinning
        change is the python version. This is generally required unless you plan on
        building everything. (default: False)'
      synonyms:
      - --bump-only-python
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '[SIGN]         Enable signing. Optionally takes keyid. (default:
        0)'
      synonyms:
      - --sign
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'COMMIT_AS Set user and email to use for committing. Takes exactly
        two arguments. (default: -)'
      synonyms:
      - --commit-as
      args: !SimpleFlagArg
        name: COMMIT_AS
      optional: true
    - !Flag
      description: 'Limit maximum number of processes used. (default: 16)'
      synonyms:
      - -t
      - --threads
      args: !SimpleFlagArg
        name: THREADS
      optional: true
    - !Flag
      description: 'Drop into debugger on exception (default: False)'
      synonyms:
      - -P
      - --pdb
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Set logging level (debug, info, warning, error, critical) (default:\
        \ 'info')"
      synonyms:
      - --loglevel
      args: !SimpleFlagArg
        name: LOGLEVEL
      optional: true
    - !Flag
      description: 'Write log to file (default: -)'
      synonyms:
      - --logfile
      args: !SimpleFlagArg
        name: LOGFILE
      optional: true
    - !Flag
      description: "Log level for log file (default: 'debug')"
      synonyms:
      - --logfile-level
      args: !SimpleFlagArg
        name: LOGFILE_LEVEL
      optional: true
    - !Flag
      description: 'Limit lines emitted for commands executed (default: -)'
      synonyms:
      - --log-command-max-lines
      args: !SimpleFlagArg
        name: LOG_COMMAND_MAX_LINES
      optional: true
    command:
    - bioconda-utils
    - autobump
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: bioconda-utils autobump [-h] [--packages PACKAGES [PACKAGES\
      \ ...]]\n                               [--exclude EXCLUDE [EXCLUDE ...]]\n\
      \                               [--cache CACHE] [--failed-urls FAILED_URLS]\n\
      \                               [--unparsed-urls UNPARSED_URLS]\n          \
      \                     [--recipe-status RECIPE_STATUS]\n                    \
      \           [--exclude-subrecipes EXCLUDE_SUBRECIPES]\n                    \
      \           [--exclude-channels EXCLUDE_CHANNELS [EXCLUDE_CHANNELS ...]]\n \
      \                              [--ignore-blacklists] [--fetch-requirements]\n\
      \                               [--check-branch] [--create-branch]\n       \
      \                        [--create-pr] [--only-active] [--no-shuffle]\n    \
      \                           [--max-updates MAX_UPDATES] [--dry-run]\n      \
      \                         [--no-check-pinnings] [--no-follow-graph]\n      \
      \                         [--no-check-version-update]\n                    \
      \           [--no-check-pending-deps] [--bump-only-python]\n               \
      \                [--sign [SIGN]]\n                               [--commit-as\
      \ COMMIT_AS COMMIT_AS] [-t THREADS]\n                               [-P] [--loglevel\
      \ LOGLEVEL] [--logfile LOGFILE]\n                               [--logfile-level\
      \ LOGFILE_LEVEL]\n                               [--log-command-max-lines LOG_COMMAND_MAX_LINES]\n\
      \                               [recipe_folder] [config]\n\n    Updates recipes\
      \ in recipe_folder\n    \n\npositional arguments:\n  recipe_folder         Path\
      \ to folder containing recipes (default: recipes/)\n                       \
      \ (default: -)\n  config                Path to Bioconda config (default: config.yml)\n\
      \                        (default: -)\n\noptional arguments:\n  -h, --help \
      \           show this help message and exit\n  --packages PACKAGES [PACKAGES\
      \ ...]\n                        Glob(s) for package[s] to scan. Can be specified\
      \ more\n                        than once (default: '*')\n  --exclude EXCLUDE\
      \ [EXCLUDE ...]\n                        Globs for package[s] to exclude from\
      \ scan. Can be\n                        specified more than once (default: -)\n\
      \  --cache CACHE         To speed up debugging, use repodata cached locally\
      \ in\n                        the provided filename. If the file does not exist,\
      \ it\n                        will be created the first time. Caution: The cache\n\
      \                        will not be updated if exclude-channels is changed\n\
      \                        (default: -)\n  --failed-urls FAILED_URLS\n       \
      \                 Write urls with permanent failure to this file\n         \
      \               (default: -)\n  --unparsed-urls UNPARSED_URLS\n            \
      \            Write unrecognized urls to this file (default: -)\n  --recipe-status\
      \ RECIPE_STATUS\n                        Write status for each recipe to this\
      \ file (default: -)\n  --exclude-subrecipes EXCLUDE_SUBRECIPES\n           \
      \             By default, only subrecipes explicitly enabled for\n         \
      \               watch in meta.yaml are considered. Set to 'always' to\n    \
      \                    exclude all subrecipes. Set to 'never' to include all\n\
      \                        subrecipes (default: -)\n  --exclude-channels EXCLUDE_CHANNELS\
      \ [EXCLUDE_CHANNELS ...]\n                        Exclude recipes building packages\
      \ present in other\n                        channels. Set to 'none' to disable\
      \ check. (default:\n                        'conda-forge')\n  --ignore-blacklists\
      \   Do not exclude recipes from blacklist (default: False)\n  --fetch-requirements\
      \  Try to fetch python requirements. Please note that\n                    \
      \    this requires downloading packages and executing\n                    \
      \    setup.py, so presents a potential security problem.\n                 \
      \       (default: False)\n  --check-branch        Check if recipe has active\
      \ branch (default: False)\n  --create-branch       Create branch for each update\
      \ (default: False)\n  --create-pr           Create PR for each update. Implies\
      \ create-branch.\n                        (default: False)\n  --only-active\
      \         Check only recipes with active update (default: False)\n  --no-shuffle\
      \          Do not shuffle recipe order (default: False)\n  --max-updates MAX_UPDATES\n\
      \                        Exit after ARG updates (default: 0)\n  --dry-run  \
      \           Don't update remote git or github\" (default: False)\n  --no-check-pinnings\
      \   Don't check for pinning updates (default: False)\n  --no-follow-graph  \
      \   Don't process recipes in graph order or add dependent\n                \
      \        recipes to checks. Implies --no-skip-pending-deps.\n              \
      \          (default: False)\n  --no-check-version-update\n                 \
      \       Don't check for version updates to recipes (default:\n             \
      \           False)\n  --no-check-pending-deps\n                        Don't\
      \ check for recipes having a dependency with a\n                        pending\
      \ update. Update all recipes, including those\n                        having\
      \ deps in need or rebuild. (default: False)\n  --bump-only-python    Bump package\
      \ build numbers even if the only applicable\n                        pinning\
      \ change is the python version. This is\n                        generally required\
      \ unless you plan on building\n                        everything. (default:\
      \ False)\n  --sign [SIGN]         Enable signing. Optionally takes keyid. (default:\
      \ 0)\n  --commit-as COMMIT_AS COMMIT_AS\n                        Set user and\
      \ email to use for committing. Takes\n                        exactly two arguments.\
      \ (default: -)\n  -t THREADS, --threads THREADS\n                        Limit\
      \ maximum number of processes used. (default: 16)\n  -P, --pdb             Drop\
      \ into debugger on exception (default: False)\n  --loglevel LOGLEVEL   Set logging\
      \ level (debug, info, warning, error,\n                        critical) (default:\
      \ 'info')\n  --logfile LOGFILE     Write log to file (default: -)\n  --logfile-level\
      \ LOGFILE_LEVEL\n                        Log level for log file (default: 'debug')\n\
      \  --log-command-max-lines LOG_COMMAND_MAX_LINES\n                        Limit\
      \ lines emitted for commands executed (default: -)\n"
    generated_using: *id002
  - *id003
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: bioconda-utils [-h]\n                      {build,dag,dependent,lint,duplicates,update-pinning,bioconductor-skeleton,clean-cran-skeleton,autobump,bot}\n\
    \                      ...\n\npositional arguments:\n  {build,dag,dependent,lint,duplicates,update-pinning,bioconductor-skeleton,clean-cran-skeleton,autobump,bot}\n\
    \    build\n    dag                 Export the DAG of packages to a graph format\
    \ file for\n                        visualization\n    dependent           Print\
    \ recipes dependent on a package\n    lint                Lint recipes If --push-status\
    \ is not set, reports a\n                        TSV of linting results to stdout.\
    \ Otherwise pushes a\n                        commit status to the specified commit\
    \ on github.\n    duplicates          Detect packages in bioconda that have duplicates\
    \ in\n                        the other defined channels.\n    update-pinning\
    \      Bump a package build number and all dependencies as\n                 \
    \       required due to a change in pinnings\n    bioconductor-skeleton\n    \
    \                    Build a Bioconductor recipe. The recipe will be\n       \
    \                 created in the 'recipes' directory and will be\n           \
    \             prefixed by \"bioconductor-\". If --recursive is set,\n        \
    \                then any R dependency recipes will be prefixed by\n         \
    \               \"r-\". These R recipes must be evaluated on a case-by-\n    \
    \                    case basis to determine if they are relevant to\n       \
    \                 biology (in which case they should be submitted to\n       \
    \                 bioconda) or not (submit to conda-forge). Biology-\n       \
    \                 related: 'bioconda-utils clean-cran-skeleton <recipe>\n    \
    \                    --no-windows' and submit to Bioconda. Not bio-related:\n\
    \                        'bioconda-utils clean-cran-skeleton <recipe>' and\n \
    \                       submit to conda-forge.\n    clean-cran-skeleton\n    \
    \                    Cleans skeletons created by ``conda skeleton cran``.\n  \
    \                      Before submitting to conda-forge or Bioconda, recipes\n\
    \                        generated with ``conda skeleton cran`` need to be\n \
    \                       cleaned up: comments removed, licenses fixed, and\n  \
    \                      other linting. Use --no-windows for a Bioconda\n      \
    \                  submission.\n    autobump            Updates recipes in recipe_folder\n\
    \    bot                 Locally accedd bioconda-bot command API To run the bot\n\
    \                        locally, use: $ gunicorn\n                        bioconda_utils.bot:init_app_internal_celery\
    \ --worker-\n                        class aiohttp.worker.GunicornWebWorker You\
    \ can append\n                        --reload to have gunicorn reload if any\
    \ of the python\n                        files change.\n\noptional arguments:\n\
    \  -h, --help            show this help message and exit\n"
  generated_using: *id002
subcommands: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: bioconda-utils bot [-h] [--loglevel LOGLEVEL]\n\nLocally accedd\
  \ bioconda-bot command API\n\n    To run the bot locally, use:\n\n    $ gunicorn\
  \ bioconda_utils.bot:init_app_internal_celery --worker-class aiohttp.worker.GunicornWebWorker\n\
  \n    You can append --reload to have gunicorn reload if any of the python files\
  \ change.\n    \n\noptional arguments:\n  -h, --help           show this help message\
  \ and exit\n  --loglevel LOGLEVEL  Log level (default: 'info')\n"
generated_using: *id002
