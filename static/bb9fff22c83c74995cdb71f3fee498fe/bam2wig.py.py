from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, Boolean

Bam2Wig_Py_V0_1_0 = CommandToolBuilder(tool="bam2wig.py", base_command=["bam2wig.py"], inputs=[ToolInput(tag="in_input_file", input_type=File(optional=True), prefix="--input-file", doc=InputDocumentation(doc="Alignment file in BAM format. BAM file must be sorted\nand indexed using samTools. .bam and .bai files should\nbe placed in the same directory.")), ToolInput(tag="in_chrom_size", input_type=Int(optional=True), prefix="--chromSize", doc=InputDocumentation(doc="Chromosome size file. Tab or space separated text file\nwith 2 columns: first column is chromosome name/ID,\nsecond column is chromosome size. Chromosome name\n(such as 'chr1') should be consistent between this\nfile and the BAM file.")), ToolInput(tag="in_out_prefix", input_type=File(optional=True), prefix="--out-prefix", doc=InputDocumentation(doc="Prefix of output wiggle files(s). One wiggle file will\nbe generated for non strand-specific data, two wiggle\nfiles ('Prefix_Forward.wig' and 'Prefix_Reverse.wig')\nwill be generated for strand-specific RNA-seq data.")), ToolInput(tag="in_wig_sum", input_type=Int(optional=True), prefix="--wigsum", doc=InputDocumentation(doc="Specified wigsum. Eg: 1,000,000,000 equals to coverage\nof 10 million 100nt reads. Ignore this option to\ndisable normalization")), ToolInput(tag="in_skip_multi_hits", input_type=Boolean(optional=True), prefix="--skip-multi-hits", doc=InputDocumentation(doc="Skip non-unique hit reads.")), ToolInput(tag="in_strand", input_type=Int(optional=True), prefix="--strand", doc=InputDocumentation(doc="How read(s) were stranded during sequencing. For\nexample: --strand='1++,1--,2+-,2-+' means that this is\na pair-end, strand-specific RNA-seq data, and the\nstrand rule is: read1 mapped to '+' => parental gene\non '+'; read1 mapped to '-' => parental gene on '-';\nread2 mapped to '+' => parental gene on '-'; read2\nmapped to '-' => parental gene on '+'.  If you are not\nsure about the strand rule, run 'infer_experiment.py'\ndefault=none (Not a strand specific RNA-seq data).")), ToolInput(tag="in_mapq", input_type=Int(optional=True), prefix="--mapq", doc=InputDocumentation(doc="Minimum mapping quality to determine 'uniquely\nmapped'. default=30\n"))], outputs=[ToolOutput(tag="out_out_prefix", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_prefix", type_hint=File()), doc=OutputDocumentation(doc="Prefix of output wiggle files(s). One wiggle file will\nbe generated for non strand-specific data, two wiggle\nfiles ('Prefix_Forward.wig' and 'Prefix_Reverse.wig')\nwill be generated for strand-specific RNA-seq data."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bam2Wig_Py_V0_1_0().translate("wdl", allow_empty_container=True)

