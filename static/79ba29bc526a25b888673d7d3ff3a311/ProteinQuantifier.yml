!Command
positional: []
named:
- !Flag
  description: "*                        Input file (valid formats: 'featureXML',\
    \ 'consensusXML', 'idXML')"
  synonyms:
  - -in
  args: !SimpleFlagArg
    name: file
  optional: true
- !Flag
  description: "Protein inference results for the identification runs that were used\
    \ to annotate the input (e.g. from ProteinProphet via IDFileConverter or Fido\
    \ via FidoAdapter). Information about indistinguishable proteins will be used\
    \ for protein quantification. (valid formats: 'idXML')"
  synonyms:
  - -protein_groups
  args: !SimpleFlagArg
    name: file
  optional: true
- !Flag
  description: "Input file containing the experimental design (valid formats: 'tsv')"
  synonyms:
  - -design
  args: !SimpleFlagArg
    name: file
  optional: true
- !Flag
  description: "Output file for protein abundances (valid formats: 'csv')"
  synonyms:
  - -out
  args: !SimpleFlagArg
    name: file
  optional: true
- !Flag
  description: "Output file for peptide abundances (valid formats: 'csv')"
  synonyms:
  - -peptide_out
  args: !SimpleFlagArg
    name: file
  optional: true
- !Flag
  description: "Output file (mzTab) (valid formats: 'mzTab')"
  synonyms:
  - -mztab
  args: !SimpleFlagArg
    name: file
  optional: true
- !Flag
  description: "Calculate protein abundance from this number of proteotypic peptides\
    \ (most abundant first; '0' for all) (default: '3' min: '0')"
  synonyms:
  - -top
  args: !SimpleFlagArg
    name: number
  optional: true
- !Flag
  description: "Averaging method used to compute protein abundances from peptide abundances\
    \ (default: 'median' valid: 'median', 'mean', 'weighted_mean', 'sum')"
  synonyms:
  - -average
  args: !SimpleFlagArg
    name: choice
  optional: true
- !Flag
  description: Include results for proteins with fewer proteotypic peptides than indicated
    by 'top' (no effect if 'top' is 0 or 1)
  synonyms:
  - -include_all
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Distinguish between fraction and charge states of a peptide. For peptides,
    abundances will be reported separately for each fraction and charge; for proteins,
    abundances will be computed based only on the most prevalent charge observed of
    each peptide (over all fractions). By default, abundances are summed over all
    charge states.
  synonyms:
  - -best_charge_and_fraction
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Pre-process identifications with greedy resolution of shared peptides\
    \ based on the protein group probabilities. (Only works with an idXML file given\
    \ as protein_groups parameter). (default: 'false' valid: 'true', 'false')"
  synonyms:
  - -greedy_group_resolution
  args: !SimpleFlagArg
    name: choice
  optional: true
- !Flag
  description: 'Add the log2 ratios of the abundance values to the output. Format:
    log_2(x_0/x_0) <sep> log_2(x_1/x_0) <sep> log_2(x_2/x_0) ...'
  synonyms:
  - -ratios
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Add the log2 ratios for a triple SILAC experiment to the output. Only
    applicable to consensus maps of exactly three sub-maps. Format: log_2(heavy/light)
    <sep> log_2(heavy/middle) <sep> log_2(middle/light)'
  synonyms:
  - -ratiosSILAC
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Use the given TOPP INI file
  synonyms:
  - -ini
  args: !SimpleFlagArg
    name: file
  optional: true
- !Flag
  description: "Sets the number of threads allowed to be used by the TOPP tool (default:\
    \ '1')"
  synonyms:
  - -threads
  args: !SimpleFlagArg
    name: n
  optional: true
- !Flag
  description: Writes the default configuration file
  synonyms:
  - -write_ini
  args: !SimpleFlagArg
    name: file
  optional: true
- !Flag
  description: Shows all options (including advanced)
  synonyms:
  - --helphelp
  args: !EmptyFlagArg {}
  optional: true
command:
- ProteinQuantifier
parent:
subcommands: []
help_flag: !Flag
  description: Shows options
  synonyms:
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "\nProteinQuantifier -- Compute peptide and protein abundances\nFull documentation:\
  \ http://www.openms.de/documentation/TOPP_ProteinQuantifier.html\nVersion: 2.5.0-HEAD-HASH-NOTFOUND-HEAD-HASH-NOTFOUND\
  \ May 19 2020, 23:12:02, Revision: HEAD-HASH-NOTFOUND\nTo cite OpenMS:\n  Rost HL,\
  \ Sachsenberg T, Aiche S, Bielow C et al.. OpenMS: a flexible open-source software\
  \ platform for mass spectrometry data analysis. Nat Meth. 2016; 13, 9: 741-748.\
  \ doi:10.1038/nmeth.3959.\n\nUsage:\n  ProteinQuantifier <options>\n\nOptions (mandatory\
  \ options marked with '*'):\n  -in <file>*                        Input file (valid\
  \ formats: 'featureXML', 'consensusXML', 'idXML')\n  -protein_groups <file>    \
  \         Protein inference results for the identification runs that were used to\
  \ annotate the input (e.g. from ProteinProphet via IDFileConverter or Fido via FidoAdapter).\n\
  \                                     Information about indistinguishable proteins\
  \ will be used for protein quantification. (valid formats: 'idXML')\n  -design <file>\
  \                     Input file containing the experimental design (valid formats:\
  \ 'tsv')\n  -out <file>                        Output file for protein abundances\
  \ (valid formats: 'csv')\n  -peptide_out <file>                Output file for peptide\
  \ abundances (valid formats: 'csv')\n  -mztab <file>                      Output\
  \ file (mzTab) (valid formats: 'mzTab')\n                                     \n\
  \  -top <number>                      Calculate protein abundance from this number\
  \ of proteotypic peptides (most abundant first; '0' for all) (default: '3' min:\
  \ '0')\n  -average <choice>                  Averaging method used to compute protein\
  \ abundances from peptide abundances (default: 'median' valid: 'median', 'mean',\
  \ 'weighted_mean', 'sum')\n  -include_all                       Include results\
  \ for proteins with fewer proteotypic peptides than indicated by 'top' (no effect\
  \ if 'top' is 0 or 1)\n  -best_charge_and_fraction          Distinguish between\
  \ fraction and charge states of a peptide. For peptides, abundances will be reported\
  \ separately for each fraction and charge;\n                                   \
  \  for proteins, abundances will be computed based only on the most prevalent charge\
  \ observed of each peptide (over all fractions).\n                             \
  \        By default, abundances are summed over all charge states.\n\nAdditional\
  \ options for consensus maps (and identification results comprising multiple runs):\n\
  \  -consensus:normalize               Scale peptide abundances so that medians of\
  \ all samples are equal\n  -consensus:fix_peptides            Use the same peptides\
  \ for protein quantification across all samples.\n                             \
  \        With 'top 0', all peptides that occur in every sample are considered.\n\
  \                                     Otherwise ('top N'), the N peptides that occur\
  \ in the most samples (independently of each other) are selected,\n            \
  \                         breaking ties by total abundance (there is no guarantee\
  \ that the best co-ocurring peptides are chosen!).\n\n  -greedy_group_resolution\
  \ <choice>  Pre-process identifications with greedy resolution of shared peptides\
  \ based on the protein group probabilities. (Only works with an idXML file given\
  \ as protein_groups parameter). (default: 'false' valid: 'true', 'false')\n  -ratios\
  \                            Add the log2 ratios of the abundance values to the\
  \ output. Format: log_2(x_0/x_0) <sep> log_2(x_1/x_0) <sep> log_2(x_2/x_0) ...\n\
  \  -ratiosSILAC                       Add the log2 ratios for a triple SILAC experiment\
  \ to the output. Only applicable to consensus maps of exactly three sub-maps. Format:\
  \ log_2(heavy/light) <sep> log_2(heavy/middle) <sep> log_2(middle/light)\n\nOutput\
  \ formatting options:\n  -format:separator <sep>            Character(s) used to\
  \ separate fields; by default, the 'tab' character is used\n  -format:quoting <method>\
  \           Method for quoting of strings: 'none' for no quoting, 'double' for quoting\
  \ with doubling of embedded quotes,\n                                     'escape'\
  \ for quoting with backslash-escaping of embedded quotes (default: 'double' valid:\
  \ 'none', 'double', 'escape')\n  -format:replacement <x>            If 'quoting'\
  \ is 'none', used to replace occurrences of the separator in strings before writing\
  \ (default: '_')\n\n                                     \nCommon TOPP options:\n\
  \  -ini <file>                        Use the given TOPP INI file\n  -threads <n>\
  \                       Sets the number of threads allowed to be used by the TOPP\
  \ tool (default: '1')\n  -write_ini <file>                  Writes the default configuration\
  \ file\n  --help                             Shows options\n  --helphelp       \
  \                  Shows all options (including advanced)\n\n"
generated_using:
- --help
