!Command
command:
- convert_bc_to_binary_RY.py
positional:
- !Positional
  optional: false
  position: 0
  name: infile
  description: Path to fastq input file.
named:
- !Flag
  optional: true
  synonyms:
  - -o
  - --outfile
  description: Write results to this file.
  args: !SimpleFlagArg
    name: OUTFILE
- !Flag
  optional: true
  synonyms:
  - -f
  - --fasta-format
  description: Read and write fasta instead of fastq format.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -v
  - --verbose
  description: Be verbose.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -d
  - --debug
  description: Print lots of debugging information
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "usage: convert_bc_to_binary_RY.py [-h] [-o OUTFILE] [-f] [-v] [-d] infile\n\
  \nConvert standard nucleotides in FASTQ or FASTA format to IUPAC nucleotide codes\n\
  used for binary RY-space barcodes.\n\nA and G are converted to R. T, U and C are\
  \ converted to Y. By default output is\nwritten to stdout.\n\nExample usage:\n-\
  \ write converted sequences from file in.fa to file file out.fa:\nconvert_bc_to_binary_RY.py\
  \ in.fastq --outfile out.fastq\n\npositional arguments:\n  infile              \
  \  Path to fastq input file.\n\noptional arguments:\n  -h, --help            show\
  \ this help message and exit\n  -o OUTFILE, --outfile OUTFILE\n                \
  \        Write results to this file.\n  -f, --fasta-format    Read and write fasta\
  \ instead of fastq format.\n  -v, --verbose         Be verbose.\n  -d, --debug \
  \          Print lots of debugging information\n"
generated_using:
- --help
docker_image:
