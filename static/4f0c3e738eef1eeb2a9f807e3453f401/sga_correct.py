from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Int, String

Sga_Correct_V0_1_0 = CommandToolBuilder(tool="sga_correct", base_command=["sga", "correct"], inputs=[ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="display verbose output")), ToolInput(tag="in_prefix", input_type=File(optional=True), prefix="--prefix", doc=InputDocumentation(doc="use PREFIX for the names of the index files (default: prefix of the input file)")), ToolInput(tag="in_outfile", input_type=File(optional=True), prefix="--outfile", doc=InputDocumentation(doc="write the corrected reads to FILE (default: READSFILE.ec.fa)")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="use NUM threads for the computation (default: 1)")), ToolInput(tag="in_discard", input_type=Boolean(optional=True), prefix="--discard", doc=InputDocumentation(doc="detect and discard low-quality reads")), ToolInput(tag="in_sample_rate", input_type=Int(optional=True), prefix="--sample-rate", doc=InputDocumentation(doc="use occurrence array sample rate of N in the FM-index. Higher values use significantly\nless memory at the cost of higher runtime. This value must be a power of 2 (default: 128)")), ToolInput(tag="in_algorithm", input_type=String(optional=True), prefix="--algorithm", doc=InputDocumentation(doc="specify the correction algorithm to use. STR must be one of kmer, hybrid, overlap. (default: kmer)")), ToolInput(tag="in_metrics", input_type=File(optional=True), prefix="--metrics", doc=InputDocumentation(doc="collect error correction metrics (error rate by position in read, etc) and write them to FILE")), ToolInput(tag="in_km_er_size", input_type=Int(optional=True), prefix="--kmer-size", doc=InputDocumentation(doc="The length of the kmer to use. (default: 31)")), ToolInput(tag="in_km_er_threshold", input_type=Int(optional=True), prefix="--kmer-threshold", doc=InputDocumentation(doc="Attempt to correct kmers that are seen less than N times. (default: 3)")), ToolInput(tag="in_km_er_rounds", input_type=Int(optional=True), prefix="--kmer-rounds", doc=InputDocumentation(doc="Perform N rounds of k-mer correction, correcting up to N bases (default: 10)")), ToolInput(tag="in_count_offset", input_type=Int(optional=True), prefix="--count-offset", doc=InputDocumentation(doc="When correcting a kmer, require the count of the new kmer is at least +N higher than the count of the old kmer. (default: 1)")), ToolInput(tag="in_learn", input_type=Boolean(optional=True), prefix="--learn", doc=InputDocumentation(doc="Attempt to learn the k-mer correction threshold (experimental). Overrides -x parameter.")), ToolInput(tag="in_error_rate", input_type=Boolean(optional=True), prefix="--error-rate", doc=InputDocumentation(doc="the maximum error rate allowed between two sequences to consider them overlapped (default: 0.04)")), ToolInput(tag="in_min_overlap", input_type=Int(optional=True), prefix="--min-overlap", doc=InputDocumentation(doc="minimum overlap required between two reads (default: 45)")), ToolInput(tag="in_min_count_max_base", input_type=Int(optional=True), prefix="--min-count-max-base", doc=InputDocumentation(doc="minimum count of the base that has the highest count in overlap correction.\nThe base of the read is only corrected if the maximum base has at least this count.\nShould avoid mis-corrections in low coverage regions (default: 4)")), ToolInput(tag="in_base_threshold", input_type=Int(optional=True), prefix="--base-threshold", doc=InputDocumentation(doc="Attempt to correct bases in a read that are seen less than N times (default: 2)")), ToolInput(tag="in_conflict", input_type=Int(optional=True), prefix="--conflict", doc=InputDocumentation(doc="use INT as the threshold to detect a conflicted base in the multi-overlap (default: 5)")), ToolInput(tag="in_seed_length", input_type=Int(optional=True), prefix="--seed-length", doc=InputDocumentation(doc="force the seed length to be LEN. By default, the seed length in the overlap step\nis calculated to guarantee all overlaps with --error-rate differences are found.\nThis option removes the guarantee but will be (much) faster. As SGA can tolerate some\nmissing edges, this option may be preferable for some data sets.")), ToolInput(tag="in_seed_stride", input_type=Int(optional=True), prefix="--seed-stride", doc=InputDocumentation(doc="force the seed stride to be LEN. This parameter will be ignored unless --seed-length\nis specified (see above). This parameter defaults to the same value as --seed-length")), ToolInput(tag="in_branch_cut_off", input_type=Int(optional=True), prefix="--branch-cutoff", doc=InputDocumentation(doc="stop the overlap search at N branches. This parameter is used to control the search time for\nhighly-repetitive reads. If the number of branches exceeds N, the search stops and the read\nwill not be corrected. This is not enabled by default.")), ToolInput(tag="in_rounds", input_type=Int(optional=True), prefix="--rounds", doc=InputDocumentation(doc="iteratively correct reads up to a maximum of NUM rounds (default: 1)"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Sga_Correct_V0_1_0().translate("wdl", allow_empty_container=True)

