from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File

Mmseqs_Result2Msa_V0_1_0 = CommandToolBuilder(tool="mmseqs_result2msa", base_command=["mmseqs", "result2msa"], inputs=[ToolInput(tag="in_comp_bias_corr", input_type=Boolean(optional=True), prefix="--comp-bias-corr", doc=InputDocumentation(doc="1               correct for locally biased amino acid composition [0,1]")), ToolInput(tag="in_e_profile", input_type=Boolean(optional=True), prefix="--e-profile", doc=InputDocumentation(doc="0.001           includes sequences matches with < e-value thr. into the profile [>=0.0]")), ToolInput(tag="in_filter_msa", input_type=Boolean(optional=True), prefix="--filter-msa", doc=InputDocumentation(doc="0               filter msa: 0: do not filter, 1: filter")), ToolInput(tag="in_max_seq_id", input_type=Boolean(optional=True), prefix="--max-seq-id", doc=InputDocumentation(doc="0.900           reduce redundancy of output MSA using max. pairwise sequence identity [0.0,1.0]")), ToolInput(tag="in_qid", input_type=Boolean(optional=True), prefix="--qid", doc=InputDocumentation(doc="0.000           reduce diversity of output MSAs using min.seq. identity with query sequences [0.0,1.0]")), ToolInput(tag="in_two_zero_dot_zero_zero_zero", input_type=Boolean(optional=True), prefix="-20.000", doc=InputDocumentation(doc="reduce diversity of output MSAs using min. score per aligned residue with query sequences [-50.0,100.0]")), ToolInput(tag="in_cov", input_type=Boolean(optional=True), prefix="--cov", doc=InputDocumentation(doc="0.000           filter output MSAs using min. fraction of query residues covered by matched sequences [0.0,1.0]")), ToolInput(tag="in_diff", input_type=Boolean(optional=True), prefix="--diff", doc=InputDocumentation(doc="1000            filter MSAs by selecting most diverse set of sequences, keeping at least this many seqs in each MSA block of length 50")), ToolInput(tag="in_allow_deletion", input_type=Boolean(optional=True), prefix="--allow-deletion", doc=InputDocumentation(doc="false           allow deletions in a MSA")), ToolInput(tag="in_compress", input_type=Boolean(optional=True), prefix="--compress", doc=InputDocumentation(doc="false           create MSA in ca3m format")), ToolInput(tag="in_summarize", input_type=Boolean(optional=True), prefix="--summarize", doc=InputDocumentation(doc="false           summarize cluster headers into a single header description")), ToolInput(tag="in_sub_mat", input_type=File(optional=True), prefix="--sub-mat", doc=InputDocumentation(doc="blosum62.out    amino acid substitution matrix file")), ToolInput(tag="in_threads", input_type=Boolean(optional=True), prefix="--threads", doc=InputDocumentation(doc="8               number of cores used for the computation (uses all cores by default)")), ToolInput(tag="in_verbosity_level_nothing", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="3               verbosity level: 0=nothing, 1: +errors, 2: +warnings, 3: +info"))], outputs=[ToolOutput(tag="out_sub_mat", output_type=File(optional=True), selector=InputSelector(input_to_select="in_sub_mat", type_hint=File()), doc=OutputDocumentation(doc="blosum62.out    amino acid substitution matrix file"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Mmseqs_Result2Msa_V0_1_0().translate("wdl", allow_empty_container=True)

