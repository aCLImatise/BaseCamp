class: CommandLineTool
id: anvi_interactive.cwl
inputs:
- id: in_profile_db
  doc: Anvi'o profile database
  type: string?
  inputBinding:
    prefix: --profile-db
- id: in_contigs_db
  doc: "Anvi'o contigs database generated by 'anvi-gen-\ncontigs'"
  type: string?
  inputBinding:
    prefix: --contigs-db
- id: in_collection_name
  doc: "If you have a collection in your profile database, you\ncan use this flag\
    \ to start the interactive interface\nwith a tree showing your bins in your collection,\n\
    instead of each split. This is very useful when you\nhave imported your external\
    \ binning results into\nanvi'o, and want to see the distribution of your bins\n\
    across samples. In these cases anvi'o will cluster\nyour bins and based on multiple\
    \ metrics. Because this\nparticular clustering will be done on the fly within\n\
    anvi'o interactive class, you get to define a\ndisntance metric and a linkage\
    \ method using --linkage\nand --distance parameters if you want!"
  type: string?
  inputBinding:
    prefix: --collection-name
- id: in_manual_mode
  doc: "Using this flag, you can run the interactive interface\nin an ad hoc manner\
    \ using input files you curated\ninstead of standard output files generated by\
    \ an\nanvi'o run. In the manual mode you will be asked to\nprovide a profile database.\
    \ In this mode a profile\ndatabase is only used to store 'state' of the\ninteractive\
    \ interface so you can reload your visual\nsettings when you re-analyze the same\
    \ files again. If\nthe profile database you provide does not exist,\nanvi'o will\
    \ create an empty one for you."
  type: boolean?
  inputBinding:
    prefix: --manual-mode
- id: in_fast_a_file
  doc: A FASTA-formatted input file
  type: File?
  inputBinding:
    prefix: --fasta-file
- id: in_view_data
  doc: A TAB-delimited file for view data
  type: File?
  inputBinding:
    prefix: --view-data
- id: in_tree
  doc: NEWICK formatted tree structure
  type: string?
  inputBinding:
    prefix: --tree
- id: in_items_order
  doc: "A flat file that contains the order of items you wish\nthe display using the\
    \ interactive interface. You may\nwant to use this if you have a specific order\
    \ of items\nin your mind, and do not want to display a tree in the\nmiddle (or\
    \ simply you don't have one). The file format\nis simple: each line should have\
    \ an item name, and\nthere should be no header."
  type: File?
  inputBinding:
    prefix: --items-order
- id: in_additional_view
  doc: "A TAB-delimited file for an additional view to be used\nin the interface.\
    \ This file should contain all split\nnames, and values for each of them in all\
    \ samples.\nEach column in this file must correspond to a sample\nname. Content\
    \ of this file will be called 'user_view',\nwhich will be available as a new item\
    \ in the 'views'\ncombo box in the interface"
  type: File?
  inputBinding:
    prefix: --additional-view
- id: in_additional_layers
  doc: "A TAB-delimited file for additional layers for splits.\nThe first column of\
    \ this file must be split names, and\nthe remaining columns should be unique attributes.\
    \ The\nfile does not need to contain all split names, or\nvalues for each split\
    \ in every column. Anvi'o will try\nto deal with missing data nicely. Each column\
    \ in this\nfile will be visualized as a new layer in the tree."
  type: File?
  inputBinding:
    prefix: --additional-layers
- id: in_gene_mode
  doc: "Initiate the interactive interface in 'gene mode'. In\nthis mode, the items\
    \ are genes (instead of splits of\ncontigs). The following views are available:\
    \ detection\n(the detection value of each gene in each sample). The\nmean_coverage\
    \ (the mean coverage of genes). The\nnon_outlier_mean_coverage (the mean coverage\
    \ of the\nnon-outlier nucleotide positions of each gene in each\nsample (median\
    \ absolute deviation is used to remove\noutliers per gene per sample)). The\n\
    non_outlier_coverage_std view (standard deviation of\nthe coverage of non-outlier\
    \ positions of genes in\nsamples). You can also choose to order items and\nlayers\
    \ according to each one of the aforementioned\nviews. In addition, all layer ordering\
    \ that are\navailable in the regular mode (i.e. the full mode\nwhere you have\
    \ contigs/splits) are also available in\n'gene mode', so that, for example, you\
    \ can choose to\norder the layers according to 'detection', and that\nwould be\
    \ the order according to the detection values\nof splits, whereas if you choose\
    \ 'genes_detections'\nthen the order of layers would be according to the\ndetection\
    \ values of genes. Inspection and sequence\nfunctionality are available (through\
    \ the right-click\nmenu), except now sequences are of the specific gene.\nInspection\
    \ has now two options available: 'Inspect\nContext', which brings you to the inspection\
    \ page of\nthe split to which the gene belongs where the\ninspected gene will\
    \ be highlighted in yellow in the\nbottom, and 'Inspect Gene', which opens the\
    \ inspection\npage only for the gene and 100 nts around each side of\nit (the\
    \ purpose of this option is to make the\ninspection page load faster if you only\
    \ want to look\nat the nucleotide coverage of a specific gene).\nNOTICE: You can't\
    \ store states or collections in 'gene\nmode'. However, you still can make fake\
    \ selections,\nand create fake bins for your viewing convenience only\n(smiley).\
    \ Search options are available, and you can\neven search for functions if you\
    \ have them in your\ncontigs database. ANOTHER NOTICE: loading this mode\nmight\
    \ take a while if your bin has many genes, and\nyour profile database has many\
    \ samples, this is\nbecause the gene coverages stats are computed in an\nad-hoc\
    \ manner when you load this mode, we know this is\nnot ideal and we plan to improve\
    \ that (along with\nother things). If you have suggestions/complaints\nregarding\
    \ this mode please comment on this github\nissue: https://goo.gl/yHhRei. Please\
    \ refer to the\nonline tutorial for more information."
  type: boolean?
  inputBinding:
    prefix: --gene-mode
- id: in_in_seq_stats
  doc: "Provide if working with INSeq/Tn-Seq genomic data.\nWith this, all gene level\
    \ coverage stats will be\ncalculated using INSeq/Tn-Seq statistical methods."
  type: boolean?
  inputBinding:
    prefix: --inseq-stats
- id: in_bin_id
  doc: Bin name you are interested in.
  type: string?
  inputBinding:
    prefix: --bin-id
- id: in_title
  doc: "Title for the interface. If you are working with a\nRUNINFO dict, the title\
    \ will be determined based on\ninformation stored in that file. Regardless, you\
    \ can\noverride that value using this parameter."
  type: File?
  inputBinding:
    prefix: --title
- id: in_taxonomic_level
  doc: "The taxonomic level to use whenever relevant and/or\navailable. The default\
    \ taxonomic level is t_genus, but\nif you choose something specific, anvi'o will\
    \ focus on\nthat whenever possible."
  type: string?
  inputBinding:
    prefix: --taxonomic-level
- id: in_split_hmm_layers
  doc: "When declared, this flag tells the interface to split\nevery gene found in\
    \ HMM searches that were performed\nagainst non-singlecopy gene HMM profiles into\
    \ their\nown layer. Please see the documentation for details."
  type: boolean?
  inputBinding:
    prefix: --split-hmm-layers
- id: in_hide_outlier_sn_vs
  doc: "During profiling, anvi'o marks positions of single-\nnucleotide variations\
    \ (SNVs) that originate from\nplaces in contigs where coverage values are a bit\n\
    'sketchy'. If you would like to avoid SNVs in those\npositions of splits in applicable\
    \ projects you can use\nthis flag, and the interface would hide SNVs that are\n\
    marked as 'outlier' (although it is clearly the best\nto see everything, no one\
    \ will judge you if you end up\nusing this flag) (plus, there may or may not be\
    \ some\nhistorical data on this here:\nhttps://github.com/meren/anvio/issues/309)."
  type: boolean?
  inputBinding:
    prefix: --hide-outlier-SNVs
- id: in_state_autoload
  doc: "Automatically load previous saved state and draw tree.\nTo see a list of available\
    \ states, use --show-states\nflag."
  type: string?
  inputBinding:
    prefix: --state-autoload
- id: in_collection_autoload
  doc: "Automatically load a collection and draw tree. To see\na list of available\
    \ collections, use --list-\ncollections flag."
  type: string?
  inputBinding:
    prefix: --collection-autoload
- id: in_export_svg
  doc: The SVG output file path.
  type: File?
  inputBinding:
    prefix: --export-svg
- id: in_show_views
  doc: "When declared, the program will show a list of\navailable views, and exit."
  type: boolean?
  inputBinding:
    prefix: --show-views
- id: in_skip_check_names
  doc: For debugging purposes. You should never really need
  type: boolean?
  inputBinding:
    prefix: --skip-check-names
- id: in_dry_run
  doc: "Don't do anything real. Test everything, and stop\nright before wherever the\
    \ developer said 'well, this\nis enough testing', and decided to print out results."
  type: boolean?
  inputBinding:
    prefix: --dry-run
- id: in_show_states
  doc: "When declared the program will print all available\nstates and exit."
  type: boolean?
  inputBinding:
    prefix: --show-states
- id: in_list_collections
  doc: Show available collections and exit.
  type: boolean?
  inputBinding:
    prefix: --list-collections
- id: in_skip_in_it_functions
  doc: "When declared, function calls for genes will not be\ninitialized (therefore\
    \ will be missing from all\nrelevant interfaces or output files). The use of this\n\
    flag may reduce the memory fingerprint and processing\ntime for large datasets."
  type: boolean?
  inputBinding:
    prefix: --skip-init-functions
- id: in_skip_auto_ordering
  doc: "When declared, the attempt to include automatically\ngenerated orders of items\
    \ based on additional data is\nskipped. In case those buggers cause issues with\
    \ your\ndata, and you still want to see your stuff and deal\nwith the other issue\
    \ maybe later."
  type: boolean?
  inputBinding:
    prefix: --skip-auto-ordering
- id: in_distance
  doc: "The distance metric for the hierarchical clustering.\nOnly relevant if you\
    \ are running the interactive\ninterface in \"collection\" mode. The default is\n\
    \"euclidean\"."
  type: string?
  inputBinding:
    prefix: --distance
- id: in_linkage
  doc: "The linkage method for the hierarchical clustering.\nOnly relevant if you\
    \ are running the interactive\ninterface in \"collection\" mode. The default is\
    \ \"ward\"."
  type: string?
  inputBinding:
    prefix: --linkage
- id: in_ip_address
  doc: "IP address for the HTTP server. The default ip address\n(0.0.0.0) should work\
    \ just fine for most."
  type: double?
  inputBinding:
    prefix: --ip-address
- id: in_port_number
  doc: "Port number to use for anvi'o services. If nothing is\ndeclared, anvi'o will\
    \ try to find a suitable port\nnumber, starting from the default port number,\
    \ 8080."
  type: long?
  inputBinding:
    prefix: --port-number
- id: in_browser_path
  doc: "By default, anvi'o will use your default browser to\nlaunch the interactive\
    \ interface. If you would like to\nuse something else than your system default,\
    \ you can\nprovide a full path for an alternative browser using\nthis parameter,\
    \ and hope for the best. For instance we\nare using this parameter to call Google's\
    \ experimental\nbrowser, Canary, which performs better with demanding\nvisualizations."
  type: File?
  inputBinding:
    prefix: --browser-path
- id: in_read_only
  doc: "When the interactive interface is started with this\nflag, all 'database write'\
    \ operations will be\ndisabled."
  type: boolean?
  inputBinding:
    prefix: --read-only
- id: in_server_only
  doc: "The default behavior is to start the local server, and\nfire up a browser\
    \ that connects to the server. If you\nhave other plans, and want to start the\
    \ server without\ncalling the browser, this is the flag you need."
  type: boolean?
  inputBinding:
    prefix: --server-only
- id: in_password_protected
  doc: "If this flag is set, command line tool will ask you to\nenter a password and\
    \ interactive interface will be\nonly accessible after entering same password.\
    \ This\noption is recommended for shared machines like\nclusters or shared networks\
    \ where computers are not\nisolated."
  type: boolean?
  inputBinding:
    prefix: --password-protected
- id: in_user_server_shutdown
  doc: "Allow users to shutdown an anvi'server via web\ninterface.\n"
  type: boolean?
  inputBinding:
    prefix: --user-server-shutdown
- id: in_interface_dot
  doc: "--view NAME           Start the interface with a pre-selected view. To see\
    \ a\nlist of available views, use --show-views flag."
  type: string
  inputBinding:
    position: 0
- id: in_it_dot
  doc: -o DIR_PATH, --output-dir DIR_PATH
  type: string
  inputBinding:
    position: 0
outputs:
- id: out_stdout
  doc: Standard output stream
  type: stdout
- id: out_export_svg
  doc: The SVG output file path.
  type: File?
  outputBinding:
    glob: $(inputs.in_export_svg)
hints: []
cwlVersion: v1.1
baseCommand:
- anvi-interactive
