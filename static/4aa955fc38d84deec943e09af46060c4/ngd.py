from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Boolean, Int, Directory

Ngd_V0_1_0 = CommandToolBuilder(tool="ngd", base_command=["ngd"], inputs=[ToolInput(tag="in_section", input_type=String(optional=True), prefix="--section", doc=InputDocumentation(doc="NCBI section to download (default: refseq)")), ToolInput(tag="in_formats", input_type=File(optional=True), prefix="--formats", doc=InputDocumentation(doc="Which formats to download (default: genbank).A comma-\nseparated list of formats is also possible. For\nexample: 'fasta,assembly-report'. Choose from:\n['genbank', 'fasta', 'rm', 'features', 'gff',\n'protein-fasta', 'genpept', 'wgs', 'cds-fasta', 'rna-\nfna', 'rna-fasta', 'assembly-report', 'assembly-\nstats', 'all']")), ToolInput(tag="in_assembly_levels", input_type=String(optional=True), prefix="--assembly-levels", doc=InputDocumentation(doc="Assembly levels of genomes to download (default: all).\nA comma-separated list of assembly levels is also\npossible. For example: 'complete,chromosome'. Coose\nfrom: ['all', 'complete', 'chromosome', 'scaffold',\n'contig']")), ToolInput(tag="in_genera", input_type=String(optional=True), prefix="--genera", doc=InputDocumentation(doc="Only download sequences of the provided genera. A\ncomma-seperated list of genera is also possible. For\nexample: 'Streptomyces coelicolor,Escherichia coli'.\n(default: [])")), ToolInput(tag="in_genus", input_type=String(optional=True), prefix="--genus", doc=InputDocumentation(doc="Deprecated alias of --genera")), ToolInput(tag="in_fuzzy_genus", input_type=Boolean(optional=True), prefix="--fuzzy-genus", doc=InputDocumentation(doc="Use a fuzzy search on the organism name instead of an\nexact match.")), ToolInput(tag="in_strains", input_type=File(optional=True), prefix="--strains", doc=InputDocumentation(doc="Only download sequences of the given strain(s). A\ncomma-separated list of strain names is possible, as\nwell as a path to a filename containing one name per\nline.")), ToolInput(tag="in_species_tax_ids", input_type=Int(optional=True), prefix="--species-taxids", doc=InputDocumentation(doc="Only download sequences of the provided species NCBI\ntaxonomy IDs. A comma-separated list of species taxids\nis also possible. For example: '52342,12325'.\n(default: [])")), ToolInput(tag="in_tax_ids", input_type=Int(optional=True), prefix="--taxids", doc=InputDocumentation(doc="Only download sequences of the provided NCBI taxonomy\nIDs. A comma-separated list of taxids is also\npossible. For example: '9606,9685'. (default: [])")), ToolInput(tag="in_assembly_accessions", input_type=File(optional=True), prefix="--assembly-accessions", doc=InputDocumentation(doc="Only download sequences matching the provided NCBI\nassembly accession(s). A comma-separated list of\naccessions is possible, as well as a path to a\nfilename containing one accession per line.")), ToolInput(tag="in_refseq_categories", input_type=String(optional=True), prefix="--refseq-categories", doc=InputDocumentation(doc="Only download sequences of the provided refseq\ncategories (default: all)")), ToolInput(tag="in_refseq_category", input_type=String(optional=True), prefix="--refseq-category", doc=InputDocumentation(doc="Deprecated alias for --refseq-categories")), ToolInput(tag="in_output_folder", input_type=Directory(optional=True), prefix="--output-folder", doc=InputDocumentation(doc="Create output hierarchy in specified folder (default:\n/)")), ToolInput(tag="in_flat_output", input_type=Directory(optional=True), prefix="--flat-output", doc=InputDocumentation(doc="Dump all files right into the output folder without\ncreating any subfolders.")), ToolInput(tag="in_human_readable", input_type=Boolean(optional=True), prefix="--human-readable", doc=InputDocumentation(doc="Create links in human-readable hierarchy (might fail\non Windows)")), ToolInput(tag="in_uri", input_type=String(optional=True), prefix="--uri", doc=InputDocumentation(doc="NCBI base URI to use (default:\nhttps://ftp.ncbi.nih.gov/genomes)")), ToolInput(tag="in_parallel", input_type=Int(optional=True), prefix="--parallel", doc=InputDocumentation(doc="Run N downloads in parallel (default: 1)")), ToolInput(tag="in_retries", input_type=Int(optional=True), prefix="--retries", doc=InputDocumentation(doc="Retry download N times when connection to NCBI fails\n(default: 0)")), ToolInput(tag="in_metadata_table", input_type=File(optional=True), prefix="--metadata-table", doc=InputDocumentation(doc="Save tab-delimited file with genome metadata")), ToolInput(tag="in_dry_run", input_type=Boolean(optional=True), prefix="--dry-run", doc=InputDocumentation(doc="Only check which files to download, don't download\ngenome files.")), ToolInput(tag="in_no_cache", input_type=Boolean(optional=True), prefix="--no-cache", doc=InputDocumentation(doc="Don't cache the assembly summary file in\n/root/.cache/ncbi-genome-download.")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="increase output verbosity")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="print debugging information")), ToolInput(tag="in_type_materials", input_type=String(optional=True), prefix="--type-materials", doc=InputDocumentation(doc="Specifies the relation to type material for the\nassembly (default: any). 'any' will include assemblies\nwith no relation to type material value defined, 'all'\nwill download only assemblies with a defined value. A\ncomma-separated list of relatons. For example:\n'reference,synonym'. Choose from: ['any', 'all',\n'type', 'reference', 'synonym', 'proxytype',\n'neotype'] .\n"))], outputs=[ToolOutput(tag="out_output_folder", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output_folder", type_hint=File()), doc=OutputDocumentation(doc="Create output hierarchy in specified folder (default:\n/)")), ToolOutput(tag="out_flat_output", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_flat_output", type_hint=File()), doc=OutputDocumentation(doc="Dump all files right into the output folder without\ncreating any subfolders."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Ngd_V0_1_0().translate("wdl", allow_empty_container=True)

