from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Int, Boolean, File

Scramble_V0_1_0 = CommandToolBuilder(tool="scramble", base_command=["scramble"], inputs=[ToolInput(tag="in_set_input_format", input_type=String(optional=True), prefix="-I", doc=InputDocumentation(doc="Set input format:  'bam', 'sam' or 'cram'.")), ToolInput(tag="in_set_output_format", input_type=String(optional=True), prefix="-O", doc=InputDocumentation(doc="Set output format: 'bam', 'sam' or 'cram'.")), ToolInput(tag="in_set_compression_level", input_type=Int(optional=True), prefix="-1", doc=InputDocumentation(doc="Set compression level.")), ToolInput(tag="in_no_compression", input_type=Int(optional=True), prefix="-0", doc=InputDocumentation(doc="No compression.")), ToolInput(tag="in__print_header", input_type=Boolean(optional=True), prefix="-H", doc=InputDocumentation(doc="[SAM] Do not print header")), ToolInput(tag="in_specifies_refseqstartend_range", input_type=String(optional=True), prefix="-R", doc=InputDocumentation(doc="[Cram] Specifies the refseq:start-end range")), ToolInput(tag="in_specifies_reference_file", input_type=File(optional=True), prefix="-r", doc=InputDocumentation(doc="[Cram] Specifies the reference file.")), ToolInput(tag="in_max_bases_slice", input_type=Int(optional=True), prefix="-b", doc=InputDocumentation(doc="[Cram] Max. bases per slice, default 5000000.")), ToolInput(tag="in_sequences_slice_default", input_type=Int(optional=True), prefix="-s", doc=InputDocumentation(doc="[Cram] Sequences per slice, default 10000.")), ToolInput(tag="in_slices_container_default", input_type=Int(optional=True), prefix="-S", doc=InputDocumentation(doc="[Cram] Slices per container, default 1.")), ToolInput(tag="in_specify_format_version", input_type=File(optional=True), prefix="-V", doc=InputDocumentation(doc="[Cram] Specify the file format version to write (eg 1.1, 2.0)")), ToolInput(tag="in_embed_reference_sequence", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc="[Cram] Embed reference sequence.")), ToolInput(tag="in_nonreference_based_encoding", input_type=Boolean(optional=True), prefix="-x", doc=InputDocumentation(doc="[Cram] Non-reference based encoding.")), ToolInput(tag="in_use_multiple_references", input_type=Boolean(optional=True), prefix="-M", doc=InputDocumentation(doc="[Cram] Use multiple references per slice.")), ToolInput(tag="in_generate_md_nm", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="[Cram] Generate MD and NM tags.")), ToolInput(tag="in_also_compress_using_coder", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="[Cram] Also compress using arithmetic coder (V3.1+).")), ToolInput(tag="in_also_compress_using_bzip", input_type=Boolean(optional=True), prefix="-j", doc=InputDocumentation(doc="[Cram] Also compress using bzip2.")), ToolInput(tag="in_also_compress_using_lzma", input_type=Boolean(optional=True), prefix="-Z", doc=InputDocumentation(doc="[Cram] Also compress using lzma.")), ToolInput(tag="in_also_compression_using_v", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc="[Cram] Also compression using fqzcomp (V3.1+)")), ToolInput(tag="in_also_compression_using_name", input_type=Boolean(optional=True), prefix="-T", doc=InputDocumentation(doc="[Cram] Also compression using name tokeniser (V3.1+)")), ToolInput(tag="in_discard_read_names", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="[Cram] Discard read names where possible.")), ToolInput(tag="in_preserve_aux_incl", input_type=Boolean(optional=True), prefix="-P", doc=InputDocumentation(doc="Preserve all aux tags (incl RG,NM,MD)")), ToolInput(tag="in_preserve_aux_tag", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="Preserve aux tag sizes ('i', 's', 'c')")), ToolInput(tag="in_add_scramble_line", input_type=Boolean(optional=True), prefix="-q", doc=InputDocumentation(doc="Don't add scramble @PG header line")), ToolInput(tag="in_stop_decoding_sequences", input_type=Int(optional=True), prefix="-N", doc=InputDocumentation(doc="Stop decoding after 'integer' sequences")), ToolInput(tag="in_use_n_threads", input_type=String(optional=True), prefix="-t", doc=InputDocumentation(doc="Use N threads (availability varies by format)")), ToolInput(tag="in_enable_illumina_qualitybinning", input_type=Boolean(optional=True), prefix="-B", doc=InputDocumentation(doc="Enable Illumina 8 quality-binning system (lossy)")), ToolInput(tag="in_convert_using_filegzi", input_type=File(optional=True), prefix="-g", doc=InputDocumentation(doc="Convert to Bam using index (file.gzi)")), ToolInput(tag="in_output_bam_index", input_type=File(optional=True), prefix="-G", doc=InputDocumentation(doc="Output Bam index when bam input(file.gzi)")), ToolInput(tag="in_mode_fast_normal", input_type=String(optional=True), prefix="-X", doc=InputDocumentation(doc="[Cram] Mode is fast, normal, small or archive.")), ToolInput(tag="in_input_file", input_type=String(optional=True), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_output_file", input_type=String(optional=True), position=1, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Scramble_V0_1_0().translate("wdl", allow_empty_container=True)

