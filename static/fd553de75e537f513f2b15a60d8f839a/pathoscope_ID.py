from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, Int, File, Directory

Pathoscope_Id_V0_1_0 = CommandToolBuilder(tool="pathoscope_ID", base_command=["pathoscope", "ID"], inputs=[ToolInput(tag="in_out_matrix", input_type=Boolean(optional=True), prefix="--outMatrix", doc=InputDocumentation(doc="Output alignment matrix")), ToolInput(tag="in_no_updated_align_file", input_type=Boolean(optional=True), prefix="--noUpdatedAlignFile", doc=InputDocumentation(doc="Do not generate an updated alignment file")), ToolInput(tag="in_no_display_cut_off", input_type=Boolean(optional=True), prefix="--noDisplayCutoff", doc=InputDocumentation(doc="Do not cutoff display of genomes, even if it is")), ToolInput(tag="in_em_epsilon", input_type=String(optional=True), prefix="-emEpsilon", doc=InputDocumentation(doc="EM Algorithm Epsilon cutoff")), ToolInput(tag="in_maxiter", input_type=String(optional=True), prefix="-maxIter", doc=InputDocumentation(doc="EM Algorithm maximum iterations")), ToolInput(tag="in_pi_prior", input_type=Int(optional=True), prefix="-piPrior", doc=InputDocumentation(doc="EM Algorithm Pi Prior equivalent to adding n unique\nreads (Default: n=0)")), ToolInput(tag="in_theta_prior", input_type=Int(optional=True), prefix="-thetaPrior", doc=InputDocumentation(doc="EM Algorithm Theta Prior equivalent to adding n non-\nunique reads (Default: n=0)")), ToolInput(tag="in_exp_tag", input_type=File(optional=True), prefix="-expTag", doc=InputDocumentation(doc="Experiment tag added to output file for easy\nidentification (Default: pathoid)")), ToolInput(tag="in_outdir", input_type=Directory(optional=True), prefix="-outDir", doc=InputDocumentation(doc="Output Directory (Default=. (current directory))")), ToolInput(tag="in_file_type", input_type=Int(optional=True), prefix="-fileType", doc=InputDocumentation(doc="Alignment Format: sam/bl8/gnu-sam (Default: sam)")), ToolInput(tag="in_align_file", input_type=File(optional=True), prefix="-alignFile", doc=InputDocumentation(doc="Alignment file path\n")), ToolInput(tag="in_insignificant", input_type=String(), position=0, doc=InputDocumentation(doc="-scoreCutoff ID_SCORE_CUTOFF"))], outputs=[ToolOutput(tag="out_exp_tag", output_type=File(optional=True), selector=InputSelector(input_to_select="in_exp_tag", type_hint=File()), doc=OutputDocumentation(doc="Experiment tag added to output file for easy\nidentification (Default: pathoid)")), ToolOutput(tag="out_outdir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_outdir", type_hint=File()), doc=OutputDocumentation(doc="Output Directory (Default=. (current directory))"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Pathoscope_Id_V0_1_0().translate("wdl", allow_empty_container=True)

