from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Directory, String, Int, Boolean

Tirmite_V0_1_0 = CommandToolBuilder(tool="tirmite", base_command=["tirmite"], inputs=[ToolInput(tag="in_genome", input_type=File(optional=True), prefix="--genome", doc=InputDocumentation(doc="Path to target genome that will be queried with HMMs.")), ToolInput(tag="in_hmm_dir", input_type=Directory(optional=True), prefix="--hmmDir", doc=InputDocumentation(doc="Directory containing pre-prepared TIR-pHMMs.")), ToolInput(tag="in_hmm_file", input_type=File(optional=True), prefix="--hmmFile", doc=InputDocumentation(doc="Path to single TIR-pHMM file. Incompatible with '--\nhmmDir'.")), ToolInput(tag="in_al_ndir", input_type=File(optional=True), prefix="--alnDir", doc=InputDocumentation(doc="Path to directory containing only TIR alignments to be\nconverted to HMM.")), ToolInput(tag="in_aln_file", input_type=File(optional=True), prefix="--alnFile", doc=InputDocumentation(doc="Provide a single TIR alignment to be converted to HMM.\nIncompatible with '--alnDir'.")), ToolInput(tag="in_aln_format", input_type=String(optional=True), prefix="--alnFormat", doc=InputDocumentation(doc="Alignments provided with '--alnDir' or '--alnFile' are\nall in this format.")), ToolInput(tag="in_pair_bed", input_type=String(optional=True), prefix="--pairbed", doc=InputDocumentation(doc="If set TIRmite will preform pairing on TIRs from\ncustom bedfile only.")), ToolInput(tag="in_stable_reps", input_type=Int(optional=True), prefix="--stableReps", doc=InputDocumentation(doc="Number of times to iterate pairing procedure when no\nadditional pairs are found AND remaining unpaired hits\n> 0.")), ToolInput(tag="in_outdir", input_type=Directory(optional=True), prefix="--outdir", doc=InputDocumentation(doc="All output files will be written to this directory.")), ToolInput(tag="in_prefix", input_type=String(optional=True), prefix="--prefix", doc=InputDocumentation(doc="Add prefix to all TIRs and Paired elements detected in\nthis run. Useful when running same TIR-pHMM against\nmany genomes.(Default = None)")), ToolInput(tag="in_no_pairing", input_type=Boolean(optional=True), prefix="--nopairing", doc=InputDocumentation(doc="If set, only report TIR-pHMM hits. Do not attempt")), ToolInput(tag="in_report_tir", input_type=String(optional=True), prefix="--reportTIR", doc=InputDocumentation(doc="Options for reporting TIRs in GFF annotation file.")), ToolInput(tag="in_pad_len", input_type=String(optional=True), prefix="--padlen", doc=InputDocumentation(doc="Extract x bases either side of TIR when writing TIRs\nto fasta.")), ToolInput(tag="in_keep_temp", input_type=Boolean(optional=True), prefix="--keeptemp", doc=InputDocumentation(doc="If set do not delete temp file directory.")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Set syscall reporting to verbose.")), ToolInput(tag="in_cores", input_type=Int(optional=True), prefix="--cores", doc=InputDocumentation(doc="Set number of cores available to hmmer software.")), ToolInput(tag="in_max_eval", input_type=Int(optional=True), prefix="--maxeval", doc=InputDocumentation(doc="Maximum e-value allowed for valid hit. Default = 0.001")), ToolInput(tag="in_max_dist", input_type=Int(optional=True), prefix="--maxdist", doc=InputDocumentation(doc="Maximum distance allowed between TIR candidates to\nconsider valid pairing.")), ToolInput(tag="in_no_bias", input_type=Boolean(optional=True), prefix="--nobias", doc=InputDocumentation(doc="Turn OFF bias correction of scores in nhmmer.")), ToolInput(tag="in_matrix", input_type=String(optional=True), prefix="--matrix", doc=InputDocumentation(doc="Use custom DNA substitution matrix with nhmmer.")), ToolInput(tag="in_min_cov", input_type=Int(optional=True), prefix="--mincov", doc=InputDocumentation(doc="Minimum valid hit length as prop of model length.\nDefaults to 0.5")), ToolInput(tag="in_hmm_press", input_type=File(optional=True), prefix="--hmmpress", doc=InputDocumentation(doc="Set location of hmmpress if not in PATH.")), ToolInput(tag="in_n_hmmer", input_type=File(optional=True), prefix="--nhmmer", doc=InputDocumentation(doc="Set location of nhmmer if not in PATH.")), ToolInput(tag="in_hmmbuild", input_type=File(optional=True), prefix="--hmmbuild", doc=InputDocumentation(doc="Set location of hmmbuild if not in PATH.")), ToolInput(tag="in_pairing_dot", input_type=String(), position=0, doc=InputDocumentation(doc="--gffOut              If set report features as prefix.gff3. File saved to"))], outputs=[ToolOutput(tag="out_outdir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_outdir", type_hint=File()), doc=OutputDocumentation(doc="All output files will be written to this directory."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Tirmite_V0_1_0().translate("wdl", allow_empty_container=True)

