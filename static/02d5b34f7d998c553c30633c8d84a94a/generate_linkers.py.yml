!Command
command:
- generate_linkers.py
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -v
  - --verbose
  description: "Print information during execution -- useful for\ndebugging [default:\
    \ False]"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -l
  - --linker_len
  description: 'Size of linker in base pairs. [default: 2]'
  args: !SimpleFlagArg
    name: LINKER_LEN
- !Flag
  optional: true
  synonyms:
  - -r
  - --all_files
  description: Test all _hits.txt files in directory specified with
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -i.
  description: '[default: False]'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -o
  - --output_dir
  description: "Specify output directory for linkers summary.\n[default: .]"
  args: !SimpleFlagArg
    name: OUTPUT_DIR
- !Flag
  optional: true
  synonyms:
  - -s
  - --score_type
  description: "Value to use from primer hits file to determine a\ngiven primer's\
    \ amplification success.  Valid choices\nare weighted_score, overall_mismatches,\
    \ tp_mismatches.\nGibbs energy scores not currently implemented\n[default: weighted_score]"
  args: !SimpleFlagArg
    name: SCORE_TYPE
- !Flag
  optional: true
  synonyms:
  - -t
  - --score_threshold
  description: "If primer has score at or below this parameter, the\nprimer amplification\
    \ is considered to be successful.\n[default: 1.0]"
  args: !SimpleFlagArg
    name: SCORE_THRESHOLD
- !Flag
  optional: true
  synonyms:
  - -i
  - --hits_fps
  description: "Target primer hits files to generate linkers with.\nSeparate multiple\
    \ files with a colon. [REQUIRED]"
  args: !SimpleFlagArg
    name: HITS_FPS
- !Flag
  optional: true
  synonyms:
  - -f
  - --fasta_fps
  description: "Fasta filepath(s).  Must include all fasta sequences\nused to generate\
    \ the hits files.  Separate multiple\nfiles with a colon. [REQUIRED]\n"
  args: !SimpleFlagArg
    name: FASTA_FPS
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - --version
  description: show program's version number and exit
  args: !EmptyFlagArg {}
help_text: "Usage: generate_linkers.py [options] {-i/--hits_fps HITS_FPS -f/--fasta_fps\
  \ FASTA_FPS}\n\n[] indicates optional input (order unimportant)\n{} indicates required\
  \ input (order unimportant)\n\n\n\ngenerate_linkers is designed to suggest primer\
  \ linkers based upon the least frequently occuring base pairs (default 2) immediately\
  \ upstream from the 5' region of the primer.\n\nA single _hits.txt file, multiple\
  \ hits files, or a directory of hits.txt \nfiles can be passed as input (see the\
  \ analyze_primers.py file for \ninformation about the hits.txt file format).  The\
  \ fasta files used to \ngenerate the _hits.txt files are also required input for\
  \ this module.\n\nThe output file will contain the percentage occurance of each\
  \ base at \nall positions in the linker and a suggested linker based on complementarity\
  \ \nto the least frequently occurring bases.\n\n\nExample usage: \nPrint help message\
  \ and exit\n generate_linkers.py -h\n\nStandard Example usage: \n generate_linkers.py\
  \ [options] {-i hits_filepath [required] -f input_fasta_filepath [required]}\n\n\
  Change linker size to 3, manually pass 2 hits files to test, use overall mismatches\
  \ for scoring: \n generate_linkers.py -i primer1f_hits.txt:primer2r_hits.txt -f\
  \ seqs.fasta -l 3 -s overall_mismatches\n\nTest all hits file in a target directory,\
  \ put output in linkers directory: \n generate_linkers.py -i hits_dir/ -f seqs.fasta\
  \ -o linkers/\n\nOptions:\n  --version             show program's version number\
  \ and exit\n  -h, --help            show this help message and exit\n  -v, --verbose\
  \         Print information during execution -- useful for\n                   \
  \     debugging [default: False]\n  -l LINKER_LEN, --linker_len=LINKER_LEN\n   \
  \                     Size of linker in base pairs. [default: 2]\n  -r, --all_files\
  \       Test all _hits.txt files in directory specified with\n                 \
  \       -i.   [default: False]\n  -o OUTPUT_DIR, --output_dir=OUTPUT_DIR\n     \
  \                   Specify output directory for linkers summary.\n            \
  \            [default: .]\n  -s SCORE_TYPE, --score_type=SCORE_TYPE\n          \
  \              Value to use from primer hits file to determine a\n             \
  \           given primer's amplification success.  Valid choices\n             \
  \           are weighted_score, overall_mismatches, tp_mismatches.\n           \
  \             Gibbs energy scores not currently implemented\n                  \
  \      [default: weighted_score]\n  -t SCORE_THRESHOLD, --score_threshold=SCORE_THRESHOLD\n\
  \                        If primer has score at or below this parameter, the\n \
  \                       primer amplification is considered to be successful.\n \
  \                       [default: 1.0]\n\n  REQUIRED options:\n    The following\
  \ options must be provided under all circumstances.\n\n    -i HITS_FPS, --hits_fps=HITS_FPS\n\
  \                        Target primer hits files to generate linkers with.\n  \
  \                      Separate multiple files with a colon. [REQUIRED]\n    -f\
  \ FASTA_FPS, --fasta_fps=FASTA_FPS\n                        Fasta filepath(s). \
  \ Must include all fasta sequences\n                        used to generate the\
  \ hits files.  Separate multiple\n                        files with a colon. [REQUIRED]\n"
generated_using:
- --help
docker_image:
