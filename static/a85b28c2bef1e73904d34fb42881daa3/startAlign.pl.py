from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, String, Boolean

Startalign_Pl_V0_1_0 = CommandToolBuilder(tool="startAlign.pl", base_command=["startAlign.pl"], inputs=[ToolInput(tag="in_genome", input_type=File(optional=True), prefix="--genome", doc=InputDocumentation(doc="fasta file with DNA sequences")), ToolInput(tag="in_prot", input_type=File(optional=True), prefix="--prot", doc=InputDocumentation(doc="fasta file with protein sequences")), ToolInput(tag="in_cpu", input_type=Int(optional=True), prefix="--CPU", doc=InputDocumentation(doc="Specifies the maximum number of CPUs that can be used during")), ToolInput(tag="in_dir", input_type=File(optional=True), prefix="--dir", doc=InputDocumentation(doc="/to/dir            Set path to working directory. In the working directory results")), ToolInput(tag="in_list", input_type=String(optional=True), prefix="--list", doc=InputDocumentation(doc="Contains contig and protein ID. Format: contigID proteinID")), ToolInput(tag="in_log", input_type=File(optional=True), prefix="--log", doc=InputDocumentation(doc="Log file")), ToolInput(tag="in_max_intron_len", input_type=Int(optional=True), prefix="--maxintronlen", doc=InputDocumentation(doc="Exonerate option: Alignments with longer gaps are discarded (default 30000).")), ToolInput(tag="in_reg", input_type=Boolean(optional=True), prefix="--reg", doc=InputDocumentation(doc="Use region parts and not whole sequences.")), ToolInput(tag="in_offset", input_type=String(optional=True), prefix="--offset", doc=InputDocumentation(doc="This many bp are added before and after cutout coordinates.")), ToolInput(tag="in_prg", input_type=String(optional=True), prefix="--prg", doc=InputDocumentation(doc="Alignment program to call. Valid options are 'gth', 'spaln' or 'exonerate'.")), ToolInput(tag="in_pos", input_type=String(optional=True), prefix="--pos", doc=InputDocumentation(doc="Contains information on contigs and genome sequence. Format")), ToolInput(tag="in_alignment_tool_path", input_type=Boolean(optional=True), prefix="--ALIGNMENT_TOOL_PATH", doc=InputDocumentation(doc="=/path/to/binary")), ToolInput(tag="in_args", input_type=Int(optional=True), prefix="--args", doc=InputDocumentation(doc="additional command line parameters for alignment tool to be executed,\nexample: --args='-prinmatchlen 24 -prseedlength 10 -prhdist 4'")), ToolInput(tag="in_nice", input_type=Boolean(optional=True), prefix="--nice", doc=InputDocumentation(doc="Execute all system calls within braker.pl and its submodules with bash 'nice'"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Startalign_Pl_V0_1_0().translate("wdl", allow_empty_container=True)

