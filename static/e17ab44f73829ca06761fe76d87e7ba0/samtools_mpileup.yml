!Command
command:
- samtools
- mpileup
positional:
- !Positional
  description: ''
  position: 0
  name: in1.bam
  optional: false
named:
- !Flag
  description: reference sequence file [null]
  synonyms:
  - -f
  args: !SimpleFlagArg
    name: FILE
  optional: true
- !Flag
  description: region in which pileup is generated [null]
  synonyms:
  - -r
  args: !SimpleFlagArg
    name: STR
  optional: true
- !Flag
  description: 'list of positions (format: chr pos) [null]'
  synonyms:
  - -l
  args: !SimpleFlagArg
    name: FILE
  optional: true
- !Flag
  description: cap mapping quality at INT [60]
  synonyms:
  - -M
  args: !SimpleFlagArg
    name: INT
  optional: true
- !Flag
  description: min base quality [13]
  synonyms:
  - -Q
  args: !SimpleFlagArg
    name: INT
  optional: true
- !Flag
  description: filter out alignment with MQ smaller than INT [0]
  synonyms:
  - -q
  args: !SimpleFlagArg
    name: INT
  optional: true
- !Flag
  description: generate BCF output
  synonyms:
  - -g
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: do not compress BCF output
  synonyms:
  - -u
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: disable BAQ computation
  synonyms:
  - -B
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "\nUsage:   samtools mpileup [options] in1.bam [in2.bam [...]]\n\nOptions:\
  \ -f FILE     reference sequence file [null]\n         -r STR      region in which\
  \ pileup is generated [null]\n         -l FILE     list of positions (format: chr\
  \ pos) [null]\n         -M INT      cap mapping quality at INT [60]\n         -Q\
  \ INT      min base quality [13]\n         -q INT      filter out alignment with\
  \ MQ smaller than INT [0]\n         -g          generate BCF output\n         -u\
  \          do not compress BCF output\n         -B          disable BAQ computation\n\
  \nNotes: Assuming diploid individuals.\n\n"
generated_using: []
