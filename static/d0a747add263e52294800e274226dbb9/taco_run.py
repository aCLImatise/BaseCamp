from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Directory, Int, Boolean, File, String, Float

Taco_Run_V0_1_0 = CommandToolBuilder(tool="taco_run", base_command=["taco_run"], inputs=[ToolInput(tag="in_output_dir", input_type=Directory(optional=True), prefix="--output-dir", doc=InputDocumentation(doc="directory where output files will be stored (if\nalready exists then --resume must be specified)\n[default=output]")), ToolInput(tag="in_num_processes", input_type=Int(optional=True), prefix="--num-processes", doc=InputDocumentation(doc="Run TACO in parallel with N processes [default=1]")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Enabled detailed logging (for debugging)")), ToolInput(tag="in_resume", input_type=Boolean(optional=True), prefix="--resume", doc=InputDocumentation(doc="Resumes an existing run that may have ended\nprematurely. Specify the location of the run using the\n-o/--output-dir option.")), ToolInput(tag="in_assemble", input_type=File(optional=True), prefix="--assemble", doc=InputDocumentation(doc="Assemble transfrags produced by a previous TACO run,\nbypassing the GTF aggregation step. Accepts a taco-\nformatted BED file.")), ToolInput(tag="in_gtf_expr_attr", input_type=String(optional=True), prefix="--gtf-expr-attr", doc=InputDocumentation(doc="GTF attribute field containing expression\n[default=FPKM]")), ToolInput(tag="in_filter_min_length", input_type=Int(optional=True), prefix="--filter-min-length", doc=InputDocumentation(doc="Filter input transfrags with length < N prior to\nassembly [default=200]")), ToolInput(tag="in_filter_min_expr", input_type=Int(optional=True), prefix="--filter-min-expr", doc=InputDocumentation(doc="Filter input transfrags with expression (FPKM/TPM) < X\nprior to assembly [default=0.5]")), ToolInput(tag="in_filter_splice_jun_cs", input_type=Boolean(optional=True), prefix="--filter-splice-juncs", doc=InputDocumentation(doc="Filter input transfrags that possess non-canonical\nsplice motifs prior to assembly. Splice motifs are\nGTAG, GCAG, and ATAC are allowed [default=False].\nRequires genome sequence to be specified using --ref-\ngenome-fasta.")), ToolInput(tag="in_add_splice_motif", input_type=Int(optional=True), prefix="--add-splice-motif", doc=InputDocumentation(doc="Add additional splice junction motifs to permit when\nusing the --filter-splice-juncs flag. Use this flag\nmultiple times for each additional junction motif.\nMotif must be 4 bases.")), ToolInput(tag="in_ref_genome_fast_a", input_type=File(optional=True), prefix="--ref-genome-fasta", doc=InputDocumentation(doc="Reference genome sequence in FASTA format needed to\nassess splice junction motif sequences. Use in\nconjunction with --filter-splice-juncs.")), ToolInput(tag="in_isoform_frac", input_type=Float(optional=True), prefix="--isoform-frac", doc=InputDocumentation(doc="Report transcript isoforms with expression fraction >=\nFRAC (0.0-1.0) relative to the major isoform within\neach gene [default=0.05]")), ToolInput(tag="in_max_isoforms", input_type=Int(optional=True), prefix="--max-isoforms", doc=InputDocumentation(doc="Maximum isoforms to report for each gene [default=0]")), ToolInput(tag="in_assemble_un_stranded", input_type=Boolean(optional=True), prefix="--assemble-unstranded", doc=InputDocumentation(doc="Enable assembly of unstranded transfrags\n[default=False]")), ToolInput(tag="in_no_assemble_un_stranded", input_type=Boolean(optional=True), prefix="--no-assemble-unstranded", doc=InputDocumentation(doc="Disable assembly of unstranded transfrags")), ToolInput(tag="in_change_point", input_type=Boolean(optional=True), prefix="--change-point", doc=InputDocumentation(doc="Enable change point detection [default=True]")), ToolInput(tag="in_no_change_point", input_type=Boolean(optional=True), prefix="--no-change-point", doc=InputDocumentation(doc="Disable change point detection")), ToolInput(tag="in_change_point_p_value", input_type=Int(optional=True), prefix="--change-point-pvalue", doc=InputDocumentation(doc="Mann-Whitney-U p-value threshold for calling change\npoints [default=0.01]")), ToolInput(tag="in_change_point_fold_change", input_type=Int(optional=True), prefix="--change-point-fold-change", doc=InputDocumentation(doc="Fold change threshold between the means of two\nputative segments on either side of a change point. A\nvalue of 0.0 is the most strict setting, effectively\ncalling no change points. Conversely, setting the\nvalue to 1.0 calls allchange points [default=0.85]")), ToolInput(tag="in_change_point_trim", input_type=Boolean(optional=True), prefix="--change-point-trim", doc=InputDocumentation(doc="Trim transfrags around change points [default=True]")), ToolInput(tag="in_no_change_point_trim", input_type=Boolean(optional=True), prefix="--no-change-point-trim", doc=InputDocumentation(doc="Disable trimming around change points")), ToolInput(tag="in_path_kmax", input_type=File(optional=True), prefix="--path-kmax", doc=InputDocumentation(doc="Limit optimization for choosing parameter k for path\ngraph (DeBruijn graph) to k <= kmax [default=0]")), ToolInput(tag="in_path_frac", input_type=File(optional=True), prefix="--path-frac", doc=InputDocumentation(doc="dynamic programming algorithm will stop finding\nsuboptimal paths when path expression drops below a\nfraction X (0.0-1.0) of the total locus expression\n[default=0.0]")), ToolInput(tag="in_max_paths", input_type=Int(optional=True), prefix="--max-paths", doc=InputDocumentation(doc="dynamic programming algorithm will stop after finding\nN paths [default=0]\n")), ToolInput(tag="in_sample_file", input_type=String(), position=0, doc=InputDocumentation(doc="optional arguments:"))], outputs=[ToolOutput(tag="out_output_dir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output_dir", type_hint=File()), doc=OutputDocumentation(doc="directory where output files will be stored (if\nalready exists then --resume must be specified)\n[default=output]"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Taco_Run_V0_1_0().translate("wdl", allow_empty_container=True)

