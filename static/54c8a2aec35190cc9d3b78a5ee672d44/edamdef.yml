!Command
positional: []
named: []
command:
- edamdef
parent:
subcommands: []
help_flag: !Flag
  description: boolean    Report command line options and exit. More information on
    associated and general qualifiers can be found with -help -verbose
  synonyms:
  - -help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "Find EDAM ontology terms by definition\nVersion: EMBOSS:6.6.0.0\n\n  \
  \ Standard (Mandatory) qualifiers:\n  [-query]             string     Definition\
  \ word(s) to search for in ontology\n                                  (Any string)\n\
  \  [-outfile]           outobo     [*.edamdef] Output ontology term file name\n\n\
  \   Additional (Optional) qualifiers:\n   -namespace          menu       [*] By\
  \ default all terms are returned.\n                                  Searches can\
  \ be limited to one or a few\n                                  namespaces. (Values:\
  \ data (Data entity);\n                                  entity (Biological entity);\
  \ format (Data\n                                  format); identifier (Identifier);\
  \ operation\n                                  (Bioinformatics operation); resource\
  \ (Data\n                                  resource); topic (Field of bioinformatics\n\
  \                                  study))\n\n   Advanced (Unprompted) qualifiers:\n\
  \   -subclasses         boolean    [N] Extend the query matches to include all\n\
  \                                  terms which are specialisations (EDAM\n     \
  \                             sub-classes) of the matched type.\n   -obsolete  \
  \         boolean    [N] The default behaviour is to not use or\n              \
  \                    return obsolete terms. This option if set\n               \
  \                   will include all terms.\n\n   General qualifiers:\n   -help\
  \               boolean    Report command line options and exit. More\n        \
  \                          information on associated and general\n             \
  \                     qualifiers can be found with -help -verbose\n\n"
generated_using:
- --help
