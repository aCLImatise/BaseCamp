from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, String, Boolean

Pswdb_V0_1_0 = CommandToolBuilder(tool="pswdb", base_command=["pswdb"], inputs=[ToolInput(tag="in_penalty_default", input_type=Int(optional=True), prefix="-g", doc=InputDocumentation(doc="penalty (default 12)")), ToolInput(tag="in_penatly_default", input_type=Int(optional=True), prefix="-e", doc=InputDocumentation(doc="penatly (default 2)")), ToolInput(tag="in_matrix_default_blosumbla", input_type=Int(optional=True), prefix="-m", doc=InputDocumentation(doc="matrix (default BLOSUM62.bla)")), ToolInput(tag="in_abc", input_type=String(optional=True), prefix="-abc", doc=InputDocumentation(doc="the abc model")), ToolInput(tag="in_a_penalty_above_default", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="a penalty for above (default 120)")), ToolInput(tag="in_b_penalty_above_default", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc="b penalty for above (default 10)")), ToolInput(tag="in_c_penalty_above_default", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="c penalty for above (default 3)")), ToolInput(tag="in_pba", input_type=String(optional=True), prefix="-pba", doc=InputDocumentation(doc="the pba model")), ToolInput(tag="in_max_desc", input_type=Int(optional=True), prefix="-max_desc", doc=InputDocumentation(doc="of one line descriptions (default = 500)")), ToolInput(tag="in_max_aln", input_type=Int(optional=True), prefix="-max_aln", doc=InputDocumentation(doc="of alignments to show (default = 50)")), ToolInput(tag="in_cut", input_type=Int(optional=True), prefix="-cut", doc=InputDocumentation(doc="cutoff (score) (default = 40)")), ToolInput(tag="in_ids", input_type=String(optional=True), prefix="-ids", doc=InputDocumentation(doc="seq ids with alignments")), ToolInput(tag="in_no_his", input_type=String(optional=True), prefix="-nohis", doc=InputDocumentation(doc="not fit histogram")), ToolInput(tag="in_serial", input_type=Boolean(optional=True), prefix="-serial", doc=InputDocumentation(doc="use serial code (single processor)")), ToolInput(tag="in_pthread", input_type=Boolean(optional=True), prefix="-pthread", doc=InputDocumentation(doc="use pthread code (SMP box)")), ToolInput(tag="in_p_thr_no", input_type=Int(optional=True), prefix="-pthr_no", doc=InputDocumentation(doc="Number of threads to use")), ToolInput(tag="in_mpi", input_type=Boolean(optional=True), prefix="-mpi", doc=InputDocumentation(doc="use MPI code (distributed memory system)")), ToolInput(tag="in_pvm", input_type=Boolean(optional=True), prefix="-pvm", doc=InputDocumentation(doc="use parallel virtual machine search system")), ToolInput(tag="in_db_trace", input_type=String(optional=True), prefix="-dbtrace", doc=InputDocumentation(doc="Trace level of the database code (for debugging only)")), ToolInput(tag="in_s_routine", input_type=String(optional=True), prefix="-sroutine", doc=InputDocumentation(doc="Search type routine [exact/kbest/forward]")), ToolInput(tag="in_dy_mem", input_type=Boolean(optional=True), prefix="-dymem", doc=InputDocumentation(doc="memory style [default/linear/explicit]")), ToolInput(tag="in_kbyte", input_type=Boolean(optional=True), prefix="-kbyte", doc=InputDocumentation(doc="memory amount to use [4000]")), ToolInput(tag="in_dy_debug", input_type=Boolean(optional=True), prefix="-dydebug", doc=InputDocumentation(doc="drop into dynamite dp matrix debugger")), ToolInput(tag="in_pal_debug", input_type=Boolean(optional=True), prefix="-paldebug", doc=InputDocumentation(doc="print PackAln after debugger run if used")), ToolInput(tag="in_version", input_type=Boolean(optional=True), prefix="-version", doc=InputDocumentation(doc="show version and compile info")), ToolInput(tag="in_silent", input_type=Boolean(optional=True), prefix="-silent", doc=InputDocumentation(doc="No messages on stderr")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="-quiet", doc=InputDocumentation(doc="No report on stderr")), ToolInput(tag="in_error_off_std", input_type=String(optional=True), prefix="-erroroffstd", doc=InputDocumentation(doc="warning messages to stderr")), ToolInput(tag="in_error_log", input_type=Boolean(optional=True), prefix="-errorlog", doc=InputDocumentation(doc="[file] Log warning messages to file"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Pswdb_V0_1_0().translate("wdl", allow_empty_container=True)

