from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String

Bifrost_V0_1_0 = CommandToolBuilder(tool="Bifrost", base_command=["Bifrost"], inputs=[ToolInput(tag="in_input_seq_file", input_type=Boolean(optional=True), prefix="--input-seq-file", doc=InputDocumentation(doc="Input sequence file (FASTA/FASTQ possibly gzipped)\nMultiple files can be provided as a list in a TXT file (one file per line)\nK-mers with exactly 1 occurrence in the input sequence files will be discarded")), ToolInput(tag="in_input_ref_file", input_type=Boolean(optional=True), prefix="--input-ref-file", doc=InputDocumentation(doc="Input reference file (FASTA/FASTQ possibly gzipped and GFA)\nMultiple files can be provided as a list in a TXT file (one file per line)\nAll k-mers of the input reference files are used")), ToolInput(tag="in_output_file", input_type=File(optional=True), prefix="--output-file", doc=InputDocumentation(doc="Prefix for output file(s)")), ToolInput(tag="in_threads", input_type=Boolean(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of threads (default is 1)")), ToolInput(tag="in_km_er_length", input_type=Boolean(optional=True), prefix="--kmer-length", doc=InputDocumentation(doc="Length of k-mers (default is 31)")), ToolInput(tag="in_min_length", input_type=Boolean(optional=True), prefix="--min-length", doc=InputDocumentation(doc="Length of minimizers (default is automatically chosen)")), ToolInput(tag="in_bloom_bits", input_type=Boolean(optional=True), prefix="--bloom-bits", doc=InputDocumentation(doc="Number of Bloom filter bits per k-mer with 1+ occurrences in the input files (default is 14)")), ToolInput(tag="in_bloom_bits_two", input_type=Boolean(optional=True), prefix="--bloom-bits2", doc=InputDocumentation(doc="Number of Bloom filter bits per k-mer with 2+ occurrences in the input files (default is 14)")), ToolInput(tag="in_load_mb_bf", input_type=Boolean(optional=True), prefix="--load-mbbf", doc=InputDocumentation(doc="Input Blocked Bloom Filter file, skips filtering step (default is no input)")), ToolInput(tag="in_write_mb_bf", input_type=File(optional=True), prefix="--write-mbbf", doc=InputDocumentation(doc="Output Blocked Bloom Filter file (default is no output)")), ToolInput(tag="in_chunk_size", input_type=Boolean(optional=True), prefix="--chunk-size", doc=InputDocumentation(doc="Read chunk size per thread (default is 64)")), ToolInput(tag="in_colors", input_type=Boolean(optional=True), prefix="--colors", doc=InputDocumentation(doc="Color the compacted de Bruijn graph (default is no coloring)")), ToolInput(tag="in_keep_mercy", input_type=Boolean(optional=True), prefix="--keep-mercy", doc=InputDocumentation(doc="Keep low coverage k-mers connecting tips")), ToolInput(tag="in_clip_tips", input_type=Boolean(optional=True), prefix="--clip-tips", doc=InputDocumentation(doc="Clip tips shorter than k k-mers in length")), ToolInput(tag="in_del_isolated", input_type=Boolean(optional=True), prefix="--del-isolated", doc=InputDocumentation(doc="Delete isolated contigs shorter than k k-mers in length")), ToolInput(tag="in_fast_a", input_type=File(optional=True), prefix="--fasta", doc=InputDocumentation(doc="Output file is in FASTA format (only sequences) instead of GFA")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Print information messages during execution")), ToolInput(tag="in_input_graph_file", input_type=Boolean(optional=True), prefix="--input-graph-file", doc=InputDocumentation(doc="Input graph file to update (GFA format)")), ToolInput(tag="in_input_color_file", input_type=Boolean(optional=True), prefix="--input-color-file", doc=InputDocumentation(doc="Input color file associated with the input graph file to update")), ToolInput(tag="in_input_query_file", input_type=Boolean(optional=True), prefix="--input-query-file", doc=InputDocumentation(doc="Input query file (FASTA/FASTQ possibly gzipped)\nMultiple files can be provided as a list in a TXT file (one file per line)")), ToolInput(tag="in_ratio_km_ers", input_type=Boolean(optional=True), prefix="--ratio-kmers", doc=InputDocumentation(doc="Ratio of k-mers from queries that must occur in the graph (default is 0.8)")), ToolInput(tag="in_in_exact", input_type=Boolean(optional=True), prefix="--inexact", doc=InputDocumentation(doc="Graph is searched with exact and inexact k-mers (1 substitution or indel) from queries")), ToolInput(tag="in_build_compacted_graph", input_type=String(), position=0, doc=InputDocumentation(doc="Build a compacted de Bruijn graph, with or without colors")), ToolInput(tag="in_update_compacted_graph", input_type=String(), position=1, doc=InputDocumentation(doc="Update a compacted (possible colored) de Bruijn graph with new sequences")), ToolInput(tag="in_query_compacted_graph", input_type=String(), position=2, doc=InputDocumentation(doc="Query a compacted (possible colored) de Bruijn graph")), ToolInput(tag="in_var_25", input_type=String(), position=0, doc=InputDocumentation(doc="> Mandatory with required argument:")), ToolInput(tag="in_var_26", input_type=String(), position=0, doc=InputDocumentation(doc="> Mandatory with required argument:")), ToolInput(tag="in_var_27", input_type=String(), position=0, doc=InputDocumentation(doc="> Mandatory with required argument:"))], outputs=[ToolOutput(tag="out_output_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_file", type_hint=File()), doc=OutputDocumentation(doc="Prefix for output file(s)")), ToolOutput(tag="out_write_mb_bf", output_type=File(optional=True), selector=InputSelector(input_to_select="in_write_mb_bf", type_hint=File()), doc=OutputDocumentation(doc="Output Blocked Bloom Filter file (default is no output)")), ToolOutput(tag="out_fast_a", output_type=File(optional=True), selector=InputSelector(input_to_select="in_fast_a", type_hint=File()), doc=OutputDocumentation(doc="Output file is in FASTA format (only sequences) instead of GFA"))], container="quay.io/biocontainers/bifrost:1.0.5--h8b12597_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bifrost_V0_1_0().translate("wdl")

