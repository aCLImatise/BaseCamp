from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, String, File

Mcxdeblast_V0_1_0 = CommandToolBuilder(tool="mcxdeblast", base_command=["mcxdeblast"], inputs=[ToolInput(tag="in_m_nine", input_type=Boolean(optional=True), prefix="--m9", doc=InputDocumentation(doc="Expect column (-m 9) input.")), ToolInput(tag="in_line_mode", input_type=Int(optional=True), prefix="--line-mode", doc=InputDocumentation(doc="Output simple ID1 ID2 SCORE format.")), ToolInput(tag="in_score", input_type=Int(optional=True), prefix="--score", doc=InputDocumentation(doc="Use bit scores, E-values,\nor bit scores normalized by hsp-length")), ToolInput(tag="in_sort", input_type=String(optional=True), prefix="--sort", doc=InputDocumentation(doc="Use alphabetic sorting (default) or occurrence.")), ToolInput(tag="in_tab", input_type=File(optional=True), prefix="--tab", doc=InputDocumentation(doc="Use user-supplied tab file.")), ToolInput(tag="in_xi_dat", input_type=File(optional=True), prefix="--xi-dat", doc=InputDocumentation(doc="Strip <suf> from file-name to create output base name.")), ToolInput(tag="in_xo_dat", input_type=String(optional=True), prefix="--xo-dat", doc=InputDocumentation(doc="Add <suf> to base name.")), ToolInput(tag="in_b_cut", input_type=String(optional=True), prefix="--bcut", doc=InputDocumentation(doc="Ignore hits below bit score <val>")), ToolInput(tag="in_e_cut", input_type=String(optional=True), prefix="--ecut", doc=InputDocumentation(doc="Ignore hits below E-value <val>")), ToolInput(tag="in_r_cut", input_type=String(optional=True), prefix="--rcut", doc=InputDocumentation(doc="Ignore hits below raw value <val>")), ToolInput(tag="in_out", input_type=File(optional=True), prefix="--out", doc=InputDocumentation(doc="Output file name ('-' for STDOUT)")), ToolInput(tag="in_based_oth_dr", input_type=String(), position=0, doc=InputDocumentation(doc="[to be read by mcxassemble]")), ToolInput(tag="in_based_ot_raw", input_type=String(), position=1, doc=InputDocumentation(doc="[to be read by mcxassemble]")), ToolInput(tag="in_based_ot_map", input_type=String(), position=2, doc=InputDocumentation(doc="[to be read by mcxassemble]")), ToolInput(tag="in_based_ot_tab", input_type=String(), position=3, doc=InputDocumentation(doc="[to be read by clmformat]")), ToolInput(tag="in_base_do_terr", input_type=String(), position=4, doc=InputDocumentation(doc="[error log]"))], outputs=[ToolOutput(tag="out_xi_dat", output_type=File(optional=True), selector=InputSelector(input_to_select="in_xi_dat", type_hint=File()), doc=OutputDocumentation(doc="Strip <suf> from file-name to create output base name.")), ToolOutput(tag="out_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out", type_hint=File()), doc=OutputDocumentation(doc="Output file name ('-' for STDOUT)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Mcxdeblast_V0_1_0().translate("wdl", allow_empty_container=True)

