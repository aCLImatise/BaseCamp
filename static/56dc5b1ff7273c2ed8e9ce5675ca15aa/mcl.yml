!Command
command:
- mcl
positional: []
named:
- !Flag
  description: '!  write output to file <fname>'
  synonyms:
  - -o
  args: !SimpleFlagArg
    name: fname
  optional: true
- !Flag
  description: i  output description of options
  synonyms:
  - --help
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: i  show some of the default settings
  synonyms:
  - -z
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: i  show the meaning of the jury pruning synopsis
  synonyms:
  - --jury-charter
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: i  show estimated RAM usage for graphs with <int> nodes
  synonyms:
  - -how-much-ram
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: i  show the preset -scheme options
  synonyms:
  - --show-schemes
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: what to do with overlap (default cut)
  synonyms:
  - -overlap
  args: !SimpleFlagArg
    name: split|cut|keep
  optional: true
- !Flag
  description: analyze clustering, make sure it induces cocos
  synonyms:
  - -force-connected
  args: !SimpleFlagArg
    name: y/n
  optional: true
- !Flag
  description: analyze clustering, see whether it induces cocos
  synonyms:
  - -check-connected
  args: !SimpleFlagArg
    name: y/n
  optional: true
- !Flag
  description: output the limit matrix
  synonyms:
  - --write-limit
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: send log to stdout
  synonyms:
  - -show-log
  args: !SimpleFlagArg
    name: y/n
  optional: true
- !Flag
  description: remove loops in input graphs if any
  synonyms:
  - -discard-loops
  args: !SimpleFlagArg
    name: y/n
  optional: true
- !Flag
  description: set loop weight to sum of node arc weights
  synonyms:
  - --sum-loops
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: increase loop-weights <num>-fold
  synonyms:
  - -c
  args: !SimpleFlagArg
    name: num
  optional: true
- !Flag
  description: quiet level of logging
  synonyms:
  - -q
  args: !SimpleFlagArg
    name: log-spec
  optional: true
- !Flag
  description: append performance/characteristics measures
  synonyms:
  - -analyze
  args: !SimpleFlagArg
    name: y/n
  optional: true
- !Flag
  description: order clustering by one of lex|size|revsize|none
  synonyms:
  - -sort
  args: !SimpleFlagArg
    name: mode
  optional: true
- !Flag
  description: precision in interchange (intermediate matrices) output
  synonyms:
  - -digits
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: write binary output
  synonyms:
  - --write-binary
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: expect abc-format (label input), write label output
  synonyms:
  - --abc
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: expect sif-format (label input), write label output
  synonyms:
  - --sif
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: expect etc-format (label input), write label output
  synonyms:
  - --etc
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: accept extended SIF or ETC format (label:weight fields)
  synonyms:
  - --expect-values
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: expect native network format, write label output using dictionary
  synonyms:
  - -use-tab
  args: !SimpleFlagArg
    name: fname
  optional: true
- !Flag
  description: transform label values
  synonyms:
  - -abc-tf
  args: !SimpleFlagArg
    name: tf-spec
  optional: true
- !Flag
  description: log-transform label value, negate sign
  synonyms:
  - --abc-neg-log
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: log10-transform label value, negate sign
  synonyms:
  - --abc-neg-log10
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: write input matrix to file
  synonyms:
  - -write-graph
  args: !SimpleFlagArg
    name: fname
  optional: true
- !Flag
  description: write transformed matrix to file
  synonyms:
  - -write-graphx
  args: !SimpleFlagArg
    name: fname
  optional: true
- !Flag
  description: file name to write expanded graph to
  synonyms:
  - -write-expanded
  args: !SimpleFlagArg
    name: fname
  optional: true
- !Flag
  description: string describing the experiment
  synonyms:
  - -annot
  args: !SimpleFlagArg
    name: description
  optional: true
- !Flag
  description: append <suffix> to mcl-created output file name
  synonyms:
  - -aa
  args: !SimpleFlagArg
    name: suffix
  optional: true
- !Flag
  description: '!  use this directory for output'
  synonyms:
  - -odir
  args: !SimpleFlagArg
    name: directory
  optional: true
- !Flag
  description: i  show output file name mcl would construct
  synonyms:
  - -az
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: i  show the suffix mcl constructs from parameters
  synonyms:
  - -ax
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: prepend <prefix> to mcl-created output file name
  synonyms:
  - -ap
  args: !SimpleFlagArg
    name: prefix
  optional: true
- !Flag
  description: use automatic naming and use input directory for output
  synonyms:
  - --d
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: transform matrix values
  synonyms:
  - -tf
  args: !SimpleFlagArg
    name: tf-spec
  optional: true
- !Flag
  description: subcluster this clustering
  synonyms:
  - -icl
  args: !SimpleFlagArg
    name: fname
  optional: true
- !Flag
  description: preprocess by applying inflation with parameter <num>
  synonyms:
  - -pi
  args: !SimpleFlagArg
    name: num
  optional: true
- !Flag
  description: as -pi, applied before shadowing
  synonyms:
  - -ph
  args: !SimpleFlagArg
    name: num
  optional: true
- !Flag
  description: assume expanded input, inflate with parameter <num>
  synonyms:
  - -if
  args: !SimpleFlagArg
    name: num
  optional: true
- !Flag
  description: '!  main inflation value (default 2.0)'
  synonyms:
  - -I
  args: !SimpleFlagArg
    name: num
  optional: true
- !Flag
  description: '!  use a preset resource scheme (cf --show-schemes)'
  synonyms:
  - -scheme
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: '!  allow <int> neighbours throughout computation'
  synonyms:
  - -resource
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: estimated sparse matrix-vector overhead per summand (default 10)
  synonyms:
  - -sparse
  args: !SimpleFlagArg
    name: num
  optional: true
- !Flag
  description: '!  expansion thread number, use with multiple CPUs'
  synonyms:
  - -te
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: (small graphs only [#<20]) dump iterands to *screen*
  synonyms:
  - --show
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '{pruning|explain|clusters|all}    mode verbose'
  synonyms:
  - -v
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '{pruning|explain|clusters|all}    mode silent'
  synonyms:
  - -V
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: the rigid pruning threshold
  synonyms:
  - -p
  args: !SimpleFlagArg
    name: num
  optional: true
- !Flag
  description: (inverted) rigid pruning threshold (cf -z)
  synonyms:
  - -P
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: recover to maximally <int> entries if needed
  synonyms:
  - -R
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: select down to <int> entries if needed
  synonyms:
  - -S
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: try recovery if mass is less than <pct>
  synonyms:
  - -pct
  args: !SimpleFlagArg
    name: pct
  optional: true
- !Flag
  description: warn if pruning reduces entry count by <int>
  synonyms:
  - -warn-factor
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: warn if pruning reduces mass to <pct> weight
  synonyms:
  - -warn-pct
  args: !SimpleFlagArg
    name: pct
  optional: true
- !Flag
  description: use <str> to construct dump (file) names
  synonyms:
  - -dump-stem
  args: !SimpleFlagArg
    name: str
  optional: true
- !Flag
  description: <mode> in chr|ite|cls|dag (cf manual page)
  synonyms:
  - -dump
  args: !SimpleFlagArg
    name: mode
  optional: true
- !Flag
  description: :<int>    only dump for iterand indices in this interval
  synonyms:
  - -dump-interval
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: only dump if the iterand index modulo <int> vanishes
  synonyms:
  - -dump-modulo
  args: !SimpleFlagArg
    name: int
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: i  output description of most important options
  synonyms:
  - -h
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: i  show version
  synonyms:
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "-o <fname>      !  write output to file <fname>\n\n--version       i \
  \ show version\n-h              i  output description of most important options\n\
  --help          i  output description of options\n-z              i  show some of\
  \ the default settings\n--jury-charter  i  show the meaning of the jury pruning\
  \ synopsis\n-how-much-ram <int> i  show estimated RAM usage for graphs with <int>\
  \ nodes\n--show-schemes  i  show the preset -scheme options\n\n-overlap <split|cut|keep>\
  \    what to do with overlap (default cut)\n-force-connected y/n    analyze clustering,\
  \ make sure it induces cocos\n-check-connected y/n    analyze clustering, see whether\
  \ it induces cocos\n--write-limit      output the limit matrix\n-show-log y/n  \
  \    send log to stdout\n-discard-loops y/n    remove loops in input graphs if any\n\
  --sum-loops        set loop weight to sum of node arc weights\n-c <num>        \
  \   increase loop-weights <num>-fold\n-q log-spec        quiet level of logging\n\
  -analyze y/n       append performance/characteristics measures\n-sort <mode>   \
  \    order clustering by one of lex|size|revsize|none\n-digits <int>      precision\
  \ in interchange (intermediate matrices) output\n--write-binary     write binary\
  \ output\n\n--abc              expect abc-format (label input), write label output\n\
  --sif              expect sif-format (label input), write label output\n--etc  \
  \            expect etc-format (label input), write label output\n--expect-values\
  \    accept extended SIF or ETC format (label:weight fields)\n-use-tab fname   \
  \  expect native network format, write label output using dictionary\n-abc-tf tf-spec\
  \    transform label values\n\n--abc-neg-log      log-transform label value, negate\
  \ sign\n--abc-neg-log10    log10-transform label value, negate sign\n-write-graph\
  \ fname    write input matrix to file\n-write-graphx fname    write transformed\
  \ matrix to file\n\n-write-expanded <fname>    file name to write expanded graph\
  \ to\n\n-annot <description>    string describing the experiment\n-aa <suffix> \
  \      append <suffix> to mcl-created output file name\n-odir <directory> !  use\
  \ this directory for output\n-az             i  show output file name mcl would\
  \ construct\n-ax             i  show the suffix mcl constructs from parameters\n\
  -ap <prefix>       prepend <prefix> to mcl-created output file name\n--d       \
  \         use automatic naming and use input directory for output\n\n-tf tf-spec\
  \        transform matrix values\n-icl fname         subcluster this clustering\n\
  -pi <num>          preprocess by applying inflation with parameter <num>\n-ph <num>\
  \          as -pi, applied before shadowing\n-if <num>          assume expanded\
  \ input, inflate with parameter <num>\n-I <num>        !  main inflation value (default\
  \ 2.0)\n-scheme <int>   !  use a preset resource scheme (cf --show-schemes)\n-resource\
  \ <int> !  allow <int> neighbours throughout computation\n-sparse <num>      estimated\
  \ sparse matrix-vector overhead per summand (default 10)\n-te <int>       !  expansion\
  \ thread number, use with multiple CPUs\n\n--show             (small graphs only\
  \ [#<20]) dump iterands to *screen*\n-v {pruning|explain|clusters|all}    mode verbose\n\
  -V {pruning|explain|clusters|all}    mode silent\n\n-p <num>           the rigid\
  \ pruning threshold\n-P <int>           (inverted) rigid pruning threshold (cf -z)\n\
  -R <int>           recover to maximally <int> entries if needed\n-S <int>      \
  \     select down to <int> entries if needed\n-pct <pct>         try recovery if\
  \ mass is less than <pct>\n\n-warn-factor <int>    warn if pruning reduces entry\
  \ count by <int>\n-warn-pct <pct>    warn if pruning reduces mass to <pct> weight\n\
  \n-dump-stem <str>    use <str> to construct dump (file) names\n-dump <mode>   \
  \    <mode> in chr|ite|cls|dag (cf manual page)\n-dump-interval <int>:<int>    only\
  \ dump for iterand indices in this interval\n-dump-modulo <int>    only dump if\
  \ the iterand index modulo <int> vanishes\n\nLegend:\n  (i)   for informative options\
  \ that exit after usage\n  (!)   for important options that you should be aware\
  \ of\nConsult the manual page for more information\n"
generated_using:
- --help
