!Command
positional:
- !Positional
  description: ''
  position: 0
  name: msa_list
  optional: false
named:
- !Flag
  description: (Required unless -m or -p) Use specified tree topology for all phylogenetic
    models (Newick format).
  synonyms:
  - -t
  args: !SimpleFlagArg
    name: file
  optional: true
- !Flag
  description: Input format for alignment.  May be FASTA, PHYLIP, MPM, SS, or MAF
    (default FASTA).
  synonyms:
  - -i
  args: !SimpleFlagArg
    name: fmt
  optional: true
- !Flag
  description: Read background model from specified file (.mod format). By default,
    the background model is estimated in a preprocessing step, by pooling all data.
  synonyms:
  - -b
  args: !SimpleFlagArg
    name: file
  optional: true
- !Flag
  description: Estimate a separate background model for each multiple alignment. (Not
    yet implemented.)
  synonyms:
  - -s
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Learn motifs of the specified size (default is 10).
  synonyms:
  - -k
  args: !SimpleFlagArg
    name: size
  optional: true
- !Flag
  description: Report best <n> motifs (default 3).
  synonyms:
  - -B
  args: !SimpleFlagArg
    name: n
  optional: true
- !Flag
  description: MEME mode.  Use multinomial rather than phylogenetic models.  Causes
    multiple alignments to be ignored -- any gaps are discarded and all sequences
    are assumed independent.
  synonyms:
  - -m
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: <+lst> Use the discriminative training method of Segal et al. (RECOMB'02),
    rather than EM.  The specified list should contain the filenames from msa_list
    that are to be considered *positive* examples (containing the desired motif);
    all others will be considered negative examples.  Can be used with or without
    -m.
  synonyms:
  - -d
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Use "profile" models rather than phylogenetic models (characters in
    each alignment column assumed independent).  The resulting model is a hybrid of
    the full model and MEME's model.  Essentially, it uses the multiple alignments
    but not the phylogeny.  NOT YET IMPLEMENTED.
  synonyms:
  - -p
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Perform <n> random restarts and report the motif with highest likelihood.  Default
    number is 10.  Ignored with -I, -P, and -R unless -S is specified (see below).
  synonyms:
  - -n
  args: !SimpleFlagArg
    name: n
  optional: true
- !Flag
  description: Run the algorithm after a "soft" initialization with each of the consensus
    sequences in the specified list. At each position, <pc> pseudocounts (see -c)
    are given to the consensus base and 1 pseudocount to all other bases.  Each string
    must have length at most equal to the size of the motif.  If shorter, it is used
    as a "seed" for a motif, with flanking positions treated as wildcards.
  synonyms:
  - -I
  args: !SimpleFlagArg
    name: mlst
  optional: true
- !Flag
  description: <x,y>  Initialize with the x most prevalent y-tuples.  A soft initialization
    is performed, as above.  If y is less than the motif size, y-tuples are used as
    a "seed" for a motif, as above.
  synonyms:
  - -P
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: <x,y>  Initialize with a random sample of x y-tuples.  A soft initialization
    is performed, as above.  If y is less than the motif size, y-tuples are used as
    a "seed" for a motif, as above.
  synonyms:
  - -R
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: (for use with -I, -P, -R) Winnow initialization sequences to the top
    <n> based on the unmaximized likelihood.
  synonyms:
  - -w
  args: !SimpleFlagArg
    name: n
  optional: true
- !Flag
  description: (for use with -I, -P, -R) Number of pseudocounts for consensus bases
    (default 5).
  synonyms:
  - -c
  args: !SimpleFlagArg
    name: pc
  optional: true
- !Flag
  description: (for use with -I, -P, -R) Instead of doing a deterministic initialization
    based on a consensus sequence, sample parameters from a Dirichlet distribution
    defined by the pseudocounts (see -c).  In this case, random restarts are performed,
    as specified by -n.
  synonyms:
  - -S
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Use the specified prefix for all output files (dflt. "phastm").
  synonyms:
  - -o
  args: !SimpleFlagArg
    name: pref
  optional: true
- !Flag
  description: Produce HTML formatted output, in addition to ordinary output. One
    file is produced per predicted motif, as well as a  single HTML-formatted summary
    file.
  synonyms:
  - -H
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Produce a BED file with predicted motifs, for use in the  UCSC browser.  Currently,
    sequence names must be formatted such as "chr10:102553847-102554897+", with the
    final '+' or '-' indicating strand.
  synonyms:
  - -D
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: (For use with -H or -D) Suppress ordinary output to stdout.
  synonyms:
  - -x
  args: !EmptyFlagArg {}
  optional: true
command:
- phastMotif
parent:
subcommands: []
help_flag: !Flag
  description: Print this help message.
  synonyms:
  - -h
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "\nPROGRAM:      phastMotif\n\nDESCRIPTION:  Predicts motifs from a set\
  \ of multiple alignments.  Uses\n              an EM algorithm similar to that of\
  \ MEME, but a motif is\n              defined by phylogenetic models rather than\
  \ multinomial\n              distributions.  The specified multiple alignments may\n\
  \              actually be single sequences (see -m).  Various parameters\n    \
  \          control the strategy for initialization (see below).\n              Currently,\
  \ the F81 substitution model is assumed.\n\nUSAGE:        phastMotif [-t <treefile>]\
  \ [OPTIONS] <msa_list>\n\nOPTIONS:\n    -t <file> (Required unless -m or -p) Use\
  \ specified tree topology for\n              all phylogenetic models (Newick format).\n\
  \n    -i <fmt>  Input format for alignment.  May be FASTA, PHYLIP, MPM, SS,\n  \
  \            or MAF (default FASTA).\n\n    -b <file> Read background model from\
  \ specified file (.mod format).\n              By default, the background model\
  \ is estimated\n              in a preprocessing step, by pooling all data.\n\n\
  \    -s        Estimate a separate background model for each multiple alignment.\n\
  \              (Not yet implemented.)\n\n    -k <size> Learn motifs of the specified\
  \ size (default is 10).\n\n    -B <n>    Report best <n> motifs (default 3).\n\n\
  \    -m        MEME mode.  Use multinomial rather than phylogenetic\n          \
  \    models.  Causes multiple alignments to be ignored -- any\n              gaps\
  \ are discarded and all sequences are assumed\n              independent.\n\n  \
  \  -d <+lst> Use the discriminative training method of Segal et\n              al.\
  \ (RECOMB'02), rather than EM.  The specified list\n              should contain\
  \ the filenames from msa_list that are to\n              be considered *positive*\
  \ examples (containing the\n              desired motif); all others will be considered\
  \ negative\n              examples.  Can be used with or without -m.\n\n    -p \
  \       Use \"profile\" models rather than phylogenetic models\n              (characters\
  \ in each alignment column assumed\n              independent).  The resulting model\
  \ is a hybrid of the\n              full model and MEME's model.  Essentially, it\
  \ uses the\n              multiple alignments but not the phylogeny.  NOT YET IMPLEMENTED.\n\
  \n    -n <n>    Perform <n> random restarts and report the motif with highest\n\
  \              likelihood.  Default number is 10.  Ignored with -I, -P, and\n  \
  \            -R unless -S is specified (see below).\n\n    -I <mlst> Run the algorithm\
  \ after a \"soft\" initialization with\n              each of the consensus sequences\
  \ in the specified list.\n              At each position, <pc> pseudocounts (see\
  \ -c) are given\n              to the consensus base and 1 pseudocount to all other\n\
  \              bases.  Each string must have length at most equal to\n         \
  \     the size of the motif.  If shorter, it is used as a\n              \"seed\"\
  \ for a motif, with flanking positions treated as\n              wildcards.\n\n\
  \    -P <x,y>  Initialize with the x most prevalent y-tuples.  A soft\n        \
  \      initialization is performed, as above.  If y is less\n              than\
  \ the motif size, y-tuples are used as a \"seed\" for\n              a motif, as\
  \ above.\n\n    -R <x,y>  Initialize with a random sample of x y-tuples.  A soft\n\
  \              initialization is performed, as above.  If y is less\n          \
  \    than the motif size, y-tuples are used as a \"seed\" for\n              a motif,\
  \ as above.\n\n    -w <n>    (for use with -I, -P, -R) Winnow initialization sequences\n\
  \              to the top <n> based on the unmaximized likelihood.\n\n    -c <pc>\
  \   (for use with -I, -P, -R) Number of pseudocounts for\n              consensus\
  \ bases (default 5).\n\n    -S        (for use with -I, -P, -R) Instead of doing\
  \ a deterministic\n              initialization based on a consensus sequence, sample\n\
  \              parameters from a Dirichlet distribution defined by the\n       \
  \       pseudocounts (see -c).  In this case, random restarts\n              are\
  \ performed, as specified by -n.\n\n    -o <pref> Use the specified prefix for all\
  \ output files (dflt. \"phastm\").\n    -H        Produce HTML formatted output,\
  \ in addition to ordinary output.\n              One file is produced per predicted\
  \ motif, as well as a \n              single HTML-formatted summary file.\n\n  \
  \  -D        Produce a BED file with predicted motifs, for use in the \n       \
  \       UCSC browser.  Currently, sequence names must be\n              formatted\
  \ such as \"chr10:102553847-102554897+\", with\n              the final '+' or '-'\
  \ indicating strand.\n\n    -x        (For use with -H or -D) Suppress ordinary\
  \ output to stdout.\n\n    -h        Print this help message.\n\n"
generated_using:
- -h
