!Command
command:
- QueryDNADatabase.py
positional:
- !Positional
  optional: false
  position: 0
  name: in_file
  description: 'Input file: FASTQ/A file (can be gzipped).'
- !Positional
  optional: false
  position: 1
  name: training_data
  description: "Training/reference data (HDF5 file created by\nMakeTrainingDatabase.py)"
- !Positional
  optional: false
  position: 2
  name: out_csv
  description: Output CSV file
named:
- !Flag
  optional: true
  synonyms:
  - -t
  - --threads
  description: 'Number of threads to use (default: 8)'
  args: !SimpleFlagArg
    name: THREADS
- !Flag
  optional: true
  synonyms:
  - -f
  - --force
  description: 'Force creation of new NodeGraph. (default: False)'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -fp
  - --fp_rate
  description: 'False positive rate. (default: 0.0001)'
  args: !SimpleFlagArg
    name: FP_RATE
- !Flag
  optional: true
  synonyms:
  - -ct
  - --containment_threshold
  description: "Only return results with containment index above this\nvalue (default:\
    \ 0.02)"
  args: !SimpleFlagArg
    name: CONTAINMENT_THRESHOLD
- !Flag
  optional: true
  synonyms:
  - -c
  - --confidence
  description: "Desired probability that all results were returned\nwith containment\
    \ index above threshold [-ct] (default:\n0.95)"
  args: !SimpleFlagArg
    name: CONFIDENCE
- !Flag
  optional: true
  synonyms:
  - -ng
  - --node_graph
  description: "NodeGraph/bloom filter location. Used if it exists; if\nnot, one will\
    \ be created and put in the same directory\nas the specified output CSV file.\
    \ (default: None)"
  args: !SimpleFlagArg
    name: NODE_GRAPH
- !Flag
  optional: true
  synonyms:
  - -b
  - --base_name
  description: "Flag to indicate that only the base names (not the\nfull path) should\
    \ be saved in the output CSV file\n(default: False)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -i
  - --intersect_nodegraph
  description: "Option to only insert query k-mers in bloom filter if\nthey appear\
    \ anywhere in the training database. Note\nthat the Jaccard estimates will now\
    \ be J(query\nintersect union_i training_i, training_i) instead of\nJ(query, training_i),\
    \ but will use significantly less\nspace. (default: False)\n"
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "usage: QueryDNADatabase.py [-h] [-t THREADS] [-f] [-fp FP_RATE]\n    \
  \                       [-ct CONTAINMENT_THRESHOLD] [-c CONFIDENCE]\n          \
  \                 [-ng NODE_GRAPH] [-b] [-i]\n                           in_file\
  \ training_data out_csv\n\nThis script creates a CSV file of similarity indicies\
  \ between the input file\nand each of the sketches in the training/reference file.\n\
  \npositional arguments:\n  in_file               Input file: FASTQ/A file (can be\
  \ gzipped).\n  training_data         Training/reference data (HDF5 file created\
  \ by\n                        MakeTrainingDatabase.py)\n  out_csv              \
  \ Output CSV file\n\noptional arguments:\n  -h, --help            show this help\
  \ message and exit\n  -t THREADS, --threads THREADS\n                        Number\
  \ of threads to use (default: 8)\n  -f, --force           Force creation of new\
  \ NodeGraph. (default: False)\n  -fp FP_RATE, --fp_rate FP_RATE\n              \
  \          False positive rate. (default: 0.0001)\n  -ct CONTAINMENT_THRESHOLD,\
  \ --containment_threshold CONTAINMENT_THRESHOLD\n                        Only return\
  \ results with containment index above this\n                        value (default:\
  \ 0.02)\n  -c CONFIDENCE, --confidence CONFIDENCE\n                        Desired\
  \ probability that all results were returned\n                        with containment\
  \ index above threshold [-ct] (default:\n                        0.95)\n  -ng NODE_GRAPH,\
  \ --node_graph NODE_GRAPH\n                        NodeGraph/bloom filter location.\
  \ Used if it exists; if\n                        not, one will be created and put\
  \ in the same directory\n                        as the specified output CSV file.\
  \ (default: None)\n  -b, --base_name       Flag to indicate that only the base names\
  \ (not the\n                        full path) should be saved in the output CSV\
  \ file\n                        (default: False)\n  -i, --intersect_nodegraph\n\
  \                        Option to only insert query k-mers in bloom filter if\n\
  \                        they appear anywhere in the training database. Note\n \
  \                       that the Jaccard estimates will now be J(query\n       \
  \                 intersect union_i training_i, training_i) instead of\n       \
  \                 J(query, training_i), but will use significantly less\n      \
  \                  space. (default: False)\n"
generated_using:
- --help
docker_image:
