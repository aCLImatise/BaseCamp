from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Int, Boolean

Leviosam_V0_1_0 = CommandToolBuilder(tool="leviosam", base_command=["leviosam"], inputs=[ToolInput(tag="in_build_leviosam_index", input_type=File(optional=True), prefix="-v", doc=InputDocumentation(doc="Build a leviosam index using a VCF file.")), ToolInput(tag="in_sample_used_build", input_type=String(optional=True), prefix="-s", doc=InputDocumentation(doc="The sample used to build leviosam index (-v needs to be set).")), ToolInput(tag="in_prefix_output_file", input_type=File(optional=True), prefix="-p", doc=InputDocumentation(doc="The prefix of the output file.")), ToolInput(tag="in_output_file_format", input_type=File(optional=True), prefix="-O", doc=InputDocumentation(doc="Output file format, can be sam or bam. [sam]")), ToolInput(tag="in_haplotype_used_index", input_type=Int(optional=True), prefix="-g", doc=InputDocumentation(doc="/1    The haplotype used to index leviosam. [0]")), ToolInput(tag="in_path_name_map", input_type=File(optional=True), prefix="-n", doc=InputDocumentation(doc="Path to a name map file.\nThis can be used to map '1' to 'chr1', or vice versa.")), ToolInput(tag="in_path_length_map", input_type=Int(optional=True), prefix="-k", doc=InputDocumentation(doc="Path to a length map file.")), ToolInput(tag="in_path_be_liftedleave", input_type=File(optional=True), prefix="-a", doc=InputDocumentation(doc="Path to the SAM/BAM file to be lifted.\nLeave empty or set to '-' to read from stdin.")), ToolInput(tag="in_path_leviosam_index", input_type=File(optional=True), prefix="-l", doc=InputDocumentation(doc="Path to a leviosam index.")), ToolInput(tag="in_number_threads_used", input_type=Int(optional=True), prefix="-t", doc=InputDocumentation(doc="Number of threads used. [1]")), ToolInput(tag="in_chunk_size_queries", input_type=Int(optional=True), prefix="-T", doc=InputDocumentation(doc="Chunk size for each thread. [256]\nEach thread queries <-T> reads, lifts, and writes.\nSetting a higher <-T> uses slightly more memory but might benefit thread scaling.")), ToolInput(tag="in_add_md_nm", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="add MD and NM to output alignment records (requires -f option)")), ToolInput(tag="in_fasta_reference_corresponds", input_type=String(optional=True), prefix="-f", doc=InputDocumentation(doc="Fasta reference that corresponds to input SAM/BAM (for use w/ -m option)")), ToolInput(tag="in_lift", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_serialize", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_prefix_output_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_prefix_output_file", type_hint=File()), doc=OutputDocumentation(doc="The prefix of the output file.")), ToolOutput(tag="out_output_file_format", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_file_format", type_hint=File()), doc=OutputDocumentation(doc="Output file format, can be sam or bam. [sam]"))], container="quay.io/biocontainers/leviosam:3.1.1--hc9558a2_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Leviosam_V0_1_0().translate("wdl")

