!Command
command:
- aria2c
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -l
  - --log
  description: "The file name of the log file. If '-' is\nspecified, log is written\
    \ to stdout.\nPossible Values: /path/to/file, -\nTags: #basic"
  args: !SimpleFlagArg
    name: LOG
- !Flag
  optional: true
  synonyms:
  - -d
  - --dir
  description: "The directory to store the downloaded file.\nPossible Values: /path/to/directory\n\
    Default: /\nTags: #basic, #file"
  args: !SimpleFlagArg
    name: DIR
- !Flag
  optional: true
  synonyms:
  - -o
  - --out
  description: "The file name of the downloaded file. It is\nalways relative to the\
    \ directory given in -d\noption. When the -Z option is used, this option\nwill\
    \ be ignored.\nPossible Values: /path/to/file\nTags: #basic, #http, #ftp, #file"
  args: !SimpleFlagArg
    name: FILE
- !Flag
  optional: true
  synonyms:
  - -s
  - --split
  description: "Download a file using N connections. If more\nthan N URIs are given,\
    \ first N URIs are used and\nremaining URLs are used for backup. If less than\n\
    N URIs are given, those URLs are used more than\nonce so that N connections total\
    \ are made\nsimultaneously. The number of connections to the\nsame host is restricted\
    \ by the\n--max-connection-per-server option. See also the\n--min-split-size option.\n\
    Possible Values: 1-*\nDefault: 5\nTags: #basic, #http, #ftp"
  args: !SimpleFlagArg
    name: N
- !Flag
  optional: true
  synonyms:
  - --file-allocation
  description: "Specify file allocation method.\n'none' doesn't pre-allocate file\
    \ space. 'prealloc'\npre-allocates file space before download begins.\nThis may\
    \ take some time depending on the size of\nthe file.\nIf you are using newer file\
    \ systems such as ext4\n(with extents support), btrfs, xfs or NTFS\n(MinGW build\
    \ only), 'falloc' is your best\nchoice. It allocates large(few GiB) files\nalmost\
    \ instantly. Don't use 'falloc' with legacy\nfile systems such as ext3 and FAT32\
    \ because it\ntakes almost same time as 'prealloc' and it\nblocks aria2 entirely\
    \ until allocation finishes.\n'falloc' may not be available if your system\ndoesn't\
    \ have posix_fallocate() function.\n'trunc' uses ftruncate() system call or\n\
    platform-specific counterpart to truncate a file\nto a specified length.\nPossible\
    \ Values: none, prealloc, trunc, falloc\nDefault: prealloc\nTags: #basic, #file"
  args: !SimpleFlagArg
    name: METHOD
- !Flag
  optional: true
  synonyms:
  - -V
  - --check-integrity
  description: "[=true|false] Check file integrity by validating piece\nhashes or\
    \ a hash of entire file. This option has\neffect only in BitTorrent, Metalink\
    \ downloads\nwith checksums or HTTP(S)/FTP downloads with\n--checksum option.\
    \ If piece hashes are provided,\nthis option can detect damaged portions of a\
    \ file\nand re-download them. If a hash of entire file is\nprovided, hash check\
    \ is only done when file has\nbeen already download. This is determined by file\n\
    length. If hash check fails, file is\nre-downloaded from scratch. If both piece\
    \ hashes\nand a hash of entire file are provided, only\npiece hashes are used.\n\
    Possible Values: true, false\nDefault: false\nTags: #basic, #metalink, #bittorrent,\
    \ #file, #checksum"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -c
  - --continue
  description: "[=true|false]  Continue downloading a partially downloaded\nfile.\
    \ Use this option to resume a download\nstarted by a web browser or another program\n\
    which downloads files sequentially from the\nbeginning. Currently this option\
    \ is only\napplicable to http(s)/ftp downloads.\nPossible Values: true, false\n\
    Default: false\nTags: #basic, #http, #ftp"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -i
  - --input-file
  description: "Downloads URIs found in FILE. You can specify\nmultiple URIs for a\
    \ single entity: separate\nURIs on a single line using the TAB character.\nReads\
    \ input from stdin when '-' is specified.\nAdditionally, options can be specified\
    \ after each\nline of URI. This optional line must start with\none or more white\
    \ spaces and have one option per\nsingle line. See INPUT FILE section of man page\n\
    for details. See also --deferred-input option.\nPossible Values: /path/to/file,\
    \ -\nTags: #basic"
  args: !SimpleFlagArg
    name: FILE
- !Flag
  optional: true
  synonyms:
  - -j
  - --max-concurrent-downloads
  description: "Set maximum number of parallel downloads for\nevery static (HTTP/FTP)\
    \ URL, torrent and metalink.\nSee also --split and --optimize-concurrent-downloads\
    \ options.\nPossible Values: 1-*\nDefault: 5\nTags: #basic"
  args: !SimpleFlagArg
    name: N
- !Flag
  optional: true
  synonyms:
  - -Z
  - --force-sequential
  description: "[=true|false] Fetch URIs in the command-line sequentially\nand download\
    \ each URI in a separate session, like\nthe usual command-line download utilities.\n\
    Possible Values: true, false\nDefault: false\nTags: #basic"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -x
  - --max-connection-per-server
  description: "The maximum number of connections to one\nserver for each download.\n\
    Possible Values: 1-16\nDefault: 1\nTags: #basic, #http, #ftp"
  args: !SimpleFlagArg
    name: NUM
- !Flag
  optional: true
  synonyms:
  - -k
  - --min-split-size
  description: "aria2 does not split less than 2*SIZE byte range.\nFor example, let's\
    \ consider downloading 20MiB\nfile. If SIZE is 10M, aria2 can split file into\
    \ 2\nrange [0-10MiB) and [10MiB-20MiB) and download it\nusing 2 sources(if --split\
    \ >= 2, of course).\nIf SIZE is 15M, since 2*15M > 20MiB, aria2 does\nnot split\
    \ file and download it using 1 source.\nYou can append K or M(1K = 1024, 1M =\
    \ 1024K).\nPossible Values: 1048576-1073741824\nDefault: 20M\nTags: #basic, #http,\
    \ #ftp"
  args: !SimpleFlagArg
    name: SIZE
- !Flag
  optional: true
  synonyms:
  - --ftp-user
  description: "Set FTP user. This affects all URLs.\nTags: #basic, #ftp"
  args: !SimpleFlagArg
    name: USER
- !Flag
  optional: true
  synonyms:
  - --ftp-passwd
  description: "Set FTP password. This affects all URLs.\nTags: #basic, #ftp"
  args: !SimpleFlagArg
    name: PASSWD
- !Flag
  optional: true
  synonyms:
  - --http-user
  description: "Set HTTP user. This affects all URLs.\nTags: #basic, #http"
  args: !SimpleFlagArg
    name: USER
- !Flag
  optional: true
  synonyms:
  - --http-passwd
  description: "Set HTTP password. This affects all URLs.\nTags: #basic, #http"
  args: !SimpleFlagArg
    name: PASSWD
- !Flag
  optional: true
  synonyms:
  - --load-cookies
  description: "Load Cookies from FILE using the Firefox3 format\nand Mozilla/Firefox(1.x/2.x)/Netscape\
    \ format.\nPossible Values: /path/to/file\nTags: #basic, #http, #cookie"
  args: !SimpleFlagArg
    name: FILE
- !Flag
  optional: true
  synonyms:
  - -S
  - --show-files
  description: "[=true|false] Print file listing of .torrent, .meta4 and\n.metalink\
    \ file and exit. More detailed\ninformation will be listed in case of torrent\n\
    file.\nPossible Values: true, false\nDefault: false\nTags: #basic, #metalink,\
    \ #bittorrent"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --max-overall-upload-limit
  description: "Set max overall upload speed in bytes/sec.\n0 means unrestricted.\n\
    You can append K or M(1K = 1024, 1M = 1024K).\nTo limit the upload speed per torrent,\
    \ use\n--max-upload-limit option.\nPossible Values: 0-*\nDefault: 0\nTags: #basic,\
    \ #bittorrent"
  args: !SimpleFlagArg
    name: SPEED
- !Flag
  optional: true
  synonyms:
  - -u
  - --max-upload-limit
  description: "Set max upload speed per each torrent in\nbytes/sec. 0 means unrestricted.\n\
    You can append K or M(1K = 1024, 1M = 1024K).\nTo limit the overall upload speed,\
    \ use\n--max-overall-upload-limit option.\nPossible Values: 0-*\nDefault: 0\n\
    Tags: #basic, #bittorrent"
  args: !SimpleFlagArg
    name: SPEED
- !Flag
  optional: true
  synonyms:
  - -T
  - --torrent-file
  description: "The path to the .torrent file.\nPossible Values: /path/to/file\nTags:\
    \ #basic, #bittorrent"
  args: !SimpleFlagArg
    name: TORRENT_FILE
- !Flag
  optional: true
  synonyms:
  - --listen-port
  description: "Set TCP port number for BitTorrent downloads.\nMultiple ports can\
    \ be specified by using ',',\nfor example: \"6881,6885\". You can also use '-'\n\
    to specify a range: \"6881-6999\". ',' and '-' can\nbe used together.\nPossible\
    \ Values: 1024-65535\nDefault: 6881-6999\nTags: #basic, #bittorrent"
  args: !SimpleFlagArg
    name: PORT...
- !Flag
  optional: true
  synonyms:
  - --enable-dht
  description: "[=true|false]    Enable IPv4 DHT functionality. It also enables\n\
    UDP tracker support. If a private flag is set\nin a torrent, aria2 doesn't use\
    \ DHT for that\ndownload even if ``true`` is given.\nPossible Values: true, false\n\
    Default: true\nTags: #basic, #bittorrent"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --dht-listen-port
  description: "Set UDP listening port used by DHT(IPv4, IPv6)\nand UDP tracker. Multiple\
    \ ports can be specified\nby using ',', for example: \"6881,6885\". You can\n\
    also use '-' to specify a range: \"6881-6999\".\n',' and '-' can be used together.\n\
    Possible Values: 1024-65535\nDefault: 6881-6999\nTags: #basic, #bittorrent"
  args: !SimpleFlagArg
    name: PORT...
- !Flag
  optional: true
  synonyms:
  - --enable-dht6
  description: "[=true|false]   Enable IPv6 DHT functionality.\nUse --dht-listen-port\
    \ option to specify port\nnumber to listen on. See also --dht-listen-addr6\noption.\n\
    Possible Values: true, false\nDefault: false\nTags: #basic, #bittorrent"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --dht-listen-addr6
  description: "Specify address to bind socket for IPv6 DHT.\nIt should be a global\
    \ unicast IPv6 address of the\nhost.\nTags: #basic, #bittorrent"
  args: !SimpleFlagArg
    name: ADDR
- !Flag
  optional: true
  synonyms:
  - -M
  - --metalink-file
  description: "The file path to the .meta4 and .metalink\nfile. Reads input from\
    \ stdin when '-' is\nspecified.\nPossible Values: /path/to/file, -\nTags: #basic,\
    \ #metalink"
  args: !SimpleFlagArg
    name: METALINK_FILE
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: "[=TAG|KEYWORD]     Print usage and exit.\nThe help messages are classified\
    \ with tags. A tag\nstarts with \"#\". For example, type \"--help=#http\"\nto\
    \ get the usage for the options tagged with\n\"#http\". If non-tag word is given,\
    \ print the usage\nfor the options whose name includes that word.\nPossible Values:\
    \ #basic, #advanced, #http, #https, #ftp, #metalink, #bittorrent, #cookie, #hook,\
    \ #file, #rpc, #checksum, #experimental, #deprecated, #help, #all\nDefault: #basic\n\
    Tags: #basic, #help"
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - -v
  - --version
  description: "Print the version number and exit.\nTags: #basic"
  args: !EmptyFlagArg {}
help_text: "Usage: aria2c [OPTIONS] [URI | MAGNET | TORRENT_FILE | METALINK_FILE]...\n\
  Printing options tagged with '#basic'.\nSee 'aria2c -h#help' to know all available\
  \ tags.\nOptions:\n -v, --version                Print the version number and exit.\n\
  \n                              Tags: #basic\n\n -h, --help[=TAG|KEYWORD]     Print\
  \ usage and exit.\n                              The help messages are classified\
  \ with tags. A tag\n                              starts with \"#\". For example,\
  \ type \"--help=#http\"\n                              to get the usage for the\
  \ options tagged with\n                              \"#http\". If non-tag word\
  \ is given, print the usage\n                              for the options whose\
  \ name includes that word.\n\n                              Possible Values: #basic,\
  \ #advanced, #http, #https, #ftp, #metalink, #bittorrent, #cookie, #hook, #file,\
  \ #rpc, #checksum, #experimental, #deprecated, #help, #all\n                   \
  \           Default: #basic\n                              Tags: #basic, #help\n\
  \n -l, --log=LOG                The file name of the log file. If '-' is\n     \
  \                         specified, log is written to stdout.\n\n             \
  \                 Possible Values: /path/to/file, -\n                          \
  \    Tags: #basic\n\n -d, --dir=DIR                The directory to store the downloaded\
  \ file.\n\n                              Possible Values: /path/to/directory\n \
  \                             Default: /\n                              Tags: #basic,\
  \ #file\n\n -o, --out=FILE               The file name of the downloaded file. It\
  \ is\n                              always relative to the directory given in -d\n\
  \                              option. When the -Z option is used, this option\n\
  \                              will be ignored.\n\n                            \
  \  Possible Values: /path/to/file\n                              Tags: #basic, #http,\
  \ #ftp, #file\n\n -s, --split=N                Download a file using N connections.\
  \ If more\n                              than N URIs are given, first N URIs are\
  \ used and\n                              remaining URLs are used for backup. If\
  \ less than\n                              N URIs are given, those URLs are used\
  \ more than\n                              once so that N connections total are\
  \ made\n                              simultaneously. The number of connections\
  \ to the\n                              same host is restricted by the \n      \
  \                        --max-connection-per-server option. See also the\n    \
  \                          --min-split-size option.\n\n                        \
  \      Possible Values: 1-*\n                              Default: 5\n        \
  \                      Tags: #basic, #http, #ftp\n\n --file-allocation=METHOD  \
  \   Specify file allocation method.\n                              'none' doesn't\
  \ pre-allocate file space. 'prealloc'\n                              pre-allocates\
  \ file space before download begins.\n                              This may take\
  \ some time depending on the size of\n                              the file.\n\
  \                              If you are using newer file systems such as ext4\n\
  \                              (with extents support), btrfs, xfs or NTFS\n    \
  \                          (MinGW build only), 'falloc' is your best\n         \
  \                     choice. It allocates large(few GiB) files\n              \
  \                almost instantly. Don't use 'falloc' with legacy\n            \
  \                  file systems such as ext3 and FAT32 because it\n            \
  \                  takes almost same time as 'prealloc' and it\n               \
  \               blocks aria2 entirely until allocation finishes.\n             \
  \                 'falloc' may not be available if your system\n               \
  \               doesn't have posix_fallocate() function.\n                     \
  \         'trunc' uses ftruncate() system call or\n                            \
  \  platform-specific counterpart to truncate a file\n                          \
  \    to a specified length.\n\n                              Possible Values: none,\
  \ prealloc, trunc, falloc\n                              Default: prealloc\n   \
  \                           Tags: #basic, #file\n\n -V, --check-integrity[=true|false]\
  \ Check file integrity by validating piece\n                              hashes\
  \ or a hash of entire file. This option has\n                              effect\
  \ only in BitTorrent, Metalink downloads\n                              with checksums\
  \ or HTTP(S)/FTP downloads with\n                              --checksum option.\
  \ If piece hashes are provided,\n                              this option can detect\
  \ damaged portions of a file\n                              and re-download them.\
  \ If a hash of entire file is\n                              provided, hash check\
  \ is only done when file has\n                              been already download.\
  \ This is determined by file\n                              length. If hash check\
  \ fails, file is\n                              re-downloaded from scratch. If both\
  \ piece hashes\n                              and a hash of entire file are provided,\
  \ only\n                              piece hashes are used.\n\n               \
  \               Possible Values: true, false\n                              Default:\
  \ false\n                              Tags: #basic, #metalink, #bittorrent, #file,\
  \ #checksum\n\n -c, --continue[=true|false]  Continue downloading a partially downloaded\n\
  \                              file. Use this option to resume a download\n    \
  \                          started by a web browser or another program\n       \
  \                       which downloads files sequentially from the\n          \
  \                    beginning. Currently this option is only\n                \
  \              applicable to http(s)/ftp downloads.\n\n                        \
  \      Possible Values: true, false\n                              Default: false\n\
  \                              Tags: #basic, #http, #ftp\n\n -i, --input-file=FILE\
  \        Downloads URIs found in FILE. You can specify\n                       \
  \       multiple URIs for a single entity: separate\n                          \
  \    URIs on a single line using the TAB character.\n                          \
  \    Reads input from stdin when '-' is specified.\n                           \
  \   Additionally, options can be specified after each\n                        \
  \      line of URI. This optional line must start with\n                       \
  \       one or more white spaces and have one option per\n                     \
  \         single line. See INPUT FILE section of man page\n                    \
  \          for details. See also --deferred-input option.\n\n                  \
  \            Possible Values: /path/to/file, -\n                              Tags:\
  \ #basic\n\n -j, --max-concurrent-downloads=N Set maximum number of parallel downloads\
  \ for\n                              every static (HTTP/FTP) URL, torrent and metalink.\n\
  \                              See also --split and --optimize-concurrent-downloads\
  \ options.\n\n                              Possible Values: 1-*\n             \
  \                 Default: 5\n                              Tags: #basic\n\n -Z,\
  \ --force-sequential[=true|false] Fetch URIs in the command-line sequentially\n\
  \                              and download each URI in a separate session, like\n\
  \                              the usual command-line download utilities.\n\n  \
  \                            Possible Values: true, false\n                    \
  \          Default: false\n                              Tags: #basic\n\n -x, --max-connection-per-server=NUM\
  \ The maximum number of connections to one\n                              server\
  \ for each download.\n\n                              Possible Values: 1-16\n  \
  \                            Default: 1\n                              Tags: #basic,\
  \ #http, #ftp\n\n -k, --min-split-size=SIZE    aria2 does not split less than 2*SIZE\
  \ byte range.\n                              For example, let's consider downloading\
  \ 20MiB\n                              file. If SIZE is 10M, aria2 can split file\
  \ into 2\n                              range [0-10MiB) and [10MiB-20MiB) and download\
  \ it\n                              using 2 sources(if --split >= 2, of course).\n\
  \                              If SIZE is 15M, since 2*15M > 20MiB, aria2 does\n\
  \                              not split file and download it using 1 source.\n\
  \                              You can append K or M(1K = 1024, 1M = 1024K).\n\n\
  \                              Possible Values: 1048576-1073741824\n           \
  \                   Default: 20M\n                              Tags: #basic, #http,\
  \ #ftp\n\n --ftp-user=USER              Set FTP user. This affects all URLs.\n\n\
  \                              Tags: #basic, #ftp\n\n --ftp-passwd=PASSWD      \
  \    Set FTP password. This affects all URLs.\n\n                              Tags:\
  \ #basic, #ftp\n\n --http-user=USER             Set HTTP user. This affects all\
  \ URLs.\n\n                              Tags: #basic, #http\n\n --http-passwd=PASSWD\
  \         Set HTTP password. This affects all URLs.\n\n                        \
  \      Tags: #basic, #http\n\n --load-cookies=FILE          Load Cookies from FILE\
  \ using the Firefox3 format\n                              and Mozilla/Firefox(1.x/2.x)/Netscape\
  \ format.\n\n                              Possible Values: /path/to/file\n    \
  \                          Tags: #basic, #http, #cookie\n\n -S, --show-files[=true|false]\
  \ Print file listing of .torrent, .meta4 and\n                              .metalink\
  \ file and exit. More detailed\n                              information will be\
  \ listed in case of torrent\n                              file.\n\n           \
  \                   Possible Values: true, false\n                             \
  \ Default: false\n                              Tags: #basic, #metalink, #bittorrent\n\
  \n --max-overall-upload-limit=SPEED Set max overall upload speed in bytes/sec.\n\
  \                              0 means unrestricted.\n                         \
  \     You can append K or M(1K = 1024, 1M = 1024K).\n                          \
  \    To limit the upload speed per torrent, use\n                              --max-upload-limit\
  \ option.\n\n                              Possible Values: 0-*\n              \
  \                Default: 0\n                              Tags: #basic, #bittorrent\n\
  \n -u, --max-upload-limit=SPEED Set max upload speed per each torrent in\n     \
  \                         bytes/sec. 0 means unrestricted.\n                   \
  \           You can append K or M(1K = 1024, 1M = 1024K).\n                    \
  \          To limit the overall upload speed, use\n                            \
  \  --max-overall-upload-limit option.\n\n                              Possible\
  \ Values: 0-*\n                              Default: 0\n                      \
  \        Tags: #basic, #bittorrent\n\n -T, --torrent-file=TORRENT_FILE  The path\
  \ to the .torrent file.\n\n                              Possible Values: /path/to/file\n\
  \                              Tags: #basic, #bittorrent\n\n --listen-port=PORT...\
  \        Set TCP port number for BitTorrent downloads.\n                       \
  \       Multiple ports can be specified by using ',',\n                        \
  \      for example: \"6881,6885\". You can also use '-'\n                      \
  \        to specify a range: \"6881-6999\". ',' and '-' can\n                  \
  \            be used together.\n\n                              Possible Values:\
  \ 1024-65535\n                              Default: 6881-6999\n               \
  \               Tags: #basic, #bittorrent\n\n --enable-dht[=true|false]    Enable\
  \ IPv4 DHT functionality. It also enables\n                              UDP tracker\
  \ support. If a private flag is set\n                              in a torrent,\
  \ aria2 doesn't use DHT for that\n                              download even if\
  \ ``true`` is given.\n\n                              Possible Values: true, false\n\
  \                              Default: true\n                              Tags:\
  \ #basic, #bittorrent\n\n --dht-listen-port=PORT...    Set UDP listening port used\
  \ by DHT(IPv4, IPv6)\n                              and UDP tracker. Multiple ports\
  \ can be specified\n                              by using ',', for example: \"\
  6881,6885\". You can\n                              also use '-' to specify a range:\
  \ \"6881-6999\".\n                              ',' and '-' can be used together.\n\
  \n                              Possible Values: 1024-65535\n                  \
  \            Default: 6881-6999\n                              Tags: #basic, #bittorrent\n\
  \n --enable-dht6[=true|false]   Enable IPv6 DHT functionality.\n               \
  \               Use --dht-listen-port option to specify port\n                 \
  \             number to listen on. See also --dht-listen-addr6\n               \
  \               option.\n\n                              Possible Values: true,\
  \ false\n                              Default: false\n                        \
  \      Tags: #basic, #bittorrent\n\n --dht-listen-addr6=ADDR      Specify address\
  \ to bind socket for IPv6 DHT. \n                              It should be a global\
  \ unicast IPv6 address of the\n                              host.\n\n         \
  \                     Tags: #basic, #bittorrent\n\n -M, --metalink-file=METALINK_FILE\
  \ The file path to the .meta4 and .metalink\n                              file.\
  \ Reads input from stdin when '-' is\n                              specified.\n\
  \n                              Possible Values: /path/to/file, -\n            \
  \                  Tags: #basic, #metalink\n\nURI, MAGNET, TORRENT_FILE, METALINK_FILE:\n\
  \ You can specify multiple HTTP(S)/FTP URIs. Unless you specify -Z option, all\n\
  \ URIs must point to the same file or downloading will fail.\n You can also specify\
  \ arbitrary number of BitTorrent Magnet URIs, torrent/\n metalink files stored in\
  \ a local drive. Please note that they are always\n treated as a separate download.\n\
  \n You can specify both torrent file with -T option and URIs. By doing this,\n download\
  \ a file from both torrent swarm and HTTP/FTP server at the same time,\n while the\
  \ data from HTTP/FTP are uploaded to the torrent swarm. For single file\n torrents,\
  \ URI can be a complete URI pointing to the resource or if URI ends\n with '/',\
  \ 'name' in torrent file is added. For multi-file torrents, 'name' and\n 'path'\
  \ in torrent are added to form a URI for each file.\n\n Make sure that URI is quoted\
  \ with single(') or double(\") quotation if it\n contains \"&\" or any characters\
  \ that have special meaning in shell.\n\nAbout the number of connections\n Since\
  \ 1.10.0 release, aria2 uses 1 connection per host by default and has 20MiB\n segment\
  \ size restriction. So whatever value you specify using -s option, it\n uses 1 connection\
  \ per host. To make it behave like 1.9.x, use\n --max-connection-per-server=4 --min-split-size=1M.\n\
  \nRefer to man page for more information.\n"
generated_using:
- --help
docker_image:
