from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean, Int, String, Float

Ssu_Cmsearch_V0_1_0 = CommandToolBuilder(tool="ssu_cmsearch", base_command=["ssu-cmsearch"], inputs=[ToolInput(tag="in_direct_output_file", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc=": direct output to file <f>, not stdout")), ToolInput(tag="in_configure_cmhmm_glocal", input_type=Boolean(optional=True), prefix="-g", doc=InputDocumentation(doc=": configure CM/HMM for glocal alignment [default: local]")), ToolInput(tag="in_append_posterior_probabilities", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc=": append posterior probabilities to hit alignments")), ToolInput(tag="in_annotate_noncompensatory_bps", input_type=Boolean(optional=True), prefix="-x", doc=InputDocumentation(doc=": annotate non-compensatory bps in output alignments with 'x'")), ToolInput(tag="in_annotate_negative_scoring", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc=": annotate negative scoring non-canonical bps with 'v'")), ToolInput(tag="in_set_z_database", input_type=Int(optional=True), prefix="-Z", doc=InputDocumentation(doc=": set Z (database size in *Mb*) to <x> for E-value calculations")), ToolInput(tag="in_top_only", input_type=Boolean(optional=True), prefix="--toponly", doc=InputDocumentation(doc=": only search the top strand")), ToolInput(tag="in_bottom_only", input_type=Boolean(optional=True), prefix="--bottomonly", doc=InputDocumentation(doc=": only search the bottom strand")), ToolInput(tag="in_forecast", input_type=String(optional=True), prefix="--forecast", doc=InputDocumentation(doc=": don't do search, forecast running time with <n> processors")), ToolInput(tag="in_in_format", input_type=File(optional=True), prefix="--informat", doc=InputDocumentation(doc=": specify the input file is in format <x>, not FASTA")), ToolInput(tag="in_mx_size", input_type=Int(optional=True), prefix="--mxsize", doc=InputDocumentation(doc=": set maximum allowable HMM banded DP matrix size to <x> Mb")), ToolInput(tag="in_devhelp", input_type=Boolean(optional=True), prefix="--devhelp", doc=InputDocumentation(doc=": show list of undocumented developer options")), ToolInput(tag="in_inside", input_type=Boolean(optional=True), prefix="--inside", doc=InputDocumentation(doc=": use scanning CM Inside algorithm  [default]")), ToolInput(tag="in_cy_k", input_type=Boolean(optional=True), prefix="--cyk", doc=InputDocumentation(doc=": use scanning CM CYK algorithm")), ToolInput(tag="in_forward", input_type=Boolean(optional=True), prefix="--forward", doc=InputDocumentation(doc=": use scanning HMM Forward algorithm")), ToolInput(tag="in_viterbi", input_type=Boolean(optional=True), prefix="--viterbi", doc=InputDocumentation(doc=": use scanning HMM Viterbi algorithm")), ToolInput(tag="in_use_cutoff_evalue", input_type=Float(optional=True), prefix="-E", doc=InputDocumentation(doc=": use cutoff E-value of <x> for final round of search  [1.0]  (x>0.)")), ToolInput(tag="in_use_bit_score", input_type=Float(optional=True), prefix="-T", doc=InputDocumentation(doc=": use cutoff bit score of <x> for final round of search  [0.0]")), ToolInput(tag="in_nc", input_type=Boolean(optional=True), prefix="--nc", doc=InputDocumentation(doc=": use CM Rfam NC noise cutoff as cutoff bit score")), ToolInput(tag="in_ga", input_type=Boolean(optional=True), prefix="--ga", doc=InputDocumentation(doc=": use CM Rfam GA gathering threshold as cutoff bit score")), ToolInput(tag="in_tc", input_type=Boolean(optional=True), prefix="--tc", doc=InputDocumentation(doc=": use CM Rfam TC trusted cutoff as cutoff bit score")), ToolInput(tag="in_no_qdb", input_type=Boolean(optional=True), prefix="--no-qdb", doc=InputDocumentation(doc=": do not use QDBs in final round of searching")), ToolInput(tag="in_beta", input_type=Float(optional=True), prefix="--beta", doc=InputDocumentation(doc=": set tail loss prob for QDB calculation to <x>  [1e-15]  (0<x<1)")), ToolInput(tag="in_h_banded", input_type=Boolean(optional=True), prefix="--hbanded", doc=InputDocumentation(doc=": calculate and use HMM bands in final round of CM search")), ToolInput(tag="in_tau", input_type=Float(optional=True), prefix="--tau", doc=InputDocumentation(doc=": set tail loss prob for --hbanded to <x>  [1e-7]  (0<x<1)")), ToolInput(tag="in_fil_no_hmm", input_type=Boolean(optional=True), prefix="--fil-no-hmm", doc=InputDocumentation(doc=": do not filter with HMM Forward algorithm")), ToolInput(tag="in_fil_no_qdb", input_type=Boolean(optional=True), prefix="--fil-no-qdb", doc=InputDocumentation(doc=": do not filter with CM banded CYK")), ToolInput(tag="in_fil_beta", input_type=Float(optional=True), prefix="--fil-beta", doc=InputDocumentation(doc=": set tail loss prob for QDB filter to <x>  [1e-10]  (x>0)")), ToolInput(tag="in_fil_t_qdb", input_type=Float(optional=True), prefix="--fil-T-qdb", doc=InputDocumentation(doc=": set QDB CM filter cutoff bit score as <x>  [0.0]")), ToolInput(tag="in_fil_t_hmm", input_type=Float(optional=True), prefix="--fil-T-hmm", doc=InputDocumentation(doc=": set HMM filter cutoff bit score as <x>  [3.0]")), ToolInput(tag="in_fil_e_qdb", input_type=String(optional=True), prefix="--fil-E-qdb", doc=InputDocumentation(doc=": set QDB CM filter cutoff E-value as <x>")), ToolInput(tag="in_fil_e_hmm", input_type=String(optional=True), prefix="--fil-E-hmm", doc=InputDocumentation(doc=": set HMM filter cutoff E-value as <x>")), ToolInput(tag="in_fil_s_hmm", input_type=String(optional=True), prefix="--fil-S-hmm", doc=InputDocumentation(doc=": set HMM filter predicted surv fract as <x>")), ToolInput(tag="in_fil_smax_hmm", input_type=Float(optional=True), prefix="--fil-Smax-hmm", doc=InputDocumentation(doc=": set maximum HMM survival fraction as <x>  [0.5]")), ToolInput(tag="in_fil_sm_in_hmm", input_type=Float(optional=True), prefix="--fil-Smin-hmm", doc=InputDocumentation(doc=": set minimum HMM survival fraction as <x>  [0.02]")), ToolInput(tag="in_fil_a_hmm", input_type=Boolean(optional=True), prefix="--fil-A-hmm", doc=InputDocumentation(doc=": always filter w/HMM w/surv fract <= <x> from --fil-Smax-hmm")), ToolInput(tag="in_hmm_w", input_type=Int(optional=True), prefix="--hmm-W", doc=InputDocumentation(doc=": set HMM window size as <n>  (n>1)")), ToolInput(tag="in_hmm_cw", input_type=Int(optional=True), prefix="--hmm-cW", doc=InputDocumentation(doc=": set HMM window size as <x> * consensus length  (x>0.01)")), ToolInput(tag="in_no_align", input_type=Boolean(optional=True), prefix="--noalign", doc=InputDocumentation(doc=": find start/stop/score only; don't do alignments")), ToolInput(tag="in_aln_h_banded", input_type=Boolean(optional=True), prefix="--aln-hbanded", doc=InputDocumentation(doc=": use HMM bands to align hits")), ToolInput(tag="in_aln_opt_acc", input_type=Boolean(optional=True), prefix="--aln-optacc", doc=InputDocumentation(doc=": align hits with the optimal accuracy algorithm, not CYK")), ToolInput(tag="in_cm_idx", input_type=Int(optional=True), prefix="--cm-idx", doc=InputDocumentation(doc=": only search with CM number <n>    in the CM file  (n>0)")), ToolInput(tag="in_cm_name", input_type=File(optional=True), prefix="--cm-name", doc=InputDocumentation(doc=": only search with the CM named <s> in the CM file")), ToolInput(tag="in_tab_file", input_type=File(optional=True), prefix="--tabfile", doc=InputDocumentation(doc=": save hits in tabular format to file <f>")), ToolInput(tag="in_gc_file", input_type=File(optional=True), prefix="--gcfile", doc=InputDocumentation(doc=": save GC content stats of target sequence file to <f>")), ToolInput(tag="in_rna", input_type=Boolean(optional=True), prefix="--rna", doc=InputDocumentation(doc=": output hit alignments as RNA sequence data  [default]")), ToolInput(tag="in_dna", input_type=Boolean(optional=True), prefix="--dna", doc=InputDocumentation(doc=": output hit alignments as DNA (not RNA) sequence data")), ToolInput(tag="in_options", input_type=Boolean(optional=True), prefix="-options", doc=InputDocumentation(doc="")), ToolInput(tag="in_cm_file", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_sequence_file", input_type=File(), position=1, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_direct_output_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_direct_output_file", type_hint=File()), doc=OutputDocumentation(doc=": direct output to file <f>, not stdout"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Ssu_Cmsearch_V0_1_0().translate("wdl", allow_empty_container=True)

