from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Elink_V0_1_0 = CommandToolBuilder(tool="elink", base_command=["elink"], inputs=[ToolInput(tag="in_related", input_type=Boolean(optional=True), prefix="-related", doc=InputDocumentation(doc="Neighbors in same database")), ToolInput(tag="in_target", input_type=Boolean(optional=True), prefix="-target", doc=InputDocumentation(doc="Links in different database")), ToolInput(tag="in_name", input_type=Boolean(optional=True), prefix="-name", doc=InputDocumentation(doc="Link name (e.g., pubmed_protein_refseq, pubmed_pubmed_citedin, pubmed_pubmed_refs)")), ToolInput(tag="in_db", input_type=Boolean(optional=True), prefix="-db", doc=InputDocumentation(doc="Database name")), ToolInput(tag="in_id", input_type=Boolean(optional=True), prefix="-id", doc=InputDocumentation(doc="Unique identifier(s)")), ToolInput(tag="in_cmd", input_type=Boolean(optional=True), prefix="-cmd", doc=InputDocumentation(doc="Command type (returns eLinkResult XML)")), ToolInput(tag="in_mode", input_type=Boolean(optional=True), prefix="-mode", doc=InputDocumentation(doc="'ref' uses LinkOut provider's web site")), ToolInput(tag="in_holding", input_type=Boolean(optional=True), prefix="-holding", doc=InputDocumentation(doc="Name of LinkOut provider")), ToolInput(tag="in_cited", input_type=Boolean(optional=True), prefix="-cited", doc=InputDocumentation(doc="References to this paper")), ToolInput(tag="in_cites", input_type=Boolean(optional=True), prefix="-cites", doc=InputDocumentation(doc="Publication reference list")), ToolInput(tag="in_batch", input_type=Boolean(optional=True), prefix="-batch", doc=InputDocumentation(doc="Bypass Entrez history mechanism")), ToolInput(tag="in_label", input_type=Boolean(optional=True), prefix="-label", doc=InputDocumentation(doc="Alias for query step")), ToolInput(tag="in_neighbor", input_type=String(), position=0, doc=InputDocumentation(doc="Neighbors or links")), ToolInput(tag="in_neighbor_score", input_type=String(), position=1, doc=InputDocumentation(doc="Neighbors with computed similarity scores")), ToolInput(tag="in_a_check", input_type=String(), position=2, doc=InputDocumentation(doc="All links available")), ToolInput(tag="in_n_check", input_type=String(), position=3, doc=InputDocumentation(doc="Existence of neighbors")), ToolInput(tag="in_l_check", input_type=String(), position=4, doc=InputDocumentation(doc="Existence of external links (LinkOuts)")), ToolInput(tag="in_l_links", input_type=String(), position=5, doc=InputDocumentation(doc="Non-library LinkOut providers")), ToolInput(tag="in_l_links_lib", input_type=String(), position=6, doc=InputDocumentation(doc="All LinkOut providers")), ToolInput(tag="in_pr_links", input_type=String(), position=7, doc=InputDocumentation(doc="Primary LinkOut provider,\nor URL for single UID with -mode ref\n"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Elink_V0_1_0().translate("wdl", allow_empty_container=True)

