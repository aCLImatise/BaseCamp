!Command
command:
- parset
positional: []
named: []
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "Unknown option: --help\nparset only works if it is a function. The function\
  \ is defined as part\nof env_parallel.\n\nDo the below and restart your shell.\n\
  \nbash:  Put this in $HOME/.bashrc:  . `which env_parallel.bash`\n       E.g. by\
  \ doing:  echo '. `which env_parallel.bash`' >> $HOME/.bashrc\n       Supports:\
  \ aliases, functions, variables, arrays\n\nzsh:   Put this in $HOME/.zshrc:  . `which\
  \ env_parallel.zsh`\n       E.g. by doing:  echo '. `which env_parallel.zsh`' >>\
  \ $HOME/.zshenv\n       Supports: functions, variables, arrays\n\nfish:  Unsupported\n\
  \nksh:   Put this in $HOME/.kshrc:  source `which env_parallel.ksh`\n       E.g.\
  \ by doing:  echo 'source `which env_parallel.ksh`' >> $HOME/.kshrc\n       Supports:\
  \ aliases, functions, variables, arrays\n\npdksh: Put this in $HOME/.profile:  source\
  \ `which env_parallel.pdksh`\n       E.g. by doing:  echo '. `which env_parallel.pdksh`'\
  \ >> $HOME/.profile\n       Supports: aliases, functions, variables, arrays\n\n\
  ash:   Put this in $HOME/.profile:  . `which env_parallel.ash`\n       E.g. by doing:\
  \  echo '. `which env_parallel.ash`' >> $HOME/.profile\n       Supports: aliases,\
  \ variables\n\ndash:  Put this in $HOME/.profile:  . `which env_parallel.dash`\n\
  \       E.g. by doing:  echo '. `which env_parallel.dash`' >> $HOME/.profile\n \
  \      Supports: aliases, variables\n\ncsh:   Unsupported\n\ntcsh:  Unsupported\n\
  \nTo install in all shells run:\n\n  parset --install\n\nFor details: see  man parset\n\
  \n"
generated_using:
- --help
docker_image:
