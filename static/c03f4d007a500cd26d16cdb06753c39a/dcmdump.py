from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Dcmdump_V0_1_0 = CommandToolBuilder(tool="dcmdump", base_command=["dcmdump"], inputs=[ToolInput(tag="in_arguments", input_type=Boolean(optional=True), prefix="--arguments", doc=InputDocumentation(doc="print expanded command line arguments")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="quiet mode, print no warnings and errors")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="verbose mode, print processing details")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="debug mode, print debug information")), ToolInput(tag="in_log_level", input_type=Boolean(optional=True), prefix="--log-level", doc=InputDocumentation(doc="[l]evel: string constant\n(fatal, error, warn, info, debug, trace)\nuse level l for the logger")), ToolInput(tag="in_log_config", input_type=Boolean(optional=True), prefix="--log-config", doc=InputDocumentation(doc="[f]ilename: string\nuse config file f for the logger")), ToolInput(tag="in_read_dataset", input_type=Boolean(optional=True), prefix="--read-dataset", doc=InputDocumentation(doc="read data set without file meta information")), ToolInput(tag="in__readxferauto_use", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="=  --read-xfer-auto       use TS recognition (default)")), ToolInput(tag="in_read_xfer_detect", input_type=Boolean(optional=True), prefix="--read-xfer-detect", doc=InputDocumentation(doc="ignore TS specified in the file meta header")), ToolInput(tag="in_read_xfer_little", input_type=Boolean(optional=True), prefix="--read-xfer-little", doc=InputDocumentation(doc="read with explicit VR little endian TS")), ToolInput(tag="in_read_xfer_big", input_type=Boolean(optional=True), prefix="--read-xfer-big", doc=InputDocumentation(doc="read with explicit VR big endian TS")), ToolInput(tag="in_read_xfer_implicit", input_type=Boolean(optional=True), prefix="--read-xfer-implicit", doc=InputDocumentation(doc="read with implicit VR little endian TS")), ToolInput(tag="in_no_recurse", input_type=Boolean(optional=True), prefix="--no-recurse", doc=InputDocumentation(doc="do not recurse within directories (default)")), ToolInput(tag="in_load_short", input_type=Boolean(optional=True), prefix="--load-short", doc=InputDocumentation(doc="do not load very long values (e.g. pixel data)")), ToolInput(tag="in_ignore_meta_length", input_type=Boolean(optional=True), prefix="--ignore-meta-length", doc=InputDocumentation(doc="ignore file meta information group length")), ToolInput(tag="in_ignore_explicit_vr", input_type=Boolean(optional=True), prefix="--ignore-explicit-vr", doc=InputDocumentation(doc="ignore explicit VR (prefer data dictionary)")), ToolInput(tag="in_assume_implicit", input_type=Boolean(optional=True), prefix="--assume-implicit", doc=InputDocumentation(doc="try to read with implicit VR little endian TS")), ToolInput(tag="in_disable_cp_two_four_six", input_type=Boolean(optional=True), prefix="--disable-cp246", doc=InputDocumentation(doc="read undefined len UN as explicit VR")), ToolInput(tag="in_retain_un", input_type=Boolean(optional=True), prefix="--retain-un", doc=InputDocumentation(doc="retain elements as UN (default)")), ToolInput(tag="in_maxlength_dict", input_type=Boolean(optional=True), prefix="--maxlength-dict", doc=InputDocumentation(doc="read as defined in dictionary (default)")), ToolInput(tag="in_use_delim_items", input_type=Boolean(optional=True), prefix="--use-delim-items", doc=InputDocumentation(doc="use delimitation items from dataset (default)")), ToolInput(tag="in_illegal_o_bow_rej", input_type=Boolean(optional=True), prefix="--illegal-obow-rej", doc=InputDocumentation(doc="reject dataset with illegal element (default)")), ToolInput(tag="in_illegal_voi_rej", input_type=Boolean(optional=True), prefix="--illegal-voi-rej", doc=InputDocumentation(doc="reject dataset with illegal VOI LUT (default)")), ToolInput(tag="in_abort_expl_pix_data", input_type=Boolean(optional=True), prefix="--abort-expl-pixdata", doc=InputDocumentation(doc="abort on explicit length pixel data (default)")), ToolInput(tag="in_handle_parse_errors", input_type=Boolean(optional=True), prefix="--handle-parse-errors", doc=InputDocumentation(doc="handle parse errors and stop parsing (default)")), ToolInput(tag="in_disable_correction", input_type=Boolean(optional=True), prefix="--disable-correction", doc=InputDocumentation(doc="disable automatic data correction")), ToolInput(tag="in_print_short", input_type=Boolean(optional=True), prefix="--print-short", doc=InputDocumentation(doc="print long tag values shortened (default)")), ToolInput(tag="in_print_indented", input_type=Boolean(optional=True), prefix="--print-indented", doc=InputDocumentation(doc="print hierarchical structure indented (default)")), ToolInput(tag="in_no_uid_names", input_type=Boolean(optional=True), prefix="--no-uid-names", doc=InputDocumentation(doc="do not map well-known UID numbers to names")), ToolInput(tag="in_print_non_ascii", input_type=Boolean(optional=True), prefix="--print-nonascii", doc=InputDocumentation(doc="print non-ASCII and control chars (default)")), ToolInput(tag="in_no_color", input_type=Boolean(optional=True), prefix="--no-color", doc=InputDocumentation(doc="do not use any ANSI escape codes (default)")), ToolInput(tag="in_stop_on_error", input_type=Boolean(optional=True), prefix="--stop-on-error", doc=InputDocumentation(doc="do not print if file is damaged (default)")), ToolInput(tag="in_search_first", input_type=Boolean(optional=True), prefix="--search-first", doc=InputDocumentation(doc="only print first instance of searched tags")), ToolInput(tag="in_no_prepend", input_type=Boolean(optional=True), prefix="--no-prepend", doc=InputDocumentation(doc="do not prepend hierarchy to tag (default)")), ToolInput(tag="in_dcm_file_in", input_type=String(), position=0, doc=InputDocumentation(doc="DICOM input file or directory to be dumped"))], outputs=[], container="quay.io/biocontainers/dcmtk:3.6.5--h5fca97b_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Dcmdump_V0_1_0().translate("wdl")

