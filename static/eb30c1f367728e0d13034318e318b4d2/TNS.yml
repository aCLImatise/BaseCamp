!Command
command:
- TNS
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -i
  - --input
  description: "Input CSV file with inferred genetic links (or stdin\nif omitted).\
    \ Can be specified multiple times for\nmultiple input files (e.g. to include a\
    \ reference\ndatabase). Must be a CSV file with three columns:\nID1,ID2,distance."
  args: !SimpleFlagArg
    name: INPUT
- !Flag
  optional: true
  synonyms:
  - -u
  - --uds
  description: "Input CSV file with UDS data. Must be a CSV file with\nthree columns:\
    \ ID1,ID2,distance."
  args: !SimpleFlagArg
    name: UDS
- !Flag
  optional: true
  synonyms:
  - -d
  - --dot
  description: Output DOT file for GraphViz (or stdout if omitted)
  args: !SimpleFlagArg
    name: DOT
- !Flag
  optional: true
  synonyms:
  - -c
  - --cluster
  description: "Output a CSV file with cluster assignments for each\nsequence"
  args: !SimpleFlagArg
    name: CLUSTER
- !Flag
  optional: true
  synonyms:
  - -t
  - --threshold
  description: "Only count edges where the distance is less than this\nthreshold.\
    \ Provide comma-separated values to compute\nsubclusters if the output mode is\
    \ JSON. If -t auto is\nspecified, a heuristic is used to determine an ad hoc\n\
    optimal threshold."
  args: !SimpleFlagArg
    name: THRESHOLD
- !Flag
  optional: true
  synonyms:
  - -e
  - --edi
  description: A .json file with clinical information
  args: !SimpleFlagArg
    name: EDI
- !Flag
  optional: true
  synonyms:
  - -z
  - --old_edi
  description: A .csv file with legacy EDI dates
  args: !SimpleFlagArg
    name: OLD_EDI
- !Flag
  optional: true
  synonyms:
  - -f
  - --format
  description: "Sequence ID format. One of AEH (ID | sample_date |\notherfiels default),\
    \ LANL (e.g. B_HXB2_K03455_1983 :\nsubtype_country_id_year -- could have more\
    \ fields),\nregexp (match a regular expression, use the first\ngroup as the ID),\
    \ or plain (treat as sequence ID only,\nno meta); one per input argument if specified"
  args: !SimpleFlagArg
    name: FORMAT
- !Flag
  optional: true
  synonyms:
  - -x
  - --exclude
  description: "Exclude any sequence which belongs to a cluster\ncontaining a \"reference\"\
    \ strain, defined by the year\nof isolation. The value of this argument is an\
    \ integer\nyear (e.g. 1984) so that any sequence isolated in or\nbefore that year\
    \ (e.g. <=1983) is considered to be a\nlab strain. This option makes sense for\
    \ LANL or AEH\ndata."
  args: !SimpleFlagArg
    name: EXCLUDE
- !Flag
  optional: true
  synonyms:
  - -r
  - --resistance
  description: "Load a JSON file with resistance annotation by\nsequence"
  args: !SimpleFlagArg
    name: RESISTANCE
- !Flag
  optional: true
  synonyms:
  - -p
  description: "PARSER, --parser PARSER PARSER\nThe reg.exp pattern to split up sequence\
    \ ids; only\nused if format is regexp; format is INDEX EXPRESSION\n(consumes two\
    \ arguments)"
  args: !SimpleFlagArg
    name: PARSER
- !Flag
  optional: true
  synonyms:
  - -a
  - --attributes
  description: Load a CSV file with optional node attributes
  args: !SimpleFlagArg
    name: ATTRIBUTES
- !Flag
  optional: true
  synonyms:
  - -J
  - --compact-json
  description: Output the network report as a compact JSON object
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -j
  - --json
  description: Output the network report as a JSON object
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -o
  - --singletons
  description: Include singletons in JSON output
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -k
  - --filter
  description: "Only return clusters with ids listed by a newline\nseparated supplied\
    \ file."
  args: !SimpleFlagArg
    name: FILTER
- !Flag
  optional: true
  synonyms:
  - -s
  - --sequences
  description: "Provide the MSA with sequences which were used to make\nthe distance\
    \ file. Can be specified multiple times to\ninclude mutliple MSA files"
  args: !SimpleFlagArg
    name: SEQUENCES
- !Flag
  optional: true
  synonyms:
  - -n
  - --edge-filtering
  description: "Compute edge support and mark edges for removal using\nsequence-based\
    \ triangle tests (requires the -s\nargument) and either only report them or remove\
    \ the\nedges before doing other analyses"
  args: !ChoiceFlagArg
    choices: !!set
      remove:
      report:
- !Flag
  optional: true
  synonyms:
  - -y
  - --centralities
  description: Output a CSV file with node centralities
  args: !SimpleFlagArg
    name: CENTRALITIES
- !Flag
  optional: true
  synonyms:
  - -l
  - --edge-filter-cycles
  description: Filter edges that are in cycles other than triangles
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --cycle-report-file
  description: Prints cycle report to specified file
  args: !SimpleFlagArg
    name: CYCLE_REPORT_FILENAME
- !Flag
  optional: true
  synonyms:
  - -g
  - --triangles
  description: "Maximum number of triangles to consider in each\nfiltering pass"
  args: !SimpleFlagArg
    name: TRIANGLES
- !Flag
  optional: true
  synonyms:
  - -C
  - --contaminants
  description: "Screen for contaminants by marking or removing\nsequences that cluster\
    \ with any of the contaminant IDs\n(-F option) [default is not to screen]"
  args: !ChoiceFlagArg
    choices: !!set
      remove:
      report:
- !Flag
  optional: true
  synonyms:
  - -F
  - --contaminant-file
  description: IDs of contaminant sequences
  args: !SimpleFlagArg
    name: CONTAMINANT_FILE
- !Flag
  optional: true
  synonyms:
  - -M
  - --multiple-edges
  description: "Permit multiple edges (e.g. different dates) to link\nthe same pair\
    \ of nodes in the network [default is to\nchoose the one with the shortest distance]"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -B
  - --bridges
  description: "Report all bridges (edges whose removal would cause\nthe graph to\
    \ disconnect)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --no-degree-fit
  description: Do not perform degree distribution fitting
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -X
  - --extract
  description: If provided, extract all the sequences
  args: !SimpleFlagArg
    name: EXTRACT
- !Flag
  optional: true
  synonyms:
  - -O
  - --output
  description: Write the output file to
  args: !SimpleFlagArg
    name: OUTPUT
- !Flag
  optional: true
  synonyms:
  - -P
  - --prior
  description: "When running in JSON output mode, provide a JSON file\nstoring a previous\
    \ (subset) version of the network for\nconsistent cluster naming"
  args: !SimpleFlagArg
    name: PRIOR
- !Flag
  optional: true
  synonyms:
  - -A
  - --auto-profile
  description: "If provided supercedes most other output and inference\nsettings;\
    \ will add edges from shortest to longest and\nreport network statistics as a\
    \ function of distance\ncutoff"
  args: !SimpleFlagArg
    name: AUTO_PROF
- !Flag
  optional: true
  synonyms:
  - --after
  description: "[assumes DATES are available] If provided (as\nYYYYMMDD) then only\
    \ allow EDGES that connect nodes\nwith dates at or AFTER this date"
  args: !SimpleFlagArg
    name: AFTER
- !Flag
  optional: true
  synonyms:
  - --before
  description: "[assumes DATES are available] If provided (as\nYYYYMMDD) then only\
    \ allow EDGES that connect nodes\nwith dates at or BEFORE this date"
  args: !SimpleFlagArg
    name: BEFORE
- !Flag
  optional: true
  synonyms:
  - --import-attributes
  description: Import node attributes from this JSON
  args: !SimpleFlagArg
    name: IMPORT_ATTR
- !Flag
  optional: true
  synonyms:
  - --subcluster-annotation
  description: "SUBCLUSTER_ANNOTATION\nAs \"dist\" \"field\"\". Use subcluster annotation\
    \ for\ndistance \"dist\" from node attribute \"field\"\n"
  args: !SimpleFlagArg
    name: SUBCLUSTER_ANNOTATION
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "usage: TNS [-h] [-i INPUT] [-u UDS] [-d DOT] [-c CLUSTER] [-t THRESHOLD]\n\
  \           [-e EDI] [-z OLD_EDI] [-f FORMAT] [-x EXCLUDE] [-r RESISTANCE]\n   \
  \        [-p PARSER PARSER] [-a ATTRIBUTES] [-J | -j] [-o] [-k FILTER]\n       \
  \    [-s SEQUENCES] [-n {remove,report}] [-y CENTRALITIES] [-l]\n           [--cycle-report-file\
  \ CYCLE_REPORT_FILENAME] [-g TRIANGLES]\n           [-C {report,remove}] [-F CONTAMINANT_FILE]\
  \ [-M] [-B]\n           [--no-degree-fit] [-X EXTRACT] [-O OUTPUT] [-P PRIOR]\n\
  \           [-A AUTO_PROF] [--after AFTER] [--before BEFORE]\n           [--import-attributes\
  \ IMPORT_ATTR]\n           [--subcluster-annotation SUBCLUSTER_ANNOTATION SUBCLUSTER_ANNOTATION]\n\
  \nConstruct a molecular transmission network.\n\noptional arguments:\n  -h, --help\
  \            show this help message and exit\n  -i INPUT, --input INPUT\n      \
  \                  Input CSV file with inferred genetic links (or stdin\n      \
  \                  if omitted). Can be specified multiple times for\n          \
  \              multiple input files (e.g. to include a reference\n             \
  \           database). Must be a CSV file with three columns:\n                \
  \        ID1,ID2,distance.\n  -u UDS, --uds UDS     Input CSV file with UDS data.\
  \ Must be a CSV file with\n                        three columns: ID1,ID2,distance.\n\
  \  -d DOT, --dot DOT     Output DOT file for GraphViz (or stdout if omitted)\n \
  \ -c CLUSTER, --cluster CLUSTER\n                        Output a CSV file with\
  \ cluster assignments for each\n                        sequence\n  -t THRESHOLD,\
  \ --threshold THRESHOLD\n                        Only count edges where the distance\
  \ is less than this\n                        threshold. Provide comma-separated\
  \ values to compute\n                        subclusters if the output mode is JSON.\
  \ If -t auto is\n                        specified, a heuristic is used to determine\
  \ an ad hoc\n                        optimal threshold.\n  -e EDI, --edi EDI   \
  \  A .json file with clinical information\n  -z OLD_EDI, --old_edi OLD_EDI\n   \
  \                     A .csv file with legacy EDI dates\n  -f FORMAT, --format FORMAT\n\
  \                        Sequence ID format. One of AEH (ID | sample_date |\n  \
  \                      otherfiels default), LANL (e.g. B_HXB2_K03455_1983 :\n  \
  \                      subtype_country_id_year -- could have more fields),\n   \
  \                     regexp (match a regular expression, use the first\n      \
  \                  group as the ID), or plain (treat as sequence ID only,\n    \
  \                    no meta); one per input argument if specified\n  -x EXCLUDE,\
  \ --exclude EXCLUDE\n                        Exclude any sequence which belongs\
  \ to a cluster\n                        containing a \"reference\" strain, defined\
  \ by the year\n                        of isolation. The value of this argument\
  \ is an integer\n                        year (e.g. 1984) so that any sequence isolated\
  \ in or\n                        before that year (e.g. <=1983) is considered to\
  \ be a\n                        lab strain. This option makes sense for LANL or\
  \ AEH\n                        data.\n  -r RESISTANCE, --resistance RESISTANCE\n\
  \                        Load a JSON file with resistance annotation by\n      \
  \                  sequence\n  -p PARSER PARSER, --parser PARSER PARSER\n      \
  \                  The reg.exp pattern to split up sequence ids; only\n        \
  \                used if format is regexp; format is INDEX EXPRESSION\n        \
  \                (consumes two arguments)\n  -a ATTRIBUTES, --attributes ATTRIBUTES\n\
  \                        Load a CSV file with optional node attributes\n  -J, --compact-json\
  \    Output the network report as a compact JSON object\n  -j, --json          \
  \  Output the network report as a JSON object\n  -o, --singletons      Include singletons\
  \ in JSON output\n  -k FILTER, --filter FILTER\n                        Only return\
  \ clusters with ids listed by a newline\n                        separated supplied\
  \ file.\n  -s SEQUENCES, --sequences SEQUENCES\n                        Provide\
  \ the MSA with sequences which were used to make\n                        the distance\
  \ file. Can be specified multiple times to\n                        include mutliple\
  \ MSA files\n  -n {remove,report}, --edge-filtering {remove,report}\n          \
  \              Compute edge support and mark edges for removal using\n         \
  \               sequence-based triangle tests (requires the -s\n               \
  \         argument) and either only report them or remove the\n                \
  \        edges before doing other analyses\n  -y CENTRALITIES, --centralities CENTRALITIES\n\
  \                        Output a CSV file with node centralities\n  -l, --edge-filter-cycles\n\
  \                        Filter edges that are in cycles other than triangles\n\
  \  --cycle-report-file CYCLE_REPORT_FILENAME\n                        Prints cycle\
  \ report to specified file\n  -g TRIANGLES, --triangles TRIANGLES\n            \
  \            Maximum number of triangles to consider in each\n                 \
  \       filtering pass\n  -C {report,remove}, --contaminants {report,remove}\n \
  \                       Screen for contaminants by marking or removing\n       \
  \                 sequences that cluster with any of the contaminant IDs\n     \
  \                   (-F option) [default is not to screen]\n  -F CONTAMINANT_FILE,\
  \ --contaminant-file CONTAMINANT_FILE\n                        IDs of contaminant\
  \ sequences\n  -M, --multiple-edges  Permit multiple edges (e.g. different dates)\
  \ to link\n                        the same pair of nodes in the network [default\
  \ is to\n                        choose the one with the shortest distance]\n  -B,\
  \ --bridges         Report all bridges (edges whose removal would cause\n      \
  \                  the graph to disconnect)\n  --no-degree-fit       Do not perform\
  \ degree distribution fitting\n  -X EXTRACT, --extract EXTRACT\n               \
  \         If provided, extract all the sequences\n  -O OUTPUT, --output OUTPUT\n\
  \                        Write the output file to\n  -P PRIOR, --prior PRIOR\n \
  \                       When running in JSON output mode, provide a JSON file\n\
  \                        storing a previous (subset) version of the network for\n\
  \                        consistent cluster naming\n  -A AUTO_PROF, --auto-profile\
  \ AUTO_PROF\n                        If provided supercedes most other output and\
  \ inference\n                        settings; will add edges from shortest to longest\
  \ and\n                        report network statistics as a function of distance\n\
  \                        cutoff\n  --after AFTER         [assumes DATES are available]\
  \ If provided (as\n                        YYYYMMDD) then only allow EDGES that\
  \ connect nodes\n                        with dates at or AFTER this date\n  --before\
  \ BEFORE       [assumes DATES are available] If provided (as\n                 \
  \       YYYYMMDD) then only allow EDGES that connect nodes\n                   \
  \     with dates at or BEFORE this date\n  --import-attributes IMPORT_ATTR\n   \
  \                     Import node attributes from this JSON\n  --subcluster-annotation\
  \ SUBCLUSTER_ANNOTATION SUBCLUSTER_ANNOTATION\n                        As \"dist\"\
  \ \"field\"\". Use subcluster annotation for\n                        distance \"\
  dist\" from node attribute \"field\"\n"
generated_using:
- --help
docker_image:
