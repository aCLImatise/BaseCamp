!Command
positional: []
named:
- !Flag
  description: no optimization, just use free parameters as is (after a projection
    on feasibility domain), to calculate dependent fluxes, cumomers, stats and so
    on
  synonyms:
  - --noopt
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: no scaling factors to optimize => all scaling factors are assumed to
    be 1
  synonyms:
  - --noscale
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'method for optimization, one of nlsic|BFGS|Nelder- Mead. Default:
    nlsic'
  synonyms:
  - --meth
  args: !SimpleFlagArg
    name: METH
  optional: true
- !Flag
  description: calculate all cumomer set (not just the reduced one necesary to simulate
    measurements)
  synonyms:
  - --fullsys
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: simulate labeling in EMU approach
  synonyms:
  - --emu
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ignore initial approximation for free parameters (free fluxes and metabolite
    concentrations) from the FTBL file or from a dedicated file (cf --fseries and
    --iseries option) and use random values drawn uniformly from [0,1] interval
  synonyms:
  - --irand
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "sensitivity method: SENS can be 'mc[=N]', mc stands for Monte-Carlo.\
    \ N is an optional number of Monte- Carlo simulations. Default for N: 10"
  synonyms:
  - --sens
  args: !SimpleFlagArg
    name: SENS
  optional: true
- !Flag
  description: 'upper limit for reverse fluxes. Must be in interval [0, 1]. Default:
    0.999'
  synonyms:
  - --cupx
  args: !SimpleFlagArg
    name: CUPX
  optional: true
- !Flag
  description: 'absolute limit for net fluxes: -cupn <= netflux <= cupn. Must be non
    negative. Value 0 means no limit. Default: 1.e3'
  synonyms:
  - --cupn
  args: !SimpleFlagArg
    name: CUPN
  optional: true
- !Flag
  description: 'upper limit for metabolite pool. Default: 1.e5'
  synonyms:
  - --cupp
  args: !SimpleFlagArg
    name: CUPP
  optional: true
- !Flag
  description: lower limit for not reversible free and dependent fluxes. Zero value
    (default) means no lower limit
  synonyms:
  - --clownr
  args: !SimpleFlagArg
    name: CLOWNR
  optional: true
- !Flag
  description: 'lower limit for input/output free and dependent fluxes. Must be non
    negative. Default: 0'
  synonyms:
  - --cinout
  args: !SimpleFlagArg
    name: CINOUT
  optional: true
- !Flag
  description: lower limit for free metabolite pools. Must be positive. Default 1.e-8
  synonyms:
  - --clowp
  args: !SimpleFlagArg
    name: CLOWP
  optional: true
- !Flag
  description: When integer >= 1, it is a number of parallel subprocesses used in
    Monte-Carlo (MC) simulations or for multiple FTBL inputs. When NP is a float number
    between 0 and 1, it gives a fraction of available cores (rounded to closest integer)
    to be used. Without this option or for NP=0, all available cores in a given node
    are used for MC simulations.
  synonyms:
  - --np
  args: !SimpleFlagArg
    name: NP
  optional: true
- !Flag
  description: Least norm solution is used for increments during the non-linear iterations
    when Jacobian is rank deficient
  synonyms:
  - --ln
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Least norm of the solution of linearized problem (and not just of increments)
    is used when Jacobian is rank deficient
  synonyms:
  - --sln
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Approximate least norm solution is used for increments during the non-linear
    iterations when Jacobian is rank deficient
  synonyms:
  - --tikhreg
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: The same as --ln but with a function limSolve::lsei()
  synonyms:
  - --lim
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Apply zero crossing strategy with non negative threshold for net fluxes
  synonyms:
  - --zc
  args: !SimpleFlagArg
    name: ZC
  optional: true
- !Flag
  description: Don't use free/dependent flux definitions from FTBL file(s). Make an
    automatic guess.
  synonyms:
  - --ffguess
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "File name with free parameter values for multiple starting points.\
    \ Default: '' (empty, i.e. only one starting point from the FTBL file is used)"
  synonyms:
  - --fseries
  args: !SimpleFlagArg
    name: FSERIES
  optional: true
- !Flag
  description: "Indexes of starting points to use. Format: '1:10' -- use only first\
    \ ten starting points; '1,3' -- use the the first and third starting points; '1:10,15,91:100'\
    \ -- a mix of both formats is allowed. Default: '' (empty, i.e. all provided starting\
    \ points are used)"
  synonyms:
  - --iseries
  args: !SimpleFlagArg
    name: ISERIES
  optional: true
- !Flag
  description: 'Integer (preferably a prime integer) used for reproducible random
    number generating. It makes reproducible random starting points (--irand) but
    also Monte-Carlo simulations for sensitivity analysis. Default: none, i.e. current
    system value is used, so random drawing will be varying at each run.'
  synonyms:
  - --seed
  args: !SimpleFlagArg
    name: SEED
  optional: true
- !Flag
  description: 'This option takes an optional argument, a p-value between 0 and 1
    which is used to filter out measurement outliers. The filtering is based on Z
    statistics calculated on reduced residual distribution. Default: 0.01.'
  synonyms:
  - --excl_outliers
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: generate an R code but not execute it.
  synonyms:
  - --nocalc
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Add centered gaussian noise to simulated measurements written to _res.kvh
    file. SD of this noise is taken from FTBL file
  synonyms:
  - --addnoise
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Time order for ODE solving (1 (default), 2 or 1,2). Order 2 is more
    precise but more time consuming. The value '1,2' makes to start solving the ODE
    with the first order scheme then continues with the order 2.
  synonyms:
  - --time_order
  args: !SimpleFlagArg
    name: TIME_ORDER
  optional: true
- !Flag
  description: copy documentation directory in the current directory and exit. If
    ./doc exists, its content is silently owerriten.
  synonyms:
  - --copy_doc
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: copy test directory in the current directory and exit. If ./test exists,
    its content is silently owerriten.
  synonyms:
  - --copy_test
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: install R dependencies and exit.
  synonyms:
  - --install_rdep
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'developer option: measure cpu time or not'
  synonyms:
  - --TIMEIT
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'developer option: do time profiling or not'
  synonyms:
  - --prof
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'developer option: set trace back limit for python error messages'
  synonyms:
  - --tblimit
  args: !SimpleFlagArg
    name: TBLIMIT
  optional: true
command:
- influx_i
parent:
subcommands: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: show program's version number and exit
  synonyms:
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "Usage: influx_i [options] /path/to/FTBL_file1 [FTBL_file2 [...]]\n\nOptimize\
  \ free fluxes and optionaly metabolite concentrations of a given static\nmetabolic\
  \ network defined in an FTBL file to fit 13C data provided in the same\nFTBL file.\n\
  \nOptions:\n  --version             show program's version number and exit\n  -h,\
  \ --help            show this help message and exit\n  --noopt               no\
  \ optimization, just use free parameters as is (after\n                        a\
  \ projection on feasibility domain), to calculate\n                        dependent\
  \ fluxes, cumomers, stats and so on\n  --noscale             no scaling factors\
  \ to optimize => all scaling factors\n                        are assumed to be\
  \ 1\n  --meth=METH           method for optimization, one of nlsic|BFGS|Nelder-\n\
  \                        Mead. Default: nlsic\n  --fullsys             calculate\
  \ all cumomer set (not just the reduced one\n                        necesary to\
  \ simulate measurements)\n  --emu                 simulate labeling in EMU approach\n\
  \  --irand               ignore initial approximation for free parameters (free\n\
  \                        fluxes and metabolite concentrations) from the FTBL\n \
  \                       file or from a dedicated file (cf --fseries and\n      \
  \                  --iseries option) and use random values drawn\n             \
  \           uniformly from [0,1] interval\n  --sens=SENS           sensitivity method:\
  \ SENS can be 'mc[=N]', mc stands\n                        for Monte-Carlo. N is\
  \ an optional number of Monte-\n                        Carlo simulations. Default\
  \ for N: 10\n  --cupx=CUPX           upper limit for reverse fluxes. Must be in\
  \ interval\n                        [0, 1]. Default: 0.999\n  --cupn=CUPN      \
  \     absolute limit for net fluxes: -cupn <= netflux <=\n                     \
  \   cupn. Must be non negative. Value 0 means no limit.\n                      \
  \  Default: 1.e3\n  --cupp=CUPP           upper limit for metabolite pool. Default:\
  \ 1.e5\n  --clownr=CLOWNR       lower limit for not reversible free and dependent\n\
  \                        fluxes. Zero value (default) means no lower limit\n  --cinout=CINOUT\
  \       lower limit for input/output free and dependent\n                      \
  \  fluxes. Must be non negative. Default: 0\n  --clowp=CLOWP         lower limit\
  \ for free metabolite pools. Must be\n                        positive. Default\
  \ 1.e-8\n  --np=NP               When integer >= 1, it is a number of parallel\n\
  \                        subprocesses used in Monte-Carlo (MC) simulations or\n\
  \                        for multiple FTBL inputs. When NP is a float number\n \
  \                       between 0 and 1, it gives a fraction of available\n    \
  \                    cores (rounded to closest integer) to be used. Without\n  \
  \                      this option or for NP=0, all available cores in a\n     \
  \                   given node are used for MC simulations.\n  --ln            \
  \      Least norm solution is used for increments during the\n                 \
  \       non-linear iterations when Jacobian is rank deficient\n  --sln         \
  \        Least norm of the solution of linearized problem (and\n               \
  \         not just of increments) is used when Jacobian is rank\n              \
  \          deficient\n  --tikhreg             Approximate least norm solution is\
  \ used for increments\n                        during the non-linear iterations\
  \ when Jacobian is rank\n                        deficient\n  --lim            \
  \     The same as --ln but with a function limSolve::lsei()\n  --zc=ZC         \
  \      Apply zero crossing strategy with non negative\n                        threshold\
  \ for net fluxes\n  --ffguess             Don't use free/dependent flux definitions\
  \ from FTBL\n                        file(s). Make an automatic guess.\n  --fseries=FSERIES\
  \     File name with free parameter values for multiple\n                      \
  \  starting points. Default: '' (empty, i.e. only one\n                        starting\
  \ point from the FTBL file is used)\n  --iseries=ISERIES     Indexes of starting\
  \ points to use. Format: '1:10' --\n                        use only first ten starting\
  \ points; '1,3' -- use the\n                        the first and third starting\
  \ points; '1:10,15,91:100'\n                        -- a mix of both formats is\
  \ allowed. Default: ''\n                        (empty, i.e. all provided starting\
  \ points are used)\n  --seed=SEED           Integer (preferably a prime integer)\
  \ used for\n                        reproducible random number generating. It makes\n\
  \                        reproducible random starting points (--irand) but also\n\
  \                        Monte-Carlo simulations for sensitivity analysis.\n   \
  \                     Default: none, i.e. current system value is used, so\n   \
  \                     random drawing will be varying at each run.\n  --excl_outliers\
  \       This option takes an optional argument, a p-value\n                    \
  \    between 0 and 1 which is used to filter out\n                        measurement\
  \ outliers. The filtering is based on Z\n                        statistics calculated\
  \ on reduced residual\n                        distribution. Default: 0.01.\n  --nocalc\
  \              generate an R code but not execute it.\n  --addnoise            Add\
  \ centered gaussian noise to simulated measurements\n                        written\
  \ to _res.kvh file. SD of this noise is taken\n                        from FTBL\
  \ file\n  --time_order=TIME_ORDER\n                        Time order for ODE solving\
  \ (1 (default), 2 or 1,2).\n                        Order 2 is more precise but\
  \ more time consuming. The\n                        value '1,2' makes to start solving\
  \ the ODE with the\n                        first order scheme then continues with\
  \ the order 2.\n  --copy_doc            copy documentation directory in the current\
  \ directory\n                        and exit. If ./doc exists, its content is silently\n\
  \                        owerriten.\n  --copy_test           copy test directory\
  \ in the current directory and exit.\n                        If ./test exists,\
  \ its content is silently owerriten.\n  --install_rdep        install R dependencies\
  \ and exit.\n  --TIMEIT              developer option: measure cpu time or not\n\
  \  --prof                developer option: do time profiling or not\n  --tblimit=TBLIMIT\
  \     developer option: set trace back limit for python\n                      \
  \  error messages\n"
generated_using:
- --help
