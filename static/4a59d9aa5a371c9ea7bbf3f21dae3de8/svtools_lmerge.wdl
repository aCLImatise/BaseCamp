version 1.0

task SvtoolsLmerge {
  input {
    File? in_file
    Float? percent_slop
    Int? fixed_slop
    Boolean? sum
    Boolean? include_original_genotypes
    String? weighting_scheme_intended
    File? tempdir
  }
  command <<<
    svtools lmerge \
      ~{if defined(in_file) then ("--inFile " +  '"' + in_file + '"') else ""} \
      ~{if defined(percent_slop) then ("--percent-slop " +  '"' + percent_slop + '"') else ""} \
      ~{if defined(fixed_slop) then ("--fixed-slop " +  '"' + fixed_slop + '"') else ""} \
      ~{if (sum) then "--sum" else ""} \
      ~{if (include_original_genotypes) then "-g" else ""} \
      ~{if defined(weighting_scheme_intended) then ("-w " +  '"' + weighting_scheme_intended + '"') else ""} \
      ~{if defined(tempdir) then ("--tempdir " +  '"' + tempdir + '"') else ""}
  >>>
  runtime {
    docker: "None"
  }
  parameter_meta {
    in_file: "a sorted VCF file generated by svtools lsort. Each\\nINFO field must contain an SNAME tag containing the\\nsample name (e.g. SNAME=SAMPLE_NAME)"
    percent_slop: "increase the the breakpoint confidence interval both\\nup and down stream by a given proportion of the\\noriginal size"
    fixed_slop: "increase the the breakpoint confidence interval both\\nup and down stream by a given fixed size"
    sum: "calculate breakpoint PDF and position using sum\\nalgorithm instead of product"
    include_original_genotypes: "include original genotypes in output. When multiple\\nvariants are merged, the last will dictate the\\ngenotype field"
    weighting_scheme_intended: "weighting scheme (intended for use in tiered merging),\\noptions: unweighted, carrier_wt, evidence_wt"
    tempdir: "Directory for temp file downloads"
  }
  output {
    File out_stdout = stdout()
  }
}