from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Directory

Dsk_V0_1_0 = CommandToolBuilder(tool="dsk", base_command=["dsk"], inputs=[ToolInput(tag="in_nb_cores", input_type=Boolean(optional=True), prefix="-nb-cores", doc=InputDocumentation(doc="(1 arg) :    number of cores  [default '0']")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="-verbose", doc=InputDocumentation(doc="(1 arg) :    verbosity level  [default '1']")), ToolInput(tag="in_version", input_type=Boolean(optional=True), prefix="-version", doc=InputDocumentation(doc="(0 arg) :    version")), ToolInput(tag="in_file", input_type=Boolean(optional=True), prefix="-file", doc=InputDocumentation(doc="(1 arg) :    reads file")), ToolInput(tag="in_km_er_size", input_type=Boolean(optional=True), prefix="-kmer-size", doc=InputDocumentation(doc="(1 arg) :    size of a kmer  [default '31']")), ToolInput(tag="in_abundance_min", input_type=Boolean(optional=True), prefix="-abundance-min", doc=InputDocumentation(doc="(1 arg) :    min abundance threshold for solid kmers  [default '2']")), ToolInput(tag="in_abundance_max", input_type=Boolean(optional=True), prefix="-abundance-max", doc=InputDocumentation(doc="(1 arg) :    max abundance threshold for solid kmers  [default '2147483647']")), ToolInput(tag="in_abundance_min_threshold", input_type=Boolean(optional=True), prefix="-abundance-min-threshold", doc=InputDocumentation(doc="(1 arg) :    min abundance hard threshold (only used when min abundance is 'auto')  [default '2']")), ToolInput(tag="in_histo_max", input_type=Boolean(optional=True), prefix="-histo-max", doc=InputDocumentation(doc="(1 arg) :    max number of values in kmers histogram  [default '10000']")), ToolInput(tag="in_solidity_kind", input_type=Boolean(optional=True), prefix="-solidity-kind", doc=InputDocumentation(doc="(1 arg) :    way to compute counts of several files (sum, min, max, one, all, custom)  [default 'sum']")), ToolInput(tag="in_solidity_custom", input_type=Boolean(optional=True), prefix="-solidity-custom", doc=InputDocumentation(doc="(1 arg) :    when solidity-kind is custom, specifies list of files where kmer must be present  [default '']")), ToolInput(tag="in_max_memory", input_type=Boolean(optional=True), prefix="-max-memory", doc=InputDocumentation(doc="(1 arg) :    max memory (in MBytes)  [default '5000']")), ToolInput(tag="in_max_disk", input_type=Boolean(optional=True), prefix="-max-disk", doc=InputDocumentation(doc="(1 arg) :    max disk   (in MBytes)  [default '0']")), ToolInput(tag="in_solid_km_ers_out", input_type=File(optional=True), prefix="-solid-kmers-out", doc=InputDocumentation(doc="(1 arg) :    output file for solid kmers (only when constructing a graph)  [default '']")), ToolInput(tag="in_out", input_type=File(optional=True), prefix="-out", doc=InputDocumentation(doc="(1 arg) :    output file  [default '']")), ToolInput(tag="in_out_dir", input_type=Directory(optional=True), prefix="-out-dir", doc=InputDocumentation(doc="(1 arg) :    output directory  [default '.']")), ToolInput(tag="in_out_tmp", input_type=Directory(optional=True), prefix="-out-tmp", doc=InputDocumentation(doc="(1 arg) :    output directory for temporary files  [default '.']")), ToolInput(tag="in_out_compress", input_type=Boolean(optional=True), prefix="-out-compress", doc=InputDocumentation(doc="(1 arg) :    h5 compression level (0:none, 9:best)  [default '0']")), ToolInput(tag="in_storage_type", input_type=Boolean(optional=True), prefix="-storage-type", doc=InputDocumentation(doc="(1 arg) :    storage type of kmer counts ('hdf5' or 'file')  [default 'hdf5']")), ToolInput(tag="in_histo_two_d", input_type=Boolean(optional=True), prefix="-histo2D", doc=InputDocumentation(doc="(1 arg) :    compute the 2D histogram (with first file = genome, remaining files = reads)  [default '0']")), ToolInput(tag="in_histo", input_type=Boolean(optional=True), prefix="-histo", doc=InputDocumentation(doc="(1 arg) :    output the kmer abundance histogram  [default '0']")), ToolInput(tag="in_minimizer_type", input_type=Boolean(optional=True), prefix="-minimizer-type", doc=InputDocumentation(doc="(1 arg) :    minimizer type (0=lexi, 1=freq)  [default '0']")), ToolInput(tag="in_minimizer_size", input_type=Boolean(optional=True), prefix="-minimizer-size", doc=InputDocumentation(doc="(1 arg) :    size of a minimizer  [default '10']")), ToolInput(tag="in_repartition_type", input_type=Boolean(optional=True), prefix="-repartition-type", doc=InputDocumentation(doc="(1 arg) :    minimizer repartition (0=unordered, 1=ordered)  [default '0']"))], outputs=[ToolOutput(tag="out_solid_km_ers_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_solid_km_ers_out", type_hint=File()), doc=OutputDocumentation(doc="(1 arg) :    output file for solid kmers (only when constructing a graph)  [default '']")), ToolOutput(tag="out_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out", type_hint=File()), doc=OutputDocumentation(doc="(1 arg) :    output file  [default '']")), ToolOutput(tag="out_out_dir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_out_dir", type_hint=File()), doc=OutputDocumentation(doc="(1 arg) :    output directory  [default '.']")), ToolOutput(tag="out_out_tmp", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_out_tmp", type_hint=File()), doc=OutputDocumentation(doc="(1 arg) :    output directory for temporary files  [default '.']"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Dsk_V0_1_0().translate("wdl", allow_empty_container=True)

