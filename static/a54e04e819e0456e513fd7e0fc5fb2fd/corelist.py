from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Corelist_V0_1_0 = CommandToolBuilder(tool="corelist", base_command=["corelist"], inputs=[ToolInput(tag="in_lists_versions_incase", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="lists all versions of the given module (or the matching modules, in\ncase you used a module regexp) in the perls Module::CoreList knows\nabout.\ncorelist -a Unicode\nUnicode was first released with perl v5.6.2\nv5.6.2     3.0.1\nv5.8.0     3.2.0\nv5.8.1     4.0.0\nv5.8.2     4.0.0\nv5.8.3     4.0.0\nv5.8.4     4.0.1\nv5.8.5     4.0.1\nv5.8.6     4.0.1\nv5.8.7     4.1.0\nv5.8.8     4.1.0\nv5.8.9     5.1.0\nv5.9.0     4.0.0\nv5.9.1     4.0.0\nv5.9.2     4.0.1\nv5.9.3     4.1.0\nv5.9.4     4.1.0\nv5.9.5     5.0.0\nv5.10.0    5.0.0\nv5.10.1    5.1.0\nv5.11.0    5.1.0\nv5.11.1    5.1.0\nv5.11.2    5.1.0\nv5.11.3    5.2.0\nv5.11.4    5.2.0\nv5.11.5    5.2.0\nv5.12.0    5.2.0\nv5.12.1    5.2.0\nv5.12.2    5.2.0\nv5.12.3    5.2.0\nv5.12.4    5.2.0\nv5.13.0    5.2.0\nv5.13.1    5.2.0\nv5.13.2    5.2.0\nv5.13.3    5.2.0\nv5.13.4    5.2.0\nv5.13.5    5.2.0\nv5.13.6    5.2.0\nv5.13.7    6.0.0\nv5.13.8    6.0.0\nv5.13.9    6.0.0\nv5.13.10   6.0.0\nv5.13.11   6.0.0\nv5.14.0    6.0.0\nv5.14.1    6.0.0\nv5.15.0    6.0.0")), ToolInput(tag="in_finds_first_version", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc="finds the first perl version where a module has been released by\ndate, and not by version number (as is the default).")), ToolInput(tag="in_diff", input_type=Boolean(optional=True), prefix="--diff", doc=InputDocumentation(doc="Given two versions of perl, this prints a human-readable table of\nall module changes between the two. The output format may change in\nthe future, and is meant for humans, not programs. For programs, use\nthe Module::CoreList API.")), ToolInput(tag="in_man", input_type=Boolean(optional=True), prefix="-man", doc=InputDocumentation(doc="all of the help")), ToolInput(tag="in_lists_perl_release", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="lists all of the perl release versions we got the CoreList for.\nIf you pass a version argument (value of $], like 5.00503 or\n5.008008), you get a list of all the modules and their respective\nversions. (If you have the 'version' module, you can also use\nnew-style version numbers, like 5.8.8.)\nIn module filtering context, it can be used as Perl version filter.")), ToolInput(tag="in_lists_when_were", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="lists all of the perl releases and when they were released\nIf you pass a perl version you get the release date for that version\nonly.")), ToolInput(tag="in_feature", input_type=Boolean(optional=True), prefix="--feature", doc=InputDocumentation(doc="lists the first version bundle of each named feature given")), ToolInput(tag="in_upstream", input_type=Boolean(optional=True), prefix="--upstream", doc=InputDocumentation(doc="Shows if the given module is primarily maintained in perl core or on\nCPAN and bug tracker URL.")), ToolInput(tag="in_feature_name", input_type=String(optional=True), position=0, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Corelist_V0_1_0().translate("wdl", allow_empty_container=True)

