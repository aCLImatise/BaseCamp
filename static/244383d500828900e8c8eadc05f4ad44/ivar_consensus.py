from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Int, String

Ivar_Consensus_V0_1_0 = CommandToolBuilder(tool="ivar_consensus", base_command=["ivar", "consensus"], inputs=[ToolInput(tag="in_minimum_quality_score", input_type=Boolean(optional=True), prefix="-q", doc=InputDocumentation(doc="Minimum quality score threshold to count base (Default: 20)")), ToolInput(tag="in_minimum_frequency_threshold", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="Minimum frequency threshold(0 - 1) to call consensus. (Default: 0)\nFrequently used thresholds | Description\n---------------------------|------------\n0 | Majority or most common base\n0.2 | Bases that make up atleast 20% of the depth at a position\n0.5 | Strict or bases that make up atleast 50% of the depth at a position\n0.9 | Strict or bases that make up atleast 90% of the depth at a position\n1 | Identical or bases that make up 100% of the depth at a position. Will have highest ambiguities")), ToolInput(tag="in_minimum_depth_call", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="Minimum depth to call consensus(Default: 10)")), ToolInput(tag="in_override_option_specified", input_type=Boolean(optional=True), prefix="-k", doc=InputDocumentation(doc="If '-k' flag is added, regions with depth less than minimum depth will not be added to the consensus sequence. Using '-k' will override any option specified using -n")), ToolInput(tag="in__character_print", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="(N/-) Character to print in regions with less than minimum coverage(Default: N)")), ToolInput(tag="in_required_prefix_output", input_type=File(optional=True), prefix="-p", doc=InputDocumentation(doc="(Required) Prefix for the output fasta file and quality file")), ToolInput(tag="in_var_6", input_type=Int(optional=True), prefix="-Q", doc=InputDocumentation(doc="")), ToolInput(tag="in_d", input_type=Int(optional=True), prefix="-d", doc=InputDocumentation(doc="")), ToolInput(tag="in_a", input_type=Boolean(optional=True), prefix="-A", doc=InputDocumentation(doc="")), ToolInput(tag="in_aa", input_type=Boolean(optional=True), prefix="-aa", doc=InputDocumentation(doc="")), ToolInput(tag="in_sam_tools", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_m_pile_up", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_input_dot_bam", input_type=String(), position=2, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_required_prefix_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_required_prefix_output", type_hint=File()), doc=OutputDocumentation(doc="(Required) Prefix for the output fasta file and quality file"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Ivar_Consensus_V0_1_0().translate("wdl", allow_empty_container=True)

