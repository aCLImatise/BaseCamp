from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Directory, Int, Float, Boolean

Anvi_Gen_Structure_Database_V0_1_0 = CommandToolBuilder(tool="anvi_gen_structure_database", base_command=["anvi-gen-structure-database"], inputs=[ToolInput(tag="in_contigs_db", input_type=String(optional=True), prefix="--contigs-db", doc=InputDocumentation(doc="Anvi'o contigs database generated by 'anvi-gen-\ncontigs-database' (default: None)")), ToolInput(tag="in_pdb_db", input_type=File(optional=True), prefix="--pdb-db", doc=InputDocumentation(doc="By default, this program accesses the structure files\nit needs from an internal anvi'o database that can be\nset up with anvi-setup-pdb-database. If a required\nstructure is not in this database, it will instead be\ndownloaded from the RCSB PDB server. This parameter\nexists only if a) you created a database and b) it\nexists in a custom location. In this case, please\nprovide that path here. Otherwise we vibing. (default:\nNone)")), ToolInput(tag="in_genes_of_interest", input_type=File(optional=True), prefix="--genes-of-interest", doc=InputDocumentation(doc="A file with anvi'o gene caller IDs. There should be\nonly one column in the file, and each line should\ncorrespond to a unique gene caller id (without a\ncolumn header). (default: None)")), ToolInput(tag="in_gene_caller_ids", input_type=String(optional=True), prefix="--gene-caller-ids", doc=InputDocumentation(doc="Gene caller ids. Multiple of them can be declared\nseparated by a delimiter (the default is a comma). In\nanvi-gen-variability-profile, if you declare nothing\nyou will get all genes matching your other filtering\ncriteria. In other programs, you may get everything,\nnothing, or an error. It really depends on the\nsituation. Fortunately, mistakes are cheap, so it's\nworth a try. (default: None)")), ToolInput(tag="in_output_db_path", input_type=File(optional=True), prefix="--output-db-path", doc=InputDocumentation(doc="Output file path for the new database. (default: None)")), ToolInput(tag="in_dump_dir", input_type=Directory(optional=True), prefix="--dump-dir", doc=InputDocumentation(doc="Modeling and annotating structures requires a lot of\nmoving parts, each which have their own outputs. The\noutput of this program is a structure database\ncontaining the pertinent results of this computation,\nhowever a lot of stuff doesn't make the cut. By\nproviding a directory for this parameter you will get,\nin addition to the structure database, a directory\ncontaining the raw output for everything. (default:\nNone)")), ToolInput(tag="in_num_models", input_type=Int(optional=True), prefix="--num-models", doc=InputDocumentation(doc="This parameter determines the number of predicted\nstructures that are solved for a given protein. The\noriginal atomic positions for each model are perturbed\nby an amount defined by --deviation, which leads to\ndifferences between each model. Therefore, whichever\nof the N models is chosen to be the 'best' model is\nmore likely to be accurate when --num-models is high,\nsince more of the solution space is searched. It\nshould be kept in mind that the largest determinant of\na model's accuracy is determined by the protein\ntemplates used, so no need to go overboard with an\nexcessively large --num-models. The default is 1.")), ToolInput(tag="in_deviation", input_type=Float(optional=True), prefix="--deviation", doc=InputDocumentation(doc="Deviation (angstroms) (default: 4.0)")), ToolInput(tag="in_modeller_database", input_type=Int(optional=True), prefix="--modeller-database", doc=InputDocumentation(doc="Which database do you want to search the structures\nof? Default is 'pdb_95'. If you have your own database\nit must have either the extension .bin or .pir. If you\ndon't have a database or don't know what this means,\ndon't worry, we will both inform you and take care of\nyou.")), ToolInput(tag="in_scoring_method", input_type=Float(optional=True), prefix="--scoring-method", doc=InputDocumentation(doc="How should the best model be decided? The metric used\ncould be any of GA341_score, DOPE_score, and molpdf.\nGA341 is an absolute measure, where a good model will\nhave a score near 1.0, whereas anything below 0.6 can\nbe considered bad. DOPE and molpdf scores are relative\nenergy measures, where lower scores are better. DOPE\nhas been generally shown to be a better distinguisher\nbetween good and bad models than molpdf. The default\nis DOPE_score. To learn more see the MODELLER\ntutorial:\nhttps://salilab.org/modeller/tutorial/basic.html.")), ToolInput(tag="in_very_fast", input_type=Boolean(optional=True), prefix="--very-fast", doc=InputDocumentation(doc="If provided, a very fast optimization is done for each\nmodel at the cost of accuracy. It is recommended to\nuse a --num-models of 1, since the optimization is so\ncrude that all models will likely converge to the same\nsolution. (default: False)")), ToolInput(tag="in_percent_cut_off", input_type=Float(optional=True), prefix="--percent-cutoff", doc=InputDocumentation(doc="If a protein in the database has a percent identity to\nthe gene of interest that is less than this parameter,\nthen it is not considered as a template. The default\nis 30.000000.")), ToolInput(tag="in_alignment_fraction_cut_off", input_type=Float(optional=True), prefix="--alignment-fraction-cutoff", doc=InputDocumentation(doc="If a protein in the database aligns to a fraction of\nthe gene of interest that is less than this parameter,\nthe template is not considered. For example, if\n--alignment-cutoff is set to 0.90, and the fraction of\nthe gene of interest that is covered by a potential\ntemplate is 0.80 in their alignment, the template does\nnot align to enough of the gene of interest to be\nconsidered. The default is 0.800000.")), ToolInput(tag="in_max_number_templates", input_type=Int(optional=True), prefix="--max-number-templates", doc=InputDocumentation(doc="Generally speaking it is best to use as many templates\nas possible given that they have high proper percent\nidentity to the gene of interest. Taken from https://s\nalilab.org/modeller/methenz/andras/node4.html: 'The\nuse of several templates generally increases the model\naccuracy. One strength of MODELLER is that it can\ncombine information from multiple template structures,\nin two ways. First, multiple template structures may\nbe aligned with different domains of the target, with\nlittle overlap between them, in which case the\nmodeling procedure can construct a homology-based\nmodel of the whole target sequence. Second, the\ntemplate structures may be aligned with the same part\nof the target, in which case the modeling procedure is\nlikely to automatically build the model on the locally\nbest template [43,44]. In general, it is frequently\nbeneficial to include in the modeling process all the\ntemplates that differ substantially from each other,\nif they share approximately the same overall\nsimilarity to the target sequence.' The default is 5.")), ToolInput(tag="in_skip_dssp", input_type=Boolean(optional=True), prefix="--skip-DSSP", doc=InputDocumentation(doc="Dictionary of Secondary Structure of Proteins (DSSP)\nis a program that takes as its input a protein\nstructure file and outputs predicted secondary\nstructure (alpha helix, beta strand, etc.), measures\nof solvent accessibility, and hydrogen bonds for each\nresidue in the protein. If for some reason you don't\nwant this, provide this flag. (default: False)")), ToolInput(tag="in_modeller_executable", input_type=Float(optional=True), prefix="--modeller-executable", doc=InputDocumentation(doc="The MODELLER program to use. For example, `mod9.19`.\nAnvi'o will try and find it if not provided (default:\nNone)")), ToolInput(tag="in_offline_mode", input_type=Boolean(optional=True), prefix="--offline-mode", doc=InputDocumentation(doc="Anvi'o first tries to obtain template structures from\na database (see --pdb-db for details). If the\nrequested template does not exist in the database, its\nstructure will be downloaded from the RCSB PDB server.\nHowever, if you don't have access to internet, or hate\nthe RCSB PDB, provide this flag so that all operations\nof this program remain offline. If the template\nstructure is not in the database, then no template\nstructure for you. (default: False)")), ToolInput(tag="in_num_threads", input_type=Int(optional=True), prefix="--num-threads", doc=InputDocumentation(doc="Maximum number of threads to use for multithreading\nwhenever possible. Very conservatively, the default is\n1. It is a good idea to not exceed the number of CPUs\n/ cores on your system. Plus, please be careful with\nthis option if you are running your commands on a SGE\n--if you are clusterizing your runs, and asking for\nmultiple threads to use, you may deplete your\nresources very fast. (default: 1)")), ToolInput(tag="in_write_buffer_size_per_thread", input_type=Int(optional=True), prefix="--write-buffer-size-per-thread", doc=InputDocumentation(doc="How many items should be kept in memory before they\nare written do the disk. The default is 25 per thread.\nSo a single-threaded job would have a write buffer\nsize of 25, whereas a job with 4 threads would have a\nwrite buffer size of 4*25. The larger the buffer size,\nthe less frequent the program will access to the disk,\nyet the more memory will be consumed since the\nprocessed items will be cleared off the memory only\nafter they are written to the disk. The default buffer\nsize will likely work for most cases. Please keep an\neye on the memory usage output to make sure the memory\nuse never exceeds the size of the physical memory. If\n--num-threads is 1, this parameter is ignored because\nthe DB is written to after each gene")), ToolInput(tag="in_structure_db", input_type=String(), position=0, doc=InputDocumentation(doc="üç∫ More on `anvi-gen-structure-database`:"))], outputs=[ToolOutput(tag="out_output_db_path", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_db_path", type_hint=File()), doc=OutputDocumentation(doc="Output file path for the new database. (default: None)")), ToolOutput(tag="out_dump_dir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_dump_dir", type_hint=File()), doc=OutputDocumentation(doc="Modeling and annotating structures requires a lot of\nmoving parts, each which have their own outputs. The\noutput of this program is a structure database\ncontaining the pertinent results of this computation,\nhowever a lot of stuff doesn't make the cut. By\nproviding a directory for this parameter you will get,\nin addition to the structure database, a directory\ncontaining the raw output for everything. (default:\nNone)"))], container="quay.io/biocontainers/anvio-minimal:7--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Anvi_Gen_Structure_Database_V0_1_0().translate("wdl")

