from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Array, Int, Float, Boolean

Bland_Altman_Plot_Py_V0_1_0 = CommandToolBuilder(tool="bland_altman_plot.py", base_command=["bland_altman_plot.py"], inputs=[ToolInput(tag="in_input", input_type=String(optional=True), prefix="--input", doc=InputDocumentation(doc="Input dataset in wide format.")), ToolInput(tag="in_design", input_type=File(optional=True), prefix="--design", doc=InputDocumentation(doc="Design file.")), ToolInput(tag="in_id", input_type=String(optional=True), prefix="--ID", doc=InputDocumentation(doc="Name of the column with unique identifiers.")), ToolInput(tag="in_group", input_type=File(optional=True), prefix="--group", doc=InputDocumentation(doc="Group/treatment identifier in design file [Optional].")), ToolInput(tag="in_figure", input_type=String(optional=True), prefix="--figure", doc=InputDocumentation(doc="Name of the output PDF for Bland-Altman plots.")), ToolInput(tag="in_flag_dist", input_type=String(optional=True), prefix="--flag_dist", doc=InputDocumentation(doc="Name of the output TSV for distribution flags.")), ToolInput(tag="in_flag_sample", input_type=String(optional=True), prefix="--flag_sample", doc=InputDocumentation(doc="Name of the output TSV for sample flags.")), ToolInput(tag="in_flag_feature", input_type=String(optional=True), prefix="--flag_feature", doc=InputDocumentation(doc="Name of the output TSV for feature flags.")), ToolInput(tag="in_process_only", input_type=Array(t=String(), optional=True), prefix="--process_only", doc=InputDocumentation(doc="Only process the given groups (list groups separated\nby spaces) [Optional].")), ToolInput(tag="in_resid_cut_off", input_type=Int(optional=True), prefix="--resid_cutoff", doc=InputDocumentation(doc="Cutoff value for flagging outliers [default=3].")), ToolInput(tag="in_sample_flag_cut_off", input_type=Float(optional=True), prefix="--sample_flag_cutoff", doc=InputDocumentation(doc="Proportion cutoff value when flagging samples\n[default=0.20].")), ToolInput(tag="in_feature_flag_cut_off", input_type=Float(optional=True), prefix="--feature_flag_cutoff", doc=InputDocumentation(doc="Proportion cutoff value when flagging features\n[default=0.05].")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="Add debugging log output."))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bland_Altman_Plot_Py_V0_1_0().translate("wdl", allow_empty_container=True)

