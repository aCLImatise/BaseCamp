from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Directory, Int, String

Humann2_V0_1_0 = CommandToolBuilder(tool="humann2", base_command=["humann2"], inputs=[ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="additional output is printed")), ToolInput(tag="in_resume", input_type=Boolean(optional=True), prefix="--resume", doc=InputDocumentation(doc="bypass commands if the output files exist")), ToolInput(tag="in_bypass_prescreen", input_type=Boolean(optional=True), prefix="--bypass-prescreen", doc=InputDocumentation(doc="bypass the prescreen step and run on the full ChocoPhlAn database")), ToolInput(tag="in_bypass_nucleotide_index", input_type=Boolean(optional=True), prefix="--bypass-nucleotide-index", doc=InputDocumentation(doc="bypass the nucleotide index step and run on the indexed ChocoPhlAn database")), ToolInput(tag="in_bypass_translated_search", input_type=Boolean(optional=True), prefix="--bypass-translated-search", doc=InputDocumentation(doc="bypass the translated search step")), ToolInput(tag="in_bypass_nucleotide_search", input_type=Boolean(optional=True), prefix="--bypass-nucleotide-search", doc=InputDocumentation(doc="bypass the nucleotide search steps")), ToolInput(tag="in_input", input_type=File(optional=True), prefix="--input", doc=InputDocumentation(doc="input file of type {fastq,fastq.gz,fasta,fasta.gz,sam,bam,blastm8,genetable,biom}\n[REQUIRED]")), ToolInput(tag="in_output", input_type=Directory(optional=True), prefix="--output", doc=InputDocumentation(doc="directory to write output files\n[REQUIRED]")), ToolInput(tag="in_nucleotide_database", input_type=Directory(optional=True), prefix="--nucleotide-database", doc=InputDocumentation(doc="directory containing the nucleotide database\n[DEFAULT: /usr/local/lib/python2.7/site-packages/humann2/data/chocophlan_DEMO]")), ToolInput(tag="in_annotation_gene_index", input_type=Int(optional=True), prefix="--annotation-gene-index", doc=InputDocumentation(doc="the index of the gene in the sequence annotation\n[DEFAULT: 8]")), ToolInput(tag="in_protein_database", input_type=Directory(optional=True), prefix="--protein-database", doc=InputDocumentation(doc="directory containing the protein database\n[DEFAULT: /usr/local/lib/python2.7/site-packages/humann2/data/uniref_DEMO]")), ToolInput(tag="in_evalue", input_type=Int(optional=True), prefix="--evalue", doc=InputDocumentation(doc="the evalue threshold to use with the translated search\n[DEFAULT: 1.0]")), ToolInput(tag="in_search_mode", input_type=String(optional=True), prefix="--search-mode", doc=InputDocumentation(doc="search for uniref50 or uniref90 gene families\n[DEFAULT: based on translated database selected]")), ToolInput(tag="in_meta_phl_an", input_type=File(optional=True), prefix="--metaphlan", doc=InputDocumentation(doc="directory containing the MetaPhlAn software\n[DEFAULT: $PATH]")), ToolInput(tag="in_meta_phl_an_options", input_type=String(optional=True), prefix="--metaphlan-options", doc=InputDocumentation(doc="options to be provided to the MetaPhlAn software\n[DEFAULT: '-t rel_ab']")), ToolInput(tag="in_o_log", input_type=File(optional=True), prefix="--o-log", doc=InputDocumentation(doc="log file\n[DEFAULT: temp/sample.log]")), ToolInput(tag="in_log_level", input_type=String(optional=True), prefix="--log-level", doc=InputDocumentation(doc="level of messages to display in log\n[DEFAULT: DEBUG]")), ToolInput(tag="in_remove_temp_output", input_type=Boolean(optional=True), prefix="--remove-temp-output", doc=InputDocumentation(doc="remove temp output files\n[DEFAULT: temp files are not removed]")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="number of threads/processes\n[DEFAULT: 1]")), ToolInput(tag="in_prescreen_threshold", input_type=Int(optional=True), prefix="--prescreen-threshold", doc=InputDocumentation(doc="minimum percentage of reads matching a species\n[DEFAULT: 0.01]")), ToolInput(tag="in_identity_threshold", input_type=Int(optional=True), prefix="--identity-threshold", doc=InputDocumentation(doc="identity threshold for alignments\n[DEFAULT: 50.0]")), ToolInput(tag="in_translated_subject_coverage_threshold", input_type=Int(optional=True), prefix="--translated-subject-coverage-threshold", doc=InputDocumentation(doc="subject coverage threshold for translated alignments\n[DEFAULT: 50.0]")), ToolInput(tag="in_translated_query_coverage_threshold", input_type=Int(optional=True), prefix="--translated-query-coverage-threshold", doc=InputDocumentation(doc="query coverage threshold for translated alignments\n[DEFAULT: 90.0]")), ToolInput(tag="in_bowtie_two", input_type=Int(optional=True), prefix="--bowtie2", doc=InputDocumentation(doc="directory containing the bowtie2 executable\n[DEFAULT: $PATH]")), ToolInput(tag="in_u_search", input_type=File(optional=True), prefix="--usearch", doc=InputDocumentation(doc="directory containing the usearch executable\n[DEFAULT: $PATH]")), ToolInput(tag="in_rap_search", input_type=File(optional=True), prefix="--rapsearch", doc=InputDocumentation(doc="directory containing the rapsearch executable\n[DEFAULT: $PATH]")), ToolInput(tag="in_diamond", input_type=File(optional=True), prefix="--diamond", doc=InputDocumentation(doc="directory containing the diamond executable\n[DEFAULT: $PATH]")), ToolInput(tag="in_taxonomic_profile", input_type=File(optional=True), prefix="--taxonomic-profile", doc=InputDocumentation(doc="a taxonomic profile (the output file created by metaphlan)\n[DEFAULT: file will be created]")), ToolInput(tag="in_id_mapping", input_type=File(optional=True), prefix="--id-mapping", doc=InputDocumentation(doc="id mapping file for alignments\n[DEFAULT: alignment reference used]")), ToolInput(tag="in_translated_alignment", input_type=String(optional=True), prefix="--translated-alignment", doc=InputDocumentation(doc="software to use for translated alignment\n[DEFAULT: diamond]")), ToolInput(tag="in_x_ipe", input_type=String(optional=True), prefix="--xipe", doc=InputDocumentation(doc="turn on/off the xipe computation\n[DEFAULT: off]")), ToolInput(tag="in_min_path", input_type=String(optional=True), prefix="--minpath", doc=InputDocumentation(doc="turn on/off the minpath computation\n[DEFAULT: on]")), ToolInput(tag="in_pick_frames", input_type=String(optional=True), prefix="--pick-frames", doc=InputDocumentation(doc="turn on/off the pick_frames computation\n[DEFAULT: off]")), ToolInput(tag="in_gap_fill", input_type=String(optional=True), prefix="--gap-fill", doc=InputDocumentation(doc="turn on/off the gap fill computation\n[DEFAULT: on]")), ToolInput(tag="in_output_format", input_type=String(optional=True), prefix="--output-format", doc=InputDocumentation(doc="the format of the output files\n[DEFAULT: tsv]")), ToolInput(tag="in_output_max_decimals", input_type=Int(optional=True), prefix="--output-max-decimals", doc=InputDocumentation(doc="the number of decimals to output\n[DEFAULT: 10]")), ToolInput(tag="in_output_basename", input_type=File(optional=True), prefix="--output-basename", doc=InputDocumentation(doc="the basename for the output files\n[DEFAULT: input file basename]")), ToolInput(tag="in_remove_stratified_output", input_type=Boolean(optional=True), prefix="--remove-stratified-output", doc=InputDocumentation(doc="remove stratification from output\n[DEFAULT: output is stratified]")), ToolInput(tag="in_remove_column_description_output", input_type=Boolean(optional=True), prefix="--remove-column-description-output", doc=InputDocumentation(doc="remove the description in the output column\n[DEFAULT: output column includes description]")), ToolInput(tag="in_input_format", input_type=String(optional=True), prefix="--input-format", doc=InputDocumentation(doc="the format of the input file\n[DEFAULT: format identified by software]")), ToolInput(tag="in_pathways_database", input_type=File(optional=True), prefix="--pathways-database", doc=InputDocumentation(doc="mapping file (or files, at most two in a comma-delimited list) to use for pathway computations\n[DEFAULT: metacyc database ]")), ToolInput(tag="in_pathways", input_type=String(optional=True), prefix="--pathways", doc=InputDocumentation(doc="the database to use for pathway computations\n[DEFAULT: metacyc]")), ToolInput(tag="in_memory_use", input_type=String(optional=True), prefix="--memory-use", doc=InputDocumentation(doc="the amount of memory to use\n[DEFAULT: minimum]\n"))], outputs=[ToolOutput(tag="out_output", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="directory to write output files\n[REQUIRED]")), ToolOutput(tag="out_taxonomic_profile", output_type=File(optional=True), selector=InputSelector(input_to_select="in_taxonomic_profile", type_hint=File()), doc=OutputDocumentation(doc="a taxonomic profile (the output file created by metaphlan)\n[DEFAULT: file will be created]"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Humann2_V0_1_0().translate("wdl", allow_empty_container=True)

