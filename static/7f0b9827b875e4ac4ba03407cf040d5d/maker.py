from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Maker_V0_1_0 = CommandToolBuilder(tool="maker", base_command=["maker"], inputs=[ToolInput(tag="in_genome", input_type=Boolean(optional=True), prefix="-genome", doc=InputDocumentation(doc="|g <file>    Overrides the genome file path in the control files")), ToolInput(tag="in_rm_off", input_type=Boolean(optional=True), prefix="-RM_off", doc=InputDocumentation(doc="|R           Turns all repeat masking options off.")), ToolInput(tag="in_datastore", input_type=Boolean(optional=True), prefix="-datastore", doc=InputDocumentation(doc="/         Forcably turn on/off MAKER's two deep directory")), ToolInput(tag="in_old_struct", input_type=Boolean(optional=True), prefix="-old_struct", doc=InputDocumentation(doc="Use the old directory styles (MAKER 2.26 and lower)")), ToolInput(tag="in_base", input_type=Boolean(optional=True), prefix="-base", doc=InputDocumentation(doc="<string>   Set the base name MAKER uses to save output files.\nMAKER uses the input genome file name by default.")), ToolInput(tag="in_tries", input_type=Boolean(optional=True), prefix="-tries", doc=InputDocumentation(doc="|t <integer>  Run contigs up to the specified number of tries.")), ToolInput(tag="in_cpus", input_type=Boolean(optional=True), prefix="-cpus", doc=InputDocumentation(doc="|c  <integer>  Tells how many cpus to use for BLAST analysis.\nNote: this is for BLAST and not for MPI!")), ToolInput(tag="in_mpi", input_type=Boolean(optional=True), prefix="-mpi", doc=InputDocumentation(doc="Forces MAKER to use MPI (overriding MPI autodetection).\nUseful if MAKER doesn't correctly detect that it was\nlaunched using an MPI process manager, or if running\nin a Singularity container.")), ToolInput(tag="in_force", input_type=Boolean(optional=True), prefix="-force", doc=InputDocumentation(doc="|f            Forces MAKER to delete old files before running again.\nThis will require all blast analyses to be rerun.")), ToolInput(tag="in_again", input_type=Boolean(optional=True), prefix="-again", doc=InputDocumentation(doc="|a            recaculate all annotations and output files even if no\nsettings have changed. Does not delete old analyses.")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="-quiet", doc=InputDocumentation(doc="|q            Regular quiet. Only a handlful of status messages.")), ToolInput(tag="in_qq", input_type=Boolean(optional=True), prefix="-qq", doc=InputDocumentation(doc="Even more quiet. There are no status messages.")), ToolInput(tag="in_ds_index", input_type=Boolean(optional=True), prefix="-dsindex", doc=InputDocumentation(doc="Quickly generate datastore index file. Note that this\nwill not check if run settings have changed on contigs")), ToolInput(tag="in_no_lock", input_type=Boolean(optional=True), prefix="-nolock", doc=InputDocumentation(doc="Turn off file locks. May be usful on some file systems,\nbut can cause race conditions if running in parallel.")), ToolInput(tag="in_tmp", input_type=Boolean(optional=True), prefix="-TMP", doc=InputDocumentation(doc="Specify temporary directory to use.")), ToolInput(tag="in_ctl", input_type=Boolean(optional=True), prefix="-CTL", doc=InputDocumentation(doc="Generate empty control files in the current directory.")), ToolInput(tag="in_opts", input_type=Boolean(optional=True), prefix="-OPTS", doc=InputDocumentation(doc="Generates just the maker_opts.ctl file.")), ToolInput(tag="in_b_opts", input_type=Boolean(optional=True), prefix="-BOPTS", doc=InputDocumentation(doc="Generates just the maker_bopts.ctl file.")), ToolInput(tag="in_exe", input_type=Boolean(optional=True), prefix="-EXE", doc=InputDocumentation(doc="Generates just the maker_exe.ctl file.")), ToolInput(tag="in_m_was", input_type=Boolean(optional=True), prefix="-MWAS", doc=InputDocumentation(doc="<option>   Easy way to control mwas_server for web-based GUI\noptions:  STOP\nSTART\nRESTART")), ToolInput(tag="in_version", input_type=Boolean(optional=True), prefix="-version", doc=InputDocumentation(doc="Prints the MAKER version.")), ToolInput(tag="in_no_data_store", input_type=String(), position=0, doc=InputDocumentation(doc="structure for output.  Always on by default."))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Maker_V0_1_0().translate("wdl", allow_empty_container=True)

