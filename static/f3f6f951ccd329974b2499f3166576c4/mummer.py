from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String

Mummer_V0_1_0 = CommandToolBuilder(tool="mummer", base_command=["mummer"], inputs=[ToolInput(tag="in_mum", input_type=Boolean(optional=True), prefix="-mum", doc=InputDocumentation(doc="compute maximal matches that are unique in both sequences")), ToolInput(tag="in_m_umc_and", input_type=Boolean(optional=True), prefix="-mumcand", doc=InputDocumentation(doc="same as -mumreference")), ToolInput(tag="in_mum_reference", input_type=Boolean(optional=True), prefix="-mumreference", doc=InputDocumentation(doc="compute maximal matches that are unique in the reference-\nsequence but not necessarily in the query-sequence (default)")), ToolInput(tag="in_max_match", input_type=Boolean(optional=True), prefix="-maxmatch", doc=InputDocumentation(doc="compute all maximal matches regardless of their uniqueness")), ToolInput(tag="in_match_only_characters", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="match only the characters a, c, g, or t\nthey can be in upper or in lower case")), ToolInput(tag="in_set_minimum_length", input_type=Boolean(optional=True), prefix="-l", doc=InputDocumentation(doc="set the minimum length of a match\nif not set, the default value is 20")), ToolInput(tag="in_compute_forward_reverse", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc="compute forward and reverse complement matches")), ToolInput(tag="in_only_compute_reverse", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="only compute reverse complement matches")), ToolInput(tag="in_show_matching_substrings", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="show the matching substrings")), ToolInput(tag="in_report_queryposition_reverse", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="report the query-position of a reverse complement match\nrelative to the original query sequence")), ToolInput(tag="in_force_column_output", input_type=Boolean(optional=True), prefix="-F", doc=InputDocumentation(doc="force 4 column output format regardless of the number of\nreference sequence inputs")), ToolInput(tag="in_show_length_query", input_type=Boolean(optional=True), prefix="-L", doc=InputDocumentation(doc="show the length of the query sequences on the header line")), ToolInput(tag="in_help", input_type=Boolean(optional=True), prefix="-help", doc=InputDocumentation(doc="show possible options")), ToolInput(tag="in_reference_file", input_type=File(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_query_files", input_type=String(), position=1, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Mummer_V0_1_0().translate("wdl", allow_empty_container=True)

