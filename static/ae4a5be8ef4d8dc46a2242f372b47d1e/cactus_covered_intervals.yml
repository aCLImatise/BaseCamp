!Command
command:
- cactus_covered_intervals
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - --queryoffsets
  description: "input query names contain offsets, as described below\n(by default\
    \ input query names do not contain offsets)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --markend
  description: write a comment at the end of the output file
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --progress
  description: report each chromosome as we encounter it
  args: !SimpleFlagArg
    name: chromosome
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - --version
  description: report the program version and quit
  args: !EmptyFlagArg {}
help_text: "Can't understand \"--help\"\nusage: cactus_covered_intervals [options]\n\
  \nRead a list of nearly-sorted alignment intervals and report intervals that are\n\
  covered by at least some specified number of alignments.\n\n  M=<depth>        \
  \      report any position that is covered by at least this\n                  \
  \       many alignments; the maximum allowed depth is 255\n                    \
  \     (by default this is 1)\n  W=<length>             size of internal bitmap \"\
  window\", in bases;  this\n                         should be at least twice the\
  \ size of the query\n                         fragments being aligned/reported\n\
  \                         (by default this is 1M)\n  --queryoffsets         input\
  \ query names contain offsets, as described below\n                         (by\
  \ default input query names do not contain offsets)\n  --origin=zero          *output*\
  \ intervals are origin-zero, half-open\n                         (this is the default)\n\
  \  --origin=one           *output* intervals are origin-one, closed\n          \
  \               (*input* intervals are *always* origin-zero)\n  --markend      \
  \        write a comment at the end of the output file\n  --progress=chromosome\
  \  report each chromosome as we encounter it\n  --version              report the\
  \ program version and quit\n\nWe expect as input alignments of the form\n  <refchrom>\
  \ <refstart> <refend> <qchrom>[_<offset>] <qstart+> <qend+>\nwhere\n  <refchrom>\
  \ <refstart> <refend>  is the alignment interval on the reference\n  <qchrom>  \
  \ <qstart+>  <qend+>   is the alignment interval on the query,\n               \
  \                   with qstart and qend relative to the\n                     \
  \             positive strand\n  <offset>                        is an (optional)\
  \ offset to be added to\n                                  <qstart+> and <qend+>;\
  \  usually this is\n                                  the start of a fragment given\
  \ to the\n                                  aligner\n"
generated_using:
- --help
docker_image:
