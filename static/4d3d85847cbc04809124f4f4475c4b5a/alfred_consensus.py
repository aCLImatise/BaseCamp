from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Alfred_Consensus_V0_1_0 = CommandToolBuilder(tool="alfred_consensus", base_command=["alfred", "consensus"], inputs=[ToolInput(tag="in_f", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc="[ --format ] arg (=bam)            input format [bam|fasta]")), ToolInput(tag="in_arg_fraction_reads", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc="[ --called ] arg (=0.5)            fraction of reads required for")), ToolInput(tag="in_arg_min_mapping", input_type=Boolean(optional=True), prefix="-q", doc=InputDocumentation(doc="[ --mapqual ] arg (=10)            min. mapping quality")), ToolInput(tag="in_arg_chr_position", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="[ --position ] arg (=chr4:500500)  position to generate consensus")), ToolInput(tag="in_arg_window_fetch", input_type=Boolean(optional=True), prefix="-w", doc=InputDocumentation(doc="[ --window ] arg (=5)              window around position to fetch reads")), ToolInput(tag="in_consider_secondary_alignments", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="[ --secondary ]                    consider secondary alignments")), ToolInput(tag="in_trim_reads_window", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="[ --trimreads ]                    trim reads to window")), ToolInput(tag="in_arg_gap_open", input_type=Boolean(optional=True), prefix="-g", doc=InputDocumentation(doc="[ --gapopen ] arg (=-10)           gap open")), ToolInput(tag="in_arg_gap_extension", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc="[ --gapext ] arg (=-1)             gap extension")), ToolInput(tag="in__arg_match", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="[ --match ] arg (=5)               match")), ToolInput(tag="in__arg_mismatch", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="[ --mismatch ] arg (=-4)           mismatch")), ToolInput(tag="in_u", input_type=Boolean(optional=True), prefix="-u", doc=InputDocumentation(doc="[ --outformat ] arg (=v)           output format [v|h]")), ToolInput(tag="in_arg_verticalhorizontal_alignment", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="[ --alignment ] arg (='al.fa.gz')  vertical/horizontal alignment")), ToolInput(tag="in__arg_consensus", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="[ --consensus ] arg (='cs.fa.gz')  consensus")), ToolInput(tag="in_consensus", input_type=String(), position=0, doc=InputDocumentation(doc="-t [ --seqtype ] arg (=ill)           seq. type [ill|ont|pacbio|custom]"))], outputs=[], container="quay.io/biocontainers/alfred:0.2.3--hf3ca161_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Alfred_Consensus_V0_1_0().translate("wdl")

