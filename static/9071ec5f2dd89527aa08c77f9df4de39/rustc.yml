!Command
command:
- rustc
positional:
- !Positional
  description: ''
  position: 0
  name: INPUT
  optional: false
named:
- !Flag
  description: Configure the compilation environment
  synonyms:
  - --cfg
  args: !SimpleFlagArg
    name: SPEC
  optional: true
- !Flag
  description: "[KIND=]PATH      Add a directory to the library search path. The\n\
    optional KIND can be one of dependency, crate, native,\nframework or all (the\
    \ default)."
  synonyms:
  - -L
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "[KIND=]NAME      Link the generated crate(s) to the specified native\n\
    library NAME. The optional KIND can be one of static,\ndylib, or framework. If\
    \ omitted, dylib is assumed."
  synonyms:
  - -l
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "[bin|lib|rlib|dylib|cdylib|staticlib]\nComma separated list of types\
    \ of crates for the\ncompiler to emit"
  synonyms:
  - --crate-type
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Specify the name of the crate being built
  synonyms:
  - --crate-name
  args: !SimpleFlagArg
    name: NAME
  optional: true
- !Flag
  description: "[asm|llvm-bc|llvm-ir|obj|link|dep-info]\nComma separated list of types\
    \ of output for the\ncompiler to emit"
  synonyms:
  - --emit
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "[crate-name|file-names|sysroot|cfg|target-list|target-cpus|target-features|relocation-models|code-models]\n\
    Comma separated list of compiler information to print\non stdout"
  synonyms:
  - --print
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Equivalent to -C debuginfo=2
  synonyms:
  - -g
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Equivalent to -C opt-level=2
  synonyms:
  - -O
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Write output to <filename>
  synonyms:
  - -o
  args: !SimpleFlagArg
    name: FILENAME
  optional: true
- !Flag
  description: Write output to compiler-chosen filename in <dir>
  synonyms:
  - --out-dir
  args: !SimpleFlagArg
    name: DIR
  optional: true
- !Flag
  description: Provide a detailed explanation of an error message
  synonyms:
  - --explain
  args: !SimpleFlagArg
    name: OPT
  optional: true
- !Flag
  description: Build a test harness
  synonyms:
  - --test
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Target triple for which the code is compiled
  synonyms:
  - --target
  args: !SimpleFlagArg
    name: TARGET
  optional: true
- !Flag
  description: Set lint warnings
  synonyms:
  - -W
  - --warn
  args: !SimpleFlagArg
    name: OPT
  optional: true
- !Flag
  description: Set lint allowed
  synonyms:
  - -A
  - --allow
  args: !SimpleFlagArg
    name: OPT
  optional: true
- !Flag
  description: Set lint denied
  synonyms:
  - -D
  - --deny
  args: !SimpleFlagArg
    name: OPT
  optional: true
- !Flag
  description: Set lint forbidden
  synonyms:
  - -F
  - --forbid
  args: !SimpleFlagArg
    name: OPT
  optional: true
- !Flag
  description: "Set the most restrictive lint level. More restrictive\nlints are capped\
    \ at this level"
  synonyms:
  - --cap-lints
  args: !SimpleFlagArg
    name: LEVEL
  optional: true
- !Flag
  description: "[=VALUE]\nSet a codegen option"
  synonyms:
  - -C
  - --codegen
  args: !SimpleFlagArg
    name: OPT
  optional: true
- !Flag
  description: Use verbose output
  synonyms:
  - -v
  - --verbose
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Print internal options for debugging rustc
  synonyms:
  - -Z
  args: !SimpleFlagArg
    name: help
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: Print the full set of options rustc accepts
  synonyms:
  - --help
  - -v
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: Print version info and exit
  synonyms:
  - -V
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "Usage: rustc [OPTIONS] INPUT\n\nOptions:\n    -h --help           Display\
  \ this message\n    --cfg SPEC          Configure the compilation environment\n\
  \    -L [KIND=]PATH      Add a directory to the library search path. The\n     \
  \                   optional KIND can be one of dependency, crate, native,\n   \
  \                     framework or all (the default).\n    -l [KIND=]NAME      Link\
  \ the generated crate(s) to the specified native\n                        library\
  \ NAME. The optional KIND can be one of static,\n                        dylib,\
  \ or framework. If omitted, dylib is assumed.\n    --crate-type [bin|lib|rlib|dylib|cdylib|staticlib]\n\
  \                        Comma separated list of types of crates for the\n     \
  \                   compiler to emit\n    --crate-name NAME   Specify the name of\
  \ the crate being built\n    --emit [asm|llvm-bc|llvm-ir|obj|link|dep-info]\n  \
  \                      Comma separated list of types of output for the\n       \
  \                 compiler to emit\n    --print [crate-name|file-names|sysroot|cfg|target-list|target-cpus|target-features|relocation-models|code-models]\n\
  \                        Comma separated list of compiler information to print\n\
  \                        on stdout\n    -g                  Equivalent to -C debuginfo=2\n\
  \    -O                  Equivalent to -C opt-level=2\n    -o FILENAME         Write\
  \ output to <filename>\n    --out-dir DIR       Write output to compiler-chosen\
  \ filename in <dir>\n    --explain OPT       Provide a detailed explanation of an\
  \ error message\n    --test              Build a test harness\n    --target TARGET\
  \     Target triple for which the code is compiled\n    -W --warn OPT       Set\
  \ lint warnings\n    -A --allow OPT      Set lint allowed\n    -D --deny OPT   \
  \    Set lint denied\n    -F --forbid OPT     Set lint forbidden\n    --cap-lints\
  \ LEVEL   Set the most restrictive lint level. More restrictive\n              \
  \          lints are capped at this level\n    -C --codegen OPT[=VALUE]\n      \
  \                  Set a codegen option\n    -V --version        Print version info\
  \ and exit\n    -v --verbose        Use verbose output\n\nAdditional help:\n   \
  \ -C help             Print codegen options\n    -W help             Print 'lint'\
  \ options and default settings\n    -Z help             Print internal options for\
  \ debugging rustc\n    --help -v           Print the full set of options rustc accepts\n\
  \n"
generated_using:
- --help
