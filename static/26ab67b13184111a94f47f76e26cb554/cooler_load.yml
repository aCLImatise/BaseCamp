!Command
command:
- cooler
- load
positional:
- !Positional
  optional: false
  position: 0
  name: compressed.
  description: 'COO: COO-rdinate sparse matrix format (a.k.a. ijv triple). 3 columns:'
named:
- !Flag
  optional: true
  synonyms:
  - -f
  - --format
  description: "[coo|bg2]          'coo' refers to a tab-delimited sparse\ntriplet\
    \ file (bin1, bin2, count). 'bg2'\nrefers to a 2D bedGraph-like file (chrom1,\n\
    start1, end1, chrom2, start2, end2, count).\n[required]"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --metadata
  description: Path to JSON file containing user metadata.
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --assembly
  description: Name of genome assembly (e.g. hg19, mm10)
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --field
  description: "Add supplemental value fields or override\ndefault field numbers for\
    \ the specified\nformat. Specify quantitative input fields to\naggregate into\
    \ value columns using the\nsyntax ``--field <field-name>=<field-\nnumber>``. Optionally,\
    \ append ``:`` followed\nby ``dtype=<dtype>`` to specify the data\ntype (e.g.\
    \ float). Field numbers are\n1-based. Repeat the ``--field`` option for\neach\
    \ additional field."
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - -c
  - --chunksize
  description: "Size (in number of lines/records) of data\nchunks to read and process\
    \ from the input\nfile at a time. These chunks will be saved\nas temporary partial\
    \ Coolers and merged at\nthe end. Also specifies the size of the\nbuffer during\
    \ the merge step."
  args: !SimpleFlagArg
    name: INTEGER
- !Flag
  optional: true
  synonyms:
  - --count-as-float
  description: "Store the 'count' column as floating point\nvalues instead of as integers.\
    \ Can also be\nspecified using the `--field` option."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --one-based
  description: "Pass this flag if the bin IDs listed in a\nCOO file are one-based\
    \ instead of zero-\nbased."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --comment-char
  description: Comment character that indicates lines to
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - -N
  - --no-symmetric-upper
  description: "Create a complete square matrix without\nimplicit symmetry. This allows\
    \ for distinct\nupper- and lower-triangle values"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --input-copy-status
  description: "[unique|duplex]\nCopy status of input data when using\nsymmetric-upper\
    \ storage. | `unique`:\nIncoming data comes from a unique half of a\nsymmetric\
    \ matrix, regardless of how element\ncoordinates are ordered. Execution will be\n\
    aborted if duplicates are detected.\n`duplex`: Incoming data contains upper- and\n\
    lower-triangle duplicates. All lower-\ntriangle input elements will be discarded!\
    \ |\nIf you wish to treat lower- and upper-\ntriangle input data as distinct,\
    \ use the\n``--no-symmetric-upper`` option instead.\n[default: unique]"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --storage-options
  description: "Options to modify the data filter pipeline.\nProvide as a comma-separated\
    \ list of key-\nvalue pairs of the form 'k1=v1,k2=v2,...'.\nSee http://docs.h5py.org/en/stable/high/data\n\
    set.html#filter-pipeline for more details."
  args: !SimpleFlagArg
    name: TEXT
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: Show this message and exit.
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "Usage: cooler load [OPTIONS] BINS_PATH PIXELS_PATH COOL_PATH\n\n  Create\
  \ a cooler from a pre-binned matrix.\n\n  BINS_PATH : One of the following\n\n \
  \     <TEXT:INTEGER> : 1. Path to a chromsizes file, 2. Bin size in bp\n\n     \
  \ <TEXT> : Path to BED file defining the genomic bin segmentation.\n\n  PIXELS_PATH\
  \ : Text file containing nonzero pixel values. May be gzipped.\n  Pass '-' to use\
  \ stdin.\n\n  COOL_PATH : Output COOL file path or URI.\n\n  **Notes**\n\n  Two\
  \ input format options (tab-delimited). Input pixel file may be\n  compressed.\n\
  \n  COO: COO-rdinate sparse matrix format (a.k.a. ijv triple). 3 columns:\n  \"\
  bin1_id, bin2_id, count\",\n\n  BG2: 2D version of the bedGraph format. 7 columns:\
  \ \"chrom1, start1, end1,\n  chrom2, start2, end2, count\"\n\n  **Examples**\n\n\
  \  cooler load -f bg2 <chrom.sizes>:<binsize> in.bg2.gz out.cool\n\nOptions:\n \
  \ -f, --format [coo|bg2]          'coo' refers to a tab-delimited sparse\n     \
  \                             triplet file (bin1, bin2, count). 'bg2'\n        \
  \                          refers to a 2D bedGraph-like file (chrom1,\n        \
  \                          start1, end1, chrom2, start2, end2, count).\n       \
  \                           [required]\n\n  --metadata TEXT                 Path\
  \ to JSON file containing user metadata.\n  --assembly TEXT                 Name\
  \ of genome assembly (e.g. hg19, mm10)\n  --field TEXT                    Add supplemental\
  \ value fields or override\n                                  default field numbers\
  \ for the specified\n                                  format. Specify quantitative\
  \ input fields to\n                                  aggregate into value columns\
  \ using the\n                                  syntax ``--field <field-name>=<field-\n\
  \                                  number>``. Optionally, append ``:`` followed\n\
  \                                  by ``dtype=<dtype>`` to specify the data\n  \
  \                                type (e.g. float). Field numbers are\n        \
  \                          1-based. Repeat the ``--field`` option for\n        \
  \                          each additional field.\n\n  -c, --chunksize INTEGER \
  \        Size (in number of lines/records) of data\n                           \
  \       chunks to read and process from the input\n                            \
  \      file at a time. These chunks will be saved\n                            \
  \      as temporary partial Coolers and merged at\n                            \
  \      the end. Also specifies the size of the\n                               \
  \   buffer during the merge step.\n\n  --count-as-float                Store the\
  \ 'count' column as floating point\n                                  values instead\
  \ of as integers. Can also be\n                                  specified using\
  \ the `--field` option.\n\n  --one-based                     Pass this flag if the\
  \ bin IDs listed in a\n                                  COO file are one-based\
  \ instead of zero-\n                                  based.\n\n  --comment-char\
  \ TEXT             Comment character that indicates lines to\n                 \
  \                 ignore.  [default: #]\n\n  -N, --no-symmetric-upper        Create\
  \ a complete square matrix without\n                                  implicit symmetry.\
  \ This allows for distinct\n                                  upper- and lower-triangle\
  \ values\n\n  --input-copy-status [unique|duplex]\n                            \
  \      Copy status of input data when using\n                                  symmetric-upper\
  \ storage. | `unique`:\n                                  Incoming data comes from\
  \ a unique half of a\n                                  symmetric matrix, regardless\
  \ of how element\n                                  coordinates are ordered. Execution\
  \ will be\n                                  aborted if duplicates are detected.\n\
  \                                  `duplex`: Incoming data contains upper- and\n\
  \                                  lower-triangle duplicates. All lower-\n     \
  \                             triangle input elements will be discarded! |\n   \
  \                               If you wish to treat lower- and upper-\n       \
  \                           triangle input data as distinct, use the\n         \
  \                         ``--no-symmetric-upper`` option instead.\n           \
  \                       [default: unique]\n\n  --storage-options TEXT          Options\
  \ to modify the data filter pipeline.\n                                  Provide\
  \ as a comma-separated list of key-\n                                  value pairs\
  \ of the form 'k1=v1,k2=v2,...'.\n                                  See http://docs.h5py.org/en/stable/high/data\n\
  \                                  set.html#filter-pipeline for more details.\n\n\
  \  -h, --help                      Show this message and exit.\n"
generated_using:
- --help
docker_image:
