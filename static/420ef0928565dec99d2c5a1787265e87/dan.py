from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File

Dan_V0_1_0 = CommandToolBuilder(tool="dan", base_command=["dan"], inputs=[ToolInput(tag="in_window_size", input_type=Boolean(optional=True), prefix="-windowsize", doc=InputDocumentation(doc="integer    [20] The values of melting point and other\nthermodynamic properties of the sequence are\ndetermined by taking a short length of\nsequence known as a window and determining\nthe properties of the sequence in that\nwindow. The window is incrementally moved\nalong the sequence with the properties being\ncalculated at each new position. (Integer\nfrom 1 to 100)")), ToolInput(tag="in_shift_increment", input_type=Boolean(optional=True), prefix="-shiftincrement", doc=InputDocumentation(doc="integer    [1] This is the amount by which the window\nis moved at each increment in order to find\nthe melting point and other properties along\nthe sequence. (Integer 1 or more)")), ToolInput(tag="in_dna_conc", input_type=Boolean(optional=True), prefix="-dnaconc", doc=InputDocumentation(doc="float      [50.] Enter DNA concentration (nM) (Number\nfrom 1.000 to 100000.000)")), ToolInput(tag="in_salt_conc", input_type=Boolean(optional=True), prefix="-saltconc", doc=InputDocumentation(doc="float      [50.] Enter salt concentration (mM) (Number\nfrom 1.000 to 1000.000)")), ToolInput(tag="in_product", input_type=Boolean(optional=True), prefix="-product", doc=InputDocumentation(doc="toggle     This prompts for percent formamide, percent\nof mismatches allowed and product length.")), ToolInput(tag="in_thermo", input_type=File(optional=True), prefix="-thermo", doc=InputDocumentation(doc="toggle     Output the DeltaG, DeltaH and DeltaS values\nof the sequence windows to the output data\nfile.")), ToolInput(tag="in_rna", input_type=Boolean(optional=True), prefix="-rna", doc=InputDocumentation(doc="boolean    This specifies that the sequence is an RNA\nsequence and not a DNA sequence.")), ToolInput(tag="in_plot", input_type=File(optional=True), prefix="-plot", doc=InputDocumentation(doc="toggle     If this is not specified then the file of\noutput data is produced, else a plot of the\nmelting point along the sequence is\nproduced."))], outputs=[ToolOutput(tag="out_thermo", output_type=File(optional=True), selector=InputSelector(input_to_select="in_thermo", type_hint=File()), doc=OutputDocumentation(doc="toggle     Output the DeltaG, DeltaH and DeltaS values\nof the sequence windows to the output data\nfile.")), ToolOutput(tag="out_plot", output_type=File(optional=True), selector=InputSelector(input_to_select="in_plot", type_hint=File()), doc=OutputDocumentation(doc="toggle     If this is not specified then the file of\noutput data is produced, else a plot of the\nmelting point along the sequence is\nproduced."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Dan_V0_1_0().translate("wdl", allow_empty_container=True)

