from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Directory, String

Trawler_V0_1_0 = CommandToolBuilder(tool="trawler", base_command=["trawler"], inputs=[ToolInput(tag="in_sample", input_type=Boolean(optional=True), prefix="-sample", doc=InputDocumentation(doc="(FASTA format) better to be repeat-masked.")), ToolInput(tag="in_background", input_type=Boolean(optional=True), prefix="-background", doc=InputDocumentation(doc="(FASTA format)")), ToolInput(tag="in_occurrence", input_type=Boolean(optional=True), prefix="-occurrence", doc=InputDocumentation(doc="(optional) minimum occurrence in the sample sequences. [DEFAULT = 10]")), ToolInput(tag="in_m_length", input_type=Boolean(optional=True), prefix="-mlength", doc=InputDocumentation(doc="(optional) minimum motif length. [DEFAULT = 6]")), ToolInput(tag="in_wildcard", input_type=Boolean(optional=True), prefix="-wildcard", doc=InputDocumentation(doc="(optional) number of wild card in motifs. [DEFAULT = 2]")), ToolInput(tag="in_strand", input_type=Boolean(optional=True), prefix="-strand", doc=InputDocumentation(doc="(optional) single or double [DEFAULT = double]")), ToolInput(tag="in_overlap", input_type=Boolean(optional=True), prefix="-overlap", doc=InputDocumentation(doc="(optional) in percentage. [DEFAULT = 70]")), ToolInput(tag="in_motif_number", input_type=Boolean(optional=True), prefix="-motif_number", doc=InputDocumentation(doc="(optional) total number of motifs to be clustered. [DEFAULT = 200]")), ToolInput(tag="in_nb_of_cluster", input_type=Boolean(optional=True), prefix="-nb_of_cluster", doc=InputDocumentation(doc="(optional) fixed number of cluster. if this option is set to an integer (1 and above), the k-mean clustering algorithm with fixed k will be used instead of the strongly connected component (SCC). [DEFAULT = NULL]")), ToolInput(tag="in_directory", input_type=Directory(optional=True), prefix="-directory", doc=InputDocumentation(doc="(optional) output directory. [DEFAULT = 'TRAWLER_HOME/myResults']")), ToolInput(tag="in_dir_id", input_type=Boolean(optional=True), prefix="-dir_id", doc=InputDocumentation(doc="(optional) gives an id to the results directory. [DEFAULT = NULL]")), ToolInput(tag="in_xtra_len", input_type=Boolean(optional=True), prefix="-xtralen", doc=InputDocumentation(doc="(optional) add bases around the motifs for the logo. [DEFAULT = 0]")), ToolInput(tag="in_alignments", input_type=Boolean(optional=True), prefix="-alignments", doc=InputDocumentation(doc="(optional) file containing the list of files containing the aligned sequences (see README file for more info) [DEFAULT = NULL]")), ToolInput(tag="in_ref_species", input_type=Boolean(optional=True), prefix="-ref_species", doc=InputDocumentation(doc="(optional) name of the reference species [DEFAULT = NULL]")), ToolInput(tag="in_clustering", input_type=Boolean(optional=True), prefix="-clustering", doc=InputDocumentation(doc="(optional) if 1 the program clusters the instances, if 0 no clustering. [DEFAULT = 1]")), ToolInput(tag="in_web", input_type=Boolean(optional=True), prefix="-web", doc=InputDocumentation(doc="(optional) if 1 the output will be a web page with all the information [DEFAULT = 1]")), ToolInput(tag="in_if", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_optional", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_refer", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_to", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_using", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_var_21", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_fast_a", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_readme_dot_txt", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_for", input_type=String(), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_formatted", input_type=String(), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_files", input_type=String(), position=4, doc=InputDocumentation(doc="")), ToolInput(tag="in_input", input_type=String(), position=4, doc=InputDocumentation(doc="")), ToolInput(tag="in_more", input_type=String(), position=4, doc=InputDocumentation(doc="")), ToolInput(tag="in_information", input_type=String(), position=5, doc=InputDocumentation(doc="")), ToolInput(tag="in_on", input_type=String(), position=6, doc=InputDocumentation(doc="")), ToolInput(tag="in_var_31", input_type=String(), position=7, doc=InputDocumentation(doc="")), ToolInput(tag="in_format", input_type=String(), position=8, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_directory", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_directory", type_hint=File()), doc=OutputDocumentation(doc="(optional) output directory. [DEFAULT = 'TRAWLER_HOME/myResults']"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Trawler_V0_1_0().translate("wdl", allow_empty_container=True)

