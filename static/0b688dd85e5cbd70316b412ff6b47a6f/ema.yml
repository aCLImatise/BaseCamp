!Command
command:
- ema
positional:
- !Positional
  optional: false
  position: 0
  name: count|preproc|align|help
  description: ''
named:
- !Flag
  optional: true
  synonyms:
  - -w
  description: ': specify barcode whitelist [required]'
  args: !SimpleFlagArg
    name: whitelist path
- !Flag
  optional: true
  synonyms:
  - -o
  description: ': specify output prefix [required]'
  args: !SimpleFlagArg
    name: output prefix
- !Flag
  optional: true
  synonyms:
  - -n
  description: ': number of barcode buckets to make [500]'
  args: !SimpleFlagArg
    name: num buckets
- !Flag
  optional: true
  synonyms:
  - -b
  description: ': output BX:Z-formatted FASTQs [off]'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -t
  description: ': set number of threads [1]'
  args: !SimpleFlagArg
    name: threads
- !Flag
  optional: true
  synonyms:
  - '-1'
  description: ': first (preprocessed and sorted) FASTQ file [none]'
  args: !SimpleFlagArg
    name: FASTQ1 path
- !Flag
  optional: true
  synonyms:
  - '-2'
  description: ': second (preprocessed and sorted) FASTQ file [none]'
  args: !SimpleFlagArg
    name: FASTQ2 path
- !Flag
  optional: true
  synonyms:
  - -s
  description: ': specify special FASTQ path [none]'
  args: !SimpleFlagArg
    name: EMA-FASTQ path
- !Flag
  optional: true
  synonyms:
  - -x
  description: ': multi-input mode; takes input files after flags and spawns a thread
    for each [off]'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -r
  description: ': indexed reference [required]'
  args: !SimpleFlagArg
    name: FASTA path
- !Flag
  optional: true
  synonyms:
  - -R
  description: ": full read group string (e.g. '@RG\\tID:foo\\tSM:bar') [none]"
  args: !SimpleFlagArg
    name: RG string
- !Flag
  optional: true
  synonyms:
  - -d
  description: ': apply fragment read density optimization [off]'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -p
  description: ": sequencing platform (one of '10x', 'tru', 'cpt') [10x]"
  args: !SimpleFlagArg
    name: platform
- !Flag
  optional: true
  synonyms:
  - -i
  description: ": index to follow 'BX' tag in SAM output [1]  -t <threads>: set number\
    \ of threads [1]"
  args: !SimpleFlagArg
    name: index
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  description: ': apply Hamming-2 correction [off]'
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "error: unrecognized mode\nusage: ema <count|preproc|align|help> [options]\n\
  \ncount: perform preliminary barcode count (takes interleaved FASTQ via stdin)\n\
  \  -w <whitelist path>: specify barcode whitelist [required]\n  -o <output prefix>:\
  \ specify output prefix [required]\n\npreproc: preprocess barcoded FASTQ files (takes\
  \ interleaved FASTQ via stdin)\n  -w <whitelist path>: specify whitelist [required]\n\
  \  -n <num buckets>: number of barcode buckets to make [500]\n  -h: apply Hamming-2\
  \ correction [off]\n  -o: <output directory> specify output directory [required]\n\
  \  -b: output BX:Z-formatted FASTQs [off]\n  -t <threads>: set number of threads\
  \ [1]\n  all other arguments: list of all output prefixes generated by count stage\n\
  \nalign: choose best alignments based on barcodes\n  -1 <FASTQ1 path>: first (preprocessed\
  \ and sorted) FASTQ file [none]\n  -2 <FASTQ2 path>: second (preprocessed and sorted)\
  \ FASTQ file [none]\n  -s <EMA-FASTQ path>: specify special FASTQ path [none]\n\
  \  -x: multi-input mode; takes input files after flags and spawns a thread for each\
  \ [off]\n  -r <FASTA path>: indexed reference [required]\n  -o <SAM file>: output\
  \ SAM file [stdout]\n  -R <RG string>: full read group string (e.g. '@RG\\tID:foo\\\
  tSM:bar') [none]\n  -d: apply fragment read density optimization [off]\n  -p <platform>:\
  \ sequencing platform (one of '10x', 'tru', 'cpt') [10x]\n  -i <index>: index to\
  \ follow 'BX' tag in SAM output [1]  -t <threads>: set number of threads [1]\n \
  \ all other arguments (only for -x): list of all preprocessed inputs\n\nhelp: print\
  \ this help message\n"
generated_using:
- --help
docker_image:
