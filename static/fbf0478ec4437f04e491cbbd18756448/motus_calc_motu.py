from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Boolean, Float, Int

Motus_Calc_Motu_V0_1_0 = CommandToolBuilder(tool="motus_calc_motu", base_command=["motus", "calc_motu"], inputs=[ToolInput(tag="in_sample_name", input_type=String(optional=True), prefix="-n", doc=InputDocumentation(doc="sample name")), ToolInput(tag="in_provide_abundance_table", input_type=File(optional=True), prefix="-i", doc=InputDocumentation(doc="provide the mgc abundance table")), ToolInput(tag="in_output_file_name", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="output file name [stdout]")), ToolInput(tag="in_profile_only_species", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc="profile only reference species (ref_mOTUs)")), ToolInput(tag="in_print_result_biom", input_type=Boolean(optional=True), prefix="-B", doc=InputDocumentation(doc="print result in BIOM format")), ToolInput(tag="in_print_result_cami", input_type=Float(optional=True), prefix="-C", doc=InputDocumentation(doc="print result in CAMI format (BioBoxes format 0.9.1)\nValues: [precision, recall, parenthesis]")), ToolInput(tag="in_print_result_counts", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="print result as counts instead of relative abundances")), ToolInput(tag="in_print_ncbi_i", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="print NCBI id")), ToolInput(tag="in_print_full_name", input_type=Boolean(optional=True), prefix="-u", doc=InputDocumentation(doc="print the full name of the species")), ToolInput(tag="in_print_rank_taxonomy", input_type=Boolean(optional=True), prefix="-q", doc=InputDocumentation(doc="print the full rank taxonomy")), ToolInput(tag="in_taxonomic_level_values", input_type=String(optional=True), prefix="-k", doc=InputDocumentation(doc="taxonomic level [mOTU]\nValues: [kingdom, phylum, class, order, family, genus, mOTU]")), ToolInput(tag="in_number_marker_genes", input_type=Int(optional=True), prefix="-g", doc=InputDocumentation(doc="number of marker genes cutoff: 1=higher recall, 10=higher precision [3]")), ToolInput(tag="in_verbose_level_error", input_type=Int(optional=True), prefix="-v", doc=InputDocumentation(doc="verbose level: 1=error, 2=warning, 3=message, 4+=debugging [3]"))], outputs=[ToolOutput(tag="out_output_file_name", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_file_name", type_hint=File()), doc=OutputDocumentation(doc="output file name [stdout]"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Motus_Calc_Motu_V0_1_0().translate("wdl", allow_empty_container=True)

