from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Float, Int, String, Boolean

Suppa_Py_Clusterevents_V0_1_0 = CommandToolBuilder(tool="suppa.py_clusterEvents", base_command=["suppa.py", "clusterEvents"], inputs=[ToolInput(tag="in_dps_i", input_type=File(optional=True), prefix="--dpsi", doc=InputDocumentation(doc="Input file of delta-PSI values (.dpsi format)")), ToolInput(tag="in_psi_vec", input_type=File(optional=True), prefix="--psivec", doc=InputDocumentation(doc="Input file with PSI values (.psivec format)")), ToolInput(tag="in_sig_threshold", input_type=Float(optional=True), prefix="--sig-threshold", doc=InputDocumentation(doc="P-value cut-off for significant events. (Default:\n0.05).")), ToolInput(tag="in_dps_i_threshold", input_type=Float(optional=True), prefix="--dpsi-threshold", doc=InputDocumentation(doc="Lower-bound for the absolute delta PSI value to\ncluster. (Default: 0.05).")), ToolInput(tag="in_eps", input_type=Float(optional=True), prefix="--eps", doc=InputDocumentation(doc="Maximum (Euclidean) distance (between 0 and 1) to\nconsider two events as members of the same cluster.\n(Default: 0.05).")), ToolInput(tag="in_separation", input_type=Int(optional=True), prefix="--separation", doc=InputDocumentation(doc="Minimum separation for considering two points in\ndifferent clusters. (Default: 0).")), ToolInput(tag="in_min_pts", input_type=Int(optional=True), prefix="--min-pts", doc=InputDocumentation(doc="Minimum number of events required per cluster.\n(Default: 20).")), ToolInput(tag="in_metric", input_type=String(optional=True), prefix="--metric", doc=InputDocumentation(doc="Distance function to be used.Options: euclidean\n(Default), manhattan, cosine.")), ToolInput(tag="in_clustering", input_type=String(optional=True), prefix="--clustering", doc=InputDocumentation(doc="Clustering method to use.Options: OPTICS , DBSCAN\n(Default).")), ToolInput(tag="in_ranges_specifying_numbers", input_type=Boolean(optional=True), prefix="-g", doc=InputDocumentation(doc="[INDEXES [INDEXES ...]], --groups [INDEXES [INDEXES ...]]\nRanges of column numbers specifying the replicates per\ncondition. Column numbers have to be continuous, with\nno overlapping or missing columns between them. Ex:\n1-3,4-6")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="Name of the output file.\n"))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="Name of the output file.\n"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Suppa_Py_Clusterevents_V0_1_0().translate("wdl", allow_empty_container=True)

