!Command
command:
- count_qmers
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -f
  description: fastq file to count
  args: !SimpleFlagArg
    name: fastq
- !Flag
  optional: true
  synonyms:
  - -k
  description: Length of kmer
  args: !SimpleFlagArg
    name: len
- !Flag
  optional: true
  synonyms:
  - -l
  description: "Gigabyte limit on RAM. If limited, the output will\ncontain redundancies"
  args: !SimpleFlagArg
    name: limit
- !Flag
  optional: true
  synonyms:
  - -t
  description: 'Define hash table size explicitly. [Default: chosen via k]'
  args: !SimpleFlagArg
    name: size
- !Flag
  optional: true
  synonyms:
  - -m
  description: 'Maximum k-mer count. [Default: 500]'
  args: !SimpleFlagArg
    name: max
- !Flag
  optional: true
  synonyms:
  - -q
  description: "Quality value ascii scale, generally 64 or 33.  If\nnot specified,\
    \ it will guess.\n"
  args: !SimpleFlagArg
    name: num
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "count_qmers: invalid option -- '-'\nUnrecognized option --\n\n.USAGE.\n\
  \  count_qmers [-f fastq] [-k len] [options]\n\n.DESCRIPTION.\n  Count kmers in\
  \ a fastq file. Output is to stdout in simple nmer  count format: mer count\n\n\
  .OPTIONS.\n  -f <fastq> fastq file to count\n  -k <len>   Length of kmer \n  -l\
  \ <limit> Gigabyte limit on RAM. If limited, the output will\n             contain\
  \ redundancies\n  -t <size>  Define hash table size explicitly. [Default: chosen\
  \ via k]\n  -m <max>   Maximum k-mer count. [Default: 500]\n  -q <num>   Quality\
  \ value ascii scale, generally 64 or 33.  If\n             not specified, it will\
  \ guess.\n\n"
generated_using:
- --help
docker_image:
