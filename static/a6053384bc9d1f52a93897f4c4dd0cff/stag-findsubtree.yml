!Command
positional:
- !Positional
  description: the name of the node/element
  position: 0
  name: NODE
  optional: false
named:
- !Flag
  description: '|parser FORMAT FORMAT is one of xml, sxpr or itext, or the name of
    a perl module xml assumed as default'
  synonyms:
  - -p
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '|writer FORMAT FORMAT is one of xml, sxpr or itext, or the name of
    a perl module'
  synonyms:
  - -w
  args: !EmptyFlagArg {}
  optional: true
command:
- stag-findsubtree.pl
parent:
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "\e[1mNAME\e[0m\n    stag-findsubtree - finds nodes in a stag file\n\n\e\
  [1mSYNOPSIS\e[0m\n      stag-findsubtree 'person/name' file.xml\n\n\e[1mDESCRIPTION\e\
  [0m\n    parses in an input file and writes out subnodes\n\n\e[1mUSAGE\e[0m\n  \
  \    stag-findsubtree [-p PARSER] [-w WRITER] NODE FILE\n\n\e[1mARGUMENTS\e[0m\n\
  \    -p|parser FORMAT\n        FORMAT is one of xml, sxpr or itext, or the name\
  \ of a perl module\n\n        xml assumed as default\n\n    -w|writer FORMAT\n \
  \       FORMAT is one of xml, sxpr or itext, or the name of a perl module\n\n  \
  \  NODE\n        the name of the node/element\n\n\e[1mLIMITATIONS\e[0m\n    not\
  \ event based\n\n\e[1mSEE ALSO\e[0m\n    Data::Stag\n\n"
generated_using:
- --help
