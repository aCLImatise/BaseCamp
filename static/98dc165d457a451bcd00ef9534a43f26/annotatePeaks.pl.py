from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean, String, Int, Directory

Annotatepeaks_Pl_V0_1_0 = CommandToolBuilder(tool="annotatePeaks.pl", base_command=["annotatePeaks.pl"], inputs=[ToolInput(tag="in_gtf", input_type=File(optional=True), prefix="-gtf", doc=InputDocumentation(doc="(Use -gff and -gff3 if appropriate, but GTF is better)")), ToolInput(tag="in_gid", input_type=Boolean(optional=True), prefix="-gid", doc=InputDocumentation(doc="(by default the GTF file is processed by transcript_id, use this option for gene_id)")), ToolInput(tag="in_ann", input_type=File(optional=True), prefix="-ann", doc=InputDocumentation(doc="(created by assignGenomeAnnotation, see website)")), ToolInput(tag="in_list", input_type=String(optional=True), prefix="-list", doc=InputDocumentation(doc="(subset of genes to perform analysis [unigene, gene id, accession,\nprobe, etc.], default = all promoters)")), ToolInput(tag="in_ctss", input_type=File(optional=True), prefix="-cTSS", doc=InputDocumentation(doc="(should be centered on TSS)")), ToolInput(tag="in_mask", input_type=Boolean(optional=True), prefix="-mask", doc=InputDocumentation(doc="(Masked repeats, can also add 'r' to end of genome name)")), ToolInput(tag="in_list_motifs_find", input_type=Int(optional=True), prefix="-m", doc=InputDocumentation(doc="[motif file 2] ... (list of motifs to find in peaks)")), ToolInput(tag="in_m_score", input_type=Boolean(optional=True), prefix="-mscore", doc=InputDocumentation(doc="(reports the highest log-odds score within the peak)")), ToolInput(tag="in_n_motifs", input_type=Boolean(optional=True), prefix="-nmotifs", doc=InputDocumentation(doc="(reports the number of motifs per peak)")), ToolInput(tag="in_mdist", input_type=Boolean(optional=True), prefix="-mdist", doc=InputDocumentation(doc="(reports distance to closest motif)")), ToolInput(tag="in_m_fast_a", input_type=File(optional=True), prefix="-mfasta", doc=InputDocumentation(doc="(reports sites in a fasta file - for building new motifs)")), ToolInput(tag="in_fm", input_type=Int(optional=True), prefix="-fm", doc=InputDocumentation(doc="[motif file 2] (list of motifs to filter from above)")), ToolInput(tag="in_rm_revo_pp", input_type=Boolean(optional=True), prefix="-rmrevopp", doc=InputDocumentation(doc="<#> (only count sites found within <#> on both strands once, i.e. palindromic)")), ToolInput(tag="in_matrix", input_type=Int(optional=True), prefix="-matrix", doc=InputDocumentation(doc="(outputs a motif co-occurrence files:\nprefix.count.matrix.txt - number of peaks with motif co-occurrence\nprefix.ratio.matrix.txt - ratio of observed vs. expected  co-occurrence\nprefix.logPvalue.matrix.txt - co-occurrence enrichment\nprefix.stats.txt - table of pair-wise motif co-occurrence statistics\nadditional options:\n-matrixMinDist <#> (minimum distance between motif pairs - to avoid overlap, default: 4)\n-matrixMaxDist <#> (maximum distance between motif pairs)")), ToolInput(tag="in_m_bed", input_type=File(optional=True), prefix="-mbed", doc=InputDocumentation(doc="(Output motif positions to a BED file to load at UCSC (or -mpeak))")), ToolInput(tag="in_m_logic", input_type=File(optional=True), prefix="-mlogic", doc=InputDocumentation(doc="(will output stats on common motif orientations)")), ToolInput(tag="in_list_experiment_directories", input_type=Directory(optional=True), prefix="-d", doc=InputDocumentation(doc="[tag directory 2] ... (list of experiment directories to show\ntag counts for) NOTE: -dfile <file> where file is a list of directories in first column")), ToolInput(tag="in_bed_graph", input_type=Int(optional=True), prefix="-bedGraph", doc=InputDocumentation(doc="[bedGraph file 2] ... (read coverage counts from bedGraph files)")), ToolInput(tag="in_wig", input_type=File(optional=True), prefix="-wig", doc=InputDocumentation(doc="[wiggle file 2] ... (read coverage counts from wiggle files)")), ToolInput(tag="in_find_nearest_peaks", input_type=File(optional=True), prefix="-p", doc=InputDocumentation(doc="[peak file 2] ... (to find nearest peaks)")), ToolInput(tag="in_p_dist", input_type=Int(optional=True), prefix="-pdist", doc=InputDocumentation(doc="report only distance (-pdist2 gives directional distance)")), ToolInput(tag="in_pcount", input_type=Int(optional=True), prefix="-pcount", doc=InputDocumentation(doc="report number of peaks within region")), ToolInput(tag="in_vcf", input_type=File(optional=True), prefix="-vcf", doc=InputDocumentation(doc="(annotate peaks with genetic variation infomation, one col per individual)")), ToolInput(tag="in_edit_distance", input_type=Boolean(optional=True), prefix="-editDistance", doc=InputDocumentation(doc="(Computes the # bp changes relative to reference)")), ToolInput(tag="in_individuals", input_type=Int(optional=True), prefix="-individuals", doc=InputDocumentation(doc="[name2] ... (restrict analysis to these individuals)")), ToolInput(tag="in_gene", input_type=File(optional=True), prefix="-gene", doc=InputDocumentation(doc="... (Adds additional data to result based on the closest gene.\nThis is useful for adding gene expression data.  The file must have a header,\nand the first column must be a GeneID, Accession number, etc.  If the peak\ncannot be mapped to data in the file then the entry will be left empty.")), ToolInput(tag="in_go", input_type=Directory(optional=True), prefix="-go", doc=InputDocumentation(doc="(perform GO analysis using genes near peaks)")), ToolInput(tag="in_genome_ontology", input_type=Directory(optional=True), prefix="-genomeOntology", doc=InputDocumentation(doc="(perform genomeOntology analysis on peaks)")), ToolInput(tag="in_g_size", input_type=Boolean(optional=True), prefix="-gsize", doc=InputDocumentation(doc="<#> (Genome size for genomeOntology analysis, default: 2e9)")), ToolInput(tag="in_nuc", input_type=Boolean(optional=True), prefix="-nuc", doc=InputDocumentation(doc="(calculated mononucleotide frequencies at each position,\nWill report by default if extracting sequence for other purposes like motifs)")), ToolInput(tag="in_di", input_type=Boolean(optional=True), prefix="-di", doc=InputDocumentation(doc="(calculated dinucleotide frequencies at each position)")), ToolInput(tag="in_hist_norm", input_type=Boolean(optional=True), prefix="-histNorm", doc=InputDocumentation(doc="<#> (normalize the total tag count for each region to 1, where <#> is the\nminimum tag total per region - use to avoid tag spikes from low coverage")), ToolInput(tag="in_g_hist", input_type=Boolean(optional=True), prefix="-ghist", doc=InputDocumentation(doc="(outputs profiles for each gene, for peak shape clustering)")), ToolInput(tag="in_rm", input_type=Boolean(optional=True), prefix="-rm", doc=InputDocumentation(doc="<#> (remove occurrences of same motif that occur within # bp)")), ToolInput(tag="in_center", input_type=File(optional=True), prefix="-center", doc=InputDocumentation(doc="(This will re-center peaks on the specified motif, or remove peak\nif there is no motif in the peak.  ONLY recentering will be performed, and all other\noptions will be ignored.  This will output a new peak file that can then be reanalyzed\nto reveal fine-grain structure in peaks (It is advised to use -size < 200) with this\nto keep peaks from moving too far (-mirror flips the position)")), ToolInput(tag="in_multi", input_type=Boolean(optional=True), prefix="-multi", doc=InputDocumentation(doc="(returns genomic positions of all sites instead of just the closest to center)")), ToolInput(tag="in_cmp_genome", input_type=Int(optional=True), prefix="-cmpGenome", doc=InputDocumentation(doc="[genome2] (Genomes to compare for sequence/motifs)")), ToolInput(tag="in_cmp_lift_over", input_type=Int(optional=True), prefix="-cmpLiftover", doc=InputDocumentation(doc="[genome2] (Genomes to compare for sequence/motifs)")), ToolInput(tag="in_fp_km", input_type=Boolean(optional=True), prefix="-fpkm", doc=InputDocumentation(doc="(normalize read counts to million reads or fragments per kilobase mapped)")), ToolInput(tag="in_raw", input_type=Boolean(optional=True), prefix="-raw", doc=InputDocumentation(doc="(do not adjust the tag counts based on total tags sequenced, -noadj works too)")), ToolInput(tag="in_norm", input_type=Boolean(optional=True), prefix="-norm", doc=InputDocumentation(doc="<#> (normalize tags to this tag count, default=1e7, 0=average tag count in all directories)")), ToolInput(tag="in_norm_length", input_type=Boolean(optional=True), prefix="-normLength", doc=InputDocumentation(doc="<#> (Fragment length to normlize to for experiments with different lens, def: 100)")), ToolInput(tag="in_log", input_type=Boolean(optional=True), prefix="-log", doc=InputDocumentation(doc="(output tag counts as log2(x+1+rand) values - for scatter plots)")), ToolInput(tag="in_sqrt", input_type=Boolean(optional=True), prefix="-sqrt", doc=InputDocumentation(doc="(output tag counts as sqrt(x+rand) values - for scatter plots)")), ToolInput(tag="in_ratio", input_type=Boolean(optional=True), prefix="-ratio", doc=InputDocumentation(doc="(process tag values as ratios - i.e. chip-seq, or mCpG/CpG)")), ToolInput(tag="in_r_log", input_type=Boolean(optional=True), prefix="-rlog", doc=InputDocumentation(doc="(quantile/variance normalization on reported genes using DESeq2 rlog funcition, needs R)")), ToolInput(tag="in_vst", input_type=Boolean(optional=True), prefix="-vst", doc=InputDocumentation(doc="(quantile/variance normalization on reported genes using DESeq2 vst function, needs R)")), ToolInput(tag="in_len", input_type=Boolean(optional=True), prefix="-len", doc=InputDocumentation(doc="<#> / -fragLength <#> (Fragment length, default=auto, might want to set to 1 for 5'RNA)")), ToolInput(tag="in_strand", input_type=Boolean(optional=True), prefix="-strand", doc=InputDocumentation(doc="<+|-|both> (Count tags on specific strands relative to peak, default: both)")), ToolInput(tag="in_pc", input_type=Boolean(optional=True), prefix="-pc", doc=InputDocumentation(doc="<#> (maximum number of tags to count per bp, default=0 [no maximum], -tbp <#> works too)")), ToolInput(tag="in_cpg", input_type=Boolean(optional=True), prefix="-CpG", doc=InputDocumentation(doc="(Calculate CpG/GC content)")), ToolInput(tag="in_nfr", input_type=Boolean(optional=True), prefix="-nfr", doc=InputDocumentation(doc="(report nuclesome free region scores instead of tag counts, also -nfrSize <#>)")), ToolInput(tag="in_norev_opp", input_type=Boolean(optional=True), prefix="-norevopp", doc=InputDocumentation(doc="(do not search for motifs on the opposite strand [works with -center too])")), ToolInput(tag="in_g_was_catalog", input_type=File(optional=True), prefix="-gwasCatalog", doc=InputDocumentation(doc="(list overlapping GWAS risk SNPs)")), ToolInput(tag="in_map", input_type=File(optional=True), prefix="-map", doc=InputDocumentation(doc="(mapping between peak IDs and promoter IDs, overrides closest assignment)")), ToolInput(tag="in_no_gene", input_type=Boolean(optional=True), prefix="-nogene", doc=InputDocumentation(doc="(skip genome annotation step, skip TSS annotation)")), ToolInput(tag="in_homer_one", input_type=Boolean(optional=True), prefix="-homer1", doc=InputDocumentation(doc="(by default, the new version of homer [-homer2] is used for finding motifs)")), ToolInput(tag="in_cpu", input_type=Boolean(optional=True), prefix="-cpu", doc=InputDocumentation(doc="<#> (Number of processors to use when possible - only some parts utilize multiple cores)")), ToolInput(tag="in_no_blanks", input_type=Boolean(optional=True), prefix="-noblanks", doc=InputDocumentation(doc="(remove peaks/rows with missing data)")), ToolInput(tag="in_peak_file_vertical_line_tss", input_type=File(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_genome_version", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_additional", input_type=String(optional=True), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_options_dot_dot_dot", input_type=String(optional=True), position=3, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_m_bed", output_type=File(optional=True), selector=InputSelector(input_to_select="in_m_bed", type_hint=File()), doc=OutputDocumentation(doc="(Output motif positions to a BED file to load at UCSC (or -mpeak))")), ToolOutput(tag="out_go", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_go", type_hint=File()), doc=OutputDocumentation(doc="(perform GO analysis using genes near peaks)")), ToolOutput(tag="out_genome_ontology", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_genome_ontology", type_hint=File()), doc=OutputDocumentation(doc="(perform genomeOntology analysis on peaks)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Annotatepeaks_Pl_V0_1_0().translate("wdl", allow_empty_container=True)

