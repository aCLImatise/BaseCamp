from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Bam_To_Alignment_Priors_V0_1_0 = CommandToolBuilder(tool="bam_to_alignment_priors", base_command=["bam-to-alignment-priors"], inputs=[ToolInput(tag="in_skip_reads_exist", input_type=Boolean(optional=True), prefix="-x", doc=InputDocumentation(doc="[ --dont_skip_non_xa ]             Do not skip reads for which other\nalignments exist (i.e. X0+X1>1, but no\nXA tag is present).")), ToolInput(tag="in_ignore_x_a", input_type=Boolean(optional=True), prefix="--ignore_xa", doc=InputDocumentation(doc="Do not use alternative alignments from\nXA tags.")), ToolInput(tag="in_use_mapq", input_type=Boolean(optional=True), prefix="--use_mapq", doc=InputDocumentation(doc="Use MAPQ instead of recomputing\nprobability from all alignments.")), ToolInput(tag="in_arg_value_substract", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="[ --phred_base ] arg (=33)         Value to substract from ASCII code to\nget the PHRED quality.")), ToolInput(tag="in_arg_issue_warning", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc="[ --bad_alignment_threshold ] arg (=1000)\nIssue a warning when AS tag is above\nthis value.")), ToolInput(tag="in_arg_maximal_segment", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="[ --max_span ] arg (=50000)        Maximal internal segment. Read pairs\nwith larger internal segment will be\nignored.")), ToolInput(tag="in_arg_discard_alignments", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc="[ --discard_reads ] arg (=0)       Discard 'concordant' alignments within\nthe given number of standard deviations\n(default: disabled).")), ToolInput(tag="in_arg_filename_given", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="[ --insert_size_dist ] arg         Filename of known internal segment size\ndistribution. If not given, this\ndistribution is estimated.")), ToolInput(tag="in_arg_filename_write", input_type=Boolean(optional=True), prefix="-I", doc=InputDocumentation(doc="[ --insert_size_dist_out ] arg     Filename of write estimated internal\nsegment size distribution to.")), ToolInput(tag="in_arg_filename_readgroupwise", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="[ --rg_insert_size_dist ] arg      Filename of read-group-wise known\ninternal segment size distributions.\nExpects two-column text file:\n<readgroup> <distribution-filename>.")), ToolInput(tag="in_arg_number_uniquely", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="[ --dist_est_count ] arg (=5000000)\nNumber of uniquely mapping reads that\nare to be used to estimate internal\nsegment size distribution.")), ToolInput(tag="in_arg_write_robustly", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="[ --mean_and_sd ] arg              Write (robustly estimated) mean and\nstandard deviation of main peak if\ninternal segment size distribution to\ngiven filename.")), ToolInput(tag="in_arg_number_threads", input_type=Boolean(optional=True), prefix="-T", doc=InputDocumentation(doc="[ --threads ] arg (=0)             Number of threads (default: 0 =\nstrictly single-threaded).")), ToolInput(tag="in_unsorted", input_type=Boolean(optional=True), prefix="--unsorted", doc=InputDocumentation(doc="Don't assume reads to be sorted by\nposition. In this case, alignments must\nbe grouped by read, i.e. alignments of\nthe same read (pair) must be in\nsubsequent lines.")), ToolInput(tag="in_chromosome", input_type=String(optional=True), prefix="--chromosome", doc=InputDocumentation(doc="Chromosome to process (default: all)."))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bam_To_Alignment_Priors_V0_1_0().translate("wdl", allow_empty_container=True)

