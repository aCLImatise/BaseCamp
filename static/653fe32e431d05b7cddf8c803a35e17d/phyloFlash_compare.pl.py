from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Boolean, Int

Phyloflash_Compare_Pl_V0_1_0 = CommandToolBuilder(tool="phyloFlash_compare.pl", base_command=["phyloFlash_compare.pl"], inputs=[ToolInput(tag="in_zip", input_type=String(optional=True), prefix="--zip", doc=InputDocumentation(doc="Comma-separated list of tar.gz archives from phyloFlash runs.\nThese will be parsed to search for the\n[LIBNAME].phyloFlash.NTUabundance.csv files within the archive,\nto extract the NTU classifications. This assumes that the\narchive filenames are named [LIBNAME].phyloFlash.tar.gz, and\nthat the LIBNAME matches the contents of the archive.")), ToolInput(tag="in_all_zip", input_type=Boolean(optional=True), prefix="--allzip", doc=InputDocumentation(doc="Use all phyloFlash tar.gz archives in the current folder (by\nmatching filename *.phyloFlash.tar.gz) for a comparison run.\nOverrides anything passed to option --zip.")), ToolInput(tag="in_use_sam", input_type=Boolean(optional=True), prefix="--use_SAM", doc=InputDocumentation(doc="Ignore NTU abundance tables in CSV format, and recalculate the\nNTU abundances from SAM files in the compressed tar.gz\nphyloFlash archives. Useful if e.g. phyloFlash was originally\ncalled to summarize the taxonomy at a higher level than you want\nto use for the comparison.\nOnly works if the tar.gz archives from phyloFlash runs are\nspecified with the --zip option above.\nDefault: No.")), ToolInput(tag="in_task", input_type=String(optional=True), prefix="--task", doc=InputDocumentation(doc="Type of analysis to be run. Options: 'heatmap', 'barplot',\n'matrix', 'ntu_table' or a recognizable substring thereof.\nSupply more than one option as comma- separated list.\nDefault: None")), ToolInput(tag="in_out", input_type=String(optional=True), prefix="--out", doc=InputDocumentation(doc="Prefix for output files.\nDefault: 'test.phyloFlash_compare'")), ToolInput(tag="in_out_fmt", input_type=String(optional=True), prefix="--outfmt", doc=InputDocumentation(doc="Format for plots (tasks 'barplot' and 'heatmap' only). Options:\n'pdf', 'png'\nDefault: 'pdf'")), ToolInput(tag="in_level", input_type=Int(optional=True), prefix="--level", doc=InputDocumentation(doc="Taxonomic level to perform the comparison. Must be an integer\nbetween 1 and 7.\nDefault: 4 ('Order')")), ToolInput(tag="in_keep_tmp", input_type=Boolean(optional=True), prefix="--keeptmp", doc=InputDocumentation(doc="Keep temporary files\nDefault: No")), ToolInput(tag="in_log", input_type=Boolean(optional=True), prefix="--log", doc=InputDocumentation(doc="Save log file to file [OUTPREFIX].log\nDefault: No")), ToolInput(tag="in_display_tax_a", input_type=Int(optional=True), prefix="--displaytaxa", doc=InputDocumentation(doc="Number of top taxa to display in barplot. Integer between 3 and\n12 is preferable.\nDefault: 5")), ToolInput(tag="in_barplot_palette", input_type=Int(optional=True), prefix="--barplot_palette", doc=InputDocumentation(doc="Palette to color taxa in barplot. Should be one of the\nqualitative ColorBrewer2 palettes: Accent, Dark2, Paired,\nPastel1, Pastel2, Set1, Set2, or Set3.\nDefault: 'Set3'")), ToolInput(tag="in_barplot_subset", input_type=String(optional=True), prefix="--barplot_subset", doc=InputDocumentation(doc="Display only the subset from this taxon, e.g. 'Bacteria'. Should\nbe a taxon string excluding trailing semicolon, e.g.\n'Bacteria;Proteobacteria'.\nDefault: None (show all)")), ToolInput(tag="in_barplot_raw_val", input_type=Boolean(optional=True), prefix="--barplot_rawval", doc=InputDocumentation(doc="Logical: Display counts rather than proportions in barplot, i.e.\nbars will not be rescaled to 100% for each sample.\nDefault: False")), ToolInput(tag="in_barplot_scale_plot_width", input_type=Boolean(optional=True), prefix="--barplot_scaleplotwidth", doc=InputDocumentation(doc="Numeric: Change plot width by this scaling factor (e.g. 2 makes\nit twice as wide). Allows adjustment when bars are hidden\nbecause the legend labels are too long.\nDefault: 1")), ToolInput(tag="in_cluster_samples", input_type=String(optional=True), prefix="--cluster-samples", doc=InputDocumentation(doc="Clustering method to use for clustering/sorting samples in\nheatmap. Options: 'alpha', 'ward.D', 'single', 'complete',\n'average', 'mcquitty', 'median', 'centroid', or 'custom'.\n'custom' will use the Unifrac-like abundance weighted taxonomic\ndistances (the distance matrix can be separately output with\n--task matrix). This is an experimental (unpublished) metric\nsimilar to Unifrac, but using a taxonomy tree instead of a real\nphylogeny.\nDefault: 'ward.D'")), ToolInput(tag="in_cluster_tax_a", input_type=String(optional=True), prefix="--cluster-taxa", doc=InputDocumentation(doc="Clustering method to use for clustering/sorting taxa. Options:\n'alpha', 'ward', 'single', 'complete', 'average', 'mcquitty',\n'median', 'centroid'.\nDefault: 'ward.D'")), ToolInput(tag="in_long_tax_names", input_type=Boolean(optional=True), prefix="--long-taxnames", doc=InputDocumentation(doc="Do not shorten taxa names to two last groups")), ToolInput(tag="in_min_ntu_count", input_type=Int(optional=True), prefix="--min-ntu-count", doc=InputDocumentation(doc="Sum up NTUs with fewer counts into a pseudo-NTU 'Other'.\nDefault: 50\n")), ToolInput(tag="in_barplot", input_type=String(), position=0, doc=InputDocumentation(doc="phyloFlash_compare.pl --csv")), ToolInput(tag="in_heat_map", input_type=String(), position=0, doc=InputDocumentation(doc="# phyloFlash tar.gz archives as input")), ToolInput(tag="in_format_dot", input_type=String(), position=0, doc=InputDocumentation(doc="--csv FILES\nComma-separated list of NTU abundance tables from phyloFlash\nruns. The files should be named\n[LIBNAME].phyloFlash.NTUabundance.csv or\n[LIBNAME].phyloFlash.NTUfull_abundance.csv"))], outputs=[], container="quay.io/biocontainers/phyloflash:3.4--0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Phyloflash_Compare_Pl_V0_1_0().translate("wdl")

