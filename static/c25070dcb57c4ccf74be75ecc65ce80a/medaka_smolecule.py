from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, String, File

Medaka_Smolecule_V0_1_0 = CommandToolBuilder(tool="medaka_smolecule", base_command=["medaka", "smolecule"], inputs=[ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="Verbose logging of debug information. (default: 20)")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="Minimal logging; warnings only). (default: 20)")), ToolInput(tag="in_batch_size", input_type=Int(optional=True), prefix="--batch_size", doc=InputDocumentation(doc="Inference batch size. (default: 100)")), ToolInput(tag="in_chunk_len", input_type=Int(optional=True), prefix="--chunk_len", doc=InputDocumentation(doc="Chunk length of samples. (default: 1000)")), ToolInput(tag="in_chunk_ovlp", input_type=Int(optional=True), prefix="--chunk_ovlp", doc=InputDocumentation(doc="Overlap of chunks. (default: 500)")), ToolInput(tag="in_model", input_type=Int(optional=True), prefix="--model", doc=InputDocumentation(doc="Model to use. {r103_min_high_g345, r103_min_high_g360,\nr103_prom_high_g360, r103_prom_snp_g3210,\nr103_prom_variant_g3210, r10_min_high_g303,\nr10_min_high_g340, r941_min_fast_g303,\nr941_min_high_g303, r941_min_high_g330,\nr941_min_high_g340_rle, r941_min_high_g344,\nr941_min_high_g351, r941_min_high_g360,\nr941_prom_fast_g303, r941_prom_high_g303,\nr941_prom_high_g330, r941_prom_high_g344,\nr941_prom_high_g360, r941_prom_high_g4011,\nr941_prom_snp_g303, r941_prom_snp_g322,\nr941_prom_snp_g360, r941_prom_variant_g303,\nr941_prom_variant_g322, r941_prom_variant_g360}\n(default: r941_min_high_g360)")), ToolInput(tag="in_method", input_type=String(optional=True), prefix="--method", doc=InputDocumentation(doc="Pre-medaka consensus generation method. (default:\nspoa)")), ToolInput(tag="in_depth", input_type=Int(optional=True), prefix="--depth", doc=InputDocumentation(doc="Minimum subread count. (default: 3)")), ToolInput(tag="in_length", input_type=Int(optional=True), prefix="--length", doc=InputDocumentation(doc="Minimum median subread length. (default: 400)")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of threads used by inference. (default: 1)")), ToolInput(tag="in_check_output", input_type=File(optional=True), prefix="--check_output", doc=InputDocumentation(doc="Verify integrity of output file after inference.\n(default: False)")), ToolInput(tag="in_save_features", input_type=Boolean(optional=True), prefix="--save_features", doc=InputDocumentation(doc="Save features with consensus probabilities. (default:\nFalse)\n")), ToolInput(tag="in_output", input_type=String(), position=0, doc=InputDocumentation(doc="Output directory.")), ToolInput(tag="in_fast_a", input_type=String(), position=1, doc=InputDocumentation(doc="Single-molecule reads, one file per read."))], outputs=[ToolOutput(tag="out_check_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_check_output", type_hint=File()), doc=OutputDocumentation(doc="Verify integrity of output file after inference.\n(default: False)"))], container="quay.io/biocontainers/medaka:1.2.5--py38h64b100c_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Medaka_Smolecule_V0_1_0().translate("wdl")

