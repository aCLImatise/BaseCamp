from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Int, Boolean

Modeltest_Ng_V0_1_0 = CommandToolBuilder(tool="modeltest_ng", base_command=["modeltest-ng"], inputs=[ToolInput(tag="in_datatype", input_type=String(optional=True), prefix="--datatype", doc=InputDocumentation(doc="sets the data type")), ToolInput(tag="in_input", input_type=File(optional=True), prefix="--input", doc=InputDocumentation(doc="sets the input alignment file (FASTA or PHYLIP format, required)")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="pipes the output into a file")), ToolInput(tag="in_processes", input_type=Int(optional=True), prefix="--processes", doc=InputDocumentation(doc="sets the number of processors to use (shared memory)")), ToolInput(tag="in_partitions", input_type=File(optional=True), prefix="--partitions", doc=InputDocumentation(doc="sets a partitioning scheme")), ToolInput(tag="in_rng_seed", input_type=Int(optional=True), prefix="--rngseed", doc=InputDocumentation(doc="sets the seed for the random number generator")), ToolInput(tag="in_topology", input_type=String(optional=True), prefix="--topology", doc=InputDocumentation(doc="sets the starting topology")), ToolInput(tag="in_utree", input_type=File(optional=True), prefix="--utree", doc=InputDocumentation(doc="sets a user tree")), ToolInput(tag="in_force", input_type=Boolean(optional=True), prefix="--force", doc=InputDocumentation(doc="force output overriding")), ToolInput(tag="in_disable_checkpoint", input_type=Boolean(optional=True), prefix="--disable-checkpoint", doc=InputDocumentation(doc="disable checkpoint writing")), ToolInput(tag="in_asc_bias", input_type=String(optional=True), prefix="--asc-bias", doc=InputDocumentation(doc="[:values]     includes ascertainment bias correction\ncheck modeltest manual for more information")), ToolInput(tag="in_frequencies", input_type=Boolean(optional=True), prefix="--frequencies", doc=InputDocumentation(doc="[ef]                sets the candidate models frequencies\ne: estimated - maximum likelihood (DNA) / empirical (AA)\nf: fixed - equal (DNA) / model defined (AA)")), ToolInput(tag="in_models", input_type=Int(optional=True), prefix="--models", doc=InputDocumentation(doc="sets the candidate model matrices separated by commas.\nuse '+' or '-' prefix for updating the default list.\ne.g., '-m JTT,LG' evaluates JTT and LG only .\n'-m +LG4X,+LG4M,-LG' adds LG4 models and removes LG and from the list.\ndna: *JC *HKY *TrN *TPM1 *TPM2 *TPM3\n*TIM1 *TIM2 *TIM3 *TVM *GTR\nprotein: *DAYHOFF *LG *DCMUT *JTT *MTREV *WAG *RTREV *CPREV\n*VT *BLOSUM62 *MTMAM *MTART *MTZOA *PMB *HIVB *HIVW\n*JTT-DCMUT *FLU *STMTREV LG4M LG4X GTR\n* included by default")), ToolInput(tag="in_schemes", input_type=Boolean(optional=True), prefix="--schemes", doc=InputDocumentation(doc="[3|5|7|11|203]          sets the number of predefined DNA substitution schemes evaluated\n3:   JC/F81, K80/HKY, SYM/GTR\n5:   + TrNef/TrN, TPM1/TPM1uf\n7:   + TIM1ef/TIM1, TVMef/TVM\n11:  + TPM2/TPM2uf, TPM3/TPM3uf, TIM2ef/TIM2, TIM3ef/TIM3\n203: All possible GTR submatrices")), ToolInput(tag="in_template", input_type=Boolean(optional=True), prefix="--template", doc=InputDocumentation(doc="[tool]                 sets candidate models according to a specified tool")), ToolInput(tag="in_eps", input_type=String(optional=True), prefix="--eps", doc=InputDocumentation(doc="sets the model optimization epsilon")), ToolInput(tag="in_to_l", input_type=String(optional=True), prefix="--tol", doc=InputDocumentation(doc="sets the parameter optimization tolerance")), ToolInput(tag="in_smooth_frequencies", input_type=Boolean(optional=True), prefix="--smooth-frequencies", doc=InputDocumentation(doc="forces frequencies smoothing")), ToolInput(tag="in_gamma_rates", input_type=Boolean(optional=True), prefix="--gamma-rates", doc=InputDocumentation(doc="[a|g]               sets gamma rates mode\na                  uses the average (or mean) per category (default)\nm                  uses the median per category")), ToolInput(tag="in_no_compress", input_type=Boolean(optional=True), prefix="--no-compress", doc=InputDocumentation(doc="disables pattern compression\nmodeltest ignores if there are missing states")), ToolInput(tag="in_keep_params", input_type=Boolean(optional=True), prefix="--keep-params", doc=InputDocumentation(doc="keep branch lengths fixed")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="run in verbose mode")), ToolInput(tag="in_nt", input_type=String(), position=0, doc=InputDocumentation(doc="nucleotide")), ToolInput(tag="in_aa", input_type=String(), position=1, doc=InputDocumentation(doc="amino acid")), ToolInput(tag="in_ml", input_type=String(), position=2, doc=InputDocumentation(doc="maximum likelihood")), ToolInput(tag="in_mp", input_type=String(), position=3, doc=InputDocumentation(doc="maximum parsimony")), ToolInput(tag="in_fixed_ml_jc", input_type=String(), position=4, doc=InputDocumentation(doc="fixed maximum likelihood (JC)")), ToolInput(tag="in_fixed_ml_gtr", input_type=String(), position=5, doc=InputDocumentation(doc="fixed maximum likelihood (GTR)")), ToolInput(tag="in_fixed_mp", input_type=String(), position=6, doc=InputDocumentation(doc="fixed maximum parsimony (default)")), ToolInput(tag="in_random", input_type=String(), position=7, doc=InputDocumentation(doc="random generated tree")), ToolInput(tag="in_user", input_type=String(), position=8, doc=InputDocumentation(doc="fixed user defined (requires -u argument)")), ToolInput(tag="in_lewis", input_type=String(), position=0, doc=InputDocumentation(doc="Lewis (2001)")), ToolInput(tag="in_felsenstein", input_type=String(), position=1, doc=InputDocumentation(doc="Felsenstein\nrequires number of invariant sites")), ToolInput(tag="in_stam_a_takis", input_type=String(), position=2, doc=InputDocumentation(doc="Leach√© et al. (2015)\nrequires invariant sites composition")), ToolInput(tag="in_ra_xml", input_type=String(), position=3, doc=InputDocumentation(doc="RAxML (DNA 3 schemes / AA full search)")), ToolInput(tag="in_phy_ml", input_type=String(), position=4, doc=InputDocumentation(doc="PhyML (DNA full search / 14 AA matrices)")), ToolInput(tag="in_mr_bayes", input_type=String(), position=5, doc=InputDocumentation(doc="MrBayes (DNA 3 schemes / 8 AA matrices)")), ToolInput(tag="in_paup", input_type=String(), position=6, doc=InputDocumentation(doc="PAUP* (DNA full search / AA full search)"))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="pipes the output into a file"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Modeltest_Ng_V0_1_0().translate("wdl", allow_empty_container=True)

