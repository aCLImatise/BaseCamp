!Command
command:
- locarna
positional:
- !Positional
  optional: false
  position: 0
  name: constraints.
  description: Report bugs to <will (at) informatik.uni-freiburg.de>.
named:
- !Flag
  optional: true
  synonyms:
  - --galaxy-xml
  description: Print galaxy xml wrapper.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -v
  - --verbose
  description: Be verbose. Prints input parameters, sequences and size information.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -q
  - --quiet
  description: Be quiet.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -i
  - --indel
  description: "(-150)\nIndel score. Score contribution of each single base insertion\
    \ or\ndeletion. Indel opening score and indel score define the affine scoring\n\
    of gaps."
  args: !SimpleFlagArg
    name: score
- !Flag
  optional: true
  synonyms:
  - --indel-opening
  description: "(-750)\nIndel opening score. Score contribution of opening an insertion\
    \ or\ndeletion, i.e. score for a consecutive run of deletions or insertions.\n\
    Indel opening score and indel score define the affine scoring of gaps."
  args: !SimpleFlagArg
    name: score
- !Flag
  optional: true
  synonyms:
  - --ribosum-file
  description: "(RIBOSUM85_60)\nFile specifying the Ribosum base and base-pair similarities.\
    \ [default:\nuse RIBOSUM85_60 without requiring a Ribosum file.]"
  args: !SimpleFlagArg
    name: f
- !Flag
  optional: true
  synonyms:
  - --use-ribosum
  description: "(true)\nUse ribosum scores for scoring base matches and base pair\
    \ matches; note\nthat tau=0 suppresses any effect on the latter."
  args: !SimpleFlagArg
    name: bool
- !Flag
  optional: true
  synonyms:
  - -m
  - --match
  description: "(50)\nSet score contribution of a base match (unless ribosum scoring)."
  args: !SimpleFlagArg
    name: score
- !Flag
  optional: true
  synonyms:
  - -M
  - --mismatch
  description: "(0)\nSet score contribution of a base mismatch (unless ribosum scoring)."
  args: !SimpleFlagArg
    name: score
- !Flag
  optional: true
  synonyms:
  - --unpaired-penalty
  description: "(0)\nPenalty for unpaired bases"
  args: !SimpleFlagArg
    name: score
- !Flag
  optional: true
  synonyms:
  - -s
  - --struct-weight
  description: "(200)\nMaximal weight of 1/2 arc match. Balances structure vs. sequence\
    \ score\ncontributions."
  args: !SimpleFlagArg
    name: score
- !Flag
  optional: true
  synonyms:
  - -e
  - --exp-prob
  description: "Expected base pair probability. Used as background probability for\
    \ base\npair scoring [default: calculated from sequence length]."
  args: !SimpleFlagArg
    name: prob
- !Flag
  optional: true
  synonyms:
  - -t
  - --tau
  description: "(50)\nTau factor. Factor for contribution of sequence similarity in\
    \ an arc\nmatch (in percent). tau=0 does not penalize any sequence information\n\
    including compensatory mutations at arc matches, while tau=100 scores\nsequence\
    \ similarity at ends of base matches (if a scoring matrix like\nribosum is used,\
    \ this adds the contributions for base pair match from the\nmatrix). [default\
    \ tau=0!]"
  args: !SimpleFlagArg
    name: factor
- !Flag
  optional: true
  synonyms:
  - -E
  - --exclusion
  description: "(0)\nScore contribution per exclusion in structure local alignment.\
    \ Set to\nzero for unrestricted structure locality."
  args: !SimpleFlagArg
    name: score
- !Flag
  optional: true
  synonyms:
  - --stacking
  description: Use stacking terms (requires stack-probs by RNAfold -p2)
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --new-stacking
  description: Use new stacking terms (requires stack-probs by RNAfold -p2)
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --extended-pf
  description: "Use extended precision for the computation of sequence envelopes.\
    \ This\nenables handling significantly larger instances. [default]"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --quad-pf
  description: "Use quad precision for partition function values. Even more precision\n\
    than extended pf, but usually much slower (overrides extended-pf)."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --struct-local
  description: "(false)\nTurn on/off structure locality. Allow exclusions in alignments\
    \ of\nconnected substructures."
  args: !SimpleFlagArg
    name: bool
- !Flag
  optional: true
  synonyms:
  - --sequ-local
  description: "(false)\nTurn on/off sequence locality. Find best alignment of arbitrary\n\
    subsequences of the input sequences."
  args: !SimpleFlagArg
    name: bool
- !Flag
  optional: true
  synonyms:
  - --free-endgaps
  description: "(----)\nControl where end gaps are allowed for free. String of four\
    \ +/- symbols,\nallowing/disallowing free end gaps at the four sequence ends in\
    \ the order\nleft end of first sequence, right end of first sequence, left end\
    \ of\nsecond sequence, right end of second sequence. For example, \"+---\" allows\n\
    free end gaps at the left end of the first alignment string; \"----\"\nforbids\
    \ free end gaps [default]."
  args: !SimpleFlagArg
    name: spec
- !Flag
  optional: true
  synonyms:
  - --normalized
  description: "(0)\nPerform normalized local alignment with parameter L. This causes\
    \ locarna\nto compute the best local alignment according to 'Score' / ( L + 'length'\n\
    ), where length is the sum of the lengths of the two locally aligned\nsubsequences.\
    \ Thus, the larger L, the larger the local alignment; the\nsize of value L is\
    \ in the order of local alignment lengths. Verbose\nyields info on the iterative\
    \ optimizations."
  args: !SimpleFlagArg
    name: L
- !Flag
  optional: true
  synonyms:
  - --penalized
  description: "(0)\nPenalized local alignment with penalty PP"
  args: !SimpleFlagArg
    name: PP
- !Flag
  optional: true
  synonyms:
  - -w
  - --width
  description: "(120)\nWidth of alignment output."
  args: !SimpleFlagArg
    name: columns
- !Flag
  optional: true
  synonyms:
  - --clustal
  description: Write alignment in ClustalW (aln) format to given file.
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - --stockholm
  description: Write alignment Stockholm format to given file.
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - --pp
  description: Write alignment in PP format to given file.
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - --alifold-consensus-dp
  description: "Compute consensus dot plot by alifold (warning: this may fail for\
    \ long\nsequences)."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --consensus-structure
  description: "(none)\nType of consensus structures written to screen and stockholm\
    \ output\n[alifold|mea|none] (default: none)."
  args: !SimpleFlagArg
    name: type
- !Flag
  optional: true
  synonyms:
  - --consensus-gamma
  description: "(1.0)\nBase pair weight for mea consensus computation. For MEA, base\
    \ pairs are\nscored by their pair probability times 2 gamma; unpaired bases, by\
    \ their\nunpaired probability."
  args: !SimpleFlagArg
    name: float
- !Flag
  optional: true
  synonyms:
  - -L
  - --local-output
  description: Output only local sub-alignment (to std out).
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --local-file-output
  description: Write only local sub-alignment to output files.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -P
  - --pos-output
  description: Output only local sub-alignment positions.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --write-structure
  description: Write guidance structure in output.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --score-components
  description: Output components of the score (experimental).
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --stopwatch
  description: Print run time informations.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -p
  - --min-prob
  description: "(0.001)\nMinimal probability. Only base pairs of at least this probability\
    \ are\ntaken into account."
  args: !SimpleFlagArg
    name: probability
- !Flag
  optional: true
  synonyms:
  - --max-bps-length-ratio
  description: "(0.0)\nMaximal ratio of #base pairs divided by sequence length. This\
    \ serves as a\nsecond filter on the \"significant\" base pairs. [default: 0.0\
    \ = no\neffect]."
  args: !SimpleFlagArg
    name: factor
- !Flag
  optional: true
  synonyms:
  - -D
  - --max-diff-am
  description: "(-1)\nMaximal difference for sizes of matched arcs. [-1=off]"
  args: !SimpleFlagArg
    name: diff
- !Flag
  optional: true
  synonyms:
  - -d
  - --max-diff
  description: "(-1)\nMaximal difference for positions of alignment traces (and aligned\
    \ bases).\n[-1=off]"
  args: !SimpleFlagArg
    name: diff
- !Flag
  optional: true
  synonyms:
  - --max-diff-at-am
  description: "(-1)\nMaximal difference for positions of alignment traces at arc\
    \ match ends.\n[-1=off]"
  args: !SimpleFlagArg
    name: diff
- !Flag
  optional: true
  synonyms:
  - --max-diff-aln
  description: "()\nMaximal difference relative to given alignment (file in clustalw\
    \ format)"
  args: !SimpleFlagArg
    name: aln file
- !Flag
  optional: true
  synonyms:
  - --max-diff-pw-aln
  description: "()\nMaximal difference relative to given alignment (string, delim=AMPERSAND)"
  args: !SimpleFlagArg
    name: alignment
- !Flag
  optional: true
  synonyms:
  - --max-diff-relax
  description: Relax deviation constraints in multiple aligmnent
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --min-trace-probability
  description: "(1e-4)\nMinimal sequence alignment probability of potential traces\n\
    (probability-based sequence alignment envelope) [default=1e-4]."
  args: !SimpleFlagArg
    name: probability
- !Flag
  optional: true
  synonyms:
  - --kbest
  description: "(-1)\nEnumerate k-best alignments"
  args: !SimpleFlagArg
    name: k
- !Flag
  optional: true
  synonyms:
  - --better
  description: "(-1000000)\nEnumerate alignments better threshold t"
  args: !SimpleFlagArg
    name: t
- !Flag
  optional: true
  synonyms:
  - --mea-alignment
  description: "Perform maximum expected accuracy alignment (instead of using the\
    \ default\nsimilarity scoring)."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --match-prob-method
  description: "(0)\nSelect method for computing sequence-based base match probablities\
    \ (to be\nused for mea-type alignment scores). Methods: 1=probcons-style from\
    \ HMM,\n2=probalign-style from PFs, 3=from PFs, local"
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - --probcons-file
  description: "Read parameters for probcons-like calculation of match probabilities\
    \ from\nprobcons parameter file."
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - --temperature-alipf
  description: "(300)\nTemperature for the /sequence alignment/ partition functions\
    \ used by the\nprobcons-like sequence-based match/trace probability computation\
    \ (this\ntemperature is different from the 'physical' temperature of RNA\nfolding!)."
  args: !SimpleFlagArg
    name: int
- !Flag
  optional: true
  synonyms:
  - --pf-struct-weight
  description: "(200)\nStructure weight in PF computations (for the computation of\n\
    sequence-based match probabilties from partition functions)."
  args: !SimpleFlagArg
    name: weight
- !Flag
  optional: true
  synonyms:
  - --mea-gapcost
  description: Use gap cost in mea alignment
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --mea-alpha
  description: "(0)\nWeight alpha for MEA"
  args: !SimpleFlagArg
    name: weight
- !Flag
  optional: true
  synonyms:
  - --mea-beta
  description: "(200)\nWeight beta for MEA"
  args: !SimpleFlagArg
    name: weight
- !Flag
  optional: true
  synonyms:
  - --mea-gamma
  description: "(100)\nWeight gamma for MEA"
  args: !SimpleFlagArg
    name: weight
- !Flag
  optional: true
  synonyms:
  - --probability-scale
  description: "(10000)\nScale for probabilities/resolution of mea score"
  args: !SimpleFlagArg
    name: scale
- !Flag
  optional: true
  synonyms:
  - --write-match-probs
  description: Write match probs to file (don't align!).
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - --write-trace-probs
  description: Write trace probs to file (don't align!).
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - --read-match-probs
  description: Read match probabilities from file.
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - --write-arcmatch-scores
  description: Write arcmatch scores (don't align!)
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - --read-arcmatch-scores
  description: Read arcmatch scores.
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - --read-arcmatch-probs
  description: Read arcmatch probabilities (weighted by factor mea_beta/100)
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - --noLP
  description: Disallow lonely pairs in prediction and alignment.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --maxBPspan
  description: "(-1)\nLimit maximum base pair span [default=off]."
  args: !SimpleFlagArg
    name: span
- !Flag
  optional: true
  synonyms:
  - --relaxed-anchors
  description: Use relaxed semantics of anchor constraints [default=strict semantics].
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: Print this help.
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - -V
  - --version
  description: Print only version string.
  args: !EmptyFlagArg {}
help_text: "locarna - pairwise (global and local) alignment of RNA.\n\nUSAGE: locarna\
  \ [options] <Input 1> <Input 2> \n\nOptions:\n  -h,--help\n    Print this help.\n\
  \n  --galaxy-xml\n    Print galaxy xml wrapper.\n\n  -V,--version\n    Print only\
  \ version string.\n\n  -v,--verbose\n    Be verbose. Prints input parameters, sequences\
  \ and size information.\n\n  -q,--quiet\n    Be quiet.\n\n\nScoring parameters:\n\
  \  -i,--indel=<score>(-150)\n    Indel score. Score contribution of each single\
  \ base insertion or\n    deletion. Indel opening score and indel score define the\
  \ affine scoring\n    of gaps.\n\n  --indel-opening=<score>(-750)\n    Indel opening\
  \ score. Score contribution of opening an insertion or\n    deletion, i.e. score\
  \ for a consecutive run of deletions or insertions.\n    Indel opening score and\
  \ indel score define the affine scoring of gaps.\n\n  --ribosum-file=<f>(RIBOSUM85_60)\n\
  \    File specifying the Ribosum base and base-pair similarities. [default:\n  \
  \  use RIBOSUM85_60 without requiring a Ribosum file.]\n\n  --use-ribosum=<bool>(true)\n\
  \    Use ribosum scores for scoring base matches and base pair matches; note\n \
  \   that tau=0 suppresses any effect on the latter.\n\n  -m,--match=<score>(50)\n\
  \    Set score contribution of a base match (unless ribosum scoring).\n\n  -M,--mismatch=<score>(0)\n\
  \    Set score contribution of a base mismatch (unless ribosum scoring).\n\n  --unpaired-penalty=<score>(0)\n\
  \    Penalty for unpaired bases\n\n  -s,--struct-weight=<score>(200)\n    Maximal\
  \ weight of 1/2 arc match. Balances structure vs. sequence score\n    contributions.\n\
  \n  -e,--exp-prob=<prob>\n    Expected base pair probability. Used as background\
  \ probability for base\n    pair scoring [default: calculated from sequence length].\n\
  \n  -t,--tau=<factor>(50)\n    Tau factor. Factor for contribution of sequence similarity\
  \ in an arc\n    match (in percent). tau=0 does not penalize any sequence information\n\
  \    including compensatory mutations at arc matches, while tau=100 scores\n   \
  \ sequence similarity at ends of base matches (if a scoring matrix like\n    ribosum\
  \ is used, this adds the contributions for base pair match from the\n    matrix).\
  \ [default tau=0!]\n\n  -E,--exclusion=<score>(0)\n    Score contribution per exclusion\
  \ in structure local alignment. Set to\n    zero for unrestricted structure locality.\n\
  \n  --stacking\n    Use stacking terms (requires stack-probs by RNAfold -p2)\n\n\
  \  --new-stacking\n    Use new stacking terms (requires stack-probs by RNAfold -p2)\n\
  \n\nPartition function representation (for sequence envelopes):\n  --extended-pf\n\
  \    Use extended precision for the computation of sequence envelopes. This\n  \
  \  enables handling significantly larger instances. [default]\n\n  --quad-pf\n \
  \   Use quad precision for partition function values. Even more precision\n    than\
  \ extended pf, but usually much slower (overrides extended-pf).\n\n\nLocality:\n\
  \  --struct-local=<bool>(false)\n    Turn on/off structure locality. Allow exclusions\
  \ in alignments of\n    connected substructures.\n\n  --sequ-local=<bool>(false)\n\
  \    Turn on/off sequence locality. Find best alignment of arbitrary\n    subsequences\
  \ of the input sequences.\n\n  --free-endgaps=<spec>(----)\n    Control where end\
  \ gaps are allowed for free. String of four +/- symbols, \n    allowing/disallowing\
  \ free end gaps at the four sequence ends in the order\n    left end of first sequence,\
  \ right end of first sequence, left end of\n    second sequence, right end of second\
  \ sequence. For example, \"+---\" allows\n    free end gaps at the left end of the\
  \ first alignment string; \"----\"\n    forbids free end gaps [default].\n\n  --normalized=<L>(0)\n\
  \    Perform normalized local alignment with parameter L. This causes locarna \n\
  \    to compute the best local alignment according to 'Score' / ( L + 'length'\n\
  \    ), where length is the sum of the lengths of the two locally aligned\n    subsequences.\
  \ Thus, the larger L, the larger the local alignment; the\n    size of value L is\
  \ in the order of local alignment lengths. Verbose\n    yields info on the iterative\
  \ optimizations.\n\n  --penalized=<PP>(0)\n    Penalized local alignment with penalty\
  \ PP\n\n\nOutput:\n  -w,--width=<columns>(120)\n    Width of alignment output.\n\
  \n  --clustal=<file>\n    Write alignment in ClustalW (aln) format to given file.\n\
  \n  --stockholm=<file>\n    Write alignment Stockholm format to given file.\n\n\
  \  --pp=<file>\n    Write alignment in PP format to given file.\n\n  --alifold-consensus-dp\n\
  \    Compute consensus dot plot by alifold (warning: this may fail for long\n  \
  \  sequences).\n\n  --consensus-structure=<type>(none)\n    Type of consensus structures\
  \ written to screen and stockholm output\n    [alifold|mea|none] (default: none).\n\
  \n  --consensus-gamma=<float>(1.0)\n    Base pair weight for mea consensus computation.\
  \ For MEA, base pairs are\n    scored by their pair probability times 2 gamma; unpaired\
  \ bases, by their \n    unpaired probability.\n\n  -L,--local-output\n    Output\
  \ only local sub-alignment (to std out).\n\n  --local-file-output\n    Write only\
  \ local sub-alignment to output files.\n\n  -P,--pos-output\n    Output only local\
  \ sub-alignment positions.\n\n  --write-structure\n    Write guidance structure\
  \ in output.\n\n  --score-components\n    Output components of the score (experimental).\n\
  \n  --stopwatch\n    Print run time informations.\n\n\nHeuristics for speed accuracy\
  \ trade off:\n  -p,--min-prob=<probability>(0.001)\n    Minimal probability. Only\
  \ base pairs of at least this probability are\n    taken into account.\n\n  --max-bps-length-ratio=<factor>(0.0)\n\
  \    Maximal ratio of #base pairs divided by sequence length. This serves as a\n\
  \    second filter on the \"significant\" base pairs. [default: 0.0 = no\n    effect].\n\
  \n  -D,--max-diff-am=<diff>(-1)\n    Maximal difference for sizes of matched arcs.\
  \ [-1=off]\n\n  -d,--max-diff=<diff>(-1)\n    Maximal difference for positions of\
  \ alignment traces (and aligned bases).\n    [-1=off]\n\n  --max-diff-at-am=<diff>(-1)\n\
  \    Maximal difference for positions of alignment traces at arc match ends.\n \
  \   [-1=off]\n\n  --max-diff-aln=<aln file>()\n    Maximal difference relative to\
  \ given alignment (file in clustalw format)\n\n  --max-diff-pw-aln=<alignment>()\n\
  \    Maximal difference relative to given alignment (string, delim=AMPERSAND)\n\n\
  \  --max-diff-relax\n    Relax deviation constraints in multiple aligmnent\n\n \
  \ --min-trace-probability=<probability>(1e-4)\n    Minimal sequence alignment probability\
  \ of potential traces\n    (probability-based sequence alignment envelope) [default=1e-4].\n\
  \n\nSpecial sauce options:\n  --kbest=<k>(-1)\n    Enumerate k-best alignments\n\
  \n  --better=<t>(-1000000)\n    Enumerate alignments better threshold t\n\n\nMEA\
  \ score:\n  --mea-alignment\n    Perform maximum expected accuracy alignment (instead\
  \ of using the default\n    similarity scoring).\n\n  --match-prob-method=<int>(0)\n\
  \    Select method for computing sequence-based base match probablities (to be\n\
  \    used for mea-type alignment scores). Methods: 1=probcons-style from HMM, \n\
  \    2=probalign-style from PFs, 3=from PFs, local\n\n  --probcons-file=<file>\n\
  \    Read parameters for probcons-like calculation of match probabilities from\n\
  \    probcons parameter file.\n\n  --temperature-alipf=<int>(300)\n    Temperature\
  \ for the /sequence alignment/ partition functions used by the \n    probcons-like\
  \ sequence-based match/trace probability computation (this\n    temperature is different\
  \ from the 'physical' temperature of RNA\n    folding!).\n\n  --pf-struct-weight=<weight>(200)\n\
  \    Structure weight in PF computations (for the computation of\n    sequence-based\
  \ match probabilties from partition functions).\n\n  --mea-gapcost\n    Use gap\
  \ cost in mea alignment\n\n  --mea-alpha=<weight>(0)\n    Weight alpha for MEA\n\
  \n  --mea-beta=<weight>(200)\n    Weight beta for MEA\n\n  --mea-gamma=<weight>(100)\n\
  \    Weight gamma for MEA\n\n  --probability-scale=<scale>(10000)\n    Scale for\
  \ probabilities/resolution of mea score\n\n  --write-match-probs=<file>\n    Write\
  \ match probs to file (don't align!).\n\n  --write-trace-probs=<file>\n    Write\
  \ trace probs to file (don't align!).\n\n  --read-match-probs=<file>\n    Read match\
  \ probabilities from file.\n\n  --write-arcmatch-scores=<file>\n    Write arcmatch\
  \ scores (don't align!)\n\n  --read-arcmatch-scores=<file>\n    Read arcmatch scores.\n\
  \n  --read-arcmatch-probs=<file>\n    Read arcmatch probabilities (weighted by factor\
  \ mea_beta/100)\n\n\nConstraints:\n  --noLP\n    Disallow lonely pairs in prediction\
  \ and alignment.\n\n  --maxBPspan=<span>(-1)\n    Limit maximum base pair span [default=off].\n\
  \n  --relaxed-anchors\n    Use relaxed semantics of anchor constraints [default=strict\
  \ semantics].\n\n\nInput files:\n  The tool is called with two input files <Input\
  \ 1> and <Input 2>, which\n  specify the two input sequences or input alignments.\
  \ Different input\n  formats (Fasta, Clustal, Stockholm, LocARNA PP, ViennaRNA postscript\n\
  \  dotplots) are accepted and automatically recognized (by file content); the \n\
  \  two input files can be in different formats. Extended variants of the\n  Clustal\
  \ and Stockholm formats enable specifying anchor and structure\n  constraints.\n\
  \n\nReport bugs to <will (at) informatik.uni-freiburg.de>.\n\n"
generated_using:
- --help
docker_image:
