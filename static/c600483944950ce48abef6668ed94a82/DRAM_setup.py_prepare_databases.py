from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Directory, File, String, Int, Boolean

Dram_Setup_Py_Prepare_Databases_V0_1_0 = CommandToolBuilder(tool="DRAM_setup.py_prepare_databases", base_command=["DRAM-setup.py", "prepare_databases"], inputs=[ToolInput(tag="in_output_dir", input_type=Directory(optional=True), prefix="--output_dir", doc=InputDocumentation(doc="output directory (default: .)")), ToolInput(tag="in_kegg_loc", input_type=File(optional=True), prefix="--kegg_loc", doc=InputDocumentation(doc="KEGG protein file, should be a single .pep, please\nmerge all KEGG pep files (default: None)")), ToolInput(tag="in_gene_ko_link_loc", input_type=String(optional=True), prefix="--gene_ko_link_loc", doc=InputDocumentation(doc="KEGG gene ko link, can be gzipped or not (default:\nNone)")), ToolInput(tag="in_k_of_am_hmm_loc", input_type=File(optional=True), prefix="--kofam_hmm_loc", doc=InputDocumentation(doc="hmm file for KOfam (profiles.tar.gz) (default: None)")), ToolInput(tag="in_k_of_am_ko_list_loc", input_type=File(optional=True), prefix="--kofam_ko_list_loc", doc=InputDocumentation(doc="KOfam ko list file (ko_list.gz) (default: None)")), ToolInput(tag="in_kegg_download_date", input_type=String(optional=True), prefix="--kegg_download_date", doc=InputDocumentation(doc="Date KEGG was download to include in database name\n(default: None)")), ToolInput(tag="in_uniref_loc", input_type=File(optional=True), prefix="--uniref_loc", doc=InputDocumentation(doc="File path to uniref, if already downloaded\n(uniref90.fasta.gz) (default: None)")), ToolInput(tag="in_uniref_version", input_type=Int(optional=True), prefix="--uniref_version", doc=InputDocumentation(doc="UniRef version to download (default: 90)")), ToolInput(tag="in_skip_uniref", input_type=Boolean(optional=True), prefix="--skip_uniref", doc=InputDocumentation(doc="Do not download and process uniref90. Saves time and\nmemory usage and does not impact DRAM distillation\n(default: False)")), ToolInput(tag="in_pfam_loc", input_type=File(optional=True), prefix="--pfam_loc", doc=InputDocumentation(doc="File path to pfam-A full file, if already downloaded\n(Pfam-A.full.gz) (default: None)")), ToolInput(tag="in_pfam_hmm_dat", input_type=File(optional=True), prefix="--pfam_hmm_dat", doc=InputDocumentation(doc="pfam hmm .dat file to get PF descriptions, if already\ndownloaded (Pfam-A.hmm.dat.gz) (default: None)")), ToolInput(tag="in_db_can_loc", input_type=File(optional=True), prefix="--dbcan_loc", doc=InputDocumentation(doc="File path to dbCAN, if already downloaded (dbCAN-\nHMMdb-V9.txt) (default: None)")), ToolInput(tag="in_db_can_fam_activities", input_type=File(optional=True), prefix="--dbcan_fam_activities", doc=InputDocumentation(doc="CAZY family activities file, if already downloaded\n(CAZyDB.07302020.fam-activities.txt) (default: None)")), ToolInput(tag="in_db_can_version", input_type=Int(optional=True), prefix="--dbcan_version", doc=InputDocumentation(doc="version of dbCAN to use (default: 9)")), ToolInput(tag="in_vo_gdb_loc", input_type=File(optional=True), prefix="--vogdb_loc", doc=InputDocumentation(doc="hmm file for vogdb, if already downloaded\n(vog.hmm.tar.gz) (default: None)")), ToolInput(tag="in_vog_annotations", input_type=File(optional=True), prefix="--vog_annotations", doc=InputDocumentation(doc="vogdb annotations file, if already downloaded\n(vog.annotations.tsv.gz) (default: None)")), ToolInput(tag="in_viral_loc", input_type=File(optional=True), prefix="--viral_loc", doc=InputDocumentation(doc="File path to merged viral protein faa, if already\ndownloaded (viral.x.protein.faa.gz) (default: None)")), ToolInput(tag="in_peptidase_loc", input_type=File(optional=True), prefix="--peptidase_loc", doc=InputDocumentation(doc="File path to MEROPS peptidase fasta, if already\ndownloaded (pepunit.lib) (default: None)")), ToolInput(tag="in_genome_summary_form_loc", input_type=File(optional=True), prefix="--genome_summary_form_loc", doc=InputDocumentation(doc="File path to genome summary form,if already downloaded\n(default: None)")), ToolInput(tag="in_module_step_form_loc", input_type=File(optional=True), prefix="--module_step_form_loc", doc=InputDocumentation(doc="File path to module step form, ifalready downloaded\n(default: None)")), ToolInput(tag="in_etc_module_database_loc", input_type=File(optional=True), prefix="--etc_module_database_loc", doc=InputDocumentation(doc="File path to etc module database, if already\ndownloaded (default: None)")), ToolInput(tag="in_function_heat_map_form_loc", input_type=File(optional=True), prefix="--function_heatmap_form_loc", doc=InputDocumentation(doc="File path to function heatmap form, if already\ndownloaded (default: None)")), ToolInput(tag="in_branch", input_type=String(optional=True), prefix="--branch", doc=InputDocumentation(doc="git branch from which to download forms; THIS SHOULD\nNOT BE CHANGED BY REGULAR USERS (default: master)")), ToolInput(tag="in_keep_database_files", input_type=Boolean(optional=True), prefix="--keep_database_files", doc=InputDocumentation(doc="Keep unporcessed database files (default: False)")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of threads to use building mmseqs2 databases\n(default: 10)")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Make it talk more (default: False)"))], outputs=[ToolOutput(tag="out_output_dir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output_dir", type_hint=File()), doc=OutputDocumentation(doc="output directory (default: .)"))], container="quay.io/biocontainers/dram:1.2.1--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Dram_Setup_Py_Prepare_Databases_V0_1_0().translate("wdl")

