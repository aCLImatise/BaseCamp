from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, Int

Gsutil_Ls_V0_1_0 = CommandToolBuilder(tool="gsutil_ls", base_command=["gsutil", "ls"], inputs=[ToolInput(tag="in_prints_long_listing", input_type=Boolean(optional=True), prefix="-l", doc=InputDocumentation(doc="Prints long listing (owner, length).")), ToolInput(tag="in_prints_even_more", input_type=Boolean(optional=True), prefix="-L", doc=InputDocumentation(doc="Prints even more detail than -l.  Note: If you use this option\nwith the (non-default) XML API it will generate an additional\nrequest per object being listed, which makes the -L option run\nmuch more slowly (and cost more) using the XML API than the\ndefault JSON API.")), ToolInput(tag="in_list_matching_subdirectory", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc="List matching subdirectory names instead of contents, and do not\nrecurse into matching subdirectories even if the -R option is\nspecified.")), ToolInput(tag="in_prints_info_used", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc="Prints info about the bucket when used with a bucket URL.")), ToolInput(tag="in_specifies_project_id", input_type=String(optional=True), prefix="-p", doc=InputDocumentation(doc="Specifies the project ID to use for listing buckets.")), ToolInput(tag="in_requests_recursive_listing", input_type=Boolean(optional=True), prefix="-R", doc=InputDocumentation(doc="Requests a recursive listing, performing at least one listing\noperation per subdirectory. If you have a large number of\nsubdirectories and do not require recursive-style output ordering,\nyou may be able to instead use wildcards to perform a flat\nlisting, e.g.  `gsutil ls gs://mybucket/**`, which will generally\nperform fewer listing operations.")), ToolInput(tag="in_includes_noncurrent_versions", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="Includes non-current object versions / generations in the listing\n(only useful with a versioning-enabled bucket). If combined with\n-l option also prints metageneration for each listed object.")), ToolInput(tag="in_include_etag_long", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc="Include ETag in long listing (-l) output.")), ToolInput(tag="in_two_two_seven_six_two_two_four", input_type=Int(), position=0, doc=InputDocumentation(doc="2012-03-02T19:25:17Z  gs://bucket/obj1")), ToolInput(tag="in_three_nine_one_four_six_two_four", input_type=Int(), position=1, doc=InputDocumentation(doc="2012-03-02T19:30:27Z  gs://bucket/obj2"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Gsutil_Ls_V0_1_0().translate("wdl", allow_empty_container=True)

