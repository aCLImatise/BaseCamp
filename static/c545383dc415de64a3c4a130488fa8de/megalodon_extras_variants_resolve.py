from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, Boolean, String

Megalodon_Extras_Variants_Resolve_V0_1_0 = CommandToolBuilder(tool="megalodon_extras_variants_resolve", base_command=["megalodon_extras", "variants", "resolve"], inputs=[ToolInput(tag="in_output_filename", input_type=File(optional=True), prefix="--output-filename", doc=InputDocumentation(doc="Output filename. Default:\nmegalodon.consolidated_variants.vcf")), ToolInput(tag="in_max_likelihood_ratio", input_type=Int(optional=True), prefix="--max-likelihood-ratio", doc=InputDocumentation(doc="Maximum likelihood ratio ([ref prob] / [max alt prob])\nto include variant in output. Allows output of\nuncertain reference calls. Default: 1; Include only\nsites called as alternative.")), ToolInput(tag="in_min_depth", input_type=Int(optional=True), prefix="--min-depth", doc=InputDocumentation(doc="Minimum depth to include a variant. Default: No depth\nfilter")), ToolInput(tag="in_trim_variants", input_type=Boolean(optional=True), prefix="--trim-variants", doc=InputDocumentation(doc="Trim extra padding sequence included by megalodon\n(e.g. around repeat-region indels). Default: Output as\nfound in input variants.")), ToolInput(tag="in_reverse_strand_variants", input_type=File(optional=True), prefix="--reverse-strand-variants", doc=InputDocumentation(doc="Variants file produced only from reads mapping to the\nreverse strand. If provided, this assumes that the\nmain variants file contains variants only supported by\nreads from the forward strand. This is used to\nidentify systematic basecalling error variants. Errors\nmade on both strands indicate potential putative\nvariants and are thus excluded. Homopolymer variants\noccuring on both strands are included by default.\nExclude these variants as well by setting --exclude-\nboth-strand-homopolymers .")), ToolInput(tag="in_homopolymer_min_length", input_type=Int(optional=True), prefix="--homopolymer-min-length", doc=InputDocumentation(doc="Minimum length to consider a variant as a homopolymer.\nDefault: 4")), ToolInput(tag="in_exclude_both_strand_homopolymers", input_type=Boolean(optional=True), prefix="--exclude-both-strand-homopolymers", doc=InputDocumentation(doc="By default homopolymer variants are included even if\nthey occur on both strands. Set this flag to treat\nhomopolymer variants as other variants.\n")), ToolInput(tag="in_field_dot", input_type=String(), position=2, doc=InputDocumentation(doc="optional arguments:"))], outputs=[ToolOutput(tag="out_output_filename", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_filename", type_hint=File()), doc=OutputDocumentation(doc="Output filename. Default:\nmegalodon.consolidated_variants.vcf"))], container="quay.io/biocontainers/megalodon:2.3.0--py38h0213d0e_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Megalodon_Extras_Variants_Resolve_V0_1_0().translate("wdl")

