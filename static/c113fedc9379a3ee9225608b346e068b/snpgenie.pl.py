from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File

Snpgenie_Pl_V0_1_0 = CommandToolBuilder(tool="snpgenie.pl", base_command=["snpgenie.pl"], inputs=[ToolInput(tag="in_fast_a_file", input_type=Boolean(optional=True), prefix="--fastafile", doc=InputDocumentation(doc=": FASTA file containing exactly one (1) reference sequence.\nAll positions in the SNP report must correspond to one position in this\nsequence. DEFAULT: .fa/.fasta file in the working directory.")), ToolInput(tag="in_gtf_file", input_type=Boolean(optional=True), prefix="--gtffile", doc=InputDocumentation(doc=": tab-delimited Gene Transfer Format file containing non-redundant\nrecords for all 'CDS' elements (i.e., open reading frames, or ORFs)\npresent in the SNP report(s). DEFAULT: .gtf file in the working directory.")), ToolInput(tag="in_snp_report", input_type=Boolean(optional=True), prefix="--snpreport", doc=InputDocumentation(doc=": CLC, Geneious, or VCF file containing SNP data with respect to\npositions in the provided reference sequence (FASTA). If VCF, the exact\nformat must be specified (see documentation). DEFAULT: .txt or .vcf file(s)\nin the working directory.")), ToolInput(tag="in_vcf_format", input_type=Boolean(optional=True), prefix="--vcfformat", doc=InputDocumentation(doc="(REQUIRED IF VCF): format ID of the VCF file (see documentation).\nFormat 4 is the only option which provides support for concurrent analysis\nof multiple samples.")), ToolInput(tag="in_min_freq", input_type=Boolean(optional=True), prefix="--minfreq", doc=InputDocumentation(doc=": minimum SNP frequency to consider when calculating diversity measures;\nuseful if SNPs below a certain frequency are likely to be errors.\nDEFAULT: 0")), ToolInput(tag="in_workdir", input_type=Boolean(optional=True), prefix="--workdir", doc=InputDocumentation(doc="(OPTIONAL): user-specified working directory name. DEFAULT: current\nworking directory.")), ToolInput(tag="in_outdir", input_type=File(optional=True), prefix="--outdir", doc=InputDocumentation(doc="(OPTIONAL): user-specified output directory name. Unless a full path,\nis given, the directory will be created in the working directory.\nDEFAULT: SNPGenie_Results (in working directory)."))], outputs=[ToolOutput(tag="out_outdir", output_type=File(optional=True), selector=InputSelector(input_to_select="in_outdir", type_hint=File()), doc=OutputDocumentation(doc="(OPTIONAL): user-specified output directory name. Unless a full path,\nis given, the directory will be created in the working directory.\nDEFAULT: SNPGenie_Results (in working directory)."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Snpgenie_Pl_V0_1_0().translate("wdl", allow_empty_container=True)

