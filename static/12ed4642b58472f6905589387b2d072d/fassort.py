from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean

Fassort_V0_1_0 = CommandToolBuilder(tool="fassort", base_command=["fassort"], inputs=[ToolInput(tag="in_description", input_type=Boolean(optional=True), prefix="--description", doc=InputDocumentation(doc="Sort sequence records by their descriptions. If used in\ncombination with the -x, --regex option, sort records by values\nof a regex capture applied to their descriptions.")), ToolInput(tag="in_sequence", input_type=Boolean(optional=True), prefix="--sequence", doc=InputDocumentation(doc="Sort sequence records by their sequences. If used in combination\nwith the -x, --regex option, sort records by values of a regex\ncapture applied to their sequences.")), ToolInput(tag="in_sort_sequence_records_values", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc="[int], --field=[int]\nSort sequence records by values at a specific field in sequence\ndescriptions. With this option, the description is split into\nfields using strings of white space as field delimiters (the\ndefault Perl behavior for splitting lines of data into fields).\nThis option takes a mandatory positive integer option argument\ngiving the index for which field the regex should query.\nOne-based indexing is used, so the first field after the\nsequence identifier has index 1. As standard in Perl, negative\nindices count backwards from the last field in the description;\nfield '-1' is the last field, '-2' is the second-to-last etc.\nSequence records for which the specified field does not exist\nwill sort on a null key.")), ToolInput(tag="in_use_regex_regex", input_type=Boolean(optional=True), prefix="-S", doc=InputDocumentation(doc="[regex], --split-on-regex=[regex]\nUse regex <regex> to split descriptions for the -f option\ninstead of the perl default (which splits on one or more\nwhitespace characters). Special characters must be quoted to\nprotect them from the shell.")), ToolInput(tag="in_sort_sequence_named", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="[string], --tag=[string]\nSort sequence records by values of a named tag in the\ndescription. Name-value pairs in the description are expected to\nhave the format 'name:value' as generated by FAST tools (such as\nfaslen) or 'name=value' as common in General Feature Format. The\n'name' must contain only characters from the set [a-zA-Z0-9_-].\nThe 'value' is any string of non-whitespace characters. Sequence\nrecords for which the specified tag does not exist will sort on\na null key.")), ToolInput(tag="in_sort_sequence_regex", input_type=Boolean(optional=True), prefix="-x", doc=InputDocumentation(doc="[regex], --regex=[regex]\nSort sequence records by values of a regex capture applied to\nidentifers (by default), descriptions (in combination with the\n-d option), or sequences (in combination with the -s option).\nThe format of the regex is a perl regular expression that must\ncontain exactly one 'capture buffer' indicated by a pair or\nparentheses. The value captured in this buffer is the sort key.\nSequence records that do not match the regex will sort on a null\nkey.")), ToolInput(tag="in_reverse", input_type=Boolean(optional=True), prefix="--reverse", doc=InputDocumentation(doc="Reverse the result of comparisons so that greater keys come\nfirst.")), ToolInput(tag="in_numeric", input_type=Boolean(optional=True), prefix="--numeric", doc=InputDocumentation(doc="Compare keys by their string numerical value.")), ToolInput(tag="in_man", input_type=Boolean(optional=True), prefix="--man", doc=InputDocumentation(doc="Print the manual page and exit.")), ToolInput(tag="in_log", input_type=Boolean(optional=True), prefix="--log", doc=InputDocumentation(doc="Creates, or appends to, a generic FAST logfile in the current\nworking directory. The logfile records date/time of execution,\nfull command with options and arguments, and an optional\ncomment.")), ToolInput(tag="in_use_name_default", input_type=Boolean(optional=True), prefix="-L", doc=InputDocumentation(doc="[string], --logname=[string]\nUse [string] as the name of the logfile. Default is\n'FAST.log.txt'.")), ToolInput(tag="in_include_comment_logfile", input_type=Boolean(optional=True), prefix="-C", doc=InputDocumentation(doc="[string], --comment=[string]\nInclude comment [string] in logfile. No comment is saved by\ndefault.")), ToolInput(tag="in_format", input_type=Boolean(optional=True), prefix="--format", doc=InputDocumentation(doc="=[format]\nUse alternative format for input. See man page for 'fasconvert'\nfor allowed formats. This is for convenience; the FAST tools are\ndesigned to exchange data in Fasta format, and 'fasta' is the\ndefault format for this tool.")), ToolInput(tag="in_specify_type_sequence", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="[dna|rna|protein], --moltype=[dna|rna|protein]\nSpecify the type of sequence on input (should not be needed in\nmost cases, but sometimes Bioperl cannot guess and complains\nwhen processing data).")), ToolInput(tag="in_fast_q", input_type=Boolean(optional=True), prefix="--fastq", doc=InputDocumentation(doc="Use fastq format as input and output.\n"))], outputs=[], container="quay.io/biocontainers/perl-fast:1.06--pl526_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Fassort_V0_1_0().translate("wdl")

