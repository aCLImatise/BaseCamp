!Command
command:
- AMAS.py
- concat
positional:
- !Positional
  optional: false
  position: 0
  name: check
  description: -c CORES, --cores CORES
named:
- !Flag
  optional: true
  synonyms:
  - -p
  - --concat-part
  description: "File name for th0e concatenated alignment partitions.\nDefault: 'partitions.txt'"
  args: !SimpleFlagArg
    name: CONCAT_PART
- !Flag
  optional: true
  synonyms:
  - -t
  - --concat-out
  description: "File name for the concatenated alignment. Default:\n'concatenated.out'"
  args: !SimpleFlagArg
    name: CONCAT_OUT
- !Flag
  optional: true
  synonyms:
  - -u
  - --out-format
  description: 'File format for the output alignment. Default: fasta'
  args: !ChoiceFlagArg
    choices: !!set
      fasta:
      phylip-int:
      phylip:
      nexus-int:
      nexus:
- !Flag
  optional: true
  synonyms:
  - -e
  - --check-align
  description: 'Check if input sequences are aligned. Default: no'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -i
  - --in-files
  description: "Alignment files to be taken as input. You can specify\nmultiple files\
    \ using wildcards (e.g. --in-files\n*fasta)"
  args: !RepeatFlagArg
    name: IN_FILES
- !Flag
  optional: true
  synonyms:
  - -f
  - --in-format
  description: The format of input alignment
  args: !ChoiceFlagArg
    choices: !!set
      fasta:
      phylip-int:
      phylip:
      nexus-int:
      nexus:
- !Flag
  optional: true
  synonyms:
  - -d
  - --data-type
  description: "Type of data\n"
  args: !ChoiceFlagArg
    choices: !!set
      dna:
      aa:
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "usage: AMAS.py [-h] [-p CONCAT_PART] [-t CONCAT_OUT]\n               [-u\
  \ {fasta,phylip,nexus,phylip-int,nexus-int}] [-e] [-c CORES]\n               -i\
  \ IN_FILES [IN_FILES ...] -f\n               {fasta,phylip,nexus,phylip-int,nexus-int}\
  \ -d {aa,dna}\n\nConcatenate input alignments\n\noptional arguments:\n  -h, --help\
  \            show this help message and exit\n  -p CONCAT_PART, --concat-part CONCAT_PART\n\
  \                        File name for th0e concatenated alignment partitions.\n\
  \                        Default: 'partitions.txt'\n  -t CONCAT_OUT, --concat-out\
  \ CONCAT_OUT\n                        File name for the concatenated alignment.\
  \ Default:\n                        'concatenated.out'\n  -u {fasta,phylip,nexus,phylip-int,nexus-int},\
  \ --out-format {fasta,phylip,nexus,phylip-int,nexus-int}\n                     \
  \   File format for the output alignment. Default: fasta\n  -e, --check-align  \
  \   Check if input sequences are aligned. Default: no\n                        check\n\
  \  -c CORES, --cores CORES\n                        Number of cores used. Default:\
  \ 1\n\nrequired arguments:\n  -i IN_FILES [IN_FILES ...], --in-files IN_FILES [IN_FILES\
  \ ...]\n                        Alignment files to be taken as input. You can specify\n\
  \                        multiple files using wildcards (e.g. --in-files\n     \
  \                   *fasta)\n  -f {fasta,phylip,nexus,phylip-int,nexus-int}, --in-format\
  \ {fasta,phylip,nexus,phylip-int,nexus-int}\n                        The format\
  \ of input alignment\n  -d {aa,dna}, --data-type {aa,dna}\n                    \
  \    Type of data\n"
generated_using:
- --help
docker_image:
