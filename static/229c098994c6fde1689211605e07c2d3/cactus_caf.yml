!Command
command:
- cactus_caf
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -a
  - --logLevel
  description: ': Set the log level'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -b
  - --alignments
  description: ': The input alignments file'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -c
  - --cactusDisk
  description: ': The location of the flower disk directory'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -d
  - --lastzArguments
  description: ': Lastz arguments'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -i
  - --annealingRounds
  description: '(array of ints, each greater than or equal to 1) : The rounds of annealing'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -o
  - --deannealingRounds
  description: '(array of ints, each greater than or equal to 1 and each greater than
    the last) : The rounds of deannealing'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -k
  - --trim
  description: '(array of integers, each greater or equal to zero) : An array giving
    the trim for each annealing round. If the array is shorter than the annealing
    rounds then a trim value of 0 is assumed for annealing rounds greater than the
    length of the trim array'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -m
  - --minimumTreeCoverage
  description: ': (float [0.0, 1.0]) Minimum tree coverage proportion of a block to
    be included in the graph'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -n
  - --blockTrim
  description: ': (int >= 0) The number of bases to trim from the ends of each block
    in a chain before accepting, this filtering is done after choosing the length
    of chains'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -p
  - --minimumDegree
  description: ': (int >= 0) Minimum number of sequences in a block to be included
    in the output graph'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -q
  - --minimumIngroupDegree
  description: ': Number of ingroup sequences required in a block.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -r
  - --minimumOutgroupDegree
  description: ': Number of outgroup sequences required in a block.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -t
  - --alignmentFilter
  description: ": Choose alignment filter:\nnone: no filtering,\nsingleCopyOutgroup:\
    \ never merge two outgroup segments together\nrelaxedSingleCopyOutgroup: never\
    \ merge two outgroup segments together if they are both already aligned to something\
    \ else\nsingleCopy: Never align two segments from the same genome together\nrelaxedSingleCopy:\
    \ Never align two segments from the same genome together if they are both already\
    \ aligned to something else\nfilterSecondariesByMultipleSpecies: Apply no filtering\
    \ to primary alignments, for secondary alignments do not sort them and filter\
    \ them so that no two blocks are merged that each already contain multiple species."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -v
  - --minimumSequenceLengthForBlast
  description: ': The minimum length of a sequence to include when blasting'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -w
  - --maxAdjacencyComponentSizeRatio
  description: ': The components equal or less than log(n) * of this size will be
    allowed in the cactus. Used to fight giant components.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -x
  - --constraints
  description: ': A file of alignments that will be enforced upon the cactus'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -y
  - --minLengthForChromosome
  description: ': The minimum length required for a sequence to be considered as a
    candidate to be chromosome.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -z
  - --proportionOfUnalignedBasesForNewChromosome
  description: ': Proportion of aligned bases to be not contained in an existing chromosome
    to cause generation of a new chromosome.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -A
  - --maximumMedianSequenceLengthBetweenLinkedEnds
  description: ': Maximum nedian length of sequences between linked ends to allow
    before breaking chains.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -B
  - --realign
  description: ': Realign the lastz hits.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -C
  - --realignArguments
  description: ': Arguments for realignment.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -D
  - --phylogenyNumTrees
  description: ': Number of trees to sample when removing ancient homologies. (default
    1)'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -E
  - --phylogenyRootingMethod
  description: ": Method of rooting trees: either 'outgroupBranch', 'longestBranch',\
    \ or 'bestRecon' (default outgroupBranch)."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -F
  - --phylogenyScoringMethod
  description: ": Method of deciding which sampled tree is best: either 'reconCost'\
    \ or ."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -G
  - --phylogenyBreakpointScalingFactor
  description: ': scale breakpoint distance by this factor while building phylogenies.
    Default 0.0.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -H
  - --phylogenySkipSingleCopyBlocks
  description: ': Skip building trees for single-copy blocks. Default is not to skip.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -I
  - --phylogenyMaxBaseDistance
  description: ': maximum distance in bases to walk outside of a block gathering feature
    columns'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -J
  - --phylogenyMaxBlockDistance
  description: ': maximum distance in blocks to walk outside of a block gathering
    feature columns'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -K
  - --phylogenyDebugFile
  description: ': path to file to dump block trees and partitions to'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -L
  - --phylogenyKeepSingleDegreeBlocks
  description: ': when splitting blocks, allow blocks to be created of only one ingroup.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -M
  - --phylogenyTreeBuildingMethod
  description: ': neighbor joining or neighbor-joining guided by the species tree'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -P
  - --referenceEventHeader
  description: ': name of reference event (necessary for phylogeny estimation)'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -Q
  - --phylogenyDoSplitsWithSupportHigherThanThisAllAtOnce
  description: ': assume that this support value or greater means a very confident
    split, and that they will not be changed by the greedy split algorithm. Do all
    these very confident splits at once, to save a lot of computation time.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -R
  - --numTreeBuildingThreads
  description: ': Number of threads in the tree-building thread pool. Must be greater
    than 1. Default 2.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -S
  - --phylogeny
  description: ': Run the tree-building code and split ancient homologies away.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -T
  - --minimumBlockHomologySupport
  description: ': Minimum fraction of possible homologies required not to be considered
    a transitively collapsed megablock.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -U
  - --phylogenyNucleotideScalingFactor
  description: ': Weighting for the nucleotide information in the distance matrix
    used to build each tree.'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -V
  - --minimumBlockDegreeToCheckSupport
  description: ': Minimum degree required to be checked for being a megablock.'
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: ': Print this help screen'
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "cactus_caf, version 0.2\n-a --logLevel : Set the log level\n-b --alignments\
  \ : The input alignments file\n-c --cactusDisk : The location of the flower disk\
  \ directory\n-d --lastzArguments : Lastz arguments\n-h --help : Print this help\
  \ screen\n-i --annealingRounds (array of ints, each greater than or equal to 1)\
  \ : The rounds of annealing\n-o --deannealingRounds (array of ints, each greater\
  \ than or equal to 1 and each greater than the last) : The rounds of deannealing\n\
  -k --trim (array of integers, each greater or equal to zero) : An array giving the\
  \ trim for each annealing round. If the array is shorter than the annealing rounds\
  \ then a trim value of 0 is assumed for annealing rounds greater than the length\
  \ of the trim array\n-m --minimumTreeCoverage : (float [0.0, 1.0]) Minimum tree\
  \ coverage proportion of a block to be included in the graph\n-n --blockTrim : (int\
  \ >= 0) The number of bases to trim from the ends of each block in a chain before\
  \ accepting, this filtering is done after choosing the length of chains\n-p --minimumDegree\
  \ : (int >= 0) Minimum number of sequences in a block to be included in the output\
  \ graph\n-q --minimumIngroupDegree : Number of ingroup sequences required in a block.\n\
  -r --minimumOutgroupDegree : Number of outgroup sequences required in a block.\n\
  -t --alignmentFilter : Choose alignment filter:\n                       none: no\
  \ filtering,\n                       singleCopyOutgroup: never merge two outgroup\
  \ segments together\n                       relaxedSingleCopyOutgroup: never merge\
  \ two outgroup segments together if they are both already aligned to something else\n\
  \                       singleCopy: Never align two segments from the same genome\
  \ together\n                       relaxedSingleCopy: Never align two segments from\
  \ the same genome together if they are both already aligned to something else\n\
  \                       filterSecondariesByMultipleSpecies: Apply no filtering to\
  \ primary alignments, for secondary alignments do not sort them and filter them\
  \ so that no two blocks are merged that each already contain multiple species.\n\
  -v --minimumSequenceLengthForBlast : The minimum length of a sequence to include\
  \ when blasting\n-w --maxAdjacencyComponentSizeRatio : The components equal or less\
  \ than log(n) * of this size will be allowed in the cactus. Used to fight giant\
  \ components.\n-x --constraints : A file of alignments that will be enforced upon\
  \ the cactus\n-y --minLengthForChromosome : The minimum length required for a sequence\
  \ to be considered as a candidate to be chromosome.\n-z --proportionOfUnalignedBasesForNewChromosome\
  \ : Proportion of aligned bases to be not contained in an existing chromosome to\
  \ cause generation of a new chromosome.\n-A --maximumMedianSequenceLengthBetweenLinkedEnds\
  \ : Maximum nedian length of sequences between linked ends to allow before breaking\
  \ chains.\n-B --realign : Realign the lastz hits.\n-C --realignArguments : Arguments\
  \ for realignment.\n-D --phylogenyNumTrees : Number of trees to sample when removing\
  \ ancient homologies. (default 1)\n-E --phylogenyRootingMethod : Method of rooting\
  \ trees: either 'outgroupBranch', 'longestBranch', or 'bestRecon' (default outgroupBranch).\n\
  -F --phylogenyScoringMethod : Method of deciding which sampled tree is best: either\
  \ 'reconCost' or .\n-G --phylogenyBreakpointScalingFactor : scale breakpoint distance\
  \ by this factor while building phylogenies. Default 0.0.\n-H --phylogenySkipSingleCopyBlocks\
  \ : Skip building trees for single-copy blocks. Default is not to skip.\n-I --phylogenyMaxBaseDistance\
  \ : maximum distance in bases to walk outside of a block gathering feature columns\n\
  -J --phylogenyMaxBlockDistance : maximum distance in blocks to walk outside of a\
  \ block gathering feature columns\n-K --phylogenyDebugFile : path to file to dump\
  \ block trees and partitions to\n-L --phylogenyKeepSingleDegreeBlocks : when splitting\
  \ blocks, allow blocks to be created of only one ingroup.\n-M --phylogenyTreeBuildingMethod\
  \ : neighbor joining or neighbor-joining guided by the species tree\n-N --phylogenyCostPerLossPerBase\
  \ : join cost per dup per base for guided neighbor-joining (will be multiplied by\
  \ maxBaseDistance)\n-O --phylogenyCostPerLossPerBase : join cost per loss per base\
  \ for guided neighbor-joining (will be multiplied by maxBaseDistance)\n-P --referenceEventHeader\
  \ : name of reference event (necessary for phylogeny estimation)\n-Q --phylogenyDoSplitsWithSupportHigherThanThisAllAtOnce\
  \ : assume that this support value or greater means a very confident split, and\
  \ that they will not be changed by the greedy split algorithm. Do all these very\
  \ confident splits at once, to save a lot of computation time.\n-R --numTreeBuildingThreads\
  \ : Number of threads in the tree-building thread pool. Must be greater than 1.\
  \ Default 2.\n-S --phylogeny : Run the tree-building code and split ancient homologies\
  \ away.\n-T --minimumBlockHomologySupport: Minimum fraction of possible homologies\
  \ required not to be considered a transitively collapsed megablock.\n-U --phylogenyNucleotideScalingFactor:\
  \ Weighting for the nucleotide information in the distance matrix used to build\
  \ each tree.\n-V --minimumBlockDegreeToCheckSupport: Minimum degree required to\
  \ be checked for being a megablock.\n"
generated_using:
- --help
docker_image:
