from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Directory, Array, Int

Hicquickqc_V0_1_0 = CommandToolBuilder(tool="hicQuickQC", base_command=["hicQuickQC"], inputs=[ToolInput(tag="in_restriction_cut_file", input_type=File(optional=True), prefix="--restrictionCutFile", doc=InputDocumentation(doc="file [BED file ...]")), ToolInput(tag="in_sam_files", input_type=String(optional=True), prefix="--samFiles", doc=InputDocumentation(doc="sam files two sam files, -s two sam files two sam files\nThe two PE alignment sam files to process. (default:\nNone)")), ToolInput(tag="in_qc_folder", input_type=Directory(optional=True), prefix="--QCfolder", doc=InputDocumentation(doc="Path of folder to save the quality control data of the\nmatrix. The log files produced this way can be loaded\ninto `hicQC` in order to compare the quality of\nmultiple Hi-C libraries. (default: None)")), ToolInput(tag="in_restriction_sequence", input_type=Array(t=String(), optional=True), prefix="--restrictionSequence", doc=InputDocumentation(doc="Sequence of the restriction site, if multiple are\nused, please list them space seperated. If a dangling\nsequence is listed at the same time, please preserve\nthe same order. (default: None)")), ToolInput(tag="in_dangling_sequence", input_type=Array(t=String(), optional=True), prefix="--danglingSequence", doc=InputDocumentation(doc="Sequence left by the restriction enzyme after cutting,\nif multiple are used, please list them space seperated\nand preserve the order. Each restriction enzyme\nrecognizes a different DNA sequence and, after\ncutting, they leave behind a specific 'sticky' end or\ndangling end sequence. For example, for HindIII the\nrestriction site is AAGCTT and the dangling end is\nAGCT. For DpnII, the restriction site and dangling end\nsequence are the same: GATC. This information is\neasily found on the description of the restriction\nenzyme. The dangling sequence is used to classify and\nreport reads whose 5' end starts with such sequence as\ndangling-end reads. A significant portion of dangling-\nend reads in a sample are indicative of a problem with\nthe re-ligation step of the protocol. (default: None)")), ToolInput(tag="in_lines", input_type=Int(optional=True), prefix="--lines", doc=InputDocumentation(doc="Number of lines to consider for the QC test run\n(Default: 1000000).")), ToolInput(tag="in_sam", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_files", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_two", input_type=String(), position=2, doc=InputDocumentation(doc=""))], outputs=[], container="quay.io/biocontainers/hicexplorer:3.6--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Hicquickqc_V0_1_0().translate("wdl")

