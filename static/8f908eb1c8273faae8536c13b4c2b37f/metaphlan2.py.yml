!Command
command:
- metaphlan2.py
positional:
- !Positional
  optional: false
  position: 0
  name: INPUT_FILE
  description: "the input file can be:\n* a fastq file containing metagenomic reads\n\
    OR\n* a BowTie2 produced SAM file.\nOR\n* an intermediary mapping file of the\
    \ metagenome generated by a previous MetaPhlAn run\nIf the input file is missing,\
    \ the script assumes that the input is provided using the standard\ninput, or\
    \ named pipes.\nIMPORTANT: the type of input needs to be specified with --input_type"
- !Positional
  optional: false
  position: 1
  name: OUTPUT_FILE
  description: "the tab-separated output file of the predicted taxon relative abundances\
    \ \n[stdout if not present]"
named:
- !Flag
  optional: true
  synonyms:
  - --input_type.
  description: 'steps: first apply BowTie2 and then feed MetaPhlAn2 with the obtained
    sam:'
  args: !SimpleFlagArg
    name: Two
- !Flag
  optional: true
  synonyms:
  - --input_type
  description: "set whether the input is the multifasta file of metagenomic reads\
    \ or\nthe SAM file of the mapping of the reads against the MetaPhlAn db.\n[default\
    \ 'automatic', i.e. the script will try to guess the input format]"
  args: !ChoiceFlagArg
    choices: !!set
      sam:
      multifasta:
      fasta:
      multifastq:
      bowtie2out:
      fastq:
- !Flag
  optional: true
  synonyms:
  - --mpa_pkl
  description: The metadata pickled MetaPhlAn file [deprecated]
  args: !SimpleFlagArg
    name: MPA_PKL
- !Flag
  optional: true
  synonyms:
  - --force
  description: Force profiling of the input file by removing the bowtie2out file
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --bowtie2db
  description: Folder containing the MetaPhlAn database. Used if --input_type is fastq,
    fasta, multifasta, or multifastq [default /usr/local/bin/metaphlan_databases]
  args: !SimpleFlagArg
    name: METAPHLAN_BOWTIE2_DB
- !Flag
  optional: true
  synonyms:
  - -x
  - --index
  description: "Specify the id of the database version to use. If \"latest\", MetaPhlAn2\
    \ will get the latest version. If the database\nfiles are not found on the local\
    \ MetaPhlAn2 installation they\nwill be automatically downloaded [default latest]"
  args: !SimpleFlagArg
    name: INDEX
- !Flag
  optional: true
  synonyms:
  - --bt2_ps
  description: "presets\nPresets options for BowTie2 (applied only when a multifasta\
    \ file is provided)\nThe choices enabled in MetaPhlAn are:\n* sensitive\n* very-sensitive\n\
    * sensitive-local\n* very-sensitive-local\n[default very-sensitive]"
  args: !SimpleFlagArg
    name: BowTie2
- !Flag
  optional: true
  synonyms:
  - --bowtie2_exe
  description: Full path and name of the BowTie2 executable. This option allowsMetaPhlAn
    to reach the executable even when it is not in the system PATH or the system PATH
    is unreachable
  args: !SimpleFlagArg
    name: BOWTIE2_EXE
- !Flag
  optional: true
  synonyms:
  - --bowtie2_build
  description: Full path to the bowtie2-build command to use, deafult assumes that
    'bowtie2-build is present in the system path
  args: !SimpleFlagArg
    name: BOWTIE2_BUILD
- !Flag
  optional: true
  synonyms:
  - --bowtie2out
  description: The file for saving the output of BowTie2
  args: !SimpleFlagArg
    name: FILE_NAME
- !Flag
  optional: true
  synonyms:
  - --min_mapq_val
  description: Minimum mapping quality value (MAPQ)
  args: !SimpleFlagArg
    name: MIN_MAPQ_VAL
- !Flag
  optional: true
  synonyms:
  - --no_map
  description: Avoid storing the --bowtie2out map file
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --tmp_dir
  description: The folder used to store temporary files [default is the OS dependent
    tmp dir]
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --tax_lev
  description: "The taxonomic level for the relative abundance output:\n'a' : all\
    \ taxonomic levels\n'k' : kingdoms\n'p' : phyla only\n'c' : classes only\n'o'\
    \ : orders only\n'f' : families only\n'g' : genera only\n's' : species only\n\
    [default 'a']"
  args: !SimpleFlagArg
    name: TAXONOMIC_LEVEL
- !Flag
  optional: true
  synonyms:
  - --min_cu_len
  description: "minimum total nucleotide length for the markers in a clade for\nestimating\
    \ the abundance without considering sub-clade abundances\n[default 2000]"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --min_alignment_len
  description: "The sam records for aligned reads with the longest subalignment\n\
    length smaller than this threshold will be discarded.\n[default None]"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --add_viruses
  description: Allow the profiling of viral organisms
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --ignore_eukaryotes
  description: Do not profile eukaryotic organisms
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --ignore_bacteria
  description: Do not profile bacterial organisms
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --ignore_archaea
  description: Do not profile archeal organisms
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --stat_q
  description: "Quantile value for the robust average\n[default 0.2]"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --perc_nonzero
  description: "Percentage of markers with a non zero relative abundance for misidentify\
    \ a species\n[default 0.33]"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --ignore_markers
  description: File containing a list of markers to ignore.
  args: !SimpleFlagArg
    name: IGNORE_MARKERS
- !Flag
  optional: true
  synonyms:
  - --avoid_disqm
  description: "Deactivate the procedure of disambiguating the quasi-markers based\
    \ on the\nmarker abundance pattern found in the sample. It is generally recommended\n\
    to keep the disambiguation procedure in order to minimize false positives"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --stat
  description: "EXPERIMENTAL! Statistical approach for converting marker abundances\
    \ into clade abundances\n'avg_g'  : clade global (i.e. normalizing all markers\
    \ together) average\n'avg_l'  : average of length-normalized marker counts\n'tavg_g'\
    \ : truncated clade global average at --stat_q quantile\n'tavg_l' : trunated average\
    \ of length-normalized marker counts (at --stat_q)\n'wavg_g' : winsorized clade\
    \ global average (at --stat_q)\n'wavg_l' : winsorized average of length-normalized\
    \ marker counts (at --stat_q)\n'med'    : median of length-normalized marker counts\n\
    [default tavg_g]"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -t
  description: "TYPE      Type of analysis to perform:\n* rel_ab: profiling a metagenomes\
    \ in terms of relative abundances\n* rel_ab_w_read_stats: profiling a metagenomes\
    \ in terms of relative abundances and estimate the number of reads coming from\
    \ each clade.\n* reads_map: mapping from reads to clades (only reads hitting a\
    \ marker)\n* clade_profiles: normalized marker counts for clades with at least\
    \ a non-null marker\n* marker_ab_table: normalized marker counts (only when >\
    \ 0.0 and normalized by metagenome size if --nreads is specified)\n* marker_counts:\
    \ non-normalized marker counts [use with extreme caution]\n* marker_pres_table:\
    \ list of markers present in the sample (threshold at 1.0 if not differently specified\
    \ with --pres_th\n[default 'rel_ab']"
  args: !SimpleFlagArg
    name: ANALYSIS
- !Flag
  optional: true
  synonyms:
  - --nreads
  description: "The total number of reads in the original metagenome. It is used only\
    \ when\n-t marker_table is specified for normalizing the length-normalized counts\n\
    with the metagenome size as well. No normalization applied if --nreads is not\n\
    specified"
  args: !SimpleFlagArg
    name: NUMBER_OF_READS
- !Flag
  optional: true
  synonyms:
  - --pres_th
  description: Threshold for calling a marker present by the -t marker_pres_table
    option
  args: !SimpleFlagArg
    name: PRESENCE_THRESHOLD
- !Flag
  optional: true
  synonyms:
  - --clade
  description: The clade for clade_specific_strain_tracker analysis
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --min_ab
  description: The minimum percentage abundace for the clade in the clade_specific_strain_tracker
    analysis
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -o
  description: "file, --output_file output file\nThe output file (if not specified\
    \ as positional argument)"
  args: !SimpleFlagArg
    name: output
- !Flag
  optional: true
  synonyms:
  - --sample_id_key
  description: Specify the sample ID key for this analysis. Defaults to '#SampleID'.
  args: !SimpleFlagArg
    name: name
- !Flag
  optional: true
  synonyms:
  - --use_group_representative
  description: Use a species as representative for species groups.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --sample_id
  description: Specify the sample ID for this analysis. Defaults to 'Metaphlan2_Analysis'.
  args: !SimpleFlagArg
    name: value
- !Flag
  optional: true
  synonyms:
  - -s
  - --samout
  description: The sam output file
  args: !SimpleFlagArg
    name: sam_output_file
- !Flag
  optional: true
  synonyms:
  - --legacy-output
  description: Old two columns output
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --CAMI_format_output
  description: Report the profiling using the CAMI output format
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --unknown_estimation
  description: Ignore estimation of reads mapping to unkwnown clades
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --biom
  - --biom_output_file
  description: 'If requesting biom file output: The name of the output file in biom
    format'
  args: !SimpleFlagArg
    name: biom_output
- !Flag
  optional: true
  synonyms:
  - --mdelim
  - --metadata_delimiter_char
  description: 'Delimiter for bug metadata: - defaults to pipe. e.g. the pipe in k__Bacteria|p__Proteobacteria'
  args: !SimpleFlagArg
    name: mdelim
- !Flag
  optional: true
  synonyms:
  - --nproc
  description: The number of CPUs to use for parallelizing the mapping [default 4]
  args: !SimpleFlagArg
    name: N
- !Flag
  optional: true
  synonyms:
  - --install
  description: Only checks if the MetaPhlAn2 DB is installed and installs it if not.
    All other parameters are ignored.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --force_download
  description: Force the re-download of the latest MetaPhlAn2 database.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --read_min_len
  description: Specify the minimum length of the reads to be considered when parsing
    the input file with 'read_fastx.py' script, default value is 70
  args: !SimpleFlagArg
    name: READ_MIN_LEN
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - -v
  - --version
  description: Prints the current MetaPhlAn version and exit
  args: !EmptyFlagArg {}
help_text: "usage: metaphlan2.py --input_type\n                     {fastq,fasta,multifasta,multifastq,bowtie2out,sam}\n\
  \                     [--mpa_pkl MPA_PKL] [--force]\n                     [--bowtie2db\
  \ METAPHLAN_BOWTIE2_DB] [-x INDEX]\n                     [--bt2_ps BowTie2 presets]\
  \ [--bowtie2_exe BOWTIE2_EXE]\n                     [--bowtie2_build BOWTIE2_BUILD]\
  \ [--bowtie2out FILE_NAME]\n                     [--min_mapq_val MIN_MAPQ_VAL] [--no_map]\
  \ [--tmp_dir]\n                     [--tax_lev TAXONOMIC_LEVEL] [--min_cu_len]\n\
  \                     [--min_alignment_len] [--add_viruses]\n                  \
  \   [--ignore_eukaryotes] [--ignore_bacteria]\n                     [--ignore_archaea]\
  \ [--stat_q] [--perc_nonzero]\n                     [--ignore_markers IGNORE_MARKERS]\
  \ [--avoid_disqm]\n                     [--stat] [-t ANALYSIS TYPE] [--nreads NUMBER_OF_READS]\n\
  \                     [--pres_th PRESENCE_THRESHOLD] [--clade] [--min_ab]\n    \
  \                 [-o output file] [--sample_id_key name]\n                    \
  \ [--use_group_representative] [--sample_id value]\n                     [-s sam_output_file]\
  \ [--legacy-output]\n                     [--CAMI_format_output] [--unknown_estimation]\n\
  \                     [--biom biom_output] [--mdelim mdelim] [--nproc N]\n     \
  \                [--install] [--force_download]\n                     [--read_min_len\
  \ READ_MIN_LEN] [-v] [-h]\n                     [INPUT_FILE] [OUTPUT_FILE]\n\nDESCRIPTION\n\
  \ MetaPhlAn version 2.96.1 (02 Feb 2020): \n METAgenomic PHyLogenetic ANalysis for\
  \ metagenomic taxonomic profiling.\n\nAUTHORS: Nicola Segata (nicola.segata@unitn.it),\
  \ Duy Tin Truong, Francesco Asnicar (f.asnicar@unitn.it), Francesco Beghini (francesco.beghini@unitn.it)\n\
  \nCOMMON COMMANDS\n\n We assume here that metaphlan2.py is in the system path and\
  \ that mpa_dir bash variable contains the\n main MetaPhlAn folder. Also BowTie2\
  \ should be in the system path with execution and read\n permissions, and Perl should\
  \ be installed)\n\n========== MetaPhlAn 2 clade-abundance estimation =================\
  \ \n\nThe basic usage of MetaPhlAn 2 consists in the identification of the clades\
  \ (from phyla to species and \nstrains in particular cases) present in the metagenome\
  \ obtained from a microbiome sample and their \nrelative abundance. This correspond\
  \ to the default analysis type (-t rel_ab).\n\n*  Profiling a metagenome from raw\
  \ reads:\n$ metaphlan2.py metagenome.fastq --input_type fastq -o profiled_metagenome.txt\n\
  \n*  You can take advantage of multiple CPUs and save the intermediate BowTie2 output\
  \ for re-running\n   MetaPhlAn extremely quickly:\n$ metaphlan2.py metagenome.fastq\
  \ --bowtie2out metagenome.bowtie2.bz2 --nproc 5 --input_type fastq -o profiled_metagenome.txt\n\
  \n*  If you already mapped your metagenome against the marker DB (using a previous\
  \ MetaPhlAn run), you\n   can obtain the results in few seconds by using the previously\
  \ saved --bowtie2out file and \n   specifying the input (--input_type bowtie2out):\n\
  $ metaphlan2.py metagenome.bowtie2.bz2 --nproc 5 --input_type bowtie2out -o profiled_metagenome.txt\n\
  \n*  bowtie2out files generated with MetaPhlAn2 versions below 2.9 are not compatibile.\n\
  \   Starting from MetaPhlAn2 2.9, the BowTie2 ouput now includes the size of the\
  \ profiled metagenome.\n   If you want to re-run MetaPhlAn2 using these file you\
  \ should provide the metagenome size via --nreads:\n$ metaphlan2.py metagenome.bowtie2.bz2\
  \ --nproc 5 --input_type bowtie2out --nreads 520000 -o profiled_metagenome.txt\n\
  \n*  You can also provide an externally BowTie2-mapped SAM if you specify this format\
  \ with \n   --input_type. Two steps: first apply BowTie2 and then feed MetaPhlAn2\
  \ with the obtained sam:\n$ bowtie2 --sam-no-hd --sam-no-sq --no-unal --very-sensitive\
  \ -S metagenome.sam -x ${mpa_dir}/metaphlan_databases/mpa_v25_CHOCOPhlAn_201901\
  \ -U metagenome.fastq\n$ metaphlan2.py metagenome.sam --input_type sam -o profiled_metagenome.txt\n\
  \n*  We can also natively handle paired-end metagenomes, and, more generally, metagenomes\
  \ stored in \n  multiple files (but you need to specify the --bowtie2out parameter):\n\
  $ metaphlan2.py metagenome_1.fastq,metagenome_2.fastq --bowtie2out metagenome.bowtie2.bz2\
  \ --nproc 5 --input_type fastq\n\n-------------------------------------------------------------------\
  \ \n \n\n========== Marker level analysis ============================ \n\nMetaPhlAn\
  \ 2 introduces the capability of charachterizing organisms at the strain level using\
  \ non\naggregated marker information. Such capability comes with several slightly\
  \ different flavours and \nare a way to perform strain tracking and comparison across\
  \ multiple samples.\nUsually, MetaPhlAn 2 is first ran with the default -t to profile\
  \ the species present in\nthe community, and then a strain-level profiling can be\
  \ performed to zoom-in into specific species\nof interest. This operation can be\
  \ performed quickly as it exploits the --bowtie2out intermediate \nfile saved during\
  \ the execution of the default analysis type.\n\n*  The following command will output\
  \ the abundance of each marker with a RPK (reads per kilo-base) \n   higher 0.0.\
  \ (we are assuming that metagenome_outfmt.bz2 has been generated before as \n  \
  \ shown above).\n$ metaphlan2.py -t marker_ab_table metagenome_outfmt.bz2 --input_type\
  \ bowtie2out -o marker_abundance_table.txt\n   The obtained RPK can be optionally\
  \ normalized by the total number of reads in the metagenome \n   to guarantee fair\
  \ comparisons of abundances across samples. The number of reads in the metagenome\n\
  \   needs to be passed with the '--nreads' argument\n\n*  The list of markers present\
  \ in the sample can be obtained with '-t marker_pres_table'\n$ metaphlan2.py -t\
  \ marker_pres_table metagenome_outfmt.bz2 --input_type bowtie2out -o marker_abundance_table.txt\n\
  \   The --pres_th argument (default 1.0) set the minimum RPK value to consider a\
  \ marker present\n\n*  The list '-t clade_profiles' analysis type reports the same\
  \ information of '-t marker_ab_table'\n   but the markers are reported on a clade-by-clade\
  \ basis.\n$ metaphlan2.py -t clade_profiles metagenome_outfmt.bz2 --input_type bowtie2out\
  \ -o marker_abundance_table.txt\n\n*  Finally, to obtain all markers present for\
  \ a specific clade and all its subclades, the \n   '-t clade_specific_strain_tracker'\
  \ should be used. For example, the following command\n   is reporting the presence/absence\
  \ of the markers for the B. fragulis species and its strains\n   the optional argument\
  \ --min_ab specifies the minimum clade abundance for reporting the markers\n\n$\
  \ metaphlan2.py -t clade_specific_strain_tracker --clade s__Bacteroides_fragilis\
  \ metagenome_outfmt.bz2 --input_type bowtie2out -o marker_abundance_table.txt\n\n\
  ------------------------------------------------------------------- \n\npositional\
  \ arguments:\n  INPUT_FILE            the input file can be:\n                 \
  \       * a fastq file containing metagenomic reads\n                        OR\n\
  \                        * a BowTie2 produced SAM file. \n                     \
  \   OR\n                        * an intermediary mapping file of the metagenome\
  \ generated by a previous MetaPhlAn run \n                        If the input file\
  \ is missing, the script assumes that the input is provided using the standard \n\
  \                        input, or named pipes.\n                        IMPORTANT:\
  \ the type of input needs to be specified with --input_type\n  OUTPUT_FILE     \
  \      the tab-separated output file of the predicted taxon relative abundances\
  \ \n                        [stdout if not present]\n\nRequired arguments:\n  --input_type\
  \ {fastq,fasta,multifasta,multifastq,bowtie2out,sam}\n                        set\
  \ whether the input is the multifasta file of metagenomic reads or \n          \
  \              the SAM file of the mapping of the reads against the MetaPhlAn db.\n\
  \                        [default 'automatic', i.e. the script will try to guess\
  \ the input format]\n\nMapping arguments:\n  --mpa_pkl MPA_PKL     The metadata\
  \ pickled MetaPhlAn file [deprecated]\n  --force               Force profiling of\
  \ the input file by removing the bowtie2out file\n  --bowtie2db METAPHLAN_BOWTIE2_DB\n\
  \                        Folder containing the MetaPhlAn database. Used if --input_type\
  \ is fastq, fasta, multifasta, or multifastq [default /usr/local/bin/metaphlan_databases]\n\
  \  -x INDEX, --index INDEX\n                        Specify the id of the database\
  \ version to use. If \"latest\", MetaPhlAn2 will get the latest version. If the\
  \ database\n                        files are not found on the local MetaPhlAn2\
  \ installation they\n                        will be automatically downloaded [default\
  \ latest]\n  --bt2_ps BowTie2 presets\n                        Presets options for\
  \ BowTie2 (applied only when a multifasta file is provided)\n                  \
  \      The choices enabled in MetaPhlAn are:\n                         * sensitive\n\
  \                         * very-sensitive\n                         * sensitive-local\n\
  \                         * very-sensitive-local\n                        [default\
  \ very-sensitive]\n  --bowtie2_exe BOWTIE2_EXE\n                        Full path\
  \ and name of the BowTie2 executable. This option allowsMetaPhlAn to reach the executable\
  \ even when it is not in the system PATH or the system PATH is unreachable\n  --bowtie2_build\
  \ BOWTIE2_BUILD\n                        Full path to the bowtie2-build command\
  \ to use, deafult assumes that 'bowtie2-build is present in the system path\n  --bowtie2out\
  \ FILE_NAME\n                        The file for saving the output of BowTie2\n\
  \  --min_mapq_val MIN_MAPQ_VAL\n                        Minimum mapping quality\
  \ value (MAPQ)\n  --no_map              Avoid storing the --bowtie2out map file\n\
  \  --tmp_dir             The folder used to store temporary files [default is the\
  \ OS dependent tmp dir]\n\nPost-mapping arguments:\n  --tax_lev TAXONOMIC_LEVEL\n\
  \                        The taxonomic level for the relative abundance output:\n\
  \                        'a' : all taxonomic levels\n                        'k'\
  \ : kingdoms\n                        'p' : phyla only\n                       \
  \ 'c' : classes only\n                        'o' : orders only\n              \
  \          'f' : families only\n                        'g' : genera only\n    \
  \                    's' : species only\n                        [default 'a']\n\
  \  --min_cu_len          minimum total nucleotide length for the markers in a clade\
  \ for\n                        estimating the abundance without considering sub-clade\
  \ abundances\n                        [default 2000]\n  --min_alignment_len   The\
  \ sam records for aligned reads with the longest subalignment\n                \
  \        length smaller than this threshold will be discarded.\n               \
  \         [default None]\n  --add_viruses         Allow the profiling of viral organisms\n\
  \  --ignore_eukaryotes   Do not profile eukaryotic organisms\n  --ignore_bacteria\
  \     Do not profile bacterial organisms\n  --ignore_archaea      Do not profile\
  \ archeal organisms\n  --stat_q              Quantile value for the robust average\n\
  \                        [default 0.2]\n  --perc_nonzero        Percentage of markers\
  \ with a non zero relative abundance for misidentify a species\n               \
  \         [default 0.33]\n  --ignore_markers IGNORE_MARKERS\n                  \
  \      File containing a list of markers to ignore. \n  --avoid_disqm         Deactivate\
  \ the procedure of disambiguating the quasi-markers based on the \n            \
  \            marker abundance pattern found in the sample. It is generally recommended\
  \ \n                        to keep the disambiguation procedure in order to minimize\
  \ false positives\n  --stat                EXPERIMENTAL! Statistical approach for\
  \ converting marker abundances into clade abundances\n                        'avg_g'\
  \  : clade global (i.e. normalizing all markers together) average\n            \
  \            'avg_l'  : average of length-normalized marker counts\n           \
  \             'tavg_g' : truncated clade global average at --stat_q quantile\n \
  \                       'tavg_l' : trunated average of length-normalized marker\
  \ counts (at --stat_q)\n                        'wavg_g' : winsorized clade global\
  \ average (at --stat_q)\n                        'wavg_l' : winsorized average of\
  \ length-normalized marker counts (at --stat_q)\n                        'med' \
  \   : median of length-normalized marker counts\n                        [default\
  \ tavg_g]\n\nAdditional analysis types and arguments:\n  -t ANALYSIS TYPE      Type\
  \ of analysis to perform: \n                         * rel_ab: profiling a metagenomes\
  \ in terms of relative abundances\n                         * rel_ab_w_read_stats:\
  \ profiling a metagenomes in terms of relative abundances and estimate the number\
  \ of reads coming from each clade.\n                         * reads_map: mapping\
  \ from reads to clades (only reads hitting a marker)\n                         *\
  \ clade_profiles: normalized marker counts for clades with at least a non-null marker\n\
  \                         * marker_ab_table: normalized marker counts (only when\
  \ > 0.0 and normalized by metagenome size if --nreads is specified)\n          \
  \               * marker_counts: non-normalized marker counts [use with extreme\
  \ caution]\n                         * marker_pres_table: list of markers present\
  \ in the sample (threshold at 1.0 if not differently specified with --pres_th\n\
  \                        [default 'rel_ab']\n  --nreads NUMBER_OF_READS\n      \
  \                  The total number of reads in the original metagenome. It is used\
  \ only when \n                        -t marker_table is specified for normalizing\
  \ the length-normalized counts \n                        with the metagenome size\
  \ as well. No normalization applied if --nreads is not \n                      \
  \  specified\n  --pres_th PRESENCE_THRESHOLD\n                        Threshold\
  \ for calling a marker present by the -t marker_pres_table option\n  --clade   \
  \            The clade for clade_specific_strain_tracker analysis\n  --min_ab  \
  \            The minimum percentage abundace for the clade in the clade_specific_strain_tracker\
  \ analysis\n\nOutput arguments:\n  -o output file, --output_file output file\n \
  \                       The output file (if not specified as positional argument)\n\
  \  --sample_id_key name  Specify the sample ID key for this analysis. Defaults to\
  \ '#SampleID'.\n  --use_group_representative\n                        Use a species\
  \ as representative for species groups.\n  --sample_id value     Specify the sample\
  \ ID for this analysis. Defaults to 'Metaphlan2_Analysis'.\n  -s sam_output_file,\
  \ --samout sam_output_file\n                        The sam output file\n  --legacy-output\
  \       Old two columns output\n  --CAMI_format_output  Report the profiling using\
  \ the CAMI output format\n  --unknown_estimation  Ignore estimation of reads mapping\
  \ to unkwnown clades\n  --biom biom_output, --biom_output_file biom_output\n   \
  \                     If requesting biom file output: The name of the output file\
  \ in biom format \n  --mdelim mdelim, --metadata_delimiter_char mdelim\n       \
  \                 Delimiter for bug metadata: - defaults to pipe. e.g. the pipe\
  \ in k__Bacteria|p__Proteobacteria \n\nOther arguments:\n  --nproc N           \
  \  The number of CPUs to use for parallelizing the mapping [default 4]\n  --install\
  \             Only checks if the MetaPhlAn2 DB is installed and installs it if not.\
  \ All other parameters are ignored.\n  --force_download      Force the re-download\
  \ of the latest MetaPhlAn2 database.\n  --read_min_len READ_MIN_LEN\n          \
  \              Specify the minimum length of the reads to be considered when parsing\
  \ the input file with 'read_fastx.py' script, default value is 70\n  -v, --version\
  \         Prints the current MetaPhlAn version and exit\n  -h, --help          \
  \  show this help message and exit\n"
generated_using:
- --help
docker_image:
