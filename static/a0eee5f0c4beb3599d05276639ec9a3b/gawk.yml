!Command
command:
- gawk
positional:
- !Positional
  optional: true
  position: 0
  name: POSIX
  description: ''
- !Positional
  optional: true
  position: 1
  name: or
  description: ''
- !Positional
  optional: true
  position: 2
  name: GNU
  description: ''
- !Positional
  optional: true
  position: 3
  name: style
  description: ''
named:
- !Flag
  optional: true
  synonyms:
  - -f
  - --file
  - -F
  - --field-separator
  - -v
  description: =val              --assign=var=val
  args: !SimpleFlagArg
    name: progfile
- !Flag
  optional: true
  synonyms:
  - -b
  - --characters-as-bytes
  - -c
  - --traditional
  - -C
  - --copyright
  - -d
  description: '[file]                --dump-variables[=file]'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -e
  description: "'program-text'       --source='program-text'"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -M
  - --bignum
  - -N
  - --use-lc-numeric
  - -n
  - --non-decimal-data
  - -o
  description: '[file]                --pretty-print[=file]'
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -E
  - --exec
  - -g
  - --gen-pot
  - -h
  - --help
  - -i
  - --include
  - -l
  - --load
  - -L
  description: '[fatal|invalid|no-ext]        --lint[=fatal|invalid|no-ext]'
  args: !SimpleFlagArg
    name: file
usage_flag:
version_flag:
help_text: "Usage: gawk [POSIX or GNU style options] -f progfile [--] file ...\nUsage:\
  \ gawk [POSIX or GNU style options] [--] 'program' file ...\nPOSIX options:\t\t\
  GNU long options: (standard)\n\t-f progfile\t\t--file=progfile\n\t-F fs\t\t\t--field-separator=fs\n\
  \t-v var=val\t\t--assign=var=val\nShort options:\t\tGNU long options: (extensions)\n\
  \t-b\t\t\t--characters-as-bytes\n\t-c\t\t\t--traditional\n\t-C\t\t\t--copyright\n\
  \t-d[file]\t\t--dump-variables[=file]\n\t-D[file]\t\t--debug[=file]\n\t-e 'program-text'\t\
  --source='program-text'\n\t-E file\t\t\t--exec=file\n\t-g\t\t\t--gen-pot\n\t-h\t\
  \t\t--help\n\t-i includefile\t\t--include=includefile\n\t-l library\t\t--load=library\n\
  \t-L[fatal|invalid|no-ext]\t--lint[=fatal|invalid|no-ext]\n\t-M\t\t\t--bignum\n\t\
  -N\t\t\t--use-lc-numeric\n\t-n\t\t\t--non-decimal-data\n\t-o[file]\t\t--pretty-print[=file]\n\
  \t-O\t\t\t--optimize\n\t-p[file]\t\t--profile[=file]\n\t-P\t\t\t--posix\n\t-r\t\t\
  \t--re-interval\n\t-s\t\t\t--no-optimize\n\t-S\t\t\t--sandbox\n\t-t\t\t\t--lint-old\n\
  \t-V\t\t\t--version\n\nTo report bugs, see node `Bugs' in `gawk.info'\nwhich is\
  \ section `Reporting Problems and Bugs' in the\nprinted version.  This same information\
  \ may be found at\nhttps://www.gnu.org/software/gawk/manual/html_node/Bugs.html.\n\
  PLEASE do NOT try to report bugs by posting in comp.lang.awk,\nor by using a web\
  \ forum such as Stack Overflow.\n\ngawk is a pattern scanning and processing language.\n\
  By default it reads standard input and writes standard output.\n\nExamples:\n\t\
  gawk '{ sum += $1 }; END { print sum }' file\n\tgawk -F: '{ print $1 }' /etc/passwd\n"
generated_using:
- --help
docker_image: quay.io/biocontainers/gawk:5.1.0
