!Command
command:
- bamtofastq
positional: []
named: []
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "This is biobambam2 version 2.0.180.\nbiobambam2 is distributed under version\
  \ 3 of the GNU General Public License.\n\nKey=Value pairs:\n\nF=<[stdout]>     \
  \                             : matched pairs first mates\nF2=<[stdout]>       \
  \                          : matched pairs second mates\nS=<[stdout]>          \
  \                        : single end\nO=<[stdout]>                            \
  \      : unmatched pairs first mates\nO2=<[stdout]>                            \
  \     : unmatched pairs second mates\ncollate=<[1]>                            \
  \     : collate pairs\ncombs=<[0]>                                   : print some\
  \ counts after collation based processing\nfilename=<[stdin]>                  \
  \          : input filename (default: read file from standard input)\ninputformat=<[bam]>\
  \                           : input format: cram, bam or sam\nreference=<[]>   \
  \                             : name of reference FastA in case of inputformat=cram\n\
  ranges=<[]>                                   : input ranges (bam and cram input\
  \ only, default: read complete file)\nexclude=<[SECONDARY,SUPPLEMENTARY]>      \
  \     : exclude alignments matching any of the given flags\ndisablevalidation=<[0]>\
  \                       : disable validation of input data\ncolhlog=<[18]>     \
  \                           : base 2 logarithm of hash table size used for collation\n\
  colsbs=<[33554432]>                           : size of hash table overflow list\
  \ in bytes\nT=<[bamtofastq_8b578502d41a_1957_1617627520]> : temporary file name\n\
  gz=<[0]>                                      : compress output streams in gzip\
  \ format (default: 0)\nlevel=<[-1]>                                  : compression\
  \ setting if gz=1 (1=fast,2=2,3=3,4=4,5=5,6=6,7=7,8=8,9=best,10=10,11=11,12=12)\n\
  fasta=<[0]>                                   : output FastA instead of FastQ\n\
  inputbuffersize=<[-1]>                        : size of input buffer\noutputperreadgroup=<[0]>\
  \                      : split output per read group (for collate=1 only)\noutputdir=<>\
  \                                  : directory for output if outputperreadgroup=1\
  \ (default: current directory)\noutputperreadgroupsuffixF=<[_1.fq]>           :\
  \ suffix for F category when outputperreadgroup=1\noutputperreadgroupsuffixF2=<[_2.fq]>\
  \          : suffix for F2 category when outputperreadgroup=1\noutputperreadgroupsuffixO=<[_o1.fq]>\
  \          : suffix for O category when outputperreadgroup=1\noutputperreadgroupsuffixO2=<[_o2.fq]>\
  \         : suffix for O2 category when outputperreadgroup=1\noutputperreadgroupsuffixS=<[_s.fq]>\
  \           : suffix for S category when outputperreadgroup=1\ntryoq=<[0]>     \
  \                              : use OQ field instead of quality field if present\
  \ (collate={0,1} only)\nsplit=<[0]>                                   : split named\
  \ output files into chunks of this amount of reads (0: do not split)\nsplitprefix=<[bamtofastq_split]>\
  \              : file name prefix if collate=0 and split>0\ntags=<[]>          \
  \                           : list of aux tags to be copied (default: do not copy\
  \ any aux fields)\noutputperreadgrouprgsm=<[0]>                  : add read group\
  \ field SM ahead of read group id when outputperreadgroup=1 (for collate=1 only)\n\
  outputperreadgroupprefix=<[]>                 : prefix added in front of file names\
  \ if outputperreadgroup=1 (for collate=1 only)\ncasava18=<[0]>                 \
  \               : restore input taken by c18pe option\nmaxoutput=<[]>          \
  \                      : output no more than this number of entries (default: no\
  \ limit, collate=0 only)\ncols=<[]>                                     : wrap sequence\
  \ and quality lines at this number of columns (default: do not wrap, even numbers\
  \ only)\n\nAlignment flags: PAIRED,PROPER_PAIR,UNMAP,MUNMAP,REVERSE,MREVERSE,READ1,READ2,SECONDARY,QCFAIL,DUP,SUPPLEMENTARY\n\
  \n"
generated_using:
- --help
docker_image: quay.io/biocontainers/biobambam:2.0.180--hc9558a2_0
