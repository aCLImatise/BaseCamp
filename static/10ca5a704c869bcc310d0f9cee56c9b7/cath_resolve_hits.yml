!Command
command:
- cath-resolve-hits
positional:
- !Positional
  optional: false
  position: 0
  name: hmmer_domtblout
  description: '- HMMER domtblout format (must assume all hits are continuous)'
- !Positional
  optional: false
  position: 1
  name: hmmscan_out
  description: '- HMMER hmmscan output format (can be used to deduce discontinuous
    hits)'
- !Positional
  optional: false
  position: 2
  name: hmmsearch_out
  description: '- HMMER hmmsearch output format (can be used to deduce discontinuous
    hits)'
- !Positional
  optional: false
  position: 3
  name: raw_with_scores
  description: '- "raw" format with scores'
named:
- !Flag
  optional: true
  synonyms:
  - -v
  description: '[ --version ]                               Output version information'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --input-format
  description: '(=raw_with_scores)     Parse the input data from <format>, one of
    available formats:'
  args: !SimpleFlagArg
    name: format
- !Flag
  optional: true
  synonyms:
  - --min-gap-length
  description: (=30)                When parsing starts/stops from alignment data,
    ignore gaps of less than <length> residues
  args: !SimpleFlagArg
    name: length
- !Flag
  optional: true
  synonyms:
  - --input-hits-are-grouped
  description: "Rely on the input hits being grouped by query protein\n(so the run\
    \ is faster and uses less memory)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --overlap-trim-spec
  description: "(=30/10)            Allow different hits' segments to overlap a bit\
    \ by trimming all segments using spec <trim>\nof the form n/m (n is a segment\
    \ length; m is the *total* length to be trimmed off both ends)\nFor longer segments,\
    \ total trim stays at m; for shorter, it decreases linearly (to 0 for length 1).\n\
    To choose: set m to the biggest total trim you'd want for a really long segment;\n\
    then, set n to length of the shortest segment you'd want to have that total trim"
  args: !SimpleFlagArg
    name: trim
- !Flag
  optional: true
  synonyms:
  - --min-seg-length
  description: (=7)                 Ignore all segments that are fewer than <length>
    residues long
  args: !SimpleFlagArg
    name: length
- !Flag
  optional: true
  synonyms:
  - --long-domains-preference
  description: "(=0)           Prefer longer hits to degree <val>\n(<val> may be negative\
    \ to prefer shorter; 0 leaves scores unaffected)"
  args: !SimpleFlagArg
    name: val
- !Flag
  optional: true
  synonyms:
  - --high-scores-preference
  description: "(=0)            Prefer higher scores to degree <val>\n(<val> may be\
    \ negative to reduce preference for higher scores; 0 leaves scores unaffected)"
  args: !SimpleFlagArg
    name: val
- !Flag
  optional: true
  synonyms:
  - --apply-cath-rules
  description: '[DEPRECATED] Apply rules specific to CATH-Gene3D during the parsing
    and processing'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --naive-greedy
  description: Use a naive, greedy approach to resolving (not recommended except for
    comparison)
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --worst-permissible-evalue
  description: (=0.001)   Ignore any hits with an evalue worse than <evalue>
  args: !SimpleFlagArg
    name: evalue
- !Flag
  optional: true
  synonyms:
  - --worst-permissible-bitscore
  description: (=10)  Ignore any hits with a bitscore worse than <bitscore>
  args: !SimpleFlagArg
    name: bitscore
- !Flag
  optional: true
  synonyms:
  - --worst-permissible-score
  description: Ignore any hits with a score worse than <score>
  args: !SimpleFlagArg
    name: score
- !Flag
  optional: true
  synonyms:
  - --filter-query-id
  description: "Ignore all input data except that for query protein(s) <id>\n(may\
    \ be specified multiple times for multiple query proteins)"
  args: !SimpleFlagArg
    name: id
- !Flag
  optional: true
  synonyms:
  - --limit-queries
  description: '[=<num>(=1)]                   Only process the first <num> query
    protein(s) encountered in the input data'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --hits-text-to-file
  description: Write the resolved hits in plain text to file <file>
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - --quiet
  description: Suppress the default output of resolved hits in plain text to stdout
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --output-trimmed-hits
  description: When writing out the final hits, output the hits' starts/stop as they
    are *after trimming*
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --summarise-to-file
  description: Write a brief text summary of the input data to file <file> (or '-'
    for stdout)
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - --html-output-to-file
  description: Write the results as HTML to file <file> (or '-' for stdout)
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - --json-output-to-file
  description: Write the results as JSON to file <file> (or '-' for stdout)
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - --export-css-file
  description: Export the CSS used in the HTML output to <file> (or '-' for stdout)
  args: !SimpleFlagArg
    name: file
- !Flag
  optional: true
  synonyms:
  - --restrict-html-within-body
  description: "Restrict HTML output to the contents of the body tag.\nThe contents\
    \ should be included inside a body tag of class crh-body"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --html-max-num-non-soln-hits
  description: (=80)       Only display up to <num> non-solution hits in the HTML
  args: !SimpleFlagArg
    name: num
- !Flag
  optional: true
  synonyms:
  - --html-exclude-rejected-hits
  description: Exclude hits rejected by the score filters from the HTML
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --cath-rules-help
  description: Show help on the rules activated by the (DEPRECATED) --apply-cath-rules
    option
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --raw-format-help
  description: Show help about the raw input formats (raw_with_scores and raw_with_evalues)
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  description: '[ --help ]                                  Output help message'
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "Usage: cath-resolve-hits [options] <input_file>\n\nCollapse a list of\
  \ domain matches to your query sequence(s) down to the\nnon-overlapping subset (ie\
  \ domain architecture) that maximises the sum of the\nhits' scores.\n\nWhen <input_file>\
  \ is -, the input is read from standard input.\n\nThe input data may contain unsorted\
  \ hits for different query protein sequences.\n\nHowever, if your input data is\
  \ already grouped by query protein sequence, then\nspecify the --input-hits-are-grouped\
  \ flag for faster runs that use less memory.\n\nMiscellaneous:\n  -h [ --help ]\
  \                                  Output help message\n  -v [ --version ]     \
  \                          Output version information\n\nInput:\n  --input-format\
  \ <format> (=raw_with_scores)     Parse the input data from <format>, one of available\
  \ formats:\n                                                    hmmer_domtblout\
  \  - HMMER domtblout format (must assume all hits are continuous)\n            \
  \                                        hmmscan_out      - HMMER hmmscan output\
  \ format (can be used to deduce discontinuous hits)\n                          \
  \                          hmmsearch_out    - HMMER hmmsearch output format (can\
  \ be used to deduce discontinuous hits)\n                                      \
  \              raw_with_scores  - \"raw\" format with scores\n                 \
  \                                   raw_with_evalues - \"raw\" format with evalues\n\
  \  --min-gap-length <length> (=30)                When parsing starts/stops from\
  \ alignment data, ignore gaps of less than <length> residues\n  --input-hits-are-grouped\
  \                       Rely on the input hits being grouped by query protein\n\
  \                                                 (so the run is faster and uses\
  \ less memory)\n\nSegment overlap/removal:\n  --overlap-trim-spec <trim> (=30/10)\
  \            Allow different hits' segments to overlap a bit by trimming all segments\
  \ using spec <trim>\n                                                 of the form\
  \ n/m (n is a segment length; m is the *total* length to be trimmed off both ends)\n\
  \                                                 For longer segments, total trim\
  \ stays at m; for shorter, it decreases linearly (to 0 for length 1).\n        \
  \                                         To choose: set m to the biggest total\
  \ trim you'd want for a really long segment;\n                                 \
  \                           then, set n to length of the shortest segment you'd\
  \ want to have that total trim\n  --min-seg-length <length> (=7)               \
  \  Ignore all segments that are fewer than <length> residues long\n\nHit preference:\n\
  \  --long-domains-preference <val> (=0)           Prefer longer hits to degree <val>\n\
  \                                                 (<val> may be negative to prefer\
  \ shorter; 0 leaves scores unaffected)\n  --high-scores-preference <val> (=0)  \
  \          Prefer higher scores to degree <val>\n                              \
  \                   (<val> may be negative to reduce preference for higher scores;\
  \ 0 leaves scores unaffected)\n  --apply-cath-rules                            \
  \ [DEPRECATED] Apply rules specific to CATH-Gene3D during the parsing and processing\n\
  \  --naive-greedy                                 Use a naive, greedy approach to\
  \ resolving (not recommended except for comparison)\n\nHit filtering:\n  --worst-permissible-evalue\
  \ <evalue> (=0.001)   Ignore any hits with an evalue worse than <evalue>\n  --worst-permissible-bitscore\
  \ <bitscore> (=10)  Ignore any hits with a bitscore worse than <bitscore>\n  --worst-permissible-score\
  \ <score>              Ignore any hits with a score worse than <score>\n  --filter-query-id\
  \ <id>                         Ignore all input data except that for query protein(s)\
  \ <id>\n                                                 (may be specified multiple\
  \ times for multiple query proteins)\n  --limit-queries [=<num>(=1)]           \
  \        Only process the first <num> query protein(s) encountered in the input\
  \ data\n\nOutput ([...]-to-file options may be specified multiple times):\n  --hits-text-to-file\
  \ <file>                     Write the resolved hits in plain text to file <file>\n\
  \  --quiet                                        Suppress the default output of\
  \ resolved hits in plain text to stdout\n  --output-trimmed-hits               \
  \           When writing out the final hits, output the hits' starts/stop as they\
  \ are *after trimming*\n  --summarise-to-file <file>                     Write a\
  \ brief text summary of the input data to file <file> (or '-' for stdout)\n  --html-output-to-file\
  \ <file>                   Write the results as HTML to file <file> (or '-' for\
  \ stdout)\n  --json-output-to-file <file>                   Write the results as\
  \ JSON to file <file> (or '-' for stdout)\n  --export-css-file <file>          \
  \             Export the CSS used in the HTML output to <file> (or '-' for stdout)\n\
  \nHTML:\n  --restrict-html-within-body                    Restrict HTML output to\
  \ the contents of the body tag.\n                                              \
  \   The contents should be included inside a body tag of class crh-body\n  --html-max-num-non-soln-hits\
  \ <num> (=80)       Only display up to <num> non-solution hits in the HTML\n  --html-exclude-rejected-hits\
  \                   Exclude hits rejected by the score filters from the HTML\n\n\
  Detailed help:\n  --cath-rules-help                              Show help on the\
  \ rules activated by the (DEPRECATED) --apply-cath-rules option\n  --raw-format-help\
  \                              Show help about the raw input formats (raw_with_scores\
  \ and raw_with_evalues)\n\nThe standard output is one line per selected hit, preceded\
  \ by header lines (beginning \"#\"), the last of which (beginning \"#FIELDS\") lists\
  \ the fields in the file, typically:\n  #FIELDS query-id match-id score boundaries\
  \ resolved\n(`boundaries` and `resolved` describe a domain's starts / stops; `resolved`\
  \ may include adjustments made to resolve overlaps between hits)\n\nPlease tell\
  \ us your cath-tools bugs/suggestions : https://github.com/UCLOrengoGroup/cath-tools/issues/new\n"
generated_using:
- --help
docker_image:
