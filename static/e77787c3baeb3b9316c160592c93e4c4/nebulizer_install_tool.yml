&id003 !Command
positional:
- !Positional
  description: ''
  position: 0
  name: GALAXY
  optional: false
- !Positional
  description: ''
  position: 1
  name: TOOLSHED
  optional: false
- !Positional
  description: ''
  position: 2
  name: OWNER
  optional: false
- !Positional
  description: ''
  position: 3
  name: REPOSITORY
  optional: false
named:
- !Flag
  description: "[yes|no] install dependencies through a resolver that supports installation\
    \ (e.g. conda) (default is 'yes')"
  synonyms:
  - --install-resolver-dependencies
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: wait up to TIMEOUT seconds for tool installationsto complete (default
    is 600).
  synonyms:
  - --timeout
  args: !SimpleFlagArg
    name: TIMEOUT
  optional: true
- !Flag
  description: don't wait for lengthy tool installations to complete.
  synonyms:
  - --no-wait
  args: !EmptyFlagArg {}
  optional: true
command:
- nebulizer
- install_tool
parent: &id001 !Command
  positional: []
  named:
  - !Flag
    description: specify API key to use for connecting to Galaxy instance. Must be
      supplied if there is no API key stored for the specified instance, (unless --username
      option is specified). If there is a stored API key this overrides it.
    synonyms:
    - -k
    - --api_key
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: specify username (i.e. email) for connecting to Galaxy instance,
      as an alternative to using the API key. Prompts for a password unless one is
      supplied via the --galaxy_password option.
    synonyms:
    - -u
    - --username
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: supply password for connecting to Galaxy instance, when using the
      --username option.
    synonyms:
    - -P
    - --galaxy_password
    args: !SimpleFlagArg
      name: TEXT
    optional: true
  - !Flag
    description: don't verify HTTPS connections when connecting to Galaxy instance.
      Use this when interacting with Galaxy instances which use self-signed certificates.
    synonyms:
    - -n
    - --no-verify
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: suppress warning messages from nebulizer.
    synonyms:
    - -q
    - --suppress-warnings
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: turn on debugging output.
    synonyms:
    - --debug
    args: !EmptyFlagArg {}
    optional: true
  command:
  - nebulizer
  parent:
  subcommands:
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: ALIAS
      optional: false
    - !Positional
      description: ''
      position: 1
      name: GALAXY_URL
      optional: false
    - !Positional
      description: ''
      position: 2
      name: API_KEY
      optional: true
    named: []
    command:
    - nebulizer
    - add_key
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: nebulizer add_key [OPTIONS] ALIAS GALAXY_URL [API_KEY]\n\n\
      \  Store new Galaxy URL and API key.\n\n  ALIAS is the name that the instance\
      \ will be stored against; GALAXY_URL is\n  the URL for the instance; API_KEY\
      \ is the corresponding API key.\n\n  If API_KEY is not supplied then nebulizer\
      \ will attempt to fetch one\n  automatically.\n\nOptions:\n  --help  Show this\
      \ message and exit.\n"
    generated_using: &id002
    - --help
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: GALAXY
      optional: false
    - !Positional
      description: ''
      position: 1
      name: DEST
      optional: false
    - !Positional
      description: ''
      position: 2
      name: FILE
      optional: true
    named:
    - !Flag
      description: Galaxy data type to assign the files to (default is 'auto'). Must
        be a valid Galaxy data type. If not 'auto' then all files will be assigned
        the same type.
      synonyms:
      - --file-type
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    - !Flag
      description: dbkey to assign to files (default is '?')
      synonyms:
      - --dbkey
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    - !Flag
      description: upload files from the Galaxy server file system (default is to
        upload files from local system)
      synonyms:
      - --server
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: create symlinks to files on server (only valid if used with --server;
        default is to copy files into Galaxy)
      synonyms:
      - --link
      args: !EmptyFlagArg {}
      optional: true
    command:
    - nebulizer
    - add_library_datasets
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: nebulizer add_library_datasets [OPTIONS] GALAXY DEST [FILE]...\n\
      \n  Add datasets to a data library.\n\n  Uploads one or more FILEs as new datasets\
      \ in the data library folder DEST\n  in GALAXY.\n\n  DEST should be a path to\
      \ a data library or library folder of the form\n  'data_library[/folder[/subfolder[...]]]'.\
      \ The library and folder must\n  already exist.\n\nOptions:\n  --file-type TEXT\
      \  Galaxy data type to assign the files to (default is\n                   \
      \ 'auto'). Must be a valid Galaxy data type. If not 'auto'\n               \
      \     then all files will be assigned the same type.\n  --dbkey TEXT      dbkey\
      \ to assign to files (default is '?')\n  --server          upload files from\
      \ the Galaxy server file system (default\n                    is to upload files\
      \ from local system)\n  --link            create symlinks to files on server\
      \ (only valid if used\n                    with --server; default is to copy\
      \ files into Galaxy)\n  --help            Show this message and exit.\n"
    generated_using: *id002
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: GALAXY
      optional: false
    - !Positional
      description: ''
      position: 1
      name: TEMPLATE
      optional: false
    - !Positional
      description: ''
      position: 2
      name: START
      optional: false
    - !Positional
      description: ''
      position: 3
      name: END
      optional: true
    named:
    - !Flag
      description: specify password for new user accounts (otherwise program will
        prompt for password). All accounts will be created with the same password.
      synonyms:
      - -p
      - --password
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    - !Flag
      description: check user details but don't try to create the new account.
      synonyms:
      - -c
      - --check
      args: !EmptyFlagArg {}
      optional: true
    command:
    - nebulizer
    - create_batch_users
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: nebulizer create_batch_users [OPTIONS] GALAXY TEMPLATE START\
      \ [END]\n\n  Create multiple Galaxy users from a template.\n\n  Creates a batch\
      \ of users in GALAXY using TEMPLATE; this should be a\n  template email address\
      \ which includes a '#' symbol as a placeholder for an\n  integer index.\n\n\
      \  The range of integers is defined by START and END; if only one of these is\n\
      \  supplied then START is assumed to be 1 and the supplied value is END.\n\n\
      \  For example: using the template 'user#@example.org' with the range 1 to 5\n\
      \  will create new accounts:\n\n  user1@galaxy.org ... user5@galaxy.org\n\n\
      Options:\n  -p, --password TEXT  specify password for new user accounts (otherwise\n\
      \                       program will prompt for password). All accounts will\
      \ be\n                       created with the same password.\n  -c, --check\
      \          check user details but don't try to create the new\n            \
      \           account.\n  --help               Show this message and exit.\n"
    generated_using: *id002
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: GALAXY
      optional: false
    - !Positional
      description: ''
      position: 1
      name: NAME
      optional: false
    named:
    - !Flag
      description: description of the new library
      synonyms:
      - -d
      - --description
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    - !Flag
      description: synopsis text for the new library
      synonyms:
      - -s
      - --synopsis
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    command:
    - nebulizer
    - create_library
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: nebulizer create_library [OPTIONS] GALAXY NAME\n\n  Create\
      \ new data library.\n\n  Makes a new data library NAME in GALAXY. A library\
      \ with the same name must\n  not already.\n\nOptions:\n  -d, --description TEXT\
      \  description of the new library\n  -s, --synopsis TEXT     synopsis text for\
      \ the new library\n  --help                  Show this message and exit.\n"
    generated_using: *id002
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: GALAXY
      optional: false
    - !Positional
      description: ''
      position: 1
      name: PATH
      optional: false
    named:
    - !Flag
      description: description of the new folder
      synonyms:
      - -d
      - --description
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    command:
    - nebulizer
    - create_library_folder
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: nebulizer create_library_folder [OPTIONS] GALAXY PATH\n\n \
      \ Create new folder in a data library.\n\n  Makes a new folder or folder tree\
      \ within an existing data library in\n  GALAXY.\n\n  The new folder(s) are specified\
      \ by PATH, which should be of the form\n  'data_library[/folder[/subfolder[...]]]'.\
      \ Although the data library must\n  already exist, PATH must not address an\
      \ existing folder.\n\nOptions:\n  -d, --description TEXT  description of the\
      \ new folder\n  --help                  Show this message and exit.\n"
    generated_using: *id002
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: GALAXY
      optional: false
    - !Positional
      description: ''
      position: 1
      name: EMAIL
      optional: false
    - !Positional
      description: ''
      position: 2
      name: PUBLIC_NAME
      optional: true
    named:
    - !Flag
      description: specify password for new user account (otherwise program will prompt
        for password)
      synonyms:
      - -p
      - --password
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    - !Flag
      description: check user details but don't try to create the new account
      synonyms:
      - -c
      - --check
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Mako template to populate and output
      synonyms:
      - -m
      - --message
      args: !SimpleFlagArg
        name: PATH
      optional: true
    command:
    - nebulizer
    - create_user
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: nebulizer create_user [OPTIONS] GALAXY EMAIL [PUBLIC_NAME]\n\
      \n  Create new Galaxy user.\n\n  Creates a new user in GALAXY, using EMAIL for\
      \ the username. If PUBLIC_NAME\n  is not supplied then it will be generated\
      \ automatically from the leading\n  part of the email address.\n\n  If a password\
      \ for the new account is not supplied using the --password\n  option then nebulizer\
      \ will prompt for one.\n\nOptions:\n  -p, --password TEXT  specify password\
      \ for new user account (otherwise\n                       program will prompt\
      \ for password)\n  -c, --check          check user details but don't try to\
      \ create the new\n                       account\n  -m, --message PATH   Mako\
      \ template to populate and output\n  --help               Show this message\
      \ and exit.\n"
    generated_using: *id002
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: GALAXY
      optional: false
    - !Positional
      description: ''
      position: 1
      name: FILE
      optional: false
    named:
    - !Flag
      description: check user details but don't try to create the new account.
      synonyms:
      - -c
      - --check
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Mako template to populate and output.
      synonyms:
      - -m
      - --message
      args: !SimpleFlagArg
        name: PATH
      optional: true
    command:
    - nebulizer
    - create_users_from_file
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: nebulizer create_users_from_file [OPTIONS] GALAXY FILE\n\n\
      \  Create multiple Galaxy users from a file.\n\n  Creates user accounts in GALAXY\
      \ instance from contents of FILE, which\n  should be a tab-delimited file with\
      \ details of a new user on each line;\n  the columns should be 'email', 'password',\
      \ and optionally 'public_name'.\n\n  (If the 'public_name' is missing then it\
      \ will be generated automatically\n  from the leading part of the email.)\n\n\
      Options:\n  -c, --check         check user details but don't try to create the\
      \ new\n                      account.\n  -m, --message PATH  Mako template to\
      \ populate and output.\n  --help              Show this message and exit.\n"
    generated_using: *id002
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: GALAXY
      optional: false
    - !Positional
      description: ''
      position: 1
      name: FILE
      optional: false
    named:
    - !Flag
      description: "[yes|no] install dependencies through a resolver that supports\
        \ installation (e.g. conda) (default is 'yes')"
      synonyms:
      - --install-resolver-dependencies
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: wait up to TIMEOUT seconds for tool installationsto complete (default
        is 600).
      synonyms:
      - --timeout
      args: !SimpleFlagArg
        name: TIMEOUT
      optional: true
    - !Flag
      description: don't wait for lengthy tool installations to complete.
      synonyms:
      - --no-wait
      args: !EmptyFlagArg {}
      optional: true
    command:
    - nebulizer
    - install_repositories
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: nebulizer install_repositories [OPTIONS] GALAXY FILE\n\n  Install\
      \ tool repositories listed in a file.\n\n  Installs the tools specified in FILE\
      \ into GALAXY.\n\n  FILE should be a tab-delimited file with the columns:\n\n\
      \  TOOLSHED|OWNER|REPOSITORY|REVISON|SECTION\n\n  If the REVISION field is blank\
      \ then nebulizer will attempt to install the\n  latest revision; if the SECTION\
      \ field is blank then the tool will be\n  installed at the top level of the\
      \ tool panel (i.e. not in any section).\n\nOptions:\n  --install-tool-dependencies\
      \ [yes|no]\n                                  install tool dependencies via\
      \ the toolshed,\n                                  if any are defined (default\
      \ is 'yes')\n  --install-repository-dependencies [yes|no]\n                \
      \                  install repository dependencies via the\n               \
      \                   toolshed, if any are defined (default is\n             \
      \                     'yes')\n  --install-resolver-dependencies [yes|no]\n \
      \                                 install dependencies through a resolver that\n\
      \                                  supports installation (e.g. conda) (default\n\
      \                                  is 'yes')\n  --timeout TIMEOUT          \
      \     wait up to TIMEOUT seconds for tool\n                                \
      \  installationsto complete (default is 600).\n  --no-wait                 \
      \      don't wait for lengthy tool installations to\n                      \
      \            complete.\n  --help                          Show this message\
      \ and exit.\n"
    generated_using: *id002
  - *id003
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: GALAXY
      optional: false
    named:
    - !Flag
      description: only list tool repositories matching NAME. Can include glob-style
        wild-cards.
      synonyms:
      - --name
      args: !SimpleFlagArg
        name: NAME
      optional: true
    - !Flag
      description: only list repositories installed from toolshed matching TOOLSHED.
        Can include glob-style wild-cards.
      synonyms:
      - --toolshed
      args: !SimpleFlagArg
        name: TOOLSHED
      optional: true
    - !Flag
      description: only list repositories from matching OWNER. Can include glob-style
        wild-cards.
      synonyms:
      - --owner
      args: !SimpleFlagArg
        name: OWNER
      optional: true
    - !Flag
      description: also list the tools associated with each installed repository revision
        changeset.
      synonyms:
      - --list-tools
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: only show repositories with uninstalled updates or upgrades.
      synonyms:
      - --updateable
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: check installed revisions directly against those available in the
        toolshed. NB this can be extremely slow.
      synonyms:
      - --check-toolshed
      args: !EmptyFlagArg {}
      optional: true
    command:
    - nebulizer
    - list_installed_tools
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: nebulizer list_installed_tools [OPTIONS] GALAXY\n\n  List installed\
      \ tool repositories.\n\n  Prints details of installed tool repositories in GALAXY\
      \ instance.\n\n  For each installed repository the details include: repository\
      \ name,\n  toolshed, owner, revision id and changeset, and installation status.\n\
      \n  Repository details are also preceeded by a single-character 'status'\n \
      \ indicator ('D' = deprecated; '^' = newer revision installed; 'u' = update\n\
      \  available but not installed; 'U' = upgrade available but not installed;\n\
      \  '*' = latest revision).\n\n  Note that there may still be a newer revision\
      \ of a tool available from the\n  toolshed, even when the repository is marked\
      \ as '*'. Use the --check-\n  toolshed option to also explicitly check against\
      \ the toolshed, in which\n  case a '!' status indicates that a newer version\
      \ has been found on\n  toolshed. Note that this option incurs a significant\
      \ overhead when\n  checking a large number of tools.\n\n  If the --list-tools\
      \ option is specified then additionally after each\n  repository the tools associated\
      \ with the repository will be listed along\n  with their descriptions and versions.\n\
      \nOptions:\n  --name NAME          only list tool repositories matching NAME.\
      \ Can include\n                       glob-style wild-cards.\n  --toolshed TOOLSHED\
      \  only list repositories installed from toolshed matching\n               \
      \        TOOLSHED. Can include glob-style wild-cards.\n  --owner OWNER     \
      \   only list repositories from matching OWNER. Can include\n              \
      \         glob-style wild-cards.\n  --list-tools         also list the tools\
      \ associated with each installed\n                       repository revision\
      \ changeset.\n  --updateable         only show repositories with uninstalled\
      \ updates or\n                       upgrades.\n  --check-toolshed     check\
      \ installed revisions directly against those\n                       available\
      \ in the toolshed. NB this can be extremely\n                       slow.\n\
      \  --help               Show this message and exit.\n"
    generated_using: *id002
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: GALAXY
      optional: false
    - !Positional
      description: ''
      position: 1
      name: PATH
      optional: true
    named:
    - !Flag
      description: use a long listing format that includes ids, descriptions, file
        sizes, dbkeys and paths)
      synonyms:
      - -l
      args: !EmptyFlagArg {}
      optional: true
    command:
    - nebulizer
    - list_libraries
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: nebulizer list_libraries [OPTIONS] GALAXY [PATH]\n\n  List\
      \ data libraries and contents.\n\n  Prints details of the data library and folders\
      \ specified by PATH, in\n  GALAXY instance.\n\n  PATH should be of the form\
      \ 'data_library[/folder[/subfolder[...]]]'\n\nOptions:\n  -l      use a long\
      \ listing format that includes ids, descriptions, file\n          sizes, dbkeys\
      \ and paths)\n  --help  Show this message and exit.\n"
    generated_using: *id002
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: GALAXY
      optional: false
    named:
    - !Flag
      description: only list tool repositories matching NAME. Can include glob-style
        wild-cards.
      synonyms:
      - --name
      args: !SimpleFlagArg
        name: NAME
      optional: true
    - !Flag
      description: only list repositories installed from toolshed matching TOOLSHED.
        Can include glob-style wild-cards.
      synonyms:
      - --toolshed
      args: !SimpleFlagArg
        name: TOOLSHED
      optional: true
    - !Flag
      description: only list repositories from matching OWNER. Can include glob-style
        wild-cards.
      synonyms:
      - --owner
      args: !SimpleFlagArg
        name: OWNER
      optional: true
    - !Flag
      description: only show repositories with uninstalled updates or upgrades.
      synonyms:
      - --updateable
      args: !EmptyFlagArg {}
      optional: true
    command:
    - nebulizer
    - list_repositories
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: nebulizer list_repositories [OPTIONS] GALAXY\n\n  List installed\
      \ tool repos for (re)install.\n\n  Prints details of installed tool repositories\
      \ in GALAXY instance in a\n  format suitable for input into the 'install_repositories'\
      \ command.\n\n  The output is a set of tab-delimited values, with each line\
      \ consisting of:\n\n  TOOLSHED|OWNER|REPOSITORY|CHANGESET|TOOL_PANEL_SECTION\n\
      \n  TOOL_PANEL_SECTION will be empty if the repository was installed outside\n\
      \  of any section in the tool panel.\n\n  The repositories are ordered according\
      \ to their position in the tool\n  panel. Note that non-package and non-data-manager\
      \ repositories which\n  cannot be located within the tool panel will not be\
      \ listed.\n\nOptions:\n  --name NAME          only list tool repositories matching\
      \ NAME. Can include\n                       glob-style wild-cards.\n  --toolshed\
      \ TOOLSHED  only list repositories installed from toolshed matching\n      \
      \                 TOOLSHED. Can include glob-style wild-cards.\n  --owner OWNER\
      \        only list repositories from matching OWNER. Can include\n         \
      \              glob-style wild-cards.\n  --updateable         only show repositories\
      \ with uninstalled updates or\n                       upgrades.\n  --help  \
      \             Show this message and exit.\n"
    generated_using: *id002
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: GALAXY
      optional: false
    named:
    - !Flag
      description: only list tool panel sections where name or id match NAME. Can
        include glob-style wild-cards.
      synonyms:
      - --name
      args: !SimpleFlagArg
        name: NAME
      optional: true
    - !Flag
      description: also list the associated tools for each section
      synonyms:
      - --list-tools
      args: !EmptyFlagArg {}
      optional: true
    command:
    - nebulizer
    - list_tool_panel
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: nebulizer list_tool_panel [OPTIONS] GALAXY\n\n  List tool panel\
      \ contents.\n\n  Prints details of tool panel sections including the displayed\
      \ text and the\n  internal section id, and any tools available outside of any\
      \ section.\n\nOptions:\n  --name NAME   only list tool panel sections where\
      \ name or id match NAME. Can\n                include glob-style wild-cards.\n\
      \  --list-tools  also list the associated tools for each section\n  --help \
      \       Show this message and exit.\n"
    generated_using: *id002
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: GALAXY
      optional: false
    named:
    - !Flag
      description: list only tools matching NAME. Can include glob-style wild- cards.
      synonyms:
      - --name
      args: !SimpleFlagArg
        name: NAME
      optional: true
    - !Flag
      description: only list tools that have been installed from a toolshed (default
        is to list all tools).
      synonyms:
      - --installed
      args: !EmptyFlagArg {}
      optional: true
    command:
    - nebulizer
    - list_tools
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: nebulizer list_tools [OPTIONS] GALAXY\n\n  List tools in Galaxy\
      \ instance.\n\n  Prints details of tools available in GALAXY instance, including:\
      \ tool\n  name, version, tool panel section, and toolshed repository and revision\n\
      \  changeset.\n\nOptions:\n  --name NAME  list only tools matching NAME. Can\
      \ include glob-style wild-\n               cards.\n  --installed  only list\
      \ tools that have been installed from a toolshed\n               (default is\
      \ to list all tools).\n  --help       Show this message and exit.\n"
    generated_using: *id002
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: GALAXY
      optional: false
    named:
    - !Flag
      description: list only users with matching email or user name. Can include glob-style
        wild-cards.
      synonyms:
      - --name
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    - !Flag
      description: use a long listing format that includes ids, disk usage and admin
        status.
      synonyms:
      - -l
      - --long
      args: !EmptyFlagArg {}
      optional: true
    command:
    - nebulizer
    - list_users
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: nebulizer list_users [OPTIONS] GALAXY\n\n  List users in Galaxy\
      \ instance.\n\n  Prints details of user accounts in GALAXY instance.\n\nOptions:\n\
      \  --name TEXT  list only users with matching email or user name. Can include\n\
      \               glob-style wild-cards.\n  -l, --long   use a long listing format\
      \ that includes ids, disk usage and\n               admin status.\n  --help\
      \       Show this message and exit.\n"
    generated_using: *id002
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: GALAXY
      optional: false
    named:
    - !Flag
      description: if set then stop after sending COUNT requests (default is to send
        requests forever).
      synonyms:
      - -c
      - --count
      args: !SimpleFlagArg
        name: COUNT
      optional: true
    - !Flag
      description: set the interval between sending requests in seconds (default is
        5 seconds).
      synonyms:
      - -i
      - --interval
      args: !SimpleFlagArg
        name: INTERVAL
      optional: true
    command:
    - nebulizer
    - ping
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: nebulizer ping [OPTIONS] GALAXY\n\n  'Ping' a Galaxy instance.\n\
      \n  Sends a request to GALAXY and reports the status of the response and the\n\
      \  time taken.\n\nOptions:\n  -c, --count COUNT        if set then stop after\
      \ sending COUNT requests\n                           (default is to send requests\
      \ forever).\n  -i, --interval INTERVAL  set the interval between sending requests\
      \ in\n                           seconds (default is 5 seconds).\n  --help \
      \                  Show this message and exit.\n"
    generated_using: *id002
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: ALIAS
      optional: false
    named: []
    command:
    - nebulizer
    - remove_key
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: nebulizer remove_key [OPTIONS] ALIAS\n\n  Remove stored Galaxy\
      \ API key.\n\n  Removes the Galaxy URL/API key pair associated with ALIAS from\
      \ the list of\n  stored keys.\n\nOptions:\n  --help  Show this message and exit.\n"
    generated_using: *id002
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: ALIAS
      optional: false
    named:
    - !Flag
      description: specify new URL for Galaxy instance
      synonyms:
      - --new-url
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    - !Flag
      description: specify new API key for Galaxy instance
      synonyms:
      - --new-api-key
      args: !SimpleFlagArg
        name: TEXT
      optional: true
    - !Flag
      description: fetch new API key for Galaxy instance
      synonyms:
      - --fetch-api-key
      args: !EmptyFlagArg {}
      optional: true
    command:
    - nebulizer
    - update_key
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: nebulizer update_key [OPTIONS] ALIAS\n\n  Update stored Galaxy\
      \ API key.\n\n  Update the Galaxy URL and/or API key stored against ALIAS.\n\
      \nOptions:\n  --new-url TEXT      specify new URL for Galaxy instance\n  --new-api-key\
      \ TEXT  specify new API key for Galaxy instance\n  --fetch-api-key     fetch\
      \ new API key for Galaxy instance\n  --help              Show this message and\
      \ exit.\n"
    generated_using: *id002
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: GALAXY
      optional: false
    - !Positional
      description: ''
      position: 1
      name: TOOLSHED
      optional: false
    - !Positional
      description: ''
      position: 2
      name: OWNER
      optional: false
    - !Positional
      description: ''
      position: 3
      name: REPOSITORY
      optional: false
    named:
    - !Flag
      description: "[yes|no] install dependencies through a resolver that supports\
        \ installation (e.g. conda) (default is 'yes')"
      synonyms:
      - --install-resolver-dependencies
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: wait up to TIMEOUT seconds for tool installationsto complete (default
        is 600).
      synonyms:
      - --timeout
      args: !SimpleFlagArg
        name: TIMEOUT
      optional: true
    - !Flag
      description: don't wait for lengthy tool installations to complete.
      synonyms:
      - --no-wait
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: check installed revisions directly against those available in the
        toolshed
      synonyms:
      - --check-toolshed
      args: !EmptyFlagArg {}
      optional: true
    command:
    - nebulizer
    - update_tool
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: nebulizer update_tool [OPTIONS] GALAXY TOOLSHED OWNER REPOSITORY\n\
      \n  Update tool installed from toolshed.\n\n  Updates the specified tool from\
      \ REPOSITORY owned by OWNER in TOOLSHED, to\n  the latest revision in GALAXY.\n\
      \n  The tool must already be present in GALAXY and a newer changeset revision\n\
      \  must be available. The update will be installed into the same tool panel\n\
      \  section as the original tool.\n\nOptions:\n  --install-tool-dependencies\
      \ [yes|no]\n                                  install tool dependencies via\
      \ the toolshed,\n                                  if any are defined (default\
      \ is 'yes')\n  --install-repository-dependencies [yes|no]\n                \
      \                  install repository dependencies via the\n               \
      \                   toolshed, if any are defined (default is\n             \
      \                     'yes')\n  --install-resolver-dependencies [yes|no]\n \
      \                                 install dependencies through a resolver that\n\
      \                                  supports installation (e.g. conda) (default\n\
      \                                  is 'yes')\n  --timeout TIMEOUT          \
      \     wait up to TIMEOUT seconds for tool\n                                \
      \  installationsto complete (default is 600).\n  --no-wait                 \
      \      don't wait for lengthy tool installations to\n                      \
      \            complete.\n  --check-toolshed                check installed revisions\
      \ directly against\n                                  those available in the\
      \ toolshed\n  --help                          Show this message and exit.\n"
    generated_using: *id002
  - !Command
    positional:
    - !Positional
      description: ''
      position: 0
      name: GALAXY
      optional: false
    named: []
    command:
    - nebulizer
    - whoami
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: nebulizer whoami [OPTIONS] GALAXY\n\n  Print user details associated\
      \ with API key.\n\nOptions:\n  --help  Show this message and exit.\n"
    generated_using: *id002
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag: !Flag
    description: Show the version and exit.
    synonyms:
    - --version
    args: !EmptyFlagArg {}
    optional: true
  help_text: "Usage: nebulizer [OPTIONS] COMMAND [ARGS]...\n\n  Manage users, tools\
    \ and data libraries in Galaxy instances via the API\n\nOptions:\n  --version\
    \                   Show the version and exit.\n  -k, --api_key TEXT         \
    \ specify API key to use for connecting to Galaxy\n                          \
    \    instance. Must be supplied if there is no API\n                         \
    \     key stored for the specified instance, (unless\n                       \
    \       --username option is specified). If there is a\n                     \
    \         stored API key this overrides it.\n  -u, --username TEXT         specify\
    \ username (i.e. email) for connecting to\n                              Galaxy\
    \ instance, as an alternative to using the\n                              API\
    \ key. Prompts for a password unless one is\n                              supplied\
    \ via the --galaxy_password option.\n  -P, --galaxy_password TEXT  supply password\
    \ for connecting to Galaxy\n                              instance, when using\
    \ the --username option.\n  -n, --no-verify             don't verify HTTPS connections\
    \ when connecting\n                              to Galaxy instance. Use this\
    \ when interacting\n                              with Galaxy instances which\
    \ use self-signed\n                              certificates.\n  -q, --suppress-warnings\
    \     suppress warning messages from nebulizer.\n  --debug                   \
    \  turn on debugging output.\n  --help                      Show this message\
    \ and exit.\n\nCommands:\n  add_key                 Store new Galaxy URL and API\
    \ key.\n  add_library_datasets    Add datasets to a data library.\n  create_batch_users\
    \      Create multiple Galaxy users from a template.\n  create_library       \
    \   Create new data library.\n  create_library_folder   Create new folder in a\
    \ data library.\n  create_user             Create new Galaxy user.\n  create_users_from_file\
    \  Create multiple Galaxy users from a file.\n  install_repositories    Install\
    \ tool repositories listed in a file.\n  install_tool            Install tool\
    \ from toolshed.\n  list_installed_tools    List installed tool repositories.\n\
    \  list_keys               List stored Galaxy API keys.\n  list_libraries    \
    \      List data libraries and contents.\n  list_repositories       List installed\
    \ tool repos for (re)install.\n  list_tool_panel         List tool panel contents.\n\
    \  list_tools              List tools in Galaxy instance.\n  list_users      \
    \        List users in Galaxy instance.\n  ping                    'Ping' a Galaxy\
    \ instance.\n  remove_key              Remove stored Galaxy API key.\n  update_key\
    \              Update stored Galaxy API key.\n  update_tool             Update\
    \ tool installed from toolshed.\n  whoami                  Print user details\
    \ associated with API key.\n"
  generated_using: *id002
subcommands: []
help_flag: !Flag
  description: Show this message and exit.
  synonyms:
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "Usage: nebulizer install_tool [OPTIONS] GALAXY TOOLSHED OWNER REPOSITORY\n\
  \                              [REVISION]\n\n  Install tool from toolshed.\n\n \
  \ Installs the specified tool from REPOSITORY owned by OWNER in TOOLSHED,\n  into\
  \ GALAXY.\n\n  Optionally also specify a changeset REVISION; if no revision is specified\n\
  \  and no version of the tool is already installed then will attempt to\n  install\
  \ the latest revision (otherwise will skip installation).\n  Installation will fail\
  \ if the specified revision is not installable, or if\n  no installable revisions\
  \ are found.\n\nOptions:\n  --tool-panel-section TEXT       tool panel section name\
  \ or id to install the\n                                  tool under; if the section\
  \ doesn't exist\n                                  then it will be created. If this\
  \ option is\n                                  omitted then the tool will be installed\
  \ at\n                                  the top-level i.e. not in any section.\n\
  \  --install-tool-dependencies [yes|no]\n                                  install\
  \ tool dependencies via the toolshed,\n                                  if any\
  \ are defined (default is 'yes')\n  --install-repository-dependencies [yes|no]\n\
  \                                  install repository dependencies via the\n   \
  \                               toolshed, if any are defined (default is\n     \
  \                             'yes')\n  --install-resolver-dependencies [yes|no]\n\
  \                                  install dependencies through a resolver that\n\
  \                                  supports installation (e.g. conda) (default\n\
  \                                  is 'yes')\n  --timeout TIMEOUT              \
  \ wait up to TIMEOUT seconds for tool\n                                  installationsto\
  \ complete (default is 600).\n  --no-wait                       don't wait for lengthy\
  \ tool installations to\n                                  complete.\n  --help \
  \                         Show this message and exit.\n"
generated_using: *id002
