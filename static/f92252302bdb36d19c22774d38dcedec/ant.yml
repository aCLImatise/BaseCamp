!Command
positional: []
named:
- !Flag
  description: suppress sourcing of /etc/ant.conf, $HOME/.ant/ant.conf, and $HOME/.antrc
    configuration files
  synonyms:
  - --noconfig
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: enable use of jikes by default, unless set explicitly in configuration
    files
  synonyms:
  - --usejikes
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: print ant exec line generated by this launch script
  synonyms:
  - --execdebug
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: print project help information and exit
  synonyms:
  - -projecthelp
  - -p
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: print the version information and exit
  synonyms:
  - -version
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: print information that might be helpful to diagnose or report problems
    and exit
  synonyms:
  - -diagnostics
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: be extra quiet
  synonyms:
  - -quiet
  - -q
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: print nothing but task outputs and build failures
  synonyms:
  - -silent
  - -S
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: be extra verbose
  synonyms:
  - -verbose
  - -v
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: print debugging information
  synonyms:
  - -debug
  - -d
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: produce logging information without adornments
  synonyms:
  - -emacs
  - -e
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: specifies a path to search for jars and classes
  synonyms:
  - -lib
  args: !SimpleFlagArg
    name: path
  optional: true
- !Flag
  description: use given file for log
  synonyms:
  - -logfile
  args: !SimpleFlagArg
    name: file
  optional: true
- !Flag
  description: <file>                ''
  synonyms:
  - -l
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: the class which is to perform logging
  synonyms:
  - -logger
  args: !SimpleFlagArg
    name: classname
  optional: true
- !Flag
  description: add an instance of class as a project listener
  synonyms:
  - -listener
  args: !SimpleFlagArg
    name: classname
  optional: true
- !Flag
  description: do not allow interactive input
  synonyms:
  - -noinput
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: use given buildfile
  synonyms:
  - -buildfile
  args: !SimpleFlagArg
    name: file
  optional: true
- !Flag
  description: <file>              ''
  synonyms:
  - -file
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: <file>              ''
  synonyms:
  - -f
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: <property>=<value>   use value for given property
  synonyms:
  - -D
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: execute all targets that do not depend on failed target(s)
  synonyms:
  - -keep-going
  - -k
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: load all properties from file with -D properties taking precedence
  synonyms:
  - -propertyfile
  args: !SimpleFlagArg
    name: name
  optional: true
- !Flag
  description: the class which will handle input requests
  synonyms:
  - -inputhandler
  args: !SimpleFlagArg
    name: class
  optional: true
- !Flag
  description: (s)earch for buildfile towards the root of
  synonyms:
  - -find
  args: !SimpleFlagArg
    name: file
  optional: true
- !Flag
  description: <file>           the filesystem and use it
  synonyms:
  - -s
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'number          A niceness value for the main thread:                         1
    (lowest) to 10 (highest); 5 is the default'
  synonyms:
  - -nice
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Run ant without using the jar files from                         ${user.home}/.ant/lib
  synonyms:
  - -nouserlib
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Run ant without using CLASSPATH
  synonyms:
  - -noclasspath
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Java1.5+: use the OS proxy settings'
  synonyms:
  - -autoproxy
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: override Ant's normal entry point
  synonyms:
  - -main
  args: !SimpleFlagArg
    name: class
  optional: true
command:
- ant
parent:
subcommands: []
help_flag: !Flag
  description: print this message and exit
  synonyms:
  - -help
  - -h
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "/tmp/tmph1t2ldsv/bin/ant [script options] [options] [target [target2 [target3]\
  \ ..]]\nScript Options:\n  --help, --h            print this message and ant help\n\
  \  --noconfig             suppress sourcing of /etc/ant.conf,\n                \
  \         $HOME/.ant/ant.conf, and $HOME/.antrc\n                         configuration\
  \ files\n  --usejikes             enable use of jikes by default, unless\n     \
  \                    set explicitly in configuration files\n  --execdebug      \
  \      print ant exec line generated by this\n                         launch script\n\
  \  \nant [options] [target [target2 [target3] ...]]\nOptions: \n  -help, -h    \
  \          print this message and exit\n  -projecthelp, -p       print project help\
  \ information and exit\n  -version               print the version information and\
  \ exit\n  -diagnostics           print information that might be helpful to\n  \
  \                       diagnose or report problems and exit\n  -quiet, -q     \
  \        be extra quiet\n  -silent, -S            print nothing but task outputs\
  \ and build failures\n  -verbose, -v           be extra verbose\n  -debug, -d  \
  \           print debugging information\n  -emacs, -e             produce logging\
  \ information without adornments\n  -lib <path>            specifies a path to search\
  \ for jars and classes\n  -logfile <file>        use given file for log\n    -l\
  \     <file>                ''\n  -logger <classname>    the class which is to perform\
  \ logging\n  -listener <classname>  add an instance of class as a project listener\n\
  \  -noinput               do not allow interactive input\n  -buildfile <file>  \
  \    use given buildfile\n    -file    <file>              ''\n    -f       <file>\
  \              ''\n  -D<property>=<value>   use value for given property\n  -keep-going,\
  \ -k        execute all targets that do not depend\n                         on\
  \ failed target(s)\n  -propertyfile <name>   load all properties from file with\
  \ -D\n                         properties taking precedence\n  -inputhandler <class>\
  \  the class which will handle input requests\n  -find <file>           (s)earch\
  \ for buildfile towards the root of\n    -s  <file>           the filesystem and\
  \ use it\n  -nice  number          A niceness value for the main thread:       \
  \                  1 (lowest) to 10 (highest); 5 is the default\n  -nouserlib  \
  \           Run ant without using the jar files from                         ${user.home}/.ant/lib\n\
  \  -noclasspath           Run ant without using CLASSPATH\n  -autoproxy        \
  \     Java1.5+: use the OS proxy settings\n  -main <class>          override Ant's\
  \ normal entry point\n"
generated_using:
- --help
