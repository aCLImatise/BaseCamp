!Command
command:
- hubward
- process
positional:
- !Positional
  optional: false
  position: 0
  name: or
  description: '- a file called metadata-builder.py (in which case it is executed
    and'
- !Positional
  optional: false
  position: 0
  name: items
  description: "Path to directory containing metadata.yaml file or metadata-\nbuilder.yaml\
    \ file, or path to a group config YAML file. Can\nspecify multiple."
named: []
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "usage: hubward process [-h] items [items ...]\n\n    Process one or many\
  \ studies.\n\n    *items* can be one or more directories or files to process. They\
  \ are\n    handled as follows:\n\n    - If an item to process is a *directory* then\
  \ it is expected to contain\n      either:\n\n        - a file called metadata.yaml\
  \ (in which case that file is used as-is)\n\n            or\n\n        - a file\
  \ called metadata-builder.py (in which case it is executed and\n          is expected\
  \ to create a metadata.yaml file).\n\n        Each output file in the metadata.yaml\
  \ file is considered up-to-date if\n        it are newer than both the input file\
  \ and the script that creates it.\n        If it's up-to-date then nothing is done.\
  \  Otherwise, the script is run\n        to update the output file.\n\n    - If\
  \ an item to process is a *file* then it is assumed to be a group\n      configuration\
  \ YAML-format file. All directories listed in that file's\n      `studies` section\
  \ will be processed.\n\n    For creating a new study, see `hubward skeleton` which\
  \ creates template\n    files that can be filled in.\n    \n\npositional arguments:\n\
  \  items       Path to directory containing metadata.yaml file or metadata-\n  \
  \            builder.yaml file, or path to a group config YAML file. Can\n     \
  \         specify multiple.\n\noptional arguments:\n  -h, --help  show this help\
  \ message and exit\n"
generated_using:
- --help
docker_image:
