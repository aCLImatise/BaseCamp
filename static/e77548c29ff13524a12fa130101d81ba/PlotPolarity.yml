!Command
command:
- PlotPolarity
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -i
  - --input
  description: "Input file in txt format.Generated by\nPolarity_calculation.py"
  args: !SimpleFlagArg
    name: POLARITY
- !Flag
  optional: true
  synonyms:
  - -o
  - --output
  description: Prefix of output files.[required]
  args: !SimpleFlagArg
    name: OUTPUT_PREFIX
- !Flag
  optional: true
  synonyms:
  - -f
  - --format
  description: Output file format,'pdf','png' or 'jpg'. default=pdf
  args: !SimpleFlagArg
    name: OUTPUT_FORMAT
- !Flag
  optional: true
  synonyms:
  - -g
  - --group
  description: "Group name of each group separated by comma. e.g. 'si-\ncontrol,si-eIF3e'"
  args: !SimpleFlagArg
    name: GROUP_NAME
- !Flag
  optional: true
  synonyms:
  - -r
  - --replicate
  description: "Replicate name of each group separated by comma. e.g.\n'si_3e_1_80S,si_3e_2_80S__si_cttl_1_80S,si_ctrl_2_80S'"
  args: !SimpleFlagArg
    name: REPLICATE_NAME
- !Flag
  optional: true
  synonyms:
  - -y
  - --ymax
  description: The max of ylim. default=5
  args: !SimpleFlagArg
    name: YMAX
- !Flag
  optional: true
  synonyms:
  - --mode
  description: "plot all samples or just mean samples [all or mean].If\nchoose 'all',output\
    \ all samples as well as mean\nsamples, else just mean samples.default=all\n"
  args: !SimpleFlagArg
    name: MODE
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - --version
  description: show program's version number and exit
  args: !EmptyFlagArg {}
help_text: "Usage: python PlotPolarity [options]\n\n\n@Description: the user could\
  \ directly input the dataframe format file and plot the polarity without re-do from\
  \ the bam files\n\n\t\t1) the input file must be python DataFrame format, and has\
  \ N columns (N represents the number of samples),\n\t\tindex is the transcript id\
  \ and each column represents the polarity of a specific sample.The input file was\
  \ generated by Polarity_calculation.py\n\t\t2) the output file could be pdf/png/jpg\
  \ format\n\n\n\nOptions:\n  --version             show program's version number\
  \ and exit\n  -h, --help            show this help message and exit\n  -i POLARITY,\
  \ --input=POLARITY\n                        Input file in txt format.Generated by\n\
  \                        Polarity_calculation.py\n  -o OUTPUT_PREFIX, --output=OUTPUT_PREFIX\n\
  \                        Prefix of output files.[required]\n  -f OUTPUT_FORMAT,\
  \ --format=OUTPUT_FORMAT\n                        Output file format,'pdf','png'\
  \ or 'jpg'. default=pdf\n  -g GROUP_NAME, --group=GROUP_NAME\n                 \
  \       Group name of each group separated by comma. e.g. 'si-\n               \
  \         control,si-eIF3e'\n  -r REPLICATE_NAME, --replicate=REPLICATE_NAME\n \
  \                       Replicate name of each group separated by comma. e.g.\n\
  \                        'si_3e_1_80S,si_3e_2_80S__si_cttl_1_80S,si_ctrl_2_80S'\n\
  \  -y YMAX, --ymax=YMAX  The max of ylim. default=5\n  --mode=MODE           plot\
  \ all samples or just mean samples [all or mean].If\n                        choose\
  \ 'all',output all samples as well as mean\n                        samples, else\
  \ just mean samples.default=all\n"
generated_using:
- --help
docker_image: quay.io/biocontainers/ribominer:0.2.3.1--pyh3252c3a_0
