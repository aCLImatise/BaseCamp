from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, Directory, File, Int, Float

Hgloadbed_V0_1_0 = CommandToolBuilder(tool="hgLoadBed", base_command=["hgLoadBed"], inputs=[ToolInput(tag="in_no_sort", input_type=Boolean(optional=True), prefix="-noSort", doc=InputDocumentation(doc="don't sort (you better be sorting before this)")), ToolInput(tag="in_no_bin", input_type=Boolean(optional=True), prefix="-noBin", doc=InputDocumentation(doc="suppress bin field")), ToolInput(tag="in_old_table", input_type=String(optional=True), prefix="-oldTable", doc=InputDocumentation(doc="to existing table")), ToolInput(tag="in_on_server", input_type=Directory(optional=True), prefix="-onServer", doc=InputDocumentation(doc="will speed things up if you're running in a directory that\nthe mysql server can access.")), ToolInput(tag="in_sql_table", input_type=File(optional=True), prefix="-sqlTable", doc=InputDocumentation(doc="Create table from .sql file")), ToolInput(tag="in_rename_sql_table", input_type=String(optional=True), prefix="-renameSqlTable", doc=InputDocumentation(doc="table created with -sqlTable to match track")), ToolInput(tag="in_trim_sql_table", input_type=Boolean(optional=True), prefix="-trimSqlTable", doc=InputDocumentation(doc="If sqlTable has n fields, and input has m fields, only load m fields, meaning the last n-m fields in the sqlTable are optional")), ToolInput(tag="in_type", input_type=Int(optional=True), prefix="-type", doc=InputDocumentation(doc="[+[P]] :\nN is between 3 and 15,\noptional (+) if extra 'bedPlus' fields,\noptional P specifies the number of extra fields. Not required, but preferred.\nExamples: -type=bed6 or -type=bed6+ or -type=bed6+3\n(see http://genome.ucsc.edu/FAQ/FAQformat.html#format1)\nRecommended to use with -as option for better bedPlus validation.")), ToolInput(tag="in_as", input_type=String(optional=True), prefix="-as", doc=InputDocumentation(doc="If you have extra 'bedPlus' fields, it's great to put a definition\nof each field in a row in AutoSql format here.")), ToolInput(tag="in_chrom_info", input_type=File(optional=True), prefix="-chromInfo", doc=InputDocumentation(doc="Specify chromInfo file to validate chrom names and sizes.")), ToolInput(tag="in_tab", input_type=Boolean(optional=True), prefix="-tab", doc=InputDocumentation(doc="Separate by tabs rather than space")), ToolInput(tag="in_has_bin", input_type=Boolean(optional=True), prefix="-hasBin", doc=InputDocumentation(doc="Input bed file starts with a bin field.")), ToolInput(tag="in_no_load", input_type=Boolean(optional=True), prefix="-noLoad", doc=InputDocumentation(doc="- Do not load database and do not clean up tab files")), ToolInput(tag="in_no_history", input_type=Boolean(optional=True), prefix="-noHistory", doc=InputDocumentation(doc="- Do not add history table comments (for custom tracks)")), ToolInput(tag="in_not_item_rgb", input_type=Boolean(optional=True), prefix="-notItemRgb", doc=InputDocumentation(doc="- Do not parse column nine as r,g,b when commas seen (bacEnds)")), ToolInput(tag="in_bed_graph", input_type=Float(optional=True), prefix="-bedGraph", doc=InputDocumentation(doc="- wiggle graph column N of the input file as float dataValue\n- bedGraph N is typically 4: -bedGraph=4")), ToolInput(tag="in_bed_detail", input_type=Boolean(optional=True), prefix="-bedDetail", doc=InputDocumentation(doc="- bedDetail format with id and text for hgc clicks\n- requires tab and sqlTable options")), ToolInput(tag="in_max_chrom_name_length", input_type=Int(optional=True), prefix="-maxChromNameLength", doc=InputDocumentation(doc="- specify max chromName length to avoid\n- reference to chromInfo table")), ToolInput(tag="in_tmpdir", input_type=File(optional=True), prefix="-tmpDir", doc=InputDocumentation(doc="- path to directory for creation of temporary .tab file\n- which will be removed after loading")), ToolInput(tag="in_no_name_ix", input_type=Boolean(optional=True), prefix="-noNameIx", doc=InputDocumentation(doc="- no index for the name column (default creates index)")), ToolInput(tag="in_ignore_empty", input_type=Boolean(optional=True), prefix="-ignoreEmpty", doc=InputDocumentation(doc="- no error on empty input file")), ToolInput(tag="in_no_strict", input_type=Boolean(optional=True), prefix="-noStrict", doc=InputDocumentation(doc="- don't perform coord sanity checks\n- by default we abort when: chromStart >= chromEnd")), ToolInput(tag="in_allow_start_equal_end", input_type=Boolean(optional=True), prefix="-allowStartEqualEnd", doc=InputDocumentation(doc="- even when doing strict checks, allow\nchromStart==chromEnd (zero-length e.g. insertion)")), ToolInput(tag="in_allow_negative_scores", input_type=Boolean(optional=True), prefix="-allowNegativeScores", doc=InputDocumentation(doc="- sql definition of score column is int, not unsigned")), ToolInput(tag="in_custom_track_loader", input_type=Boolean(optional=True), prefix="-customTrackLoader", doc=InputDocumentation(doc="- turns on: -noNameIx, -noHistory, -ignoreEmpty,")), ToolInput(tag="in_fill_in_score", input_type=Int(optional=True), prefix="-fillInScore", doc=InputDocumentation(doc="- if every score value is zero, then use column 'colName' to fill in the score column (from minScore-1000)")), ToolInput(tag="in_min_score", input_type=Int(optional=True), prefix="-minScore", doc=InputDocumentation(doc="- minimum value for score field for -fillInScore option (default 100)")), ToolInput(tag="in_verbose", input_type=String(optional=True), prefix="-verbose", doc=InputDocumentation(doc="- verbose level for extra information to STDERR")), ToolInput(tag="in_dot_is_null", input_type=Int(optional=True), prefix="-dotIsNull", doc=InputDocumentation(doc="- if the specified field is a '.' the replace it with -1")), ToolInput(tag="in_line_limit", input_type=Int(optional=True), prefix="-lineLimit", doc=InputDocumentation(doc="- limit input file to this number of lines")), ToolInput(tag="in_database", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_track", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_files", input_type=String(), position=2, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Hgloadbed_V0_1_0().translate("wdl", allow_empty_container=True)

