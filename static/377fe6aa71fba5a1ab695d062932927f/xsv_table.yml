!Command
command:
- xsv
- table
positional: []
named:
- !Flag
  description: "The minimum width of each column.\n[default: 2]"
  synonyms:
  - -w
  - --width
  args: !SimpleFlagArg
    name: arg
  optional: true
- !Flag
  description: "The minimum number of spaces between each column.\n[default: 2]"
  synonyms:
  - -p
  - --pad
  args: !SimpleFlagArg
    name: arg
  optional: true
- !Flag
  description: "Limits the length of each field to the value\nspecified. If the field\
    \ is UTF-8 encoded, then\n<arg> refers to the number of code points.\nOtherwise,\
    \ it refers to the number of bytes."
  synonyms:
  - -c
  - --condense
  args: !SimpleFlagArg
    name: arg
  optional: true
- !Flag
  description: Write output to <file> instead of stdout.
  synonyms:
  - -o
  - --output
  args: !SimpleFlagArg
    name: file
  optional: true
- !Flag
  description: "The field delimiter for reading CSV data.\nMust be a single character.\
    \ (default: ,)\n"
  synonyms:
  - -d
  - --delimiter
  args: !SimpleFlagArg
    name: arg
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: Display this message
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "Outputs CSV data as a table with columns in alignment.\n\nThis will not\
  \ work well if the CSV data contains large fields.\n\nNote that formatting a table\
  \ requires buffering all CSV data into memory.\nTherefore, you should use the 'sample'\
  \ or 'slice' command to trim down large\nCSV data before formatting it with this\
  \ command.\n\nUsage:\n    xsv table [options] [<input>]\n\ntable options:\n    -w,\
  \ --width <arg>      The minimum width of each column.\n                       \
  \    [default: 2]\n    -p, --pad <arg>        The minimum number of spaces between\
  \ each column.\n                           [default: 2]\n    -c, --condense <arg>\
  \  Limits the length of each field to the value\n                           specified.\
  \ If the field is UTF-8 encoded, then\n                           <arg> refers to\
  \ the number of code points.\n                           Otherwise, it refers to\
  \ the number of bytes.\n\nCommon options:\n    -h, --help             Display this\
  \ message\n    -o, --output <file>    Write output to <file> instead of stdout.\n\
  \    -d, --delimiter <arg>  The field delimiter for reading CSV data.\n        \
  \                   Must be a single character. (default: ,)\n"
generated_using:
- --help
