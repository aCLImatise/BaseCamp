!Command
command:
- fixgaps.sh
positional:
- !Positional
  optional: false
  position: 0
  name: in
  description: ''
named:
- !Flag
  optional: true
  synonyms:
  - -Xmx
  description: "This will set Java's memory usage, overriding autodetection.\n-Xmx20g\
    \ will specify 20 gigs of RAM, and -Xmx200m will\nspecify 200 megs. The max is\
    \ typically 85% of physical memory."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -eoom
  description: "This flag will cause the process to exit if an out-of-memory\nexception\
    \ occurs.  Requires Java 8u92+."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -da
  description: Disable assertions.
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "\nWritten by Brian Bushnell\nLast modified September 11, 2019\n\nDescription:\
  \  Uses paired read insert sizes to estimate the correct\nlength of scaffold gaps,\
  \ and resizes incorrectly-sized gaps.\n\nUsage:  fixgaps.sh in=mapped.sam ref=scaffolds.fa\
  \ out=fixed.fa\n\nStandard parameters:\nin=<file>       Reads mapped to the reference;\
  \ should be sam or bam.\nref=<file>      Reference; may be fasta or fastq.\nout=<file>\
  \      Modified reference; may be fasta or fastq.\noverwrite=f     (ow) Set to false\
  \ to force the program to abort rather than\n                overwrite an existing\
  \ file.\n\nProcessing parameters:\ngap=10          Consider any consecutive streak\
  \ of Ns at least this long to\n                be a scaffold break.  Gaps will not\
  \ be resized to less than\n                this.\nborder=0.4      Ignore the outermost\
  \ (border*readlen) of an insert (read pair)\n                when incrementing coverage.\
  \  A higher value is more accurate \n                but requires more coverage\
  \ and/or longer inserts.  Range: 0-1.\nmindepth=10     Minimum spanning read pairs\
  \ to correct a gap.\n\nJava Parameters:\n-Xmx            This will set Java's memory\
  \ usage, overriding autodetection.\n                -Xmx20g will specify 20 gigs\
  \ of RAM, and -Xmx200m will\n                specify 200 megs. The max is typically\
  \ 85% of physical memory.\n-eoom           This flag will cause the process to exit\
  \ if an out-of-memory\n                exception occurs.  Requires Java 8u92+.\n\
  -da             Disable assertions.\n\nPlease contact Brian Bushnell at bbushnell@lbl.gov\
  \ if you encounter any problems.\n\n"
generated_using:
- --help
docker_image:
