from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, String, File

Extractreads_V0_1_0 = CommandToolBuilder(tool="extractreads", base_command=["extractreads"], inputs=[ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--DEBUG", doc=InputDocumentation(doc="Set logging in debug mode")), ToolInput(tag="in_without_progress_bar", input_type=Boolean(optional=True), prefix="--without-progress-bar", doc=InputDocumentation(doc="desactivate progress bar")), ToolInput(tag="in_window_length", input_type=Int(optional=True), prefix="--window-length", doc=InputDocumentation(doc="size of the sliding window")), ToolInput(tag="in_step", input_type=String(optional=True), prefix="--step", doc=InputDocumentation(doc="position difference between two windows")), ToolInput(tag="in_circular", input_type=Boolean(optional=True), prefix="--circular", doc=InputDocumentation(doc="set for circular sequence")), ToolInput(tag="in_reference", input_type=File(optional=True), prefix="--reference", doc=InputDocumentation(doc="sequence file containing the reference sequences")), ToolInput(tag="in_reverse_reads", input_type=File(optional=True), prefix="--reverse-reads", doc=InputDocumentation(doc="Filename containing reverse solexa reads")), ToolInput(tag="in_write_dump", input_type=File(optional=True), prefix="--write-dump", doc=InputDocumentation(doc="Save the index to a dump file")), ToolInput(tag="in_read_dump", input_type=File(optional=True), prefix="--read-dump", doc=InputDocumentation(doc="Read the index from a dump file")), ToolInput(tag="in_singleton", input_type=File(optional=True), prefix="--singleton", doc=InputDocumentation(doc="Write singleton sequence in this file")), ToolInput(tag="in_skip", input_type=String(optional=True), prefix="--skip", doc=InputDocumentation(doc="skip the N first sequences")), ToolInput(tag="in_only", input_type=String(optional=True), prefix="--only", doc=InputDocumentation(doc="treat only N sequences")), ToolInput(tag="in_genbank", input_type=Boolean(optional=True), prefix="--genbank", doc=InputDocumentation(doc="Input file is in genbank format")), ToolInput(tag="in_embl", input_type=Boolean(optional=True), prefix="--embl", doc=InputDocumentation(doc="Input file is in embl format")), ToolInput(tag="in_skip_on_error", input_type=Boolean(optional=True), prefix="--skip-on-error", doc=InputDocumentation(doc="Skip sequence entries with parse error")), ToolInput(tag="in_fast_a", input_type=Boolean(optional=True), prefix="--fasta", doc=InputDocumentation(doc="Input file is in fasta nucleic format (including\nobitools fasta extentions)")), ToolInput(tag="in_eco_pcr", input_type=Boolean(optional=True), prefix="--ecopcr", doc=InputDocumentation(doc="Input file is in ecopcr format")), ToolInput(tag="in_raw_fast_a", input_type=Boolean(optional=True), prefix="--raw-fasta", doc=InputDocumentation(doc="Input file is in fasta format (but more tolerant to\nformat variant)")), ToolInput(tag="in_sanger", input_type=Boolean(optional=True), prefix="--sanger", doc=InputDocumentation(doc="Input file is in sanger fastq nucleic format (standard\nfastq)")), ToolInput(tag="in_solexa", input_type=Boolean(optional=True), prefix="--solexa", doc=InputDocumentation(doc="Input file is in fastq nucleic format produced by\nsolexa sequencer")), ToolInput(tag="in_eco_pcr_db", input_type=Boolean(optional=True), prefix="--ecopcrdb", doc=InputDocumentation(doc="Input file is an ecopcr database")), ToolInput(tag="in_nuc", input_type=Boolean(optional=True), prefix="--nuc", doc=InputDocumentation(doc="Input file contains nucleic sequences")), ToolInput(tag="in_prot", input_type=Boolean(optional=True), prefix="--prot", doc=InputDocumentation(doc="Input file contains protein sequences")), ToolInput(tag="in_fast_a_output", input_type=Boolean(optional=True), prefix="--fasta-output", doc=InputDocumentation(doc="Output sequences in obitools fasta format")), ToolInput(tag="in_fast_q_output", input_type=Boolean(optional=True), prefix="--fastq-output", doc=InputDocumentation(doc="Output sequences in sanger fastq format")), ToolInput(tag="in_eco_pcr_db_output", input_type=String(optional=True), prefix="--ecopcrdb-output", doc=InputDocumentation(doc="Output sequences in ecopcr database format (sequence\nrecords are not printed on standard output)")), ToolInput(tag="in_uppercase", input_type=Boolean(optional=True), prefix="--uppercase", doc=InputDocumentation(doc="Print sequences in upper case (default is lower case)")), ToolInput(tag="in_created", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_on", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_nine", input_type=Int(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_juin", input_type=String(), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_two_zero_one_two", input_type=Int(), position=4, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Extractreads_V0_1_0().translate("wdl", allow_empty_container=True)

