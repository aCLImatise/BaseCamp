from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Array, String, File, Directory, Boolean, Int, Float

Kaptive_Py_V0_1_0 = CommandToolBuilder(tool="kaptive.py", base_command=["kaptive.py"], inputs=[ToolInput(tag="in_assembly", input_type=Array(t=String(), optional=True), prefix="--assembly", doc=InputDocumentation(doc="FASTA file(s) for assemblies (default: None)")), ToolInput(tag="in_k_refs", input_type=File(optional=True), prefix="--k_refs", doc=InputDocumentation(doc="GenBank file with reference loci (default: None)")), ToolInput(tag="in_allelic_typing", input_type=File(optional=True), prefix="--allelic_typing", doc=InputDocumentation(doc="SRST2-formatted FASTA file of allelic typing genes to\ninclude in results (default: None)")), ToolInput(tag="in_out", input_type=Directory(optional=True), prefix="--out", doc=InputDocumentation(doc="Output directory/prefix (default: ./kaptive_results)")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Display detailed information about each assembly in\nstdout (default: False)")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="The number of threads to use for the BLAST searches\n(default: 4)")), ToolInput(tag="in_no_seq_out", input_type=Boolean(optional=True), prefix="--no_seq_out", doc=InputDocumentation(doc="Suppress output files of sequences matching locus\n(default: False)")), ToolInput(tag="in_no_table", input_type=Boolean(optional=True), prefix="--no_table", doc=InputDocumentation(doc="Suppress output of tab-delimited table (default:\nFalse)")), ToolInput(tag="in_no_json", input_type=File(optional=True), prefix="--no_json", doc=InputDocumentation(doc="Suppress output of JSON file (default: False)")), ToolInput(tag="in_start_end_margin", input_type=Int(optional=True), prefix="--start_end_margin", doc=InputDocumentation(doc="Missing bases at the ends of locus allowed in a\nperfect match. (default: 10)")), ToolInput(tag="in_min_gene_cov", input_type=Int(optional=True), prefix="--min_gene_cov", doc=InputDocumentation(doc="minimum required % coverage for genes (default: 90.0)")), ToolInput(tag="in_min_gene_id", input_type=Int(optional=True), prefix="--min_gene_id", doc=InputDocumentation(doc="minimum required % identity for genes (default: 80.0)")), ToolInput(tag="in_low_gene_id", input_type=Float(optional=True), prefix="--low_gene_id", doc=InputDocumentation(doc="genes with a % identity below this value will be\nflagged as low identity (default: 95.0)")), ToolInput(tag="in_min_assembly_piece", input_type=Int(optional=True), prefix="--min_assembly_piece", doc=InputDocumentation(doc="minimum locus matching assembly piece to return\n(default: 100)")), ToolInput(tag="in_gap_fill_size", input_type=Int(optional=True), prefix="--gap_fill_size", doc=InputDocumentation(doc="when separate parts of the assembly are found within\nthis distance, they will be merged (default: 100)")), ToolInput(tag="in_locus_label", input_type=File(optional=True), prefix="--locus_label", doc=InputDocumentation(doc="In the Genbank file, the source feature must have a\nnote identifying the locus name, starting with this\nlabel followed by a colon (e.g. /note='K locus: K1')\n(default: automatically determined)\n"))], outputs=[ToolOutput(tag="out_out", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_out", type_hint=File()), doc=OutputDocumentation(doc="Output directory/prefix (default: ./kaptive_results)")), ToolOutput(tag="out_no_json", output_type=File(optional=True), selector=InputSelector(input_to_select="in_no_json", type_hint=File()), doc=OutputDocumentation(doc="Suppress output of JSON file (default: False)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Kaptive_Py_V0_1_0().translate("wdl", allow_empty_container=True)

