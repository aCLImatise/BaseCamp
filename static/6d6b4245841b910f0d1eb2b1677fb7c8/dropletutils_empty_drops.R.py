from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Int

Dropletutils_Empty_Drops_R_V0_1_0 = CommandToolBuilder(tool="dropletutils_empty_drops.R", base_command=["dropletutils-empty-drops.R"], inputs=[ToolInput(tag="in_input_object_file", input_type=File(optional=True), prefix="--input-object-file", doc=InputDocumentation(doc="File name in which a serialized R SingleCellExperiment object can be found.")), ToolInput(tag="in_lower", input_type=String(optional=True), prefix="--lower", doc=InputDocumentation(doc="A numeric scalar specifying the lower bound on the total UMI count, at or below which all barcodes are assumed to correspond to empty droplets.")), ToolInput(tag="in_nite_rs", input_type=Int(optional=True), prefix="--niters", doc=InputDocumentation(doc="An integer scalar specifying the number of iterations to use for the Monte Carlo p-value calculations.")), ToolInput(tag="in_test_ambient", input_type=String(optional=True), prefix="--test-ambient", doc=InputDocumentation(doc="A logical scalar indicating whether results should be returned for barcodes with totals less than or equal to lower.")), ToolInput(tag="in_ignore", input_type=String(optional=True), prefix="--ignore", doc=InputDocumentation(doc="A numeric scalar specifying the lower bound on the total UMI count, at or below which barcodes will be ignored.")), ToolInput(tag="in_retain", input_type=String(optional=True), prefix="--retain", doc=InputDocumentation(doc="A numeric scalar specifying the threshold for the total UMI count above which all barcodes are assumed to contain cells.")), ToolInput(tag="in_filter_empty", input_type=String(optional=True), prefix="--filter-empty", doc=InputDocumentation(doc="Should barcodes estimated to have no cells be removed from the output object?")), ToolInput(tag="in_filter_fdr", input_type=String(optional=True), prefix="--filter-fdr", doc=InputDocumentation(doc="FDR filter for removal of barcodes with no cells")), ToolInput(tag="in_output_text_file", input_type=File(optional=True), prefix="--output-text-file", doc=InputDocumentation(doc="File name of text file in which to store output data frame.")), ToolInput(tag="in_output_object_file", input_type=File(optional=True), prefix="--output-object-file", doc=InputDocumentation(doc="File name in which to store serialized SingleCellExperiment object."))], outputs=[ToolOutput(tag="out_output_text_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_text_file", type_hint=File()), doc=OutputDocumentation(doc="File name of text file in which to store output data frame.")), ToolOutput(tag="out_output_object_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_object_file", type_hint=File()), doc=OutputDocumentation(doc="File name in which to store serialized SingleCellExperiment object."))], container="quay.io/biocontainers/dropletutils-scripts:0.0.5--0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Dropletutils_Empty_Drops_R_V0_1_0().translate("wdl")

