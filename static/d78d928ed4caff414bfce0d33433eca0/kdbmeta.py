from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Boolean, File

Kdbmeta_V0_1_0 = CommandToolBuilder(tool="kdbmeta", base_command=["kdbmeta"], inputs=[ToolInput(tag="in_table", input_type=String(optional=True), prefix="--table", doc=InputDocumentation(doc="table-name")), ToolInput(tag="in_unsigned", input_type=Boolean(optional=True), prefix="--unsigned", doc=InputDocumentation(doc="print numeric values as unsigned")), ToolInput(tag="in_read_only", input_type=Boolean(optional=True), prefix="--read-only", doc=InputDocumentation(doc="operate in read-only mode")), ToolInput(tag="in_output", input_type=String(optional=True), prefix="--output", doc=InputDocumentation(doc="Output type: one of (xml text):  whether to\ngenerate well-formed XML. Default: xml\n(well-formed)")), ToolInput(tag="in_ngc", input_type=File(optional=True), prefix="--ngc", doc=InputDocumentation(doc="path to ngc file")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Increase the verbosity of the program\nstatus messages. Use multiple times for more\nverbosity. Negates quiet.")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="Turn off all status messages for the\nprogram. Negated by verbose.")), ToolInput(tag="in_option_file", input_type=File(optional=True), prefix="--option-file", doc=InputDocumentation(doc="Read more options and parameters from the")), ToolInput(tag="in_path_to_database", input_type=File(), position=0, doc=InputDocumentation(doc="access database metadata")), ToolInput(tag="in_path_to_table", input_type=File(), position=1, doc=InputDocumentation(doc="access table metadata")), ToolInput(tag="in_path_to_column", input_type=File(), position=2, doc=InputDocumentation(doc="access column metadata")), ToolInput(tag="in_accession", input_type=String(), position=3, doc=InputDocumentation(doc="sra global access id")), ToolInput(tag="in_name", input_type=String(), position=0, doc=InputDocumentation(doc="a named root node and children")), ToolInput(tag="in_quit_dot", input_type=String(), position=0, doc=InputDocumentation(doc="-L|--log-level <level>           Logging level as number or enum string. One ")), ToolInput(tag="in_file_dot", input_type=File(), position=0, doc=InputDocumentation(doc="kdbmeta : 2.10.8"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Kdbmeta_V0_1_0().translate("wdl", allow_empty_container=True)

