from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, Int, Float, Array

Medaka_Train_V0_1_0 = CommandToolBuilder(tool="medaka_train", base_command=["medaka", "train"], inputs=[ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="Verbose logging of debug information. (default: 20)")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="Minimal logging; warnings only). (default: 20)")), ToolInput(tag="in_train_name", input_type=String(optional=True), prefix="--train_name", doc=InputDocumentation(doc="Name for training run. (default: keras_train)")), ToolInput(tag="in_model", input_type=Int(optional=True), prefix="--model", doc=InputDocumentation(doc="Model definition and initial weights .hdf, or .yml\nwith kwargs to build model. {r103_min_high_g345,\nr103_min_high_g360, r103_prom_high_g360,\nr103_prom_snp_g3210, r103_prom_variant_g3210,\nr10_min_high_g303, r10_min_high_g340,\nr941_min_fast_g303, r941_min_high_g303,\nr941_min_high_g330, r941_min_high_g340_rle,\nr941_min_high_g344, r941_min_high_g351,\nr941_min_high_g360, r941_prom_fast_g303,\nr941_prom_high_g303, r941_prom_high_g330,\nr941_prom_high_g344, r941_prom_high_g360,\nr941_prom_high_g4011, r941_prom_snp_g303,\nr941_prom_snp_g322, r941_prom_snp_g360,\nr941_prom_variant_g303, r941_prom_variant_g322,\nr941_prom_variant_g360} (default: None)")), ToolInput(tag="in_epochs", input_type=Int(optional=True), prefix="--epochs", doc=InputDocumentation(doc="Maximum number of trainig epochs. (default: 5000)")), ToolInput(tag="in_batch_size", input_type=Int(optional=True), prefix="--batch_size", doc=InputDocumentation(doc="Training batch size. (default: 100)")), ToolInput(tag="in_max_samples", input_type=Int(optional=True), prefix="--max_samples", doc=InputDocumentation(doc="Only train on max_samples. (default: inf)")), ToolInput(tag="in_mini_epochs", input_type=Int(optional=True), prefix="--mini_epochs", doc=InputDocumentation(doc="Reduce fraction of data per epoch by this factor\n(default: 1)")), ToolInput(tag="in_seed", input_type=String(optional=True), prefix="--seed", doc=InputDocumentation(doc="Seed for random batch shuffling. (default: None)")), ToolInput(tag="in_threads_io", input_type=Int(optional=True), prefix="--threads_io", doc=InputDocumentation(doc="Number of threads for parallel IO. (default: 1)")), ToolInput(tag="in_device", input_type=Int(optional=True), prefix="--device", doc=InputDocumentation(doc="GPU device to use. (default: 0)")), ToolInput(tag="in_optimizer", input_type=String(optional=True), prefix="--optimizer", doc=InputDocumentation(doc="Optimizer to use. (default: rmsprop)")), ToolInput(tag="in_optim_args", input_type=Int(optional=True), prefix="--optim_args", doc=InputDocumentation(doc="=VAL1,KEY2=VAL2... [KEY1=VAL1,KEY2=VAL2... ...]\nOptimizer key-word arguments. (default: None)")), ToolInput(tag="in_validation_split", input_type=Float(optional=True), prefix="--validation_split", doc=InputDocumentation(doc="Fraction of data to validate on. (default: 0.2)")), ToolInput(tag="in_validation_features", input_type=Array(t=String(), optional=True), prefix="--validation_features", doc=InputDocumentation(doc="Paths to validation data (default: None)\n")), ToolInput(tag="in_features", input_type=String(), position=0, doc=InputDocumentation(doc="Paths to training data."))], outputs=[], container="quay.io/biocontainers/medaka:1.2.3--py36hbcc4abb_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Medaka_Train_V0_1_0().translate("wdl")

