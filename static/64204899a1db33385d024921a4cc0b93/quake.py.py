from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, Boolean, String

Quake_Py_V0_1_0 = CommandToolBuilder(tool="quake.py", base_command=["quake.py"], inputs=[ToolInput(tag="in_fastq_file_reads", input_type=File(optional=True), prefix="-r", doc=InputDocumentation(doc="Fastq file of reads")), ToolInput(tag="in_file_containing_names", input_type=File(optional=True), prefix="-f", doc=InputDocumentation(doc="File containing fastq file names, one per line or two\nper line for paired end reads.")), ToolInput(tag="in_size_kmers_correct", input_type=Int(optional=True), prefix="-k", doc=InputDocumentation(doc="Size of k-mers to correct")), ToolInput(tag="in_number_of_processes", input_type=Int(optional=True), prefix="-p", doc=InputDocumentation(doc="Number of processes [default: 4]")), ToolInput(tag="in_quality_value_ascii", input_type=Int(optional=True), prefix="-q", doc=InputDocumentation(doc="Quality value ascii scale, generally 64 or 33. If not\nspecified, it will guess.")), ToolInput(tag="in_no_jelly", input_type=Boolean(optional=True), prefix="--no_jelly", doc=InputDocumentation(doc="Count k-mers using a simpler program than Jellyfish")), ToolInput(tag="in_no_count", input_type=Boolean(optional=True), prefix="--no_count", doc=InputDocumentation(doc="Kmers are already counted and in expected file [reads\nfile].qcts or [reads file].cts [default: False]")), ToolInput(tag="in_int", input_type=Boolean(optional=True), prefix="--int", doc=InputDocumentation(doc="Count kmers as integers w/o the use of quality values\n[default: False]")), ToolInput(tag="in_hash_size", input_type=Int(optional=True), prefix="--hash_size", doc=InputDocumentation(doc="Jellyfish hash-size parameter. Quake will estimate\nusing k if not given")), ToolInput(tag="in_no_cut", input_type=Boolean(optional=True), prefix="--no_cut", doc=InputDocumentation(doc="Coverage model is optimized and cutoff was printed to\nexpected file cutoff.txt [default: False]")), ToolInput(tag="in_ratio", input_type=Int(optional=True), prefix="--ratio", doc=InputDocumentation(doc="Likelihood ratio to set trusted/untrusted cutoff.\nGenerally set between 10-1000 with lower numbers\nsuggesting a lower threshold. [default: 200]")), ToolInput(tag="in_return_only_reads", input_type=Int(optional=True), prefix="-l", doc=InputDocumentation(doc="Return only reads corrected and/or trimmed to\n<min_read> bp")), ToolInput(tag="in_output_error_reads", input_type=Boolean(optional=True), prefix="-u", doc=InputDocumentation(doc="Output error reads even if they can't be corrected,\nmaintaing paired end reads")), ToolInput(tag="in_use_bwalike_trim", input_type=String(optional=True), prefix="-t", doc=InputDocumentation(doc="Use BWA-like trim parameter <trim_par>")), ToolInput(tag="in_headers", input_type=Boolean(optional=True), prefix="--headers", doc=InputDocumentation(doc="Output only the original read headers without\ncorrection messages")), ToolInput(tag="in_log", input_type=Boolean(optional=True), prefix="--log", doc=InputDocumentation(doc="Output a log of all corrections into *.log as 'quality\nposition new_nt old_nt'\n"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Quake_Py_V0_1_0().translate("wdl", allow_empty_container=True)

