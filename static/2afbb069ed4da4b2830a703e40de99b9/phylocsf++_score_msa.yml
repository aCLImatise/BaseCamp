!Command
command:
- phylocsf++
- score-msa
positional:
- !Positional
  optional: false
  position: 0
  name: MLE
  description: '--comp-phylo BOOL      Compute the PhyloCSF score for each alignment.
    Default: 1'
named:
- !Flag
  optional: true
  synonyms:
  - --strategy
  description: 'PhyloCSF scoring algorithm: MLE, FIXED or OMEGA. Default:'
  args: !SimpleFlagArg
    name: STRING
- !Flag
  optional: true
  synonyms:
  - --comp-anc
  description: "Compute the ancestral sequence composition score (only in\nMLE and\
    \ FIXED mode). Default: 0"
  args: !SimpleFlagArg
    name: BOOL
- !Flag
  optional: true
  synonyms:
  - --threads
  description: 'Parallelize scoring of multiple MSAs in a file. Default: 2'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --output
  description: "Path where tracks in wig format will be written. If it does\nnot exist,\
    \ it will be created. Default: output files are\nstored next to the input files."
  args: !SimpleFlagArg
    name: STRING
- !Flag
  optional: true
  synonyms:
  - --mapping
  description: "If the MSAs don't use common species names (like Human,\nChimp, etc.)\
    \ you can pass a two-column tsv file with a name\nmapping."
  args: !SimpleFlagArg
    name: STRING
- !Flag
  optional: true
  synonyms:
  - --species
  description: "Comma separated list of species to reduce <model> to a\nsubset of\
    \ species to improve running time, e.g.,\n\"Human,Chimp,Seaturtle\""
  args: !SimpleFlagArg
    name: STRING
- !Flag
  optional: true
  synonyms:
  - --genome-length
  description: Total genome length (needed for --output-phylo).
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --coding-exons
  description: "BED-like file (chrom name, strand, phase, start, end) with\ncoordinates\
    \ of coding exons (needed for --output-phylo)."
  args: !SimpleFlagArg
    name: STRING
- !Flag
  optional: true
  synonyms:
  - --model-info
  description: "Output the organisms included in a specific model. Included\nmodels\
    \ are: 21mosquitoes, 58mammals, 7yeast, 29mammals,\n53birds, 49birds, 100vertebrates,\
    \ 23flies, 12flies, 26worms,\n20flies.\n"
  args: !SimpleFlagArg
    name: STRING
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "\e[1mPhyloCSF++ v1.0.0 (build date: 2021-03-11, git commit: f5ab2559)\n\
  \n\e[0mComputes PhyloCSF scores and confidence scores for whole alignments in FASTA\
  \ or \nMAF files. Output is written to bed file(s). Optionally the ancestral sequence\
  \ \ncomposition score can be computed as well. Only one forward frame is computed,\
  \ \ni.e., for other frames reverse the alignments and/or remove the first one or\
  \ two \nbases.\n\nUsage: phylocsf++ score-msa [OPTIONS] <model> <alignments>...\n\
  \nArguments:\n\n  <model>                Path to parameter files, or one of the\
  \ following predefined\n                         models: 21mosquitoes, 58mammals,\
  \ 7yeast, 29mammals, 53birds,\n                         49birds, 100vertebrates,\
  \ 23flies, 12flies, 26worms, 20flies.\n\n  <alignments>           One or more files\
  \ containing multiple sequence alignments.\n                         Formats: MAF\
  \ and multi FASTA. Multiple MSAs can be stored in\n                         a single\
  \ file separated by empty lines.\n\nOptions:\n\n  --strategy STRING      PhyloCSF\
  \ scoring algorithm: MLE, FIXED or OMEGA. Default:\n                         MLE\n\
  \  --comp-phylo BOOL      Compute the PhyloCSF score for each alignment. Default:\
  \ 1\n  --comp-anc BOOL        Compute the ancestral sequence composition score (only\
  \ in\n                         MLE and FIXED mode). Default: 0\n  --threads INT\
  \          Parallelize scoring of multiple MSAs in a file. Default: 2\n  --output\
  \ STRING        Path where tracks in wig format will be written. If it does\n  \
  \                       not exist, it will be created. Default: output files are\n\
  \                         stored next to the input files.\n  --mapping STRING  \
  \     If the MSAs don't use common species names (like Human,\n                \
  \         Chimp, etc.) you can pass a two-column tsv file with a name\n        \
  \                 mapping.\n  --species STRING       Comma separated list of species\
  \ to reduce <model> to a\n                         subset of species to improve\
  \ running time, e.g.,\n                         \"Human,Chimp,Seaturtle\"\n  --genome-length\
  \ INT    Total genome length (needed for --output-phylo).\n  --coding-exons STRING\
  \  BED-like file (chrom name, strand, phase, start, end) with\n                \
  \         coordinates of coding exons (needed for --output-phylo).\n\nHelp options:\n\
  \n  --model-info STRING    Output the organisms included in a specific model. Included\n\
  \                         models are: 21mosquitoes, 58mammals, 7yeast, 29mammals,\n\
  \                         53birds, 49birds, 100vertebrates, 23flies, 12flies, 26worms,\n\
  \                         20flies.\n"
generated_using:
- --help
docker_image: quay.io/biocontainers/phylocsfpp:1.0.0_f5ab2559--hdd86bf5_0
