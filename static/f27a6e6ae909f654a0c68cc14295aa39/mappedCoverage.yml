!Command
command:
- mappedCoverage
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -mask
  description: "Read sequences from in.fasta, lower-case mask\nany base with an alignment,\
    \ write to out.fasta"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -cov
  description: Write coverage statistics to 'dat' instead of stdout
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -raw
  description: "If present, assume the 'sim4db-results' are\na space-separated list\
    \ of 'iid begin end', one per line"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -blast
  description: "Same idea as raw, expects 'UID.IID' for query id,\nblast format (-m)\
    \ 9."
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "unknown arg: '--help'\nusage: mappedCoverage [-mask in.fasta] [-cov dat]\
  \ [-raw | -blast] < sim4db-results\n       -mask    Read sequences from in.fasta,\
  \ lower-case mask\n                any base with an alignment, write to out.fasta\n\
  \       -cov     Write coverage statistics to 'dat' instead of stdout\n       -raw\
  \     If present, assume the 'sim4db-results' are\n                a space-separated\
  \ list of 'iid begin end', one per line\n       -blast   Same idea as raw, expects\
  \ 'UID.IID' for query id,\n                blast format (-m) 9.\n\nOutput on stdout\
  \ is the masked sequence if -mask is specified,\notherwise, it is the coverage statistics.\n\
  \n-mask is almost a required option - we need it to get the length.\nof sequences\
  \ with no mapping (100% uncovered) and to get the\nnumber of sequences.\n\nFound\
  \ 1048576 sequences in the input file.\nreadBuffer()-- seek() not available for\
  \ file 'stdin'.\n"
generated_using:
- --help
docker_image:
