from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, String

Pbsv_Call_V0_1_0 = CommandToolBuilder(tool="pbsv_call", base_command=["pbsv", "call"], inputs=[ToolInput(tag="in_chunk_length", input_type=Boolean(optional=True), prefix="--chunk-length", doc=InputDocumentation(doc="STR   Process in chunks of N\nreference bp. [1M]")), ToolInput(tag="in_region", input_type=Boolean(optional=True), prefix="--region", doc=InputDocumentation(doc="STR   Limit discovery to this\nreference region:\nCHR|CHR:START-END.")), ToolInput(tag="in_types", input_type=Boolean(optional=True), prefix="--types", doc=InputDocumentation(doc="STR   Call these SV types: 'DEL',\n'INS', 'INV', 'DUP', 'BND',\n'CNV'.\n[DEL,INS,INV,DUP,BND,CNV]")), ToolInput(tag="in_min_sv_length", input_type=Boolean(optional=True), prefix="--min-sv-length", doc=InputDocumentation(doc="STR   Ignore variants with length\n< N bp. [20]")), ToolInput(tag="in_min_cnv_length", input_type=Boolean(optional=True), prefix="--min-cnv-length", doc=InputDocumentation(doc="STR   Ignore CNVs with length < N\nbp. [1K]")), ToolInput(tag="in_max_ins_length", input_type=Boolean(optional=True), prefix="--max-ins-length", doc=InputDocumentation(doc="STR   Ignore insertions with\nlength > N bp. [15K]")), ToolInput(tag="in_max_dup_length", input_type=Boolean(optional=True), prefix="--max-dup-length", doc=InputDocumentation(doc="STR   Ignore duplications with\nlength > N bp. [100K]")), ToolInput(tag="in_cluster_max_length_perc_diff", input_type=Boolean(optional=True), prefix="--cluster-max-length-perc-diff", doc=InputDocumentation(doc="INT   Do not cluster signatures\nwith difference in length >\nP%. [25]")), ToolInput(tag="in_cluster_max_ref_pos_diff", input_type=Boolean(optional=True), prefix="--cluster-max-ref-pos-diff", doc=InputDocumentation(doc="STR   Do not cluster signatures >\nN bp apart in reference.\n[200]")), ToolInput(tag="in_cluster_min_base_pair_perc_id", input_type=Boolean(optional=True), prefix="--cluster-min-basepair-perc-id", doc=InputDocumentation(doc="INT   Do not cluster signatures\nwith basepair identity <\nP%. [10]")), ToolInput(tag="in_max_consensus_coverage", input_type=Boolean(optional=True), prefix="--max-consensus-coverage", doc=InputDocumentation(doc="INT   Limit to N reads for\nvariant consensus. [20]")), ToolInput(tag="in_poa_scores", input_type=Boolean(optional=True), prefix="--poa-scores", doc=InputDocumentation(doc="STR   Score POA alignment with\ntriplet match,mismatch,gap.\n[1,-2,-2]")), ToolInput(tag="in_min_realign_length", input_type=Boolean(optional=True), prefix="--min-realign-length", doc=InputDocumentation(doc="STR   Consider segments with > N\nlength for re-alignment.\n[100]")), ToolInput(tag="in_call_min_reads_all_samples", input_type=Boolean(optional=True), prefix="--call-min-reads-all-samples", doc=InputDocumentation(doc="INT   Ignore calls supported by <\nN reads total across\nsamples. [2]")), ToolInput(tag="in_call_min_reads_one_sample", input_type=Boolean(optional=True), prefix="--call-min-reads-one-sample", doc=InputDocumentation(doc="INT   Ignore calls supported by <\nN reads in every sample.\n[2]")), ToolInput(tag="in_call_min_reads_per_strand_all_samples", input_type=Boolean(optional=True), prefix="--call-min-reads-per-strand-all-samples", doc=InputDocumentation(doc="INT   Ignore calls supported by <\nN reads per strand total\nacross samples [1]")), ToolInput(tag="in_call_min_bnd_reads_all_samples", input_type=Boolean(optional=True), prefix="--call-min-bnd-reads-all-samples", doc=InputDocumentation(doc="INT   Ignore BND calls supported\nby < N reads total across\nsamples [2]")), ToolInput(tag="in_call_min_read_perc_one_sample", input_type=Boolean(optional=True), prefix="--call-min-read-perc-one-sample", doc=InputDocumentation(doc="INT   Ignore calls supported by <\nP% of reads in every\nsample. [20]")), ToolInput(tag="in_ccs", input_type=Boolean(optional=True), prefix="--ccs", doc=InputDocumentation(doc="CCS optimized parameters:")), ToolInput(tag="in_preserve_non_acgt", input_type=Int(optional=True), prefix="--preserve-non-acgt", doc=InputDocumentation(doc="Preserve non-ACGT in REF")), ToolInput(tag="in_gt_min_reads", input_type=Boolean(optional=True), prefix="--gt-min-reads", doc=InputDocumentation(doc="INT   Minimum supporting reads to\nassign a sample a\nnon-reference genotype. [1]")), ToolInput(tag="in_annotations", input_type=Boolean(optional=True), prefix="--annotations", doc=InputDocumentation(doc="FILE  Annotate variants by\ncomparing with sequences in\nfasta.Default annotations\nare ALU, L1, SVA.")), ToolInput(tag="in_annotation_min_perc_sim", input_type=Boolean(optional=True), prefix="--annotation-min-perc-sim", doc=InputDocumentation(doc="INT   Annotate variant if\nsequence similarity > P%.\n[60]")), ToolInput(tag="in_min_n_in_gap", input_type=Boolean(optional=True), prefix="--min-N-in-gap", doc=InputDocumentation(doc="STR   Consider >= N consecutive\n'N' bp as a reference gap.\n[50]")), ToolInput(tag="in_filter_near_reference_gap", input_type=Boolean(optional=True), prefix="--filter-near-reference-gap", doc=InputDocumentation(doc="STR   Flag variants < N bp from a\ngap as 'NearReferenceGap'.\n[1K]")), ToolInput(tag="in_filter_near_contig_end", input_type=Boolean(optional=True), prefix="--filter-near-contig-end", doc=InputDocumentation(doc="STR   Flag variants < N bp from a\ncontig end as\n'NearContigEnd'. [1K]")), ToolInput(tag="in_num_threads", input_type=Boolean(optional=True), prefix="--num-threads", doc=InputDocumentation(doc="INT   Number of threads to use, 0\nmeans autodetection. [0]")), ToolInput(tag="in_log_level", input_type=Boolean(optional=True), prefix="--log-level", doc=InputDocumentation(doc="STR   Set log level. Valid\nchoices: (TRACE, DEBUG,\nINFO, WARN, FATAL). [WARN]")), ToolInput(tag="in_log_file", input_type=Boolean(optional=True), prefix="--log-file", doc=InputDocumentation(doc="FILE  Log to a file, instead of\nstderr.\n")), ToolInput(tag="in_variants_dot", input_type=String(), position=0, doc=InputDocumentation(doc="ref.in.svsig.gz|fofn                        STR   SV signatures from one or")), ToolInput(tag="in_ref_dot_out_dot_vcf", input_type=String(), position=0, doc=InputDocumentation(doc="STR   Variant call format (VCF)")), ToolInput(tag="in_output_dot", input_type=String(), position=1, doc=InputDocumentation(doc="Basic Options:"))], outputs=[], container="quay.io/biocontainers/pbsv:2.4.1--0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Pbsv_Call_V0_1_0().translate("wdl")

