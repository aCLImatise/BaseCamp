!Command
positional: []
named:
- !Flag
  description: integer    [2] This is the size of word (n-mer) to count. Thus if you
    want to count codon frequencies for a nucleotide sequence, you should enter 3
    here. (Integer 1 or more)
  synonyms:
  - -word
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: infile     This is a file previously produced by 'compseq' that can
    be used to set the expected frequencies of words in this analysis. The word size
    in the current run must be the same as the one in this results file. Obviously,
    you should use a file produced from protein sequences if you are counting protein
    sequence word frequencies, and you must use one made from nucleotide frequencies
    if you are analysing a nucleotide sequence.
  synonyms:
  - -infile
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: integer    [0] The normal behaviour of 'compseq' is to count the frequencies
    of all words that occur by moving a window of length 'word' up by one each time.
    This option allows you to move the window up by the length of the word each time,
    skipping over the intervening words. You can count only those words that occur
    in a single frame of the word by setting this value to a number other than zero.
    If you set it to 1 it will only count the words in frame 1, 2 will only count
    the words in frame 2 and so on. (Integer 0 or more)
  synonyms:
  - -frame
  args: !EmptyFlagArg {}
  optional: true
command:
- compseq
parent:
subcommands: []
help_flag: !Flag
  description: boolean    Report command line options and exit. More information on
    associated and general qualifiers can be found with -help -verbose
  synonyms:
  - -help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "Calculate the composition of unique words in sequences\nVersion: EMBOSS:6.6.0.0\n\
  \n   Standard (Mandatory) qualifiers:\n  [-sequence]          seqall     Sequence(s)\
  \ filename and optional format, or\n                                  reference\
  \ (input USA)\n   -word               integer    [2] This is the size of word (n-mer)\
  \ to\n                                  count.\n                               \
  \   Thus if you want to count codon frequencies\n                              \
  \    for a nucleotide sequence, you should enter\n                             \
  \     3 here. (Integer 1 or more)\n  [-outfile]           outfile    [*.compseq]\
  \ This is the results file.\n\n   Additional (Optional) qualifiers (* if not always\
  \ prompted):\n   -infile             infile     This is a file previously produced\
  \ by\n                                  'compseq' that can be used to set the\n\
  \                                  expected frequencies of words in this\n     \
  \                             analysis.\n                                  The word\
  \ size in the current run must be the\n                                  same as\
  \ the one in this results file.\n                                  Obviously, you\
  \ should use a file produced\n                                  from protein sequences\
  \ if you are counting\n                                  protein sequence word frequencies,\
  \ and you\n                                  must use one made from nucleotide\n\
  \                                  frequencies if you are analysing a\n        \
  \                          nucleotide sequence.\n   -frame              integer\
  \    [0] The normal behaviour of 'compseq' is to\n                             \
  \     count the frequencies of all words that\n                                \
  \  occur by moving a window of length 'word' up\n                              \
  \    by one each time.\n                                  This option allows you\
  \ to move the window up\n                                  by the length of the\
  \ word each time,\n                                  skipping over the intervening\
  \ words.\n                                  You can count only those words that\
  \ occur in\n                                  a single frame of the word by setting\
  \ this\n                                  value to a number other than zero.\n \
  \                                 If you set it to 1 it will only count the\n  \
  \                                words in frame 1, 2 will only count the\n     \
  \                             words in frame 2 and so on. (Integer 0 or\n      \
  \                            more)\n*  -[no]ignorebz       boolean    [Y] The amino\
  \ acid code B represents\n                                  Asparagine or Aspartic\
  \ acid and the code Z\n                                  represents Glutamine or\
  \ Glutamic acid.\n                                  These are not commonly used\
  \ codes and you\n                                  may wish not to count words containing\
  \ them,\n                                  just noting them in the count of 'Other'\n\
  \                                  words.\n*  -reverse            boolean    [N]\
  \ Set this to be true if you also wish to\n                                  also\
  \ count words in the reverse complement\n                                  of a\
  \ nucleic sequence.\n   -calcfreq           boolean    [N] If this is set true then\
  \ the expected\n                                  frequencies of words are calculated\
  \ from the\n                                  observed frequency of single bases\
  \ or\n                                  residues in the sequences.\n           \
  \                       If you are reporting a word size of 1\n                \
  \                  (single bases or residues) then there is no\n               \
  \                   point in using this option because the\n                   \
  \               calculated expected frequency will be equal\n                  \
  \                to the observed frequency.\n                                  Calculating\
  \ the expected frequencies like\n                                  this will give\
  \ an approximation of the\n                                  expected frequencies\
  \ that you might get by\n                                  using an input file of\
  \ frequencies produced\n                                  by a previous run of this\
  \ program. If an\n                                  input file of expected word\
  \ frequencies has\n                                  been specified then the values\
  \ from that\n                                  file will be used instead of this\n\
  \                                  calculation of expected frequency from the\n\
  \                                  sequence, even if 'calcfreq' is set to be\n \
  \                                 true.\n   -[no]zerocount      boolean    [Y] You\
  \ can make the output results file\n                                  much smaller\
  \ if you do not display the words\n                                  with a zero\
  \ count.\n\n   Advanced (Unprompted) qualifiers: (none)\n   General qualifiers:\n\
  \   -help               boolean    Report command line options and exit. More\n\
  \                                  information on associated and general\n     \
  \                             qualifiers can be found with -help -verbose\n\n"
generated_using:
- --help
