from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, File, Int

Quantifier_Pl_V0_1_0 = CommandToolBuilder(tool="quantifier.pl", base_command=["quantifier.pl"], inputs=[ToolInput(tag="in_list_values_allowed", input_type=Boolean(optional=True), prefix="-u", doc=InputDocumentation(doc="list all values allowed for the species parameter that have an entry at UCSC")), ToolInput(tag="in_mirna_precursor_sequences", input_type=String(optional=True), prefix="-p", doc=InputDocumentation(doc="miRNA precursor sequences from miRBase")), ToolInput(tag="in_mirna_sequences_mirbase", input_type=String(optional=True), prefix="-m", doc=InputDocumentation(doc="miRNA sequences from miRBase")), ToolInput(tag="in_specify_option_contains", input_type=Boolean(optional=True), prefix="-P", doc=InputDocumentation(doc="specify this option of your mature miRNA file contains 5p and 3p ids only")), ToolInput(tag="in_your_read_sequences", input_type=String(optional=True), prefix="-r", doc=InputDocumentation(doc="your read sequences")), ToolInput(tag="in_configtxt_file_sample", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="[file]    config.txt file with different sample ids... or just the one sample id  -- deprecated")), ToolInput(tag="in_optional_star_sequences", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="[star.fa] optional star sequences from miRBase")), ToolInput(tag="in_eg_mouse_searching", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="[species] e.g. Mouse or mmu\nif not searching in a specific species all species in your files will be analyzed\nelse only the species in your dataset is considered")), ToolInput(tag="in_optional_otherwise_generating", input_type=Boolean(optional=True), prefix="-y", doc=InputDocumentation(doc="[time]    optional otherwise its generating a new one")), ToolInput(tag="in_parameter_given_pdfs", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc="if parameter given pdfs will not be generated, otherwise pdfs will be generated")), ToolInput(tag="in_parameter_given_reads", input_type=Boolean(optional=True), prefix="-o", doc=InputDocumentation(doc="if parameter is given reads were not sorted by sample in pdf file, default is sorting")), ToolInput(tag="in_also_considers_mappings", input_type=Boolean(optional=True), prefix="-k", doc=InputDocumentation(doc="also considers precursor-mature mappings that have different ids, eg let7c\nwould be allowed to map to pre-let7a")), ToolInput(tag="in_do_file_conversion", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="do not do file conversion again")), ToolInput(tag="in_do_mapping_again", input_type=Boolean(optional=True), prefix="-x", doc=InputDocumentation(doc="do not do mapping against precursor again")), ToolInput(tag="in_number_when_reads", input_type=Boolean(optional=True), prefix="-g", doc=InputDocumentation(doc="[int]     number of allowed mismatches when mapping reads to precursors, default 1")), ToolInput(tag="in_number_consider_default", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc="[int]     number of nucleotides upstream of the mature sequence to consider, default 2")), ToolInput(tag="in_number_downstream_consider", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc="[int]     number of nucleotides downstream of the mature sequence to consider, default 5")), ToolInput(tag="in_create_outputmrd_file", input_type=File(optional=True), prefix="-j", doc=InputDocumentation(doc="do not create an output.mrd file and pdfs if specified")), ToolInput(tag="in_read_counts_weighed", input_type=Boolean(optional=True), prefix="-W", doc=InputDocumentation(doc="read counts are weighed by their number of mappings. e.g. A read maps twice so each position gets 0.5 added to its read profile")), ToolInput(tag="in_use_unique_mappings", input_type=Boolean(optional=True), prefix="-U", doc=InputDocumentation(doc="use only unique read mappings; Caveat: Some miRNAs have multiple precursors. These will be underestimated in their expression since the multimappers are excluded")), ToolInput(tag="in_more_options", input_type=Boolean(optional=True), prefix="-MORE_OPTIONS", doc=InputDocumentation(doc="")), ToolInput(tag="in_options", input_type=Boolean(optional=True), prefix="-OPTIONS", doc=InputDocumentation(doc="")), ToolInput(tag="in_timestamp", input_type=String(optional=True), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_pdfs", input_type=String(optional=True), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_sort", input_type=String(optional=True), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_stringent", input_type=String(optional=True), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_number", input_type=Int(optional=True), position=4, doc=InputDocumentation(doc="")), ToolInput(tag="in_of", input_type=String(optional=True), position=5, doc=InputDocumentation(doc="")), ToolInput(tag="in_mismatches", input_type=String(optional=True), position=6, doc=InputDocumentation(doc="")), ToolInput(tag="in_in", input_type=String(optional=True), position=7, doc=InputDocumentation(doc="")), ToolInput(tag="in_reads", input_type=String(optional=True), position=8, doc=InputDocumentation(doc="")), ToolInput(tag="in_vs", input_type=String(optional=True), position=9, doc=InputDocumentation(doc="")), ToolInput(tag="in_precursor", input_type=String(optional=True), position=10, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_create_outputmrd_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_create_outputmrd_file", type_hint=File()), doc=OutputDocumentation(doc="do not create an output.mrd file and pdfs if specified"))], container="quay.io/biocontainers/mirdeep2:2.0.1.3--hdfd78af_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Quantifier_Pl_V0_1_0().translate("wdl")

