from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Boolean, Int, File

Bedmap_V0_1_0 = CommandToolBuilder(tool="bedmap", base_command=["bedmap"], inputs=[ToolInput(tag="in_chrom", input_type=String(optional=True), prefix="--chrom", doc=InputDocumentation(doc="Jump to and process data for given <chromosome> only.")), ToolInput(tag="in_delim", input_type=String(optional=True), prefix="--delim", doc=InputDocumentation(doc="Change output delimiter from '|' to <delim> between columns (e.g. '\t').")), ToolInput(tag="in_ec", input_type=Boolean(optional=True), prefix="--ec", doc=InputDocumentation(doc="Error check all input files (slower).")), ToolInput(tag="in_faster", input_type=Boolean(optional=True), prefix="--faster", doc=InputDocumentation(doc="(advanced) Strong input assumptions are made.  Compatible with:")), ToolInput(tag="in_fraction_both", input_type=Boolean(optional=True), prefix="--fraction-both", doc=InputDocumentation(doc=", and --exact overlap options only.")), ToolInput(tag="in_header", input_type=Boolean(optional=True), prefix="--header", doc=InputDocumentation(doc="Accept headers (VCF, GFF, SAM, BED, WIG) in any input file.")), ToolInput(tag="in_min_memory", input_type=Boolean(optional=True), prefix="--min-memory", doc=InputDocumentation(doc="Minimize memory usage (slower).")), ToolInput(tag="in_multi_delim", input_type=String(optional=True), prefix="--multidelim", doc=InputDocumentation(doc="Change delimiter of multi-value output columns from ';' to <delim>.")), ToolInput(tag="in_prec", input_type=Int(optional=True), prefix="--prec", doc=InputDocumentation(doc="Change the post-decimal precision of scores to <int>.  0 <= <int>.")), ToolInput(tag="in_sci", input_type=Boolean(optional=True), prefix="--sci", doc=InputDocumentation(doc="Use scientific notation for score outputs.")), ToolInput(tag="in_skip_unmapped", input_type=Boolean(optional=True), prefix="--skip-unmapped", doc=InputDocumentation(doc="Print no output for a row with no mapped elements.")), ToolInput(tag="in_sweep_all", input_type=Boolean(optional=True), prefix="--sweep-all", doc=InputDocumentation(doc="Ensure <map-file> is read completely (helps to prevent broken pipes).")), ToolInput(tag="in_unmapped_val", input_type=Int(optional=True), prefix="--unmapped-val", doc=InputDocumentation(doc="Print <val> on unmapped --echo-map* and --min/max-element* operations.\nThe default is to print nothing.")), ToolInput(tag="in_exact", input_type=Boolean(optional=True), prefix="--exact", doc=InputDocumentation(doc="First 3 fields from <map-file> must be identical to <ref-file>'s.")), ToolInput(tag="in_fraction_either", input_type=Int(optional=True), prefix="--fraction-either", doc=InputDocumentation(doc="Either --fraction-ref <val> or --fraction-map <val> must be true to\nqualify as overlapping.  Expect 0 < val <= 1.")), ToolInput(tag="in_fraction_map", input_type=Int(optional=True), prefix="--fraction-map", doc=InputDocumentation(doc="The fraction of the element's size from <map-file> that must overlap\nthe element in <ref-file>.  Expect 0 < val <= 1.")), ToolInput(tag="in_fraction_ref", input_type=Int(optional=True), prefix="--fraction-ref", doc=InputDocumentation(doc="The fraction of the element's size from <ref-file> that must overlap\nan element in <map-file>.  Expect 0 < val <= 1.")), ToolInput(tag="in_cv", input_type=Boolean(optional=True), prefix="--cv", doc=InputDocumentation(doc="The result of --stdev divided by the result of --mean.")), ToolInput(tag="in_kth", input_type=File(optional=True), prefix="--kth", doc=InputDocumentation(doc="Generalized median. Report the value, x, such that the fraction <val>\nof overlapping elements' scores from <map-file> is less than x,\nand the fraction 1-<val> of scores is greater than x.  0 < val <= 1.")), ToolInput(tag="in_mad", input_type=Boolean(optional=True), prefix="--mad", doc=InputDocumentation(doc="<mult=1>      The median absolute deviation of overlapping elements in <map-file>.\nMultiply mad score by <mult>.  0 < mult, and mult is 1 by default.")), ToolInput(tag="in_max", input_type=Boolean(optional=True), prefix="--max", doc=InputDocumentation(doc="The highest score from overlapping elements in <map-file>.")), ToolInput(tag="in_max_element", input_type=Boolean(optional=True), prefix="--max-element", doc=InputDocumentation(doc="A (non-random) highest-scoring and overlapping element in <map-file>.")), ToolInput(tag="in_max_element_rand", input_type=Boolean(optional=True), prefix="--max-element-rand", doc=InputDocumentation(doc="A random highest-scoring and overlapping element in <map-file>.")), ToolInput(tag="in_mean", input_type=Boolean(optional=True), prefix="--mean", doc=InputDocumentation(doc="The average score from overlapping elements in <map-file>.")), ToolInput(tag="in_median", input_type=Boolean(optional=True), prefix="--median", doc=InputDocumentation(doc="The median score from overlapping elements in <map-file>.")), ToolInput(tag="in_min", input_type=Boolean(optional=True), prefix="--min", doc=InputDocumentation(doc="The lowest score from overlapping elements in <map-file>.")), ToolInput(tag="in_min_element", input_type=Boolean(optional=True), prefix="--min-element", doc=InputDocumentation(doc="A (non-random) lowest-scoring and overlapping element in <map-file>.")), ToolInput(tag="in_min_element_rand", input_type=Boolean(optional=True), prefix="--min-element-rand", doc=InputDocumentation(doc="A random lowest-scoring and overlapping element in <map-file>.")), ToolInput(tag="in_stdev", input_type=Boolean(optional=True), prefix="--stdev", doc=InputDocumentation(doc="The square root of the result of --variance.")), ToolInput(tag="in_sum", input_type=Boolean(optional=True), prefix="--sum", doc=InputDocumentation(doc="Accumulated scores from overlapping elements in <map-file>.")), ToolInput(tag="in_t_mean", input_type=File(optional=True), prefix="--tmean", doc=InputDocumentation(doc="<hi>  The mean score from overlapping elements in <map-file>, after\nignoring the bottom <low> and top <hi> fractions of those scores.\n0 <= low <= 1.  0 <= hi <= 1.  low+hi <= 1.")), ToolInput(tag="in_variance", input_type=Boolean(optional=True), prefix="--variance", doc=InputDocumentation(doc="The variance of scores from overlapping elements in <map-file>.")), ToolInput(tag="in_w_mean", input_type=Boolean(optional=True), prefix="--wmean", doc=InputDocumentation(doc="Weighted mean, scaled in proportion to the coverage of the <ref-file>\nelement by each overlapping <map-file> element.")), ToolInput(tag="in_bases", input_type=Boolean(optional=True), prefix="--bases", doc=InputDocumentation(doc="The total number of overlapping bases from <map-file>.")), ToolInput(tag="in_bases_uniq", input_type=Boolean(optional=True), prefix="--bases-uniq", doc=InputDocumentation(doc="The number of distinct bases from <ref-file>'s element covered by\noverlapping elements in <map-file>.")), ToolInput(tag="in_bases_uniq_f", input_type=Boolean(optional=True), prefix="--bases-uniq-f", doc=InputDocumentation(doc="The fraction of distinct bases from <ref-file>'s element covered by\noverlapping elements in <map-file>.")), ToolInput(tag="in_count", input_type=Boolean(optional=True), prefix="--count", doc=InputDocumentation(doc="The number of overlapping elements in <map-file>.")), ToolInput(tag="in_echo", input_type=Boolean(optional=True), prefix="--echo", doc=InputDocumentation(doc="Print each line from <ref-file>.")), ToolInput(tag="in_echo_map", input_type=Boolean(optional=True), prefix="--echo-map", doc=InputDocumentation(doc="List all overlapping elements from <map-file>.")), ToolInput(tag="in_echo_map_id", input_type=Boolean(optional=True), prefix="--echo-map-id", doc=InputDocumentation(doc="List IDs from all overlapping <map-file> elements.")), ToolInput(tag="in_echo_map_id_uniq", input_type=Boolean(optional=True), prefix="--echo-map-id-uniq", doc=InputDocumentation(doc="List unique IDs from overlapping <map-file> elements.")), ToolInput(tag="in_echo_map_range", input_type=Boolean(optional=True), prefix="--echo-map-range", doc=InputDocumentation(doc="Print genomic range of overlapping elements from <map-file>.")), ToolInput(tag="in_echo_map_score", input_type=Boolean(optional=True), prefix="--echo-map-score", doc=InputDocumentation(doc="List scores from overlapping <map-file> elements.")), ToolInput(tag="in_echo_map_size", input_type=Boolean(optional=True), prefix="--echo-map-size", doc=InputDocumentation(doc="List the full length of every overlapping element.")), ToolInput(tag="in_echo_overlap_size", input_type=Int(optional=True), prefix="--echo-overlap-size", doc=InputDocumentation(doc="lengths of overlaps.")), ToolInput(tag="in_echo_ref_name", input_type=Boolean(optional=True), prefix="--echo-ref-name", doc=InputDocumentation(doc="Print the first 3 fields of <ref-file> using chrom:start-end format.")), ToolInput(tag="in_echo_ref_row_id", input_type=Boolean(optional=True), prefix="--echo-ref-row-id", doc=InputDocumentation(doc="Print 'id-' followed by the line number of <ref-file>.")), ToolInput(tag="in_echo_ref_size", input_type=Boolean(optional=True), prefix="--echo-ref-size", doc=InputDocumentation(doc="Print the length of each line from <ref-file>.")), ToolInput(tag="in_indicator", input_type=Boolean(optional=True), prefix="--indicator", doc=InputDocumentation(doc="Print 1 if there exists an overlapping element in <map-file>, 0 otherwise."))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bedmap_V0_1_0().translate("wdl", allow_empty_container=True)

