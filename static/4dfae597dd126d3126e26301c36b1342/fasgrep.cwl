class: CommandLineTool
id: fasgrep.cwl
inputs:
- id: in_sequence
  doc: "Print records whose sequence data match the regex. Default:\n[query identifiers]"
  type: boolean?
  inputBinding:
    prefix: --sequence
- id: in_description
  doc: "Print records whose descriptions match the regex. Default:\n[query identifiers]"
  type: boolean?
  inputBinding:
    prefix: --description
- id: in_split_descriptions_matches
  doc: "[int], --field=[int]\nSplit descriptions into fields, and print records for\
    \ which a\nspecific numbered field matches the regex. With this option, the\n\
    description is split into fields using strings of white space as\nfield delimiters\
    \ (the Perl default).\nThis option takes a mandatory integer option argument giving\
    \ the\nindex for which field the regex should query. One-based indexing\nis used,\
    \ so the first field after the identifier has index 1. As\nstandard in Perl, negative\
    \ indices count backwards from the last\nfield in the description; field \"-1\"\
    \ is the last field, \"-2\" is\nthe second-to-last etc.\nIn fasta files, the identifier\
    \ occurs between the record\nseparator (\">\") and the first whitespace on the\
    \ identifier line,\nand the description is everything after the first string of\n\
    white space on the identifier line. Therefore the identifier is\ncounted as the\
    \ 0th field, which is what fasgrep matches by\ndefault."
  type: boolean?
  inputBinding:
    prefix: -f
- id: in_query_sequence_records
  doc: "[string], --tag=[string]\nQuery sequence records by values of a named tag\
    \ in the\ndescription. Name-value pairs in the description are expected to\nhave\
    \ the format \"name:value\" as generated by FAST tools (such as\nfaslen) or \"\
    name=value\" as common in General Feature Format. The\n\"name\" must contain only\
    \ characters from the set [a-zA-Z0-9_-].\nThe \"value\" is any string of non-whitespace\
    \ characters. Sequence\nrecords for which the specified tag does not exist will\
    \ not be\nwritten to output. Currently only the first (left-most)\nocccurence\
    \ of a tag is tested."
  type: boolean?
  inputBinding:
    prefix: -t
- id: in_use_regex_regex
  doc: "[regex], --split-on-regex=[regex]\nUse regex <regex> to split the description\
    \ for the -f option\ninstead of the perl default (which splits on one or more\n\
    whitespace characters). Special characters must be quoted to\nprotect them from\
    \ the shell."
  type: boolean?
  inputBinding:
    prefix: -S
- id: in_negate
  doc: "Output sequences that do not match the regular expression\nargument."
  type: boolean?
  inputBinding:
    prefix: --negate
- id: in_insensitive
  doc: Match data case-insensitively.
  type: boolean?
  inputBinding:
    prefix: --insensitive
- id: in_iupac_expand_nuc
  doc: "Expand IUPAC ambiguity symbols in the regex argument for DNA/RNA\nsequence\
    \ matching (implies -s, matching on sequence data). For\nexample, the symbol \"\
    B\" in the regex is equivalent to \"[CGTU]\".\nThis option, -e, has priority over\
    \ -p."
  type: boolean?
  inputBinding:
    prefix: --iupac-expand-nuc
- id: in_rev_com_iupac_expand_nuc
  doc: "Reverse complement the regular-expression and expand IUPAC\nambiguity symbols\
    \ for DNA/RNA sequence matching (implies -s,\nmatching on sequence data). For\
    \ example, the symbol \"B\" in the\nregex is equivalent to \"[ACG]\". This option,\
    \ -r, takes priority\nover -e or -p. priority."
  type: boolean?
  inputBinding:
    prefix: --revcom-iupac-expand-nuc
- id: in_iupac_expand_prot
  doc: "Expand IUPAC ambiguity symbols in the regex argyment for protein\nsequence\
    \ matching (implies -s, matching on sequence data)."
  type: boolean?
  inputBinding:
    prefix: --iupac-expand-prot
- id: in_specify_type_sequence
  doc: "[dna|rna|protein], --moltype=[dna|rna|protein]\nSpecify the type of sequence\
    \ on input (should not be needed in\nmost cases, but sometimes Bioperl cannot\
    \ guess and complains\nwhen processing data)."
  type: boolean?
  inputBinding:
    prefix: -m
- id: in_man
  doc: Print the manual page and exit.
  type: boolean?
  inputBinding:
    prefix: --man
- id: in_log
  doc: "Creates, or appends to, a generic FAST logfile in the current\nworking directory.\
    \ The logfile records date/time of execution,\nfull command with options and arguments,\
    \ and an optional\ncomment."
  type: boolean?
  inputBinding:
    prefix: --log
- id: in_use_name_default
  doc: "[string], --logname=[string]\nUse [string] as the name of the logfile. Default\
    \ is\n\"FAST.log.txt\"."
  type: boolean?
  inputBinding:
    prefix: -L
- id: in_include_comment_logfile
  doc: "[string], --comment=[string]\nInclude comment [string] in logfile. No comment\
    \ is saved by\ndefault."
  type: boolean?
  inputBinding:
    prefix: -C
- id: in_format
  doc: "=[format]\nUse alternative format for input. See man page for \"fasconvert\"\
    \nfor allowed formats. This is for convenience; the FAST tools are\ndesigned to\
    \ exchange data in Fasta format, and \"fasta\" is the\ndefault format for this\
    \ tool."
  type: boolean?
  inputBinding:
    prefix: --format
- id: in_fast_q
  doc: '> Use fastq format as input and output.'
  type: string?
  inputBinding:
    prefix: --fastq
outputs:
- id: out_stdout
  doc: Standard output stream
  type: stdout
hints:
- class: DockerRequirement
  dockerPull: quay.io/biocontainers/perl-fast:1.06--pl526_0
cwlVersion: v1.1
baseCommand:
- fasgrep
