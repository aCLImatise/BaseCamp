!Command
command:
- prophyle_otu_table.py
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -r
  description: "comma separated list of ranks to build the OTU table for\n[species,genus,family,phylum,class,order,kingdom]"
  args: !SimpleFlagArg
    name: TARGET_RANKS
- !Flag
  optional: true
  synonyms:
  - -t
  description: "position of the taxid in the input lines [3 (for sam and\nkraken format)]"
  args: !SimpleFlagArg
    name: TAXID_FIELD
- !Flag
  optional: true
  synonyms:
  - -i
  description: "position of the read id in the input lines [1 (for sam, use\n2 for\
    \ kraken)]"
  args: !SimpleFlagArg
    name: READ_FIELD
- !Flag
  optional: true
  synonyms:
  - -l
  description: log file [stderr]
  args: !SimpleFlagArg
    name: log_file
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "usage: prophyle_otu_table.py [-h] [-r TARGET_RANKS] [-t TAXID_FIELD]\n\
  \                             [-i READ_FIELD] [-l log_file]\n                  \
  \           <tree> <output_prefix> <in_fn> [<in_fn> ...]\n\nProgram: prophyle_otu_table\n\
  \nCreate an OTU table for ProPhyle's classification output, ignoring reads\nassigned\
  \ to multiple reference genomes. Needs the index to be NCBI-based (with\ninformations\
  \ about ranks and taxid). Change the positions of the read id\nand of the taxid\
  \ with -i and -t to switch format (default: SAM)\n\npositional arguments:\n  <tree>\
  \           taxonomic tree used for classification (Newick/NHX format)\n  <output_prefix>\
  \  prefix for output files (one per rank, each with suffix\n                   \"\
  _rank.tsv\")\n  <in_fn>          input files (outputs of prophyle classify in sam\
  \ or kraken\n                   format)\n\noptional arguments:\n  -h, --help   \
  \    show this help message and exit\n  -r TARGET_RANKS  comma separated list of\
  \ ranks to build the OTU table for\n                   [species,genus,family,phylum,class,order,kingdom]\n\
  \  -t TAXID_FIELD   position of the taxid in the input lines [3 (for sam and\n \
  \                  kraken format)]\n  -i READ_FIELD    position of the read id in\
  \ the input lines [1 (for sam, use\n                   2 for kraken)]\n  -l log_file\
  \      log file [stderr]\n"
generated_using:
- --help
docker_image:
