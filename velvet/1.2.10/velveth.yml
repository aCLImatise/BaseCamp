!Command
positional:
- !Positional
  description: ': directory name for output files'
  position: 0
  name: directory
  optional: false
- !Positional
  description: ': EITHER an odd integer (if even, it will be decremented) <= 191 (if
    above, will be reduced) : OR: m,M,s where m and M are odd integers (if not, they
    will be decremented) with m < M <= 191 (if above, will be reduced) and s is a
    step (even number). Velvet will then hash from k=m to k=M with a step of s'
  position: 1
  name: hash_length
  optional: false
- !Positional
  description: ': path to sequence file or - for standard input'
  position: 2
  name: filename
  optional: false
- !Positional
  description: '[Both files are picked up by graph, so please leave them there]'
  position: 0
  name: directory/Sequences
  optional: false
named:
- !Flag
  description: ': File contains paired reads interleaved in the one file (default)'
  synonyms:
  - -interleaved
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ': Read 2 separate files for paired reads'
  synonyms:
  - -separate
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ': for strand specific transcriptome sequencing data (default: off)'
  synonyms:
  - -strand_specific
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ': reuse Sequences file (or link) already in directory (no need to
    provide original filenames in this case (default: off)'
  synonyms:
  - -reuse_Sequences
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ': reuse binary sequences file (or link) already in directory (no need
    to provide original filenames in this case (default: off)'
  synonyms:
  - -reuse_binary
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ': simply prepare Sequences file, do not hash reads or prepare Roadmaps
    file (default: off)'
  synonyms:
  - -noHash
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ': create binary CnyUnifiedSeq file (default: off)'
  synonyms:
  - -create_binary
  args: !EmptyFlagArg {}
  optional: true
command:
- velveth
parent:
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "velveth - simple hashing program\nVersion 1.2.10\n\nCopyright 2007, 2008\
  \ Daniel Zerbino (zerbino@ebi.ac.uk)\nThis is free software; see the source for\
  \ copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS\
  \ FOR A PARTICULAR PURPOSE.\n\nCompilation settings:\nCATEGORIES = 4\nMAXKMERLENGTH\
  \ = 191\nOPENMP\nLONGSEQUENCES\n\nUsage:\n./velveth directory hash_length {[-file_format][-read_type][-separate|-interleaved]\
  \ filename1 [filename2 ...]} {...} [options]\n\n\tdirectory\t: directory name for\
  \ output files\n\thash_length\t: EITHER an odd integer (if even, it will be decremented)\
  \ <= 191 (if above, will be reduced)\n\t\t\t: OR: m,M,s where m and M are odd integers\
  \ (if not, they will be decremented) with m < M <= 191 (if above, will be reduced)\n\
  \t\t\t\tand s is a step (even number). Velvet will then hash from k=m to k=M with\
  \ a step of s\n\tfilename\t: path to sequence file or - for standard input\n\nFile\
  \ format options:\n\t-fasta\t-fastq\t-raw\t-fasta.gz\t-fastq.gz\t-raw.gz\t-sam\t\
  -bam\t-fmtAuto\n\t(Note: -fmtAuto will detect fasta or fastq, and will try the following\
  \ programs for decompression : gunzip, pbunzip2, bunzip2\n\nFile layout options\
  \ for paired reads (only for fasta and fastq formats):\n\t-interleaved\t: File contains\
  \ paired reads interleaved in the one file (default)\n\t-separate\t: Read 2 separate\
  \ files for paired reads\n\nRead type options:\n\t-short\t-shortPaired\n\t-short2\t\
  -shortPaired2\n\t-short3\t-shortPaired3\n\t-short4\t-shortPaired4\n\t-long\t-longPaired\n\
  \t-reference\n\nOptions:\n\t-strand_specific\t: for strand specific transcriptome\
  \ sequencing data (default: off)\n\t-reuse_Sequences\t: reuse Sequences file (or\
  \ link) already in directory (no need to provide original filenames in this case\
  \ (default: off)\n\t-reuse_binary\t: reuse binary sequences file (or link) already\
  \ in directory (no need to provide original filenames in this case (default: off)\n\
  \t-noHash\t\t\t: simply prepare Sequences file, do not hash reads or prepare Roadmaps\
  \ file (default: off)\n\t-create_binary  \t: create binary CnyUnifiedSeq file (default:\
  \ off)\n\nSynopsis:\n\n- Short single end reads:\n\tvelveth Assem 29 -short -fastq\
  \ s_1_sequence.txt\n\n- Paired-end short reads (remember to interleave paired reads):\n\
  \tvelveth Assem 31 -shortPaired -fasta interleaved.fna\n\n- Paired-end short reads\
  \ (using separate files for the paired reads)\n\tvelveth Assem 31 -shortPaired -fasta\
  \ -separate left.fa right.fa\n\n- Two channels and some long reads:\n\tvelveth Assem\
  \ 43 -short -fastq unmapped.fna -longPaired -fasta SangerReads.fasta\n\n- Three\
  \ channels:\n\tvelveth Assem 35 -shortPaired -fasta pe_lib1.fasta -shortPaired2\
  \ pe_lib2.fasta -short3 se_lib1.fa\n\nOutput:\n\tdirectory/Roadmaps\n\tdirectory/Sequences\n\
  \t\t[Both files are picked up by graph, so please leave them there]\n"
generated_using:
- --help
