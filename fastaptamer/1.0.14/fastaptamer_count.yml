!Command
positional: []
named:
- !Flag
  description: ''
  synonyms:
  - -q
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ''
  synonyms:
  - -v
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ''
  synonyms:
  - -i
  args: !SimpleFlagArg
    name: INFILE
  optional: true
- !Flag
  description: ''
  synonyms:
  - -o
  args: !SimpleFlagArg
    name: OUTFILE
  optional: true
command:
- fastaptamer_count
parent:
subcommands: []
help_flag: !Flag
  description: ''
  synonyms:
  - -h
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "\t\n--------------------------------------------------------------------------------\n\
  \                               FASTAptamer-Count\n--------------------------------------------------------------------------------\n\
  \nUsage: fastaptamer_count [-h] [-q] [-v] [-i INFILE] [-o OUTFILE] \n\n    [-h]\
  \            = Help screen.\n    [-q]            = Suppress STDOUT of run report.\n\
  \    [-v]            = Display version.\n    [-i INFILE]     = input file. REQUIRED.\n\
  \    [-o OUTFILE]    = FASTA output file. REQUIRED.\n    [-f ]           = input\
  \ file is in FASTA format (otherwise it must be FASTQ)\n    [-u ]           = Create\
  \ unique sequence ID's\n\nFASTAptamer-Count serves as the gateway to the FASTAptamer\
  \ toolkit.  For a given\n.FASTQ input file (or FASTA input file if the -f flag is\
  \ used), FASTAptamer-Cou-\nnt will determine the number of times each sequence was\
  \ read, rank and sort seq-\nuences by decreasing total reads, and normalize sequence\
  \ frequency to reads per\nmillion. Output is generated as a non-redundant FASTA\
  \ file in the following for-\nmat for each sequence:\n\n        >RANK-READS-RPM\n\
  \        SEQUENCE\n\t\t\nSummary report (total reads, unique reads, and execution\
  \ time) is displayed as \nSTDOUT at program completion unless [-q] is invoked.\n\
  \nIf the -u flag is used, the FASTA file will have the following format (starting\n\
  at the second sequence that has the same rank):\n\n        >RANK(UNIQ)-READS-RPM\n\
  \        SEQUENCE\n\nWhere UNIQ is a numeric label that distinguishes sequences\
  \ with identical\nRANK and READS (and therefore identical RPM too). This label starts\
  \ at '2' and\nincrements by one for each new sequence that has the same RANK. This\
  \ label is r-\neset each time RANK increases.\n"
generated_using:
- --help
