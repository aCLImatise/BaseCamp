!Command
command:
- tree_doctor
positional:
- !Positional
  description: ''
  position: 0
  name: file.mod
  optional: false
named:
- !Flag
  description: "Remove all leaves whose names are included in the given list\n(comma-separated),\
    \ then remove nodes and combine branches\nto restore as a complete binary tree\
    \ (i.e., with each\nnode having zero children or two children).  This option is\n\
    applied *before* all other options."
  synonyms:
  - --prune
  - -p
  args: !SimpleFlagArg
    name: list
  optional: true
- !Flag
  description: Like --prune, but remove all leaves *except* the ones specified.
  synonyms:
  - --prune-all-but
  - -P
  args: !SimpleFlagArg
    name: list
  optional: true
- !Flag
  description: "Like --prune, but remove all leaves who are not descendants of\nnode.\
    \  (Note: implies --name-ancestors if given node not\nexplicitly named in input\
    \ tree)"
  synonyms:
  - --get-subtree
  - -g
  args: !SimpleFlagArg
    name: node_name
  optional: true
- !Flag
  description: "Rename leaves according to the given mapping.  The format of\n<mapping>\
    \ must be: \"oldname1 -> newname1 ; oldname2 ->\nnewname2 ; ...\".  This option\
    \ is applied *after* all other\noptions (i.e., old names will be used for --prune,\
    \ --merge,\netc.)"
  synonyms:
  - --rename
  - -r
  args: !SimpleFlagArg
    name: mapping
  optional: true
- !Flag
  description: Scale all branches by the specified factor.
  synonyms:
  - --scale
  - -s
  args: !SimpleFlagArg
    name: factor
  optional: true
- !Flag
  description: "Ensure names are assigned to all ancestral nodes.  If a node\nis unnamed,\
    \ create a name by concatenating the names of a leaf\nfrom its left subtree and\
    \ a leaf from its right subtree."
  synonyms:
  - --name-ancestors
  - -a
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "<node[+]:label>\nAdd a label to the subtree of the named node.  If\
    \ the node name\nis followed by a \"+\" sign, then the branch leading to that\
    \ node\nis included in the subtree.  This may be used multiple times to add\n\
    more than one label, though a single branch may have only one\nlabel.  --label-subtree\
    \ and --label-branches options are parsed in\nthe order given, so that later uses\
    \ may override earlier ones.\nLabels are applied *after* all pruning, re-rooting,\
    \ and re-naming\noptions are applied."
  synonyms:
  - --label-subtree
  - -L
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "<branch1,branch2,...:label>\nAdd a label to the branches listed. \
    \ Branches are named by the name\nof the node which descends from that branch.\
    \  See --label-subtree\nabove for more information."
  synonyms:
  - --label-branches
  - -l
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Output tree only in Newick format rather than complete tree model.
  synonyms:
  - --tree-only
  - -t
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: (Implies --tree-only).  Output only topology in Newick format.
  synonyms:
  - --no-branchlen
  - -N
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "In place of ordinary output, print a description of the id,\nname,\
    \ parent, children, and distance to parent for each node\nof the tree.  Sometimes\
    \ useful for debugging.  Can be used with\nother options."
  synonyms:
  - --dissect
  - -d
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "In place of ordinary output, print the total branch length of\nthe\
    \ tree that would have been printed."
  synonyms:
  - --branchlen
  - -b
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "In place of ordinary output, report distance from named node to\n\
    root"
  synonyms:
  - --depth
  - -D
  args: !SimpleFlagArg
    name: node_name
  optional: true
- !Flag
  description: Reroot tree at internal node with specified name.
  synonyms:
  - --reroot
  - -R
  args: !SimpleFlagArg
    name: node_name
  optional: true
- !Flag
  description: "(for use with --scale)  Alter only the branches in the subtree\nbeneath\
    \ the specified node."
  synonyms:
  - --subtree
  - -S
  args: !SimpleFlagArg
    name: node_name
  optional: true
- !Flag
  description: "(For use with --reroot or --subtree) include branch above specified\n\
    node with subtree beneath it."
  synonyms:
  - --with-branch
  - -B
  args: !SimpleFlagArg
    name: node_name
  optional: true
- !Flag
  description: "| <file2.nh>\nMerge with another tree model or tree.  The primary\
    \ model\n(<file.mod>) must have a subset of the species (leaves) in the\nsecondary\
    \ model (<file2.mod>), and the primary tree must be a\nproper subtree of the secondary\
    \ tree (i.e., the subtree of the\nsecondary tree beneath the LCA of the species\
    \ in the primary\ntree must equal the primary tree in terms of topology and\n\
    species names).  If a full tree model is given for the\nsecondary tree, only the\
    \ tree will be considered.  The merged\ntree model will have the rate matrix,\
    \ equilibrium frequencies,\nand rate distribution of the primary model, but a\
    \ merged tree\nthat includes all species from both models.  The trees will be\n\
    merged by first scaling the secondary tree such that the\nsubtree corresponding\
    \ to the primary tree has equal overall\nlength to the primary tree, then combining\
    \ the primary tree\nwith the non-overlapping portion of the secondary tree.  The\n\
    names of matching species (leaves) must be exactly equal."
  synonyms:
  - --merge
  - -m
  args: !SimpleFlagArg
    name: file2.mod
  optional: true
- !Flag
  description: "| default\nExtrapolate to a larger set of species based on the given\n\
    phylogeny (Newick-format).  The primary tree must be a subtree\nof the phylogeny\
    \ given in <phylog.nh>, but it need not be\na \"proper\" subtree (see --merge).\
    \  A copy will be created\nof the larger phylogeny then scaled such that the total\
    \ branch\nlength of the subtree corresponding to the primary tree equals\nthe\
    \ total branch length of the primary tree; this new version\nwill then be used\
    \ in place of the primary tree.  If the string\n\"default\" is given instead of\
    \ a filename, then a phylogeny\nfor 25 vertebrate species, estimated from sequence\
    \ data for\nTarget 1 (CFTR) of the NISC Comparative Sequencing Program\n(Thomas\
    \ et al., Nature 424:788-793, 2003), will be assumed.\nThis option is similar\
    \ to merge but differs in that the branch\nlength proportions of the output tree\
    \ come completely from the\nlarger tree and the smaller tree doesn't have to be\
    \ a proper\nsubset of the larger tree."
  synonyms:
  - --extrapolate
  - -e
  args: !SimpleFlagArg
    name: phylog.nh
  optional: true
- !Flag
  description: "The input file is in Newick format (necessary if file name does\n\
    not end in .nh)"
  synonyms:
  - --newick
  - -n
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: "Print this help message.\n"
  synonyms:
  - --help
  - -h
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "\nPROGRAM:      tree_doctor\n\nDESCRIPTION:  Scale, prune, merge, and\
  \ otherwise tweak phylogenetic trees.\n              Expects input to be a tree\
  \ model (.mod) file unless\n              filename ends with '.nh' or -n option\
  \ is used, in which case \n              it will be expected to be a tree file in\
  \ Newick format.\n\nUSAGE:        tree_doctor [OPTIONS] <file.mod>|<file.nh>\n\n\
  OPTIONS:\n    --prune, -p <list>\n        Remove all leaves whose names are included\
  \ in the given list\n        (comma-separated), then remove nodes and combine branches\n\
  \        to restore as a complete binary tree (i.e., with each\n        node having\
  \ zero children or two children).  This option is\n        applied *before* all\
  \ other options.\n\n    --prune-all-but, -P <list>\n        Like --prune, but remove\
  \ all leaves *except* the ones specified.\n\n    --get-subtree, -g <node_name>\n\
  \        Like --prune, but remove all leaves who are not descendants of \n     \
  \   node.  (Note: implies --name-ancestors if given node not \n        explicitly\
  \ named in input tree)\n\n    --rename, -r <mapping>\n        Rename leaves according\
  \ to the given mapping.  The format of\n        <mapping> must be: \"oldname1 ->\
  \ newname1 ; oldname2 ->\n        newname2 ; ...\".  This option is applied *after*\
  \ all other\n        options (i.e., old names will be used for --prune, --merge,\n\
  \        etc.)\n\n    --scale, -s <factor>\n        Scale all branches by the specified\
  \ factor.\n\n    --name-ancestors, -a\n        Ensure names are assigned to all\
  \ ancestral nodes.  If a node\n        is unnamed, create a name by concatenating\
  \ the names of a leaf\n        from its left subtree and a leaf from its right subtree.\n\
  \n   --label-subtree, -L <node[+]:label>\n        Add a label to the subtree of\
  \ the named node.  If the node name\n        is followed by a \"+\" sign, then the\
  \ branch leading to that node\n        is included in the subtree.  This may be\
  \ used multiple times to add\n        more than one label, though a single branch\
  \ may have only one\n        label.  --label-subtree and --label-branches options\
  \ are parsed in\n        the order given, so that later uses may override earlier\
  \ ones.\n        Labels are applied *after* all pruning, re-rooting, and re-naming\n\
  \        options are applied.\n\n    --label-branches, -l <branch1,branch2,...:label>\n\
  \        Add a label to the branches listed.  Branches are named by the name\n \
  \       of the node which descends from that branch.  See --label-subtree\n    \
  \    above for more information.\n\n    --tree-only, -t\n        Output tree only\
  \ in Newick format rather than complete tree model.\n\n    --no-branchlen, -N\n\
  \        (Implies --tree-only).  Output only topology in Newick format.\n\n    --dissect,\
  \ -d\n        In place of ordinary output, print a description of the id,\n    \
  \    name, parent, children, and distance to parent for each node\n        of the\
  \ tree.  Sometimes useful for debugging.  Can be used with\n        other options.\n\
  \n    --branchlen, -b\n        In place of ordinary output, print the total branch\
  \ length of\n        the tree that would have been printed.\n\n    --depth, -D <node_name>\n\
  \        In place of ordinary output, report distance from named node to\n     \
  \   root\n\n    --reroot, -R <node_name>\n        Reroot tree at internal node with\
  \ specified name.\n\n    --subtree, -S <node_name>\n        (for use with --scale)\
  \  Alter only the branches in the subtree \n        beneath the specified node.\n\
  \n    --with-branch, -B <node_name>\n        (For use with --reroot or --subtree)\
  \ include branch above specified\n        node with subtree beneath it.\n\n    --merge,\
  \ -m <file2.mod> | <file2.nh>\n        Merge with another tree model or tree.  The\
  \ primary model\n        (<file.mod>) must have a subset of the species (leaves)\
  \ in the\n        secondary model (<file2.mod>), and the primary tree must be a\n\
  \        proper subtree of the secondary tree (i.e., the subtree of the\n      \
  \  secondary tree beneath the LCA of the species in the primary\n        tree must\
  \ equal the primary tree in terms of topology and\n        species names).  If a\
  \ full tree model is given for the\n        secondary tree, only the tree will be\
  \ considered.  The merged\n        tree model will have the rate matrix, equilibrium\
  \ frequencies,\n        and rate distribution of the primary model, but a merged\
  \ tree\n        that includes all species from both models.  The trees will be\n\
  \        merged by first scaling the secondary tree such that the\n        subtree\
  \ corresponding to the primary tree has equal overall\n        length to the primary\
  \ tree, then combining the primary tree\n        with the non-overlapping portion\
  \ of the secondary tree.  The\n        names of matching species (leaves) must be\
  \ exactly equal.\n\n    --extrapolate, -e <phylog.nh> | default\n        Extrapolate\
  \ to a larger set of species based on the given\n        phylogeny (Newick-format).\
  \  The primary tree must be a subtree\n        of the phylogeny given in <phylog.nh>,\
  \ but it need not be\n        a \"proper\" subtree (see --merge).  A copy will be\
  \ created\n        of the larger phylogeny then scaled such that the total branch\n\
  \        length of the subtree corresponding to the primary tree equals\n      \
  \  the total branch length of the primary tree; this new version\n        will then\
  \ be used in place of the primary tree.  If the string\n        \"default\" is given\
  \ instead of a filename, then a phylogeny\n        for 25 vertebrate species, estimated\
  \ from sequence data for\n        Target 1 (CFTR) of the NISC Comparative Sequencing\
  \ Program\n        (Thomas et al., Nature 424:788-793, 2003), will be assumed.\n\
  \        This option is similar to merge but differs in that the branch\n      \
  \  length proportions of the output tree come completely from the\n        larger\
  \ tree and the smaller tree doesn't have to be a proper\n        subset of the larger\
  \ tree.\n\n    --newick,-n\n        The input file is in Newick format (necessary\
  \ if file name does\n        not end in .nh)\n\n    --help, -h\n        Print this\
  \ help message.\n\n"
generated_using:
- --help
