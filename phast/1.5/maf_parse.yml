!Command
positional:
- !Positional
  description: ''
  position: 0
  name: infile
  optional: false
named:
- !Flag
  description: Pretty-print alignment (use '.' when character matches corresponding
    character in first sequence).  Ignored if --out-format SS is selected.
  synonyms:
  - --pretty
  - -p
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Start index of sub-alignment (indexing starts with 1). Coordinates
    are in terms of the reference sequence unless the --no-refseq option is used,
    in which case they are in terms of alignment columns.  Default is 1.
  synonyms:
  - --start
  - -s
  args: !SimpleFlagArg
    name: start_col
  optional: true
- !Flag
  description: End index of sub-alignment.  Default is length of alignment. Coordinates
    defined as in --start option, above.
  synonyms:
  - --end
  - -e
  args: !SimpleFlagArg
    name: end_col
  optional: true
- !Flag
  description: Comma-separated list of sequences to include (default) exclude (if
    --exclude).  Indicate by sequence number or name (numbering starts with 1 and
    is evaluated *after* --order is applied).
  synonyms:
  - --seqs
  - -l
  args: !SimpleFlagArg
    name: seq_list
  optional: true
- !Flag
  description: Exclude rather than include specified sequences.
  synonyms:
  - --exclude
  - -x
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Change order of rows in alignment to match sequence names specified
    in name_list.  The first name in the alignment becomes the reference sequence.
  synonyms:
  - --order
  - -O
  args: !SimpleFlagArg
    name: name_list
  optional: true
- !Flag
  description: Do not assume first sequence in MAF is refseq.  Instead, use coordinates  given
    by absolute position in alignment (starting from 1).
  synonyms:
  - --no-refseq
  - -n
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Split MAF into pieces by length, and puts output in  outRootX.maf,
    where X=1,2,...,numPieces.  outRoot can be modified with --out-root, and the minimum
    number of digits in X can be modified with --out-root-digits. Splits between blocks,
    so that each output file does not exceed specified length.  By default, length
    is counted by distance spanned in alignment by refseq, unless --no-refseq is specified.
  synonyms:
  - --split
  - -S
  args: !SimpleFlagArg
    name: length
  optional: true
- !Flag
  description: Filename root for output files produced by --split (default "maf_parse").
  synonyms:
  - --out-root
  - -r
  args: !SimpleFlagArg
    name: name
  optional: true
- !Flag
  description: (for use with --split).  The minimum number of digits used to  index
    each output file produced by split.
  synonyms:
  - --out-root-digits
  - -d
  args: !SimpleFlagArg
    name: numdigits
  optional: true
- !Flag
  description: (Requires --features).  Split by groups in annotation file, as  defined
    by specified tag.
  synonyms:
  - --by-group
  - -P
  args: !SimpleFlagArg
    name: tag
  optional: true
- !Flag
  description: Mask all bases with quality score <= n.  Note that n is in the same
    units as displayed in the MAF (ranging from 0-9), and represents min(9, floor(PHRED_score/5)).  Bases
    without any quality score will not be masked.
  synonyms:
  - --mask-bases
  - -b
  args: !SimpleFlagArg
    name: qscore
  optional: true
- !Flag
  description: (For use with --mask-bases).  Write a file containing all the regions
    masked for low quality.  The file will be in 0-based coordinates relative to the
    refseq, with an additional column giving the name of the species masked.  Note
    that low-quality bases masked at alignment columns with a gap in the reference
    sequence may not be represented in the output file.
  synonyms:
  - --masked-file
  - -m
  args: !SimpleFlagArg
    name: filename
  optional: true
- !Flag
  description: (Requires --features).  Mask all bases annotated in features in the
    given species (can be a comma-delimited list of species).  Note that coordinates
    are always in terms of refseq, even if a different species is being masked.
  synonyms:
  - --mask-features
  - -M
  args: !SimpleFlagArg
    name: spec
  optional: true
- !Flag
  description: Remove lines in MAF starting with i.
  synonyms:
  - --strip-i-lines
  - -I
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Remove lines in MAF starting with e.
  synonyms:
  - --strip-e-lines
  - -E
  args: !EmptyFlagArg {}
  optional: true
command:
- maf_parse
parent:
subcommands: []
help_flag: !Flag
  description: Print this help message.
  synonyms:
  - --help
  - -h
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "\nUSAGE: maf_parse [OPTIONS] <infile>\n\nDESCRIPTION:\n\n    Reads a MAF\
  \ file and perform various operations on it.\n    Performs parsing operations block-by-block\
  \ whenever possible,\n    rather than storing entire alignment in memory.  \n  \
  \  Can extract a sub-alignment from an alignment (by row\n     or by column).  Can\
  \ extract features given GFF, BED, or \n    genepred file.  Can also extract sub-features\
  \ such as CDS1,2,3\n    or 4d sites.  Can perform various functions such as gap\n\
  \    stripping or re-ordering of sequences.  Capable of reading and\n    writing\
  \ in a few common formats, but will not load input or output\n    alignments into\
  \ memory if output format is MAF.\n\nOPTIONS:\n\n (Output format)\n    --out-format,\
  \ -o MAF|PHYLIP|FASTA|MPM|SS\n        (Default MAF).  Output file format.  SS format\
  \ is only\n        available un-ordered.  Note that some options, which involve\n\
  \        reversing alignments based on strand, or stripping gaps, \n        cannot\
  \ be output in MAF format and use FASTA by default.\n        Also note that when\
  \ output format is not MAF, the entire\n        output must be loaded into memory.\n\
  \n    --pretty, -p\n        Pretty-print alignment (use '.' when character matches\n\
  \        corresponding character in first sequence).  Ignored if\n        --out-format\
  \ SS is selected.\n\n (Obtaining sub-alignments and re-ordering rows)\n    --start,\
  \ -s <start_col>\n        Start index of sub-alignment (indexing starts with 1).\n\
  \        Coordinates are in terms of the reference sequence unless\n        the\
  \ --no-refseq option is used, in which case they are in\n        terms of alignment\
  \ columns.  Default is 1.\n\n    --end, -e <end_col>\n        End index of sub-alignment.\
  \  Default is length of alignment.\n        Coordinates defined as in --start option,\
  \ above.\n\n    --seqs, -l <seq_list>\n        Comma-separated list of sequences\
  \ to include (default)\n        exclude (if --exclude).  Indicate by sequence number\
  \ or name\n        (numbering starts with 1 and is evaluated *after* --order is\n\
  \        applied).\n\n    --exclude, -x\n        Exclude rather than include specified\
  \ sequences.\n\n    --order, -O <name_list>\n        Change order of rows in alignment\
  \ to match sequence names\n        specified in name_list.  The first name in the\
  \ alignment becomes\n        the reference sequence.\n\n    --no-refseq, -n\n  \
  \      Do not assume first sequence in MAF is refseq.  Instead, use\n        coordinates\
  \  given by absolute position in alignment (starting\n        from 1).\n\n(Splitting\
  \ into multiple MAFs by length)\n    --split, -S length \n        Split MAF into\
  \ pieces by length, and puts output in \n        outRootX.maf, where X=1,2,...,numPieces.\
  \  outRoot can be\n        modified with --out-root, and the minimum number of digits\
  \ in X\n        can be modified with --out-root-digits.\n        Splits between\
  \ blocks, so that each output file does not exceed\n        specified length.  By\
  \ default, length is counted by distance\n        spanned in alignment by refseq,\
  \ unless --no-refseq is specified.\n\n   --out-root, -r <name>\n        Filename\
  \ root for output files produced by --split (default\n        \"maf_parse\").\n\n\
  \   --out-root-digits, -d <numdigits>\n        (for use with --split).  The minimum\
  \ number of digits used to \n        index each output file produced by split.\n\
  \n(Extracting features from MAF)\n    --features, -g <fname>\n        Annotations\
  \ file.  May be GFF, BED, or genepred format.\n        Coordinates assumed to be\
  \ in frame of first sequence of\n        alignment (reference sequence).  By default,\
  \ outputs subset of \n        MAF which are labeled in annotations file.  But can\
  \ be used with\n        --by-category, --by-group, and/or --do-cats to split MAF\
  \ by\n        annotation type.  Or if used with --mask-features, is only used\n\
  \        to determine regions to mask.  Implies --strip-i-lines, \n        --strip-e-lines\n\
  \n    --by-category, -L\n        (Requires --features).  Split by category, as defined\
  \ by\n        annotations file and (optionally) category map (see --catmap).\n\n\
  \    --do-cats, -C <cat_list>\n        (For use with --by-category) Output sub-alignments\
  \ for only the\n        specified categories.\n\n    --catmap, -c <fname>|<string>\n\
  \        (Optionally use with --by-category) Mapping of feature types to\n     \
  \   category numbers.  Can either give a filename or an \"inline\"\n        description\
  \ of a simple category map, e.g.,\n         --catmap \"NCATS = 3 ; CDS 1-3\" or\n\
  \         --catmap \"NCATS = 1; UTR 1\".\n\n    --by-group, -P <tag>\n        (Requires\
  \ --features).  Split by groups in annotation file, as \n        defined by specified\
  \ tag.\n\n(Masking by quality score)\n    --mask-bases, -b <qscore>\n        Mask\
  \ all bases with quality score <= n.  Note that n is in the\n        same units\
  \ as displayed in the MAF (ranging from 0-9), and\n        represents min(9, floor(PHRED_score/5)).\
  \  Bases without any\n        quality score will not be masked.\n\n    --masked-file,\
  \ -m <filename>\n       (For use with --mask-bases).  Write a file containing all\
  \ the\n       regions masked for low quality.  The file will be in 0-based\n   \
  \    coordinates relative to the refseq, with an additional column\n       giving\
  \ the name of the species masked.  Note that low-quality bases\n       masked at\
  \ alignment columns with a gap in the reference sequence\n       may not be represented\
  \ in the output file.\n\n    --mask-features -M <spec>\n      (Requires --features).\
  \  Mask all bases annotated in features in the\n      given species (can be a comma-delimited\
  \ list of species).  Note that\n      coordinates are always in terms of refseq,\
  \ even if a different species\n      is being masked.\n\n (Other)\n    --strip-i-lines,\
  \ -I\n        Remove lines in MAF starting with i.\n    --strip-e-lines, -E\n  \
  \      Remove lines in MAF starting with e.\n    --help, -h\n        Print this\
  \ help message.\n\n"
generated_using:
- --help
