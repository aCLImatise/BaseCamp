!Command
positional:
- !Positional
  description: ''
  position: 0
  name: infile
  optional: false
named:
- !Flag
  description: (for use with --output bed) Create a separate line for each feature
    in bed output (by default, all features of a group are described by a single line).
  synonyms:
  - --simplebed
  - -b
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Write any discarded features to specified file.
  synonyms:
  - --discards
  - -d
  args: !SimpleFlagArg
    name: fname
  optional: true
command:
- refeature
parent:
subcommands: []
help_flag: !Flag
  description: Print this help message.
  synonyms:
  - --help
  - -h
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "\nPROGRAM:        refeature\n\nDESCRIPTION:    Read a file representing\
  \ a set of features, optionally\n                alter the set in one or more of\
  \ several possible ways, then\n                output it in the desired format.\
  \  Input and output formats\n                may be GFF, BED, or genepred.\n\n \
  \               The input format is recognized automatically, but auto-\n      \
  \          recognition requires a 'seekable' input stream (e.g., an\n          \
  \      actual file rather than a pipe from stdin).\n\nUSAGE:          refeature\
  \ [OPTIONS] <infile>\n\nOPTIONS:\n    --include-only, -i <types>\n        Include\
  \ only features of the specified types (comma-delimited list);\n        filter out\
  \ everything else.\n\n    --include-groups, -l <file>\n        Include only groups\
  \ whose names are listed in the specified file.\n        Group names in file must\
  \ be delimited by white-space (can be on\n        any number of lines).\n\n    --sort,\
  \ -s\n        Sort features primarily by start position and secondarily\n      \
  \  by end position (usually has desired effect in case of short\n        overlapping\
  \ features, e.g., start & stop codons).  Features\n        will be sorted both across\
  \ groups and within groups, but members\n        of a group will be kept together.\n\
  \n    --unique, -u\n        Ensures that output contains no overlapping groups (or\n\
  \        subgroups, if -e).  If groups overlap, the one with the highest\n     \
  \   score (if available) or longest length (if no score) is kept and\n        others\
  \ are discarded.  Warning: long UTRs can have undesirable\n        results; filter\
  \ out UTR exons to avoid.\n\n    --groupby, -g <tag>\n        Group features according\
  \ to specified tag (default \"transcript_id\")\n\n    --exongroup, -e <tag>\n  \
  \      Sub-group features into contiguous sets, and define\n        sub-groups using\
  \ specified tag (e.g., \"exon_id\").  Can be\n        used to group the features\
  \ describing individual exons, e.g.,\n        each CDS and its flanking splice sites.\
  \  Only features in the\n        same major group will be included in the same minor\
  \ group\n        (e.g., exons of the same transcript).\n\n    --fix-start-stop,\
  \ -f\n        Ensure that CDS features include start codons and exclude stop\n \
  \       codons, as required by the GTF2 standard.  Assumes at most one\n       \
  \ start_codon and at most one stop_codon per group.\n\n    --add-utrs, -U\n    \
  \    Create UTR features for portions of exons outside CDS (only\n        useful\
  \ with GFF output; features must be grouped at level\n        of transcript).\n\n\
  \    --add-introns, -I\n        Create intron features between exons (only useful\
  \ with GFF output;\n        features must be grouped at level of transcript).\n\n\
  \    --add-signals, -S\n        Adds features for start and stop codons and 3' and\
  \ 5' splice\n        sites (only useful with GFF output; features must be grouped\n\
  \        at level of transcript).  Start and stop codons will be added\n       \
  \ as required by the GTF2 standard (--fix-start-stop is not\n        necessary).\
  \  Warning: does not correctly handle case of splice\n        site in middle of\
  \ start or stop codon.\n\n    --output, -o gff|bed|genepred|wig\n        Output\
  \ format (default gff).  Note that wig output is fixedStep\n        can only be\
  \ used if all elements have a score and are of equal\n        length.\n\n    --simplebed,\
  \ -b\n        (for use with --output bed) Create a separate line for each\n    \
  \    feature in bed output (by default, all features of a group are\n        described\
  \ by a single line).\n\n    --discards, -d <fname>\n        Write any discarded\
  \ features to specified file.\n\n    --help, -h\n        Print this help message.\n\
  \n"
generated_using:
- --help
