!Command
positional: []
named:
- !Flag
  description: Set depth of model to <num>
  synonyms:
  - -d
  args: !SimpleFlagArg
    name: num
  optional: true
- !Flag
  description: Train using strings specified by subscripts in file named <fn>
  synonyms:
  - -i
  args: !SimpleFlagArg
    name: fn
  optional: true
- !Flag
  description: ',n2,...,nk  Permutation describing re-ordering of character positions
    of input string to build model'
  synonyms:
  - -p
  args: !SimpleFlagArg
    name: n1
  optional: true
- !Flag
  description: Specify special position in model
  synonyms:
  - -s
  args: !SimpleFlagArg
    name: num
  optional: true
- !Flag
  description: Output model as text (for debugging only)
  synonyms:
  - -t
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Set verbose level; higher is more diagnostic printouts
  synonyms:
  - -v
  args: !SimpleFlagArg
    name: num
  optional: true
command:
- build-fixed
parent:
subcommands: []
help_flag: !Flag
  description: Print this message
  synonyms:
  - -h
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "build-fixed: invalid option -- '-'\nUnrecognized option --\nUSAGE:  build-fixed\
  \ [<options>]  < <input-file>  > <output-file>\n\nRead sequences from  stdin  and\
  \ output to  stdout \nthe fixed-length interpolated context model built from them\n\
  \nOptions:\n -d <num>  Set depth of model to <num>\n -h        Print this message\n\
  \ -i <fn>   Train using strings specified by subscripts in file\n           named\
  \ <fn>\n -p n1,n2,...,nk  Permutation describing re-ordering of\n           character\
  \ positions of input string to build model\n -s <num>  Specify special position\
  \ in model\n -t        Output model as text (for debugging only)\n -v <num>  Set\
  \ verbose level; higher is more diagnostic printouts\n\n"
generated_using:
- --help
