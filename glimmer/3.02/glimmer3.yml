!Command
positional:
- !Positional
  description: ''
  position: 0
  name: sequence-file
  optional: false
- !Positional
  description: ''
  position: 1
  name: icm-file
  optional: false
- !Positional
  description: ''
  position: 2
  name: tag
  optional: false
named:
- !Flag
  description: 'Use comma-separated list of codons as stop codons Sample format:  -Z
    tag,tga,taa'
  synonyms:
  - --stop_codons
  args: !SimpleFlagArg
    name: codon-list
  optional: true
command:
- glimmer3
parent:
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "Starting at Thu Jun 18 18:32:58 2020\n\nUSAGE:  glimmer3 [options] <sequence-file>\
  \ <icm-file> <tag>\n\nRead DNA sequences in <sequence-file> and predict genes\n\
  in them using the Interpolated Context Model in <icm-file>.\nOutput details go to\
  \ file <tag>.detail and predictions go to\nfile <tag>.predict\n\nOptions:\n -A <codon-list>\n\
  \ --start_codons <codon-list>\n    Use comma-separated list of codons as start codons\n\
  \    Sample format:  -A atg,gtg\n    Use -P option to specify relative proportions\
  \ of use.\n    If -P not used, then proportions will be equal\n -b <filename>\n\
  \ --rbs_pwm <filename>\n    Read a position weight matrix (PWM) from <filename>\
  \ to identify\n    the ribosome binding site to help choose start sites\n -C <p>\n\
  \ --gc_percent <p>\n    Use <p> as GC percentage of independent model\n    Note:\
  \  <p> should be a percentage, e.g., -C 45.2\n -E <filename>\n --entropy <filename>\n\
  \    Read entropy profiles from <filename>.  Format is one header\n    line, then\
  \ 20 lines of 3 columns each.  Columns are amino acid,\n    positive entropy, negative\
  \ entropy.  Rows must be in order\n    by amino acid code letter\n -f\n --first_codon\n\
  \    Use first codon in orf as start codon\n -g <n>\n --gene_len <n>\n    Set minimum\
  \ gene length to <n>\n -h\n --help\n    Print this message\n -i <filename>\n --ignore\
  \ <filename>\n    <filename> specifies regions of bases that are off \n    limits,\
  \ so that no bases within that area will be examined\n -l\n --linear\n    Assume\
  \ linear rather than circular genome, i.e., no wraparound\n -L <filename>\n --orf_coords\
  \ <filename>\n    Use <filename> to specify a list of orfs that should\n    be scored\
  \ separately, with no overlap rules\n -M\n --separate_genes\n    <sequence-file>\
  \ is a multifasta file of separate genes to\n    be scored separately, with no overlap\
  \ rules\n -o <n>\n --max_olap <n>\n    Set maximum overlap length to <n>.  Overlaps\
  \ this short or shorter\n    are ignored.\n -P <number-list>\n --start_probs <number-list>\n\
  \    Specify probability of different start codons (same number & order\n    as\
  \ in -A option).  If no -A option, then 3 values for atg, gtg and ttg\n    in that\
  \ order.  Sample format:  -P 0.6,0.35,0.05\n    If -A is specified without -P, then\
  \ starts are equally likely.\n -q <n>\n --ignore_score_len <n>\n    Do not use the\
  \ initial score filter on any gene <n> or more\n    base long\n -r\n --no_indep\n\
  \    Don't use independent probability score column\n -t <n>\n --threshold <n>\n\
  \    Set threshold score for calling as gene to n.  If the in-frame\n    score >=\
  \ <n>, then the region is given a number and considered\n    a potential gene.\n\
  \ -X\n --extend\n    Allow orfs extending off ends of sequence to be scored\n -z\
  \ <n>\n --trans_table <n>\n    Use Genbank translation table number <n> for stop\
  \ codons\n -Z <codon-list>\n --stop_codons <codon-list>\n    Use comma-separated\
  \ list of codons as stop codons\n    Sample format:  -Z tag,tga,taa\n\n"
generated_using:
- --help
