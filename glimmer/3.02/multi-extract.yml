!Command
positional:
- !Positional
  description: ''
  position: 0
  name: sequence-file
  optional: false
- !Positional
  description: ''
  position: 1
  name: coords
  optional: false
named:
- !Flag
  description: Use the actual input coordinates without any wraparound that would
    be needed by a circular genome.  Without this option, the output sequence is the
    shorter of the two ways around the circle.  Use the -d option to specify direction
    explicitly.
  synonyms:
  - --nowrap
  args: !EmptyFlagArg {}
  optional: true
command:
- multi-extract
parent:
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "USAGE:  multi-extract [options] <sequence-file> <coords>\n\nRead multi-fasta-format\
  \ <sequence-file> and extract from it the\nsubsequences specified by <coords>. \
  \ By default, <coords>\nis the name of a file containing lines of the form\n  <id>\
  \  <tag>  <start>  <stop>  [<frame>] ...\n<id> is the identifier for the subsequence\n\
  <tag> is the tag of the sequence in <sequence-file> from which\nto extract the entry\n\
  Coordinates are inclusive counting from 1, e.g., \"1 3\"\nrepresents the 1st 3 characters\
  \ of the sequence.\nSpecify \"-\" for <coords> to read it from standard input\n\
  For each line the corresponding region of <sequence-file>\nis extracted and output\
  \ (after reverse-complementing if necessary)\nOutput goes to stdout in multi-fasta\
  \ format, unless the -2 option\nis specified\n\nOptions:\n -2\n --2_fields\n   \
  \ Output each sequence as 2 fields (tag and sequence) on a single line\n -d\n --dir\n\
  \    Use the 4th column of each input line to specify the direction\n    of the\
  \ sequence.  Positive is forward, negative is reverse\n    The input sequence is\
  \ assumed to be circular\n -h\n --help\n    Print this message\n -l <n>\n --minlen\
  \ <n>\n    Don't output any sequence shorter than <n> characters\n -s\n --nostart\n\
  \    Omit the first 3 characters of each output string\n -t\n --nostop\n    Omit\
  \ the last 3 characters of each output string\n -w\n --nowrap\n    Use the actual\
  \ input coordinates without any wraparound\n    that would be needed by a circular\
  \ genome.  Without this\n    option, the output sequence is the shorter of the two\
  \ ways\n    around the circle.  Use the -d option to specify direction\n    explicitly.\n\
  \n"
generated_using:
- --help
