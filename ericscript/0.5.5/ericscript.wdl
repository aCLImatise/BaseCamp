version 1.0

task Ericscript.pl {
  input {
    String? db_folder
    Boolean? refid
    Boolean? print_db
    Boolean? ens_version
    String? output_folder
    Int? read_length
    Boolean? verbose
    Boolean? in_size
    Boolean? sd_in_size
    Boolean? n_gene_fusion
    Boolean? min_cov
    Boolean? max_cov
    Boolean? n_sims
    Boolean? be
    Boolean? ie
    Boolean? background_one
    Boolean? background_two
    Boolean? n_reads_background
    String? results_folder
    String? data_folder
    String? algo_name
    String? dataset
    Int? norm_roc
    Boolean? man
    Boolean? sample_name
    Boolean? min_reads
    Boolean? n_trim
    Boolean? n_threads
    Boolean? mapq
    Boolean? remove
    Boolean? check_db
    Boolean? down_db
    Boolean? demo
    String? arguments
  }
  command <<<
    ericscript.pl \
      ~{arguments} \
      ~{if defined(db_folder) then ("--dbfolder " +  '"' + db_folder + '"') else ""} \
      ~{true="--refid" false="" refid} \
      ~{true="--printdb" false="" print_db} \
      ~{true="--ensversion" false="" ens_version} \
      ~{if defined(output_folder) then ("--outputfolder " +  '"' + output_folder + '"') else ""} \
      ~{if defined(read_length) then ("--readlength " +  '"' + read_length + '"') else ""} \
      ~{true="--verbose" false="" verbose} \
      ~{true="--insize" false="" in_size} \
      ~{true="--sd_insize" false="" sd_in_size} \
      ~{true="--ngenefusion" false="" n_gene_fusion} \
      ~{true="--min_cov" false="" min_cov} \
      ~{true="--max_cov" false="" max_cov} \
      ~{true="--nsims" false="" n_sims} \
      ~{true="--be" false="" be} \
      ~{true="--ie" false="" ie} \
      ~{true="--background_1" false="" background_one} \
      ~{true="--background_2" false="" background_two} \
      ~{true="--nreads_background" false="" n_reads_background} \
      ~{if defined(results_folder) then ("--resultsfolder " +  '"' + results_folder + '"') else ""} \
      ~{if defined(data_folder) then ("--datafolder " +  '"' + data_folder + '"') else ""} \
      ~{if defined(algo_name) then ("--algoname " +  '"' + algo_name + '"') else ""} \
      ~{if defined(dataset) then ("--dataset " +  '"' + dataset + '"') else ""} \
      ~{if defined(norm_roc) then ("--normroc " +  '"' + norm_roc + '"') else ""} \
      ~{true="--man" false="" man} \
      ~{true="--samplename" false="" sample_name} \
      ~{true="--minreads" false="" min_reads} \
      ~{true="-ntrim" false="" n_trim} \
      ~{true="--nthreads" false="" n_threads} \
      ~{true="--MAPQ" false="" mapq} \
      ~{true="--remove" false="" remove} \
      ~{true="--checkdb" false="" check_db} \
      ~{true="--downdb" false="" down_db} \
      ~{true="--demo" false="" demo}
  >>>
  parameter_meta {
    db_folder: "where database is stored. Default is ERICSCRIPT_FOLDER/lib/"
    refid: "Genome reference identification. Run ericscript.pl --printdb to see available refid [homo_sapiens]."
    print_db: "Print a list of available genomes and exit."
    ens_version: "Download data of a specific Ensembl version (>= 70). Default is the latest one."
    output_folder: "where synthetic datasets will be stored [HOME/ericscript_simulator]"
    read_length: "length of synthetic reads [75]"
    verbose: "use verbose output"
    in_size: "parameter of wgsym. Outer distance between the two ends [200]"
    sd_in_size: "parameter of wgsym. Standard deviation [50]"
    n_gene_fusion: "The number of synthetic gene fusions per dataset? [50]"
    min_cov: "Minimum coverage to simulate [1]"
    max_cov: "Maximum coverage to simulate [50]"
    n_sims: "The number of synthetic datasets to simulate [10]"
    be: "Use --be to generate Broken Exons (BE) data [no]"
    ie: "Use --ie to generate Intact Exons (IE) data [yes]"
    background_one: "Fastq file (forward)  for generating background reads. "
    background_two: "Fastq file (reverse) for generating background reads. "
    n_reads_background: "The number of reads to extract from background data [200e3]."
    results_folder: "path to folder containing algorithm results."
    data_folder: "path to folder containing synthetic data generated by ericscript simulator."
    algo_name: "name of the algorithm that generated results. "
    dataset: "type of synthetic data to considered for calculating statistics. IE or BE? "
    norm_roc: "factor to normalize the score given by the algorithm."
    man: "print the complete manual of the program."
    sample_name: "Choose a name for your sample. Default is \"MyEric\""
    min_reads: "Minimum reads to consider discordant alignments. Default is 3 reads with minimum MAPQ."
    n_trim: "trim PE reads from 1st base to $ntrim. Trimmed reads will be used only for the first alignment (identification  of discordant reads). Setting ntrim to values lower than orginal read length allows EricScript to  increase its sensitivity, especially when the length of reads is 75nt or 100 nt.  Default is no trimming. Set ntrim=0 to don't trim reads."
    n_threads: "Number of threads for the bwa aln process."
    mapq: "minimum value of mapping quality to consider discordant reads. For MAPQ 0 use a negative value. Default is 20."
    remove: "remove all temporary files. By default, all temporary files will be kept for  user inspection, but this will easily clutter the directory."
    check_db: "Check if your database is up-to-date, based on the latest Ensembl release."
    down_db: "Download, build database. refid parameter need to be specified."
    demo: "Run a demonstration of EricScript on simulated reads."
    arguments: ""
  }
}