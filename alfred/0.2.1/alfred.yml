&id001 !Command
positional: []
named: []
command:
- alfred
parent:
subcommands:
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: unphased.bam
    optional: false
  named:
  - !Flag
    description: '[ --map-qual ] arg (=10)     min. mapping quality'
    synonyms:
    - -m
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[ --reference ] arg          reference fasta file'
    synonyms:
    - -r
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[ --hap1 ] arg (="h1.bam")   haplotype1 output file'
    synonyms:
    - -p
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[ --hap2 ] arg (="h2.bam")   haplotype2 output file'
    synonyms:
    - -q
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[ --sample ] arg (=NA12878)  sample name (as in BCF)'
    synonyms:
    - -s
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[ --vcffile ] arg            input phased VCF/BCF file'
    synonyms:
    - -v
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[ --assign ]                 assign unphased reads randomly'
    synonyms:
    - -a
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[ --interleaved ]            single haplotype-tagged BAM'
    synonyms:
    - -i
    args: !EmptyFlagArg {}
    optional: true
  command:
  - alfred
  - split
  parent: *id001
  subcommands: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "\nUsage: alfred split [OPTIONS] -r <ref.fa> -s NA12878 -v <snps.bcf>\
    \ <unphased.bam>\n\nGeneric options:\n  -? [ --help ]                   show help\
    \ message\n  -m [ --map-qual ] arg (=10)     min. mapping quality\n  -r [ --reference\
    \ ] arg          reference fasta file\n  -p [ --hap1 ] arg (=\"h1.bam\")   haplotype1\
    \ output file\n  -q [ --hap2 ] arg (=\"h2.bam\")   haplotype2 output file\n  -s\
    \ [ --sample ] arg (=NA12878)  sample name (as in BCF)\n  -v [ --vcffile ] arg\
    \            input phased VCF/BCF file\n  -a [ --assign ]                 assign\
    \ unphased reads randomly\n  -i [ --interleaved ]            single haplotype-tagged\
    \ BAM\n\n"
  generated_using: &id002
  - --help
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: input.bam|input.fa.gz
    optional: false
  named:
  - !Flag
    description: '[ --format ] arg (=bam)            input format [bam|fasta]'
    synonyms:
    - -f
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[ --called ] arg (=0.5)            fraction of reads required for  consensus'
    synonyms:
    - -d
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[ --seqtype ] arg (=ill)           seq. type [ill|ont|pacbio|custom]'
    synonyms:
    - -t
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[ --mapqual ] arg (=10)            min. mapping quality'
    synonyms:
    - -q
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[ --position ] arg (=chr4:500500)  position to generate consensus'
    synonyms:
    - -p
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[ --window ] arg (=5)              window around position to fetch
      reads'
    synonyms:
    - -w
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[ --secondary ]                    consider secondary alignments'
    synonyms:
    - -s
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[ --trimreads ]                    trim reads to window'
    synonyms:
    - -r
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[ --gapopen ] arg (=-10)           gap open'
    synonyms:
    - -g
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[ --gapext ] arg (=-1)             gap extension'
    synonyms:
    - -e
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[ --match ] arg (=5)               match'
    synonyms:
    - -m
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[ --mismatch ] arg (=-4)           mismatch'
    synonyms:
    - -n
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[ --outformat ] arg (=v)           output format [v|h]'
    synonyms:
    - -u
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[ --alignment ] arg (="al.fa.gz")  vertical/horizontal alignment'
    synonyms:
    - -a
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[ --consensus ] arg (="cs.fa.gz")  consensus'
    synonyms:
    - -c
    args: !EmptyFlagArg {}
    optional: true
  command:
  - alfred
  - consensus
  parent: *id001
  subcommands: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "Usage: alfred consensus [OPTIONS] <input.bam|input.fa.gz>\n\nGeneric\
    \ options:\n  -? [ --help ]                         show help message\n  -f [\
    \ --format ] arg (=bam)            input format [bam|fasta]\n  -d [ --called ]\
    \ arg (=0.5)            fraction of reads required for \n                    \
    \                    consensus\n  -t [ --seqtype ] arg (=ill)           seq. type\
    \ [ill|ont|pacbio|custom]\n\nBAM input options:\n  -q [ --mapqual ] arg (=10)\
    \            min. mapping quality\n  -p [ --position ] arg (=chr4:500500)  position\
    \ to generate consensus\n  -w [ --window ] arg (=5)              window around\
    \ position to fetch reads\n  -s [ --secondary ]                    consider secondary\
    \ alignments\n  -r [ --trimreads ]                    trim reads to window\n\n\
    Alignment scoring options for 'custom' sequencing type:\n  -g [ --gapopen ] arg\
    \ (=-10)           gap open\n  -e [ --gapext ] arg (=-1)             gap extension\n\
    \  -m [ --match ] arg (=5)               match\n  -n [ --mismatch ] arg (=-4)\
    \           mismatch\n\nOutput options:\n  -u [ --outformat ] arg (=v)       \
    \    output format [v|h]\n  -a [ --alignment ] arg (=\"al.fa.gz\")  vertical/horizontal\
    \ alignment\n  -c [ --consensus ] arg (=\"cs.fa.gz\")  consensus\n\n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: seq1.fasta
    optional: false
  - !Positional
    description: ''
    position: 1
    name: seq2.fasta
    optional: false
  named:
  - !Flag
    description: '[ --gapopen ] arg (=-10)           gap open'
    synonyms:
    - -g
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[ --gapext ] arg (=-1)             gap extension'
    synonyms:
    - -e
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[ --match ] arg (=5)               match'
    synonyms:
    - -m
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[ --mismatch ] arg (=-4)           mismatch'
    synonyms:
    - -n
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[ --endsfree1 ]                    leading/trailing gaps free for
      seq1'
    synonyms:
    - -p
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[ --endsfree2 ]                    leading/trailing gaps free for
      seq2'
    synonyms:
    - -q
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[ --local ]                        local alignment'
    synonyms:
    - -l
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[ --format ] arg (=h)              output format [v|h]'
    synonyms:
    - -f
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[ --alignment ] arg (="al.fa.gz")  vertical/horizontal alignment'
    synonyms:
    - -a
    args: !EmptyFlagArg {}
    optional: true
  command:
  - alfred
  - pwalign
  parent: *id001
  subcommands: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "Usage: alfred pwalign [OPTIONS] <seq1.fasta> <seq2.fasta>\n\nGeneric\
    \ options:\n  -? [ --help ]                         show help message\n  -g [\
    \ --gapopen ] arg (=-10)           gap open\n  -e [ --gapext ] arg (=-1)     \
    \        gap extension\n  -m [ --match ] arg (=5)               match\n  -n [\
    \ --mismatch ] arg (=-4)           mismatch\n  -p [ --endsfree1 ]            \
    \        leading/trailing gaps free for seq1\n  -q [ --endsfree2 ]           \
    \         leading/trailing gaps free for seq2\n  -l [ --local ]              \
    \          local alignment\n\nOutput options:\n  -f [ --format ] arg (=h)    \
    \          output format [v|h]\n  -a [ --alignment ] arg (=\"al.fa.gz\")  vertical/horizontal\
    \ alignment\n\n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: input.bam
    optional: false
  named:
  - !Flag
    description: '[ --map-qual ] arg (=10)      min. mapping quality'
    synonyms:
    - -m
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[ --base-qual ] arg (=10)     min. base quality'
    synonyms:
    - -b
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[ --reference ] arg           reference fasta file'
    synonyms:
    - -r
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[ --sample ] arg (=NA12878)   sample name'
    synonyms:
    - -s
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[ --ase ] arg (="as.tsv.gz")  allele-specific output file'
    synonyms:
    - -a
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[ --vcffile ] arg             input (phased) BCF file'
    synonyms:
    - -v
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[ --phased ]                  BCF file is phased and BAM is haplo-tagged'
    synonyms:
    - -p
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[ --full ]                    output all het. input SNPs'
    synonyms:
    - -f
    args: !EmptyFlagArg {}
    optional: true
  command:
  - alfred
  - ase
  parent: *id001
  subcommands: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "Usage: alfred ase [OPTIONS] -r <ref.fa> -s NA12878 -v <snps.bcf> -a\
    \ <ase.tsv> <input.bam>\n\nGeneric options:\n  -? [ --help ]                 \
    \   show help message\n  -m [ --map-qual ] arg (=10)      min. mapping quality\n\
    \  -b [ --base-qual ] arg (=10)     min. base quality\n  -r [ --reference ] arg\
    \           reference fasta file\n  -s [ --sample ] arg (=NA12878)   sample name\n\
    \  -a [ --ase ] arg (=\"as.tsv.gz\")  allele-specific output file\n  -v [ --vcffile\
    \ ] arg             input (phased) BCF file\n  -p [ --phased ]               \
    \   BCF file is phased and BAM is haplo-tagged\n  -f [ --full ]              \
    \      output all het. input SNPs\n\n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: g1b.bam
    optional: false
  - !Positional
    description: ''
    position: 1
    name: s1.bam
    optional: false
  - !Positional
    description: ''
    position: 2
    name: s2.bam
    optional: false
  - !Positional
    description: ''
    position: 3
    name: s3.bam
    optional: false
  - !Positional
    description: ''
    position: 4
    name: s4.bam
    optional: false
  - !Positional
    description: ''
    position: 5
    name: g2.bam
    optional: false
  named:
  - !Flag
    description: '[ --qual ] arg (=1)          min. mapping quality'
    synonyms:
    - -q
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[ --window ] arg (=50000)    sliding window size'
    synonyms:
    - -w
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[ --step ] arg (=1000)       window offset (step size)'
    synonyms:
    - -s
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[ --reference ] arg          reference fasta file (required)'
    synonyms:
    - -r
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[ --outprefix ] arg (=pref)  output file prefix'
    synonyms:
    - -o
    args: !EmptyFlagArg {}
    optional: true
  command:
  - alfred
  - replication
  parent: *id001
  subcommands: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "Usage: alfred replication [OPTIONS] -r <ref.fa> -o outprefix <g1b.bam>\
    \ <s1.bam> <s2.bam> <s3.bam> <s4.bam> <g2.bam>\n\nGeneric options:\n  -? [ --help\
    \ ]                   show help message\n  -q [ --qual ] arg (=1)          min.\
    \ mapping quality\n  -w [ --window ] arg (=50000)    sliding window size\n  -s\
    \ [ --step ] arg (=1000)       window offset (step size)\n  -r [ --reference ]\
    \ arg          reference fasta file (required)\n  -o [ --outprefix ] arg (=pref)\
    \  output file prefix\n\n"
  generated_using: *id002
help_flag:
usage_flag:
version_flag:
help_text: "**********************************************************************\n\
  Program: Alfred\nThis is free software, and you are welcome to redistribute it under\n\
  certain conditions (BSD License); for license details use '-l'.\nThis program comes\
  \ with ABSOLUTELY NO WARRANTY; for details use '-w'.\n\nAlfred (Version: 0.2.1)\n\
  Contact: Gear Genomics Team (gear_genomics@embl.de)\nWeb Application: https://www.gear-genomics.com/alfred/\n\
  Documentation: https://www.gear-genomics.com/docs/alfred/\nCitation: https://doi.org/10.1093/bioinformatics/bty1007\n\
  **********************************************************************\n\nUsage:\
  \ alfred <command> <arguments>\n\nCommands:\n\n    qc           alignment quality\
  \ control\n    count_dna    counting DNA reads in windows\n    count_rna    counting\
  \ RNA reads in features\n    count_jct    counting RNA split-reads at exon junctions\n\
  \    tracks       create browser tracks\n    annotate     annotate peaks\n    spaced_motif\
  \ find spaced motifs\n    split        split BAM into haplotypes\n    consensus\
  \    consensus computation for error-prone reads\n    pwalign      pairwise alignment\
  \ using dynamic programming\n    ase          allele-specific expression\n    replication\
  \  replication timing (Repli-Seq)\n\n\n"
generated_using: *id002
