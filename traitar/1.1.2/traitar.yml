&id001 !Command
command:
- traitar
positional: []
named:
- !Flag
  description: ''
  synonyms:
  - -v
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands:
- !Command
  command:
  - traitar
  - new
  positional:
  - !Positional
    description: directory with phenotype models to be included
    position: 0
    name: models_dir
    optional: false
  - !Positional
    description: a mapping between Pfam families and phenotype ids to
    position: 1
    name: pf_acc2desc
    optional: false
  - !Positional
    description: pt_id2acc_desc  a mapping between phenotype ids and descriptions
    position: 2
    name: accessions
    optional: false
  - !Positional
    description: hmm database compatible with the phenotype archive
    position: 0
    name: hmm_model_f
    optional: false
  - !Positional
    description: name of the model, which is created
    position: 1
    name: archive_name
    optional: false
  named: []
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: traitar new [-h]\n                   models_dir pf_acc2desc pt_id2acc_desc\
    \ {dbcan,pfam}\n                   hmm_model_f archive_name\n\npositional arguments:\n\
    \  models_dir      directory with phenotype models to be included\n  pf_acc2desc\
    \     a mapping between Pfam families and phenotype ids to\n                 \
    \ accessions\n  pt_id2acc_desc  a mapping between phenotype ids and descriptions\n\
    \  {dbcan,pfam}    hmm database used\n  hmm_model_f     hmm database compatible\
    \ with the phenotype archive\n  archive_name    name of the model, which is created\n\
    \noptional arguments:\n  -h, --help      show this help message and exit\n"
  generated_using: &id002
  - --help
- !Command
  command:
  - traitar
  - annotate
  positional:
  - !Positional
    description: 'positional arguments:'
    position: 0
    name: output_dir
    optional: false
  - !Positional
    description: directory with the input data
    position: 1
    name: input_dir
    optional: false
  - !Positional
    description: "mapping from samples to fasta files (also see gitHub\nhelp): sample1_file_name{tab}sample1_name\n\
      sample2_file_name{tab}sample2_name"
    position: 2
    name: sample2file
    optional: false
  - !Positional
    description: "directory for the output; will be created if it\ndoesn't exist yet"
    position: 0
    name: output_dir
    optional: false
  named:
  - !Flag
    description: "if the input is amino acids the type of gene\nprediction GFF file\
      \ can be specified for mapping the\nphenotype predictions to the genes"
    synonyms:
    - -g
    - --gene_gff_type
    args: !ChoiceFlagArg
      choices: !!set
        genbank:
        img:
        metagenemark:
        refseq:
        prodigal:
    optional: true
  - !Flag
    description: "number of cpus used for the individual steps; maximum\nis number\
      \ of samples; needs parallel\n"
    synonyms:
    - -c
    - --cpus
    args: !SimpleFlagArg
      name: CPUS
    optional: true
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: traitar annotate [-h] [-g {genbank,refseq,img,prodigal,metagenemark}]\n\
    \                        [-c CPUS]\n                        input_dir sample2file\n\
    \                        {from_genes,from_nucleotides,from_annotation_summary}\n\
    \                        output_dir\n\npositional arguments:\n  input_dir    \
    \         directory with the input data\n  sample2file           mapping from\
    \ samples to fasta files (also see gitHub\n                        help): sample1_file_name{tab}sample1_name\n\
    \                        sample2_file_name{tab}sample2_name\n  {from_genes,from_nucleotides,from_annotation_summary}\n\
    \                        either from_genes if gene prediction amino acid fasta\n\
    \                        is available in input_dir otherwise from_nucleotides\n\
    \                        in this case Prodigal is used to determine the ORFs\n\
    \                        from the nucleotide fasta files in input_dir\n  output_dir\
    \            directory for the output; will be created if it\n               \
    \         doesn't exist yet\n\noptional arguments:\n  -h, --help            show\
    \ this help message and exit\n  -g {genbank,refseq,img,prodigal,metagenemark},\
    \ --gene_gff_type {genbank,refseq,img,prodigal,metagenemark}\n               \
    \         if the input is amino acids the type of gene\n                     \
    \   prediction GFF file can be specified for mapping the\n                   \
    \     phenotype predictions to the genes\n  -c CPUS, --cpus CPUS  number of cpus\
    \ used for the individual steps; maximum\n                        is number of\
    \ samples; needs parallel\n"
  generated_using: *id002
- !Command
  command:
  - traitar
  - show
  positional: []
  named:
  - !Flag
    description: "{phypat,phypat+PGL}\npick phypat or phypat+PGL classifier"
    synonyms:
    - --predictor
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: ''
    synonyms:
    - --strategy
    args: !ChoiceFlagArg
      choices: !!set
        majority:
        non-zero:
    optional: true
  - !Flag
    description: ''
    synonyms:
    - -i
    - --include_negative
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "phenotype models archive; if set, look for the target\nin the phenotype\
      \ in the given phenotype collection\n"
    synonyms:
    - -p
    - --models_f
    args: !SimpleFlagArg
      name: MODELS_F
    optional: true
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: traitar show [-h] [--predictor {phypat,phypat+PGL}]\n       \
    \             [--strategy {non-zero,majority}] [-i] [-p MODELS_F]\n          \
    \          phenotype\n\npositional arguments:\n  phenotype             phenotype\
    \ under investigation\n\noptional arguments:\n  -h, --help            show this\
    \ help message and exit\n  --predictor {phypat,phypat+PGL}\n                 \
    \       pick phypat or phypat+PGL classifier\n  --strategy {non-zero,majority}\n\
    \  -i, --include_negative\n  -p MODELS_F, --models_f MODELS_F\n              \
    \          phenotype models archive; if set, look for the target\n           \
    \             in the phenotype in the given phenotype collection\n"
  generated_using: *id002
- &id003 !Command
  command:
  - traitar
  - remove
  positional: []
  named:
  - !Flag
    description: "instead of remove the given phenotypes, keep them and forget the\n\
      rest\n"
    synonyms:
    - --keep
    args: !EmptyFlagArg {}
    optional: true
  parent: *id001
  subcommands:
  - !Command
    command:
    - traitar
    - remove
    - phenotypes
    positional:
    - !Positional
      description: ''
      position: 0
      name: traitar
      optional: false
    - !Positional
      description: ''
      position: 1
      name: remove
      optional: false
    - !Positional
      description: ''
      position: 2
      name: archive_f
      optional: false
    - !Positional
      description: ''
      position: 3
      name: phenotypes
      optional: false
    - !Positional
      description: ''
      position: 4
      name: out_f
      optional: false
    named:
    - !Flag
      description: ''
      synonyms:
      - --keep
      args: !EmptyFlagArg {}
      optional: true
    parent: *id003
    subcommands: []
    usage: []
    help_flag: !Flag
      description: ''
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: traitar remove [-h] [--keep] archive_f phenotypes out_f\ntraitar\
      \ remove: error: too few arguments\n"
    generated_using: &id004 []
  - !Command
    command:
    - traitar
    - remove
    - out_f
    positional:
    - !Positional
      description: ''
      position: 0
      name: traitar
      optional: false
    - !Positional
      description: ''
      position: 1
      name: remove
      optional: false
    - !Positional
      description: ''
      position: 2
      name: archive_f
      optional: false
    - !Positional
      description: ''
      position: 3
      name: phenotypes
      optional: false
    - !Positional
      description: ''
      position: 4
      name: out_f
      optional: false
    named:
    - !Flag
      description: ''
      synonyms:
      - --keep
      args: !EmptyFlagArg {}
      optional: true
    parent: *id003
    subcommands: []
    usage: []
    help_flag: !Flag
      description: ''
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: traitar remove [-h] [--keep] archive_f phenotypes out_f\ntraitar\
      \ remove: error: too few arguments\n"
    generated_using: *id004
  usage: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: traitar remove [-h] [--keep] archive_f phenotypes out_f\n\npositional\
    \ arguments:\n  archive_f   phenotype model archive file, which shall be modified\n\
    \  phenotypes  phenotypes to be removed\n  out_f       out file for the modified\
    \ phenotype tar archive\n\noptional arguments:\n  -h, --help  show this help message\
    \ and exit\n  --keep      instead of remove the given phenotypes, keep them and\
    \ forget the\n              rest\n"
  generated_using: *id002
- !Command
  command:
  - traitar
  - phenotype
  positional:
  - !Positional
    description: 'positional arguments:'
    position: 0
    name: output_dir
    optional: false
  - !Positional
    description: directory with the input data
    position: 1
    name: input_dir
    optional: false
  - !Positional
    description: "mapping from samples to fasta files (also see gitHub\nhelp): sample1_file_name{tab}sample1_name\n\
      sample2_file_name{tab}sample2_name"
    position: 2
    name: sample2file
    optional: false
  - !Positional
    description: "directory for the output; will be created if it\ndoesn't exist yet"
    position: 0
    name: output_dir
    optional: false
  named:
  - !Flag
    description: "if the input is amino acids the type of gene\nprediction GFF file\
      \ can be specified for mapping the\nphenotype predictions to the genes"
    synonyms:
    - -g
    - --gene_gff_type
    args: !ChoiceFlagArg
      choices: !!set
        genbank:
        img:
        metagenemark:
        refseq:
        prodigal:
    optional: true
  - !Flag
    description: "number of cpus used for the individual steps; maximum\nis number\
      \ of samples; needs parallel"
    synonyms:
    - -c
    - --cpus
    args: !SimpleFlagArg
      name: CPUS
    optional: true
  - !Flag
    description: primary phenotype models archive
    synonyms:
    - -p
    - --primary_models
    args: !SimpleFlagArg
      name: PRIMARY_MODELS
    optional: true
  - !Flag
    description: secondary phenotype models archive
    synonyms:
    - -s
    - --secondary_models
    args: !SimpleFlagArg
      name: SECONDARY_MODELS
    optional: true
  - !Flag
    description: "recompute the phenotype heatmaps based on a subset of\npreviously\
      \ annotated and phenotyped samples"
    synonyms:
    - -r
    - --rearrange_heatmap
    args: !SimpleFlagArg
      name: REARRANGE_HEATMAP
    optional: true
  - !Flag
    description: "if option is set, don't cluster the phenotype heatmaps\nby samples\
      \ and keep input ordering"
    synonyms:
    - --no_heatmap_sample_clustering
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "if option is set, don't cluster the heatmaps by\nphenotype and keep\
      \ input ordering"
    synonyms:
    - --no_heatmap_phenotype_clustering
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "choose file format for the heatmap\n"
    synonyms:
    - -f
    - --heatmap_format
    args: !ChoiceFlagArg
      choices: !!set
        jpg:
        png:
        svg:
        pdf:
    optional: true
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: traitar phenotype [-h] [-g {genbank,refseq,img,prodigal,metagenemark}]\n\
    \                         [-c CPUS] [-p PRIMARY_MODELS] [-s SECONDARY_MODELS]\n\
    \                         [-r REARRANGE_HEATMAP]\n                         [--no_heatmap_sample_clustering]\n\
    \                         [--no_heatmap_phenotype_clustering]\n              \
    \           [-f {png,pdf,svg,jpg}]\n                         input_dir sample2file\n\
    \                         {from_genes,from_nucleotides,from_annotation_summary}\n\
    \                         output_dir\n\npositional arguments:\n  input_dir   \
    \          directory with the input data\n  sample2file           mapping from\
    \ samples to fasta files (also see gitHub\n                        help): sample1_file_name{tab}sample1_name\n\
    \                        sample2_file_name{tab}sample2_name\n  {from_genes,from_nucleotides,from_annotation_summary}\n\
    \                        either from_genes if gene prediction amino acid fasta\n\
    \                        is available in input_dir otherwise from_nucleotides\n\
    \                        in this case Prodigal is used to determine the ORFs\n\
    \                        from the nucleotide fasta files in input_dir\n  output_dir\
    \            directory for the output; will be created if it\n               \
    \         doesn't exist yet\n\noptional arguments:\n  -h, --help            show\
    \ this help message and exit\n  -g {genbank,refseq,img,prodigal,metagenemark},\
    \ --gene_gff_type {genbank,refseq,img,prodigal,metagenemark}\n               \
    \         if the input is amino acids the type of gene\n                     \
    \   prediction GFF file can be specified for mapping the\n                   \
    \     phenotype predictions to the genes\n  -c CPUS, --cpus CPUS  number of cpus\
    \ used for the individual steps; maximum\n                        is number of\
    \ samples; needs parallel\n  -p PRIMARY_MODELS, --primary_models PRIMARY_MODELS\n\
    \                        primary phenotype models archive\n  -s SECONDARY_MODELS,\
    \ --secondary_models SECONDARY_MODELS\n                        secondary phenotype\
    \ models archive\n  -r REARRANGE_HEATMAP, --rearrange_heatmap REARRANGE_HEATMAP\n\
    \                        recompute the phenotype heatmaps based on a subset of\n\
    \                        previously annotated and phenotyped samples\n  --no_heatmap_sample_clustering\n\
    \                        if option is set, don't cluster the phenotype heatmaps\n\
    \                        by samples and keep input ordering\n  --no_heatmap_phenotype_clustering\n\
    \                        if option is set, don't cluster the heatmaps by\n   \
    \                     phenotype and keep input ordering\n  -f {png,pdf,svg,jpg},\
    \ --heatmap_format {png,pdf,svg,jpg}\n                        choose file format\
    \ for the heatmap\n"
  generated_using: *id002
- !Command
  command:
  - traitar
  - pfam
  positional:
  - !Positional
    description: "download Pfam HMMs into the given download directory and untar\n\
      and unzip it"
    position: 0
    name: download
    optional: false
  named:
  - !Flag
    description: the Pfam HMMs are in the above directory with name 'Pfam-A.hmm'
    synonyms:
    - --local
    - -l
    args: !EmptyFlagArg {}
    optional: true
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: traitar pfam [-h] [--local] download\n\npositional arguments:\n\
    \  download     download Pfam HMMs into the given download directory and untar\n\
    \               and unzip it\n\noptional arguments:\n  -h, --help   show this\
    \ help message and exit\n  --local, -l  the Pfam HMMs are in the above directory\
    \ with name 'Pfam-A.hmm'\n"
  generated_using: *id002
- !Command
  command:
  - traitar
  - evaluate
  positional:
  - !Positional
    description: phenotype prediction matrix as return by Traitar
    position: 0
    name: traitar_pred_f
    optional: false
  - !Positional
    description: phenotype matrix with standard of truth
    position: 1
    name: gold_standard_f
    optional: false
  - !Positional
    description: output directory
    position: 2
    name: out
    optional: false
  named:
  - !Flag
    description: "set if the gold standard phenotype are index via\nphenotype ids\
      \ rather than accessions"
    synonyms:
    - --are_pt_ids
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "need if gold standard uses an accession index for\nmapping"
    synonyms:
    - --phenotype_archive
    args: !SimpleFlagArg
      name: PHENOTYPE_ARCHIVE
    optional: true
  - !Flag
    description: "minimum number of positive and negative samples to\nconsider phenotypes\
      \ for calculation of the macro\naccuracy\n"
    synonyms:
    - --min_samples
    - -m
    args: !SimpleFlagArg
      name: MIN_SAMPLES
    optional: true
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: traitar evaluate [-h] [--are_pt_ids]\n                      \
    \  [--phenotype_archive PHENOTYPE_ARCHIVE]\n                        [--min_samples\
    \ MIN_SAMPLES]\n                        traitar_pred_f gold_standard_f out\n\n\
    positional arguments:\n  traitar_pred_f        phenotype prediction matrix as\
    \ return by Traitar\n  gold_standard_f       phenotype matrix with standard of\
    \ truth\n  out                   output directory\n\noptional arguments:\n  -h,\
    \ --help            show this help message and exit\n  --are_pt_ids          set\
    \ if the gold standard phenotype are index via\n                        phenotype\
    \ ids rather than accessions\n  --phenotype_archive PHENOTYPE_ARCHIVE\n      \
    \                  need if gold standard uses an accession index for\n       \
    \                 mapping\n  --min_samples MIN_SAMPLES, -m MIN_SAMPLES\n     \
    \                   minimum number of positive and negative samples to\n     \
    \                   consider phenotypes for calculation of the macro\n       \
    \                 accuracy\n"
  generated_using: *id002
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: show program's version number and exit
  synonyms:
  - -v
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "usage: traitar [-h] [-v]\n               {phenotype,pfam,annotate,show,new,remove,evaluate}\
  \ ...\n\npositional arguments:\n  {phenotype,pfam,annotate,show,new,remove,evaluate}\n\
  \    phenotype           run annotation and prediction\n    pfam               \
  \ download or set Pfam HMMs\n    annotate            run annotation\n    show  \
  \              show features important for classification\n    new             \
  \    create a new phenotype model archive\n    remove              remove phenotypes\
  \ from a given phenotype archive\n    evaluate            compare Traitar predictions\
  \ against a given standard\n                        of truth\n\noptional arguments:\n\
  \  -h, --help            show this help message and exit\n  -v, --version      \
  \   show program's version number and exit\n"
generated_using: *id002
