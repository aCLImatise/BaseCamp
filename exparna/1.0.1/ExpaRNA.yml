!Command
positional: []
named:
- !Flag
  description: '#   : # minmal size of an EPM (gamma) 2 is default and returns all
    EPMs with at least 2 nucleotides'
  synonyms:
  - -s
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '#   : # determines the maximal number of returned EPMs 0 is default
    an returns all EPMs 1 is the largest EPM and so on...'
  synonyms:
  - -n
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '#   : 1: initial EPM score = EPM size (default) : 2: initial EPM score
    = (EPM size)^2 (prefers larger patterns in LCS-EPM)'
  synonyms:
  - -t
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ': Do NOT ignore gaps in input sequences'
  synonyms:
  - -g
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '#   : write all output to dir <#>'
  synonyms:
  - -d
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ": write LCS-EPM into file 'LCSEPM_align.aln' as alignment"
  synonyms:
  - -o
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ": write LCS-EPM into file 'LCSEPM_LocARNA_input.fa' as constraint\
    \ input for LocARNA"
  synonyms:
  - -i
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ": write LCS-EPM into file 'LCSEPM.epm' as single EPMs"
  synonyms:
  - -e
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ": write all EPMs into file 'allEPM.epm' (depends on -s/ -n)"
  synonyms:
  - -a
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ': DO NOT save LCS-EPM as colored postscript file'
  synonyms:
  - -p
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ': determine similarity/differences of LCS-EPM with reference alignment
    via two colored postscript files'
  synonyms:
  - -A
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ': verbose output'
  synonyms:
  - -v
  args: !EmptyFlagArg {}
  optional: true
command:
- ExpaRNA
parent:
subcommands: []
help_flag: !Flag
  description: ': this info'
  synonyms:
  - -h
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "ExpaRNA: invalid option -- '-'\nUnrecognized option.\n\n###############################################################################\n\
  \    ExpaRNA - Exact Pattern Alignment of RNA  - version 0.8.3\n           (c) copyright\
  \ by Steffen Heyne - 2008-2009\n\n  The Longest Common Subsequence of Exact Pattern\
  \ Matchings (LCS-EPM) algorithm\n                http://www.bioinf.uni-freiburg.de/Software\n\
  ###############################################################################\n\
  \nUsage : 1) ExpaRNA <options> *.fa\n        2) ExpaRNA <options> *.fa *.align\n\
  \n   1) two sequences given in fasta format\n      if no structure data is available,\
  \ the sequence is folded\n      to an mfe structure with Vienna RNAfold.\n\n   2)\
  \ like 1) and *.align contains reference alignment (use option -A, see below)\n\n\
  EPM Selection Options:\n\n  -s#   : # minmal size of an EPM (gamma)\n          2\
  \ is default and returns all EPMs with at least 2 nucleotides\n\n  -n#   : # determines\
  \ the maximal number of returned EPMs\n          0 is default an returns all EPMs\n\
  \          1 is the largest EPM and so on...\n\nEPM Scoring Options:\n\n  -t#  \
  \ : 1: initial EPM score = EPM size (default)\n        : 2: initial EPM score =\
  \ (EPM size)^2 (prefers larger patterns in LCS-EPM)\n\nInput treatment:\n\n  -g\
  \    : Do NOT ignore gaps in input sequences\n\nOutput Options:\n\n  -d#   : write\
  \ all output to dir <#>\n\n  -o    : write LCS-EPM into file 'LCSEPM_align.aln'\
  \ as alignment\n\n  -i    : write LCS-EPM into file 'LCSEPM_LocARNA_input.fa' as\
  \ constraint input for LocARNA\n\n  -e    : write LCS-EPM into file 'LCSEPM.epm'\
  \ as single EPMs\n\n  -a    : write all EPMs into file 'allEPM.epm' (depends on\
  \ -s/ -n)\n\n  -p    : DO NOT save LCS-EPM as colored postscript file\n\n  -h  \
  \  : this info\n\nFurther Options:\n\n  -A    : determine similarity/differences\
  \ of LCS-EPM with reference alignment\n          via two colored postscript files\n\
  \  -v    : verbose output\n\n"
generated_using:
- --help
