!Command
positional: []
named:
- !Flag
  description: 'alignment view options:'
  synonyms:
  - -m
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Use composition based score adjustment
  synonyms:
  - -t
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'ASN.1 Scoremat input of checkpoint data:'
  synonyms:
  - -q
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'ASN.1 Scoremat output of checkpoint data:'
  synonyms:
  - -u
  args: !EmptyFlagArg {}
  optional: true
command:
- blastpgp
parent:
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "\nblastpgp 2.2.26   arguments:\n\n  -d  Database [String]\n    default\
  \ = nr\n  -i  Query File (not needed if restarting from scoremat) [File In]  Optional\n\
  \    default = stdin\n  -A  Multiple Hits window size [Integer]\n    default = 40\n\
  \  -f  Threshold for extending hits [Integer]\n    default = 11\n  -e  Expectation\
  \ value (E) [Real]\n    default = 10.0\n  -m  alignment view options:\n0 = pairwise,\n\
  1 = query-anchored showing identities,\n2 = query-anchored no identities,\n3 = flat\
  \ query-anchored, show identities,\n4 = flat query-anchored, no identities,\n5 =\
  \ query-anchored no identities and blunt ends,\n6 = flat query-anchored, no identities\
  \ and blunt ends,\n7 = XML Blast output,\n8 = Tabular output, \n9 = Tabular output\
  \ with comments\n10 = ASN, text\n11 = ASN, binary [Integer]\n    default = 0\n \
  \ -o  Output File for Alignment [File Out]  Optional\n    default = stdout\n  -y\
  \  Dropoff (X) for blast extensions in bits (default if zero) [Real]\n    default\
  \ = 7.0\n  -P  0 for multiple hit, 1 for single hit [Integer]\n    default = 0\n\
  \  -F  Filter query sequence with SEG [String]\n    default = F\n  -G  Cost to open\
  \ a gap [Integer]\n    default = 11\n  -E  Cost to extend a gap [Integer]\n    default\
  \ = 1\n  -X  X dropoff value for gapped alignment (in bits) [Integer]\n    default\
  \ = 15\n  -N  Number of bits to trigger gapping [Real]\n    default = 22.0\n  -S\
  \  Start of required region in query [Integer]\n    default = 1\n  -H  End of required\
  \ region in query (-1 indicates end of query) [Integer]\n    default = -1\n  -a\
  \  Number of processors to use [Integer]\n    default = 1\n  -I  Show GI's in deflines\
  \ [T/F]\n    default = F\n  -h  e-value threshold for inclusion in multipass model\
  \ [Real]\n    default = 0.002\n  -c  Constant in pseudocounts for multipass version;\
  \ 0 uses entropy method; otherwise a value near 30 is recommended [Integer]\n  \
  \  default = 0\n  -j  Maximum number of passes to use in  multipass version [Integer]\n\
  \    default = 1\n  -J  Believe the query defline [T/F]\n    default = F\n  -Z \
  \ X dropoff value for final gapped alignment (in bits) [Integer]\n    default =\
  \ 25\n  -O  SeqAlign file ('Believe the query defline' must be TRUE) [File Out]\
  \  Optional\n  -M  Matrix [String]\n    default = BLOSUM62\n  -v  Number of database\
  \ sequences to show one-line descriptions for (V) [Integer]\n    default = 500\n\
  \  -b  Number of database sequence to show alignments for (B) [Integer]\n    default\
  \ = 250\n  -C  Output File for PSI-BLAST Checkpointing [File Out]  Optional\n  -R\
  \  Input File for PSI-BLAST Restart [File In]  Optional\n  -W  Word size [Integer]\n\
  \    default = 3\n  -z  Effective length of the database (use zero for the real\
  \ size) [Real]\n    default = 0\n  -K  Number of best hits from a region to keep\
  \ [Integer]\n    default = 0\n  -s  Compute locally optimal Smith-Waterman alignments\
  \ [T/F]\n    default = F\n  -Y  Effective length of the search space (use zero for\
  \ the real size) [Real]\n    default = 0\n  -p  program option for PHI-BLAST [String]\n\
  \    default = blastpgp\n  -k  Hit File for PHI-BLAST [File In]\n    default = hit_file\n\
  \  -T  Produce HTML output [T/F]\n    default = F\n  -Q  Output File for PSI-BLAST\
  \ Matrix in ASCII [File Out]  Optional\n  -B  Input Alignment File for PSI-BLAST\
  \ Restart [File In]  Optional\n  -l  Restrict search of database to list of GI's\
  \ [String]  Optional\n  -U  Use lower case filtering of FASTA sequence [T/F]  Optional\n\
  \    default = F\n  -t  Use composition based score adjustment\nAs first character:\n\
  0 or F or f: no composition-based statistics\n2 or T or t: Composition-based score\
  \ adjustment as in Bioinformatics 21:902-911, 2005, conditioned on sequence properties\
  \ in round 1\n1: Composition-based statistics as in NAR  29:2994--3005, 2001\n3:\
  \ Composition-based score adjustment as in Bioinformatics 21:902-911, 2005, unconditionally\
  \ in round 1\nAs second character, if first character is equivalent to 1, 2, or\
  \ 3:\nU or u: unified p-value combining alignment p-value and compositional p-value\
  \ in round 1 only\n [String]\n    default = 2\n  -q  ASN.1 Scoremat input of checkpoint\
  \ data:\n0: no scoremat input\n1: Restart is from ASCII scoremat checkpoint file,\n\
  2: Restart is from binary scoremat checkpoint file [Integer]  Optional\n    default\
  \ = 0\n  -u  ASN.1 Scoremat output of checkpoint data:\n0: no scoremat output\n\
  1: Output is ASCII scoremat checkpoint file (requires -J),\n2: Output is binary\
  \ scoremat checkpoint file (requires -J) [Integer]  Optional\n    default = 0\n\
  \  -L  Cost to decline alignment (disabled when 0) [Integer]\n    default = 0\n\n"
generated_using:
- --help
