!Command
command:
- IntaRNA
positional:
- !Positional
  description: "--outMode arg (=N)            output mode :\n'N' normal output (ASCII\
    \ char + energy),\n'D' detailed output (ASCII char +"
  position: 0
  name: output
  optional: false
- !Positional
  description: -h [ --help ]                 show the help page for basic parameters
  position: 0
  name: arguments
  optional: false
- !Positional
  description: Run --fullhelp for the extended list of parameters
  position: 1
  name: parameters
  optional: false
named:
- !Flag
  description: "[ --query ] arg            either an RNA sequence or the stream/file\
    \ name\nfrom where to read the query sequences (should\nbe the shorter sequences\
    \ to increase\nefficiency); use 'STDIN' to read from standard\ninput stream; sequences\
    \ have to use IUPAC\nnucleotide encoding; output alias is [seq2]"
  synonyms:
  - -q
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "[ --target ] arg           either an RNA sequence or the stream/file\
    \ name\nfrom where to read the target sequences (should\nbe the longer sequences\
    \ to increase\nefficiency); use 'STDIN' to read from standard\ninput stream; sequences\
    \ have to use IUPAC\nnucleotide encoding; output alias is [seq1]"
  synonyms:
  - -t
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "(=2)         minimal number of base pairs inside a helix\n(arg in\
    \ range [2,4])"
  synonyms:
  - --helixMinBP
  args: !SimpleFlagArg
    name: arg
  optional: true
- !Flag
  description: "(=10)        maximal number of base pairs inside a helix\n(arg in\
    \ range [2,20])"
  synonyms:
  - --helixMaxBP
  args: !SimpleFlagArg
    name: arg
  optional: true
- !Flag
  description: "(=0)         maximal size for each internal loop size in a\nhelix\
    \ (arg in range [0,2])."
  synonyms:
  - --helixMaxIL
  args: !SimpleFlagArg
    name: arg
  optional: true
- !Flag
  description: "(=0)         minimal unpaired probability (per sequence) of\nconsidered\
    \ helices (arg in range [0,1])."
  synonyms:
  - --helixMinPu
  args: !SimpleFlagArg
    name: arg
  optional: true
- !Flag
  description: "(=0)          maximal energy (excluding) a helix may have\n(arg in\
    \ range [-999,999])."
  synonyms:
  - --helixMaxE
  args: !SimpleFlagArg
    name: arg
  optional: true
- !Flag
  description: "[=arg(=1)] (=0)  if given (or true), the overall energy of a\nhelix\
    \ (including E_init, ED, dangling ends, ..)\nwill be used for helixMaxE checks;\
    \ otherwise\nonly loop-terms are considered."
  synonyms:
  - --helixFullE
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "[=arg(=1)] (=0)      if given (or true), no seed is enforced within\n\
    the predicted interactions"
  synonyms:
  - --noSeed
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "comma separated list of explicit seed base pair\nencoding(s) in the\
    \ format\nstartTbpsT&startQbpsQ, e.g. '3|||.|&7||.||',\nwhere 'startT/Q' are the\
    \ indices of the 5' seed\nends in target/query sequence and 'bpsT/Q' the\nrespective\
    \ dot-bar base pair encodings. This\ndisables all other seed constraints and seed\n\
    identification."
  synonyms:
  - --seedTQ
  args: !SimpleFlagArg
    name: arg
  optional: true
- !Flag
  description: "(=7)             number of inter-molecular base pairs within the\n\
    seed region (arg in range [2,20])"
  synonyms:
  - --seedBP
  args: !SimpleFlagArg
    name: arg
  optional: true
- !Flag
  description: "[ --mode ] arg (=H)        prediction mode :\n'H' = heuristic (fast\
    \ and low memory),\n'M' = exact (slow),\n'S' = seed-only"
  synonyms:
  - -m
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "(=X)              interaction model :\n'S' = single-site, minimum-free-energy\n\
    interaction (interior loops only),\n'X' = single-site, minimum-free-energy\ninteraction\
    \ via seed-extension (interior loops\nonly),\n'B' = single-site, helix-block-based,\n\
    minimum-free-energy interaction (blocks of\nstable helices and interior loops\
    \ only),\n'P' = single-site interaction with minimal\nfree ensemble energy per\
    \ site (interior loops\nonly)"
  synonyms:
  - --model
  args: !SimpleFlagArg
    name: arg
  optional: true
- !Flag
  description: "(=C)                accessibility computation :\n'N' no accessibility\
    \ contributions\n'C' computation of accessibilities (see --accW\nand --accL)"
  synonyms:
  - --acc
  args: !SimpleFlagArg
    name: arg
  optional: true
- !Flag
  description: "(=0)          interaction site : maximal window size to be\nconsidered\
    \ for interaction (arg in range\n[0,99999]; 0 refers to the full sequence\nlength).\
    \ If --accW is provided, the smaller\nwindow size of both is used."
  synonyms:
  - --intLenMax
  args: !SimpleFlagArg
    name: arg
  optional: true
- !Flag
  description: "(=10)        interaction site : maximal number of unpaired\nbases\
    \ between neighbored interacting bases to\nbe considered in interactions (arg\
    \ in range\n[0,30]; 0 enforces stackings only)"
  synonyms:
  - --intLoopMax
  args: !SimpleFlagArg
    name: arg
  optional: true
- !Flag
  description: "(=STDOUT)           output (multi-arg) : provide a file name for\n\
    output (will be overwritten) or 'STDOUT/STDERR'\nto write to the according stream\
    \ (according to\n--outMode).\nUse one of the following PREFIXES\n(colon-separated)\
    \ to generate ADDITIONAL\noutput:\n'qMinE:' (query) for each position the minimal\n\
    energy of any interaction covering the position\n(CSV format)\n'qSpotProb:' (query)\
    \ for each position the\nprobability that is is covered by an\ninteraction covering\
    \ (CSV format)\n'qAcc:' (query) ED accessibility values\n('qPu'-like format).\n\
    'qPu:' (query) unpaired probabilities values\n(RNAplfold format).\n'tMinE:' (target)\
    \ for each position the\nminimal energy of any interaction covering the\nposition\
    \ (CSV format)\n'tSpotProb:' (target) for each position the\nprobability that\
    \ is is covered by an\ninteraction covering (CSV format)\n'tAcc:' (target) ED\
    \ accessibility values\n('tPu'-like format).\n'tPu:' (target) unpaired probabilities\
    \ values\n(RNAplfold format).\n'pMinE:' (target+query) for each index pair\nthe\
    \ minimal energy of any interaction covering\nthe pair (CSV format)\n'spotProb:'\
    \ (target+query) tracks for a given\nset of interaction spots their probability\
    \ to\nbe covered by an interaction. If no spots are\nprovided, probabilities for\
    \ all index\ncombinations are computed. Spots are encoded by\ncomma-separated\
    \ 'idxT&idxQ' pairs\n(target-query). For each spot a probability is\nprovided\
    \ in concert with the probability that\nnone of the spots (encoded by '0&0') is\
    \ covered\n(CSV format). The spot encoding is followed\ncolon-separated by the\
    \ output stream/file name,\neg. '--out=\"spotProb:3&76,59&2:STDERR\"'. NOTE:\n\
    value has to be quoted due to '&' symbol!\nFor each, provide a file name or STDOUT/STDERR\n\
    to write to the respective output stream."
  synonyms:
  - --out
  args: !SimpleFlagArg
    name: arg
  optional: true
- !Flag
  description: (=;)             column separator to be used in tabular CSV
  synonyms:
  - --outSep
  args: !SimpleFlagArg
    name: arg
  optional: true
- !Flag
  description: "[ --outNumber ] arg (=1)   number of (sub)optimal interactions to\
    \ report\n(arg in range [0,1000])"
  synonyms:
  - -n
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "(=B)         suboptimal output : interactions can overlap\n'N' in\
    \ none of the sequences,\n'T' in the target only,\n'Q' in the query only,\n'B'\
    \ in both sequences"
  synonyms:
  - --outOverlap
  args: !SimpleFlagArg
    name: arg
  optional: true
- !Flag
  description: "(=1)            maximal number of threads to be used for\nparallel\
    \ computation of query-target\ncombinations. A value of 0 requests all\navailable\
    \ CPUs. Note, the number of threads\nmultiplies the required memory used for\n\
    computation! (arg in range [0,8])"
  synonyms:
  - --threads
  args: !SimpleFlagArg
    name: arg
  optional: true
- !Flag
  description: "IntaRNA personality to be used, which defines\ndefault values, available\
    \ program arguments and\ntool behavior"
  synonyms:
  - --personality
  args: !SimpleFlagArg
    name: arg
  optional: true
- !Flag
  description: file from where to read additional command line
  synonyms:
  - --parameterFile
  args: !SimpleFlagArg
    name: arg
  optional: true
- !Flag
  description: show the extended help page for all available
  synonyms:
  - --fullhelp
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag: !Flag
  description: print version
  synonyms:
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "\nIntaRNA predicts RNA-RNA interactions.\n\nThe following basic program\
  \ arguments are supported:\n\nQuery:\n  -q [ --query ] arg            either an\
  \ RNA sequence or the stream/file name \n                                from where\
  \ to read the query sequences (should \n                                be the shorter\
  \ sequences to increase \n                                efficiency); use 'STDIN'\
  \ to read from standard \n                                input stream; sequences\
  \ have to use IUPAC \n                                nucleotide encoding; output\
  \ alias is [seq2]\n\nTarget:\n  -t [ --target ] arg           either an RNA sequence\
  \ or the stream/file name \n                                from where to read the\
  \ target sequences (should\n                                be the longer sequences\
  \ to increase \n                                efficiency); use 'STDIN' to read\
  \ from standard \n                                input stream; sequences have to\
  \ use IUPAC \n                                nucleotide encoding; output alias\
  \ is [seq1]\n\nHelix (only if --model=B):\n  --helixMinBP arg (=2)         minimal\
  \ number of base pairs inside a helix \n                                (arg in\
  \ range [2,4])\n  --helixMaxBP arg (=10)        maximal number of base pairs inside\
  \ a helix \n                                (arg in range [2,20])\n  --helixMaxIL\
  \ arg (=0)         maximal size for each internal loop size in a \n            \
  \                    helix (arg in range [0,2]).\n  --helixMinPu arg (=0)      \
  \   minimal unpaired probability (per sequence) of \n                          \
  \      considered helices (arg in range [0,1]).\n  --helixMaxE arg (=0)        \
  \  maximal energy (excluding) a helix may have \n                              \
  \  (arg in range [-999,999]).\n  --helixFullE [=arg(=1)] (=0)  if given (or true),\
  \ the overall energy of a \n                                helix (including E_init,\
  \ ED, dangling ends, ..)\n                                will be used for helixMaxE\
  \ checks; otherwise \n                                only loop-terms are considered.\n\
  \nSeed:\n  --noSeed [=arg(=1)] (=0)      if given (or true), no seed is enforced\
  \ within \n                                the predicted interactions\n  --seedTQ\
  \ arg                  comma separated list of explicit seed base pair\n       \
  \                         encoding(s) in the format \n                         \
  \       startTbpsT&startQbpsQ, e.g. '3|||.|&7||.||', \n                        \
  \        where 'startT/Q' are the indices of the 5' seed\n                     \
  \           ends in target/query sequence and 'bpsT/Q' the \n                  \
  \              respective dot-bar base pair encodings. This \n                 \
  \               disables all other seed constraints and seed \n                \
  \                identification.\n  --seedBP arg (=7)             number of inter-molecular\
  \ base pairs within the\n                                seed region (arg in range\
  \ [2,20])\n\nInteraction:\n  -m [ --mode ] arg (=H)        prediction mode : \n\
  \                                 'H' = heuristic (fast and low memory), \n    \
  \                             'M' = exact (slow), \n                           \
  \      'S' = seed-only\n  --model arg (=X)              interaction model : \n \
  \                                'S' = single-site, minimum-free-energy \n     \
  \                           interaction (interior loops only), \n              \
  \                   'X' = single-site, minimum-free-energy \n                  \
  \              interaction via seed-extension (interior loops \n               \
  \                 only), \n                                 'B' = single-site, helix-block-based,\
  \ \n                                minimum-free-energy interaction (blocks of \n\
  \                                stable helices and interior loops only), \n   \
  \                              'P' = single-site interaction with minimal \n   \
  \                             free ensemble energy per site (interior loops \n \
  \                               only)\n  --acc arg (=C)                accessibility\
  \ computation :\n                                 'N' no accessibility contributions\n\
  \                                 'C' computation of accessibilities (see --accW\n\
  \                                and --accL)\n  --intLenMax arg (=0)          interaction\
  \ site : maximal window size to be \n                                considered\
  \ for interaction (arg in range \n                                [0,99999]; 0 refers\
  \ to the full sequence \n                                length). If --accW is provided,\
  \ the smaller \n                                window size of both is used.\n \
  \ --intLoopMax arg (=10)        interaction site : maximal number of unpaired \n\
  \                                bases between neighbored interacting bases to \n\
  \                                be considered in interactions (arg in range \n\
  \                                [0,30]; 0 enforces stackings only)\n\nOutput:\n\
  \  --out arg (=STDOUT)           output (multi-arg) : provide a file name for \n\
  \                                output (will be overwritten) or 'STDOUT/STDERR'\n\
  \                                to write to the according stream (according to\
  \ \n                                --outMode).\n                              \
  \  Use one of the following PREFIXES \n                                (colon-separated)\
  \ to generate ADDITIONAL \n                                output:\n           \
  \                      'qMinE:' (query) for each position the minimal\n        \
  \                        energy of any interaction covering the position\n     \
  \                           (CSV format)\n                                 'qSpotProb:'\
  \ (query) for each position the \n                                probability that\
  \ is is covered by an \n                                interaction covering (CSV\
  \ format)\n                                 'qAcc:' (query) ED accessibility values\
  \ \n                                ('qPu'-like format).\n                     \
  \            'qPu:' (query) unpaired probabilities values \n                   \
  \             (RNAplfold format).\n                                 'tMinE:' (target)\
  \ for each position the \n                                minimal energy of any\
  \ interaction covering the \n                                position (CSV format)\n\
  \                                 'tSpotProb:' (target) for each position the \n\
  \                                probability that is is covered by an \n       \
  \                         interaction covering (CSV format)\n                  \
  \               'tAcc:' (target) ED accessibility values \n                    \
  \            ('tPu'-like format).\n                                 'tPu:' (target)\
  \ unpaired probabilities values \n                                (RNAplfold format).\n\
  \                                 'pMinE:' (target+query) for each index pair \n\
  \                                the minimal energy of any interaction covering\
  \ \n                                the pair (CSV format)\n                    \
  \             'spotProb:' (target+query) tracks for a given \n                 \
  \               set of interaction spots their probability to \n               \
  \                 be covered by an interaction. If no spots are \n             \
  \                   provided, probabilities for all index \n                   \
  \             combinations are computed. Spots are encoded by\n                \
  \                comma-separated 'idxT&idxQ' pairs \n                          \
  \      (target-query). For each spot a probability is \n                       \
  \         provided in concert with the probability that \n                     \
  \           none of the spots (encoded by '0&0') is covered\n                  \
  \              (CSV format). The spot encoding is followed \n                  \
  \              colon-separated by the output stream/file name,\n               \
  \                 eg. '--out=\"spotProb:3&76,59&2:STDERR\"'. NOTE: \n          \
  \                      value has to be quoted due to '&' symbol!\n             \
  \                   For each, provide a file name or STDOUT/STDERR \n          \
  \                      to write to the respective output stream.\n  --outSep arg\
  \ (=;)             column separator to be used in tabular CSV \n               \
  \                 output\n  --outMode arg (=N)            output mode :\n      \
  \                           'N' normal output (ASCII char + energy),\n         \
  \                        'D' detailed output (ASCII char + \n                  \
  \              energy/position details),\n                                 'C' CSV\
  \ output (see --outCsvCols),\n                                 'E' ensemble information\n\
  \  -n [ --outNumber ] arg (=1)   number of (sub)optimal interactions to report \n\
  \                                (arg in range [0,1000])\n  --outOverlap arg (=B)\
  \         suboptimal output : interactions can overlap \n                      \
  \           'N' in none of the sequences, \n                                 'T'\
  \ in the target only, \n                                 'Q' in the query only,\
  \ \n                                 'B' in both sequences\n\nGeneral:\n  --threads\
  \ arg (=1)            maximal number of threads to be used for \n              \
  \                  parallel computation of query-target \n                     \
  \           combinations. A value of 0 requests all \n                         \
  \       available CPUs. Note, the number of threads \n                         \
  \       multiplies the required memory used for \n                             \
  \   computation! (arg in range [0,8])\n  --version                     print version\n\
  \  --personality arg             IntaRNA personality to be used, which defines \n\
  \                                default values, available program arguments and\n\
  \                                tool behavior\n  --parameterFile arg          \
  \ file from where to read additional command line\n                            \
  \    arguments\n  -h [ --help ]                 show the help page for basic parameters\n\
  \  --fullhelp                    show the extended help page for all available \n\
  \                                parameters\n\nRun --fullhelp for the extended list\
  \ of parameters\n\nYou can find more detailed documentation of IntaRNA on \n\n \
  \ https://backofenlab.github.io/IntaRNA/\n\n"
generated_using:
- --help
