!Command
command:
- verify_excess_coverage.pl
positional:
- !Positional
  description: ''
  position: 0
  name: NUM_CPU
  optional: true
- !Positional
  description: ''
  position: 0
  name: bam1
  optional: false
- !Positional
  description: ''
  position: 1
  name: MAX_STD_DEV
  optional: true
named:
- !Flag
  description: "[REQUIRED]\nThe location for a specific BAM file in the dataset. Multiple\
    \ BAM\nfiles can be input. Example with 3 BAM files:\n--bam bam1=/path/bam1.bam\
    \ --bam bam2=/path/bam2.bam --bam\nbam3=/path/bam3.bam"
  synonyms:
  - --bam
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "[optional]\nThe number of CPU cores that should be used for the calculations."
  synonyms:
  - -c
  - --cores
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "[optional]\nThe maximum number of standard deviations from the mean\
    \ allowable\nfor positions with a 'normal' depth of coverage."
  synonyms:
  - --max-dev
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: "To displays help screen.\n"
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "Usage:\n    verify_excess_coverage.pl -c [NUM_CPU] --max-dev [MAX_STD_DEV]\
  \ --bam\n    bam1=/path/to/bam1 --bam bam2=/path/to/bam2 --bam bamX=/path/to/bamX\n\
  \nOptions:\n    --bam [REQUIRED]\n        The location for a specific BAM file in\
  \ the dataset. Multiple BAM\n        files can be input. Example with 3 BAM files:\n\
  \n        --bam bam1=/path/bam1.bam --bam bam2=/path/bam2.bam --bam\n        bam3=/path/bam3.bam\n\
  \n    -c, --cores [optional]\n        The number of CPU cores that should be used\
  \ for the calculations.\n\n    --max-dev [optional]\n        The maximum number\
  \ of standard deviations from the mean allowable\n        for positions with a 'normal'\
  \ depth of coverage.\n\n    -h, --help\n        To displays help screen.\n\n"
generated_using:
- --help
