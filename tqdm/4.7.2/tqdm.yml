!Command
command:
- tqdm
positional: []
named:
- !Flag
  description: ": str, optional\nPrefix for the progressbar."
  synonyms:
  - --desc
  args: !SimpleFlagArg
    name: desc
  optional: true
- !Flag
  description: ": int, optional\nThe number of expected iterations. If unspecified,\n\
    len(iterable) is used if possible. As a last resort, only basic\nprogress statistics\
    \ are displayed (no ETA, no progressbar).\nIf `gui` is True and this parameter\
    \ needs subsequent updating,\nspecify an initial arbitrary large positive integer,\n\
    e.g. int(9e9)."
  synonyms:
  - --total
  args: !SimpleFlagArg
    name: total
  optional: true
- !Flag
  description: ": bool, optional\nIf [default: True], keeps all traces of the progressbar\n\
    upon termination of iteration."
  synonyms:
  - --leave
  args: !SimpleFlagArg
    name: leave
  optional: true
- !Flag
  description: ": int, optional\nThe width of the entire output message. If specified,\n\
    dynamically resizes the progressbar to stay within this bound.\nIf unspecified,\
    \ attempts to use environment width. The\nfallback is a meter width of 10 and\
    \ no limit for the counter and\nstatistics. If 0, will not print any meter (only\
    \ stats)."
  synonyms:
  - --ncols
  args: !SimpleFlagArg
    name: ncols
  optional: true
- !Flag
  description: ": float, optional\nMinimum progress update interval, in seconds [default:\
    \ 0.1]."
  synonyms:
  - --mininterval
  args: !SimpleFlagArg
    name: mininterval
  optional: true
- !Flag
  description: ": float, optional\nMaximum progress update interval, in seconds [default:\
    \ 10.0]."
  synonyms:
  - --maxinterval
  args: !SimpleFlagArg
    name: maxinterval
  optional: true
- !Flag
  description: ": int, optional\nMinimum progress update interval, in iterations.\n\
    If specified, will set `mininterval` to 0."
  synonyms:
  - --miniters
  args: !SimpleFlagArg
    name: miniters
  optional: true
- !Flag
  description: ": bool, optional\nIf unspecified or False, use unicode (smooth blocks)\
    \ to fill\nthe meter. The fallback is to use ASCII characters `1-9 #`."
  synonyms:
  - --ascii
  args: !SimpleFlagArg
    name: ascii
  optional: true
- !Flag
  description: ": bool, optional\nWhether to disable the entire progressbar wrapper\n\
    [default: False]."
  synonyms:
  - --disable
  args: !SimpleFlagArg
    name: disable
  optional: true
- !Flag
  description: ": str, optional\nString that will be used to define the unit of each\
    \ iteration\n[default: it]."
  synonyms:
  - --unit
  args: !SimpleFlagArg
    name: unit
  optional: true
- !Flag
  description: ": bool, optional\nIf set, the number of iterations will be reduced/scaled\n\
    automatically and a metric prefix following the\nInternational System of Units\
    \ standard will be added\n(kilo, mega, etc.) [default: False]."
  synonyms:
  - --unit_scale
  args: !SimpleFlagArg
    name: unit_scale
  optional: true
- !Flag
  description: ": bool, optional\nIf set, constantly alters `ncols` to the environment\
    \ (allowing\nfor window resizes) [default: False]."
  synonyms:
  - --dynamic_ncols
  args: !SimpleFlagArg
    name: dynamic_ncols
  optional: true
- !Flag
  description: ": float, optional\nExponential moving average smoothing factor for\
    \ speed estimates\n(ignored in GUI mode). Ranges from 0 (average speed) to 1\n\
    (current/instantaneous speed) [default: 0.3]."
  synonyms:
  - --smoothing
  args: !SimpleFlagArg
    name: smoothing
  optional: true
- !Flag
  description: ": str, optional\nSpecify a custom bar string formatting. May impact\
    \ performance.\nIf unspecified, will use '{l_bar}{bar}{r_bar}', where l_bar is\n\
    '{desc}{percentage:3.0f}%|' and r_bar is\n'| {n_fmt}/{total_fmt} [{elapsed_str}<{remaining_str},\
    \ {rate_fmt}]'\nPossible vars: bar, n, n_fmt, total, total_fmt, percentage,\n\
    rate, rate_fmt, elapsed, remaining, l_bar, r_bar, desc."
  synonyms:
  - --bar_format
  args: !SimpleFlagArg
    name: bar_format
  optional: true
- !Flag
  description: ": int, optional\nThe initial counter value. Useful when restarting\
    \ a progress\nbar [default: 0]."
  synonyms:
  - --initial
  args: !SimpleFlagArg
    name: initial
  optional: true
- !Flag
  description: ": int, optional\nSpecify the line offset to print this bar (starting\
    \ from 0)\nAutomatic if unspecified.\nUseful to manage multiple bars at once (eg,\
    \ from threads)."
  synonyms:
  - --position
  args: !SimpleFlagArg
    name: position
  optional: true
- !Flag
  description: ": chr, optional\nDelimiting character [default: '\\n']. Use '\\0'\
    \ for null.\nN.B.: on Windows systems, Python converts '\\n' to '\\r\\n'."
  synonyms:
  - --delim
  args: !SimpleFlagArg
    name: delim
  optional: true
- !Flag
  description: ": int, optional\nString buffer size in bytes [default: 256]\nused\
    \ when `delim` is specified.\n"
  synonyms:
  - --buf_size
  args: !SimpleFlagArg
    name: buf_size
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: Print this help and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: Print version and exit
  synonyms:
  - -v
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "Usage:\n  tqdm [--help | options]\n\nOptions:\n  -h, --help     Print\
  \ this help and exit\n  -v, --version  Print version and exit\n\n  --desc=<desc>\
  \  : str, optional\n            Prefix for the progressbar.\n  --total=<total> \
  \ : int, optional\n            The number of expected iterations. If unspecified,\n\
  \            len(iterable) is used if possible. As a last resort, only basic\n \
  \           progress statistics are displayed (no ETA, no progressbar).\n      \
  \      If `gui` is True and this parameter needs subsequent updating,\n        \
  \    specify an initial arbitrary large positive integer,\n            e.g. int(9e9).\n\
  \  --leave=<leave>  : bool, optional\n            If [default: True], keeps all\
  \ traces of the progressbar\n            upon termination of iteration.\n  --ncols=<ncols>\
  \  : int, optional\n            The width of the entire output message. If specified,\n\
  \            dynamically resizes the progressbar to stay within this bound.\n  \
  \          If unspecified, attempts to use environment width. The\n            fallback\
  \ is a meter width of 10 and no limit for the counter and\n            statistics.\
  \ If 0, will not print any meter (only stats).\n  --mininterval=<mininterval>  :\
  \ float, optional\n            Minimum progress update interval, in seconds [default:\
  \ 0.1].\n  --maxinterval=<maxinterval>  : float, optional\n            Maximum progress\
  \ update interval, in seconds [default: 10.0].\n  --miniters=<miniters>  : int,\
  \ optional\n            Minimum progress update interval, in iterations.\n     \
  \       If specified, will set `mininterval` to 0.\n  --ascii=<ascii>  : bool, optional\n\
  \            If unspecified or False, use unicode (smooth blocks) to fill\n    \
  \        the meter. The fallback is to use ASCII characters `1-9 #`.\n  --disable=<disable>\
  \  : bool, optional\n            Whether to disable the entire progressbar wrapper\n\
  \            [default: False].\n  --unit=<unit>  : str, optional\n            String\
  \ that will be used to define the unit of each iteration\n            [default:\
  \ it].\n  --unit_scale=<unit_scale>  : bool, optional\n            If set, the number\
  \ of iterations will be reduced/scaled\n            automatically and a metric prefix\
  \ following the\n            International System of Units standard will be added\n\
  \            (kilo, mega, etc.) [default: False].\n  --dynamic_ncols=<dynamic_ncols>\
  \  : bool, optional\n            If set, constantly alters `ncols` to the environment\
  \ (allowing\n            for window resizes) [default: False].\n  --smoothing=<smoothing>\
  \  : float, optional\n            Exponential moving average smoothing factor for\
  \ speed estimates\n            (ignored in GUI mode). Ranges from 0 (average speed)\
  \ to 1\n            (current/instantaneous speed) [default: 0.3].\n  --bar_format=<bar_format>\
  \  : str, optional\n            Specify a custom bar string formatting. May impact\
  \ performance.\n            If unspecified, will use '{l_bar}{bar}{r_bar}', where\
  \ l_bar is\n            '{desc}{percentage:3.0f}%|' and r_bar is\n            '|\
  \ {n_fmt}/{total_fmt} [{elapsed_str}<{remaining_str}, {rate_fmt}]'\n           \
  \ Possible vars: bar, n, n_fmt, total, total_fmt, percentage,\n            rate,\
  \ rate_fmt, elapsed, remaining, l_bar, r_bar, desc.\n  --initial=<initial>  : int,\
  \ optional\n            The initial counter value. Useful when restarting a progress\n\
  \            bar [default: 0].\n  --position=<position>  : int, optional\n     \
  \       Specify the line offset to print this bar (starting from 0)\n          \
  \  Automatic if unspecified.\n            Useful to manage multiple bars at once\
  \ (eg, from threads).\n  --delim=<delim>  : chr, optional\n            Delimiting\
  \ character [default: '\\n']. Use '\\0' for null.\n            N.B.: on Windows\
  \ systems, Python converts '\\n' to '\\r\\n'.\n  --buf_size=<buf_size>  : int, optional\n\
  \            String buffer size in bytes [default: 256]\n            used when `delim`\
  \ is specified.\n\n"
generated_using:
- --help
