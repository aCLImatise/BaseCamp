!Command
positional: []
named: []
command:
- obs-window
parent:
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "Argument Error: Unknown switch: --help\nUsage: obs-window  [[[-flag] [option]]\
  \ ...]\nOptions:\nRequired: <>; Optional: []; Flagless arguments must be in order.\n\
  \n\n*** Window Options ***\n\n [-featureOffset unsigned]     Offset in observation\
  \ file where input features start {0}\n <-numFeatures unsigned>       Number of\
  \ input features (per frame) {0}\n [-radius unsigned]            output frames consist\
  \ of windows of 1+2r input frames {0}\n [-outputFileName str]         Output filename\
  \ for windowed observation file {null}\n [-outputListFileName str]     Output list\
  \ filename for windowed observation file (HTK, ASCII, Binary) {null}\n [-outputNameSeparator\
  \ str]    String to use as separator when outputting HTK, ASCII, or binary windowed\
  \ observation file {null}\n [-outputFileFormat str]       Output windowed observation\
  \ file format (htk,binary,ascii,flatascii,pfile) {pfile}\n [-outputFileSwap bool]\
  \        Do byte swapping when outputting PFile, HTK, or binary windowed observation\
  \ file {F}\n\n*** Observation input file handling ***\n\n <-ofX str>           \
  \         Observation File.  Replace X with the file number {null}\n [-nfX unsigned]\
  \               Number of floats in observation file X {0}\n [-niX unsigned]   \
  \            Number of ints in observation file X {0}\n [-fmtX str]            \
  \       Format (htk,binary,ascii,flatascii,hdf5,pfile) for observation file X {pfile}\n\
  \ [-fileBufferSize unsigned]    Size in MB of the file observation frame buffer\
  \ {16}\n [-constantSpace bool]         Use only fileBufferSize memory to hold the\
  \ observation data {F}\n [-fileWindowSize unsigned]    Size in MB to load at once\
  \ if constantSpace is active {4}\n [-fileWindowDelta unsigned]   How close (in frames)\
  \ from the edge of the current window triggers loading more frames {100}\n [-iswpX\
  \ bool]                 Endian swap condition for observation file X {T}\n [-prefrX\
  \ str]                 Float range for observation file X (before transforms) {all}\n\
  \ [-preirX str]                 Int range for observation file X {all}\n [-frX str]\
  \                    Float range for observation file X (after transforms) {all}\n\
  \ [-irX str]                    Int range for observation file X {all}\n [-srX str]\
  \                    Segment range for observation file X {all}\n [-leftPadX unsigned]\
  \          Prepend padding frames to file X {0}\n [-rightPadX unsigned]        \
  \ Append padding frames to file X {0}\n [-preprX str]                 Pre Per-segment\
  \ frame Range for obs file X before any transforms are applied {null}\n [-postprX\
  \ str]                Post Per-segment frame Range for obs file X after per-stream\
  \ transforms are applied {null}\n [-gpr str]                    Global Per-segment\
  \ final frame Range {null}\n [-justification str]          Justification of usable\
  \ frames (left, center, right) {left}\n [-obsNAN bool]                True if observation\
  \ files allow FP NAN values {F}\n\n*** File range options ***\n\n [-dcdrng str]\
  \                 Range to decode over segment file {all}\n [-startSkip integer]\
  \          Frames to skip at beginning (i.e., first frame is buff[startSkip]) {0}\n\
  \ [-endSkip integer]            Frames to skip at end (i.e., last frame is buff[len-1-endSkip])\
  \ {0}\n\n*** Help options ***\n\n [-help [unsigned]]            Print this message.\
  \ Add an argument from 1 to 5 for increasing help info. {0}\n [-version bool]  \
  \             Print GMTK version number and exit. {F}\n\n*** Observation matrix\
  \ transformation options ***\n\n [-fdiffactX str]              Action if different\
  \ number of frames in streams: error (er), repeat last frame (rl), first frame (rf),\
  \ segmentally expand (se), truncate from start (ts), truncate from end (te) {er}\n\
  \ [-sdiffactX str]              Action if different number of segments in streams:\
  \ error (er), truncate from end (te), repeat last sent (rl), and wrap around (wa).\
  \ {te}\n [-cppifascii bool]            Pre-process ASCII files using CPP {F}\n [-transX\
  \ str]                 per stream transformations string {null}\n [-posttrans str]\
  \              Final global transformations string {null}\n [-comb str]        \
  \           Combine float features (none: no combination, add, sub, mul,div {none}\n\
  \ [-cppCommandOptions str]      Command line options to give to 'cpp' {null}\n [-verbosity\
  \ unsigned]         Level of debugging output, [0-100] {10}\n\n*** Additional arguments\
  \ ***\n\n [-argsFile <str>]             File to obtain additional arguments from\
  \ {}\n"
generated_using:
- --help
