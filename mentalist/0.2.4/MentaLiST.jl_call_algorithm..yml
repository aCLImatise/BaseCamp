&id004 !Command
command:
- MentaLiST.jl
- call
- algorithm.
positional:
- !Positional
  description: ''
  position: 0
  name: MentaLiST.jl
  optional: false
- !Positional
  description: ''
  position: 1
  name: call
  optional: false
named:
- !Flag
  description: ''
  synonyms:
  - -t
  args: !SimpleFlagArg
    name: MUTATION_THRESHOLD
  optional: true
- !Flag
  description: ''
  synonyms:
  - --db
  args: !SimpleFlagArg
    name: DB
  optional: true
- !Flag
  description: ''
  synonyms:
  - -o
  args: !SimpleFlagArg
    name: O
  optional: true
parent: &id003 !Command
  command:
  - MentaLiST.jl
  - call
  positional: []
  named:
  - !Flag
    description: Output file with MLST call
    synonyms:
    - -o
    args: !SimpleFlagArg
      name: O
    optional: true
  - !Flag
    description: Kmer database
    synonyms:
    - --db
    args: !SimpleFlagArg
      name: DB
    optional: true
  - !Flag
    description: "Maximum number of mutations when looking for\nnovel alleles. (type:\
      \ Int64, default: 6)"
    synonyms:
    - -t
    - --mutation_threshold
    args: !SimpleFlagArg
      name: MUTATION_THRESHOLD
    optional: true
  - !Flag
    description: "Minimum # of times a kmer is seen to be\nconsidered present in the\
      \ sample (solid).\n(type: Int64, default: 10)"
    synonyms:
    - --kt
    args: !SimpleFlagArg
      name: KT
    optional: true
  - !Flag
    description: Outputs the results for the original voting
    synonyms:
    - --output_votes
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "Input TXT file for multiple samples. First\ncolumn has the sample\
      \ name, second the FASTQ\nfile. Repeat the sample name for samples with\nmore\
      \ than one file (paired reads, f.i.)"
    synonyms:
    - -i
    - --sample_input_file
    args: !SimpleFlagArg
      name: SAMPLE_INPUT_FILE
    optional: true
  - !Flag
    description: "[_1...]            FastQ input files, one per sample, forward\n\
      reads (or unpaired reads)."
    synonyms:
    - '-1'
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: '[_2...]            FastQ input files, one per sample, reverse'
    synonyms:
    - '-2'
    args: !EmptyFlagArg {}
    optional: true
  parent: &id001 !Command
    command:
    - MentaLiST.jl
    positional: []
    named:
    - !Flag
      description: ''
      synonyms:
      - -v
      args: !EmptyFlagArg {}
      optional: true
    parent:
    subcommands:
    - !Command
      command:
      - MentaLiST.jl
      - db_info
      positional: []
      named:
      - !Flag
        description: MentaLiST kmer database
        synonyms:
        - --db
        args: !SimpleFlagArg
          name: DB
        optional: true
      parent: *id001
      subcommands: []
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: MentaLiST.jl db_info --db DB [-h]\n\noptional arguments:\n\
        \  --db DB     MentaLiST kmer database\n  -h, --help  show this help message\
        \ and exit\n\n"
      generated_using: &id002
      - --help
    - !Command
      command:
      - MentaLiST.jl
      - download_enterobase
      positional: []
      named:
      - !Flag
        description: '[-h]'
        synonyms:
        - -t
        args: !SimpleFlagArg
          name: TYPE
        optional: true
      - !Flag
        description: Output file (kmer database)
        synonyms:
        - --db
        args: !SimpleFlagArg
          name: DB
        optional: true
      - !Flag
        description: 'Kmer size (type: Int8)'
        synonyms:
        - -k
        args: !SimpleFlagArg
          name: K
        optional: true
      - !Flag
        description: "Number of threads used in parallel. (type:\nInt64, default:\
          \ 2)"
        synonyms:
        - --threads
        args: !SimpleFlagArg
          name: THREADS
        optional: true
      - !Flag
        description: Output folder for the scheme Fasta files.
        synonyms:
        - -o
        - --output
        args: !SimpleFlagArg
          name: OUTPUT
        optional: true
      - !Flag
        description: "Letter identifying which scheme: (S)almonella,\n(Y)ersinia,\
          \ or (E)scherichia/Shigella."
        synonyms:
        - -s
        - --scheme
        args: !SimpleFlagArg
          name: SCHEME
        optional: true
      - !Flag
        description: "Choose the type: 'cg' or 'wg' for cgMLST or\nwgMLST scheme,\
          \ respectively."
        synonyms:
        - -t
        - --type
        args: !SimpleFlagArg
          name: TYPE
        optional: true
      parent: *id001
      subcommands: []
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: MentaLiST.jl download_enterobase --db DB -k K\n         \
        \               [--threads THREADS] -o OUTPUT -s SCHEME\n                \
        \        -t TYPE [-h]\n\noptional arguments:\n  --db DB              Output\
        \ file (kmer database)\n  -k K                 Kmer size (type: Int8)\n  --threads\
        \ THREADS    Number of threads used in parallel. (type:\n                \
        \       Int64, default: 2)\n  -o, --output OUTPUT  Output folder for the scheme\
        \ Fasta files.\n  -s, --scheme SCHEME  Letter identifying which scheme: (S)almonella,\n\
        \                       (Y)ersinia, or (E)scherichia/Shigella.\n  -t, --type\
        \ TYPE      Choose the type: 'cg' or 'wg' for cgMLST or\n                \
        \       wgMLST scheme, respectively.\n  -h, --help           show this help\
        \ message and exit\n\n"
      generated_using: *id002
    - *id003
    - !Command
      command:
      - MentaLiST.jl
      - list_pubmlst
      positional: []
      named:
      - !Flag
        description: "Only list schemes where the species name starts\nwith this prefix."
        synonyms:
        - -p
        - --prefix
        args: !SimpleFlagArg
          name: PREFIX
        optional: true
      parent: *id001
      subcommands: []
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: MentaLiST.jl list_pubmlst [-p PREFIX] [-h]\n\noptional arguments:\n\
        \  -p, --prefix PREFIX  Only list schemes where the species name starts\n\
        \                       with this prefix.\n  -h, --help           show this\
        \ help message and exit\n\n"
      generated_using: *id002
    - !Command
      command:
      - MentaLiST.jl
      - list_cgmlst
      positional: []
      named:
      - !Flag
        description: "Only list schemes where the species name starts\nwith this prefix."
        synonyms:
        - -p
        - --prefix
        args: !SimpleFlagArg
          name: PREFIX
        optional: true
      parent: *id001
      subcommands: []
      usage: []
      help_flag: !Flag
        description: show this help message and exit
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "usage: MentaLiST.jl list_cgmlst [-p PREFIX] [-h]\n\noptional arguments:\n\
        \  -p, --prefix PREFIX  Only list schemes where the species name starts\n\
        \                       with this prefix.\n  -h, --help           show this\
        \ help message and exit\n\n"
      generated_using: *id002
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag: !Flag
      description: show version information and exit
      synonyms:
      - -v
      - --version
      args: !EmptyFlagArg {}
      optional: true
    help_text: "usage: MentaLiST.jl [-v] [-h]\n                    {call|build_db|db_info|list_pubmlst|download_pubmlst|list_cgmlst|download_cgmlst|download_enterobase}\n\
      \ncommands:\n  call                 MLST caller, given a sample and a k-mer\n\
      \                       database.\n  build_db             Build a MLST k-mer\
      \ database, given a list of\n                       FASTA files.\n  db_info\
      \              Extract information from an existing MentaLiST\n            \
      \           k-mer database\n  list_pubmlst         List all available MLST schemes\
      \ from\n                       www.pubmlst.org.\n  download_pubmlst     Dowload\
      \ a MLST scheme from pubmlst and build a\n                       MLST k-mer\
      \ database.\n  list_cgmlst          List all available cgMLST schemes from\n\
      \                       www.cgmlst.org.\n  download_cgmlst      Dowload a MLST\
      \ scheme from cgmlst.org and build\n                       a MLST k-mer database.\n\
      \  download_enterobase  Dowload a MLST scheme from Enterobase\n            \
      \           (enterobase.warwick.ac.uk) and build a MLST\n                  \
      \     k-mer database.\n\noptional arguments:\n  -v, --version        show version\
      \ information and exit\n  -h, --help           show this help message and exit\n\
      \nMentaLiST -- The MLST pipeline developed by the PathOGiST research group.\
      \ https://github.com/WGS-TB/MentaLiST\nTo cite: Feijao P, Yao H, Fornika D,\
      \ Gardy J, Hsiao W, Chauve C, Chindelevitch L. 10/01/2018. Microbial Genomics\
      \ 4(2): doi:10.1099/mgen.0.000146\n\n"
    generated_using:
    - -h
  subcommands:
  - *id004
  - !Command
    command:
    - MentaLiST.jl
    - call
    - reads.
    positional:
    - !Positional
      description: ''
      position: 0
      name: MentaLiST.jl
      optional: false
    - !Positional
      description: ''
      position: 1
      name: call
      optional: false
    named:
    - !Flag
      description: ''
      synonyms:
      - -t
      args: !SimpleFlagArg
        name: MUTATION_THRESHOLD
      optional: true
    - !Flag
      description: ''
      synonyms:
      - --db
      args: !SimpleFlagArg
        name: DB
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -o
      args: !SimpleFlagArg
        name: O
      optional: true
    parent: *id003
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "WARNING: imported binding for VERSION overwritten in module Main\n\
      too many arguments\nusage: MentaLiST.jl call -o O --db DB [-t MUTATION_THRESHOLD]\n\
      \                        [--kt KT] [--output_votes] [--output_special]\n   \
      \                     [-i SAMPLE_INPUT_FILE] [-1 [_1...]]\n                \
      \        [-2 [_2...]] [--fasta]\n"
    generated_using: *id002
  usage: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: MentaLiST.jl call -o O --db DB [-t MUTATION_THRESHOLD]\n    \
    \                    [--kt KT] [--output_votes] [--output_special]\n         \
    \               [-i SAMPLE_INPUT_FILE] [-1 [_1...]]\n                        [-2\
    \ [_2...]] [--fasta] [-h]\n\noptional arguments:\n  -o O                  Output\
    \ file with MLST call\n  --db DB               Kmer database\n  -t, --mutation_threshold\
    \ MUTATION_THRESHOLD\n                        Maximum number of mutations when\
    \ looking for\n                        novel alleles. (type: Int64, default: 6)\n\
    \  --kt KT               Minimum # of times a kmer is seen to be\n           \
    \             considered present in the sample (solid).\n                    \
    \    (type: Int64, default: 10)\n  --output_votes        Outputs the results for\
    \ the original voting\n                        algorithm.\n  --output_special\
    \      Outputs a FASTA file with the alleles from\n                        'special\
    \ cases' such as incomplete coverage,\n                        novel, and multiple\
    \ alleles.\n  -i, --sample_input_file SAMPLE_INPUT_FILE\n                    \
    \    Input TXT file for multiple samples. First\n                        column\
    \ has the sample name, second the FASTQ\n                        file. Repeat\
    \ the sample name for samples with\n                        more than one file\
    \ (paired reads, f.i.)\n  -1 [_1...]            FastQ input files, one per sample,\
    \ forward\n                        reads (or unpaired reads).\n  -2 [_2...]  \
    \          FastQ input files, one per sample, reverse\n                      \
    \  reads.\n  --fasta               Input files are in FASTA format, instead of\n\
    \                        the default FASTQs.\n  -h, --help            show this\
    \ help message and exit\n\nMentaLiST MLST calling function. Calls alleles on a\
    \ given MLST database.\nYou can create a custom DB with 'create_db' or other MentaLiST\
    \ functions that download schemes from pubmlst, cgmlst.org or Enterobase.\n\n\
    Examples:\nmentalist call -o my_sample.mlst --db my_scheme.db -1 sample_1.fastq.gz\
    \ -2 sample_2.fastq.gz # one paired-end sample.\nmentalist call -o all_samples.mlst\
    \ --db my_scheme.db -1 *.fastq.gz -2 *.fastq.gz # multiple paired-end samples.\n"
  generated_using: *id002
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "WARNING: imported binding for VERSION overwritten in module Main\ntoo\
  \ many arguments\nusage: MentaLiST.jl call -o O --db DB [-t MUTATION_THRESHOLD]\n\
  \                        [--kt KT] [--output_votes] [--output_special]\n       \
  \                 [-i SAMPLE_INPUT_FILE] [-1 [_1...]]\n                        [-2\
  \ [_2...]] [--fasta]\n"
generated_using: *id002
