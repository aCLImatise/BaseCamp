!Command
positional:
- !Positional
  description: ''
  position: 0
  name: private_key
  optional: false
named:
- !Flag
  description: Name of the file to decrypt. Reads from stdin if not specified.
  synonyms:
  - -i
  - --input
  args: !SimpleFlagArg
    name: INPUT
  optional: true
- !Flag
  description: Name of the file to write the decrypted file to. Written to stdout
    if this option is not present.
  synonyms:
  - -o
  - --output
  args: !SimpleFlagArg
    name: OUTPUT
  optional: true
- !Flag
  description: Key format of the private key - default PEM
  synonyms:
  - --keyform
  args: !SimpleFlagArg
    name: KEYFORM
  optional: true
command:
- pyrsa-decrypt
parent:
subcommands: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "Usage: pyrsa-decrypt [options] private_key\n\nDecrypts a file. The original\
  \ file must be shorter than the key length in\norder to have been encrypted. For\
  \ larger files, use the pyrsa-decrypt-bigfile\ncommand.\n\nOptions:\n  -h, --help\
  \            show this help message and exit\n  -i INPUT, --input=INPUT\n      \
  \                  Name of the file to decrypt. Reads from stdin if not\n      \
  \                  specified.\n  -o OUTPUT, --output=OUTPUT\n                  \
  \      Name of the file to write the decrypted file to.\n                      \
  \  Written to stdout if this option is not present.\n  --keyform=KEYFORM     Key\
  \ format of the private key - default PEM\n"
generated_using:
- --help
