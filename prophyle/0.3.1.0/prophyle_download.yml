&id003 !Command
command:
- prophyle
- download
positional:
- !Positional
  description: ''
  position: 0
  name: STR
  optional: true
named:
- !Flag
  description: directory for the tree and the sequences [~/prophyle]
  synonyms:
  - -d
  args: !SimpleFlagArg
    name: DIR
  optional: true
- !Flag
  description: log file
  synonyms:
  - -l
  args: !SimpleFlagArg
    name: STR
  optional: true
- !Flag
  description: rewrite library files if they already exist
  synonyms:
  - -F
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '[STR [STR ...]]  advanced configuration (a JSON dictionary)'
  synonyms:
  - -c
  args: !EmptyFlagArg {}
  optional: true
parent: &id001 !Command
  command:
  - prophyle
  positional: []
  named:
  - !Flag
    description: ''
    synonyms:
    - -v
    args: !EmptyFlagArg {}
    optional: true
  parent:
  subcommands:
  - !Command
    command:
    - prophyle
    - analyze
    positional: []
    named:
    - !Flag
      description: "['w', 'u', 'wl', 'ul']\nstatistics to use for the computation\
        \ of\nhistograms: w (default) => weighted assignments; u\n=> unique assignments,\
        \ non-weighted; wl => weighted\nassignments, propagated to leaves; ul => unique\n\
        assignments, propagated to leaves."
      synonyms:
      - -s
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "['sam', 'bam', 'cram', 'uncompressed_bam', 'kraken', 'histo']\n\
        Input format of assignments [auto]"
      synonyms:
      - -f
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '[STR [STR ...]]       advanced configuration (a JSON dictionary)'
      synonyms:
      - -c
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: prophyle analyze [-h] [-s ['w', 'u', 'wl', 'ul']]\n       \
      \                 [-f ['sam', 'bam', 'cram', 'uncompressed_bam', 'kraken', 'histo']]\n\
      \                        [-c [STR [STR ...]]]\n                        {index_dir,\
      \ tree.nw} <out.pref> <classified.bam>\n                        [<classified.bam>\
      \ ...]\n\npositional arguments:\n  {index_dir, tree.nw}     index directory\
      \ or phylogenetic tree\n  <out.pref>               output prefix\n  <classified.bam>\
      \         classified reads (use '-' for stdin)\n\noptional arguments:\n  -h,\
      \ --help               show this help message and exit\n  -s ['w', 'u', 'wl',\
      \ 'ul']\n                           statistics to use for the computation of\n\
      \                           histograms: w (default) => weighted assignments;\
      \ u\n                           => unique assignments, non-weighted; wl => weighted\n\
      \                           assignments, propagated to leaves; ul => unique\n\
      \                           assignments, propagated to leaves.\n  -f ['sam',\
      \ 'bam', 'cram', 'uncompressed_bam', 'kraken', 'histo']\n                  \
      \         Input format of assignments [auto]\n  -c [STR [STR ...]]       advanced\
      \ configuration (a JSON dictionary)\n"
    generated_using: &id002
    - --help
  - !Command
    command:
    - prophyle
    - compress
    positional:
    - !Positional
      description: ''
      position: 0
      name: STR
      optional: true
    named:
    - !Flag
      description: '[STR [STR ...]]  advanced configuration (a JSON dictionary)'
      synonyms:
      - -c
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: prophyle compress [-h] [-c [STR [STR ...]]]\n             \
      \            <index.dir> [<archive.tar.gz>]\n\npositional arguments:\n  <index.dir>\
      \         index directory\n  <archive.tar.gz>    output archive [<index.dir>.tar.gz]\n\
      \noptional arguments:\n  -h, --help          show this help message and exit\n\
      \  -c [STR [STR ...]]  advanced configuration (a JSON dictionary)\n"
    generated_using: *id002
  - !Command
    command:
    - prophyle
    - decompress
    positional:
    - !Positional
      description: ''
      position: 0
      name: STR
      optional: true
    named:
    - !Flag
      description: skip k-LCP construction
      synonyms:
      - -K
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '[STR [STR ...]]  advanced configuration (a JSON dictionary)'
      synonyms:
      - -c
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: prophyle decompress [-h] [-K] [-c [STR [STR ...]]]\n      \
      \                     <archive.tar.gz> [<output.dir>]\n\npositional arguments:\n\
      \  <archive.tar.gz>    output archive\n  <output.dir>        output directory\
      \ [./]\n\noptional arguments:\n  -h, --help          show this help message\
      \ and exit\n  -K                  skip k-LCP construction\n  -c [STR [STR ...]]\
      \  advanced configuration (a JSON dictionary)\n"
    generated_using: *id002
  - !Command
    command:
    - prophyle
    - compile
    positional:
    - !Positional
      description: ''
      position: 0
      name: STR
      optional: true
    named:
    - !Flag
      description: clean files instead of compiling
      synonyms:
      - -C
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: force recompilation
      synonyms:
      - -F
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: run compilation in parallel
      synonyms:
      - -P
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '[STR [STR ...]]  advanced configuration (a JSON dictionary)'
      synonyms:
      - -c
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: prophyle compile [-h] [-C] [-F] [-P] [-c [STR [STR ...]]]\n\
      \noptional arguments:\n  -h, --help          show this help message and exit\n\
      \  -C                  clean files instead of compiling\n  -F              \
      \    force recompilation\n  -P                  run compilation in parallel\n\
      \  -c [STR [STR ...]]  advanced configuration (a JSON dictionary)\n"
    generated_using: *id002
  - !Command
    command:
    - prophyle
    - index
    positional: []
    named:
    - !Flag
      description: "directory with the library sequences [dir. of the first\ntree]"
      synonyms:
      - -g
      args: !SimpleFlagArg
        name: DIR
      optional: true
    - !Flag
      description: number of threads [auto (8)]
      synonyms:
      - -j
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: k-mer length [31]
      synonyms:
      - -k
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: log file [<index.dir>/log.txt]
      synonyms:
      - -l
      args: !SimpleFlagArg
        name: STR
      optional: true
    - !Flag
      description: rate of sampling of the tree [no sampling]
      synonyms:
      - -s
      args: !SimpleFlagArg
        name: FLOAT
      optional: true
    - !Flag
      description: rewrite index files if they already exist
      synonyms:
      - -F
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: mask repeats/low complexity regions (using DustMasker)
      synonyms:
      - -M
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "do not add prefixes to node names when multiple trees\nare used"
      synonyms:
      - -P
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: skip k-LCP construction (then restarted search only)
      synonyms:
      - -K
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: keep temporary files from k-mer propagation
      synonyms:
      - -T
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "autocomplete tree (names of internal nodes and FASTA\npaths)"
      synonyms:
      - -A
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '[STR [STR ...]]  advanced configuration (a JSON dictionary)'
      synonyms:
      - -c
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: prophyle index [-h] [-g DIR] [-j INT] [-k INT] [-l STR] [-s\
      \ FLOAT] [-F]\n                      [-M] [-P] [-K] [-T] [-A] [-c [STR [STR\
      \ ...]]]\n                      <tree.nw> [<tree.nw> ...] <index.dir>\n\npositional\
      \ arguments:\n  <tree.nw>           phylogenetic tree (in Newick/NHX)\n  <index.dir>\
      \         index directory (will be created)\n\noptional arguments:\n  -h, --help\
      \          show this help message and exit\n  -g DIR              directory\
      \ with the library sequences [dir. of the first\n                      tree]\n\
      \  -j INT              number of threads [auto (8)]\n  -k INT              k-mer\
      \ length [31]\n  -l STR              log file [<index.dir>/log.txt]\n  -s FLOAT\
      \            rate of sampling of the tree [no sampling]\n  -F              \
      \    rewrite index files if they already exist\n  -M                  mask repeats/low\
      \ complexity regions (using DustMasker)\n  -P                  do not add prefixes\
      \ to node names when multiple trees\n                      are used\n  -K  \
      \                skip k-LCP construction (then restarted search only)\n  -T\
      \                  keep temporary files from k-mer propagation\n  -A       \
      \           autocomplete tree (names of internal nodes and FASTA\n         \
      \             paths)\n  -c [STR [STR ...]]  advanced configuration (a JSON dictionary)\n"
    generated_using: *id002
  - *id003
  - !Command
    command:
    - prophyle
    - classify
    positional: []
    named:
    - !Flag
      description: k-mer length [detect automatically from the index]
      synonyms:
      - -k
      args: !SimpleFlagArg
        name: INT
      optional: true
    - !Flag
      description: "measure: h1=hit count, c1=coverage, h2=norm.hit count,\nc2=norm.coverage\
        \ [h1]"
      synonyms:
      - -m
      args: !ChoiceFlagArg
        choices: !!set
          ? h1
          ? c1
          ? h2
          ? c2
      optional: true
    - !Flag
      description: output format [sam]
      synonyms:
      - -f
      args: !ChoiceFlagArg
        choices: !!set
          ? sam
          ? kraken
      optional: true
    - !Flag
      description: log file
      synonyms:
      - -l
      args: !SimpleFlagArg
        name: STR
      optional: true
    - !Flag
      description: incorporate sequences and qualities into SAM records
      synonyms:
      - -P
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: annotate assignments (using tax. information from NHX)
      synonyms:
      - -A
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: replace read assignments by their LCA
      synonyms:
      - -L
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: replace k-mer matches by their LCA
      synonyms:
      - -X
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: mimic Kraken (equivalent to "-m h1 -f kraken -L -X")
      synonyms:
      - -M
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: use C++ impl. of the assignment algorithm (experimental)
      synonyms:
      - -C
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: force restarted search mode
      synonyms:
      - -K
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '[STR [STR ...]]  advanced configuration (a JSON dictionary)'
      synonyms:
      - -c
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: prophyle classify [-h] [-k INT] [-m {h1,c1,h2,c2}] [-f {kraken,sam}]\n\
      \                         [-l STR] [-P] [-A] [-L] [-X] [-M] [-C] [-K]\n    \
      \                     [-c [STR [STR ...]]]\n                         <index.dir>\
      \ <reads1.fq> [<reads2.fq>]\n\npositional arguments:\n  <index.dir>        \
      \ index directory\n  <reads1.fq>         first file with reads in FASTA/FASTQ\
      \ (- for standard\n                      input)\n  <reads2.fq>         second\
      \ file with reads in FASTA/FASTQ\n\noptional arguments:\n  -h, --help      \
      \    show this help message and exit\n  -k INT              k-mer length [detect\
      \ automatically from the index]\n  -m {h1,c1,h2,c2}    measure: h1=hit count,\
      \ c1=coverage, h2=norm.hit count,\n                      c2=norm.coverage [h1]\n\
      \  -f {kraken,sam}     output format [sam]\n  -l STR              log file\n\
      \  -P                  incorporate sequences and qualities into SAM records\n\
      \  -A                  annotate assignments (using tax. information from NHX)\n\
      \  -L                  replace read assignments by their LCA\n  -X         \
      \         replace k-mer matches by their LCA\n  -M                  mimic Kraken\
      \ (equivalent to \"-m h1 -f kraken -L -X\")\n  -C                  use C++ impl.\
      \ of the assignment algorithm (experimental)\n  -K                  force restarted\
      \ search mode\n  -c [STR [STR ...]]  advanced configuration (a JSON dictionary)\n"
    generated_using: *id002
  usage: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag: !Flag
    description: show program's version number and exit
    synonyms:
    - -v
    - --version
    args: !EmptyFlagArg {}
    optional: true
  help_text: "usage: prophyle [-h] [-v]  ...\n\nProgram: prophyle (phylogeny-based\
    \ metagenomic classification)\nVersion: 0.3.1.0\nAuthors: Karel Brinda, Kamil\
    \ Salikhov, Simone Pignotti, Gregory Kucherov\nContact: kbrinda@hsph.harvard.edu\n\
    \nUsage:   prophyle <command> [options]\n\noptional arguments:\n  -h, --help \
    \    show this help message and exit\n  -v, --version  show program's version\
    \ number and exit\n\nsubcommands:\n  \n    download     download a genomic database\n\
    \    index        build index\n    classify     classify reads\n    analyze  \
    \    analyze results (experimental)\n    compress     compress a ProPhyle index\n\
    \    decompress   decompress a compressed ProPhyle index\n    compile      compile\
    \ auxiliary ProPhyle programs\n"
  generated_using: *id002
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: prophyle download [-h] [-d DIR] [-l STR] [-F] [-c [STR [STR ...]]]\n\
  \                         <library> [<library> ...]\n\npositional arguments:\n \
  \ <library>           genomic library ['bacteria', 'viruses', 'plasmids',\n    \
  \                  'hmp', 'all']\n\noptional arguments:\n  -h, --help          show\
  \ this help message and exit\n  -d DIR              directory for the tree and the\
  \ sequences [~/prophyle]\n  -l STR              log file\n  -F                 \
  \ rewrite library files if they already exist\n  -c [STR [STR ...]]  advanced configuration\
  \ (a JSON dictionary)\n"
generated_using: *id002
