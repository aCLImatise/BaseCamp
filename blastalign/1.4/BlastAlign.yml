!Command
positional: []
named:
- !Flag
  description: <maximum percentage of gaps allowed in any one sequence in the final
    alignment> Optional but we find 0.5 the most useful; default = 95, i.e. only removing
    sequences with extremely short matches
  synonyms:
  - -m
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: <name of reference sequence> Optional; default is to search for best
    candidate (if entered, the sequence will be extracted, written to a separate file,
    and blasted against the original input file)
  synonyms:
  - -r
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: <names of comma-separated sequences to be excluded from this analysis>
    Optional
  synonyms:
  - -x
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: <T/F> Retain original names in output files T(rue)/F(alse). Optional
    (default = T;) option F is to output the 15 character name abbreviations (stripped
    of potentially problematic characters) that is used in the program
  synonyms:
  - -n
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: <Number of sequences to be used in initial search for reference sequence>
    Optional; default is to find the reference sequence by blasting all sequences
    against all sequences, only randomly subsampling when it thinks the blast output
    file might be too large (-s over-rides this)
  synonyms:
  - -s
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ''
  synonyms:
  - -i
  args: !SimpleFlagArg
    name: name of input fasta file
  optional: true
command:
- BlastAlign
parent:
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "\n************************  BlastAlign  ************************\n\nThis\
  \ program takes nucleotide sequences in fasta format and returns a multiple alignment\
  \ (in Nexus & Phylip formats) using BLASTN\n\n\nUSAGE: MUST HAVE\tBlastAlign -i\
  \ <name of input fasta file>\n\nOTHER OPTIONAL PARAMETERS ARE AS FOLLOWS\n\t-m\t\
  <maximum percentage of gaps allowed in any one sequence in the final alignment>\
  \ Optional but we find 0.5 the most useful; default = 95, i.e. only removing sequences\
  \ with extremely short matches\n\t-r\t<name of reference sequence> Optional; default\
  \ is to search for best candidate (if entered, the sequence will be extracted, written\
  \ to a separate file, and blasted against the original input file)\n\t-x\t<names\
  \ of comma-separated sequences to be excluded from this analysis> Optional\n\t-n\t\
  <T/F> Retain original names in output files T(rue)/F(alse). Optional (default =\
  \ T;) option F is to output the 15 character name abbreviations (stripped of potentially\
  \ problematic characters) that is used in the program\n\t-s\t<Number of sequences\
  \ to be used in initial search for reference sequence> Optional; default is to find\
  \ the reference sequence by blasting all sequences against all sequences, only randomly\
  \ subsampling when it thinks the blast output file might be too large (-s over-rides\
  \ this)\n"
generated_using:
- --help
