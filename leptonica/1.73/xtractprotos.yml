!Command
positional:
- !Positional
  description: ''
  position: 0
  name: cpp
  optional: false
- !Positional
  description: ''
  position: 1
  name: file...
  optional: false
named:
- !Flag
  description: Preprocess only; do not compile, assemble or link.
  synonyms:
  - -E
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Compile only; do not assemble or link.
  synonyms:
  - -S
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Compile and assemble, but do not link.
  synonyms:
  - -c
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Place the output into <file>.
  synonyms:
  - -o
  args: !SimpleFlagArg
    name: file
  optional: true
- !Flag
  description: Create a dynamically linked position independent executable.
  synonyms:
  - -pie
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Create a shared library.
  synonyms:
  - -shared
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Specify the language of the following input files. Permissible languages\
    \ include: c c++ assembler none 'none' means revert to the default behavior of\
    \ guessing the language based on the file's extension."
  synonyms:
  - -x
  args: !SimpleFlagArg
    name: language
  optional: true
command:
- xtractprotos
parent:
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "Usage: cpp [options] file...\nOptions:\n  -pass-exit-codes         Exit\
  \ with highest error code from a phase.\n  --help                   Display this\
  \ information.\n  --target-help            Display target specific command line\
  \ options.\n  --help={common|optimizers|params|target|warnings|[^]{joined|separate|undocumented}}[,...].\n\
  \                           Display specific types of command line options.\n  (Use\
  \ '-v --help' to display command line options of sub-processes).\n  --version  \
  \              Display compiler version information.\n  -dumpspecs             \
  \  Display all of the built in spec strings.\n  -dumpversion             Display\
  \ the version of the compiler.\n  -dumpmachine             Display the compiler's\
  \ target processor.\n  -print-search-dirs       Display the directories in the compiler's\
  \ search path.\n  -print-libgcc-file-name  Display the name of the compiler's companion\
  \ library.\n  -print-file-name=<lib>   Display the full path to library <lib>.\n\
  \  -print-prog-name=<prog>  Display the full path to compiler component <prog>.\n\
  \  -print-multiarch         Display the target's normalized GNU triplet, used as\n\
  \                           a component in the library path.\n  -print-multi-directory\
  \   Display the root directory for versions of libgcc.\n  -print-multi-lib     \
  \    Display the mapping between command line options and\n                    \
  \       multiple library search directories.\n  -print-multi-os-directory Display\
  \ the relative path to OS libraries.\n  -print-sysroot           Display the target\
  \ libraries directory.\n  -print-sysroot-headers-suffix Display the sysroot suffix\
  \ used to find headers.\n  -Wa,<options>            Pass comma-separated <options>\
  \ on to the assembler.\n  -Wp,<options>            Pass comma-separated <options>\
  \ on to the preprocessor.\n  -Wl,<options>            Pass comma-separated <options>\
  \ on to the linker.\n  -Xassembler <arg>        Pass <arg> on to the assembler.\n\
  \  -Xpreprocessor <arg>     Pass <arg> on to the preprocessor.\n  -Xlinker <arg>\
  \           Pass <arg> on to the linker.\n  -save-temps              Do not delete\
  \ intermediate files.\n  -save-temps=<arg>        Do not delete intermediate files.\n\
  \  -no-canonical-prefixes   Do not canonicalize paths when building relative\n \
  \                          prefixes to other gcc components.\n  -pipe          \
  \          Use pipes rather than intermediate files.\n  -time                  \
  \  Time the execution of each subprocess.\n  -specs=<file>            Override built-in\
  \ specs with the contents of <file>.\n  -std=<standard>          Assume that the\
  \ input sources are for <standard>.\n  --sysroot=<directory>    Use <directory>\
  \ as the root directory for headers\n                           and libraries.\n\
  \  -B <directory>           Add <directory> to the compiler's search paths.\n  -v\
  \                       Display the programs invoked by the compiler.\n  -###  \
  \                   Like -v but options quoted and commands not executed.\n  -E\
  \                       Preprocess only; do not compile, assemble or link.\n  -S\
  \                       Compile only; do not assemble or link.\n  -c           \
  \            Compile and assemble, but do not link.\n  -o <file>               \
  \ Place the output into <file>.\n  -pie                     Create a dynamically\
  \ linked position independent\n                           executable.\n  -shared\
  \                  Create a shared library.\n  -x <language>            Specify\
  \ the language of the following input files.\n                           Permissible\
  \ languages include: c c++ assembler none\n                           'none' means\
  \ revert to the default behavior of\n                           guessing the language\
  \ based on the file's extension.\n\nOptions starting with -g, -f, -m, -O, -W, or\
  \ --param are automatically\n passed on to the various sub-processes invoked by\
  \ cpp.  In order to pass\n other options on to these processes the -W<letter> options\
  \ must be used.\n\nFor bug reporting instructions, please see:\n<file:///usr/share/doc/gcc-9/README.Bugs>.\n"
generated_using:
- --help
