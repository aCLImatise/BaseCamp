!Command
positional:
- !Positional
  description: ''
  position: 0
  name: lastdb-name
  optional: false
- !Positional
  description: ''
  position: 1
  name: fasta-sequence-file
  optional: false
named: []
command:
- lastal8
parent:
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "Usage: lastal8 [options] lastdb-name fasta-sequence-file(s)\nFind and\
  \ align similar sequences.\n\nCosmetic options:\n-h, --help: show all options and\
  \ their default settings, and exit\n-V, --version: show version information, and\
  \ exit\n-v: be verbose: write messages about what lastal is doing\n-f: output format:\
  \ TAB, MAF, BlastTab, BlastTab+ (default=MAF)\n\nE-value options (default settings):\n\
  -D: query letters per random alignment (1e+06)\n-E: maximum expected alignments\
  \ per square giga (1e+18/D/refSize/numOfStrands)\n\nScore options (default settings):\n\
  -r: match score   (2 if -M, else  6 if 0<Q<5, else 1 if DNA)\n-q: mismatch cost\
  \ (3 if -M, else 18 if 0<Q<5, else 1 if DNA)\n-p: match/mismatch score matrix (protein-protein:\
  \ BL62, DNA-protein: BL80)\n-X: N/X is ambiguous in: 0=neither sequence, 1=reference,\
  \ 2=query, 3=both (0)\n-a: gap existence cost (DNA: 7, protein: 11, 0<Q<5: 21)\n\
  -b: gap extension cost (DNA: 1, protein:  2, 0<Q<5:  9)\n-A: insertion existence\
  \ cost (a)\n-B: insertion extension cost (b)\n-c: unaligned residue pair cost (off)\n\
  -F: frameshift cost (off)\n-x: maximum score drop for preliminary gapped alignments\
  \ (z)\n-y: maximum score drop for gapless alignments (min[t*10, x])\n-z: maximum\
  \ score drop for final gapped alignments (e-1)\n-d: minimum score for gapless alignments\
  \ (min[e, 2500/n query letters per hit])\n-e: minimum score for gapped alignments\n\
  \nInitial-match options (default settings):\n-m: maximum initial matches per query\
  \ position (10)\n-l: minimum length for initial matches (1)\n-L: maximum length\
  \ for initial matches (infinity)\n-k: use initial matches starting at every k-th\
  \ position in each query (1)\n-W: use \"minimum\" positions in sliding windows of\
  \ W consecutive positions\n\nMiscellaneous options (default settings):\n-s: strand:\
  \ 0=reverse, 1=forward, 2=both (2 for DNA, 1 for protein)\n-S: score matrix applies\
  \ to forward strand of: 0=reference, 1=query (0)\n-K: omit alignments whose query\
  \ range lies in >= K others with > score (off)\n-C: omit gapless alignments in >=\
  \ C others with > score-per-length (off)\n-P: number of parallel threads (1)\n-i:\
  \ query batch size (8 KiB, unless there is > 1 thread or lastdb volume)\n-M: find\
  \ minimum-difference alignments (faster but cruder)\n-T: type of alignment: 0=local,\
  \ 1=overlap (0)\n-n: maximum gapless alignments per query position (infinity if\
  \ m=0, else m)\n-N: stop after the first N alignments per query strand\n-R: repeat-marking\
  \ options (the same as was used for lastdb)\n-u: mask lowercase during extensions:\
  \ 0=never, 1=gapless,\n    2=gapless+postmask, 3=always (2 if lastdb -c and Q<5,\
  \ else 0)\n-w: suppress repeats inside exact matches, offset by <= this distance\
  \ (1000)\n-G: genetic code (1)\n-t: 'temperature' for calculating probabilities\
  \ (1/lambda)\n-g: 'gamma' parameter for gamma-centroid and LAMA (1)\n-j: output\
  \ type: 0=match counts, 1=gapless, 2=redundant gapped, 3=gapped,\n             \
  \    4=column ambiguity estimates, 5=gamma-centroid, 6=LAMA,\n                 7=expected\
  \ counts (3)\n-Q: input format: 0=fasta or fastq-ignore, 1=fastq-sanger, 2=fastq-solexa,\n\
  \                  3=fastq-illumina, 4=prb, 5=PSSM (fasta)\n\nReport bugs to: last-align\
  \ (ATmark) googlegroups (dot) com\nLAST home page: http://last.cbrc.jp/\n"
generated_using:
- --help
