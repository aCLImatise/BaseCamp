&id003 !Command
command:
- bioconda-utils
- update-pinning
positional:
- !Positional
  description: "Path to folder containing recipes (default: recipes/)\n(default: -)"
  position: 0
  name: recipe_folder
  optional: false
- !Positional
  description: "Path to Bioconda config (default: config.yml)\n(default: -)"
  position: 1
  name: config
  optional: false
named:
- !Flag
  description: "Glob for package[s] to update, as needed due to a\nchange in pinnings\
    \ (default: '*')"
  synonyms:
  - --packages
  args: !RepeatFlagArg
    name: PACKAGES
  optional: true
- !Flag
  description: "[SKIP_ADDITIONAL_CHANNELS [SKIP_ADDITIONAL_CHANNELS ...]]\nSkip updating/bumping\
    \ packges that are already built\nwith compatible pinnings in one of the given\
    \ channels\nin addition to those listed in 'config'. (default: -)"
  synonyms:
  - --skip-additional-channels
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Bump package build numbers even if the only applicable\npinning change\
    \ is the python version. This is\ngenerally required unless you plan on building\n\
    everything. (default: False)"
  synonyms:
  - --bump-only-python
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "[SKIP_VARIANTS [SKIP_VARIANTS ...]]\nSkip packages that use one of\
    \ the given variant keys.\n(default: -)"
  synonyms:
  - --skip-variants
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "To speed up debugging, use repodata cached locally in\nthe provided\
    \ filename. If the file does not exist, it\nwill be created the first time. (default:\
    \ -)"
  synonyms:
  - --cache
  args: !SimpleFlagArg
    name: CACHE
  optional: true
- !Flag
  description: 'Drop into debugger on exception (default: False)'
  synonyms:
  - -P
  - --pdb
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Limit maximum number of processes used. (default: 16)'
  synonyms:
  - -t
  - --threads
  args: !SimpleFlagArg
    name: THREADS
  optional: true
- !Flag
  description: "Set logging level (debug, info, warning, error,\ncritical) (default:\
    \ 'info')"
  synonyms:
  - --loglevel
  args: !SimpleFlagArg
    name: LOGLEVEL
  optional: true
- !Flag
  description: 'Write log to file (default: -)'
  synonyms:
  - --logfile
  args: !SimpleFlagArg
    name: LOGFILE
  optional: true
- !Flag
  description: "Log level for log file (default: 'debug')"
  synonyms:
  - --logfile-level
  args: !SimpleFlagArg
    name: LOGFILE_LEVEL
  optional: true
- !Flag
  description: "Limit lines emitted for commands executed (default: -)\n"
  synonyms:
  - --log-command-max-lines
  args: !SimpleFlagArg
    name: LOG_COMMAND_MAX_LINES
  optional: true
parent: &id001 !Command
  command:
  - bioconda-utils
  positional: []
  named: []
  parent:
  subcommands:
  - !Command
    command:
    - bioconda-utils
    - clean-cran-skeleton
    positional: []
    named:
    - !Flag
      description: "Use this when submitting an R package to Bioconda.\nAfter a CRAN\
        \ skeleton is created, any Windows-related\nlines will be removed and the\
        \ bld.bat file will be\nremoved. (default: False)"
      synonyms:
      - --no-windows
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Set logging level (debug, info, warning, error,\ncritical) (default:\
        \ 'info')"
      synonyms:
      - --loglevel
      args: !SimpleFlagArg
        name: LOGLEVEL
      optional: true
    - !Flag
      description: 'Write log to file (default: -)'
      synonyms:
      - --logfile
      args: !SimpleFlagArg
        name: LOGFILE
      optional: true
    - !Flag
      description: "Log level for log file (default: 'debug')"
      synonyms:
      - --logfile-level
      args: !SimpleFlagArg
        name: LOGFILE_LEVEL
      optional: true
    - !Flag
      description: "Limit lines emitted for commands executed (default: -)\n"
      synonyms:
      - --log-command-max-lines
      args: !SimpleFlagArg
        name: LOG_COMMAND_MAX_LINES
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: bioconda-utils clean-cran-skeleton [-h] [--no-windows]\n  \
      \                                        [--loglevel LOGLEVEL]\n           \
      \                               [--logfile LOGFILE]\n                      \
      \                    [--logfile-level LOGFILE_LEVEL]\n                     \
      \                     [--log-command-max-lines LOG_COMMAND_MAX_LINES]\n    \
      \                                      recipe\n\n    Cleans skeletons created\
      \ by ``conda skeleton cran``.\n\n    Before submitting to conda-forge or Bioconda,\
      \ recipes generated with ``conda\n    skeleton cran`` need to be cleaned up:\
      \ comments removed, licenses fixed, and\n    other linting.\n\n    Use --no-windows\
      \ for a Bioconda submission.\n    \n\npositional arguments:\n  recipe      \
      \          Path to recipe to be cleaned\n\noptional arguments:\n  -h, --help\
      \            show this help message and exit\n  --no-windows          Use this\
      \ when submitting an R package to Bioconda.\n                        After a\
      \ CRAN skeleton is created, any Windows-related\n                        lines\
      \ will be removed and the bld.bat file will be\n                        removed.\
      \ (default: False)\n  --loglevel LOGLEVEL   Set logging level (debug, info,\
      \ warning, error,\n                        critical) (default: 'info')\n  --logfile\
      \ LOGFILE     Write log to file (default: -)\n  --logfile-level LOGFILE_LEVEL\n\
      \                        Log level for log file (default: 'debug')\n  --log-command-max-lines\
      \ LOG_COMMAND_MAX_LINES\n                        Limit lines emitted for commands\
      \ executed (default: -)\n"
    generated_using: &id002
    - --help
  - !Command
    command:
    - bioconda-utils
    - visualization
    positional:
    - !Positional
      description: ''
      position: 0
      name: bioconda-utils
      optional: false
    named: []
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: ''
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: bioconda-utils [-h]\n                      {build,dag,dependent,lint,duplicates,update-pinning,bioconductor-skeleton,clean-cran-skeleton,autobump,bot}\n\
      \                      ...\nbioconda-utils: error: invalid choice: 'visualization'\
      \ (choose from 'build', 'dag', 'dependent', 'lint', 'duplicates', 'update-pinning',\
      \ 'bioconductor-skeleton', 'clean-cran-skeleton', 'autobump', 'bot')\n"
    generated_using: *id002
  - *id003
  - !Command
    command:
    - bioconda-utils
    - autobump
    positional:
    - !Positional
      description: "Path to folder containing recipes (default: recipes/)\n(default:\
        \ -)"
      position: 0
      name: recipe_folder
      optional: false
    - !Positional
      description: "Path to Bioconda config (default: config.yml)\n(default: -)"
      position: 1
      name: config
      optional: false
    named:
    - !Flag
      description: "Glob(s) for package[s] to scan. Can be specified more\nthan once\
        \ (default: '*')"
      synonyms:
      - --packages
      args: !RepeatFlagArg
        name: PACKAGES
      optional: true
    - !Flag
      description: "Globs for package[s] to exclude from scan. Can be\nspecified more\
        \ than once (default: -)"
      synonyms:
      - --exclude
      args: !RepeatFlagArg
        name: EXCLUDE
      optional: true
    - !Flag
      description: "To speed up debugging, use repodata cached locally in\nthe provided\
        \ filename. If the file does not exist, it\nwill be created the first time.\
        \ Caution: The cache\nwill not be updated if exclude-channels is changed\n\
        (default: -)"
      synonyms:
      - --cache
      args: !SimpleFlagArg
        name: CACHE
      optional: true
    - !Flag
      description: "Write urls with permanent failure to this file\n(default: -)"
      synonyms:
      - --failed-urls
      args: !SimpleFlagArg
        name: FAILED_URLS
      optional: true
    - !Flag
      description: 'Write unrecognized urls to this file (default: -)'
      synonyms:
      - --unparsed-urls
      args: !SimpleFlagArg
        name: UNPARSED_URLS
      optional: true
    - !Flag
      description: 'Write status for each recipe to this file (default: -)'
      synonyms:
      - --recipe-status
      args: !SimpleFlagArg
        name: RECIPE_STATUS
      optional: true
    - !Flag
      description: "By default, only subrecipes explicitly enabled for\nwatch in meta.yaml\
        \ are considered. Set to 'always' to\nexclude all subrecipes. Set to 'never'\
        \ to include all\nsubrecipes (default: -)"
      synonyms:
      - --exclude-subrecipes
      args: !SimpleFlagArg
        name: EXCLUDE_SUBRECIPES
      optional: true
    - !Flag
      description: "Exclude recipes building packages present in other\nchannels.\
        \ Set to 'none' to disable check. (default:\n'conda-forge')"
      synonyms:
      - --exclude-channels
      args: !RepeatFlagArg
        name: EXCLUDE_CHANNELS
      optional: true
    - !Flag
      description: 'Do not exclude recipes from blacklist (default: False)'
      synonyms:
      - --ignore-blacklists
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Try to fetch python requirements. Please note that\nthis requires\
        \ downloading packages and executing\nsetup.py, so presents a potential security\
        \ problem.\n(default: False)"
      synonyms:
      - --fetch-requirements
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Check if recipe has active branch (default: False)'
      synonyms:
      - --check-branch
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Create branch for each update (default: False)'
      synonyms:
      - --create-branch
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Create PR for each update. Implies create-branch.\n(default: False)"
      synonyms:
      - --create-pr
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Check only recipes with active update (default: False)'
      synonyms:
      - --only-active
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Do not shuffle recipe order (default: False)'
      synonyms:
      - --no-shuffle
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Exit after ARG updates (default: 0)'
      synonyms:
      - --max-updates
      args: !SimpleFlagArg
        name: MAX_UPDATES
      optional: true
    - !Flag
      description: "Don't update remote git or github\" (default: False)"
      synonyms:
      - --dry-run
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Don't check for pinning updates (default: False)"
      synonyms:
      - --no-check-pinnings
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Don't process recipes in graph order or add dependent\nrecipes\
        \ to checks. Implies --no-skip-pending-deps.\n(default: False)"
      synonyms:
      - --no-follow-graph
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Don't check for version updates to recipes (default:\nFalse)"
      synonyms:
      - --no-check-version-update
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Don't check for recipes having a dependency with a\npending update.\
        \ Update all recipes, including those\nhaving deps in need or rebuild. (default:\
        \ False)"
      synonyms:
      - --no-check-pending-deps
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Bump package build numbers even if the only applicable\npinning\
        \ change is the python version. This is\ngenerally required unless you plan\
        \ on building\neverything. (default: False)"
      synonyms:
      - --bump-only-python
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: '[SIGN]         Enable signing. Optionally takes keyid. (default:
        0)'
      synonyms:
      - --sign
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "COMMIT_AS\nSet user and email to use for committing. Takes\nexactly\
        \ two arguments. (default: -)"
      synonyms:
      - --commit-as
      args: !SimpleFlagArg
        name: COMMIT_AS
      optional: true
    - !Flag
      description: 'Limit maximum number of processes used. (default: 16)'
      synonyms:
      - -t
      - --threads
      args: !SimpleFlagArg
        name: THREADS
      optional: true
    - !Flag
      description: 'Drop into debugger on exception (default: False)'
      synonyms:
      - -P
      - --pdb
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Set logging level (debug, info, warning, error,\ncritical) (default:\
        \ 'info')"
      synonyms:
      - --loglevel
      args: !SimpleFlagArg
        name: LOGLEVEL
      optional: true
    - !Flag
      description: 'Write log to file (default: -)'
      synonyms:
      - --logfile
      args: !SimpleFlagArg
        name: LOGFILE
      optional: true
    - !Flag
      description: "Log level for log file (default: 'debug')"
      synonyms:
      - --logfile-level
      args: !SimpleFlagArg
        name: LOGFILE_LEVEL
      optional: true
    - !Flag
      description: "Limit lines emitted for commands executed (default: -)\n"
      synonyms:
      - --log-command-max-lines
      args: !SimpleFlagArg
        name: LOG_COMMAND_MAX_LINES
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: bioconda-utils autobump [-h] [--packages PACKAGES [PACKAGES\
      \ ...]]\n                               [--exclude EXCLUDE [EXCLUDE ...]]\n\
      \                               [--cache CACHE] [--failed-urls FAILED_URLS]\n\
      \                               [--unparsed-urls UNPARSED_URLS]\n          \
      \                     [--recipe-status RECIPE_STATUS]\n                    \
      \           [--exclude-subrecipes EXCLUDE_SUBRECIPES]\n                    \
      \           [--exclude-channels EXCLUDE_CHANNELS [EXCLUDE_CHANNELS ...]]\n \
      \                              [--ignore-blacklists] [--fetch-requirements]\n\
      \                               [--check-branch] [--create-branch]\n       \
      \                        [--create-pr] [--only-active] [--no-shuffle]\n    \
      \                           [--max-updates MAX_UPDATES] [--dry-run]\n      \
      \                         [--no-check-pinnings] [--no-follow-graph]\n      \
      \                         [--no-check-version-update]\n                    \
      \           [--no-check-pending-deps] [--bump-only-python]\n               \
      \                [--sign [SIGN]]\n                               [--commit-as\
      \ COMMIT_AS COMMIT_AS] [-t THREADS]\n                               [-P] [--loglevel\
      \ LOGLEVEL] [--logfile LOGFILE]\n                               [--logfile-level\
      \ LOGFILE_LEVEL]\n                               [--log-command-max-lines LOG_COMMAND_MAX_LINES]\n\
      \                               [recipe_folder] [config]\n\n    Updates recipes\
      \ in recipe_folder\n    \n\npositional arguments:\n  recipe_folder         Path\
      \ to folder containing recipes (default: recipes/)\n                       \
      \ (default: -)\n  config                Path to Bioconda config (default: config.yml)\n\
      \                        (default: -)\n\noptional arguments:\n  -h, --help \
      \           show this help message and exit\n  --packages PACKAGES [PACKAGES\
      \ ...]\n                        Glob(s) for package[s] to scan. Can be specified\
      \ more\n                        than once (default: '*')\n  --exclude EXCLUDE\
      \ [EXCLUDE ...]\n                        Globs for package[s] to exclude from\
      \ scan. Can be\n                        specified more than once (default: -)\n\
      \  --cache CACHE         To speed up debugging, use repodata cached locally\
      \ in\n                        the provided filename. If the file does not exist,\
      \ it\n                        will be created the first time. Caution: The cache\n\
      \                        will not be updated if exclude-channels is changed\n\
      \                        (default: -)\n  --failed-urls FAILED_URLS\n       \
      \                 Write urls with permanent failure to this file\n         \
      \               (default: -)\n  --unparsed-urls UNPARSED_URLS\n            \
      \            Write unrecognized urls to this file (default: -)\n  --recipe-status\
      \ RECIPE_STATUS\n                        Write status for each recipe to this\
      \ file (default: -)\n  --exclude-subrecipes EXCLUDE_SUBRECIPES\n           \
      \             By default, only subrecipes explicitly enabled for\n         \
      \               watch in meta.yaml are considered. Set to 'always' to\n    \
      \                    exclude all subrecipes. Set to 'never' to include all\n\
      \                        subrecipes (default: -)\n  --exclude-channels EXCLUDE_CHANNELS\
      \ [EXCLUDE_CHANNELS ...]\n                        Exclude recipes building packages\
      \ present in other\n                        channels. Set to 'none' to disable\
      \ check. (default:\n                        'conda-forge')\n  --ignore-blacklists\
      \   Do not exclude recipes from blacklist (default: False)\n  --fetch-requirements\
      \  Try to fetch python requirements. Please note that\n                    \
      \    this requires downloading packages and executing\n                    \
      \    setup.py, so presents a potential security problem.\n                 \
      \       (default: False)\n  --check-branch        Check if recipe has active\
      \ branch (default: False)\n  --create-branch       Create branch for each update\
      \ (default: False)\n  --create-pr           Create PR for each update. Implies\
      \ create-branch.\n                        (default: False)\n  --only-active\
      \         Check only recipes with active update (default: False)\n  --no-shuffle\
      \          Do not shuffle recipe order (default: False)\n  --max-updates MAX_UPDATES\n\
      \                        Exit after ARG updates (default: 0)\n  --dry-run  \
      \           Don't update remote git or github\" (default: False)\n  --no-check-pinnings\
      \   Don't check for pinning updates (default: False)\n  --no-follow-graph  \
      \   Don't process recipes in graph order or add dependent\n                \
      \        recipes to checks. Implies --no-skip-pending-deps.\n              \
      \          (default: False)\n  --no-check-version-update\n                 \
      \       Don't check for version updates to recipes (default:\n             \
      \           False)\n  --no-check-pending-deps\n                        Don't\
      \ check for recipes having a dependency with a\n                        pending\
      \ update. Update all recipes, including those\n                        having\
      \ deps in need or rebuild. (default: False)\n  --bump-only-python    Bump package\
      \ build numbers even if the only applicable\n                        pinning\
      \ change is the python version. This is\n                        generally required\
      \ unless you plan on building\n                        everything. (default:\
      \ False)\n  --sign [SIGN]         Enable signing. Optionally takes keyid. (default:\
      \ 0)\n  --commit-as COMMIT_AS COMMIT_AS\n                        Set user and\
      \ email to use for committing. Takes\n                        exactly two arguments.\
      \ (default: -)\n  -t THREADS, --threads THREADS\n                        Limit\
      \ maximum number of processes used. (default: 16)\n  -P, --pdb             Drop\
      \ into debugger on exception (default: False)\n  --loglevel LOGLEVEL   Set logging\
      \ level (debug, info, warning, error,\n                        critical) (default:\
      \ 'info')\n  --logfile LOGFILE     Write log to file (default: -)\n  --logfile-level\
      \ LOGFILE_LEVEL\n                        Log level for log file (default: 'debug')\n\
      \  --log-command-max-lines LOG_COMMAND_MAX_LINES\n                        Limit\
      \ lines emitted for commands executed (default: -)\n"
    generated_using: *id002
  - !Command
    command:
    - bioconda-utils
    - lint
    positional:
    - !Positional
      description: "Path to folder containing recipes (default: recipes/)\n(default:\
        \ -)"
      position: 0
      name: recipe_folder
      optional: false
    - !Positional
      description: "Path to Bioconda config (default: config.yml)\n(default: -)"
      position: 1
      name: config
      optional: false
    named:
    - !Flag
      description: "Glob for package[s] to build. Default is to build all\npackages.\
        \ Can be specified more than once (default:\n'*')"
      synonyms:
      - --packages
      args: !RepeatFlagArg
        name: PACKAGES
      optional: true
    - !Flag
      description: "To speed up debugging, use repodata cached locally in\nthe provided\
        \ filename. If the file does not exist, it\nwill be created the first time.\
        \ (default: -)"
      synonyms:
      - --cache
      args: !SimpleFlagArg
        name: CACHE
      optional: true
    - !Flag
      description: "List the linting functions to be used and then exit\n(default:\
        \ False)"
      synonyms:
      - --list-checks
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Exclude this linting function. Can be used multiple\ntimes. (default:\
        \ -)"
      synonyms:
      - --exclude
      args: !RepeatFlagArg
        name: EXCLUDE
      optional: true
    - !Flag
      description: "If set, the lint status will be sent to the current\ncommit on\
        \ github. Also needs --user and --repo to be\nset. Requires the env var GITHUB_TOKEN\
        \ to be set. Note\nthat pull requests from forks will not have access to\n\
        encrypted variables on ci, so this feature may be of\nlimited use. (default:\
        \ False)"
      synonyms:
      - --push-status
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Github user (default: 'bioconda')"
      synonyms:
      - --user
      args: !SimpleFlagArg
        name: USER
      optional: true
    - !Flag
      description: "Commit on github on which to update status (default:\n-)"
      synonyms:
      - --commit
      args: !SimpleFlagArg
        name: COMMIT
      optional: true
    - !Flag
      description: "If set, the lint status will be posted as a comment in\nthe corresponding\
        \ pull request (given by --pull-\nrequest). Also needs --user and --repo to\
        \ be set.\nRequires the env var GITHUB_TOKEN to be set. (default:\nFalse)"
      synonyms:
      - --push-comment
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Pull request id on github on which to post a comment.\n(default:\
        \ -)"
      synonyms:
      - --pull-request
      args: !SimpleFlagArg
        name: PULL_REQUEST
      optional: true
    - !Flag
      description: "Github repo (default: 'bioconda-recipes')"
      synonyms:
      - --repo
      args: !SimpleFlagArg
        name: REPO
      optional: true
    - !Flag
      description: "Git range (e.g. commits or something like \"master\nHEAD\" to\
        \ check commits in HEAD vs master, or just\n\"HEAD\" to include uncommitted\
        \ changes). All recipes\nmodified within this range will be built if not\n\
        present in the channel. (default: -)"
      synonyms:
      - --git-range
      args: !RepeatFlagArg
        name: GIT_RANGE
      optional: true
    - !Flag
      description: "Default behavior is to summarize the linting results;\nuse this\
        \ argument to get the full results as a TSV\nprinted to stdout. (default:\
        \ False)"
      synonyms:
      - --full-report
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Attempt to fix problems where found (default: False)'
      synonyms:
      - --try-fix
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Drop into debugger on exception (default: False)'
      synonyms:
      - -P
      - --pdb
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Set logging level (debug, info, warning, error,\ncritical) (default:\
        \ 'info')"
      synonyms:
      - --loglevel
      args: !SimpleFlagArg
        name: LOGLEVEL
      optional: true
    - !Flag
      description: 'Write log to file (default: -)'
      synonyms:
      - --logfile
      args: !SimpleFlagArg
        name: LOGFILE
      optional: true
    - !Flag
      description: "Log level for log file (default: 'debug')"
      synonyms:
      - --logfile-level
      args: !SimpleFlagArg
        name: LOGFILE_LEVEL
      optional: true
    - !Flag
      description: "Limit lines emitted for commands executed (default: -)\n"
      synonyms:
      - --log-command-max-lines
      args: !SimpleFlagArg
        name: LOG_COMMAND_MAX_LINES
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: bioconda-utils lint [-h] [--packages PACKAGES [PACKAGES ...]]\n\
      \                           [--cache CACHE] [--list-checks]\n              \
      \             [--exclude EXCLUDE [EXCLUDE ...]] [--push-status]\n          \
      \                 [--user USER] [--commit COMMIT] [--push-comment]\n       \
      \                    [--pull-request PULL_REQUEST] [--repo REPO]\n         \
      \                  [--git-range GIT_RANGE [GIT_RANGE ...]]\n               \
      \            [--full-report] [--try-fix] [-P]\n                           [--loglevel\
      \ LOGLEVEL] [--logfile LOGFILE]\n                           [--logfile-level\
      \ LOGFILE_LEVEL]\n                           [--log-command-max-lines LOG_COMMAND_MAX_LINES]\n\
      \                           [recipe_folder] [config]\n\n    Lint recipes\n\n\
      \    If --push-status is not set, reports a TSV of linting results to stdout.\n\
      \    Otherwise pushes a commit status to the specified commit on github.\n \
      \   \n\npositional arguments:\n  recipe_folder         Path to folder containing\
      \ recipes (default: recipes/)\n                        (default: -)\n  config\
      \                Path to Bioconda config (default: config.yml)\n           \
      \             (default: -)\n\noptional arguments:\n  -h, --help            show\
      \ this help message and exit\n  --packages PACKAGES [PACKAGES ...]\n       \
      \                 Glob for package[s] to build. Default is to build all\n  \
      \                      packages. Can be specified more than once (default:\n\
      \                        '*')\n  --cache CACHE         To speed up debugging,\
      \ use repodata cached locally in\n                        the provided filename.\
      \ If the file does not exist, it\n                        will be created the\
      \ first time. (default: -)\n  --list-checks         List the linting functions\
      \ to be used and then exit\n                        (default: False)\n  --exclude\
      \ EXCLUDE [EXCLUDE ...]\n                        Exclude this linting function.\
      \ Can be used multiple\n                        times. (default: -)\n  --push-status\
      \         If set, the lint status will be sent to the current\n            \
      \            commit on github. Also needs --user and --repo to be\n        \
      \                set. Requires the env var GITHUB_TOKEN to be set. Note\n  \
      \                      that pull requests from forks will not have access to\n\
      \                        encrypted variables on ci, so this feature may be of\n\
      \                        limited use. (default: False)\n  --user USER      \
      \     Github user (default: 'bioconda')\n  --commit COMMIT       Commit on github\
      \ on which to update status (default:\n                        -)\n  --push-comment\
      \        If set, the lint status will be posted as a comment in\n          \
      \              the corresponding pull request (given by --pull-\n          \
      \              request). Also needs --user and --repo to be set.\n         \
      \               Requires the env var GITHUB_TOKEN to be set. (default:\n   \
      \                     False)\n  --pull-request PULL_REQUEST\n              \
      \          Pull request id on github on which to post a comment.\n         \
      \               (default: -)\n  --repo REPO           Github repo (default:\
      \ 'bioconda-recipes')\n  --git-range GIT_RANGE [GIT_RANGE ...]\n           \
      \             Git range (e.g. commits or something like \"master\n         \
      \               HEAD\" to check commits in HEAD vs master, or just\n       \
      \                 \"HEAD\" to include uncommitted changes). All recipes\n  \
      \                      modified within this range will be built if not\n   \
      \                     present in the channel. (default: -)\n  --full-report\
      \         Default behavior is to summarize the linting results;\n          \
      \              use this argument to get the full results as a TSV\n        \
      \                printed to stdout. (default: False)\n  --try-fix          \
      \   Attempt to fix problems where found (default: False)\n  -P, --pdb      \
      \       Drop into debugger on exception (default: False)\n  --loglevel LOGLEVEL\
      \   Set logging level (debug, info, warning, error,\n                      \
      \  critical) (default: 'info')\n  --logfile LOGFILE     Write log to file (default:\
      \ -)\n  --logfile-level LOGFILE_LEVEL\n                        Log level for\
      \ log file (default: 'debug')\n  --log-command-max-lines LOG_COMMAND_MAX_LINES\n\
      \                        Limit lines emitted for commands executed (default:\
      \ -)\n"
    generated_using: *id002
  - !Command
    command:
    - bioconda-utils
    - build
    positional:
    - !Positional
      description: "Path to folder containing recipes (default: recipes/)\n(default:\
        \ -)"
      position: 0
      name: recipe_folder
      optional: false
    - !Positional
      description: "Path to Bioconda config (default: config.yml)\n(default: -)"
      position: 1
      name: config
      optional: false
    named:
    - !Flag
      description: "Glob for package[s] to build. Default is to build all\npackages.\
        \ Can be specified more than once (default:\n'*')"
      synonyms:
      - --packages
      args: !RepeatFlagArg
        name: PACKAGES
      optional: true
    - !Flag
      description: "Git range (e.g. commits or something like \"master\nHEAD\" to\
        \ check commits in HEAD vs master, or just\n\"HEAD\" to include uncommitted\
        \ changes). All recipes\nmodified within this range will be built if not\n\
        present in the channel. (default: -)"
      synonyms:
      - --git-range
      args: !RepeatFlagArg
        name: GIT_RANGE
      optional: true
    - !Flag
      description: 'Test packages instead of building (default: False)'
      synonyms:
      - --testonly
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Force building the recipe even if it already exists in\nthe bioconda\
        \ channel. If --force is specified, --git-\nrange is ignored and only those\
        \ packages matching\n--packages globs will be built. (default: False)"
      synonyms:
      - --force
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Build packages in docker container. (default: -)'
      synonyms:
      - --docker
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Run a mulled-build test on the built package (default:\nFalse)"
      synonyms:
      - --mulled-test
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Filename to optionally replace build script template\nused by\
        \ the Docker container. By default use\ndocker_utils.BUILD_SCRIPT_TEMPLATE.\
        \ Only used if\n--docker is True. (default: -)"
      synonyms:
      - --build_script_template
      args: !SimpleFlagArg
        name: BUILD_SCRIPT_TEMPLATE
      optional: true
    - !Flag
      description: "Specifies the directory to which container-built\npackages should\
        \ be stored on the host. Default is to\nuse the host's conda-bld dir. If --docker\
        \ is not\nspecified, then this argument is ignored. (default: -)"
      synonyms:
      - --pkg_dir
      args: !SimpleFlagArg
        name: PKG_DIR
      optional: true
    - !Flag
      description: "After building recipes, upload them to Anaconda. This\nrequires\
        \ $ANACONDA_TOKEN to be set. (default: False)"
      synonyms:
      - --anaconda-upload
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Provide a quay.io target to push mulled docker images\nto. (default:\
        \ -)"
      synonyms:
      - --mulled-upload-target
      args: !SimpleFlagArg
        name: MULLED_UPLOAD_TARGET
      optional: true
    - !Flag
      description: "Build temporary docker build image with conda/conda-\nbuild version\
        \ matching local versions (default: False)"
      synonyms:
      - --build-image
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "After building recipes, the created Docker image is\nremoved by\
        \ default to save disk space. Use this\nargument to disable this behavior.\
        \ (default: False)"
      synonyms:
      - --keep-image
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Just before each recipe, apply the linting functions\nto it. This\
        \ can be used as an alternative to linting\nall recipes before any building\
        \ takes place with the\n`bioconda-utils lint` command. (default: False)"
      synonyms:
      - --lint
      - --prelint
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Exclude this linting function. Can be used multiple\ntimes. (default:\
        \ -)"
      synonyms:
      - --lint-exclude
      args: !RepeatFlagArg
        name: LINT_EXCLUDE
      optional: true
    - !Flag
      description: "Channels to check recipes against before building. Any\nrecipe\
        \ already present in one of these channels will\nbe skipped. The default is\
        \ the first two channels\nspecified in the config file. Note that this is\n\
        ignored if you specify --git-range. (default: -)"
      synonyms:
      - --check-channels
      args: !RepeatFlagArg
        name: CHECK_CHANNELS
      optional: true
    - !Flag
      description: "The number of parallel workers that are in use. This\nis intended\
        \ for use in cases such as the \"bulk\"\nbranch, where there are multiple\
        \ parallel workers\nbuilding and uploading recipes. In essence, this\ncauses\
        \ bioconda-utils to process every Nth sub-DAG,\nwhere N is the value you give\
        \ to this option. The\ndefault is 1, which is intended for cases where there\n\
        are NOT parallel workers (i.e., the majority of\ncases). This should generally\
        \ NOT be used in\nconjunctions with the --packages or --git-range\noptions!\
        \ (default: 1)"
      synonyms:
      - --n-workers
      args: !SimpleFlagArg
        name: N_WORKERS
      optional: true
    - !Flag
      description: "This is only used if --nWorkers is >1. In that case,\nthen each\
        \ instance of bioconda-utils will process\nevery Nth sub-DAG. This option\
        \ gives the 0-based\noffset for that. For example, if \"--n-workers 5\n--worker-offset\
        \ 0\" is used, then this instance of\nbioconda-utils will process the 1st,\
        \ 6th, 11th, etc.\nsub-DAGs. Equivalently, using \"--n-workers 5 --worker-\n\
        offset 1\" will result in sub-DAGs 2, 7, 12, etc. being\nprocessed. If you\
        \ use more than one worker, then make\nsure to give each a different offset!\
        \ (default: 0)"
      synonyms:
      - --worker-offset
      args: !SimpleFlagArg
        name: WORKER_OFFSET
      optional: true
    - !Flag
      description: "Do not remove anything from environment, even after\nsuccessful\
        \ build and test. (default: False)"
      synonyms:
      - --keep-old-work
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Set logging level (debug, info, warning, error,\ncritical) (default:\
        \ 'info')"
      synonyms:
      - --loglevel
      args: !SimpleFlagArg
        name: LOGLEVEL
      optional: true
    - !Flag
      description: 'Write log to file (default: -)'
      synonyms:
      - --logfile
      args: !SimpleFlagArg
        name: LOGFILE
      optional: true
    - !Flag
      description: "Log level for log file (default: 'debug')"
      synonyms:
      - --logfile-level
      args: !SimpleFlagArg
        name: LOGFILE_LEVEL
      optional: true
    - !Flag
      description: "Limit lines emitted for commands executed (default: -)\n"
      synonyms:
      - --log-command-max-lines
      args: !SimpleFlagArg
        name: LOG_COMMAND_MAX_LINES
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: bioconda-utils build [-h] [--packages PACKAGES [PACKAGES ...]]\n\
      \                            [--git-range GIT_RANGE [GIT_RANGE ...]]\n     \
      \                       [--testonly] [--force] [--docker] [--mulled-test]\n\
      \                            [--build_script_template BUILD_SCRIPT_TEMPLATE]\n\
      \                            [--pkg_dir PKG_DIR] [--anaconda-upload]\n     \
      \                       [--mulled-upload-target MULLED_UPLOAD_TARGET]\n    \
      \                        [--build-image] [--keep-image] [--lint]\n         \
      \                   [--lint-exclude LINT_EXCLUDE [LINT_EXCLUDE ...]]\n     \
      \                       [--check-channels CHECK_CHANNELS [CHECK_CHANNELS ...]]\n\
      \                            [--n-workers N_WORKERS]\n                     \
      \       [--worker-offset WORKER_OFFSET] [--keep-old-work]\n                \
      \            [--loglevel LOGLEVEL] [--logfile LOGFILE]\n                   \
      \         [--logfile-level LOGFILE_LEVEL]\n                            [--log-command-max-lines\
      \ LOG_COMMAND_MAX_LINES]\n                            [recipe_folder] [config]\n\
      \npositional arguments:\n  recipe_folder         Path to folder containing recipes\
      \ (default: recipes/)\n                        (default: -)\n  config      \
      \          Path to Bioconda config (default: config.yml)\n                 \
      \       (default: -)\n\noptional arguments:\n  -h, --help            show this\
      \ help message and exit\n  --packages PACKAGES [PACKAGES ...]\n            \
      \            Glob for package[s] to build. Default is to build all\n       \
      \                 packages. Can be specified more than once (default:\n    \
      \                    '*')\n  --git-range GIT_RANGE [GIT_RANGE ...]\n       \
      \                 Git range (e.g. commits or something like \"master\n     \
      \                   HEAD\" to check commits in HEAD vs master, or just\n   \
      \                     \"HEAD\" to include uncommitted changes). All recipes\n\
      \                        modified within this range will be built if not\n \
      \                       present in the channel. (default: -)\n  --testonly \
      \           Test packages instead of building (default: False)\n  --force  \
      \             Force building the recipe even if it already exists in\n     \
      \                   the bioconda channel. If --force is specified, --git-\n\
      \                        range is ignored and only those packages matching\n\
      \                        --packages globs will be built. (default: False)\n\
      \  --docker              Build packages in docker container. (default: -)\n\
      \  --mulled-test         Run a mulled-build test on the built package (default:\n\
      \                        False)\n  --build_script_template BUILD_SCRIPT_TEMPLATE\n\
      \                        Filename to optionally replace build script template\n\
      \                        used by the Docker container. By default use\n    \
      \                    docker_utils.BUILD_SCRIPT_TEMPLATE. Only used if\n    \
      \                    --docker is True. (default: -)\n  --pkg_dir PKG_DIR   \
      \  Specifies the directory to which container-built\n                      \
      \  packages should be stored on the host. Default is to\n                  \
      \      use the host's conda-bld dir. If --docker is not\n                  \
      \      specified, then this argument is ignored. (default: -)\n  --anaconda-upload\
      \     After building recipes, upload them to Anaconda. This\n              \
      \          requires $ANACONDA_TOKEN to be set. (default: False)\n  --mulled-upload-target\
      \ MULLED_UPLOAD_TARGET\n                        Provide a quay.io target to\
      \ push mulled docker images\n                        to. (default: -)\n  --build-image\
      \         Build temporary docker build image with conda/conda-\n           \
      \             build version matching local versions (default: False)\n  --keep-image\
      \          After building recipes, the created Docker image is\n           \
      \             removed by default to save disk space. Use this\n            \
      \            argument to disable this behavior. (default: False)\n  --lint,\
      \ --prelint     Just before each recipe, apply the linting functions\n     \
      \                   to it. This can be used as an alternative to linting\n \
      \                       all recipes before any building takes place with the\n\
      \                        `bioconda-utils lint` command. (default: False)\n \
      \ --lint-exclude LINT_EXCLUDE [LINT_EXCLUDE ...]\n                        Exclude\
      \ this linting function. Can be used multiple\n                        times.\
      \ (default: -)\n  --check-channels CHECK_CHANNELS [CHECK_CHANNELS ...]\n   \
      \                     Channels to check recipes against before building. Any\n\
      \                        recipe already present in one of these channels will\n\
      \                        be skipped. The default is the first two channels\n\
      \                        specified in the config file. Note that this is\n \
      \                       ignored if you specify --git-range. (default: -)\n \
      \ --n-workers N_WORKERS\n                        The number of parallel workers\
      \ that are in use. This\n                        is intended for use in cases\
      \ such as the \"bulk\"\n                        branch, where there are multiple\
      \ parallel workers\n                        building and uploading recipes.\
      \ In essence, this\n                        causes bioconda-utils to process\
      \ every Nth sub-DAG,\n                        where N is the value you give\
      \ to this option. The\n                        default is 1, which is intended\
      \ for cases where there\n                        are NOT parallel workers (i.e.,\
      \ the majority of\n                        cases). This should generally NOT\
      \ be used in\n                        conjunctions with the --packages or --git-range\n\
      \                        options! (default: 1)\n  --worker-offset WORKER_OFFSET\n\
      \                        This is only used if --nWorkers is >1. In that case,\n\
      \                        then each instance of bioconda-utils will process\n\
      \                        every Nth sub-DAG. This option gives the 0-based\n\
      \                        offset for that. For example, if \"--n-workers 5\n\
      \                        --worker-offset 0\" is used, then this instance of\n\
      \                        bioconda-utils will process the 1st, 6th, 11th, etc.\n\
      \                        sub-DAGs. Equivalently, using \"--n-workers 5 --worker-\n\
      \                        offset 1\" will result in sub-DAGs 2, 7, 12, etc. being\n\
      \                        processed. If you use more than one worker, then make\n\
      \                        sure to give each a different offset! (default: 0)\n\
      \  --keep-old-work       Do not remove anything from environment, even after\n\
      \                        successful build and test. (default: False)\n  --loglevel\
      \ LOGLEVEL   Set logging level (debug, info, warning, error,\n             \
      \           critical) (default: 'info')\n  --logfile LOGFILE     Write log to\
      \ file (default: -)\n  --logfile-level LOGFILE_LEVEL\n                     \
      \   Log level for log file (default: 'debug')\n  --log-command-max-lines LOG_COMMAND_MAX_LINES\n\
      \                        Limit lines emitted for commands executed (default:\
      \ -)\n"
    generated_using: *id002
  - !Command
    command:
    - bioconda-utils
    - bot
    positional: []
    named:
    - !Flag
      description: "Log level (default: 'info')"
      synonyms:
      - --loglevel
      args: !SimpleFlagArg
        name: LOGLEVEL
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: bioconda-utils bot [-h] [--loglevel LOGLEVEL]\n\nLocally accedd\
      \ bioconda-bot command API\n\n    To run the bot locally, use:\n\n    $ gunicorn\
      \ bioconda_utils.bot:init_app_internal_celery --worker-class aiohttp.worker.GunicornWebWorker\n\
      \n    You can append --reload to have gunicorn reload if any of the python files\
      \ change.\n    \n\noptional arguments:\n  -h, --help           show this help\
      \ message and exit\n  --loglevel LOGLEVEL  Log level (default: 'info')\n"
    generated_using: *id002
  - !Command
    command:
    - bioconda-utils
    - duplicates
    positional:
    - !Positional
      description: Detect packages in bioconda that have duplicates in the other defined
      position: 0
      name: config
      optional: false
    - !Positional
      description: 'positional arguments:'
      position: 1
      name: channels.
      optional: false
    - !Positional
      description: Path to yaml file specifying the configuration
      position: 2
      name: config
      optional: false
    named:
    - !Flag
      description: 'Require version to strictly match. (default: False)'
      synonyms:
      - --strict-version
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Require version and build to strictly match. (default:\nFalse)"
      synonyms:
      - --strict-build
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Only print removal plan. (default: False)'
      synonyms:
      - --dryrun
      - -n
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Remove packages from anaconda. (default: False)'
      synonyms:
      - --remove
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: 'Print anaconda urls. (default: False)'
      synonyms:
      - --url
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Channel to check for duplicates (default: 'bioconda')"
      synonyms:
      - --channel
      args: !SimpleFlagArg
        name: CHANNEL
      optional: true
    - !Flag
      description: "Set logging level (debug, info, warning, error,\ncritical) (default:\
        \ 'info')"
      synonyms:
      - --loglevel
      args: !SimpleFlagArg
        name: LOGLEVEL
      optional: true
    - !Flag
      description: 'Write log to file (default: -)'
      synonyms:
      - --logfile
      args: !SimpleFlagArg
        name: LOGFILE
      optional: true
    - !Flag
      description: "Log level for log file (default: 'debug')"
      synonyms:
      - --logfile-level
      args: !SimpleFlagArg
        name: LOGFILE_LEVEL
      optional: true
    - !Flag
      description: "Limit lines emitted for commands executed (default: -)\n"
      synonyms:
      - --log-command-max-lines
      args: !SimpleFlagArg
        name: LOG_COMMAND_MAX_LINES
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: bioconda-utils duplicates [-h] [--strict-version] [--strict-build]\n\
      \                                 [--dryrun] [--remove] [--url]\n          \
      \                       [--channel CHANNEL] [--loglevel LOGLEVEL]\n        \
      \                         [--logfile LOGFILE]\n                            \
      \     [--logfile-level LOGFILE_LEVEL]\n                                 [--log-command-max-lines\
      \ LOG_COMMAND_MAX_LINES]\n                                 config\n\n    Detect\
      \ packages in bioconda that have duplicates in the other defined\n    channels.\n\
      \    \n\npositional arguments:\n  config                Path to yaml file specifying\
      \ the configuration\n\noptional arguments:\n  -h, --help            show this\
      \ help message and exit\n  --strict-version      Require version to strictly\
      \ match. (default: False)\n  --strict-build        Require version and build\
      \ to strictly match. (default:\n                        False)\n  --dryrun,\
      \ -n          Only print removal plan. (default: False)\n  --remove        \
      \      Remove packages from anaconda. (default: False)\n  --url            \
      \     Print anaconda urls. (default: False)\n  --channel CHANNEL     Channel\
      \ to check for duplicates (default: 'bioconda')\n  --loglevel LOGLEVEL   Set\
      \ logging level (debug, info, warning, error,\n                        critical)\
      \ (default: 'info')\n  --logfile LOGFILE     Write log to file (default: -)\n\
      \  --logfile-level LOGFILE_LEVEL\n                        Log level for log\
      \ file (default: 'debug')\n  --log-command-max-lines LOG_COMMAND_MAX_LINES\n\
      \                        Limit lines emitted for commands executed (default:\
      \ -)\n"
    generated_using: *id002
  - !Command
    command:
    - bioconda-utils
    - bioconductor-skeleton
    positional:
    - !Positional
      description: "Path to folder containing recipes (default: recipes/)\n(default:\
        \ -)"
      position: 0
      name: recipe_folder
      optional: false
    - !Positional
      description: "Path to Bioconda config (default: config.yml)\n(default: -)"
      position: 1
      name: config
      optional: false
    - !Positional
      description: "Bioconductor package name. This is case-sensitive, and\nmust match\
        \ the package name on the Bioconductor site.\nIf \"update-all-packages\" is\
        \ specified, then all\npackages in a given bioconductor release will be\n\
        created/updated (--force is then implied)."
      position: 2
      name: package
      optional: false
    named:
    - !Flag
      description: "If specified, recipe will be created in\nRECIPES/<package>/<version>\
        \ (default: False)"
      synonyms:
      - --versioned
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Overwrite the contents of an existing recipe. If
      synonyms:
      - --force
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: also used, then overwrite *all* recipes
      synonyms:
      - --recursive
      args: !SimpleFlagArg
        name: is
      optional: true
    - !Flag
      description: "Package version to use instead of the current one\n(default: -)"
      synonyms:
      - --pkg-version
      args: !SimpleFlagArg
        name: PKG_VERSION
      optional: true
    - !Flag
      description: "Version of Bioconductor to target. If not specified,\nthen automatically\
        \ finds the latest version of\nBioconductor with the specified version in\
        \ --pkg-\nversion, or if --pkg-version not specified, then finds\nthe the\
        \ latest package version in the latest\nBioconductor version (default: -)"
      synonyms:
      - --bioc-version
      args: !SimpleFlagArg
        name: BIOC_VERSION
      optional: true
    - !Flag
      description: "[SKIP_IF_IN_CHANNELS [SKIP_IF_IN_CHANNELS ...]]\nWhen --recursive\
        \ is used, it will build *all* recipes.\nUse this argument to skip recursive\
        \ building for\npackages that already exist in the packages listed\nhere.\
        \ (default: ['conda-forge', 'bioconda'])"
      synonyms:
      - --skip-if-in-channels
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Set logging level (debug, info, warning, error,\ncritical) (default:\
        \ 'debug')"
      synonyms:
      - --loglevel
      args: !SimpleFlagArg
        name: LOGLEVEL
      optional: true
    - !Flag
      description: 'Write log to file (default: -)'
      synonyms:
      - --logfile
      args: !SimpleFlagArg
        name: LOGFILE
      optional: true
    - !Flag
      description: "Log level for log file (default: 'debug')"
      synonyms:
      - --logfile-level
      args: !SimpleFlagArg
        name: LOGFILE_LEVEL
      optional: true
    - !Flag
      description: "Limit lines emitted for commands executed (default: -)\n"
      synonyms:
      - --log-command-max-lines
      args: !SimpleFlagArg
        name: LOG_COMMAND_MAX_LINES
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: bioconda-utils bioconductor-skeleton [-h] [--versioned] [--force]\n\
      \                                            [--pkg-version PKG_VERSION]\n \
      \                                           [--bioc-version BIOC_VERSION]\n\
      \                                            [--recursive]\n               \
      \                             [--skip-if-in-channels [SKIP_IF_IN_CHANNELS [SKIP_IF_IN_CHANNELS\
      \ ...]]]\n                                            [--loglevel LOGLEVEL]\n\
      \                                            [--logfile LOGFILE]\n         \
      \                                   [--logfile-level LOGFILE_LEVEL]\n      \
      \                                      [--log-command-max-lines LOG_COMMAND_MAX_LINES]\n\
      \                                            [recipe_folder] [config] package\n\
      \n    Build a Bioconductor recipe. The recipe will be created in the 'recipes'\n\
      \    directory and will be prefixed by \"bioconductor-\". If --recursive is\
      \ set,\n    then any R dependency recipes will be prefixed by \"r-\".\n\n  \
      \  These R recipes must be evaluated on a case-by-case basis to determine if\n\
      \    they are relevant to biology (in which case they should be submitted to\n\
      \    bioconda) or not (submit to conda-forge).\n\n    Biology-related:\n   \
      \     'bioconda-utils clean-cran-skeleton <recipe> --no-windows'\n        and\
      \ submit to Bioconda.\n\n    Not bio-related:\n        'bioconda-utils clean-cran-skeleton\
      \ <recipe>'\n        and submit to conda-forge.\n\n    \n\npositional arguments:\n\
      \  recipe_folder         Path to folder containing recipes (default: recipes/)\n\
      \                        (default: -)\n  config                Path to Bioconda\
      \ config (default: config.yml)\n                        (default: -)\n  package\
      \               Bioconductor package name. This is case-sensitive, and\n   \
      \                     must match the package name on the Bioconductor site.\n\
      \                        If \"update-all-packages\" is specified, then all\n\
      \                        packages in a given bioconductor release will be\n\
      \                        created/updated (--force is then implied).\n\noptional\
      \ arguments:\n  -h, --help            show this help message and exit\n  --versioned\
      \           If specified, recipe will be created in\n                      \
      \  RECIPES/<package>/<version> (default: False)\n  --force               Overwrite\
      \ the contents of an existing recipe. If\n                        --recursive\
      \ is also used, then overwrite *all* recipes\n                        created.\
      \ (default: False)\n  --pkg-version PKG_VERSION\n                        Package\
      \ version to use instead of the current one\n                        (default:\
      \ -)\n  --bioc-version BIOC_VERSION\n                        Version of Bioconductor\
      \ to target. If not specified,\n                        then automatically finds\
      \ the latest version of\n                        Bioconductor with the specified\
      \ version in --pkg-\n                        version, or if --pkg-version not\
      \ specified, then finds\n                        the the latest package version\
      \ in the latest\n                        Bioconductor version (default: -)\n\
      \  --recursive           Creates the recipes for all Bioconductor and CRAN\n\
      \                        dependencies of the specified package. (default:\n\
      \                        False)\n  --skip-if-in-channels [SKIP_IF_IN_CHANNELS\
      \ [SKIP_IF_IN_CHANNELS ...]]\n                        When --recursive is used,\
      \ it will build *all* recipes.\n                        Use this argument to\
      \ skip recursive building for\n                        packages that already\
      \ exist in the packages listed\n                        here. (default: ['conda-forge',\
      \ 'bioconda'])\n  --loglevel LOGLEVEL   Set logging level (debug, info, warning,\
      \ error,\n                        critical) (default: 'debug')\n  --logfile\
      \ LOGFILE     Write log to file (default: -)\n  --logfile-level LOGFILE_LEVEL\n\
      \                        Log level for log file (default: 'debug')\n  --log-command-max-lines\
      \ LOG_COMMAND_MAX_LINES\n                        Limit lines emitted for commands\
      \ executed (default: -)\n"
    generated_using: *id002
  usage: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: bioconda-utils [-h]\n                      {build,dag,dependent,lint,duplicates,update-pinning,bioconductor-skeleton,clean-cran-skeleton,autobump,bot}\n\
    \                      ...\n\npositional arguments:\n  {build,dag,dependent,lint,duplicates,update-pinning,bioconductor-skeleton,clean-cran-skeleton,autobump,bot}\n\
    \    build\n    dag                 Export the DAG of packages to a graph format\
    \ file for\n                        visualization\n    dependent           Print\
    \ recipes dependent on a package\n    lint                Lint recipes If --push-status\
    \ is not set, reports a\n                        TSV of linting results to stdout.\
    \ Otherwise pushes a\n                        commit status to the specified commit\
    \ on github.\n    duplicates          Detect packages in bioconda that have duplicates\
    \ in\n                        the other defined channels.\n    update-pinning\
    \      Bump a package build number and all dependencies as\n                 \
    \       required due to a change in pinnings\n    bioconductor-skeleton\n    \
    \                    Build a Bioconductor recipe. The recipe will be\n       \
    \                 created in the 'recipes' directory and will be\n           \
    \             prefixed by \"bioconductor-\". If --recursive is set,\n        \
    \                then any R dependency recipes will be prefixed by\n         \
    \               \"r-\". These R recipes must be evaluated on a case-by-\n    \
    \                    case basis to determine if they are relevant to\n       \
    \                 biology (in which case they should be submitted to\n       \
    \                 bioconda) or not (submit to conda-forge). Biology-\n       \
    \                 related: 'bioconda-utils clean-cran-skeleton <recipe>\n    \
    \                    --no-windows' and submit to Bioconda. Not bio-related:\n\
    \                        'bioconda-utils clean-cran-skeleton <recipe>' and\n \
    \                       submit to conda-forge.\n    clean-cran-skeleton\n    \
    \                    Cleans skeletons created by ``conda skeleton cran``.\n  \
    \                      Before submitting to conda-forge or Bioconda, recipes\n\
    \                        generated with ``conda skeleton cran`` need to be\n \
    \                       cleaned up: comments removed, licenses fixed, and\n  \
    \                      other linting. Use --no-windows for a Bioconda\n      \
    \                  submission.\n    autobump            Updates recipes in recipe_folder\n\
    \    bot                 Locally accedd bioconda-bot command API To run the bot\n\
    \                        locally, use: $ gunicorn\n                        bioconda_utils.bot:init_app_internal_celery\
    \ --worker-\n                        class aiohttp.worker.GunicornWebWorker You\
    \ can append\n                        --reload to have gunicorn reload if any\
    \ of the python\n                        files change.\n\noptional arguments:\n\
    \  -h, --help            show this help message and exit\n"
  generated_using: *id002
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: bioconda-utils update-pinning [-h] [--packages PACKAGES [PACKAGES\
  \ ...]]\n                                     [--skip-additional-channels [SKIP_ADDITIONAL_CHANNELS\
  \ [SKIP_ADDITIONAL_CHANNELS ...]]]\n                                     [--bump-only-python]\n\
  \                                     [--skip-variants [SKIP_VARIANTS [SKIP_VARIANTS\
  \ ...]]]\n                                     [--cache CACHE] [-P] [-t THREADS]\n\
  \                                     [--loglevel LOGLEVEL] [--logfile LOGFILE]\n\
  \                                     [--logfile-level LOGFILE_LEVEL]\n        \
  \                             [--log-command-max-lines LOG_COMMAND_MAX_LINES]\n\
  \                                     [recipe_folder] [config]\n\nBump a package\
  \ build number and all dependencies as required due\n    to a change in pinnings\n\
  \    \n\npositional arguments:\n  recipe_folder         Path to folder containing\
  \ recipes (default: recipes/)\n                        (default: -)\n  config  \
  \              Path to Bioconda config (default: config.yml)\n                 \
  \       (default: -)\n\noptional arguments:\n  -h, --help            show this help\
  \ message and exit\n  --packages PACKAGES [PACKAGES ...]\n                     \
  \   Glob for package[s] to update, as needed due to a\n                        change\
  \ in pinnings (default: '*')\n  --skip-additional-channels [SKIP_ADDITIONAL_CHANNELS\
  \ [SKIP_ADDITIONAL_CHANNELS ...]]\n                        Skip updating/bumping\
  \ packges that are already built\n                        with compatible pinnings\
  \ in one of the given channels\n                        in addition to those listed\
  \ in 'config'. (default: -)\n  --bump-only-python    Bump package build numbers\
  \ even if the only applicable\n                        pinning change is the python\
  \ version. This is\n                        generally required unless you plan on\
  \ building\n                        everything. (default: False)\n  --skip-variants\
  \ [SKIP_VARIANTS [SKIP_VARIANTS ...]]\n                        Skip packages that\
  \ use one of the given variant keys.\n                        (default: -)\n  --cache\
  \ CACHE         To speed up debugging, use repodata cached locally in\n        \
  \                the provided filename. If the file does not exist, it\n       \
  \                 will be created the first time. (default: -)\n  -P, --pdb    \
  \         Drop into debugger on exception (default: False)\n  -t THREADS, --threads\
  \ THREADS\n                        Limit maximum number of processes used. (default:\
  \ 16)\n  --loglevel LOGLEVEL   Set logging level (debug, info, warning, error,\n\
  \                        critical) (default: 'info')\n  --logfile LOGFILE     Write\
  \ log to file (default: -)\n  --logfile-level LOGFILE_LEVEL\n                  \
  \      Log level for log file (default: 'debug')\n  --log-command-max-lines LOG_COMMAND_MAX_LINES\n\
  \                        Limit lines emitted for commands executed (default: -)\n"
generated_using: *id002
