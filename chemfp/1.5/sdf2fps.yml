!Command
positional:
- !Positional
  description: input SD files (default is stdin)
  position: 0
  name: filenames
  optional: false
named:
- !Flag
  description: get the record id from TAG instead of the first line of the record
  synonyms:
  - --id-tag
  args: !SimpleFlagArg
    name: TAG
  optional: true
- !Flag
  description: get the fingerprint from tag TAG (required)
  synonyms:
  - --fp-tag
  args: !SimpleFlagArg
    name: TAG
  optional: true
- !Flag
  description: Specify if the input SD file is uncompressed or gzip compressed
  synonyms:
  - --in
  args: !SimpleFlagArg
    name: FORMAT
  optional: true
- !Flag
  description: use the first INT bits of the input. Use only when the last 1-7 bits
    of the last byte are not part of the fingerprint. Unexpected errors will occur
    if these bits are not all zero.
  synonyms:
  - --num-bits
  args: !SimpleFlagArg
    name: INT
  optional: true
- !Flag
  description: how should structure parse errors be handled? (default=strict)
  synonyms:
  - --errors
  args: !ChoiceFlagArg
    choices:
    - strict
    - report
    - ignore
  optional: true
- !Flag
  description: save the fingerprints to FILENAME (default=stdout)
  synonyms:
  - -o
  - --output
  args: !SimpleFlagArg
    name: FILENAME
  optional: true
- !Flag
  description: output structure format (default guesses from output filename, or is
    'fps')
  synonyms:
  - --out
  args: !SimpleFlagArg
    name: FORMAT
  optional: true
- !Flag
  description: use TEXT as the software description
  synonyms:
  - --software
  args: !SimpleFlagArg
    name: TEXT
  optional: true
- !Flag
  description: use TEXT as the fingerprint type description
  synonyms:
  - --type
  args: !SimpleFlagArg
    name: TEXT
  optional: true
- !Flag
  description: "Encoded with the characters '0' and '1'. Bit #0 comes first. Example:\
    \ 00100000 encodes the value 4"
  synonyms:
  - --binary
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Encoded with the characters '0' and '1'. Bit #0 comes last. Example:\
    \ 00000100 encodes the value 4"
  synonyms:
  - --binary-msb
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Hex encoded. Bit #0 is the first bit (1<<0) of the first byte. Example:
    01f2 encodes the value \x01\xf2 = 498'
  synonyms:
  - --hex
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Hex encoded. Bit #0 is the eigth bit (1<<7) of the first byte. Example:
    804f encodes the value \x01\xf2 = 498'
  synonyms:
  - --hex-lsb
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Hex encoded. Bit #0 is the first bit (1<<0) of the last byte. Example:
    f201 encodes the value \x01\xf2 = 498'
  synonyms:
  - --hex-msb
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Base-64 encoded. Bit #0 is first bit (1<<0) of first byte. Example:
    AfI= encodes value \x01\xf2 = 498'
  synonyms:
  - --base64
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: CACTVS encoding, based on base64 and includes a version and bit length
  synonyms:
  - --cactvs
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Daylight encoding, which is is base64 variant
  synonyms:
  - --daylight
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: import and use the DECODER function to decode the fingerprint
  synonyms:
  - --decoder
  args: !SimpleFlagArg
    name: DECODER
  optional: true
- !Flag
  description: decode CACTVS substructure keys used in PubChem. Same as --software=CACTVS/unknown
    --type 'CACTVS- E_SCREEN/1.0 extended=2' --fp- tag=PUBCHEM_CACTVS_SUBSKEYS --cactvs
  synonyms:
  - --pubchem
  args: !EmptyFlagArg {}
  optional: true
command:
- sdf2fps
subcommands: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: show program's version number and exit
  synonyms:
  - --version
  args: !EmptyFlagArg {}
  optional: true
