!Command
positional:
- !Positional
  description: target filename
  position: 0
  name: target_filename
  optional: false
named:
- !Flag
  description: select the k nearest neighbors (use 'all' for all neighbors)
  synonyms:
  - -k
  - --k-nearest
  args: !SimpleFlagArg
    name: K_NEAREST
  optional: true
- !Flag
  description: minimum similarity score threshold
  synonyms:
  - -t
  - --threshold
  args: !SimpleFlagArg
    name: THRESHOLD
  optional: true
- !Flag
  description: filename containing the query fingerprints
  synonyms:
  - --queries
  - -q
  args: !SimpleFlagArg
    name: QUERIES
  optional: true
- !Flag
  description: use the targets as the queries, and exclude the self- similarity term
  synonyms:
  - --NxN
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "query as a structure record (default format: 'smi')"
  synonyms:
  - --query
  args: !SimpleFlagArg
    name: QUERY
  optional: true
- !Flag
  description: query in hex
  synonyms:
  - --hex-query
  args: !SimpleFlagArg
    name: HEX_QUERY
  optional: true
- !Flag
  description: "id for the query or hex-query (default: 'Query1'"
  synonyms:
  - --query-id
  args: !SimpleFlagArg
    name: QUERY_ID
  optional: true
- !Flag
  description: input query format (default uses the file extension, else 'fps')
  synonyms:
  - --query-format
  - --in
  args: !SimpleFlagArg
    name: FORMAT
  optional: true
- !Flag
  description: input target format (default uses the file extension, else 'fps')
  synonyms:
  - --target-format
  args: !SimpleFlagArg
    name: FORMAT
  optional: true
- !Flag
  description: output filename (default is stdout)
  synonyms:
  - -o
  - --output
  args: !SimpleFlagArg
    name: FILENAME
  optional: true
- !Flag
  description: report counts
  synonyms:
  - -c
  - --count
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: batch size
  synonyms:
  - -b
  - --batch-size
  args: !SimpleFlagArg
    name: BATCH_SIZE
  optional: true
- !Flag
  description: scan the file to find matches (low memory overhead)
  synonyms:
  - --scan
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: build and search an in-memory data structure (faster for multiple queries)
  synonyms:
  - --memory
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: report load and execution times to stderr
  synonyms:
  - --times
  args: !EmptyFlagArg {}
  optional: true
command:
- simsearch
parent:
subcommands: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: show program's version number and exit
  synonyms:
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "usage: simsearch [-h] [-k K_NEAREST] [-t THRESHOLD] [--queries QUERIES]\n\
  \                 [--NxN] [--query QUERY] [--hex-query HEX_QUERY]\n            \
  \     [--query-id QUERY_ID] [--query-format FORMAT]\n                 [--target-format\
  \ FORMAT] [-o FILENAME] [-c] [-b BATCH_SIZE]\n                 [--scan] [--memory]\
  \ [--times] [--version]\n                 target_filename\n\nSearch an FPS or FPB\
  \ file for similar fingerprints\n\npositional arguments:\n  target_filename    \
  \   target filename\n\noptional arguments:\n  -h, --help            show this help\
  \ message and exit\n  -k K_NEAREST, --k-nearest K_NEAREST\n                    \
  \    select the k nearest neighbors (use 'all' for all\n                       \
  \ neighbors)\n  -t THRESHOLD, --threshold THRESHOLD\n                        minimum\
  \ similarity score threshold\n  --queries QUERIES, -q QUERIES\n                \
  \        filename containing the query fingerprints\n  --NxN                 use\
  \ the targets as the queries, and exclude the self-\n                        similarity\
  \ term\n  --query QUERY         query as a structure record (default format: 'smi')\n\
  \  --hex-query HEX_QUERY\n                        query in hex\n  --query-id QUERY_ID\
  \   id for the query or hex-query (default: 'Query1'\n  --query-format FORMAT, --in\
  \ FORMAT\n                        input query format (default uses the file extension,\n\
  \                        else 'fps')\n  --target-format FORMAT\n               \
  \         input target format (default uses the file extension,\n              \
  \          else 'fps')\n  -o FILENAME, --output FILENAME\n                     \
  \   output filename (default is stdout)\n  -c, --count           report counts\n\
  \  -b BATCH_SIZE, --batch-size BATCH_SIZE\n                        batch size\n\
  \  --scan                scan the file to find matches (low memory overhead)\n \
  \ --memory              build and search an in-memory data structure (faster\n \
  \                       for multiple queries)\n  --times               report load\
  \ and execution times to stderr\n  --version             show program's version\
  \ number and exit\n"
generated_using:
- --help
