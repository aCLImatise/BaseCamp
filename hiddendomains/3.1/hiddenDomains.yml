!Command
positional: []
named:
- !Flag
  description: ''
  synonyms:
  - -g
  args: !SimpleFlagArg
    name: ChromInfo
  optional: true
- !Flag
  description: ''
  synonyms:
  - -t
  args: !SimpleFlagArg
    name: TreatmentReads
  optional: true
- !Flag
  description: ''
  synonyms:
  - -o
  args: !SimpleFlagArg
    name: OutputPrefix
  optional: true
command:
- hiddenDomains
parent:
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "\nUsage: hiddenDomains [options] -g ChromInfo -t TreatmentReads -o OutputPrefix\n\
  \nOptions\n\n-h\n    Print this help information.\n\n-b  BIN_WIDTH\n    The width\
  \ of the bin. Default is 1000bp.\n\n-B\n    The input file(s) is(are) in BED format\
  \ (the default is BAM). NOTE: All\n    read files have to have to same format (either\
  \ BED or BAM). Use\n    binReads.pl as a stand alone program if you have a more\
  \ complicated set up.\n\n-c  ControlReads\n    A BED or BAM file that contains aligned\
  \ read reads. Use the -B option to\n    speicfy BED format. BAM format is the default.\n\
  \n-C  ControlReadsBins\n    If you have already binned your control reads, you can\
  \ pass them in\n    with this option and they will be used directly.\n\n-g  ChromInfo.txt\n\
  \    If you get an out of bounds error when uploading a bed file to the UCSC\n \
  \   genome browser, you can use this option to trim the bounds to the size of \n\
  \    the chromosomes.\n    ChromInfo.txt should be a tab delimited file with the\
  \ chromosome names\n    in the first column and their sizes in the second column.\
  \  Here is an \n    example ChromInfo.txt file for a genome with 3 chromosomes:\n\
  \n    chr1    197195432\n    chr2    181748087\n    chr3    159599783    \n\n-o\
  \  OutputPrefix\n    hiddenDomains generates four or five files with names that\
  \ start with\n    OutputPrefix. \n    \n    1) \"_domains.txt\": A text file with\
  \ all of the enriched domains and\n    posterior probabilities.\n    2) \"_vis.bed\"\
  : A BED file for visualization, which contains one line per \n    significantly\
  \ enriched bin - this allows for color coding based on the \n    posterior probability.\n\
  \    3) \"_analysis.bed\": The second BED file is for analysis, and this merges\
  \ \n    all consecutive bins with posterior probabiliites greater than \n    MIN_POSTERIOR\
  \ (as specified with the -p option) or the default value, \n    0 - which merges\
  \ all consecutive significat bins.\n    4) \"_treatment_bins.txt\": A file with\
  \ the read counts per bin.\n    5) \"_control_bins.txt\": A file with the read counts\
  \ per bin.\n\n-p  MIN_POSTERIOR\n    Toss out parts of domains that have posterior\
  \ values that are less\n    than MIN_POSTERIOR. You can set this to any value you\
  \ want, but for\n    reference, domainsToBed bins according the following scale:\n\
  \    >= 0.9\n    0.9 > posterior >= 0.8\n    0.8 > posterior >= 0.7\n    0.7 > posterior\
  \ >= min posterior for significance\n\n    The default value is 0; everything is\
  \ merged by default.\n\n-q  MIN_MAPQ\n    The minimum MAPQ score. Default is 30.\n\
  \n-t  TreatmentReads\n    A BED or BAM file that contains aligned read reads. Use\
  \ the -B option to\n    speicfy BED format. BAM format is the default.\n    \n\n"
generated_using:
- -h
