&id001 !Command
command:
- sequence
- sample
positional:
- !Positional
  description: ''
  position: 0
  name: sequence
  optional: false
- !Positional
  description: ''
  position: 1
  name: mode
  optional: true
- !Positional
  description: ''
  position: 2
  name: sequence_file
  optional: true
named:
- !Flag
  description: "treat inputs as paired sequences; the first two files form the\nfirst\
    \ pair, and so on."
  synonyms:
  - -paired
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: write output sequences to file O.  If paired, two files must be supplied.
  synonyms:
  - -output
  args: !SimpleFlagArg
    name: O
  optional: true
- !Flag
  description: output C coverage of sequences, based on genome size G.
  synonyms:
  - -coverage
  args: !SimpleFlagArg
    name: C
  optional: true
- !Flag
  description: ''
  synonyms:
  - -genomesize
  args: !SimpleFlagArg
    name: G
  optional: true
- !Flag
  description: output B bases.
  synonyms:
  - -bases
  args: !SimpleFlagArg
    name: B
  optional: true
- !Flag
  description: output R reads.
  synonyms:
  - -reads
  args: !SimpleFlagArg
    name: R
  optional: true
- !Flag
  description: output P pairs (only if -paired).
  synonyms:
  - -pairs
  args: !SimpleFlagArg
    name: P
  optional: true
- !Flag
  description: output fraction F of the input bases.
  synonyms:
  - -fraction
  args: !SimpleFlagArg
    name: F
  optional: true
parent: &id002 !Command
  command:
  - sequence
  positional: []
  named:
  - !Flag
    description: base size to use for N50 statistics
    synonyms:
    - -size
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: limit NG table to 1x coverage
    synonyms:
    - -1x
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: load data as complete sequences (for testing)
    synonyms:
    - -assequences
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: load data as blocks of bases    (for testing)
    synonyms:
    - -asbases
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: baselist extract bases as specified in the 'list' from each sequence
    synonyms:
    - -bases
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: extract ordinal sequences as specified in the 'list'
    synonyms:
    - -sequences
    args: !SimpleFlagArg
      name: seqlist
    optional: true
  - !Flag
    description: reverse the bases in the sequence
    synonyms:
    - -reverse
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: complement the bases in the sequence
    synonyms:
    - -complement
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: alias for -reverse -complement
    synonyms:
    - -rc
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: compress homopolymer runs to one base
    synonyms:
    - -compress
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: ''
    synonyms:
    - -upcase
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: ''
    synonyms:
    - -downcase
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "print sequence if it is at least 'min' bases and at most 'max' bases\
      \ long\na 'baselist' is a set of integers formed from any combination\nof the\
      \ following, seperated by a comma:\nnum       a single number\nbgn-end   a range\
      \ of numbers:  bgn <= end\nbases are spaced-based; -bases 0-2,4 will print the\
      \ bases between\nthe first two spaces (the first two bases) and the base after\
      \ the\nfourth space (the fifth base).\na 'seqlist' is a set of integers formed\
      \ from any combination\nof the following, seperated by a comma:\nnum       a\
      \ single number\nbgn-end   a range of numbers:  bgn <= end\nsequences are 1-based;\
      \ -sequences 1,3-5 will print the first, third,\nfourth and fifth sequences."
    synonyms:
    - -length
    args: !SimpleFlagArg
      name: min-max
    optional: true
  - !Flag
    description: sample reads from these sequences
    synonyms:
    - -genome
    args: !SimpleFlagArg
      name: G
    optional: true
  - !Flag
    description: threat the sequences in G as circular
    synonyms:
    - -circular
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: genome size to use for deciding coverage below
    synonyms:
    - -genomesize
    args: !SimpleFlagArg
      name: g
    optional: true
  - !Flag
    description: generate approximately c coverage of output
    synonyms:
    - -coverage
    args: !SimpleFlagArg
      name: c
    optional: true
  - !Flag
    description: generate exactly n reads of output
    synonyms:
    - -nreads
    args: !SimpleFlagArg
      name: n
    optional: true
  - !Flag
    description: generate approximately n bases of output
    synonyms:
    - -nbases
    args: !SimpleFlagArg
      name: n
    optional: true
  - !Flag
    description: "generate read length by sampling the distribution in file F\none\
      \ column  - each line is the length of a sequence\ntwo columns - each line has\
      \ the 'length' and 'number of sequences'"
    synonyms:
    - -distribution
    args: !SimpleFlagArg
      name: F
    optional: true
  - !Flag
    description: (not implemented)
    synonyms:
    - -output
    args: !SimpleFlagArg
      name: x.fasta
    optional: true
  - !Flag
    description: "treat inputs as paired sequences; the first two files form the\n\
      first pair, and so on."
    synonyms:
    - -paired
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: output R reads.
    synonyms:
    - -reads
    args: !SimpleFlagArg
      name: R
    optional: true
  - !Flag
    description: output P pairs (only if -paired).
    synonyms:
    - -pairs
    args: !SimpleFlagArg
      name: P
    optional: true
  - !Flag
    description: output fraction F of the input bases.
    synonyms:
    - -fraction
    args: !SimpleFlagArg
      name: F
    optional: true
  - !Flag
    description: minimum sequence length
    synonyms:
    - -min
    args: !SimpleFlagArg
      name: M
    optional: true
  - !Flag
    description: maximum sequence length
    synonyms:
    - -max
    args: !SimpleFlagArg
      name: M
    optional: true
  - !Flag
    description: 99.73% of the reads (3 standard deviations) will be between min and
      max
    synonyms:
    - -gaussian
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: ''
    synonyms:
    - -mirror
    args: !SimpleFlagArg
      name: F
    optional: true
  - !Flag
    description: sets GC/AT composition (default 0.50)
    synonyms:
    - -gc
    args: !SimpleFlagArg
      name: bias
    optional: true
  - !Flag
    description: sets GC/AT composition (default 0.50)
    synonyms:
    - -at
    args: !SimpleFlagArg
      name: bias
    optional: true
  - !Flag
    description: sets frequency of A bases (default 0.25)
    synonyms:
    - -a
    args: !SimpleFlagArg
      name: freq
    optional: true
  - !Flag
    description: sets frequency of C bases (default 0.25)
    synonyms:
    - -c
    args: !SimpleFlagArg
      name: freq
    optional: true
  - !Flag
    description: sets frequency of G bases (default 0.25)
    synonyms:
    - -g
    args: !SimpleFlagArg
      name: freq
    optional: true
  - !Flag
    description: sets frequency of T bases (default 0.25)
    synonyms:
    - -t
    args: !SimpleFlagArg
      name: freq
    optional: true
  parent:
  subcommands:
  - *id001
  - !Command
    command:
    - sequence
    - extract
    positional:
    - !Positional
      description: ''
      position: 0
      name: sequence
      optional: false
    - !Positional
      description: ''
      position: 1
      name: mode
      optional: true
    - !Positional
      description: ''
      position: 2
      name: sequence_file
      optional: true
    named:
    - !Flag
      description: baselist extract bases as specified in the 'list' from each sequence
      synonyms:
      - -bases
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: extract ordinal sequences as specified in the 'list'
      synonyms:
      - -sequences
      args: !SimpleFlagArg
        name: seqlist
      optional: true
    - !Flag
      description: reverse the bases in the sequence
      synonyms:
      - -reverse
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: complement the bases in the sequence
      synonyms:
      - -complement
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: alias for -reverse -complement
      synonyms:
      - -rc
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: compress homopolymer runs to one base
      synonyms:
      - -compress
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -upcase
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -downcase
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "print sequence if it is at least 'min' bases and at most 'max'\
        \ bases long\na 'baselist' is a set of integers formed from any combination\n\
        of the following, seperated by a comma:\nnum       a single number\nbgn-end\
        \   a range of numbers:  bgn <= end\nbases are spaced-based; -bases 0-2,4\
        \ will print the bases between\nthe first two spaces (the first two bases)\
        \ and the base after the\nfourth space (the fifth base).\na 'seqlist' is a\
        \ set of integers formed from any combination\nof the following, seperated\
        \ by a comma:\nnum       a single number\nbgn-end   a range of numbers:  bgn\
        \ <= end\nsequences are 1-based; -sequences 1,3-5 will print the first, third,\n\
        fourth and fifth sequences."
      synonyms:
      - -length
      args: !SimpleFlagArg
        name: min-max
      optional: true
    parent: *id002
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "usage: sequence [mode] [options] [sequence_file ...]\n\nOPTIONS for\
      \ extract mode:\n  -bases     baselist extract bases as specified in the 'list'\
      \ from each sequence\n  -sequences seqlist  extract ordinal sequences as specified\
      \ in the 'list'\n\n  -reverse            reverse the bases in the sequence\n\
      \  -complement         complement the bases in the sequence\n  -rc         \
      \        alias for -reverse -complement\n\n  -compress           compress homopolymer\
      \ runs to one base\n\n  -upcase\n  -downcase\n\n  -length min-max     print\
      \ sequence if it is at least 'min' bases and at most 'max' bases long\n  \n\
      \                      a 'baselist' is a set of integers formed from any combination\n\
      \                      of the following, seperated by a comma:\n           \
      \                num       a single number\n                           bgn-end\
      \   a range of numbers:  bgn <= end\n                      bases are spaced-based;\
      \ -bases 0-2,4 will print the bases between\n                      the first\
      \ two spaces (the first two bases) and the base after the\n                \
      \      fourth space (the fifth base).\n  \n                      a 'seqlist'\
      \ is a set of integers formed from any combination\n                      of\
      \ the following, seperated by a comma:\n                           num     \
      \  a single number\n                           bgn-end   a range of numbers:\
      \  bgn <= end\n                      sequences are 1-based; -sequences 1,3-5\
      \ will print the first, third,\n                      fourth and fifth sequences.\n\
      \  \nERROR:  Unknown parameter '--help'\nERROR:  No input sequence files supplied.\n"
    generated_using: &id003
    - --help
  - !Command
    command:
    - sequence
    - simulate
    positional:
    - !Positional
      description: ''
      position: 0
      name: sequence
      optional: false
    - !Positional
      description: ''
      position: 1
      name: mode
      optional: true
    - !Positional
      description: ''
      position: 2
      name: sequence_file
      optional: true
    named:
    - !Flag
      description: sample reads from these sequences
      synonyms:
      - -genome
      args: !SimpleFlagArg
        name: G
      optional: true
    - !Flag
      description: threat the sequences in G as circular
      synonyms:
      - -circular
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: genome size to use for deciding coverage below
      synonyms:
      - -genomesize
      args: !SimpleFlagArg
        name: g
      optional: true
    - !Flag
      description: generate approximately c coverage of output
      synonyms:
      - -coverage
      args: !SimpleFlagArg
        name: c
      optional: true
    - !Flag
      description: generate exactly n reads of output
      synonyms:
      - -nreads
      args: !SimpleFlagArg
        name: n
      optional: true
    - !Flag
      description: generate approximately n bases of output
      synonyms:
      - -nbases
      args: !SimpleFlagArg
        name: n
      optional: true
    - !Flag
      description: "generate read length by sampling the distribution in file F\n\
        one column  - each line is the length of a sequence\ntwo columns - each line\
        \ has the 'length' and 'number of sequences'"
      synonyms:
      - -distribution
      args: !SimpleFlagArg
        name: F
      optional: true
    - !Flag
      description: '[-max]   (not implemented)'
      synonyms:
      - -length
      args: !SimpleFlagArg
        name: min
      optional: true
    - !Flag
      description: (not implemented)
      synonyms:
      - -output
      args: !SimpleFlagArg
        name: x.fasta
      optional: true
    parent: *id002
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "usage: sequence [mode] [options] [sequence_file ...]\n\nOPTIONS for\
      \ simulate mode:\n  -genome G           sample reads from these sequences\n\
      \  -circular           threat the sequences in G as circular\n\n  -genomesize\
      \ g       genome size to use for deciding coverage below\n  -coverage c    \
      \     generate approximately c coverage of output\n  -nreads n           generate\
      \ exactly n reads of output\n  -nbases n           generate approximately n\
      \ bases of output\n\n  -distribution F     generate read length by sampling\
      \ the distribution in file F\n                        one column  - each line\
      \ is the length of a sequence\n                        two columns - each line\
      \ has the 'length' and 'number of sequences'\n\n  -length min[-max]   (not implemented)\n\
      \  -output x.fasta     (not implemented)\n\nERROR:  Unknown parameter '--help'\n\
      ERROR:  No reference genome sequence (-genome) supplied.\n"
    generated_using: *id003
  - !Command
    command:
    - sequence
    - generate
    positional:
    - !Positional
      description: ''
      position: 0
      name: sequence
      optional: false
    - !Positional
      description: ''
      position: 1
      name: mode
      optional: true
    - !Positional
      description: ''
      position: 2
      name: sequence_file
      optional: true
    named:
    - !Flag
      description: minimum sequence length
      synonyms:
      - -min
      args: !SimpleFlagArg
        name: M
      optional: true
    - !Flag
      description: maximum sequence length
      synonyms:
      - -max
      args: !SimpleFlagArg
        name: M
      optional: true
    - !Flag
      description: generate N sequences
      synonyms:
      - -sequences
      args: !SimpleFlagArg
        name: N
      optional: true
    - !Flag
      description: generate at least B bases, no more than B+maxLength-1 bases.
      synonyms:
      - -bases
      args: !SimpleFlagArg
        name: B
      optional: true
    - !Flag
      description: 99.73% of the reads (3 standard deviations) will be between min
        and max
      synonyms:
      - -gaussian
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -mirror
      args: !SimpleFlagArg
        name: F
      optional: true
    - !Flag
      description: sets GC/AT composition (default 0.50)
      synonyms:
      - -gc
      args: !SimpleFlagArg
        name: bias
      optional: true
    - !Flag
      description: sets GC/AT composition (default 0.50)
      synonyms:
      - -at
      args: !SimpleFlagArg
        name: bias
      optional: true
    - !Flag
      description: sets frequency of A bases (default 0.25)
      synonyms:
      - -a
      args: !SimpleFlagArg
        name: freq
      optional: true
    - !Flag
      description: sets frequency of C bases (default 0.25)
      synonyms:
      - -c
      args: !SimpleFlagArg
        name: freq
      optional: true
    - !Flag
      description: sets frequency of G bases (default 0.25)
      synonyms:
      - -g
      args: !SimpleFlagArg
        name: freq
      optional: true
    - !Flag
      description: sets frequency of T bases (default 0.25)
      synonyms:
      - -t
      args: !SimpleFlagArg
        name: freq
      optional: true
    parent: *id002
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "usage: sequence [mode] [options] [sequence_file ...]\n\nOPTIONS for\
      \ generate mode:\n  -min M         minimum sequence length\n  -max M       \
      \  maximum sequence length\n  -sequences N   generate N sequences\n  -bases\
      \ B       generate at least B bases, no more than B+maxLength-1 bases.\n  -gaussian\
      \      99.73% of the reads (3 standard deviations) will be between min and max\n\
      \  -mirror F      \n  -gc bias       sets GC/AT composition (default 0.50)\n\
      \  -at bias       sets GC/AT composition (default 0.50)\n  -a freq        sets\
      \ frequency of A bases (default 0.25)\n  -c freq        sets frequency of C\
      \ bases (default 0.25)\n  -g freq        sets frequency of G bases (default\
      \ 0.25)\n  -t freq        sets frequency of T bases (default 0.25)\n\nThe -gc\
      \ option is a shortcut for setting all four base frequencies at once.  Order\
      \ matters!\n  -gc 0.6 -a 0.1 -t 0.3 -- sets G = C = 0.3, A = 0.1, T = 0.3\n\
      \  -a 0.1 -t 0.3 -gc 0.6 -- sets G = C = 0.3, A = T = 0.15\n\nBase frequencies\
      \ are scaled to sum to 1.0.\n  -a 1.25 -- results in a sum of 2.0 (1.25 + 0.25\
      \ + 0.25 + 0.25) so final frequencies will be:\n             A =         1.25/2\
      \ = 0.625\n             C = G = T = 0.25/2 = 0.125.\n  -gc 0.8 -a 1.0 -t 0.2\
      \ -- sum is also 2.0, final frequencies will be:\n             A =         1.00/2\
      \ = 0.5\n             C = G =     0.40/2 = 0.2\n             T =         0.20/2\
      \ = 0.1\n\nERROR:  Unknown parameter '--help'\n"
    generated_using: *id003
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "usage: sequence [mode] [options] [sequence_file ...]\n\nMODES:\n  summarize\
    \      report N50, length histogram, mono-, di- and tri-nucleotide frequencies\n\
    \  extract        extract the specified sequences\n  sample         emit existing\
    \ sequences randomly\n  generate       generate random sequences\n  simulate \
    \      errors in existing sequences\n\nOPTIONS for summarize mode:\n  -size  \
    \        base size to use for N50 statistics\n  -1x            limit NG table\
    \ to 1x coverage\n  -assequences   load data as complete sequences (for testing)\n\
    \  -asbases       load data as blocks of bases    (for testing)\n\nOPTIONS for\
    \ extract mode:\n  -bases     baselist extract bases as specified in the 'list'\
    \ from each sequence\n  -sequences seqlist  extract ordinal sequences as specified\
    \ in the 'list'\n\n  -reverse            reverse the bases in the sequence\n \
    \ -complement         complement the bases in the sequence\n  -rc            \
    \     alias for -reverse -complement\n\n  -compress           compress homopolymer\
    \ runs to one base\n\n  -upcase\n  -downcase\n\n  -length min-max     print sequence\
    \ if it is at least 'min' bases and at most 'max' bases long\n  \n           \
    \           a 'baselist' is a set of integers formed from any combination\n  \
    \                    of the following, seperated by a comma:\n               \
    \            num       a single number\n                           bgn-end   a\
    \ range of numbers:  bgn <= end\n                      bases are spaced-based;\
    \ -bases 0-2,4 will print the bases between\n                      the first two\
    \ spaces (the first two bases) and the base after the\n                      fourth\
    \ space (the fifth base).\n  \n                      a 'seqlist' is a set of integers\
    \ formed from any combination\n                      of the following, seperated\
    \ by a comma:\n                           num       a single number\n        \
    \                   bgn-end   a range of numbers:  bgn <= end\n              \
    \        sequences are 1-based; -sequences 1,3-5 will print the first, third,\n\
    \                      fourth and fifth sequences.\n  \nOPTIONS for simulate mode:\n\
    \  -genome G           sample reads from these sequences\n  -circular        \
    \   threat the sequences in G as circular\n\n  -genomesize g       genome size\
    \ to use for deciding coverage below\n  -coverage c         generate approximately\
    \ c coverage of output\n  -nreads n           generate exactly n reads of output\n\
    \  -nbases n           generate approximately n bases of output\n\n  -distribution\
    \ F     generate read length by sampling the distribution in file F\n        \
    \                one column  - each line is the length of a sequence\n       \
    \                 two columns - each line has the 'length' and 'number of sequences'\n\
    \n  -length min[-max]   (not implemented)\n  -output x.fasta     (not implemented)\n\
    \nOPTIONS for sample mode:\n  -paired             treat inputs as paired sequences;\
    \ the first two files form the\n                      first pair, and so on.\n\
    \n  -output O           write output sequences to file O.  If paired, two files\
    \ must be supplied.\n\n  -coverage C         output C coverage of sequences, based\
    \ on genome size G.\n  -genomesize G       \n\n  -bases B            output B\
    \ bases.\n\n  -reads R            output R reads.\n  -pairs P            output\
    \ P pairs (only if -paired).\n\n  -fraction F         output fraction F of the\
    \ input bases.\n\nOPTIONS for generate mode:\n  -min M         minimum sequence\
    \ length\n  -max M         maximum sequence length\n  -sequences N   generate\
    \ N sequences\n  -bases B       generate at least B bases, no more than B+maxLength-1\
    \ bases.\n  -gaussian      99.73% of the reads (3 standard deviations) will be\
    \ between min and max\n  -mirror F      \n  -gc bias       sets GC/AT composition\
    \ (default 0.50)\n  -at bias       sets GC/AT composition (default 0.50)\n  -a\
    \ freq        sets frequency of A bases (default 0.25)\n  -c freq        sets\
    \ frequency of C bases (default 0.25)\n  -g freq        sets frequency of G bases\
    \ (default 0.25)\n  -t freq        sets frequency of T bases (default 0.25)\n\n\
    The -gc option is a shortcut for setting all four base frequencies at once.  Order\
    \ matters!\n  -gc 0.6 -a 0.1 -t 0.3 -- sets G = C = 0.3, A = 0.1, T = 0.3\n  -a\
    \ 0.1 -t 0.3 -gc 0.6 -- sets G = C = 0.3, A = T = 0.15\n\nBase frequencies are\
    \ scaled to sum to 1.0.\n  -a 1.25 -- results in a sum of 2.0 (1.25 + 0.25 + 0.25\
    \ + 0.25) so final frequencies will be:\n             A =         1.25/2 = 0.625\n\
    \             C = G = T = 0.25/2 = 0.125.\n  -gc 0.8 -a 1.0 -t 0.2 -- sum is also\
    \ 2.0, final frequencies will be:\n             A =         1.00/2 = 0.5\n   \
    \          C = G =     0.40/2 = 0.2\n             T =         0.20/2 = 0.1\n\n\
    ERROR:  Unknown parameter '--help'\nERROR:  No mode (summarize, extract, generate\
    \ or simulate) specified.\n"
  generated_using: *id003
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "usage: sequence [mode] [options] [sequence_file ...]\n\nOPTIONS for sample\
  \ mode:\n  -paired             treat inputs as paired sequences; the first two files\
  \ form the\n                      first pair, and so on.\n\n  -output O        \
  \   write output sequences to file O.  If paired, two files must be supplied.\n\n\
  \  -coverage C         output C coverage of sequences, based on genome size G.\n\
  \  -genomesize G       \n\n  -bases B            output B bases.\n\n  -reads R \
  \           output R reads.\n  -pairs P            output P pairs (only if -paired).\n\
  \n  -fraction F         output fraction F of the input bases.\n\nERROR:  Unknown\
  \ parameter '--help'\nERROR:  No input sequence files supplied.\n"
generated_using: *id003
