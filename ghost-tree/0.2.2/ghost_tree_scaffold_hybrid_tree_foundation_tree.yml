&id007 !Command
positional: []
named:
- !Flag
  description: '[p|c|o|f|g]  Taxonomic level to graft extensions to foundation. Default
    is g (genus). p=phylum, c=class, o=order, f=family.'
  synonyms:
  - --graft-level
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Saves error log file (optional)
  synonyms:
  - --stderr
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Will not save accession id file (optional)
  synonyms:
  - --exclude-id-list
  args: !EmptyFlagArg {}
  optional: true
command:
- ghost-tree
- scaffold
- hybrid-tree-foundation-tree
parent: &id004 !Command
  positional: []
  named: []
  command:
  - ghost-tree
  - scaffold
  parent: &id001 !Command
    positional: []
    named: []
    command:
    - ghost-tree
    parent:
    subcommands:
    - !Command
      positional:
      - !Positional
        description: ''
        position: 0
        name: TREE_FILE1
        optional: false
      - !Positional
        description: ''
        position: 1
        name: TREE_FILE2
        optional: false
      named:
      - !Flag
        description: '[pearson|spearman] correlation method to use in Mantel test'
        synonyms:
        - -m
        - --method
        args: !EmptyFlagArg {}
        optional: true
      command:
      - ghost-tree
      - compare-trees
      parent: *id001
      subcommands: []
      help_flag: !Flag
        description: Show this message and exit.
        synonyms:
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "Usage: ghost-tree compare-trees [OPTIONS] TREE_FILE1 TREE_FILE2\n\
        \n  Creates distance matrices for two trees (tree-file1 and tree-file2) and\n\
        \  finds the correlation between the trees using a Mantel test.\n\nOptions:\n\
        \  -m, --method [pearson|spearman]\n                                  correlation\
        \ method to use in Mantel test\n  --help                          Show this\
        \ message and exit.\n"
      generated_using: &id003
      - --help
    - &id002 !Command
      positional: []
      named: []
      command:
      - ghost-tree
      - extensions
      parent: *id001
      subcommands:
      - !Command
        positional:
        - !Positional
          description: ''
          position: 0
          name: ARGS
          optional: true
        named: []
        command:
        - ghost-tree
        - extensions
        - COMMAND
        parent: *id002
        subcommands: []
        help_flag:
        usage_flag:
        version_flag:
        help_text: "Usage: ghost-tree extensions [OPTIONS] COMMAND [ARGS]...\nTry\
          \ 'ghost-tree extensions --help' for help.\n\nError: No such command 'COMMAND'.\n"
        generated_using: *id003
      - !Command
        positional:
        - !Positional
          description: ''
          position: 0
          name: ghost-tree
          optional: false
        - !Positional
          description: ''
          position: 1
          name: extensions
          optional: false
        - !Positional
          description: ''
          position: 2
          name: COMMAND
          optional: false
        - !Positional
          description: ''
          position: 3
          name: ARGS
          optional: true
        named: []
        command:
        - ghost-tree
        - extensions
        - ARGS
        parent: *id002
        subcommands: []
        help_flag:
        usage_flag:
        version_flag:
        help_text: "Usage: ghost-tree extensions [OPTIONS] COMMAND [ARGS]...\nTry\
          \ 'ghost-tree extensions --help' for help.\n\nError: No such command 'ARGS'.\n"
        generated_using: *id003
      help_flag:
      usage_flag:
      version_flag:
      help_text: "Usage: ghost-tree extensions [OPTIONS] COMMAND [ARGS]...\nTry 'ghost-tree\
        \ extensions --help' for help.\n\nError: no such option: -h\n"
      generated_using: &id006
      - -h
    - *id004
    - &id005 !Command
      positional: []
      named: []
      command:
      - ghost-tree
      - silva
      parent: *id001
      subcommands:
      - !Command
        positional:
        - !Positional
          description: ''
          position: 0
          name: ARGS
          optional: true
        named: []
        command:
        - ghost-tree
        - silva
        - COMMAND
        parent: *id005
        subcommands: []
        help_flag:
        usage_flag:
        version_flag:
        help_text: "Usage: ghost-tree silva [OPTIONS] COMMAND [ARGS]...\nTry 'ghost-tree\
          \ silva --help' for help.\n\nError: No such command 'COMMAND'.\n"
        generated_using: *id003
      - !Command
        positional:
        - !Positional
          description: ''
          position: 0
          name: ghost-tree
          optional: false
        - !Positional
          description: ''
          position: 1
          name: silva
          optional: false
        - !Positional
          description: ''
          position: 2
          name: COMMAND
          optional: false
        - !Positional
          description: ''
          position: 3
          name: ARGS
          optional: true
        named: []
        command:
        - ghost-tree
        - silva
        - ARGS
        parent: *id005
        subcommands: []
        help_flag:
        usage_flag:
        version_flag:
        help_text: "Usage: ghost-tree silva [OPTIONS] COMMAND [ARGS]...\nTry 'ghost-tree\
          \ silva --help' for help.\n\nError: No such command 'ARGS'.\n"
        generated_using: *id003
      help_flag:
      usage_flag:
      version_flag:
      help_text: "Usage: ghost-tree silva [OPTIONS] COMMAND [ARGS]...\nTry 'ghost-tree\
        \ silva --help' for help.\n\nError: no such option: -h\n"
      generated_using: *id006
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: ghost-tree [OPTIONS] COMMAND [ARGS]...\n\n  ___________________________________________________________________\n\
      \n  ghost-tree: a tool for creating hybrid-gene phylogenetic trees for\n  diversity\
      \ analyses. (https://github.com/JTFouquier/ghost-tree)\n  ___________________________________________________________________\n\
      \n  For dependent software installation instructions please see:\n  https://github.com/JTFouquier/ghost-tree/blob/master/README.rst\n\
      \n  -> For help with each command, enter \"--help\" (e.g. 'ghost-tree scaffold\n\
      \  hybrid-tree --help').\n\n  -> For a more detailed tutorial, please see:\n\
      \  https://github.com/JTFouquier/ghost-tree/tree/master/workflow\n\n  -> There\
      \ are three 'command groups' (silva, extensions, and scaffold),\n  which include\
      \ additional 'subcommands.' (e.g. enter 'ghost-tree silva' and\n  you will see\
      \ the command 'ghost-tree silva extract-fungi' listed)\n\n  -> Arguments *must*\
      \ be entered in order, without any \"-\"/dashes.\n  ___________________________________________________________________\n\
      \nOptions:\n  --help  Show this message and exit.\n\nCommands:\n  compare-trees\
      \               Creates distance matrices for two trees...\n  extensions   \
      \               Command group for preprocessing 'extension...\n  filter-alignment-positions\
      \  Filters an alignment file based on positional...\n  scaffold            \
      \        Command group for creating hybrid-gene trees.\n  silva            \
      \           Command group for SILVA rRNA database...\n"
    generated_using: *id003
  subcommands:
  - !Command
    positional: []
    named:
    - !Flag
      description: '[p|c|o|f|g]    Taxonomic level to graft extensions to foundation.
        Default is g (genus). p=phylum, c=class, o=order, f=family.'
      synonyms:
      - --graft-level
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Saves error log file (optional)
      synonyms:
      - --stderr
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Saves non-redundant foundation alignment file (optional)
      synonyms:
      - --save-foundation-alignment
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Saves foundation phylogenetic tree file (optional)
      synonyms:
      - --save-foundation-tree
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Will not save accession id file (optional)
      synonyms:
      - --exclude-id-list
      args: !EmptyFlagArg {}
      optional: true
    command:
    - ghost-tree
    - scaffold
    - hybrid-tree-foundation-alignment
    parent: *id004
    subcommands: []
    help_flag: !Flag
      description: Show this message and exit.
      synonyms:
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Usage: ghost-tree scaffold hybrid-tree-foundation-alignment \n   \
      \        [OPTIONS] EXTENSION_TREES_OTU_MAP EXTENSION_TREES_TAXONOMY_FILE\n \
      \          EXTENSION_TREES_SEQUENCE_FILE FOUNDATION_ALIGNMENT_FILE\n       \
      \    GHOST_TREE_OUTPUT_FOLDER\n\n  Make hybrid-tree using foundation alignment.\n\
      \n  Combines two genetic databases into one phylogenetic tree and is the final\n\
      \  command in ghost-tree.\n\n  Some genetic databases provide finer taxonomic\
      \ resolution, but high\n  sequence variability causes poor multiple sequence\
      \ alignments (we consider\n  these \"extension trees\").\n\n  Other databases\
      \ provide high quality phylogenetic information (hence they\n  can be used as\
      \ the \"foundation\" tree), but they provide poor quality\n  taxonomic resolution.\n\
      \n  The output file is one phylogenetic tree in .nwk format, which has the\n\
      \  benefits of both databases. This allows sequencing to be performed using\n\
      \  only one primer set, the \"extension trees\" primer set.\n\n  Arguments:\n\
      \n  1) extension-trees-otu-map: Tab-delimited text file containing OTU\n  clusters\
      \ in rows containing accession numbers only. Format can be 1) where\n  the accession\
      \ number is in the first column with only one column or 2) it\n  can contain\
      \ accession numbers clustered in tab-delimited rows containing\n  more accession\
      \ numbers, which are part of that OTU cluster (as in output\n  of \"ghost-tree\
      \ group-extensions\"). This file refers to the \"extension\n  trees\". File\
      \ references to sequence reads or sample numbers/names are not\n  valid here.\
      \ This is NOT the same as an OTU .biom table.\n\n  2) extension-trees-taxonomy-file:\
      \ Tab-delimited text file related to\n  \"extension trees\" wih the 1st column\
      \ being an accession number (same\n  accession numbers in extension-trees-otu-map\
      \ and extension-trees-taxonomy-\n  file) and the 2nd column is the taxonomy\
      \ ranking in the following format:\n  k__Fungi;p__Basidiomycota;c__Agaricomycetes;o__Sebacinales;\n\
      \  f__Sebacinaceae;g__unidentified;s__Sebacina\n\n  3) extension-trees-sequence-file:\
      \ The .fasta formated sequences for the\n  \"extension trees\" genetic dataset.\
      \ Sequence identifiers are the accession\n  numbers. These accession numbers\
      \ are the same as in the extension-trees-\n  otu-map and extension-trees-taxonomy-file.\n\
      \n  4) foundation-alignment-file: File containing aligned sequences from a\n\
      \  genetic marker database in .fasta format. This file refers to the\n  \"foundation\"\
      \ of the ghost-tree.\n\n  .fasta contains accession numbers *and* taxonomy labels.\n\
      \n  Note: if you would like to use a newick tree foundation, use the hybrid-\n\
      \  tree-foundation-tree command, also in the 'scaffold' command group.\n\n \
      \ 5) ghost-tree-output-folder: Output folder contains files including:\n\n \
      \ a) The Newick formatted ghost-tree, which is the final output of the\n  ghost-tree\
      \ tool. This is a phylogenetic tree designed for downstream\n  diversity analyses.\n\
      \n  b) Accession IDs from the ghost-tree.nwk file that you can use for\n  downstream\
      \ analyses tools\n\n  c) log error file (this is an optional file that you can\
      \ have if you type\n  '--stderr')\n\nOptions:\n  --graft-level [p|c|o|f|g] \
      \   Taxonomic level to graft extensions to\n                               foundation.\
      \ Default is g (genus). p=phylum,\n                               c=class, o=order,\
      \ f=family.\n\n  --stderr                     Saves error log file (optional)\n\
      \  --save-foundation-alignment  Saves non-redundant foundation alignment file\n\
      \                               (optional)\n\n  --save-foundation-tree     \
      \  Saves foundation phylogenetic tree file\n                               (optional)\n\
      \n  --exclude-id-list            Will not save accession id file (optional)\n\
      \  --help                       Show this message and exit.\n"
    generated_using: *id003
  - *id007
  help_flag: !Flag
    description: Show this message and exit.
    synonyms:
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "Usage: ghost-tree scaffold [OPTIONS] COMMAND [ARGS]...\n\n  Command\
    \ group for creating hybrid-gene trees.\n\nOptions:\n  --help  Show this message\
    \ and exit.\n\nCommands:\n  hybrid-tree-foundation-alignment\n               \
    \                   Make hybrid-tree using foundation...\n  hybrid-tree-foundation-tree\
    \     Make hybrid-tree using foundation tree.\n"
  generated_using: *id003
subcommands: []
help_flag: !Flag
  description: Show this message and exit.
  synonyms:
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "Usage: ghost-tree scaffold hybrid-tree-foundation-tree [OPTIONS]\n   \
  \                                                    EXTENSION_TREES_OTU_MAP\n \
  \                                                      EXTENSION_TREES_TAXONOM\n\
  \                                                       Y_FILE EXTENSION_TREES_\n\
  \                                                       SEQUENCE_FILE\n        \
  \                                               FOUNDATION_TREE_FILE FO\n      \
  \                                                 UNDATION_TAXONOMY_FILE G\n   \
  \                                                    HOST_TREE_OUTPUT_FOLDER\n\n\
  \  Make hybrid-tree using foundation tree. Combines two genetic databases\n  into\
  \ one phylogenetic tree using a phylogenetic tree (newick format) as\n  the foundation\
  \ and is the final command in ghost-tree.\n\n  Some genetic databases provide finer\
  \ taxonomic resolution, but high\n  sequence variability causes poor multiple sequence\
  \ alignments (we consider\n  these \"extension trees\").\n\n  Other databases provide\
  \ high quality phylogenetic information (hence they\n  can be used as the \"foundation\"\
  \ tree), but they provide poor quality\n  taxonomic resolution.\n\n  The output\
  \ file is one phylogenetic tree in .nwk format, which has the\n  benefits of both\
  \ databases. This allows sequencing to be performed using\n  only one primer set,\
  \ the \"extension trees\" primer set.\n\n  Arguments:\n\n  1) extension-trees-otu-map:\
  \ Tab-delimited text file containing OTU\n  clusters in rows containing accession\
  \ numbers only. Format can be 1) where\n  the accession number is in the first column\
  \ with only one column or 2) it\n  can contain accession numbers clustered in tab-delimited\
  \ rows containing\n  more accession numbers, which are part of that OTU cluster\
  \ (as in output\n  of \"ghost-tree group-extensions\"). This file refers to the\
  \ \"extension\n  trees\". File references to sequence reads or sample numbers/names\
  \ are not\n  valid here. This is NOT the same as an OTU .biom table.\n\n  2) extension-trees-taxonomy-file:\
  \ Tab-delimited text file related to\n  \"extension trees\" wih the 1st column being\
  \ an accession number (same\n  accession numbers in extension-trees-otu-map and\
  \ extension-trees-taxonomy-\n  file) and the 2nd column is the taxonomy ranking\
  \ in the following format:\n  k__Fungi;p__Basidiomycota;c__Agaricomycetes;o__Sebacinales;\n\
  \  f__Sebacinaceae;g__unidentified;s__Sebacina\n\n  3) extension-trees-sequence-file:\
  \ The .fasta formated sequences for the\n  \"extension trees\" genetic dataset.\
  \ Sequence identifiers are the accession\n  numbers. These accession numbers are\
  \ the same as in the extension-trees-\n  otu-map and extension-trees-taxonomy-file.\n\
  \n  4) foundation-tree-file: .nwk tree is a tree with accession numbers. This\n\
  \  file refers to the \"foundation\" of the ghost-tree.\n\n  5) foundation-taxonomy-file:\
  \ Tab separated taxonomy file containing\n  accession IDs and taxonomy for the foundation\
  \ phylogenetic tree (newick\n  format).\n\n  6) ghost-tree-output-folder: Output\
  \ folder contains files including:\n\n  a) The Newick formatted ghost-tree, which\
  \ is the final output of the\n  ghost-tree tool. This is a phylogenetic tree designed\
  \ for downstream\n  diversity analyses.\n\n  b) Accession IDs from the ghost-tree.nwk\
  \ file that you can use for\n  downstream analyses tools\n\n  c) log error file\
  \ (this is an optional file that you can have if you type\n  '--stderr')\n\nOptions:\n\
  \  --graft-level [p|c|o|f|g]  Taxonomic level to graft extensions to\n         \
  \                    foundation. Default is g (genus). p=phylum,\n             \
  \                c=class, o=order, f=family.\n\n  --stderr                   Saves\
  \ error log file (optional)\n  --exclude-id-list          Will not save accession\
  \ id file (optional)\n  --help                     Show this message and exit.\n"
generated_using: *id003
