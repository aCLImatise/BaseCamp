&id001 !Command
positional: []
named: []
command:
- prophex
parent:
subcommands:
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: idxbase
    optional: false
  named:
  - !Flag
    description: k-mer length for k-LCP
    synonyms:
    - -k
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: construct k-LCP and SA in parallel
    synonyms:
    - -s
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: sampling distance for SA
    synonyms:
    - -i
    args: !EmptyFlagArg {}
    optional: true
  command:
  - prophex
  - index
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: print help message
    synonyms:
    - -h
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "\nUsage:   prophex index [options] <idxbase>\nOptions: -k INT    k-mer\
    \ length for k-LCP\n         -s        construct k-LCP and SA in parallel\n  \
    \       -i        sampling distance for SA\n         -h        print help message\n\
    \n"
  generated_using: &id002
  - -h
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: idxbase
    optional: false
  - !Positional
    description: ''
    position: 1
    name: in.fq
    optional: false
  named:
  - !Flag
    description: length of k-mer
    synonyms:
    - -k
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: use k-LCP for querying
    synonyms:
    - -u
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: output set of chromosomes for every k-mer
    synonyms:
    - -v
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: do not check whether k-mer is on border of two contigs, and show
      such k-mers in output
    synonyms:
    - -p
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: print sequences and base qualities
    synonyms:
    - -b
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: log file name to output statistics
    synonyms:
    - -l
    args: !SimpleFlagArg
      name: STR
    optional: true
  - !Flag
    description: number of threads [1]
    synonyms:
    - -t
    args: !SimpleFlagArg
      name: INT
    optional: true
  command:
  - prophex
  - query
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: print help message
    synonyms:
    - -h
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "\nUsage:   prophex query [options] <idxbase> <in.fq>\n\nOptions: -k\
    \ INT    length of k-mer\n         -u        use k-LCP for querying\n        \
    \ -v        output set of chromosomes for every k-mer\n         -p        do not\
    \ check whether k-mer is on border of two contigs, and show such k-mers in output\n\
    \         -b        print sequences and base qualities\n         -l STR    log\
    \ file name to output statistics\n         -t INT    number of threads [1]\n \
    \        -h        print help message\n\n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: idxbase
    optional: false
  named:
  - !Flag
    description: length of k-mer
    synonyms:
    - -k
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: construct k-LCP and SA in parallel
    synonyms:
    - -s
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: sampling distance for SA
    synonyms:
    - -i
    args: !EmptyFlagArg {}
    optional: true
  command:
  - prophex
  - klcp
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: print help message
    synonyms:
    - -h
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "\nUsage:   prophex klcp [options] <idxbase>\n\nOptions: -k INT    length\
    \ of k-mer\n         -s        construct k-LCP and SA in parallel\n         -i\
    \        sampling distance for SA\n         -h        print help message\n\n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: input.bwt
    optional: false
  - !Positional
    description: ''
    position: 1
    name: output.bwt
    optional: false
  named: []
  command:
  - prophex
  - bwtdowngrade
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: print help message
    synonyms:
    - -h
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "\nUsage:   prophex bwtdowngrade <input.bwt> <output.bwt>\n         -h\
    \        print help message\n\n"
  generated_using: *id002
- !Command
  positional:
  - !Positional
    description: ''
    position: 0
    name: idxbase
    optional: false
  - !Positional
    description: ''
    position: 1
    name: output.fa
    optional: false
  named: []
  command:
  - prophex
  - bwt2fa
  parent: *id001
  subcommands: []
  help_flag: !Flag
    description: print help message
    synonyms:
    - -h
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "\nUsage:   prophex bwt2fa <idxbase> <output.fa>\n         -h       \
    \ print help message\n\n"
  generated_using: *id002
help_flag:
usage_flag:
version_flag:
help_text: "\nProgram: prophex (a lossless k-mer index)\nVersion: 0.1.1\nAuthors:\
  \ Kamil Salikhov, Karel Brinda, Simone Pignotti, Gregory Kucherov\nContact: kamil.salikhov@univ-mlv.fr\n\
  \nUsage:   prophex <command> [options]\n\nCommand: index           construct a BWA\
  \ index and k-LCP\n         query           query reads against index\n\n      \
  \   klcp            construct an additional k-LCP\n         bwtdowngrade    downgrade\
  \ .bwt to the old, more compact format without Occ\n         bwt2fa          reconstruct\
  \ FASTA from BWT\n\n"
generated_using:
- --help
