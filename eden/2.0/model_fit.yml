&id001 !Command
positional: []
named:
- !Flag
  description: 'Path tofile containing input for the positive class. (default: None)'
  synonyms:
  - -p
  - --positive-input-file
  args: !SimpleFlagArg
    name: POSITIVE_INPUT_FILE
  optional: true
- !Flag
  description: 'Path to file containing input for the negative class. (default: None)'
  synonyms:
  - -n
  - --negative-input-file
  args: !SimpleFlagArg
    name: NEGATIVE_INPUT_FILE
  optional: true
- !Flag
  description: 'Path to output directory. (default: out)'
  synonyms:
  - -o
  - --output-dir
  args: !SimpleFlagArg
    name: OUTPUT_DIR_PATH
  optional: true
- !Flag
  description: 'Model file name. Note: it will be located in the output directory.
    (default: model)'
  synonyms:
  - -m
  - --model-file
  args: !SimpleFlagArg
    name: MODEL_FILE
  optional: true
- !Flag
  description: 'Number of randomly generated hyper parameter configurations tried
    during the discriminative model optimization. A value of 1 implies using the estimator
    default values. (default: 20)'
  synonyms:
  - -e
  - --n-iter
  args: !SimpleFlagArg
    name: N_ITER
  optional: true
- !Flag
  description: 'Number of randomly generated hyper parameter configurations tried
    for the estimator for each parameter configuration of the pre-processor and vectorizer
    during optimization. (default: 5)'
  synonyms:
  - --n-inner-iter-estimator
  args: !SimpleFlagArg
    name: N_INNER_ITER_ESTIMATOR
  optional: true
- !Flag
  description: 'Number of iterations in the active learning cycle. A value of 0 means
    to avoid active learning. (default: 0)'
  synonyms:
  - --n-active-learning-iterations
  args: !SimpleFlagArg
    name: N_ACTIVE_LEARNING_ITERATIONS
  optional: true
- !Flag
  description: 'Number of positive instances that have to be sampled in the active
    learning cycle. A value of -1 means to use all instances, i.e. not to use active
    learning for the positive instances. (default: -1)'
  synonyms:
  - --size-positive
  args: !SimpleFlagArg
    name: SIZE_POSITIVE
  optional: true
- !Flag
  description: 'Number of negative instances that have to be sampled in the active
    learning cycle. A value of -1 means to use all instances, i.e. not to use active
    learning for the negative instances. (default: -1)'
  synonyms:
  - --size-negative
  args: !SimpleFlagArg
    name: SIZE_NEGATIVE
  optional: true
- !Flag
  description: 'Value of the score threshold to determine when to accept positive
    instances: positive instances with a score higher than the specified value will
    be accepted as candidates. (default: -1)'
  synonyms:
  - --lower-bound-threshold-positive
  args: !SimpleFlagArg
    name: LOWER_BOUND_THRESHOLD_POSITIVE
  optional: true
- !Flag
  description: 'Value of the score threshold to determine when to accept negative
    instances: negative instances with a score higher than the specified value will
    be accepted as candidates. (default: -1)'
  synonyms:
  - --lower-bound-threshold-negative
  args: !SimpleFlagArg
    name: LOWER_BOUND_THRESHOLD_NEGATIVE
  optional: true
- !Flag
  description: 'Value of the score threshold to determine when to accept positive
    instances: positive instances with a score lower than the specified value will
    be accepted as candidates. (default: 1)'
  synonyms:
  - --upper-bound-threshold-positive
  args: !SimpleFlagArg
    name: UPPER_BOUND_THRESHOLD_POSITIVE
  optional: true
- !Flag
  description: 'Value of the score threshold to determine when to accept negative
    instances: negative instances with a score lower than the specified value will
    be accepted as candidates. (default: 1)'
  synonyms:
  - --upper-bound-threshold-negative
  args: !SimpleFlagArg
    name: UPPER_BOUND_THRESHOLD_NEGATIVE
  optional: true
- !Flag
  description: 'If set, activate the fitting procedure for the vectorizer on positive
    instances only. (default: False)'
  synonyms:
  - --fit-vectorizer
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Maximal number of seconds for the duration of the optimization phase.
    After that the procedure is forcefully stopped. A value of -1 means no time limit.
    (default: -1)'
  synonyms:
  - --max-total-time
  args: !SimpleFlagArg
    name: MAX_TOTAL_TIME
  optional: true
- !Flag
  description: 'If set, activate a refinement procedure anfter n_iter/2 steps that
    samples only among the parameters that have previously improved the results. (default:
    False)'
  synonyms:
  - --two-steps-optimization
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'The scoring strategy for evaluating in cross validation the quality
    of a hyper parameter combination. (default: roc_auc)'
  synonyms:
  - --scoring
  args: !ChoiceFlagArg
    choices: !!set
      ? f1
      ? roc_auc
      ? precision
      ? average_precision
      ? f1_macro
      ? f1_weighted
      ? log_loss
      ? accuracy
      ? f1_micro
      ? f1_samples
      ? recall
  optional: true
- !Flag
  description: 'Cross validation size. (default: 10)'
  synonyms:
  - --cv
  args: !SimpleFlagArg
    name: CV
  optional: true
- !Flag
  description: 'Number of bits used to express the graph kernel features. A value
    of 20 corresponds to 2**20=1 million possible features. (default: 20)'
  synonyms:
  - -B
  - --nbits
  args: !SimpleFlagArg
    name: NBITS
  optional: true
- !Flag
  description: 'Random seed. (default: 1)'
  synonyms:
  - -r
  - --random-state
  args: !SimpleFlagArg
    name: RANDOM_STATE
  optional: true
- !Flag
  description: 'Number of cores to use in multiprocessing. (default: 2)'
  synonyms:
  - -j
  - --n-jobs
  args: !SimpleFlagArg
    name: N_JOBS
  optional: true
- !Flag
  description: 'Number of blocks in which to divide the input for the multiprocessing
    elaboration. (default: 8)'
  synonyms:
  - -b
  - --n-blocks
  args: !SimpleFlagArg
    name: N_BLOCKS
  optional: true
- !Flag
  description: 'Number of instances per block for the multiprocessing elaboration.
    (default: None)'
  synonyms:
  - -k
  - -block-size
  args: !SimpleFlagArg
    name: BLOCK_SIZE
  optional: true
- !Flag
  description: 'Number of cores to use in multiprocessing. (default: 4)'
  synonyms:
  - --pre-processor-n-jobs
  args: !SimpleFlagArg
    name: PRE_PROCESSOR_N_JOBS
  optional: true
- !Flag
  description: 'Number of blocks in which to divide the input for the multiprocessing
    elaboration. (default: 10)'
  synonyms:
  - --pre-processor-n-blocks
  args: !SimpleFlagArg
    name: PRE_PROCESSOR_N_BLOCKS
  optional: true
- !Flag
  description: 'Number of instances per block for the multiprocessing elaboration.
    (default: None)'
  synonyms:
  - --pre-processor-block-size
  args: !SimpleFlagArg
    name: PRE_PROCESSOR_BLOCK_SIZE
  optional: true
command:
- model
- fit
parent: &id002 !Command
  positional: []
  named:
  - !Flag
    description: 'Increase output verbosity (default: None)'
    synonyms:
    - -v
    - --verbosity
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: 'If set, do not log on file. (default: False)'
    synonyms:
    - -x
    - --no-logging
    args: !EmptyFlagArg {}
    optional: true
  command:
  - model
  parent:
  subcommands:
  - *id001
  - !Command
    positional: []
    named:
    - !Flag
      description: 'Path tofile containing input for the positive class. (default:
        None)'
      synonyms:
      - -p
      - --positive-input-file
      args: !SimpleFlagArg
        name: POSITIVE_INPUT_FILE
      optional: true
    - !Flag
      description: 'Path to file containing input for the negative class. (default:
        None)'
      synonyms:
      - -n
      - --negative-input-file
      args: !SimpleFlagArg
        name: NEGATIVE_INPUT_FILE
      optional: true
    - !Flag
      description: 'Path to a fit model file. (default: None)'
      synonyms:
      - -m
      - --model-file
      args: !SimpleFlagArg
        name: MODEL_FILE
      optional: true
    - !Flag
      description: 'Path to output directory. (default: out)'
      synonyms:
      - -o
      - --output-dir
      args: !SimpleFlagArg
        name: OUTPUT_DIR_PATH
      optional: true
    - !Flag
      description: "If set, report cross validated performance measures. The model's\
        \ parameters are re-trained in each fold keeping the hyper-parameters of the\
        \ given model. (default: False)"
      synonyms:
      - --cross-validation
      args: !EmptyFlagArg {}
      optional: true
    command:
    - model
    - estimate
    parent: *id002
    subcommands: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: model estimate [-h] -p POSITIVE_INPUT_FILE -n NEGATIVE_INPUT_FILE\
      \ -m\n                      MODEL_FILE [-o OUTPUT_DIR_PATH] [--cross-validation]\n\
      \noptional arguments:\n  -h, --help            show this help message and exit\n\
      \  -p POSITIVE_INPUT_FILE, --positive-input-file POSITIVE_INPUT_FILE\n     \
      \                   Path tofile containing input for the positive class.\n \
      \                       (default: None)\n  -n NEGATIVE_INPUT_FILE, --negative-input-file\
      \ NEGATIVE_INPUT_FILE\n                        Path to file containing input\
      \ for the negative class.\n                        (default: None)\n  -m MODEL_FILE,\
      \ --model-file MODEL_FILE\n                        Path to a fit model file.\
      \ (default: None)\n  -o OUTPUT_DIR_PATH, --output-dir OUTPUT_DIR_PATH\n    \
      \                    Path to output directory. (default: out)\n  --cross-validation\
      \    If set, report cross validated performance measures.\n                \
      \        The model's parameters are re-trained in each fold\n              \
      \          keeping the hyper-parameters of the given model.\n              \
      \          (default: False)\n"
    generated_using: &id003
    - --help
  - !Command
    positional: []
    named:
    - !Flag
      description: 'Path to file containing input. (default: None)'
      synonyms:
      - -i
      - --input-file
      args: !SimpleFlagArg
        name: INPUT_FILE
      optional: true
    - !Flag
      description: 'Path to a fit model file. (default: model)'
      synonyms:
      - -m
      - --model-file
      args: !SimpleFlagArg
        name: MODEL_FILE
      optional: true
    - !Flag
      description: 'Path to output directory. (default: out)'
      synonyms:
      - -o
      - --output-dir
      args: !SimpleFlagArg
        name: OUTPUT_DIR_PATH
      optional: true
    command:
    - model
    - predict
    parent: *id002
    subcommands: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: model predict [-h] -i INPUT_FILE [-m MODEL_FILE] [-o OUTPUT_DIR_PATH]\n\
      \noptional arguments:\n  -h, --help            show this help message and exit\n\
      \  -i INPUT_FILE, --input-file INPUT_FILE\n                        Path to file\
      \ containing input. (default: None)\n  -m MODEL_FILE, --model-file MODEL_FILE\n\
      \                        Path to a fit model file. (default: model)\n  -o OUTPUT_DIR_PATH,\
      \ --output-dir OUTPUT_DIR_PATH\n                        Path to output directory.\
      \ (default: out)\n"
    generated_using: *id003
  - !Command
    positional: []
    named:
    - !Flag
      description: 'Path to file containing input. (default: None)'
      synonyms:
      - -i
      - --input-file
      args: !SimpleFlagArg
        name: INPUT_FILE
      optional: true
    - !Flag
      description: 'Path to a fit model file. (default: model)'
      synonyms:
      - -m
      - --model-file
      args: !SimpleFlagArg
        name: MODEL_FILE
      optional: true
    - !Flag
      description: 'Path to output directory. (default: out)'
      synonyms:
      - -o
      - --output-dir
      args: !SimpleFlagArg
        name: OUTPUT_DIR_PATH
      optional: true
    - !Flag
      description: 'Output file format. (default: MatrixMarket)'
      synonyms:
      - -t
      - --output-format
      args: !ChoiceFlagArg
        choices: !!set
          ? joblib
          ? MatrixMarket
          ? text
          ? numpy
      optional: true
    command:
    - model
    - matrix
    parent: *id002
    subcommands: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: model matrix [-h] -i INPUT_FILE [-m MODEL_FILE] [-o OUTPUT_DIR_PATH]\n\
      \                    [-t {text,numpy,MatrixMarket,joblib}]\n\noptional arguments:\n\
      \  -h, --help            show this help message and exit\n  -i INPUT_FILE, --input-file\
      \ INPUT_FILE\n                        Path to file containing input. (default:\
      \ None)\n  -m MODEL_FILE, --model-file MODEL_FILE\n                        Path\
      \ to a fit model file. (default: model)\n  -o OUTPUT_DIR_PATH, --output-dir\
      \ OUTPUT_DIR_PATH\n                        Path to output directory. (default:\
      \ out)\n  -t {text,numpy,MatrixMarket,joblib}, --output-format {text,numpy,MatrixMarket,joblib}\n\
      \                        Output file format. (default: MatrixMarket)\n"
    generated_using: *id003
  - !Command
    positional: []
    named:
    - !Flag
      description: 'Path to file containing input. (default: None)'
      synonyms:
      - -i
      - --input-file
      args: !SimpleFlagArg
        name: INPUT_FILE
      optional: true
    - !Flag
      description: 'Path to a fit model file. (default: model)'
      synonyms:
      - -m
      - --model-file
      args: !SimpleFlagArg
        name: MODEL_FILE
      optional: true
    - !Flag
      description: 'Path to output directory. (default: out)'
      synonyms:
      - -o
      - --output-dir
      args: !SimpleFlagArg
        name: OUTPUT_DIR_PATH
      optional: true
    - !Flag
      description: 'Output file format. (default: MatrixMarket)'
      synonyms:
      - -t
      - --output-format
      args: !ChoiceFlagArg
        choices: !!set
          ? joblib
          ? MatrixMarket
          ? text
          ? numpy
      optional: true
    command:
    - model
    - feature
    parent: *id002
    subcommands: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: model feature [-h] -i INPUT_FILE [-m MODEL_FILE] [-o OUTPUT_DIR_PATH]\n\
      \                     [-t {text,numpy,MatrixMarket,joblib}]\n\noptional arguments:\n\
      \  -h, --help            show this help message and exit\n  -i INPUT_FILE, --input-file\
      \ INPUT_FILE\n                        Path to file containing input. (default:\
      \ None)\n  -m MODEL_FILE, --model-file MODEL_FILE\n                        Path\
      \ to a fit model file. (default: model)\n  -o OUTPUT_DIR_PATH, --output-dir\
      \ OUTPUT_DIR_PATH\n                        Path to output directory. (default:\
      \ out)\n  -t {text,numpy,MatrixMarket,joblib}, --output-format {text,numpy,MatrixMarket,joblib}\n\
      \                        Output file format. (default: MatrixMarket)\n"
    generated_using: *id003
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag: !Flag
    description: show program's version number and exit
    synonyms:
    - --version
    args: !EmptyFlagArg {}
    optional: true
  help_text: "usage: model [-h] [--version] [-v] [-x]\n             {fit,estimate,predict,matrix,feature}\
    \ ...\n\nExplicit Decomposition with Neighborhood (EDeN) utility program.\nModel\
    \ driver.\n\nExample usage:\n- for fitting a predictive model:\nmodel -vv fit\
    \ --cv 5 --scoring 'f1'  --n-active-learning-iterations 3 --size-negative 50 -p\
    \ pos_train.nx -n neg_train.nx -j 8 -e 20 --model-file mod --output-dir out\n\n\
    -for predicting using a fit model:\nmodel -vv predict -i test.nx --model-file\
    \ out/mod\n\nNote: the current implementation uses as estimator a regularized\
    \ linear model\nwith stochastic  gradient descent (SGD) learning scheme: the gradient\
    \ of the\nloss is estimated each sample at  a time and the model is updated along\
    \ the way\nwith a decreasing strength schedule (aka learning rate). \n\npositional\
    \ arguments:\n  {fit,estimate,predict,matrix,feature}\n                      \
    \  commands\n    fit                 Fit commands\n    estimate            Estimate\
    \ commands\n    predict             Predict commands\n    matrix             \
    \ Matrix commands\n    feature             Feature commands\n\noptional arguments:\n\
    \  -h, --help            show this help message and exit\n  --version        \
    \     show program's version number and exit\n  -v, --verbosity       Increase\
    \ output verbosity (default: None)\n  -x, --no-logging      If set, do not log\
    \ on file. (default: False)\n\nAuthor: Fabrizio Costa\nCopyright: 2015\nLicense:\
    \ GPL\nMaintainer: Fabrizio Costa\nEmail: costa@informatik.uni-freiburg.de\nStatus:\
    \ Production\n\nCite:  Costa, Fabrizio, and Kurt De Grave, 'Fast neighborhood\
    \ subgraph pairwise\ndistance kernel', Proceedings of the 26th International Conference\
    \ on Machine\nLearning. 2010. \n"
  generated_using: *id003
subcommands: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: model fit [-h] -p POSITIVE_INPUT_FILE -n NEGATIVE_INPUT_FILE\n\
  \                 [-o OUTPUT_DIR_PATH] [-m MODEL_FILE] [-e N_ITER]\n           \
  \      [--n-inner-iter-estimator N_INNER_ITER_ESTIMATOR]\n                 [--n-active-learning-iterations\
  \ N_ACTIVE_LEARNING_ITERATIONS]\n                 [--size-positive SIZE_POSITIVE]\n\
  \                 [--size-negative SIZE_NEGATIVE]\n                 [--lower-bound-threshold-positive\
  \ LOWER_BOUND_THRESHOLD_POSITIVE]\n                 [--lower-bound-threshold-negative\
  \ LOWER_BOUND_THRESHOLD_NEGATIVE]\n                 [--upper-bound-threshold-positive\
  \ UPPER_BOUND_THRESHOLD_POSITIVE]\n                 [--upper-bound-threshold-negative\
  \ UPPER_BOUND_THRESHOLD_NEGATIVE]\n                 [--fit-vectorizer] [--max-total-time\
  \ MAX_TOTAL_TIME]\n                 [--two-steps-optimization]\n               \
  \  [--scoring {accuracy,roc_auc,average_precision,f1,f1_micro,f1_macro,f1_weighted,f1_samples,log_loss,precision,recall}]\n\
  \                 [--cv CV] [-B NBITS] [-j N_JOBS] [-b N_BLOCKS]\n             \
  \    [-k BLOCK_SIZE] [--pre-processor-n-jobs PRE_PROCESSOR_N_JOBS]\n           \
  \      [--pre-processor-n-blocks PRE_PROCESSOR_N_BLOCKS]\n                 [--pre-processor-block-size\
  \ PRE_PROCESSOR_BLOCK_SIZE]\n                 [-r RANDOM_STATE]\n\noptional arguments:\n\
  \  -h, --help            show this help message and exit\n  -p POSITIVE_INPUT_FILE,\
  \ --positive-input-file POSITIVE_INPUT_FILE\n                        Path tofile\
  \ containing input for the positive class.\n                        (default: None)\n\
  \  -n NEGATIVE_INPUT_FILE, --negative-input-file NEGATIVE_INPUT_FILE\n         \
  \               Path to file containing input for the negative class.\n        \
  \                (default: None)\n  -o OUTPUT_DIR_PATH, --output-dir OUTPUT_DIR_PATH\n\
  \                        Path to output directory. (default: out)\n  -m MODEL_FILE,\
  \ --model-file MODEL_FILE\n                        Model file name. Note: it will\
  \ be located in the\n                        output directory. (default: model)\n\
  \  -e N_ITER, --n-iter N_ITER\n                        Number of randomly generated\
  \ hyper parameter\n                        configurations tried during the discriminative\
  \ model\n                        optimization. A value of 1 implies using the estimator\n\
  \                        default values. (default: 20)\n  --n-inner-iter-estimator\
  \ N_INNER_ITER_ESTIMATOR\n                        Number of randomly generated hyper\
  \ parameter\n                        configurations tried for the estimator for\
  \ each\n                        parameter configuration of the pre-processor and\n\
  \                        vectorizer during optimization. (default: 5)\n  --n-active-learning-iterations\
  \ N_ACTIVE_LEARNING_ITERATIONS\n                        Number of iterations in\
  \ the active learning cycle. A\n                        value of 0 means to avoid\
  \ active learning. (default:\n                        0)\n  --size-positive SIZE_POSITIVE\n\
  \                        Number of positive instances that have to be sampled\n\
  \                        in the active learning cycle. A value of -1 means to\n\
  \                        use all instances, i.e. not to use active learning for\n\
  \                        the positive instances. (default: -1)\n  --size-negative\
  \ SIZE_NEGATIVE\n                        Number of negative instances that have\
  \ to be sampled\n                        in the active learning cycle. A value of\
  \ -1 means to\n                        use all instances, i.e. not to use active\
  \ learning for\n                        the negative instances. (default: -1)\n\
  \  --lower-bound-threshold-positive LOWER_BOUND_THRESHOLD_POSITIVE\n           \
  \             Value of the score threshold to determine when to\n              \
  \          accept positive instances: positive instances with a\n              \
  \          score higher than the specified value will be accepted\n            \
  \            as candidates. (default: -1)\n  --lower-bound-threshold-negative LOWER_BOUND_THRESHOLD_NEGATIVE\n\
  \                        Value of the score threshold to determine when to\n   \
  \                     accept negative instances: negative instances with a\n   \
  \                     score higher than the specified value will be accepted\n \
  \                       as candidates. (default: -1)\n  --upper-bound-threshold-positive\
  \ UPPER_BOUND_THRESHOLD_POSITIVE\n                        Value of the score threshold\
  \ to determine when to\n                        accept positive instances: positive\
  \ instances with a\n                        score lower than the specified value\
  \ will be accepted\n                        as candidates. (default: 1)\n  --upper-bound-threshold-negative\
  \ UPPER_BOUND_THRESHOLD_NEGATIVE\n                        Value of the score threshold\
  \ to determine when to\n                        accept negative instances: negative\
  \ instances with a\n                        score lower than the specified value\
  \ will be accepted\n                        as candidates. (default: 1)\n  --fit-vectorizer\
  \      If set, activate the fitting procedure for the\n                        vectorizer\
  \ on positive instances only. (default:\n                        False)\n  --max-total-time\
  \ MAX_TOTAL_TIME\n                        Maximal number of seconds for the duration\
  \ of the\n                        optimization phase. After that the procedure is\n\
  \                        forcefully stopped. A value of -1 means no time limit.\n\
  \                        (default: -1)\n  --two-steps-optimization\n           \
  \             If set, activate a refinement procedure anfter\n                 \
  \       n_iter/2 steps that samples only among the parameters\n                \
  \        that have previously improved the results. (default:\n                \
  \        False)\n  --scoring {accuracy,roc_auc,average_precision,f1,f1_micro,f1_macro,f1_weighted,f1_samples,log_loss,precision,recall}\n\
  \                        The scoring strategy for evaluating in cross\n        \
  \                validation the quality of a hyper parameter\n                 \
  \       combination. (default: roc_auc)\n  --cv CV               Cross validation\
  \ size. (default: 10)\n  -B NBITS, --nbits NBITS\n                        Number\
  \ of bits used to express the graph kernel\n                        features. A\
  \ value of 20 corresponds to 2**20=1 million\n                        possible features.\
  \ (default: 20)\n  -r RANDOM_STATE, --random-state RANDOM_STATE\n              \
  \          Random seed. (default: 1)\n\nParallelization:\n  These options define\
  \ the granularity of the multicore parallelization.\n\n  -j N_JOBS, --n-jobs N_JOBS\n\
  \                        Number of cores to use in multiprocessing. (default:\n\
  \                        2)\n  -b N_BLOCKS, --n-blocks N_BLOCKS\n              \
  \          Number of blocks in which to divide the input for the\n             \
  \           multiprocessing elaboration. (default: 8)\n  -k BLOCK_SIZE, -block-size\
  \ BLOCK_SIZE\n                        Number of instances per block for the multiprocessing\n\
  \                        elaboration. (default: None)\n  --pre-processor-n-jobs\
  \ PRE_PROCESSOR_N_JOBS\n                        Number of cores to use in multiprocessing.\
  \ (default:\n                        4)\n  --pre-processor-n-blocks PRE_PROCESSOR_N_BLOCKS\n\
  \                        Number of blocks in which to divide the input for the\n\
  \                        multiprocessing elaboration. (default: 10)\n  --pre-processor-block-size\
  \ PRE_PROCESSOR_BLOCK_SIZE\n                        Number of instances per block\
  \ for the multiprocessing\n                        elaboration. (default: None)\n"
generated_using: *id003
