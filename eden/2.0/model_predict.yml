&id003 !Command
command:
- model
- predict
positional: []
named:
- !Flag
  description: 'Path to file containing input. (default: None)'
  synonyms:
  - -i
  - --input-file
  args: !SimpleFlagArg
    name: INPUT_FILE
  optional: true
- !Flag
  description: 'Path to a fit model file. (default: model)'
  synonyms:
  - -m
  - --model-file
  args: !SimpleFlagArg
    name: MODEL_FILE
  optional: true
- !Flag
  description: "Path to output directory. (default: out)\n"
  synonyms:
  - -o
  - --output-dir
  args: !SimpleFlagArg
    name: OUTPUT_DIR_PATH
  optional: true
parent: &id001 !Command
  command:
  - model
  positional: []
  named:
  - !Flag
    description: 'using a fit model:'
    synonyms:
    - -for
    args: !SimpleFlagArg
      name: predicting
    optional: true
  - !Flag
    description: 'Increase output verbosity (default: None)'
    synonyms:
    - -v
    - --verbosity
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: 'If set, do not log on file. (default: False)'
    synonyms:
    - -x
    - --no-logging
    args: !EmptyFlagArg {}
    optional: true
  parent:
  subcommands:
  - !Command
    command:
    - model
    - matrix
    positional: []
    named:
    - !Flag
      description: 'Path to file containing input. (default: None)'
      synonyms:
      - -i
      - --input-file
      args: !SimpleFlagArg
        name: INPUT_FILE
      optional: true
    - !Flag
      description: 'Path to a fit model file. (default: model)'
      synonyms:
      - -m
      - --model-file
      args: !SimpleFlagArg
        name: MODEL_FILE
      optional: true
    - !Flag
      description: 'Path to output directory. (default: out)'
      synonyms:
      - -o
      - --output-dir
      args: !SimpleFlagArg
        name: OUTPUT_DIR_PATH
      optional: true
    - !Flag
      description: "Output file format. (default: MatrixMarket)\n"
      synonyms:
      - -t
      - --output-format
      args: !ChoiceFlagArg
        choices: !!set
          ? joblib
          ? text
          ? numpy
          ? MatrixMarket
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: model matrix [-h] -i INPUT_FILE [-m MODEL_FILE] [-o OUTPUT_DIR_PATH]\n\
      \                    [-t {text,numpy,MatrixMarket,joblib}]\n\noptional arguments:\n\
      \  -h, --help            show this help message and exit\n  -i INPUT_FILE, --input-file\
      \ INPUT_FILE\n                        Path to file containing input. (default:\
      \ None)\n  -m MODEL_FILE, --model-file MODEL_FILE\n                        Path\
      \ to a fit model file. (default: model)\n  -o OUTPUT_DIR_PATH, --output-dir\
      \ OUTPUT_DIR_PATH\n                        Path to output directory. (default:\
      \ out)\n  -t {text,numpy,MatrixMarket,joblib}, --output-format {text,numpy,MatrixMarket,joblib}\n\
      \                        Output file format. (default: MatrixMarket)\n"
    generated_using: &id002
    - --help
  - !Command
    command:
    - model
    - commands
    positional:
    - !Positional
      description: ''
      position: 0
      name: model
      optional: false
    named:
    - !Flag
      description: ''
      synonyms:
      - -x
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -v
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: ''
      synonyms:
      - -h
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag: !Flag
      description: ''
      synonyms:
      - --version
      args: !EmptyFlagArg {}
      optional: true
    help_text: "/usr/local/lib/python2.7/site-packages/sklearn/cross_validation.py:41:\
      \ DeprecationWarning: This module was deprecated in version 0.18 in favor of\
      \ the model_selection module into which all the refactored classes and functions\
      \ are moved. Also note that the interface of the new CV iterators are different\
      \ from that of this module. This module will be removed in 0.20.\n  \"This module\
      \ will be removed in 0.20.\", DeprecationWarning)\n/usr/local/lib/python2.7/site-packages/sklearn/grid_search.py:42:\
      \ DeprecationWarning: This module was deprecated in version 0.18 in favor of\
      \ the model_selection module into which all the refactored classes and functions\
      \ are moved. This module will be removed in 0.20.\n  DeprecationWarning)\nusage:\
      \ model [-h] [--version] [-v] [-x]\n             {fit,estimate,predict,matrix,feature}\
      \ ...\nmodel: error: invalid choice: 'commands' (choose from 'fit', 'estimate',\
      \ 'predict', 'matrix', 'feature')\n"
    generated_using: *id002
  - !Command
    command:
    - model
    - feature
    positional: []
    named:
    - !Flag
      description: 'Path to file containing input. (default: None)'
      synonyms:
      - -i
      - --input-file
      args: !SimpleFlagArg
        name: INPUT_FILE
      optional: true
    - !Flag
      description: 'Path to a fit model file. (default: model)'
      synonyms:
      - -m
      - --model-file
      args: !SimpleFlagArg
        name: MODEL_FILE
      optional: true
    - !Flag
      description: 'Path to output directory. (default: out)'
      synonyms:
      - -o
      - --output-dir
      args: !SimpleFlagArg
        name: OUTPUT_DIR_PATH
      optional: true
    - !Flag
      description: "Output file format. (default: MatrixMarket)\n"
      synonyms:
      - -t
      - --output-format
      args: !ChoiceFlagArg
        choices: !!set
          ? joblib
          ? text
          ? numpy
          ? MatrixMarket
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: model feature [-h] -i INPUT_FILE [-m MODEL_FILE] [-o OUTPUT_DIR_PATH]\n\
      \                     [-t {text,numpy,MatrixMarket,joblib}]\n\noptional arguments:\n\
      \  -h, --help            show this help message and exit\n  -i INPUT_FILE, --input-file\
      \ INPUT_FILE\n                        Path to file containing input. (default:\
      \ None)\n  -m MODEL_FILE, --model-file MODEL_FILE\n                        Path\
      \ to a fit model file. (default: model)\n  -o OUTPUT_DIR_PATH, --output-dir\
      \ OUTPUT_DIR_PATH\n                        Path to output directory. (default:\
      \ out)\n  -t {text,numpy,MatrixMarket,joblib}, --output-format {text,numpy,MatrixMarket,joblib}\n\
      \                        Output file format. (default: MatrixMarket)\n"
    generated_using: *id002
  - *id003
  - !Command
    command:
    - model
    - estimate
    positional: []
    named:
    - !Flag
      description: "Path tofile containing input for the positive class.\n(default:\
        \ None)"
      synonyms:
      - -p
      - --positive-input-file
      args: !SimpleFlagArg
        name: POSITIVE_INPUT_FILE
      optional: true
    - !Flag
      description: "Path to file containing input for the negative class.\n(default:\
        \ None)"
      synonyms:
      - -n
      - --negative-input-file
      args: !SimpleFlagArg
        name: NEGATIVE_INPUT_FILE
      optional: true
    - !Flag
      description: 'Path to a fit model file. (default: None)'
      synonyms:
      - -m
      - --model-file
      args: !SimpleFlagArg
        name: MODEL_FILE
      optional: true
    - !Flag
      description: 'Path to output directory. (default: out)'
      synonyms:
      - -o
      - --output-dir
      args: !SimpleFlagArg
        name: OUTPUT_DIR_PATH
      optional: true
    - !Flag
      description: "If set, report cross validated performance measures.\nThe model's\
        \ parameters are re-trained in each fold\nkeeping the hyper-parameters of\
        \ the given model.\n(default: False)\n"
      synonyms:
      - --cross-validation
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: model estimate [-h] -p POSITIVE_INPUT_FILE -n NEGATIVE_INPUT_FILE\
      \ -m\n                      MODEL_FILE [-o OUTPUT_DIR_PATH] [--cross-validation]\n\
      \noptional arguments:\n  -h, --help            show this help message and exit\n\
      \  -p POSITIVE_INPUT_FILE, --positive-input-file POSITIVE_INPUT_FILE\n     \
      \                   Path tofile containing input for the positive class.\n \
      \                       (default: None)\n  -n NEGATIVE_INPUT_FILE, --negative-input-file\
      \ NEGATIVE_INPUT_FILE\n                        Path to file containing input\
      \ for the negative class.\n                        (default: None)\n  -m MODEL_FILE,\
      \ --model-file MODEL_FILE\n                        Path to a fit model file.\
      \ (default: None)\n  -o OUTPUT_DIR_PATH, --output-dir OUTPUT_DIR_PATH\n    \
      \                    Path to output directory. (default: out)\n  --cross-validation\
      \    If set, report cross validated performance measures.\n                \
      \        The model's parameters are re-trained in each fold\n              \
      \          keeping the hyper-parameters of the given model.\n              \
      \          (default: False)\n"
    generated_using: *id002
  usage: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag: !Flag
    description: show program's version number and exit
    synonyms:
    - --version
    args: !EmptyFlagArg {}
    optional: true
  help_text: "usage: model [-h] [--version] [-v] [-x]\n             {fit,estimate,predict,matrix,feature}\
    \ ...\n\nExplicit Decomposition with Neighborhood (EDeN) utility program.\nModel\
    \ driver.\n\nExample usage:\n- for fitting a predictive model:\nmodel -vv fit\
    \ --cv 5 --scoring 'f1'  --n-active-learning-iterations 3 --size-negative 50 -p\
    \ pos_train.nx -n neg_train.nx -j 8 -e 20 --model-file mod --output-dir out\n\n\
    -for predicting using a fit model:\nmodel -vv predict -i test.nx --model-file\
    \ out/mod\n\nNote: the current implementation uses as estimator a regularized\
    \ linear model\nwith stochastic  gradient descent (SGD) learning scheme: the gradient\
    \ of the\nloss is estimated each sample at  a time and the model is updated along\
    \ the way\nwith a decreasing strength schedule (aka learning rate). \n\npositional\
    \ arguments:\n  {fit,estimate,predict,matrix,feature}\n                      \
    \  commands\n    fit                 Fit commands\n    estimate            Estimate\
    \ commands\n    predict             Predict commands\n    matrix             \
    \ Matrix commands\n    feature             Feature commands\n\noptional arguments:\n\
    \  -h, --help            show this help message and exit\n  --version        \
    \     show program's version number and exit\n  -v, --verbosity       Increase\
    \ output verbosity (default: None)\n  -x, --no-logging      If set, do not log\
    \ on file. (default: False)\n\nAuthor: Fabrizio Costa\nCopyright: 2015\nLicense:\
    \ GPL\nMaintainer: Fabrizio Costa\nEmail: costa@informatik.uni-freiburg.de\nStatus:\
    \ Production\n\nCite:  Costa, Fabrizio, and Kurt De Grave, 'Fast neighborhood\
    \ subgraph pairwise\ndistance kernel', Proceedings of the 26th International Conference\
    \ on Machine\nLearning. 2010. \n"
  generated_using: *id002
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: model predict [-h] -i INPUT_FILE [-m MODEL_FILE] [-o OUTPUT_DIR_PATH]\n\
  \noptional arguments:\n  -h, --help            show this help message and exit\n\
  \  -i INPUT_FILE, --input-file INPUT_FILE\n                        Path to file\
  \ containing input. (default: None)\n  -m MODEL_FILE, --model-file MODEL_FILE\n\
  \                        Path to a fit model file. (default: model)\n  -o OUTPUT_DIR_PATH,\
  \ --output-dir OUTPUT_DIR_PATH\n                        Path to output directory.\
  \ (default: out)\n"
generated_using: *id002
