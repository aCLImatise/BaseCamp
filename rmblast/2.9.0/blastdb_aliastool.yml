!Command
positional: []
named: []
command:
- blastdb_aliastool
parent:
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "USAGE\n  blastdb_aliastool [-h] [-help] [-gi_file_in input_file]\n   \
  \ [-gi_file_out output_file] [-db dbname] [-dbtype molecule_type]\n    [-title database_title]\
  \ [-gilist input_file] [-seqidlist input_file]\n    [-out database_name] [-dblist\
  \ database_names] [-dblist_file file_name]\n    [-vdblist vdb_names] [-vdblist_file\
  \ file_name]\n    [-num_volumes positive_integer] [-seqid_file_in input_file]\n\
  \    [-seqid_title seqid_title] [-seqid_file_out output_file]\n    [-seqid_db dbname]\
  \ [-seqid_dbtype molecule_type]\n    [-seqid_file_info seqid_file_info] [-logfile\
  \ File_Name] [-version]\n\nDESCRIPTION\n   Application to create BLAST database\
  \ aliases, version 2.9.0+\n   \n   This application has three modes of operation:\n\
  \   \n   1) GI file conversion:\n      Converts a text file containing GIs (one\
  \ per line) to a more efficient\n      binary format. This can be provided as an\
  \ argument to the -gilist option\n      of the BLAST search command line binaries\
  \ or to the -gilist option of\n      this program to create an alias file for a\
  \ BLAST database (see below).\n   \n   2) Alias file creation (restricting with\
  \ GI List or Sequence ID List):\n      Creates an alias for a BLAST database and\
  \ a GI or ID list which\n      restricts this database. This is useful if one often\
  \ searches a subset\n      of a database (e.g., based on organism or a curated list).\
  \ The alias\n      file makes the search appear as if one were searching a regular\
  \ BLAST\n      database rather than the subset of one.\n   \n   3) Alias file creation\
  \ (aggregating BLAST databases):\n      Creates an alias for multiple BLAST databases.\
  \ All databases must be of\n      the same molecule type (no validation is done).\
  \ The relevant options are\n      -dblist and -num_volumes.\n\nUse '-help' to print\
  \ detailed descriptions of command line arguments\n========================================================================\n\
  \nError:  (CArgException::eInvalidArg) Unknown argument: \"-help\"\n"
generated_using:
- --help
