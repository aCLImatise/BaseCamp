class: CommandLineTool
id: ../../../../home/ubuntu/BiocondaCli/haphpipe_build_tree_NG.cwl
inputs:
- id: seqs
  doc: Input alignment in FASTA or PHYLIP format
  type: string
  inputBinding:
    prefix: --seqs
- id: in_type
  doc: 'File format: FASTA or PHYLIP (Default is FASTA)'
  type: string
  inputBinding:
    prefix: --in_type
- id: output_name
  doc: Run name for trees
  type: string
  inputBinding:
    prefix: --output_name
- id: outdir
  doc: 'Output directory (default: .)'
  type: string
  inputBinding:
    prefix: --outdir
- id: model
  doc: Substitution model OR path to partition file
  type: string
  inputBinding:
    prefix: --model
- id: all
  doc: 'Run bootstrap search and find best ML tree (default: False)'
  type: boolean
  inputBinding:
    prefix: --all
- id: branch_length
  doc: 'Branch length estimation mode: linked, scaled, unlinked (partitioned analysis
    only)'
  type: string
  inputBinding:
    prefix: --branch_length
- id: con_sense
  doc: 'Consensus tree building options: STRICT, MR, or MRE'
  type: string
  inputBinding:
    prefix: --consense
- id: rand_tree
  doc: Start from a random topology
  type: string
  inputBinding:
    prefix: --rand_tree
- id: pars_tree
  doc: Start from a tree generated by the parsimony-based randomized stepwise addition
    algorithm
  type: string
  inputBinding:
    prefix: --pars_tree
- id: user_tree
  doc: Load a custom starting tree from the NEWICK file
  type: string
  inputBinding:
    prefix: --user_tree
- id: search
  doc: 'Find best scoring ML tree (default) (default: False)'
  type: boolean
  inputBinding:
    prefix: --search
- id: search_one_random
  doc: 'Find best scoring ML tree with 1 random tree (default: False)'
  type: boolean
  inputBinding:
    prefix: --search_1random
- id: constraint_tree
  doc: Specify a constraint tree to e.g. enforce monophyly of certain groups
  type: string
  inputBinding:
    prefix: --constraint_tree
- id: out_group
  doc: Outgroup(s) for tree
  type: string
  inputBinding:
    prefix: --outgroup
- id: bs_converge
  doc: 'A posteriori bootstrap convergence test (default: False)'
  type: boolean
  inputBinding:
    prefix: --bsconverge
- id: bs_msa
  doc: 'Generate bootstrap replicate alignments (default: False)'
  type: boolean
  inputBinding:
    prefix: --bs_msa
- id: bs_trees
  doc: Number of bootstrap trees OR autoMRE
  type: string
  inputBinding:
    prefix: --bs_trees
- id: bs_tree_cut_off
  doc: Change the bootstopping cutoff value to make the test more or less stringent
  type: string
  inputBinding:
    prefix: --bs_tree_cutoff
- id: bs_metric
  doc: 'Options: tbe or fbp,tbe'
  type: string
  inputBinding:
    prefix: --bs_metric
- id: bootstrap
  doc: 'Run non-parametric bootstrap analysis (default: False)'
  type: boolean
  inputBinding:
    prefix: --bootstrap
- id: check
  doc: 'Check alignment file and remove any columns consisting entirely of gaps (default:
    False)'
  type: boolean
  inputBinding:
    prefix: --check
- id: log
  doc: 'Options for output verbosity: ERROR, WARNING, RESULT, INFO, PROGRESS, VERBOSE,
    or DEBUG'
  type: string
  inputBinding:
    prefix: --log
- id: log_lh
  doc: 'Compute log-likelihood of a given tree without any optimization (default:
    False)'
  type: boolean
  inputBinding:
    prefix: --loglh
- id: terrace
  doc: 'Check whether a tree lies on a phylogenetic terrace (default: False)'
  type: boolean
  inputBinding:
    prefix: --terrace
- id: seed
  doc: 'Seed for random numbers (default: 12345)'
  type: string
  inputBinding:
    prefix: --seed
- id: redo
  doc: 'Run even if there are existing files with the same name (use with caution!)
    (default: False)'
  type: boolean
  inputBinding:
    prefix: --redo
- id: keep_tmp
  doc: 'Keep temporary directory (default: False)'
  type: boolean
  inputBinding:
    prefix: --keep_tmp
- id: quiet
  doc: 'Do not write output to console (silence stdout and stderr) (default: False)'
  type: boolean
  inputBinding:
    prefix: --quiet
- id: log_file
  doc: Append console output to this file
  type: string
  inputBinding:
    prefix: --logfile
- id: n_cpu
  doc: 'Number of CPU to use (default: 1)'
  type: string
  inputBinding:
    prefix: --ncpu
- id: debug
  doc: 'Print commands but do not run (default: False)'
  type: boolean
  inputBinding:
    prefix: --debug
outputs: []
cwlVersion: v1.1
baseCommand:
- haphpipe
- build_tree_NG
