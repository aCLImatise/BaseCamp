!Command
command:
- hgGcPercent
positional:
- !Positional
  description: ''
  position: 0
  name: database
  optional: false
- !Positional
  description: ''
  position: 1
  name: nibDir
  optional: false
named:
- !Flag
  description: '- change windows size (default 20000)'
  synonyms:
  - -win
  args: !SimpleFlagArg
    name: size
  optional: true
- !Flag
  description: '- do not load mysql table - create bed file'
  synonyms:
  - -noLoad
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '- output to <filename> (stdout OK) (implies -noLoad)'
  synonyms:
  - -file
  args: !SimpleFlagArg
    name: filename
  optional: true
- !Flag
  description: '- process only chrN from the nibDir'
  synonyms:
  - -chr
  args: !SimpleFlagArg
    name: chrN
  optional: true
- !Flag
  description: '- ignore randome chromosomes from the nibDir'
  synonyms:
  - -noRandom
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '- do not display ... progress during processing'
  synonyms:
  - -noDots
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '- process gaps correctly (default: gaps are not counted as GC)'
  synonyms:
  - -doGaps
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '- output wiggle ascii data ready to pipe to wigEncode'
  synonyms:
  - -wigOut
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '- overlap windows by N bases (default 0)'
  synonyms:
  - -overlap
  args: !SimpleFlagArg
    name: N
  optional: true
- !Flag
  description: '- display details to stderr during processing'
  synonyms:
  - -verbose
  args: !SimpleFlagArg
    name: N
  optional: true
- !Flag
  description: Read in a bed file for GC content in specific regions and write to
    bedRegionsOut
  synonyms:
  - -bedRegionIn
  args: !SimpleFlagArg
    name: input.bed
  optional: true
- !Flag
  description: Write a bed file of GC content in specific regions from bedRegionIn
  synonyms:
  - -bedRegionOut
  args: !SimpleFlagArg
    name: output.bed
  optional: true
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "hgGcPercent - Calculate GC Percentage in 20kb windows\nusage:\n   hgGcPercent\
  \ [options] database nibDir\n     nibDir can be a .2bit file, a directory that contains\
  \ a\n     database.2bit file, or a directory that contains *.nib files.\n     Loads\
  \ gcPercent table with counts from sequence.\noptions:\n   -win=<size> - change\
  \ windows size (default 20000)\n   -noLoad - do not load mysql table - create bed\
  \ file\n   -file=<filename> - output to <filename> (stdout OK) (implies -noLoad)\n\
  \   -chr=<chrN> - process only chrN from the nibDir\n   -noRandom - ignore randome\
  \ chromosomes from the nibDir\n   -noDots - do not display ... progress during processing\n\
  \   -doGaps - process gaps correctly (default: gaps are not counted as GC)\n   -wigOut\
  \ - output wiggle ascii data ready to pipe to wigEncode\n   -overlap=N - overlap\
  \ windows by N bases (default 0)\n   -verbose=N - display details to stderr during\
  \ processing\n   -bedRegionIn=input.bed   Read in a bed file for GC content in specific\
  \ regions and write to bedRegionsOut\n   -bedRegionOut=output.bed Write a bed file\
  \ of GC content in specific regions from bedRegionIn\n\nexample:\n  calculate GC\
  \ percent in 5 base windows using a 2bit assembly (dp2):\n    hgGcPercent -wigOut\
  \ -doGaps -win=5 -file=stdout -verbose=0 \\\n      dp2 /cluster/data/dp2 \\\n  \
  \  | wigEncode stdin gc5Base.wig gc5Base.wib\n"
generated_using: []
