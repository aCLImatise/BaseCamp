!Command
positional: []
named:
- !Flag
  description: Output errors reads even if they can't be corrected, maintaining paired
    end reads.
  synonyms:
  - -u
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Output only the original read headers without correction messages
  synonyms:
  - --headers
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Output a log of all corrections into *.log as 'quality position new_nt
    old_nt'
  synonyms:
  - --log
  args: !EmptyFlagArg {}
  optional: true
command:
- correct
parent:
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "USAGE:  correct [options]\n\nCorrect sequencing errors in fastq file provided\
  \ with -r\nand output trusted and corrected reads to\n<fastq-prefix>.cor.fastq.\n\
  \nOptions:\n -r <file>\n    Fastq file of reads\n -f <file>\n    File containing\
  \ fastq file names, one per line or\n    two per line for paired end reads.\n -z\n\
  \    Write output files as gzipped.\n -k <num>\n    K-mer size to correct.\n -m\
  \ <file>\n    File containing kmer counts in format `seq\tcount`.\n    Can be gzipped.\n\
  \ -b <file>\n    File containing saved bithash.\n -c <num>\n    Separate trusted/untrusted\
  \ kmers at cutoff <num>\n -a <file>\n    Separate trusted/untrusted kmers as a function\
  \ of AT\n    content, with cutoffs found in <file>, one per line\n -p <num>\n  \
  \  Use <num> openMP threads\n -l <num>=30\n    Return only reads corrected and/or\
  \ trimmed to >= <num>\n    bp\n -q <num>\n    Quality value ascii scale, generally\
  \ 64 or 33. If not\n    specified, it will guess.\n -t <num>=3\n    Use BWA trim\
  \ parameter <num>\n -u\n    Output errors reads even if they can't be corrected,\n\
  \    maintaining paired end reads.\n --headers\n    Output only the original read\
  \ headers without\n    correction messages\n --log\n    Output a log of all corrections\
  \ into *.log as\n    'quality position new_nt old_nt'\n\n"
generated_using:
- -h
