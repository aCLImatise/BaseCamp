&id004 !Command
command:
- mixcr
- slice
positional:
- !Positional
  description: ''
  position: 0
  name: scr
  optional: false
- !Positional
  description: ''
  position: 1
  name: slice
  optional: false
named:
- !Flag
  description: "Overwrite output file if it is corrupted or if it was generated from\n\
    different input file or with different parameters. -f / --force-overwrite\noverrides\
    \ this option."
  synonyms:
  - --overwrite-if-required
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Verbose warning messages.
  synonyms:
  - --verbose
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Force overwrite of output file(s).
  synonyms:
  - -f
  - --force-overwrite
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: List of read (for .vdjca) / clone (for .clns/.clna) ids to export.
  synonyms:
  - -i
  - --id
  args: !SimpleFlagArg
    name: ids
  optional: true
- !Flag
  description: Suppress all warning messages.
  synonyms:
  - -nw
  - --no-warnings
  args: !EmptyFlagArg {}
  optional: true
parent: &id001 !Command
  command:
  - mixcr
  positional: []
  named:
  - !Flag
    description: ''
    synonyms:
    - -v
    args: !EmptyFlagArg {}
    optional: true
  parent:
  subcommands:
  - !Command
    command:
    - mixcr
    - exportClones
    positional:
    - !Positional
      description: ''
      position: 0
      name: scr
      optional: false
    - !Positional
      description: ''
      position: 1
      name: exportClones
      optional: false
    named:
    - !Flag
      description: Verbose warning messages.
      synonyms:
      - --verbose
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export amino acid sequence of specified gene feature
      synonyms:
      - -aaFeature
      args: !SimpleFlagArg
        name: PARAM
      optional: true
    - !Flag
      description: "Export amino acid sequence of specified gene feature using letters\
        \ from\ngermline (marked lowercase) for uncovered regions"
      synonyms:
      - -aaFeatureImputed
      args: !SimpleFlagArg
        name: PARAM
      optional: true
    - !Flag
      description: Extract amino acid mutations for specific gene feature
      synonyms:
      - -aaMutations
      args: !SimpleFlagArg
        name: PARAM
      optional: true
    - !Flag
      description: "PARAM\nExtract amino acid mutations for specific gene feature\
        \ relative to another\nfeature."
      synonyms:
      - -aaMutationsRelative
      args: !SimpleFlagArg
        name: PARAM
      optional: true
    - !Flag
      description: Export average quality of specified gene feature
      synonyms:
      - -avrgFeatureQuality
      args: !SimpleFlagArg
        name: PARAM
      optional: true
    - !Flag
      description: "Limit export to specific chain (e.g. TRA or IGH) (fractions will\
        \ be\nrecalculated)"
      synonyms:
      - -c
      - --chains
      args: !SimpleFlagArg
        name: chains
      optional: true
    - !Flag
      description: Export best C alignment
      synonyms:
      - -cAlignment
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export all C alignments
      synonyms:
      - -cAlignments
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: C best alignment identity percent
      synonyms:
      - -cBestIdentityPercent
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export all C gene family anmes (e.g. TRBV12 for TRBV12-3*00)
      synonyms:
      - -cFamilies
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export best C hit family name (e.g. TRBV12 for TRBV12-3*00)
      synonyms:
      - -cFamily
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export best C hit gene name (e.g. TRBV12-3 for TRBV12-3*00)
      synonyms:
      - -cGene
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export all C gene names (e.g. TRBV12-3 for TRBV12-3*00)
      synonyms:
      - -cGenes
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export best C hit
      synonyms:
      - -cHit
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export all C hits
      synonyms:
      - -cHits
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export score for best C hit
      synonyms:
      - -cHitScore
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export all C hits with score
      synonyms:
      - -cHitsWithScore
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: C alignment identity percents
      synonyms:
      - -cIdentityPercents
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Unique clone identifier
      synonyms:
      - -cloneId
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export clone count
      synonyms:
      - -count
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export best D alignment
      synonyms:
      - -dAlignment
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export all D alignments
      synonyms:
      - -dAlignments
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: D best alignment identity percent
      synonyms:
      - -dBestIdentityPercent
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Outputs a list of default reference points (like CDR2Begin, FR4End,\
        \ etc.\nsee documentation for the full list and formatting)"
      synonyms:
      - -defaultAnchorPoints
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export all D gene family anmes (e.g. TRBV12 for TRBV12-3*00)
      synonyms:
      - -dFamilies
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export best D hit family name (e.g. TRBV12 for TRBV12-3*00)
      synonyms:
      - -dFamily
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export best D hit gene name (e.g. TRBV12-3 for TRBV12-3*00)
      synonyms:
      - -dGene
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export all D gene names (e.g. TRBV12-3 for TRBV12-3*00)
      synonyms:
      - -dGenes
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export best D hit
      synonyms:
      - -dHit
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export all D hits
      synonyms:
      - -dHits
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export score for best D hit
      synonyms:
      - -dHitScore
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export all D hits with score
      synonyms:
      - -dHitsWithScore
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: D alignment identity percents
      synonyms:
      - -dIdentityPercents
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Force overwrite of output file(s).
      synonyms:
      - -f
      - --force-overwrite
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export clone fraction
      synonyms:
      - -fraction
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export best J alignment
      synonyms:
      - -jAlignment
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export all J alignments
      synonyms:
      - -jAlignments
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: J best alignment identity percent
      synonyms:
      - -jBestIdentityPercent
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export all J gene family anmes (e.g. TRBV12 for TRBV12-3*00)
      synonyms:
      - -jFamilies
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export best J hit family name (e.g. TRBV12 for TRBV12-3*00)
      synonyms:
      - -jFamily
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export best J hit gene name (e.g. TRBV12-3 for TRBV12-3*00)
      synonyms:
      - -jGene
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export all J gene names (e.g. TRBV12-3 for TRBV12-3*00)
      synonyms:
      - -jGenes
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export best J hit
      synonyms:
      - -jHit
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export all J hits
      synonyms:
      - -jHits
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export score for best J hit
      synonyms:
      - -jHitScore
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export all J hits with score
      synonyms:
      - -jHitsWithScore
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: J alignment identity percents
      synonyms:
      - -jIdentityPercents
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export length of specified gene feature.
      synonyms:
      - -lengthOf
      args: !SimpleFlagArg
        name: PARAM
      optional: true
    - !Flag
      description: Filter clones by minimal clone read count
      synonyms:
      - -m
      - --minimal-clone-count
      args: !SimpleFlagArg
        name: minCount
      optional: true
    - !Flag
      description: Export minimal quality of specified gene feature
      synonyms:
      - -minFeatureQuality
      args: !SimpleFlagArg
        name: PARAM
      optional: true
    - !Flag
      description: "Detailed list of nucleotide and corresponding amino acid mutations.\
        \ Format\n<nt_mutation>:<aa_mutation_individual>:<aa_mutation_cumulative>,\
        \ where\n<aa_mutation_individual> is an expected amino acid mutation given\
        \ no\nother mutations have occurred, and <aa_mutation_cumulative> amino acid\n\
        mutation is the observed amino acid mutation combining effect from all\nother.\
        \ WARNING: format may change in following versions."
      synonyms:
      - -mutationsDetailed
      args: !SimpleFlagArg
        name: PARAM
      optional: true
    - !Flag
      description: "PARAM\nDetailed list of nucleotide and corresponding amino acid\
        \ mutations written,\npositions relative to specified gene feature. Format\
        \ <nt_mutation>:\n<aa_mutation_individual>:<aa_mutation_cumulative>, where\n\
        <aa_mutation_individual> is an expected amino acid mutation given no\nother\
        \ mutations have occurred, and <aa_mutation_cumulative> amino acid\nmutation\
        \ is the observed amino acid mutation combining effect from all\nother. WARNING:\
        \ format may change in following versions."
      synonyms:
      - -mutationsDetailedRelative
      args: !SimpleFlagArg
        name: PARAM
      optional: true
    - !Flag
      description: Output only first N records
      synonyms:
      - -n
      - --limit
      args: !SimpleFlagArg
        name: limit
      optional: true
    - !Flag
      description: Export nucleotide sequence of specified gene feature
      synonyms:
      - -nFeature
      args: !SimpleFlagArg
        name: PARAM
      optional: true
    - !Flag
      description: "Export nucleotide sequence of specified gene feature using letters\
        \ from\ngermline (marked lowercase) for uncovered regions"
      synonyms:
      - -nFeatureImputed
      args: !SimpleFlagArg
        name: PARAM
      optional: true
    - !Flag
      description: "Extract nucleotide mutations for specific gene feature; relative\
        \ to\ngermline sequence."
      synonyms:
      - -nMutations
      args: !SimpleFlagArg
        name: PARAM
      optional: true
    - !Flag
      description: "PARAM\nExtract nucleotide mutations for specific gene feature\
        \ relative to another\nfeature."
      synonyms:
      - -nMutationsRelative
      args: !SimpleFlagArg
        name: PARAM
      optional: true
    - !Flag
      description: Suppress all warning messages.
      synonyms:
      - -nw
      - --no-warnings
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "clones with out-of-frame clone sequences (fractions will be\n\
        recalculated)"
      synonyms:
      - -o
      - --filter-out-of-frames
      args: !SimpleFlagArg
        name: Exclude
      optional: true
    - !Flag
      description: "Specify preset of export fields (possible values: 'full', 'min';\
        \ 'full' by\ndefault)"
      synonyms:
      - -p
      - --preset
      args: !SimpleFlagArg
        name: preset
      optional: true
    - !Flag
      description: Specify preset file of export fields
      synonyms:
      - -pf
      - --preset-file
      args: !SimpleFlagArg
        name: presetFile
      optional: true
    - !Flag
      description: "Export position of specified reference point inside referencesequences\n\
        (clonal sequence / read sequence)."
      synonyms:
      - -positionInReferenceOf
      args: !SimpleFlagArg
        name: PARAM
      optional: true
    - !Flag
      description: "Export position of specified reference point inside targetsequences\
        \ (clonal\nsequence / read sequence)."
      synonyms:
      - -positionOf
      args: !SimpleFlagArg
        name: PARAM
      optional: true
    - !Flag
      description: Filter clones by minimal clone fraction
      synonyms:
      - -q
      - --minimal-clone-fraction
      args: !SimpleFlagArg
        name: minFraction
      optional: true
    - !Flag
      description: Export quality string of specified gene feature
      synonyms:
      - -qFeature
      args: !SimpleFlagArg
        name: PARAM
      optional: true
    - !Flag
      description: Exclude sequences containing stop codons (fractions will be recalculated)
      synonyms:
      - -t
      - --filter-stops
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export aligned sequence (target) qualities, separated with comma
      synonyms:
      - -targetQualities
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export number of targets
      synonyms:
      - -targets
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export aligned sequences (targets), separated with comma
      synonyms:
      - -targetSequences
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Top chains
      synonyms:
      - -topChains
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Output column headers with spaces.
      synonyms:
      - -v
      - --with-spaces
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export best V alignment
      synonyms:
      - -vAlignment
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export all V alignments
      synonyms:
      - -vAlignments
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: V best alignment identity percent
      synonyms:
      - -vBestIdentityPercent
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export all V gene family anmes (e.g. TRBV12 for TRBV12-3*00)
      synonyms:
      - -vFamilies
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export best V hit family name (e.g. TRBV12 for TRBV12-3*00)
      synonyms:
      - -vFamily
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export best V hit gene name (e.g. TRBV12-3 for TRBV12-3*00)
      synonyms:
      - -vGene
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export all V gene names (e.g. TRBV12-3 for TRBV12-3*00)
      synonyms:
      - -vGenes
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export best V hit
      synonyms:
      - -vHit
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export all V hits
      synonyms:
      - -vHits
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export score for best V hit
      synonyms:
      - -vHitScore
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export all V hits with score
      synonyms:
      - -vHitsWithScore
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: V alignment identity percents
      synonyms:
      - -vIdentityPercents
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -fotv
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "ERROR: -h / --help is not supported: use `mixcr help [command]` for\
      \ command usage.\nUsage: scr exportClones [-fotv] [--verbose] [-cAlignment]\
      \ [-cAlignments] [-cBestIdentityPercent]\n                        [-cFamilies]\
      \ [-cFamily] [-cGene] [-cGenes] [-chains] [-cHit] [-cHits]\n               \
      \         [-cHitScore] [-cHitsWithScore] [-cIdentityPercents] [-cloneId] [-count]\n\
      \                        [-dAlignment] [-dAlignments] [-dBestIdentityPercent]\
      \ [-defaultAnchorPoints]\n                        [-dFamilies] [-dFamily] [-dGene]\
      \ [-dGenes] [-dHit] [-dHits] [-dHitScore]\n                        [-dHitsWithScore]\
      \ [-dIdentityPercents] [-fraction] [-jAlignment]\n                        [-jAlignments]\
      \ [-jBestIdentityPercent] [-jFamilies] [-jFamily] [-jGene]\n               \
      \         [-jGenes] [-jHit] [-jHits] [-jHitScore] [-jHitsWithScore]\n      \
      \                  [-jIdentityPercents] [-nw] [-targetQualities] [-targets]\
      \ [-targetSequences]\n                        [-topChains] [-vAlignment] [-vAlignments]\
      \ [-vBestIdentityPercent]\n                        [-vFamilies] [-vFamily] [-vGene]\
      \ [-vGenes] [-vHit] [-vHits] [-vHitScore]\n                        [-vHitsWithScore]\
      \ [-vIdentityPercents] [-c <chains>] [-m <minCount>] [-n\n                 \
      \       <limit>] [-p <preset>] [-pf <presetFile>] [-q <minFraction>] [-aaFeature\n\
      \                        PARAM]... [-aaFeatureImputed PARAM]... [-aaMutations\
      \ PARAM]...\n                        [-avrgFeatureQuality PARAM]... [-lengthOf\
      \ PARAM]... [-minFeatureQuality\n                        PARAM]... [-mutationsDetailed\
      \ PARAM]... [-nFeature PARAM]...\n                        [-nFeatureImputed\
      \ PARAM]... [-nMutations PARAM]... [-positionInReferenceOf\n               \
      \         PARAM]... [-positionOf PARAM]... [-qFeature PARAM]... [-aaMutationsRelative\n\
      \                        PARAM PARAM]... [-mutationsDetailedRelative PARAM PARAM]...\n\
      \                        [-nMutationsRelative PARAM PARAM]... <in> [<out>]\n\
      Export assembled clones into tab delimited file.\n      <in>               \
      \    input_file\n      [<out>]                [output_file]\n      --verbose\
      \              Verbose warning messages.\n      -aaFeature PARAM       Export\
      \ amino acid sequence of specified gene feature\n      -aaFeatureImputed PARAM\n\
      \                             Export amino acid sequence of specified gene feature\
      \ using letters from\n                               germline (marked lowercase)\
      \ for uncovered regions\n      -aaMutations PARAM     Extract amino acid mutations\
      \ for specific gene feature\n      -aaMutationsRelative PARAM PARAM\n      \
      \                       Extract amino acid mutations for specific gene feature\
      \ relative to another\n                               feature.\n      -avrgFeatureQuality\
      \ PARAM\n                             Export average quality of specified gene\
      \ feature\n  -c, --chains <chains>      Limit export to specific chain (e.g.\
      \ TRA or IGH) (fractions will be\n                               recalculated)\n\
      \      -cAlignment            Export best C alignment\n      -cAlignments  \
      \         Export all C alignments\n      -cBestIdentityPercent  C best alignment\
      \ identity percent\n      -cFamilies             Export all C gene family anmes\
      \ (e.g. TRBV12 for TRBV12-3*00)\n      -cFamily               Export best C\
      \ hit family name (e.g. TRBV12 for TRBV12-3*00)\n      -cGene              \
      \   Export best C hit gene name (e.g. TRBV12-3 for TRBV12-3*00)\n      -cGenes\
      \                Export all C gene names (e.g. TRBV12-3 for TRBV12-3*00)\n \
      \     -chains                Chains\n      -cHit                  Export best\
      \ C hit\n      -cHits                 Export all C hits\n      -cHitScore  \
      \           Export score for best C hit\n      -cHitsWithScore        Export\
      \ all C hits with score\n      -cIdentityPercents     C alignment identity percents\n\
      \      -cloneId               Unique clone identifier\n      -count        \
      \         Export clone count\n      -dAlignment            Export best D alignment\n\
      \      -dAlignments           Export all D alignments\n      -dBestIdentityPercent\
      \  D best alignment identity percent\n      -defaultAnchorPoints   Outputs a\
      \ list of default reference points (like CDR2Begin, FR4End, etc.\n         \
      \                      see documentation for the full list and formatting)\n\
      \      -dFamilies             Export all D gene family anmes (e.g. TRBV12 for\
      \ TRBV12-3*00)\n      -dFamily               Export best D hit family name (e.g.\
      \ TRBV12 for TRBV12-3*00)\n      -dGene                 Export best D hit gene\
      \ name (e.g. TRBV12-3 for TRBV12-3*00)\n      -dGenes                Export\
      \ all D gene names (e.g. TRBV12-3 for TRBV12-3*00)\n      -dHit            \
      \      Export best D hit\n      -dHits                 Export all D hits\n \
      \     -dHitScore             Export score for best D hit\n      -dHitsWithScore\
      \        Export all D hits with score\n      -dIdentityPercents     D alignment\
      \ identity percents\n  -f, --force-overwrite      Force overwrite of output\
      \ file(s).\n      -fraction              Export clone fraction\n      -jAlignment\
      \            Export best J alignment\n      -jAlignments           Export all\
      \ J alignments\n      -jBestIdentityPercent  J best alignment identity percent\n\
      \      -jFamilies             Export all J gene family anmes (e.g. TRBV12 for\
      \ TRBV12-3*00)\n      -jFamily               Export best J hit family name (e.g.\
      \ TRBV12 for TRBV12-3*00)\n      -jGene                 Export best J hit gene\
      \ name (e.g. TRBV12-3 for TRBV12-3*00)\n      -jGenes                Export\
      \ all J gene names (e.g. TRBV12-3 for TRBV12-3*00)\n      -jHit            \
      \      Export best J hit\n      -jHits                 Export all J hits\n \
      \     -jHitScore             Export score for best J hit\n      -jHitsWithScore\
      \        Export all J hits with score\n      -jIdentityPercents     J alignment\
      \ identity percents\n      -lengthOf PARAM        Export length of specified\
      \ gene feature.\n  -m, --minimal-clone-count <minCount>\n                  \
      \           Filter clones by minimal clone read count\n      -minFeatureQuality\
      \ PARAM\n                             Export minimal quality of specified gene\
      \ feature\n      -mutationsDetailed PARAM\n                             Detailed\
      \ list of nucleotide and corresponding amino acid mutations. Format\n      \
      \                         <nt_mutation>:<aa_mutation_individual>:<aa_mutation_cumulative>,\
      \ where\n                               <aa_mutation_individual> is an expected\
      \ amino acid mutation given no\n                               other mutations\
      \ have occurred, and <aa_mutation_cumulative> amino acid\n                 \
      \              mutation is the observed amino acid mutation combining effect\
      \ from all\n                               other. WARNING: format may change\
      \ in following versions.\n      -mutationsDetailedRelative PARAM PARAM\n   \
      \                          Detailed list of nucleotide and corresponding amino\
      \ acid mutations written,\n                               positions relative\
      \ to specified gene feature. Format <nt_mutation>:\n                       \
      \        <aa_mutation_individual>:<aa_mutation_cumulative>, where\n        \
      \                       <aa_mutation_individual> is an expected amino acid mutation\
      \ given no\n                               other mutations have occurred, and\
      \ <aa_mutation_cumulative> amino acid\n                               mutation\
      \ is the observed amino acid mutation combining effect from all\n          \
      \                     other. WARNING: format may change in following versions.\n\
      \  -n, --limit <limit>        Output only first N records\n      -nFeature PARAM\
      \        Export nucleotide sequence of specified gene feature\n      -nFeatureImputed\
      \ PARAM Export nucleotide sequence of specified gene feature using letters from\n\
      \                               germline (marked lowercase) for uncovered regions\n\
      \      -nMutations PARAM      Extract nucleotide mutations for specific gene\
      \ feature; relative to\n                               germline sequence.\n\
      \      -nMutationsRelative PARAM PARAM\n                             Extract\
      \ nucleotide mutations for specific gene feature relative to another\n     \
      \                          feature.\n      -nw, --no-warnings     Suppress all\
      \ warning messages.\n  -o, --filter-out-of-frames Exclude clones with out-of-frame\
      \ clone sequences (fractions will be\n                               recalculated)\n\
      \  -p, --preset <preset>      Specify preset of export fields (possible values:\
      \ 'full', 'min'; 'full' by\n                               default)\n      -pf,\
      \ --preset-file <presetFile>\n                             Specify preset file\
      \ of export fields\n      -positionInReferenceOf PARAM\n                   \
      \          Export position of specified reference point inside referencesequences\n\
      \                               (clonal sequence / read sequence).\n      -positionOf\
      \ PARAM      Export position of specified reference point inside targetsequences\
      \ (clonal\n                               sequence / read sequence).\n  -q,\
      \ --minimal-clone-fraction <minFraction>\n                             Filter\
      \ clones by minimal clone fraction\n      -qFeature PARAM        Export quality\
      \ string of specified gene feature\n  -t, --filter-stops         Exclude sequences\
      \ containing stop codons (fractions will be recalculated)\n      -targetQualities\
      \       Export aligned sequence (target) qualities, separated with comma\n \
      \     -targets               Export number of targets\n      -targetSequences\
      \       Export aligned sequences (targets), separated with comma\n      -topChains\
      \             Top chains\n  -v, --with-spaces          Output column headers\
      \ with spaces.\n      -vAlignment            Export best V alignment\n     \
      \ -vAlignments           Export all V alignments\n      -vBestIdentityPercent\
      \  V best alignment identity percent\n      -vFamilies             Export all\
      \ V gene family anmes (e.g. TRBV12 for TRBV12-3*00)\n      -vFamily        \
      \       Export best V hit family name (e.g. TRBV12 for TRBV12-3*00)\n      -vGene\
      \                 Export best V hit gene name (e.g. TRBV12-3 for TRBV12-3*00)\n\
      \      -vGenes                Export all V gene names (e.g. TRBV12-3 for TRBV12-3*00)\n\
      \      -vHit                  Export best V hit\n      -vHits              \
      \   Export all V hits\n      -vHitScore             Export score for best V\
      \ hit\n      -vHitsWithScore        Export all V hits with score\n      -vIdentityPercents\
      \     V alignment identity percents\n"
    generated_using: &id002
    - --help
  - !Command
    command:
    - mixcr
    - alignmentsDiff
    positional:
    - !Positional
      description: ''
      position: 0
      name: scr
      optional: false
    - !Positional
      description: ''
      position: 1
      name: alignmentsDiff
      optional: false
    - !Positional
      description: ''
      position: 2
      name: geneFeatureToMatch
      optional: true
    - !Positional
      description: ''
      position: 3
      name: onlySecond
      optional: true
    - !Positional
      description: ''
      position: 4
      name: in1
      optional: false
    - !Positional
      description: ''
      position: 5
      name: in2
      optional: false
    - !Positional
      description: ''
      position: 6
      name: report
      optional: true
    named:
    - !Flag
      description: Suppress all warning messages.
      synonyms:
      - -nw
      - --no-warnings
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Verbose warning messages.
      synonyms:
      - --verbose
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Force overwrite of output file(s).
      synonyms:
      - -f
      - --force-overwrite
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: output for alignments contained only in the first .vdjca file
      synonyms:
      - -o1
      - --only-in-first
      args: !SimpleFlagArg
        name: onlyFirst
      optional: true
    - !Flag
      description: output for alignments contained only in the second .vdjca file
      synonyms:
      - -o2
      - --only-in-second
      args: !SimpleFlagArg
        name: onlySecond
      optional: true
    - !Flag
      description: "output for alignments from the first file that are different from\
        \ those\nalignments in the second file"
      synonyms:
      - -d1
      - --diff-from-first
      args: !SimpleFlagArg
        name: diff1
      optional: true
    - !Flag
      description: "output for alignments from the second file that are different\
        \ from those\nalignments in the first file"
      synonyms:
      - -d2
      - --diff-from-second
      args: !SimpleFlagArg
        name: diff2
      optional: true
    - !Flag
      description: Specifies a gene feature to compare
      synonyms:
      - -g
      - --gene-feature
      args: !SimpleFlagArg
        name: geneFeatureToMatch
      optional: true
    - !Flag
      description: "Number of top hits to search for a match\n"
      synonyms:
      - -l
      - --top-hits-level
      args: !SimpleFlagArg
        name: hitsCompareLevel
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "ERROR: -h / --help is not supported: use `mixcr help [command]` for\
      \ command usage.\nUsage: scr alignmentsDiff [-f] [--verbose] [-nw] [-d1 <diff1>]\
      \ [-d2 <diff2>] [-g\n                          <geneFeatureToMatch>] [-l <hitsCompareLevel>]\
      \ [-o1 <onlyFirst>] [-o2\n                          <onlySecond>] <in1> <in2>\
      \ [<report>]\nCalculates the difference between two .vdjca files.\n      <in1>\
      \                input_file1\n      <in2>                input_file2\n     \
      \ [<report>]           report\n      -nw, --no-warnings   Suppress all warning\
      \ messages.\n      --verbose            Verbose warning messages.\n  -f, --force-overwrite\
      \    Force overwrite of output file(s).\n      -o1, --only-in-first <onlyFirst>\n\
      \                           output for alignments contained only in the first\
      \ .vdjca file\n      -o2, --only-in-second <onlySecond>\n                  \
      \         output for alignments contained only in the second .vdjca file\n \
      \     -d1, --diff-from-first <diff1>\n                           output for\
      \ alignments from the first file that are different from those\n           \
      \                  alignments in the second file\n      -d2, --diff-from-second\
      \ <diff2>\n                           output for alignments from the second\
      \ file that are different from those\n                             alignments\
      \ in the first file\n  -g, --gene-feature <geneFeatureToMatch>\n           \
      \                Specifies a gene feature to compare\n  -l, --top-hits-level\
      \ <hitsCompareLevel>\n                           Number of top hits to search\
      \ for a match\n"
    generated_using: *id002
  - !Command
    command:
    - mixcr
    - exportAlignmentsForClones
    positional:
    - !Positional
      description: ''
      position: 0
      name: scr
      optional: false
    - !Positional
      description: ''
      position: 1
      name: exportAlignmentsForClones
      optional: false
    - !Positional
      description: ''
      position: 2
      name: ids
      optional: true
    named:
    - !Flag
      description: '[<ids>...]      [cloneId1 [cloneId2 [cloneId3]]]'
      synonyms:
      - --id
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Overwrite output file if it is corrupted or if it was generated\
        \ from\ndifferent input file or with different parameters. -f / --force-overwrite\n\
        overrides this option."
      synonyms:
      - --overwrite-if-required
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Verbose warning messages.
      synonyms:
      - --verbose
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Force overwrite of output file(s).
      synonyms:
      - -f
      - --force-overwrite
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Suppress all warning messages.
      synonyms:
      - -nw
      - --no-warnings
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "ERROR: -h / --help is not supported: use `mixcr help [command]` for\
      \ command usage.\nUsage: scr exportAlignmentsForClones [-f] [--overwrite-if-required]\
      \ [--verbose] [-nw] [--id\n                                     [<ids>...]]...\
      \ <in> <in> <out> <out>\nExport alignments for particular clones from \"clones\
      \ & alignments\" (*.clna) file.\n      <in>                 input file\n   \
      \   <in>                 input_file.clna\n      <out>                output\
      \ file\n      <out>                [output_file.vdjca[.gz]\n      --id [<ids>...]\
      \      [cloneId1 [cloneId2 [cloneId3]]]\n      --overwrite-if-required\n   \
      \                        Overwrite output file if it is corrupted or if it was\
      \ generated from\n                             different input file or with\
      \ different parameters. -f / --force-overwrite\n                           \
      \  overrides this option.\n      --verbose            Verbose warning messages.\n\
      \  -f, --force-overwrite    Force overwrite of output file(s).\n      -nw, --no-warnings\
      \   Suppress all warning messages.\n"
    generated_using: *id002
  - !Command
    command:
    - mixcr
    - sortAlignments
    positional:
    - !Positional
      description: ''
      position: 0
      name: scr
      optional: false
    - !Positional
      description: ''
      position: 1
      name: sortAlignments
      optional: false
    - !Positional
      description: ''
      position: 2
      name: in
      optional: false
    - !Positional
      description: ''
      position: 3
      name: out
      optional: false
    named:
    - !Flag
      description: "Overwrite output file if it is corrupted or if it was generated\
        \ from\ndifferent input file or with different parameters. -f / --force-overwrite\n\
        overrides this option."
      synonyms:
      - --overwrite-if-required
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Verbose warning messages.
      synonyms:
      - --verbose
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Force overwrite of output file(s).
      synonyms:
      - -f
      - --force-overwrite
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Suppress all warning messages.
      synonyms:
      - -nw
      - --no-warnings
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "ERROR: -h / --help is not supported: use `mixcr help [command]` for\
      \ command usage.\nUsage: scr sortAlignments [-f] [--overwrite-if-required] [--verbose]\
      \ [-nw] <in> <out>\nSort alignments in vdjca file by read id.\n      <in>  \
      \               input file\n      <out>                output file\n      --overwrite-if-required\n\
      \                           Overwrite output file if it is corrupted or if it\
      \ was generated from\n                             different input file or with\
      \ different parameters. -f / --force-overwrite\n                           \
      \  overrides this option.\n      --verbose            Verbose warning messages.\n\
      \  -f, --force-overwrite    Force overwrite of output file(s).\n      -nw, --no-warnings\
      \   Suppress all warning messages.\n"
    generated_using: *id002
  - !Command
    command:
    - mixcr
    - assemble
    positional:
    - !Positional
      description: ''
      position: 0
      name: scr
      optional: false
    - !Positional
      description: ''
      position: 1
      name: assemble
      optional: false
    - !Positional
      description: ''
      position: 2
      name: assemblerParametersName
      optional: true
    named:
    - !Flag
      description: "Overwrite output file if it is corrupted or if it was generated\
        \ from\ndifferent input file or with different parameters. -f / --force-overwrite\n\
        overrides this option."
      synonyms:
      - --overwrite-if-required
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Verbose warning messages.
      synonyms:
      - --verbose
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "If this option is specified, output file will be written in \"\
        Clones &\nAlignments\" format (*.clna), containing clones and all corresponding\n\
        alignments. This file then can be used to build wider contigs for clonal\n\
        sequence and extract original reads for each clone (if\n-OsaveOriginalReads=true\
        \ was use on 'align' stage)."
      synonyms:
      - -a
      - --write-alignments
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Force overwrite of output file(s).
      synonyms:
      - -f
      - --force-overwrite
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: JSON formatted report file
      synonyms:
      - -j
      - --json-report
      args: !SimpleFlagArg
        name: jsonReport
      optional: true
    - !Flag
      description: Suppress all warning messages.
      synonyms:
      - -nw
      - --no-warnings
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: <String=String>       Overrides default parameter values.
      synonyms:
      - -O
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Clone assembling parameters
      synonyms:
      - -p
      - --parameters
      args: !SimpleFlagArg
        name: assemblerParametersName
      optional: true
    - !Flag
      description: "Report file (human readable version, see -j / --json-report for\
        \ machine\nreadable report)"
      synonyms:
      - -r
      - --report
      args: !SimpleFlagArg
        name: reportFile
      optional: true
    - !Flag
      description: Processing threads
      synonyms:
      - -t
      - --threads
      args: !SimpleFlagArg
        name: threads
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -af
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "ERROR: -h / --help is not supported: use `mixcr help [command]` for\
      \ command usage.\nUsage: scr assemble [-af] [--overwrite-if-required] [--verbose]\
      \ [-nw] [-j <jsonReport>] [-p\n                    <assemblerParametersName>]\
      \ [-r <reportFile>] [-t <threads>] [-O\n                    <String=String>]...\
      \ <in> <out>\nAssemble clones.\n      <in>                  input file\n   \
      \   <out>                 output file\n      --overwrite-if-required\n     \
      \                       Overwrite output file if it is corrupted or if it was\
      \ generated from\n                              different input file or with\
      \ different parameters. -f / --force-overwrite\n                           \
      \   overrides this option.\n      --verbose             Verbose warning messages.\n\
      \  -a, --write-alignments    If this option is specified, output file will be\
      \ written in \"Clones &\n                              Alignments\" format (*.clna),\
      \ containing clones and all corresponding\n                              alignments.\
      \ This file then can be used to build wider contigs for clonal\n           \
      \                   sequence and extract original reads for each clone (if\n\
      \                              -OsaveOriginalReads=true was use on 'align' stage).\n\
      \  -f, --force-overwrite     Force overwrite of output file(s).\n  -j, --json-report\
      \ <jsonReport>\n                            JSON formatted report file\n   \
      \   -nw, --no-warnings    Suppress all warning messages.\n  -O  <String=String>\
      \       Overrides default parameter values.\n  -p, --parameters <assemblerParametersName>\n\
      \                            Clone assembling parameters\n  -r, --report <reportFile>\
      \ Report file (human readable version, see -j / --json-report for machine\n\
      \                              readable report)\n  -t, --threads <threads> \
      \  Processing threads\n"
    generated_using: *id002
  - !Command
    command:
    - mixcr
    - clonesDiff
    positional:
    - !Positional
      description: ''
      position: 0
      name: scr
      optional: false
    - !Positional
      description: ''
      position: 1
      name: clonesDiff
      optional: false
    - !Positional
      description: ''
      position: 2
      name: in1
      optional: false
    - !Positional
      description: ''
      position: 3
      name: in2
      optional: false
    - !Positional
      description: ''
      position: 4
      name: report
      optional: true
    named:
    - !Flag
      description: Verbose warning messages.
      synonyms:
      - --verbose
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Use C gene in clone comparison (include it as a clone key along\
        \ with a clone\nsequence)."
      synonyms:
      - -c
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Force overwrite of output file(s).
      synonyms:
      - -f
      - --force-overwrite
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Use J gene in clone comparison (include it as a clone key along\
        \ with a clone\nsequence)."
      synonyms:
      - -j
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Suppress all warning messages.
      synonyms:
      - -nw
      - --no-warnings
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Use V gene in clone comparison (include it as a clone key along\
        \ with a clone\nsequence).\n"
      synonyms:
      - -v
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -cfjv
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "ERROR: -h / --help is not supported: use `mixcr help [command]` for\
      \ command usage.\nUsage: scr clonesDiff [-cfjv] [--verbose] [-nw] <in1> <in2>\
      \ [<report>]\nCalculates the difference between two .clns files.\n      <in1>\
      \                input1.clns\n      <in2>                input2.clns\n     \
      \ [<report>]           [report]\n      --verbose            Verbose warning\
      \ messages.\n  -c                       Use C gene in clone comparison (include\
      \ it as a clone key along with a clone\n                             sequence).\n\
      \  -f, --force-overwrite    Force overwrite of output file(s).\n  -j       \
      \                Use J gene in clone comparison (include it as a clone key along\
      \ with a clone\n                             sequence).\n      -nw, --no-warnings\
      \   Suppress all warning messages.\n  -v                       Use V gene in\
      \ clone comparison (include it as a clone key along with a clone\n         \
      \                    sequence).\n"
    generated_using: *id002
  - !Command
    command:
    - mixcr
    - exportAlignmentsPretty
    positional:
    - !Positional
      description: -nw, --no-warnings     Suppress all warning messages.
      position: 0
      name: outputted
      optional: false
    named:
    - !Flag
      description: Custom filter
      synonyms:
      - --filter
      args: !SimpleFlagArg
        name: filter
      optional: true
    - !Flag
      description: Verbose warning messages.
      synonyms:
      - --verbose
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Output full gene sequence
      synonyms:
      - -a
      - --gene
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Limit number of alignments before filtering
      synonyms:
      - -b
      - --limit-before
      args: !SimpleFlagArg
        name: limitBefore
      optional: true
    - !Flag
      description: Filter export to a specific protein chain gene (e.g. TRA or IGH).
      synonyms:
      - -c
      - --chains
      args: !SimpleFlagArg
        name: chain
      optional: true
    - !Flag
      description: Print descriptions
      synonyms:
      - -d
      - --descriptions
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Output only alignments where CDR3 exactly equals to given sequence
      synonyms:
      - -e
      - --cdr3-equals
      args: !SimpleFlagArg
        name: cdr3Equals
      optional: true
    - !Flag
      description: Force overwrite of output file(s).
      synonyms:
      - -f
      - --force-overwrite
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Output only alignments which contain a corresponding gene feature
      synonyms:
      - -g
      - --feature
      args: !SimpleFlagArg
        name: feature
      optional: true
    - !Flag
      description: List of read ids to export
      synonyms:
      - -i
      - --read-ids
      args: !SimpleFlagArg
        name: ids
      optional: true
    - !Flag
      description: Limit number of filtered alignments; no more than N alignments
        will be
      synonyms:
      - -n
      - --limit
      args: !SimpleFlagArg
        name: limitAfter
      optional: true
    - !Flag
      description: Output only alignments where target read contains a given substring
      synonyms:
      - -r
      - --read-contains
      args: !SimpleFlagArg
        name: readContains
      optional: true
    - !Flag
      description: Number of output alignments to skip
      synonyms:
      - -s
      - --skip
      args: !SimpleFlagArg
        name: skipAfter
      optional: true
    - !Flag
      description: Output only top hits
      synonyms:
      - -t
      - --top
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -nw
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -adft
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "ERROR: -h / --help is not supported: use `mixcr help [command]` for\
      \ command usage.\nUsage: scr exportAlignmentsPretty [-adft] [--verbose] [-nw]\
      \ [--filter <filter>] [-b <limitBefore>]\n                                 \
      \ [-c <chain>] [-e <cdr3Equals>] [-g <feature>] [-n <limitAfter>]\n        \
      \                          [-r <readContains>] [-s <skipAfter>] [-i <ids>]...\
      \ <in> [<out>]\nExport verbose information about alignments.\n      <in>   \
      \                input_file\n      [<out>]                [output_file]\n  \
      \    --filter <filter>      Custom filter\n      --verbose              Verbose\
      \ warning messages.\n  -a, --gene                 Output full gene sequence\n\
      \  -b, --limit-before <limitBefore>\n                             Limit number\
      \ of alignments before filtering\n  -c, --chains <chain>       Filter export\
      \ to a specific protein chain gene (e.g. TRA or IGH).\n  -d, --descriptions\
      \         Print descriptions\n  -e, --cdr3-equals <cdr3Equals>\n           \
      \                  Output only alignments where CDR3 exactly equals to given\
      \ sequence\n  -f, --force-overwrite      Force overwrite of output file(s).\n\
      \  -g, --feature <feature>    Output only alignments which contain a corresponding\
      \ gene feature\n  -i, --read-ids <ids>       List of read ids to export\n  -n,\
      \ --limit <limitAfter>   Limit number of filtered alignments; no more than N\
      \ alignments will be\n                               outputted\n      -nw, --no-warnings\
      \     Suppress all warning messages.\n  -r, --read-contains <readContains>\n\
      \                             Output only alignments where target read contains\
      \ a given substring\n  -s, --skip <skipAfter>     Number of output alignments\
      \ to skip\n  -t, --top                  Output only top hits\n"
    generated_using: *id002
  - &id003 !Command
    command:
    - mixcr
    - analyze
    positional: []
    named: []
    parent: *id001
    subcommands:
    - !Command
      command:
      - mixcr
      - analyze
      - help
      positional:
      - !Positional
        description: ''
        position: 0
        name: scr
        optional: false
      - !Positional
        description: ''
        position: 1
        name: analyze
        optional: false
      - !Positional
        description: ''
        position: 2
        name: help
        optional: false
      - !Positional
        description: ''
        position: 3
        name: COMMAND...
        optional: true
      named: []
      parent: *id003
      subcommands: []
      usage: []
      help_flag: !Flag
        description: Show usage help for the help command and exit.
        synonyms:
        - -h
        - --help
        args: !EmptyFlagArg {}
        optional: true
      usage_flag:
      version_flag:
      help_text: "Displays help information about the specified command\n\nUsage:\
        \ scr analyze help [-h] [COMMAND...]\n\nWhen no COMMAND is given, the usage\
        \ help for the main command is displayed.\nIf a COMMAND is specified, the\
        \ help for that command is shown.\n\n      [COMMAND...]   The COMMAND to display\
        \ the usage help message for.\n  -h, --help         Show usage help for the\
        \ help command and exit.\n"
      generated_using: *id002
    - !Command
      command:
      - mixcr
      - analyze
      - amplicon
      positional:
      - !Positional
        description: 'NOTE: this will substantially increase analysis time.'
        position: 0
        name: data.
        optional: false
      - !Positional
        description: --adapters <adapters> Presence of PCR primers and/or adapter
          sequences. If sequences of primers
        position: 1
        name: c-primers
        optional: false
      named:
      - !Flag
        description: '[-r <report>] -s <species>'
        synonyms:
        - --starting-material
        args: !SimpleFlagArg
          name: startingMaterial
        optional: true
      - !Flag
        description: Suppress all warning messages.
        synonyms:
        - -nw
        - --no-warnings
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: Verbose warning messages.
        synonyms:
        - --verbose
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: Force overwrite of output file(s).
        synonyms:
        - -f
        - --force-overwrite
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "Species (organism), as specified in library file or taxon id.\n\
          Possible values: hs, HomoSapiens, musmusculus, mmu, hsa, 9606, 10090 etc."
        synonyms:
        - -s
        - --species
        args: !SimpleFlagArg
          name: species
        optional: true
      - !Flag
        description: Export germline segments
        synonyms:
        - --impute-germline-on-export
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "Filter out-of-frame sequences and clonotypes with stop-codons\
          \ in clonal\nsequence export"
        synonyms:
        - --only-productive
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: Assemble longest possible sequences from input data. Useful for
          shotgun-like
        synonyms:
        - --contig-assembly
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: Do not export clonotypes to tab-delimited file.
        synonyms:
        - --no-export
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: Report file path
        synonyms:
        - -r
        - --report
        args: !SimpleFlagArg
          name: report
        optional: true
      - !Flag
        description: "Additional parameters for align step specified with double quotes\
          \ (e.g\n--align \"--limit 1000\" --align \"-OminSumScore=100\" etc."
        synonyms:
        - --align
        args: !SimpleFlagArg
          name: alignParameters
        optional: true
      - !Flag
        description: "Additional parameters for assemble step specified with double\
          \ quotes (e.g\n--assemble \"-OassemblingFeatures=[V5UTR+L1+L2+FR1,FR3+CDR3]\"\
          \ --assemble\n\"-ObadQualityThreshold=0\" etc."
        synonyms:
        - --assemble
        args: !SimpleFlagArg
          name: assembleParameters
        optional: true
      - !Flag
        description: Additional parameters for assemble contigs step specified with
          double quotes
        synonyms:
        - --assembleContigs
        args: !SimpleFlagArg
          name: assembleContigParameters
        optional: true
      - !Flag
        description: "Additional parameters for exportClones step specified with double\
          \ quotes (e.\ng --export \"-p full\" --export \"-cloneId\" etc."
        synonyms:
        - --export
        args: !SimpleFlagArg
          name: exportParameters
        optional: true
      - !Flag
        description: Skip TCR alignments extension
        synonyms:
        - --do-not-extend-alignments
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "Receptor type. Possible values: tcr, bcr, xcr, tra, trb, trd,\
          \ trg, igh, igk,\nigl"
        synonyms:
        - --receptor-type
        args: !SimpleFlagArg
          name: chains
        optional: true
      - !Flag
        description: "5'-end of the library. Possible values: no-v-primers, v-primers"
        synonyms:
        - --5-end
        args: !SimpleFlagArg
          name: 5End
        optional: true
      - !Flag
        description: "3'-end of the library. Possible values: j-primers, j-c-intron-primers,"
        synonyms:
        - --3-end
        args: !SimpleFlagArg
          name: 3End
        optional: true
      - !Flag
        description: "MiXCR will use only reads covering the whole target region;\
          \ reads which\npartially cover selected region will be dropped during clonotype\
          \ assembly.\nAll non-CDR3 options require long high-quality paired-end data.\
          \ See https:\n//mixcr.readthedocs.io/en/master/geneFeatures.html for details.\n"
        synonyms:
        - --region-of-interest
        args: !SimpleFlagArg
          name: regionOfInterest
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "ERROR: -h / --help is not supported: use `mixcr help [command]`\
        \ for command usage.\nUsage: scr analyze amplicon [-f] [--contig-assembly]\
        \ [--do-not-extend-alignments]\n                            [--impute-germline-on-export]\
        \ [--no-export] [--only-productive]\n                            [--verbose]\
        \ [-nw] --3-end <3End> --5-end <5End> --adapters <adapters>\n            \
        \                [--receptor-type <chains>] [--region-of-interest <regionOfInterest>]\n\
        \                            --starting-material <startingMaterial> [-r <report>]\
        \ -s <species>\n                            [--align <alignParameters>]...\
        \ [--assemble <assembleParameters>]...\n                            [--assembleContigs\
        \ <assembleContigParameters>]... [--export\n                            <exportParameters>]...\
        \ [<inOut>...]\nAnalyze targeted TCR/IG library amplification (5'RACE, Amplicon,\
        \ Multiplex, etc).\n      [<inOut>...]          input_file1 [input_file2]\
        \ analysisOutputName\n      -nw, --no-warnings    Suppress all warning messages.\n\
        \      --verbose             Verbose warning messages.\n  -f, --force-overwrite\
        \     Force overwrite of output file(s).\n  -s, --species <species>   Species\
        \ (organism), as specified in library file or taxon id.\n                \
        \            Possible values: hs, HomoSapiens, musmusculus, mmu, hsa, 9606,\
        \ 10090 etc.\n      --impute-germline-on-export\n                        \
        \    Export germline segments\n      --only-productive     Filter out-of-frame\
        \ sequences and clonotypes with stop-codons in clonal\n                  \
        \            sequence export\n      --contig-assembly     Assemble longest\
        \ possible sequences from input data. Useful for shotgun-like\n          \
        \                    data.\n                            NOTE: this will substantially\
        \ increase analysis time.\n      --no-export           Do not export clonotypes\
        \ to tab-delimited file.\n  -r, --report <report>     Report file path\n \
        \     --align <alignParameters>\n                            Additional parameters\
        \ for align step specified with double quotes (e.g\n                     \
        \         --align \"--limit 1000\" --align \"-OminSumScore=100\" etc.\n  \
        \    --assemble <assembleParameters>\n                            Additional\
        \ parameters for assemble step specified with double quotes (e.g\n       \
        \                       --assemble \"-OassemblingFeatures=[V5UTR+L1+L2+FR1,FR3+CDR3]\"\
        \ --assemble\n                              \"-ObadQualityThreshold=0\" etc.\n\
        \      --assembleContigs <assembleContigParameters>\n                    \
        \        Additional parameters for assemble contigs step specified with double\
        \ quotes\n      --export <exportParameters>\n                            Additional\
        \ parameters for exportClones step specified with double quotes (e.\n    \
        \                          g --export \"-p full\" --export \"-cloneId\" etc.\n\
        \      --do-not-extend-alignments\n                            Skip TCR alignments\
        \ extension\n      --receptor-type <chains>\n                            Receptor\
        \ type. Possible values: tcr, bcr, xcr, tra, trb, trd, trg, igh, igk,\n  \
        \                            igl\n      --starting-material <startingMaterial>\n\
        \                            Starting material. Possible values: rna, dna\n\
        \      --5-end <5End>        5'-end of the library. Possible values: no-v-primers,\
        \ v-primers\n      --3-end <3End>        3'-end of the library. Possible values:\
        \ j-primers, j-c-intron-primers,\n                              c-primers\n\
        \      --adapters <adapters> Presence of PCR primers and/or adapter sequences.\
        \ If sequences of primers\n                              used for PCR or adapters\
        \ are present in sequencing data, it may influence\n                     \
        \         the accuracy of V, J and C gene segments identification and CDR3\
        \ mapping.\n                              Possible values: adapters-present,\
        \ no-adapters\n      --region-of-interest <regionOfInterest>\n           \
        \                 MiXCR will use only reads covering the whole target region;\
        \ reads which\n                              partially cover selected region\
        \ will be dropped during clonotype assembly.\n                           \
        \   All non-CDR3 options require long high-quality paired-end data. See https:\n\
        \                              //mixcr.readthedocs.io/en/master/geneFeatures.html\
        \ for details.\n"
      generated_using: *id002
    - !Command
      command:
      - mixcr
      - analyze
      - shotgun
      positional:
      - !Positional
        description: 'NOTE: this will substantially increase analysis time.'
        position: 0
        name: data.
        optional: false
      named:
      - !Flag
        description: Suppress all warning messages.
        synonyms:
        - -nw
        - --no-warnings
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: Verbose warning messages.
        synonyms:
        - --verbose
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: Force overwrite of output file(s).
        synonyms:
        - -f
        - --force-overwrite
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "Species (organism), as specified in library file or taxon id.\n\
          Possible values: hs, HomoSapiens, musmusculus, mmu, hsa, 9606, 10090 etc."
        synonyms:
        - -s
        - --species
        args: !SimpleFlagArg
          name: species
        optional: true
      - !Flag
        description: Export germline segments
        synonyms:
        - --impute-germline-on-export
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "Filter out-of-frame sequences and clonotypes with stop-codons\
          \ in clonal\nsequence export"
        synonyms:
        - --only-productive
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: Assemble longest possible sequences from input data. Useful for
          shotgun-like
        synonyms:
        - --contig-assembly
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: Do not export clonotypes to tab-delimited file.
        synonyms:
        - --no-export
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: Report file path
        synonyms:
        - -r
        - --report
        args: !SimpleFlagArg
          name: report
        optional: true
      - !Flag
        description: "Additional parameters for align step specified with double quotes\
          \ (e.g\n--align \"--limit 1000\" --align \"-OminSumScore=100\" etc."
        synonyms:
        - --align
        args: !SimpleFlagArg
          name: alignParameters
        optional: true
      - !Flag
        description: "Additional parameters for assemblePartial step specified with\
          \ double quotes\n(e.g --assemblePartial \"--overlappedOnly\" --assemblePartial\
          \ \"-OkOffset=0\"\netc."
        synonyms:
        - --assemblePartial
        args: !SimpleFlagArg
          name: assemblePartialParameters
        optional: true
      - !Flag
        description: "Additional parameters for extend step specified with double\
          \ quotes (e.g\n--extend \"--chains TRB\" --extend \"--quality 0\" etc."
        synonyms:
        - --extend
        args: !SimpleFlagArg
          name: extendAlignmentsParameters
        optional: true
      - !Flag
        description: "Additional parameters for assemble step specified with double\
          \ quotes (e.g\n--assemble \"-OassemblingFeatures=[V5UTR+L1+L2+FR1,FR3+CDR3]\"\
          \ --assemble\n\"-ObadQualityThreshold=0\" etc."
        synonyms:
        - --assemble
        args: !SimpleFlagArg
          name: assembleParameters
        optional: true
      - !Flag
        description: Additional parameters for assemble contigs step specified with
          double quotes
        synonyms:
        - --assembleContigs
        args: !SimpleFlagArg
          name: assembleContigParameters
        optional: true
      - !Flag
        description: "Additional parameters for exportClones step specified with double\
          \ quotes (e.\ng --export \"-p full\" --export \"-cloneId\" etc."
        synonyms:
        - --export
        args: !SimpleFlagArg
          name: exportParameters
        optional: true
      - !Flag
        description: Number of rounds of assemblePartial
        synonyms:
        - --assemble-partial-rounds
        args: !SimpleFlagArg
          name: nAssemblePartialRounds
        optional: true
      - !Flag
        description: Skip TCR alignments extension
        synonyms:
        - --do-not-extend-alignments
        args: !EmptyFlagArg {}
        optional: true
      - !Flag
        description: "Receptor type. Possible values: tcr, bcr, xcr, tra, trb, trd,\
          \ trg, igh, igk,\nigl"
        synonyms:
        - --receptor-type
        args: !SimpleFlagArg
          name: chains
        optional: true
      - !Flag
        description: "Starting material. Possible values: rna, dna\n"
        synonyms:
        - --starting-material
        args: !SimpleFlagArg
          name: startingMaterial
        optional: true
      parent: *id003
      subcommands: []
      usage: []
      help_flag:
      usage_flag:
      version_flag:
      help_text: "ERROR: -h / --help is not supported: use `mixcr help [command]`\
        \ for command usage.\nUsage: scr analyze shotgun [-f] [--contig-assembly]\
        \ [--do-not-extend-alignments]\n                           [--impute-germline-on-export]\
        \ [--no-export] [--only-productive]\n                           [--verbose]\
        \ [-nw] [--assemble-partial-rounds <nAssemblePartialRounds>]\n           \
        \                [--receptor-type <chains>] --starting-material <startingMaterial>\
        \ [-r\n                           <report>] -s <species> [--align <alignParameters>]...\
        \ [--assemble\n                           <assembleParameters>]... [--assembleContigs\n\
        \                           <assembleContigParameters>]... [--assemblePartial\n\
        \                           <assemblePartialParameters>]... [--export <exportParameters>]...\n\
        \                           [--extend <extendAlignmentsParameters>]... [<inOut>...]\n\
        Analyze random-fragmented data (like RNA-Seq, Exome-Seq, etc). This pipeline\
        \ assumes the data\ncontain no adapter / primer sequences. Adapter trimming\
        \ must be performed for the data containing\nany artificial sequence parts\
        \ (e.g. single-cell / molecular-barcoded data).\n      [<inOut>...]      \
        \    input_file1 [input_file2] analysisOutputName\n      -nw, --no-warnings\
        \    Suppress all warning messages.\n      --verbose             Verbose warning\
        \ messages.\n  -f, --force-overwrite     Force overwrite of output file(s).\n\
        \  -s, --species <species>   Species (organism), as specified in library file\
        \ or taxon id.\n                            Possible values: hs, HomoSapiens,\
        \ musmusculus, mmu, hsa, 9606, 10090 etc.\n      --impute-germline-on-export\n\
        \                            Export germline segments\n      --only-productive\
        \     Filter out-of-frame sequences and clonotypes with stop-codons in clonal\n\
        \                              sequence export\n      --contig-assembly  \
        \   Assemble longest possible sequences from input data. Useful for shotgun-like\n\
        \                              data.\n                            NOTE: this\
        \ will substantially increase analysis time.\n      --no-export          \
        \ Do not export clonotypes to tab-delimited file.\n  -r, --report <report>\
        \     Report file path\n      --align <alignParameters>\n                \
        \            Additional parameters for align step specified with double quotes\
        \ (e.g\n                              --align \"--limit 1000\" --align \"\
        -OminSumScore=100\" etc.\n      --assemblePartial <assemblePartialParameters>\n\
        \                            Additional parameters for assemblePartial step\
        \ specified with double quotes\n                              (e.g --assemblePartial\
        \ \"--overlappedOnly\" --assemblePartial \"-OkOffset=0\"\n               \
        \               etc.\n      --extend <extendAlignmentsParameters>\n      \
        \                      Additional parameters for extend step specified with\
        \ double quotes (e.g\n                              --extend \"--chains TRB\"\
        \ --extend \"--quality 0\" etc.\n      --assemble <assembleParameters>\n \
        \                           Additional parameters for assemble step specified\
        \ with double quotes (e.g\n                              --assemble \"-OassemblingFeatures=[V5UTR+L1+L2+FR1,FR3+CDR3]\"\
        \ --assemble\n                              \"-ObadQualityThreshold=0\" etc.\n\
        \      --assembleContigs <assembleContigParameters>\n                    \
        \        Additional parameters for assemble contigs step specified with double\
        \ quotes\n      --export <exportParameters>\n                            Additional\
        \ parameters for exportClones step specified with double quotes (e.\n    \
        \                          g --export \"-p full\" --export \"-cloneId\" etc.\n\
        \      --assemble-partial-rounds <nAssemblePartialRounds>\n              \
        \              Number of rounds of assemblePartial\n      --do-not-extend-alignments\n\
        \                            Skip TCR alignments extension\n      --receptor-type\
        \ <chains>\n                            Receptor type. Possible values: tcr,\
        \ bcr, xcr, tra, trb, trd, trg, igh, igk,\n                              igl\n\
        \      --starting-material <startingMaterial>\n                          \
        \  Starting material. Possible values: rna, dna\n"
      generated_using: *id002
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "Unknown option: --help\nUsage: scr analyze [COMMAND]\nRun full MiXCR\
      \ pipeline for specific input.\nCommands:\n  help      Displays help information\
      \ about the specified command\n  amplicon  Analyze targeted TCR/IG library amplification\
      \ (5'RACE, Amplicon, Multiplex, etc).\n  shotgun   Analyze random-fragmented\
      \ data (like RNA-Seq, Exome-Seq, etc). This pipeline assumes\n             \
      \ the data contain no adapter / primer sequences. Adapter trimming must be performed\n\
      \              for the data containing any artificial sequence parts (e.g. single-cell\
      \ /\n              molecular-barcoded data).\n"
    generated_using: *id002
  - !Command
    command:
    - mixcr
    - exportClonesPretty
    positional:
    - !Positional
      description: -nw, --no-warnings     Suppress all warning messages.
      position: 0
      name: outputted
      optional: false
    named:
    - !Flag
      description: Verbose warning messages.
      synonyms:
      - --verbose
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Limit number of alignments before filtering
      synonyms:
      - -b
      - --limitBefore
      args: !SimpleFlagArg
        name: limitBefore
      optional: true
    - !Flag
      description: Filter export to a specific protein chain gene (e.g. TRA or IGH).
      synonyms:
      - -c
      - --chains
      args: !SimpleFlagArg
        name: chain
      optional: true
    - !Flag
      description: "Only output clones where CDR3 (not whole clonal sequence) exactly\
        \ equals to\ngiven sequence"
      synonyms:
      - -e
      - --cdr3-equals
      args: !SimpleFlagArg
        name: cdr3Equals
      optional: true
    - !Flag
      description: Force overwrite of output file(s).
      synonyms:
      - -f
      - --force-overwrite
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: List of clone ids to export
      synonyms:
      - -i
      - --clone-ids
      args: !SimpleFlagArg
        name: ids
      optional: true
    - !Flag
      description: Limit number of filtered alignments; no more than N alignments
        will be
      synonyms:
      - -n
      - --limit
      args: !SimpleFlagArg
        name: limitAfter
      optional: true
    - !Flag
      description: Only output clones where target clonal sequence contains sub-sequence.
      synonyms:
      - -r
      - --clonal-sequence-contains
      args: !SimpleFlagArg
        name: csContain
      optional: true
    - !Flag
      description: Number of output alignments to skip
      synonyms:
      - -s
      - --skip
      args: !SimpleFlagArg
        name: skipAfter
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -nw
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "ERROR: -h / --help is not supported: use `mixcr help [command]` for\
      \ command usage.\nUsage: scr exportClonesPretty [-f] [--verbose] [-nw] [-b <limitBefore>]\
      \ [-c <chain>] [-e\n                              <cdr3Equals>] [-n <limitAfter>]\
      \ [-r <csContain>] [-s <skipAfter>] [-i\n                              <ids>]...\
      \ <in> [<out>]\nExport verbose information about clones.\n      <in>       \
      \            input_file\n      [<out>]                [output_file]\n      --verbose\
      \              Verbose warning messages.\n  -b, --limitBefore <limitBefore>\n\
      \                             Limit number of alignments before filtering\n\
      \  -c, --chains <chain>       Filter export to a specific protein chain gene\
      \ (e.g. TRA or IGH).\n  -e, --cdr3-equals <cdr3Equals>\n                   \
      \          Only output clones where CDR3 (not whole clonal sequence) exactly\
      \ equals to\n                               given sequence\n  -f, --force-overwrite\
      \      Force overwrite of output file(s).\n  -i, --clone-ids <ids>      List\
      \ of clone ids to export\n  -n, --limit <limitAfter>   Limit number of filtered\
      \ alignments; no more than N alignments will be\n                          \
      \     outputted\n      -nw, --no-warnings     Suppress all warning messages.\n\
      \  -r, --clonal-sequence-contains <csContain>\n                            \
      \ Only output clones where target clonal sequence contains sub-sequence.\n \
      \ -s, --skip <skipAfter>     Number of output alignments to skip\n"
    generated_using: *id002
  - !Command
    command:
    - mixcr
    - assemblePartial
    positional:
    - !Positional
      description: ''
      position: 0
      name: scr
      optional: false
    - !Positional
      description: ''
      position: 1
      name: assemblePartial
      optional: false
    - !Positional
      description: ''
      position: 2
      name: reportFile
      optional: true
    named:
    - !Flag
      description: "Overwrite output file if it is corrupted or if it was generated\
        \ from\ndifferent input file or with different parameters. -f / --force-overwrite\n\
        overrides this option."
      synonyms:
      - --overwrite-if-required
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Verbose warning messages.
      synonyms:
      - --verbose
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Drop partial sequences which were not assembled. Can be used to\
        \ reduce output\nfile size if no additional rounds of 'assemblePartial' are\
        \ required."
      synonyms:
      - -d
      - --drop-partial
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Force overwrite of output file(s).
      synonyms:
      - -f
      - --force-overwrite
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: JSON formatted report file
      synonyms:
      - -j
      - --json-report
      args: !SimpleFlagArg
        name: jsonReport
      optional: true
    - !Flag
      description: Suppress all warning messages.
      synonyms:
      - -nw
      - --no-warnings
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Write only overlapped sequences (needed for testing).
      synonyms:
      - -o
      - --overlapped-only
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: <String=String>      Overrides default parameter values.
      synonyms:
      - -O
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Report file (human readable version, see -j / --json-report for\
        \ machine\nreadable report)\n"
      synonyms:
      - -r
      - --report
      args: !SimpleFlagArg
        name: reportFile
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -dfo
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "ERROR: -h / --help is not supported: use `mixcr help [command]` for\
      \ command usage.\nUsage: scr assemblePartial [-dfo] [--overwrite-if-required]\
      \ [--verbose] [-nw] [-j <jsonReport>] [-r\n                           <reportFile>]\
      \ [-O <String=String>]... <in> <out>\nAssembles partially aligned reads into\
      \ longer sequences.\n      <in>                 input file\n      <out>    \
      \            output file\n      --overwrite-if-required\n                  \
      \         Overwrite output file if it is corrupted or if it was generated from\n\
      \                             different input file or with different parameters.\
      \ -f / --force-overwrite\n                             overrides this option.\n\
      \      --verbose            Verbose warning messages.\n  -d, --drop-partial\
      \       Drop partial sequences which were not assembled. Can be used to reduce\
      \ output\n                             file size if no additional rounds of\
      \ 'assemblePartial' are required.\n  -f, --force-overwrite    Force overwrite\
      \ of output file(s).\n  -j, --json-report <jsonReport>\n                   \
      \        JSON formatted report file\n      -nw, --no-warnings   Suppress all\
      \ warning messages.\n  -o, --overlapped-only    Write only overlapped sequences\
      \ (needed for testing).\n  -O  <String=String>      Overrides default parameter\
      \ values.\n  -r, --report <reportFile>\n                           Report file\
      \ (human readable version, see -j / --json-report for machine\n            \
      \                 readable report)\n"
    generated_using: *id002
  - *id004
  - !Command
    command:
    - mixcr
    - mergeAlignments
    positional:
    - !Positional
      description: ''
      position: 0
      name: scr
      optional: false
    - !Positional
      description: ''
      position: 1
      name: mergeAlignments
      optional: false
    - !Positional
      description: ''
      position: 2
      name: Merge
      optional: false
    - !Positional
      description: ''
      position: 3
      name: several
      optional: false
    named:
    - !Flag
      description: "Overwrite output file if it is corrupted or if it was generated\
        \ from\ndifferent input file or with different parameters. -f / --force-overwrite\n\
        overrides this option."
      synonyms:
      - --overwrite-if-required
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Verbose warning messages.
      synonyms:
      - --verbose
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Force overwrite of output file(s).
      synonyms:
      - -f
      - --force-overwrite
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Suppress all warning messages.
      synonyms:
      - -nw
      - --no-warnings
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "ERROR: -h / --help is not supported: use `mixcr help [command]` for\
      \ command usage.\nUsage: scr mergeAlignments [-f] [--overwrite-if-required]\
      \ [--verbose] [-nw] <input> <input>...\nMerge several *.vdjca files with alignments\
      \ into a single alignments file.\n      <input> <input>...   [input_file1.vdjca\
      \ [input_file2.vdjca ....]] output_file.vdjca\n      --overwrite-if-required\n\
      \                           Overwrite output file if it is corrupted or if it\
      \ was generated from\n                             different input file or with\
      \ different parameters. -f / --force-overwrite\n                           \
      \  overrides this option.\n      --verbose            Verbose warning messages.\n\
      \  -f, --force-overwrite    Force overwrite of output file(s).\n      -nw, --no-warnings\
      \   Suppress all warning messages.\n"
    generated_using: *id002
  - !Command
    command:
    - mixcr
    - extend
    positional:
    - !Positional
      description: -f, --force-overwrite     Force overwrite of output file(s).
      position: 0
      name: chains.
      optional: false
    named:
    - !Flag
      description: J extension anchor point.
      synonyms:
      - --j-anchor
      args: !SimpleFlagArg
        name: jAnchorPoint
      optional: true
    - !Flag
      description: Minimal J hit score alignment to perform right extension.
      synonyms:
      - --min-j-score
      args: !SimpleFlagArg
        name: minimalJScore
      optional: true
    - !Flag
      description: Minimal V hit score to perform left extension.
      synonyms:
      - --min-v-score
      args: !SimpleFlagArg
        name: minimalVScore
      optional: true
    - !Flag
      description: "Overwrite output file if it is corrupted or if it was generated\
        \ from\ndifferent input file or with different parameters. -f / --force-overwrite\n\
        overrides this option."
      synonyms:
      - --overwrite-if-required
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: V extension anchor point.
      synonyms:
      - --v-anchor
      args: !SimpleFlagArg
        name: vAnchorPoint
      optional: true
    - !Flag
      description: Verbose warning messages.
      synonyms:
      - --verbose
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Apply procedure only to alignments with specific immunological-receptor
      synonyms:
      - -c
      - --chains
      args: !SimpleFlagArg
        name: chains
      optional: true
    - !Flag
      description: JSON formatted report file
      synonyms:
      - -j
      - --json-report
      args: !SimpleFlagArg
        name: jsonReport
      optional: true
    - !Flag
      description: Suppress all warning messages.
      synonyms:
      - -nw
      - --no-warnings
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Quality score value to assign imputed sequences
      synonyms:
      - -q
      - --quality
      args: !SimpleFlagArg
        name: extensionQuality
      optional: true
    - !Flag
      description: "Report file (human readable version, see -j / --json-report for\
        \ machine\nreadable report)"
      synonyms:
      - -r
      - --report
      args: !SimpleFlagArg
        name: reportFile
      optional: true
    - !Flag
      description: Processing threads
      synonyms:
      - -t
      - --threads
      args: !SimpleFlagArg
        name: threads
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -f
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "ERROR: -h / --help is not supported: use `mixcr help [command]` for\
      \ command usage.\nUsage: scr extend [-f] [--overwrite-if-required] [--verbose]\
      \ [-nw] [--j-anchor <jAnchorPoint>]\n                  [--min-j-score <minimalJScore>]\
      \ [--min-v-score <minimalVScore>] [--v-anchor\n                  <vAnchorPoint>]\
      \ [-c <chains>] [-j <jsonReport>] [-q <extensionQuality>] [-r\n            \
      \      <reportFile>] [-t <threads>] <in> <out>\nImpute alignments or clones\
      \ with germline sequences.\n      <in>                  input file\n      <out>\
      \                 output file\n      --j-anchor <jAnchorPoint>\n           \
      \                 J extension anchor point.\n      --min-j-score <minimalJScore>\n\
      \                            Minimal J hit score alignment to perform right\
      \ extension.\n      --min-v-score <minimalVScore>\n                        \
      \    Minimal V hit score to perform left extension.\n      --overwrite-if-required\n\
      \                            Overwrite output file if it is corrupted or if\
      \ it was generated from\n                              different input file\
      \ or with different parameters. -f / --force-overwrite\n                   \
      \           overrides this option.\n      --v-anchor <vAnchorPoint>\n      \
      \                      V extension anchor point.\n      --verbose          \
      \   Verbose warning messages.\n  -c, --chains <chains>     Apply procedure only\
      \ to alignments with specific immunological-receptor\n                     \
      \         chains.\n  -f, --force-overwrite     Force overwrite of output file(s).\n\
      \  -j, --json-report <jsonReport>\n                            JSON formatted\
      \ report file\n      -nw, --no-warnings    Suppress all warning messages.\n\
      \  -q, --quality <extensionQuality>\n                            Quality score\
      \ value to assign imputed sequences\n  -r, --report <reportFile> Report file\
      \ (human readable version, see -j / --json-report for machine\n            \
      \                  readable report)\n  -t, --threads <threads>   Processing\
      \ threads\n"
    generated_using: *id002
  - !Command
    command:
    - mixcr
    - exportReads
    positional:
    - !Positional
      description: ''
      position: 0
      name: scr
      optional: false
    - !Positional
      description: ''
      position: 1
      name: exportReads
      optional: false
    - !Positional
      description: ''
      position: 2
      name: Export
      optional: false
    - !Positional
      description: ''
      position: 3
      name: input.vdjca
      optional: false
    named:
    - !Flag
      description: Verbose warning messages.
      synonyms:
      - --verbose
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Force overwrite of output file(s).
      synonyms:
      - -f
      - --force-overwrite
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Suppress all warning messages.
      synonyms:
      - -nw
      - --no-warnings
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "ERROR: -h / --help is not supported: use `mixcr help [command]` for\
      \ command usage.\nUsage: scr exportReads [-f] [--verbose] [-nw] <inOut>...\n\
      Export original reads from vdjca file.\n      <inOut>...           input.vdjca\
      \ [output_R1.fastq[.gz] [output_R2.fastq[.gz]]]\n      --verbose           \
      \ Verbose warning messages.\n  -f, --force-overwrite    Force overwrite of output\
      \ file(s).\n      -nw, --no-warnings   Suppress all warning messages.\n"
    generated_using: *id002
  - !Command
    command:
    - mixcr
    - assembleContigs
    positional:
    - !Positional
      description: ''
      position: 0
      name: scr
      optional: false
    - !Positional
      description: ''
      position: 1
      name: assembleContigs
      optional: false
    - !Positional
      description: ''
      position: 2
      name: reportFile
      optional: true
    named:
    - !Flag
      description: "Overwrite output file if it is corrupted or if it was generated\
        \ from\ndifferent input file or with different parameters. -f / --force-overwrite\n\
        overrides this option."
      synonyms:
      - --overwrite-if-required
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Verbose warning messages.
      synonyms:
      - --verbose
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Force overwrite of output file(s).
      synonyms:
      - -f
      - --force-overwrite
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: JSON formatted report file
      synonyms:
      - -j
      - --json-report
      args: !SimpleFlagArg
        name: jsonReport
      optional: true
    - !Flag
      description: Suppress all warning messages.
      synonyms:
      - -nw
      - --no-warnings
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: <String=String>       Overrides default parameter values.
      synonyms:
      - -O
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Report file (human readable version, see -j / --json-report for\
        \ machine\nreadable report)"
      synonyms:
      - -r
      - --report
      args: !SimpleFlagArg
        name: reportFile
      optional: true
    - !Flag
      description: Processing threads
      synonyms:
      - -t
      - --threads
      args: !SimpleFlagArg
        name: threads
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "ERROR: -h / --help is not supported: use `mixcr help [command]` for\
      \ command usage.\nUsage: scr assembleContigs [-f] [--overwrite-if-required]\
      \ [--verbose] [-nw] [-j <jsonReport>] [-r\n                           <reportFile>]\
      \ [-t <threads>] [-O <String=String>]... <in> <out>\nAssemble full sequences.\n\
      \      <in>                  input file\n      <out>                 output\
      \ file\n      --overwrite-if-required\n                            Overwrite\
      \ output file if it is corrupted or if it was generated from\n             \
      \                 different input file or with different parameters. -f / --force-overwrite\n\
      \                              overrides this option.\n      --verbose     \
      \        Verbose warning messages.\n  -f, --force-overwrite     Force overwrite\
      \ of output file(s).\n  -j, --json-report <jsonReport>\n                   \
      \         JSON formatted report file\n      -nw, --no-warnings    Suppress all\
      \ warning messages.\n  -O  <String=String>       Overrides default parameter\
      \ values.\n  -r, --report <reportFile> Report file (human readable version,\
      \ see -j / --json-report for machine\n                              readable\
      \ report)\n  -t, --threads <threads>   Processing threads\n"
    generated_using: *id002
  - !Command
    command:
    - mixcr
    - exportAlignments
    positional:
    - !Positional
      description: ''
      position: 0
      name: scr
      optional: false
    - !Positional
      description: ''
      position: 1
      name: exportAlignments
      optional: false
    named:
    - !Flag
      description: Verbose warning messages.
      synonyms:
      - --verbose
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export amino acid sequence of specified gene feature
      synonyms:
      - -aaFeature
      args: !SimpleFlagArg
        name: PARAM
      optional: true
    - !Flag
      description: "Export amino acid sequence of specified gene feature using letters\
        \ from\ngermline (marked lowercase) for uncovered regions"
      synonyms:
      - -aaFeatureImputed
      args: !SimpleFlagArg
        name: PARAM
      optional: true
    - !Flag
      description: Extract amino acid mutations for specific gene feature
      synonyms:
      - -aaMutations
      args: !SimpleFlagArg
        name: PARAM
      optional: true
    - !Flag
      description: "PARAM\nExtract amino acid mutations for specific gene feature\
        \ relative to another\nfeature."
      synonyms:
      - -aaMutationsRelative
      args: !SimpleFlagArg
        name: PARAM
      optional: true
    - !Flag
      description: Export average quality of specified gene feature
      synonyms:
      - -avrgFeatureQuality
      args: !SimpleFlagArg
        name: PARAM
      optional: true
    - !Flag
      description: "Limit export to specific chain (e.g. TRA or IGH) (fractions will\
        \ be\nrecalculated)"
      synonyms:
      - -c
      - --chains
      args: !SimpleFlagArg
        name: chains
      optional: true
    - !Flag
      description: Export best C alignment
      synonyms:
      - -cAlignment
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export all C alignments
      synonyms:
      - -cAlignments
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: C best alignment identity percent
      synonyms:
      - -cBestIdentityPercent
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export all C gene family anmes (e.g. TRBV12 for TRBV12-3*00)
      synonyms:
      - -cFamilies
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export best C hit family name (e.g. TRBV12 for TRBV12-3*00)
      synonyms:
      - -cFamily
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export best C hit gene name (e.g. TRBV12-3 for TRBV12-3*00)
      synonyms:
      - -cGene
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export all C gene names (e.g. TRBV12-3 for TRBV12-3*00)
      synonyms:
      - -cGenes
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export best C hit
      synonyms:
      - -cHit
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export all C hits
      synonyms:
      - -cHits
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export score for best C hit
      synonyms:
      - -cHitScore
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export all C hits with score
      synonyms:
      - -cHitsWithScore
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: C alignment identity percents
      synonyms:
      - -cIdentityPercents
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "To which clone alignment was attached (make sure using .clna file\
        \ as input\nfor exportAlignments)"
      synonyms:
      - -cloneId
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "To which clone alignment was attached with additional info on\
        \ mapping type\n(make sure using .clna file as input for exportAlignments)"
      synonyms:
      - -cloneIdWithMappingType
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export best D alignment
      synonyms:
      - -dAlignment
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export all D alignments
      synonyms:
      - -dAlignments
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: D best alignment identity percent
      synonyms:
      - -dBestIdentityPercent
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Outputs a list of default reference points (like CDR2Begin, FR4End,\
        \ etc.\nsee documentation for the full list and formatting)"
      synonyms:
      - -defaultAnchorPoints
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export description line from initial .fasta or .fastq file (deprecated)
      synonyms:
      - -descrR1
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export description line from initial .fasta or .fastq file (deprecated)
      synonyms:
      - -descrR2
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Export description lines from initial .fasta or .fastq file for\
        \ R1 reads\n(only available if -OsaveOriginalReads=true was used in align\
        \ command)"
      synonyms:
      - -descrsR1
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Export description lines from initial .fastq file for R2 reads\
        \ (only\navailable if -OsaveOriginalReads=true was used in align command)"
      synonyms:
      - -descrsR2
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export all D gene family anmes (e.g. TRBV12 for TRBV12-3*00)
      synonyms:
      - -dFamilies
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export best D hit family name (e.g. TRBV12 for TRBV12-3*00)
      synonyms:
      - -dFamily
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export best D hit gene name (e.g. TRBV12-3 for TRBV12-3*00)
      synonyms:
      - -dGene
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export all D gene names (e.g. TRBV12-3 for TRBV12-3*00)
      synonyms:
      - -dGenes
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export best D hit
      synonyms:
      - -dHit
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export all D hits
      synonyms:
      - -dHits
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export score for best D hit
      synonyms:
      - -dHitScore
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export all D hits with score
      synonyms:
      - -dHitsWithScore
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: D alignment identity percents
      synonyms:
      - -dIdentityPercents
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Force overwrite of output file(s).
      synonyms:
      - -f
      - --force-overwrite
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export best J alignment
      synonyms:
      - -jAlignment
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export all J alignments
      synonyms:
      - -jAlignments
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: J best alignment identity percent
      synonyms:
      - -jBestIdentityPercent
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export all J gene family anmes (e.g. TRBV12 for TRBV12-3*00)
      synonyms:
      - -jFamilies
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export best J hit family name (e.g. TRBV12 for TRBV12-3*00)
      synonyms:
      - -jFamily
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export best J hit gene name (e.g. TRBV12-3 for TRBV12-3*00)
      synonyms:
      - -jGene
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export all J gene names (e.g. TRBV12-3 for TRBV12-3*00)
      synonyms:
      - -jGenes
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export best J hit
      synonyms:
      - -jHit
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export all J hits
      synonyms:
      - -jHits
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export score for best J hit
      synonyms:
      - -jHitScore
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export all J hits with score
      synonyms:
      - -jHitsWithScore
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: J alignment identity percents
      synonyms:
      - -jIdentityPercents
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export length of specified gene feature.
      synonyms:
      - -lengthOf
      args: !SimpleFlagArg
        name: PARAM
      optional: true
    - !Flag
      description: Export minimal quality of specified gene feature
      synonyms:
      - -minFeatureQuality
      args: !SimpleFlagArg
        name: PARAM
      optional: true
    - !Flag
      description: "Detailed list of nucleotide and corresponding amino acid mutations.\
        \ Format\n<nt_mutation>:<aa_mutation_individual>:<aa_mutation_cumulative>,\
        \ where\n<aa_mutation_individual> is an expected amino acid mutation given\
        \ no\nother mutations have occurred, and <aa_mutation_cumulative> amino acid\n\
        mutation is the observed amino acid mutation combining effect from all\nother.\
        \ WARNING: format may change in following versions."
      synonyms:
      - -mutationsDetailed
      args: !SimpleFlagArg
        name: PARAM
      optional: true
    - !Flag
      description: "PARAM\nDetailed list of nucleotide and corresponding amino acid\
        \ mutations written,\npositions relative to specified gene feature. Format\
        \ <nt_mutation>:\n<aa_mutation_individual>:<aa_mutation_cumulative>, where\n\
        <aa_mutation_individual> is an expected amino acid mutation given no\nother\
        \ mutations have occurred, and <aa_mutation_cumulative> amino acid\nmutation\
        \ is the observed amino acid mutation combining effect from all\nother. WARNING:\
        \ format may change in following versions."
      synonyms:
      - -mutationsDetailedRelative
      args: !SimpleFlagArg
        name: PARAM
      optional: true
    - !Flag
      description: Output only first N records
      synonyms:
      - -n
      - --limit
      args: !SimpleFlagArg
        name: limit
      optional: true
    - !Flag
      description: Export nucleotide sequence of specified gene feature
      synonyms:
      - -nFeature
      args: !SimpleFlagArg
        name: PARAM
      optional: true
    - !Flag
      description: "Export nucleotide sequence of specified gene feature using letters\
        \ from\ngermline (marked lowercase) for uncovered regions"
      synonyms:
      - -nFeatureImputed
      args: !SimpleFlagArg
        name: PARAM
      optional: true
    - !Flag
      description: "Extract nucleotide mutations for specific gene feature; relative\
        \ to\ngermline sequence."
      synonyms:
      - -nMutations
      args: !SimpleFlagArg
        name: PARAM
      optional: true
    - !Flag
      description: "PARAM\nExtract nucleotide mutations for specific gene feature\
        \ relative to another\nfeature."
      synonyms:
      - -nMutationsRelative
      args: !SimpleFlagArg
        name: PARAM
      optional: true
    - !Flag
      description: Suppress all warning messages.
      synonyms:
      - -nw
      - --no-warnings
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Specify preset of export fields (possible values: 'full', 'min';\
        \ 'full' by\ndefault)"
      synonyms:
      - -p
      - --preset
      args: !SimpleFlagArg
        name: preset
      optional: true
    - !Flag
      description: Specify preset file of export fields
      synonyms:
      - -pf
      - --preset-file
      args: !SimpleFlagArg
        name: presetFile
      optional: true
    - !Flag
      description: "Export position of specified reference point inside referencesequences\n\
        (clonal sequence / read sequence)."
      synonyms:
      - -positionInReferenceOf
      args: !SimpleFlagArg
        name: PARAM
      optional: true
    - !Flag
      description: "Export position of specified reference point inside targetsequences\
        \ (clonal\nsequence / read sequence)."
      synonyms:
      - -positionOf
      args: !SimpleFlagArg
        name: PARAM
      optional: true
    - !Flag
      description: Export quality string of specified gene feature
      synonyms:
      - -qFeature
      args: !SimpleFlagArg
        name: PARAM
      optional: true
    - !Flag
      description: Export read history
      synonyms:
      - -readHistory
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export id of read corresponding to alignment (deprecated)
      synonyms:
      - -readId
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export id(s) of read(s) corresponding to alignment
      synonyms:
      - -readIds
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export aligned sequence (target) qualities, separated with comma
      synonyms:
      - -targetQualities
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export number of targets
      synonyms:
      - -targets
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export aligned sequences (targets), separated with comma
      synonyms:
      - -targetSequences
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Top chains
      synonyms:
      - -topChains
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Output column headers with spaces.
      synonyms:
      - -v
      - --with-spaces
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export best V alignment
      synonyms:
      - -vAlignment
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export all V alignments
      synonyms:
      - -vAlignments
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: V best alignment identity percent
      synonyms:
      - -vBestIdentityPercent
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export all V gene family anmes (e.g. TRBV12 for TRBV12-3*00)
      synonyms:
      - -vFamilies
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export best V hit family name (e.g. TRBV12 for TRBV12-3*00)
      synonyms:
      - -vFamily
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export best V hit gene name (e.g. TRBV12-3 for TRBV12-3*00)
      synonyms:
      - -vGene
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export all V gene names (e.g. TRBV12-3 for TRBV12-3*00)
      synonyms:
      - -vGenes
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export best V hit
      synonyms:
      - -vHit
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export all V hits
      synonyms:
      - -vHits
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export score for best V hit
      synonyms:
      - -vHitScore
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Export all V hits with score
      synonyms:
      - -vHitsWithScore
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: V alignment identity percents
      synonyms:
      - -vIdentityPercents
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -fv
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "ERROR: -h / --help is not supported: use `mixcr help [command]` for\
      \ command usage.\nUsage: scr exportAlignments [-fv] [--verbose] [-cAlignment]\
      \ [-cAlignments] [-cBestIdentityPercent]\n                            [-cFamilies]\
      \ [-cFamily] [-cGene] [-cGenes] [-chains] [-cHit] [-cHits]\n               \
      \             [-cHitScore] [-cHitsWithScore] [-cIdentityPercents] [-cloneId]\n\
      \                            [-cloneIdWithMappingType] [-dAlignment] [-dAlignments]\n\
      \                            [-dBestIdentityPercent] [-defaultAnchorPoints]\
      \ [-descrR1] [-descrR2]\n                            [-descrsR1] [-descrsR2]\
      \ [-dFamilies] [-dFamily] [-dGene] [-dGenes]\n                            [-dHit]\
      \ [-dHits] [-dHitScore] [-dHitsWithScore] [-dIdentityPercents]\n           \
      \                 [-jAlignment] [-jAlignments] [-jBestIdentityPercent] [-jFamilies]\n\
      \                            [-jFamily] [-jGene] [-jGenes] [-jHit] [-jHits]\
      \ [-jHitScore]\n                            [-jHitsWithScore] [-jIdentityPercents]\
      \ [-nw] [-readHistory] [-readId]\n                            [-readIds] [-targetQualities]\
      \ [-targets] [-targetSequences]\n                            [-topChains] [-vAlignment]\
      \ [-vAlignments] [-vBestIdentityPercent]\n                            [-vFamilies]\
      \ [-vFamily] [-vGene] [-vGenes] [-vHit] [-vHits]\n                         \
      \   [-vHitScore] [-vHitsWithScore] [-vIdentityPercents] [-c <chains>] [-n\n\
      \                            <limit>] [-p <preset>] [-pf <presetFile>] [-aaFeature\
      \ PARAM]...\n                            [-aaFeatureImputed PARAM]... [-aaMutations\
      \ PARAM]...\n                            [-avrgFeatureQuality PARAM]... [-lengthOf\
      \ PARAM]... [-minFeatureQuality\n                            PARAM]... [-mutationsDetailed\
      \ PARAM]... [-nFeature PARAM]...\n                            [-nFeatureImputed\
      \ PARAM]... [-nMutations PARAM]...\n                            [-positionInReferenceOf\
      \ PARAM]... [-positionOf PARAM]... [-qFeature\n                            PARAM]...\
      \ [-aaMutationsRelative PARAM PARAM]...\n                            [-mutationsDetailedRelative\
      \ PARAM PARAM]... [-nMutationsRelative PARAM\n                            PARAM]...\
      \ <in> [<out>]\nExport V/D/J/C alignments into tab delimited file.\n      <in>\
      \                   input_file\n      [<out>]                [output_file]\n\
      \      --verbose              Verbose warning messages.\n      -aaFeature PARAM\
      \       Export amino acid sequence of specified gene feature\n      -aaFeatureImputed\
      \ PARAM\n                             Export amino acid sequence of specified\
      \ gene feature using letters from\n                               germline (marked\
      \ lowercase) for uncovered regions\n      -aaMutations PARAM     Extract amino\
      \ acid mutations for specific gene feature\n      -aaMutationsRelative PARAM\
      \ PARAM\n                             Extract amino acid mutations for specific\
      \ gene feature relative to another\n                               feature.\n\
      \      -avrgFeatureQuality PARAM\n                             Export average\
      \ quality of specified gene feature\n  -c, --chains <chains>      Limit export\
      \ to specific chain (e.g. TRA or IGH) (fractions will be\n                 \
      \              recalculated)\n      -cAlignment            Export best C alignment\n\
      \      -cAlignments           Export all C alignments\n      -cBestIdentityPercent\
      \  C best alignment identity percent\n      -cFamilies             Export all\
      \ C gene family anmes (e.g. TRBV12 for TRBV12-3*00)\n      -cFamily        \
      \       Export best C hit family name (e.g. TRBV12 for TRBV12-3*00)\n      -cGene\
      \                 Export best C hit gene name (e.g. TRBV12-3 for TRBV12-3*00)\n\
      \      -cGenes                Export all C gene names (e.g. TRBV12-3 for TRBV12-3*00)\n\
      \      -chains                Chains\n      -cHit                  Export best\
      \ C hit\n      -cHits                 Export all C hits\n      -cHitScore  \
      \           Export score for best C hit\n      -cHitsWithScore        Export\
      \ all C hits with score\n      -cIdentityPercents     C alignment identity percents\n\
      \      -cloneId               To which clone alignment was attached (make sure\
      \ using .clna file as input\n                               for exportAlignments)\n\
      \      -cloneIdWithMappingType\n                             To which clone\
      \ alignment was attached with additional info on mapping type\n            \
      \                   (make sure using .clna file as input for exportAlignments)\n\
      \      -dAlignment            Export best D alignment\n      -dAlignments  \
      \         Export all D alignments\n      -dBestIdentityPercent  D best alignment\
      \ identity percent\n      -defaultAnchorPoints   Outputs a list of default reference\
      \ points (like CDR2Begin, FR4End, etc.\n                               see documentation\
      \ for the full list and formatting)\n      -descrR1               Export description\
      \ line from initial .fasta or .fastq file (deprecated)\n      -descrR2     \
      \          Export description line from initial .fasta or .fastq file (deprecated)\n\
      \      -descrsR1              Export description lines from initial .fasta or\
      \ .fastq file for R1 reads\n                               (only available if\
      \ -OsaveOriginalReads=true was used in align command)\n      -descrsR2     \
      \         Export description lines from initial .fastq file for R2 reads (only\n\
      \                               available if -OsaveOriginalReads=true was used\
      \ in align command)\n      -dFamilies             Export all D gene family anmes\
      \ (e.g. TRBV12 for TRBV12-3*00)\n      -dFamily               Export best D\
      \ hit family name (e.g. TRBV12 for TRBV12-3*00)\n      -dGene              \
      \   Export best D hit gene name (e.g. TRBV12-3 for TRBV12-3*00)\n      -dGenes\
      \                Export all D gene names (e.g. TRBV12-3 for TRBV12-3*00)\n \
      \     -dHit                  Export best D hit\n      -dHits               \
      \  Export all D hits\n      -dHitScore             Export score for best D hit\n\
      \      -dHitsWithScore        Export all D hits with score\n      -dIdentityPercents\
      \     D alignment identity percents\n  -f, --force-overwrite      Force overwrite\
      \ of output file(s).\n      -jAlignment            Export best J alignment\n\
      \      -jAlignments           Export all J alignments\n      -jBestIdentityPercent\
      \  J best alignment identity percent\n      -jFamilies             Export all\
      \ J gene family anmes (e.g. TRBV12 for TRBV12-3*00)\n      -jFamily        \
      \       Export best J hit family name (e.g. TRBV12 for TRBV12-3*00)\n      -jGene\
      \                 Export best J hit gene name (e.g. TRBV12-3 for TRBV12-3*00)\n\
      \      -jGenes                Export all J gene names (e.g. TRBV12-3 for TRBV12-3*00)\n\
      \      -jHit                  Export best J hit\n      -jHits              \
      \   Export all J hits\n      -jHitScore             Export score for best J\
      \ hit\n      -jHitsWithScore        Export all J hits with score\n      -jIdentityPercents\
      \     J alignment identity percents\n      -lengthOf PARAM        Export length\
      \ of specified gene feature.\n      -minFeatureQuality PARAM\n             \
      \                Export minimal quality of specified gene feature\n      -mutationsDetailed\
      \ PARAM\n                             Detailed list of nucleotide and corresponding\
      \ amino acid mutations. Format\n                               <nt_mutation>:<aa_mutation_individual>:<aa_mutation_cumulative>,\
      \ where\n                               <aa_mutation_individual> is an expected\
      \ amino acid mutation given no\n                               other mutations\
      \ have occurred, and <aa_mutation_cumulative> amino acid\n                 \
      \              mutation is the observed amino acid mutation combining effect\
      \ from all\n                               other. WARNING: format may change\
      \ in following versions.\n      -mutationsDetailedRelative PARAM PARAM\n   \
      \                          Detailed list of nucleotide and corresponding amino\
      \ acid mutations written,\n                               positions relative\
      \ to specified gene feature. Format <nt_mutation>:\n                       \
      \        <aa_mutation_individual>:<aa_mutation_cumulative>, where\n        \
      \                       <aa_mutation_individual> is an expected amino acid mutation\
      \ given no\n                               other mutations have occurred, and\
      \ <aa_mutation_cumulative> amino acid\n                               mutation\
      \ is the observed amino acid mutation combining effect from all\n          \
      \                     other. WARNING: format may change in following versions.\n\
      \  -n, --limit <limit>        Output only first N records\n      -nFeature PARAM\
      \        Export nucleotide sequence of specified gene feature\n      -nFeatureImputed\
      \ PARAM Export nucleotide sequence of specified gene feature using letters from\n\
      \                               germline (marked lowercase) for uncovered regions\n\
      \      -nMutations PARAM      Extract nucleotide mutations for specific gene\
      \ feature; relative to\n                               germline sequence.\n\
      \      -nMutationsRelative PARAM PARAM\n                             Extract\
      \ nucleotide mutations for specific gene feature relative to another\n     \
      \                          feature.\n      -nw, --no-warnings     Suppress all\
      \ warning messages.\n  -p, --preset <preset>      Specify preset of export fields\
      \ (possible values: 'full', 'min'; 'full' by\n                             \
      \  default)\n      -pf, --preset-file <presetFile>\n                       \
      \      Specify preset file of export fields\n      -positionInReferenceOf PARAM\n\
      \                             Export position of specified reference point inside\
      \ referencesequences\n                               (clonal sequence / read\
      \ sequence).\n      -positionOf PARAM      Export position of specified reference\
      \ point inside targetsequences (clonal\n                               sequence\
      \ / read sequence).\n      -qFeature PARAM        Export quality string of specified\
      \ gene feature\n      -readHistory           Export read history\n      -readId\
      \                Export id of read corresponding to alignment (deprecated)\n\
      \      -readIds               Export id(s) of read(s) corresponding to alignment\n\
      \      -targetQualities       Export aligned sequence (target) qualities, separated\
      \ with comma\n      -targets               Export number of targets\n      -targetSequences\
      \       Export aligned sequences (targets), separated with comma\n      -topChains\
      \             Top chains\n  -v, --with-spaces          Output column headers\
      \ with spaces.\n      -vAlignment            Export best V alignment\n     \
      \ -vAlignments           Export all V alignments\n      -vBestIdentityPercent\
      \  V best alignment identity percent\n      -vFamilies             Export all\
      \ V gene family anmes (e.g. TRBV12 for TRBV12-3*00)\n      -vFamily        \
      \       Export best V hit family name (e.g. TRBV12 for TRBV12-3*00)\n      -vGene\
      \                 Export best V hit gene name (e.g. TRBV12-3 for TRBV12-3*00)\n\
      \      -vGenes                Export all V gene names (e.g. TRBV12-3 for TRBV12-3*00)\n\
      \      -vHit                  Export best V hit\n      -vHits              \
      \   Export all V hits\n      -vHitScore             Export score for best V\
      \ hit\n      -vHitsWithScore        Export all V hits with score\n      -vIdentityPercents\
      \     V alignment identity percents\n"
    generated_using: *id002
  - !Command
    command:
    - mixcr
    - versionInfo
    positional:
    - !Positional
      description: ''
      position: 0
      name: scr
      optional: false
    - !Positional
      description: ''
      position: 1
      name: versionInfo
      optional: false
    - !Positional
      description: ''
      position: 2
      name: inputFile
      optional: false
    named:
    - !Flag
      description: Verbose warning messages.
      synonyms:
      - --verbose
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Suppress all warning messages.
      synonyms:
      - -nw
      - --no-warnings
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "ERROR: -h / --help is not supported: use `mixcr help [command]` for\
      \ command usage.\nUsage: scr versionInfo [--verbose] [-nw] <inputFile>\nOutput\
      \ information about MiXCR version which generated the file.\n      <inputFile>\
      \          input_file\n      --verbose            Verbose warning messages.\n\
      \      -nw, --no-warnings   Suppress all warning messages.\n"
    generated_using: *id002
  - !Command
    command:
    - mixcr
    - exportReadsForClones
    positional:
    - !Positional
      description: ''
      position: 0
      name: scr
      optional: false
    - !Positional
      description: ''
      position: 1
      name: exportReadsForClones
      optional: false
    - !Positional
      description: ''
      position: 2
      name: ids
      optional: true
    named:
    - !Flag
      description: '[<ids>...]      [cloneId1 [cloneId2 [cloneId3]]]'
      synonyms:
      - --id
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Verbose warning messages.
      synonyms:
      - --verbose
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Force overwrite of output file(s).
      synonyms:
      - -f
      - --force-overwrite
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Suppress all warning messages.
      synonyms:
      - -nw
      - --no-warnings
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Create separate files for each clone. File or pair of '_R1'/'_R2'\
        \ files, with\n'_clnN' suffix, where N is clone index, will be created for\
        \ each clone\nindex.\n"
      synonyms:
      - -s
      - --separate
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: ''
      synonyms:
      - -fs
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "ERROR: -h / --help is not supported: use `mixcr help [command]` for\
      \ command usage.\nUsage: scr exportReadsForClones [-fs] [--verbose] [-nw] [--id\
      \ [<ids>...]]... <in> <out>\nExport reads for particular clones from \"clones\
      \ & alignments\" (*.clna) file. Output file name will\nbe transformed into '_R1'/'_R2'\
      \ pair in case of paired end reads. Use cloneId = -1 to export\nalignments not\
      \ assigned to any clone (not assembled). If no clone ids are specified (only\
      \ input and\noutput filenames are specified) all reads assigned to clonotypes\
      \ will be exported.\n      <in>                 input_file.clna\n      <out>\
      \                [output_file(.fastq[.gz]|fasta)]\n      --id [<ids>...]   \
      \   [cloneId1 [cloneId2 [cloneId3]]]\n      --verbose            Verbose warning\
      \ messages.\n  -f, --force-overwrite    Force overwrite of output file(s).\n\
      \      -nw, --no-warnings   Suppress all warning messages.\n  -s, --separate\
      \           Create separate files for each clone. File or pair of '_R1'/'_R2'\
      \ files, with\n                             '_clnN' suffix, where N is clone\
      \ index, will be created for each clone\n                             index.\n"
    generated_using: *id002
  - !Command
    command:
    - mixcr
    - align
    positional:
    - !Positional
      description: file_R1.(fastq[.gz]|fasta) [file_R2.fastq[.gz]] alignments.vdjca
      position: 0
      name: files
      optional: false
    named:
    - !Flag
      description: Suppress all warning messages.
      synonyms:
      - -nw
      - --no-warnings
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Verbose warning messages.
      synonyms:
      - --verbose
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Force overwrite of output file(s).
      synonyms:
      - -f
      - --force-overwrite
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Overwrite output file if it is corrupted or if it was generated\
        \ from\ndifferent input file or with different parameters. -f / --force-overwrite\n\
        overrides this option."
      synonyms:
      - --overwrite-if-required
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Species (organism), as specified in library file or taxon id.\n\
        Possible values: hs, HomoSapiens, musmusculus, mmu, hsa, 9606, 10090 etc."
      synonyms:
      - -s
      - --species
      args: !SimpleFlagArg
        name: species
      optional: true
    - !Flag
      description: "Report file (human readable version, see -j / --json-report for\
        \ machine\nreadable report)"
      synonyms:
      - -r
      - --report
      args: !SimpleFlagArg
        name: reportFile
      optional: true
    - !Flag
      description: JSON formatted report file
      synonyms:
      - -j
      - --json-report
      args: !SimpleFlagArg
        name: jsonReport
      optional: true
    - !Flag
      description: V/D/J/C gene library
      synonyms:
      - -b
      - --library
      args: !SimpleFlagArg
        name: library
      optional: true
    - !Flag
      description: 'Read pre-processing: trimming quality threshold'
      synonyms:
      - --trimming-quality-threshold
      args: !SimpleFlagArg
        name: trimmingQualityThreshold
      optional: true
    - !Flag
      description: 'Read pre-processing: trimming window size'
      synonyms:
      - --trimming-window-size
      args: !SimpleFlagArg
        name: trimmingWindowSize
      optional: true
    - !Flag
      description: Parameters preset.
      synonyms:
      - -p
      - --parameters
      args: !SimpleFlagArg
        name: alignerParametersName
      optional: true
    - !Flag
      description: <String=String>       Overrides default aligner parameter values
      synonyms:
      - -O
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Write alignment results for all input reads (even if alignment
        failed).
      synonyms:
      - --write-all
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Pipe not aligned R1 reads into separate file.
      synonyms:
      - --not-aligned-R1
      args: !SimpleFlagArg
        name: failedReadsR1
      optional: true
    - !Flag
      description: Pipe not aligned R2 reads into separate file.
      synonyms:
      - --not-aligned-R2
      args: !SimpleFlagArg
        name: failedReadsR2
      optional: true
    - !Flag
      description: Maximal number of reads to process
      synonyms:
      - -n
      - --limit
      args: !SimpleFlagArg
        name: limit
      optional: true
    - !Flag
      description: Processing threads
      synonyms:
      - -t
      - --threads
      args: !SimpleFlagArg
        name: threads
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag:
    usage_flag:
    version_flag:
    help_text: "ERROR: -h / --help is not supported: use `mixcr help [command]` for\
      \ command usage.\nUsage: scr align [-f] [--overwrite-if-required] [--verbose]\
      \ [--write-all] [-nw] [--not-aligned-R1\n                 <failedReadsR1>] [--not-aligned-R2\
      \ <failedReadsR2>] [--trimming-quality-threshold\n                 <trimmingQualityThreshold>]\
      \ [--trimming-window-size <trimmingWindowSize>] [-b\n                 <library>]\
      \ [-j <jsonReport>] [-n <limit>] [-p <alignerParametersName>] [-r\n        \
      \         <reportFile>] -s <species> [-t <threads>] [-O <String=String>]...\
      \ files\nBuilds alignments with V,D,J and C genes for input sequencing reads.\n\
      \      files                 file_R1.(fastq[.gz]|fasta) [file_R2.fastq[.gz]]\
      \ alignments.vdjca\n      -nw, --no-warnings    Suppress all warning messages.\n\
      \      --verbose             Verbose warning messages.\n  -f, --force-overwrite\
      \     Force overwrite of output file(s).\n      --overwrite-if-required\n  \
      \                          Overwrite output file if it is corrupted or if it\
      \ was generated from\n                              different input file or\
      \ with different parameters. -f / --force-overwrite\n                      \
      \        overrides this option.\n  -s, --species <species>   Species (organism),\
      \ as specified in library file or taxon id.\n                            Possible\
      \ values: hs, HomoSapiens, musmusculus, mmu, hsa, 9606, 10090 etc.\n  -r, --report\
      \ <reportFile> Report file (human readable version, see -j / --json-report for\
      \ machine\n                              readable report)\n  -j, --json-report\
      \ <jsonReport>\n                            JSON formatted report file\n  -b,\
      \ --library <library>   V/D/J/C gene library\n      --trimming-quality-threshold\
      \ <trimmingQualityThreshold>\n                            Read pre-processing:\
      \ trimming quality threshold\n      --trimming-window-size <trimmingWindowSize>\n\
      \                            Read pre-processing: trimming window size\n  -p,\
      \ --parameters <alignerParametersName>\n                            Parameters\
      \ preset.\n  -O  <String=String>       Overrides default aligner parameter values\n\
      \      --write-all           Write alignment results for all input reads (even\
      \ if alignment failed).\n      --not-aligned-R1 <failedReadsR1>\n          \
      \                  Pipe not aligned R1 reads into separate file.\n      --not-aligned-R2\
      \ <failedReadsR2>\n                            Pipe not aligned R2 reads into\
      \ separate file.\n  -n, --limit <limit>       Maximal number of reads to process\n\
      \  -t, --threads <threads>   Processing threads\n"
    generated_using: *id002
  usage: []
  help_flag:
  usage_flag:
  version_flag: !Flag
    description: print version information and exit
    synonyms:
    - -v
    - --version
    args: !EmptyFlagArg {}
    optional: true
  help_text: "ERROR: -h / --help is not supported: use `mixcr help` for usage.\nUsage:\
    \ scr [-v] [COMMAND]\n  -v, --version   print version information and exit\nCommands:\n\
    \  help                       Displays help information about the specified command\n\
    \  analyze                    Run full MiXCR pipeline for specific input.\n  align\
    \                      Builds alignments with V,D,J and C genes for input sequencing\
    \ reads.\n  assemble                   Assemble clones.\n  assembleContigs   \
    \         Assemble full sequences.\n  assemblePartial            Assembles partially\
    \ aligned reads into longer sequences.\n  extend                     Impute alignments\
    \ or clones with germline sequences.\n  exportAlignments           Export V/D/J/C\
    \ alignments into tab delimited file.\n  exportAlignmentsPretty     Export verbose\
    \ information about alignments.\n  exportClones               Export assembled\
    \ clones into tab delimited file.\n  exportClonesPretty         Export verbose\
    \ information about clones.\n  exportReadsForClones       Export reads for particular\
    \ clones from \"clones & alignments\" (*.clna)\n                             \
    \  file. Output file name will be transformed into '_R1'/'_R2' pair in\n     \
    \                          case of paired end reads. Use cloneId = -1 to export\
    \ alignments not\n                               assigned to any clone (not assembled).\
    \ If no clone ids are specified\n                               (only input and\
    \ output filenames are specified) all reads assigned\n                       \
    \        to clonotypes will be exported.\n  exportAlignmentsForClones  Export\
    \ alignments for particular clones from \"clones & alignments\" (*.\n        \
    \                       clna) file.\n  exportReads                Export original\
    \ reads from vdjca file.\n  mergeAlignments            Merge several *.vdjca files\
    \ with alignments into a single alignments\n                               file.\n\
    \  filterAlignments           Filter alignments.\n  sortAlignments           \
    \  Sort alignments in vdjca file by read id.\n  alignmentsDiff             Calculates\
    \ the difference between two .vdjca files.\n  clonesDiff                 Calculates\
    \ the difference between two .clns files.\n  versionInfo                Output\
    \ information about MiXCR version which generated the file.\n  slice         \
    \             Slice ClnA file.\n"
  generated_using: *id002
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "ERROR: -h / --help is not supported: use `mixcr help [command]` for command\
  \ usage.\nUsage: scr slice [-f] [--overwrite-if-required] [--verbose] [-nw] [-i\
  \ <ids>]... <in> <out>\nSlice ClnA file.\n      <in>                 input file\n\
  \      <out>                output file\n      --overwrite-if-required\n       \
  \                    Overwrite output file if it is corrupted or if it was generated\
  \ from\n                             different input file or with different parameters.\
  \ -f / --force-overwrite\n                             overrides this option.\n\
  \      --verbose            Verbose warning messages.\n  -f, --force-overwrite \
  \   Force overwrite of output file(s).\n  -i, --id <ids>           List of read\
  \ (for .vdjca) / clone (for .clns/.clna) ids to export.\n      -nw, --no-warnings\
  \   Suppress all warning messages.\n"
generated_using: *id002
