!Command
positional:
- !Positional
  description: (Only works with -outmap) Show the names of the term in the slim mapping
    file
  position: 0
  name: shownames
  optional: false
named:
- !Flag
  description: This will force map2slim to give counts of the assoc file, rather than
    map it
  synonyms:
  - -c
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "When used in conjunction with \e[1m-c\e[0m will tab the output so\
    \ that the indentation reflects the tree hierarchy in the slim file"
  synonyms:
  - -t
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "\e[1mout file\e[0m This will write the mapped assocs (or counts) to\
    \ the specified file, rather than to the screen"
  synonyms:
  - -o
  args: !EmptyFlagArg {}
  optional: true
command:
- map2slim
parent:
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "\e[1mNAME\e[0m\n    map2slim - maps gene associations to a 'slim' ontology\n\
  \n\e[1mSYNOPSIS\e[0m\n      cd go\n      map2slim GO_slims/goslim_generic.obo ontology/gene_ontology.obo\
  \ gene-associations/gene_association.fb\n\n\e[1mDESCRIPTION\e[0m\n    Given a GO\
  \ slim file, and a current ontology (in one or more files), this\n    script will\
  \ map a gene association file (containing annotations to the\n    full GO) to the\
  \ terms in the GO slim.\n\n    The script can be used to either create a new gene\
  \ association file,\n    containing the most pertinent GO slim accessions, or in\
  \ count-mode, in\n    which case it will give distinct gene product counts for each\
  \ slim term\n\n    The association file format is described here:\n\n    <http://www.geneontology.org/GO.annotation.shtml#file>\n\
  \n\e[1mARGUMENTS\e[0m\n    -b \e[1mbucket slim file\e[0m\n        This argument\
  \ adds \e[1mbucket terms\e[0m to the slim ontology; see the\n        documentation\
  \ below for an explanation. The new slim ontology file,\n        including bucket\
  \ terms will be written to \e[1mbucket slim file\e[0m\n\n    -outmap \e[1mslim mapping\
  \ file\e[0m\n        This will generate a mapping file for every term in the full\
  \ ontology\n        showing both the most pertinent slim term and all slim terms\
  \ that are\n        ancestors. If you use this option, do NOT supply a gene-associations\n\
  \        file\n\n    shownames\n        (Only works with -outmap)\n\n        Show\
  \ the names of the term in the slim mapping file\n\n    -c  This will force map2slim\
  \ to give counts of the assoc file, rather than\n        map it\n\n    -t  When\
  \ used in conjunction with \e[1m-c\e[0m will tab the output so that the\n      \
  \  indentation reflects the tree hierarchy in the slim file\n\n    -o \e[1mout file\e\
  [0m\n        This will write the mapped assocs (or counts) to the specified file,\n\
  \        rather than to the screen\n\n\e[1mDOWNLOAD\e[0m\n    This script is part\
  \ of the \e[1mgo-perl\e[0m package, available from CPAN\n\n    <http://search.cpan.org/~cmungall/go-perl/>\n\
  \n    This script will not work without installing go-perl\n\n  \e[1mMAPPING ALGORITHM\e\
  [0m\n    GO is a DAG, not a tree. This means that there is often more than one path\n\
  \    from a GO term up to the root Gene_Ontology node; the path may intersect\n\
  \    multiple terms in the slim ontology - which means that one annotation can\n\
  \    map to multiple slim terms!\n\n    (\e[1mnote\e[0m you need to view this online\
  \ to see the image below - if you are not\n    viewing this on the http://www.geneontology.org\
  \ site, you can look at the\n    following URL:\n    <http://geneontology.cvs.sourceforge.net/*checkout*/geneontology/go-dev/go\n\
  \    -perl/doc/map2slim.gif> )\n\n    A hypothetical example blue circles show terms\
  \ in the GO slim, and yellow\n    circles show terms in the full ontology. The full\
  \ ontology subsumes the\n    slim, so the blue terms are also in the ontology.\n\
  \n      GO ID  MAPS TO SLIM ID        ALL SLIM ANCESTORS\n      =====  ===============\
  \        ==================\n      5      2+3                    2,3,1\n      6\
  \      3 only                 3,1\n      7      4 only                 4,3,1\n \
  \     8      3 only                 3,1\n      9      4 only                 4,3,1\n\
  \      10     2+3                    2,3,1\n\n    The 2nd column shows the most\
  \ pertinent ID(s) in the slim the direct\n    mapping. The 3rd column shows all\
  \ ancestors in the slim.\n\n    Note in particular the mapping of ID 9 although\
  \ this has two paths to the\n    root through the slim via 3 and 4, 3 is discarded\
  \ because it is subsumed\n    by 4.\n\n    On the other hand, 10 maps to both 2\
  \ and 3 because these are both the\n    first slim ID in the two valid paths to\
  \ the root, and neither subsumes the\n    other.\n\n    The algorithm used is:\n\
  \n    to map any one term in the full ontology: find all valid paths through to\n\
  \    the root node in the full ontology\n\n    for each path, take the first slim\
  \ term encountered in the path\n\n    discard any redundant slim terms in this set\
  \ ie slim terms subsumed by\n    other slim terms in the set\n\n  \e[1mBUCKET TERMS\e\
  [0m\n    If you run the script with the -b option, bucket terms will be added. For\n\
  \    any term P in the slim, if P has at least one child C, a bucket term P'\n \
  \   will be created under P. This is a catch-all term for mapping any term in\n\
  \    the full ontology that is a descendant of P, but NOT a descendant of any\n\
  \    child of P in the slim ontology.\n\n    For example, the slim generic.0208\
  \ has the following terms and structure:\n\n        %DNA binding ; GO:0003677\n\
  \         %chromatin binding ; GO:0003682 \n         %transcription factor activity\
  \ ; GO:0003700, GO:0000130\n\n    After adding bucket terms, it will look like this:\n\
  \n       %DNA binding ; GO:0003677\n        %chromatin binding ; GO:0003682\n  \
  \      %transcription factor activity ; GO:0003700 ; synonym:GO:0000130\n      \
  \  @bucket:Z-OTHER-DNA binding ; slim_temp_id:12\n\n    Terms from the full ontology\
  \ that are other children of DNA binding, such\n    as single-stranded DNA binding\
  \ and its descendents will map to the bucket\n    term.\n\n    The bucket term has\
  \ a slim ID which is transient and is there only to\n    facilitate the mapping.\
  \ It should not be used externally.\n\n    The bucket term has the prefix Z-OTHER;\
  \ the Z is a hack to make sure that\n    the term is always listed last in the alphabetic\
  \ ordering.\n\n    The algorithm is slightly modified if bucket terms are used.\
  \ The bucket\n    term has an implicit relationship to all OTHER siblings not in\
  \ the slim.\n\n   Do I need bucket terms?\n    Nowadays most slim files are entirely\
  \ or nearly 'complete', that is there\n    are no gaps. This means the the -b option\
  \ will not produce noticeable\n    different results. For example, you may see a\
  \ bucket term OTHER-binding\n    created, with nothing annotated to it: because\
  \ all the children of binding\n    in the GO are represented in the slim file.\n\
  \n    The bucket option is really only necessary for some of the older archived\n\
  \    slim files, which are static and were generated in a fairly ad-hoc way;\n \
  \   they tend to accumulate 'gaps' over time (eg GO will add a new child of\n  \
  \  binding, but the static slim file won't be up to date, so any gene\n    products\
  \ annotated to this new term will map to OTHER-binding in the slim)\n\n  \e[1mGRAPH\
  \ MISMATCHES\e[0m\n    Note that the slim ontology file(s) may be out of date with\
  \ respect to the\n    current ontology.\n\n    Currently map2slim does not flag\
  \ graph mismatches between the slim graph\n    and the graph in the full ontology\
  \ file; it takes the full ontology as\n    being the real graph. However, the slim\
  \ ontology will be used to format\n    the results if you select \e[1m-t -c\e[0m\
  \ as options.\n\n  \e[1mOUTPUT\e[0m\n    In normal mode, a standard format gene-association\
  \ file will be written.\n    The GO ID column (5) will contain GO slim IDs. The\
  \ mapping corresponds to\n    the 2nd column in the table above. Note that the output\
  \ file may contain\n    more lines that the input file. This is because some full\
  \ GO IDs have more\n    than one pertinent slim ID.\n\n   COUNT MODE\n    map2slim\
  \ can be run with the -c option, which will gives the counts of\n    distinct gene\
  \ products mapped to each slim term. The columns are as\n    follows\n\n    GO Term\n\
  \        The first column is the GO ID followed by the term name (the term name\n\
  \        is provided as it is found in both the full GO and slim ontologies -\n\
  \        these will usually be the same but occasionally the slim file will\n  \
  \      lage behind changes in the GO file)\n\n    Count of gene products for which\
  \ this is the most relevant slim term\n        the number of distinct gene products\
  \ for which this is the most\n        pertinent/direct slim ID. By most direct we\
  \ mean that either the\n        association is made directly to this term, OR the\
  \ association is made\n        to a child of this slim term AND there is no child\
  \ slim term which the\n        association maps to.\n\n        For most slims, this\
  \ count will be equivalent to the number of\n        associations directly mapped\
  \ to this slim term. However, some older\n        slim files are \"spotty\" in that\
  \ they admit \"gaps\". For example, if the\n        slim has all children of \"\
  biological process\" with the exception of\n        \"behavior\" then all annotations\
  \ to \"behavior\" or its children will be\n        counted here\n\n        see example\
  \ below\n\n    Count of gene products inferred to be associated with slim term\n\
  \        and the number of distinct gene products which are annotated to any\n \
  \       descendant of this slim ID (or annotated directly to the slim ID).\n\n \
  \   obsoletion flag\n    GO ontology\n\n    To take an example; if we use -t and\
  \ -c like this:\n\n      map2slim -t -c GO_slims/goslim_generic.obo ontology/gene_ontology.obo\
  \ gene-associations/gene_association.fb\n\n    Then part of the results may look\
  \ like this:\n\n     GO:0008150 biological_process (biological_process)     34 \
  \     10025           biological_process\n      GO:0007610 behavior (behavior) \
  \       632     632             biological_process\n      GO:0000004 biological\
  \ process unknown (biological process unknown)    832     832             biological_process\n\
  \      GO:0007154 cell communication (cell communication)    333     1701      \
  \      biological_process\n       GO:0008037 cell recognition (cell recognition)\
  \       19      19              biological_process                             \
  \                                 \n    19 products were mapped to GO:0008037 or\
  \ one of its children. (GO:0008037 is a leaf node in the slim, so the two counts\
  \ are identical).\n\n    On the other hand, GO:0008150 only gets 34 products for\
  \ which this is the\n    most relevant term. This is because most annotations would\
  \ map to some\n    child of GO:0008150 in the slim, such as GO:0007610 (behavior).\
  \ These 34\n    gene products are either annotated directly to GO:0008150, or to\
  \ some\n    child of this term which is not in the slim. This can point to 'gaps'\
  \ in\n    the slim. Note that running map2slim with the -b option will 'plug' these\n\
  \    gaps with artificial filler terms.\n\n\e[1mAUTHOR\e[0m\n    Chris Mungall BDGP\n\
  \n\e[1mSEE ALSO\e[0m\n    http://www.godatabase.org/dev\n\n    GO::Parser\n\n  \
  \  GO::Model::Graph\n\n"
generated_using:
- --help
