!Command
command:
- FastTree
positional: []
named:
- !Flag
  description: "-- search the visible set (the top hit for each node) only\nUnlike\
    \ the original fast neighbor-joining, -fastest updates visible(C)\nafter joining\
    \ A and B if join(AB,C) is better than join(C,visible(C))"
  synonyms:
  - -fastest
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "-- set the top-hit list size to parameter*sqrt(N)\nFastTree estimates\
    \ the top m hits of a leaf from the\ntop 2*m hits of a 'close' neighbor, where\
    \ close is\ndefined as d(seed,close) < 0.75 * d(seed, hit of rank 2*m),\nand updates\
    \ the top-hits as joins proceed"
  synonyms:
  - -topm
  args: !SimpleFlagArg
    name: '1.0'
  optional: true
- !Flag
  description: -- modify the close heuristic, lower is more conservative
  synonyms:
  - -close
  args: !SimpleFlagArg
    name: '0.75'
  optional: true
- !Flag
  description: "-- compare a joined node to all other nodes if its\ntop-hit list is\
    \ less than 80% of the desired length,\nor if the age of the top-hit list is log2(m)\
    \ or greater"
  synonyms:
  - -refresh
  args: !SimpleFlagArg
    name: '0.8'
  optional: true
- !Flag
  description: ": weighted joins as in BIONJ (default)\nFastTree will also weight\
    \ joins during NNIs"
  synonyms:
  - -bionj
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ': regular (unweighted) neighbor-joining'
  synonyms:
  - -nj
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "Unknown or incorrect use of option --help\nUsage for FastTree 1.0.1:\n\
  FastTree [-quiet] [-boot 1000] [-seed 1253] [-nni 10] [-slow | -fastest]\n     \
  \     [-top | -notop] [-topm 1.0 [-close 0.75] [-refresh 0.8]]\n          [-matrix\
  \ Matrix | -nomatrix] [-nj | -bionj]\n          [-nt] [-n 100] [alignment] > newick_tree\n\
  \nor\n\nFastTree [-nt] [-matrix Matrix | -nomatrix] [-rawdist] -makematrix [alignment]\n\
  \    [-n 100] > phylip_distance_matrix\n\n  FastTree supports fasta or phylip interleaved\
  \ alignments\n  By default FastTree expects protein alignments,  use -nt for nucleotides\n\
  \  FastTree reads standard input if no alignment file is given\n\n  Use -n if you\
  \ want to read multiple alignments in. This only\n  works with phylip interleaved\
  \ format. For example, you can\n  use it with the output from phylip's seqboot.\
  \ If you use -n, FastTree\n  will write 1 tree per line to standard output. You\
  \ might also\n  want to use -quiet to eliminate status messages to standard error.\n\
  \nDistances:\n  Default: For protein sequences, log-corrected distances and an\n\
  \     amino acid dissimilarity matrix derived from BLOSUM45\n  or for nucleotide\
  \ sequences, Jukes-Cantor distances\n  To specify a different matrix, use -matrix\
  \ FilePrefix or -nomatrix\n  Use -rawdist to turn the log-correction off\n  or to\
  \ use %different instead of Jukes-Cantor\n\nNearest-neighbor interchanges:\n  By\
  \ default, FastTree tries to improve the tree by doing log2(N)+1\n  rounds of nearest-neighbor\
  \ interchanges (NNI), where N is the number of\n  unique sequences. Use -nni to\
  \ set the number of rounds of NNI. If\n  FastTree reports 'Bad splits: 0/' then\
  \ additional rounds will probably\n  have no effect.\n\nSupport value options:\n\
  \  by default, FastTree computes a local bootstrap with 1,000 resamples.\n  The\
  \ support values are proportions ranging from 0 to 1\n  The local bootstrap does\
  \ not recompute topologies, so it is very fast\n\n  Use -boot 0 to turn off bootstrap\
  \ or -boot 100 to use 100 resamples\n  Use -seed to initialize the random number\
  \ generator\n\nSearching for the best join:\n  By default, FastTree combines the\
  \ 'visible set' of fast neighbor-joining with\n      local hill-climbing as in relaxed\
  \ neighbor-joining\n  -slow -- exhaustive search (like NJ or BIONJ, but different\
  \ gap handling)\n      -slow takes half an hour instead of 8 seconds for 1,250 proteins\n\
  \  -fastest -- search the visible set (the top hit for each node) only\n      Unlike\
  \ the original fast neighbor-joining, -fastest updates visible(C)\n      after joining\
  \ A and B if join(AB,C) is better than join(C,visible(C))\n\nTop-hit heuristics:\n\
  \  by default, FastTree uses a top-hit list to speed up search\n  use -notop (or\
  \ -slow) to turn this feature off\n         and compare all leaves to each other,\n\
  \         and all new joined nodes to each other\n  -topm 1.0 -- set the top-hit\
  \ list size to parameter*sqrt(N)\n         FastTree estimates the top m hits of\
  \ a leaf from the\n         top 2*m hits of a 'close' neighbor, where close is\n\
  \         defined as d(seed,close) < 0.75 * d(seed, hit of rank 2*m),\n        \
  \ and updates the top-hits as joins proceed\n  -close 0.75 -- modify the close heuristic,\
  \ lower is more conservative\n  -refresh 0.8 -- compare a joined node to all other\
  \ nodes if its\n         top-hit list is less than 80% of the desired length,\n\
  \         or if the age of the top-hit list is log2(m) or greater\n\nJoin options:\n\
  \  -bionj: weighted joins as in BIONJ (default)\n          FastTree will also weight\
  \ joins during NNIs\n  -nj: regular (unweighted) neighbor-joining\n\n"
generated_using:
- --help
