!Command
command:
- stag-join.pl
positional:
- !Positional
  description: ARGUMENTS
  position: 0
  name: file
  optional: false
named:
- !Flag
  description: "|parser FORMAT\nFORMAT is one of xml, sxpr or itext, or the name of\
    \ a perl module\nxml assumed as default"
  synonyms:
  - -p
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "|writer FORMAT\nFORMAT is one of xml, sxpr or itext, or the name of\
    \ a perl module"
  synonyms:
  - -w
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "NAME\n    stag-join - joins two stag files together based around common\
  \ key\n\nSYNOPSIS\n      stag-join  -w xml country/city_id=capital/capital_id countries.xml\
  \ capitals.xml\n\n      stag-join  -w itext gene/tax_id=species/tax_id genedb.itext\
  \ speciesdb.itext\n\nDESCRIPTION\n    Performs a relational-style INNER JOIN between\
  \ two stag trees; this\n    effectively merges two files together, based on some\
  \ kind of ID in the\n    file\n\nARGUMENTS\n    -p|parser FORMAT\n        FORMAT\
  \ is one of xml, sxpr or itext, or the name of a perl module\n\n        xml assumed\
  \ as default\n\n    -w|writer FORMAT\n        FORMAT is one of xml, sxpr or itext,\
  \ or the name of a perl module\n\nLIMITATIONS\n    currently not event based, so\
  \ may not be memory efficicent. could be\n    easily rewritten to be event based\n\
  \nSEE ALSO\n    Data::Stag\n\n    This script is a wrapper for the method\n\n  \
  \    Data::Stag->ijoin()\n\nPOD ERRORS\n    Hey! The above document had some coding\
  \ errors, which are explained\n    below:\n\n    Around line 108:\n        '=item'\
  \ outside of any '=over'\n\n    Around line 118:\n        You forgot a '=back' before\
  \ '=head1'\n\n"
generated_using:
- --help
