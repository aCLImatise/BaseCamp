!Command
positional: []
named:
- !Flag
  description: '|parser FORMAT FORMAT is one of xml, sxpr or itext, or the name of
    a perl module xml assumed as default'
  synonyms:
  - -p
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: exports schema as DTD
  synonyms:
  - -dtd
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: '|writer FORMAT FORMAT is one of xml, sxpr or itext, or the name of
    a perl module, OR DTD The default is sxpr note that stag schemas exported as xml
    will be invalid xml, due to the use of symbols *, +, ? in the node names'
  synonyms:
  - -w
  args: !EmptyFlagArg {}
  optional: true
command:
- stag-autoschema.pl
parent:
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "\e[1mNAME\e[0m\n    stag-autoschema - writes the implicit stag-schema\
  \ for a stag file\n\n\e[1mSYNOPSIS\e[0m\n      stag-autoschema -w sxpr sample-data.xml\n\
  \n      stag-autoschema -dtd sample-data.xml\n\n\e[1mDESCRIPTION\e[0m\n    Takes\
  \ a stag compatible file (xml, sxpr, itext), or a file in any format\n    plus a\
  \ parser, and writes out the implicit underlying stag-schema\n\n    stag-schema\
  \ should look relatively self-explanatory.\n\n    Here is an example stag-schema,\
  \ shown in sxpr syntax:\n\n      (db\n       (person*\n        (name \"s\"\n   \
  \     (address+\n         (address_type \"s\")\n         (street \"s\")\n      \
  \   (street2? \"s\")\n         (city \"s\")\n         (zip? \"s\")))))\n\n    The\
  \ database db contains zero or more persons, each person has a mandatory\n    name\
  \ and at least one address.\n\n    The cardinality mnemonics are as follows:\n\n\
  \    +   1 or more\n\n    ?   0 or one\n\n    *   0 or more\n\n    The default cardinality\
  \ is 1\n\n\e[1mARGUMENTS\e[0m\n    -p|parser FORMAT\n        FORMAT is one of xml,\
  \ sxpr or itext, or the name of a perl module\n\n        xml assumed as default\n\
  \n    -dtd\n        exports schema as DTD\n\n    -w|writer FORMAT\n        FORMAT\
  \ is one of xml, sxpr or itext, or the name of a perl module, OR\n        DTD\n\n\
  \        The default is sxpr\n\n        note that stag schemas exported as xml will\
  \ be invalid xml, due to the\n        use of symbols *, +, ? in the node names\n\
  \n\e[1mLIMITATIONS\e[0m\n    not event based - memory usage becomes exhorbitant\
  \ on large files; prepare\n    a small sample beforehand\n\n\e[1mPOD ERRORS\e[0m\n\
  \    Hey! \e[1mThe above document had some coding errors, which are explained\n\
  \    below:\e[0m\n\n    Around line 137:\n        Expected text after =item, not\
  \ a bullet\n\n"
generated_using:
- --help
