!Command
positional: []
named: []
command:
- xml_pp
parent:
subcommands: []
help_flag: !Flag
  description: display help
  synonyms:
  - -h
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "NAME\n    xml_pp - xml pretty-printer\n\nSYNOPSYS\n    xml_pp [options]\
  \ [<files>]\n\nDESCRIPTION\n    XML pretty printer using XML::Twig\n\nOPTIONS\n\
  \    -i[<extension>]\n        edits the file(s) in place, if an extension is provided\
  \ (no space\n        between \"-i\" and the extension) then the original file is\
  \ backed-up\n        with that extension\n\n        The rules for the extension\
  \ are the same as Perl's (see perldoc\n        perlrun): if the extension includes\
  \ no \"*\" then it is appended to\n        the original file name, If the extension\
  \ does contain one or more\n        \"*\" characters, then each \"*\" is replaced\
  \ with the current filename.\n\n    -s <style>\n        the style to use for pretty\
  \ printing: none, nsgmls, nice, indented,\n        record, or record_c (see XML::Twig\
  \ docs for the exact description of\n        those styles), 'indented' by default\n\
  \n    -p <tag(s)>\n        preserves white spaces in tags. You can use several \"\
  -p\" options or\n        quote the tags if you need more than one\n\n    -e <encoding>\n\
  \        use XML::Twig output_encoding (based on Text::Iconv or Unicode::Map8\n\
  \        and Unicode::String) to set the output encoding. By default the\n     \
  \   original encoding is preserved.\n\n        If this option is used the XML declaration\
  \ is updated (and created\n        if there was none).\n\n        Make sure that\
  \ the encoding is supported by the parser you use if\n        you want to be able\
  \ to process the pretty_printed file (XML::Parser\n        does not support 'latin1'\
  \ for example, you have to use 'iso-8859-1')\n\n    -l  loads the documents in memory\
  \ instead of outputting them as they are\n        being parsed.\n\n        This\
  \ prevents a bug (see BUGS) but uses more memory\n\n    -f <file>\n        read\
  \ the list of files to process from <file>, one per line\n\n    -v  verbose (list\
  \ the current file being processed)\n\n    --  stop argument processing (to process\
  \ files that start with -)\n\n    -h  display help\n\nEXAMPLES\n      xml_pp foo.xml\
  \ > foo_pp.xml           # pretty print foo.xml \n      xml_pp < foo.xml > foo_pp.xml\
  \         # pretty print from standard input\n\n      xml_pp -v -i.bak *.xml   \
  \             # pretty print .xml files, with backups\n      xml_pp -v -i'orig_*'\
  \ *.xml            # backups are named orig_<filename>\n\n      xml_pp -i -p pre\
  \ foo.xhtml            # preserve spaces in pre tags\n  \n      xml_pp -i.bak -p\
  \ 'pre code' foo.xml   # preserve spaces in pre and code tags\n      xml_pp -i.bak\
  \ -p pre -p code foo.xml  # same\n\n      xml_pp -i -s record mydb_export.xml  \
  \ # pretty print using the record style\n\n      xml_pp -e utf8 -i foo.xml     \
  \        # output will be in utf8\n      xml_pp -e iso-8859-1 -i foo.xml       #\
  \ output will be in iso-8859-1\n\n      xml_pp -v -i.bak -f lof               #\
  \ pretty print in place files from lof\n  \n      xml_pp -- -i.xml             \
  \         # pretty print the -i.xml file\n\n      xml_pp -l foo.xml            \
  \         # loads the entire file in memory \n                                 \
  \           # before pretty printing it\n\n      xml_pp -h                     \
  \        # display help\n\nBUGS\n    Elements with mixed content that start with\
  \ an embedded element get an\n    extra \\n\n\n      <elt><b>b</b>toto<b>bold</b></elt>\n\
  \n    will be output as\n\n      <elt>\n        <b>b</b>toto<b>bold</b></elt>\n\n\
  \    Using the \"-l\" option solves this bug (but uses more memory)\n\nTODO\n  \
  \  update XML::Twig to use Encode with perl 5.8.0\n\nAUTHOR\n    Michel Rodriguez\
  \ <mirod@xmltwig.com>\n\n"
generated_using:
- --help
