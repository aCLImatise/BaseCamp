&id001 !Command
command:
- tn93-cluster
positional: []
named:
- !Flag
  description: "direct the output file with clusters to OUTPUT either\nJSON or sets\
    \ of FASTA files representing individual clusters\n(default=stdout) see also -f"
  synonyms:
  - -o
  args: !SimpleFlagArg
    name: OUTPUT
  optional: true
- !Flag
  description: sequences which lie within this distance will be clustered (>=0, default=0.015)
  synonyms:
  - -t
  args: !SimpleFlagArg
    name: THRESHOLD
  optional: true
- !Flag
  description: "handle ambigous nucleotides using one of the following strategies\
    \ (default=resolve)\nresolve: resolve ambiguities to minimize distance (e.g.R\
    \ matches A);\naverage: average ambiguities (e.g.R-A is 0.5 A-A and 0.5 G-A);\n\
    skip:    do not include sites with ambiguous nucleotides in distance calculations;\n\
    gapmm:   a gap ('-') matched to anything other than another gap is like matching\
    \ an N (4-fold ambig) to it;\na string (e.g. RY): any ambiguity in the list is\
    \ RESOLVED; any ambiguitiy NOT in the list is averaged\n(LIST-NOT LIST will also\
    \ be averaged);"
  synonyms:
  - -a
  args: !SimpleFlagArg
    name: AMBIGS
  optional: true
- !Flag
  description: "create clusters based on the following rules (default=all)\nall: \
    \    each sequence in the cluster is within the specified distance threshold\n\
    of EVERY other sequence; this cluster definition is stable from run to run\nany:\
    \     each sequence in the cluster is within the specified distance threshold\n\
    of AT LEAST ONE other sequence; this cluster definition need NOT be stable\nfrom\
    \ run to run"
  synonyms:
  - -c
  args: !SimpleFlagArg
    name: CLUSTER-TYPE
  optional: true
- !Flag
  description: "output clusters in the following format (default=json)\njson:    write\
    \ a JSON file with individual clusters represented by the 'centroid'\ni.e. the\
    \ longest sequence, and the list of all other sequence members\nfiles:   if OUTPUT\
    \ is set then write each cluster to as a FASTA file OUTPUT.x where\nx is the cluster\
    \ ID; if OUTPUT is stdout, then write each cluster as a FASTA\nfile separated\
    \ by a line of ======"
  synonyms:
  - -m
  args: !SimpleFlagArg
    name: OUTPUT-MODE
  optional: true
- !Flag
  description: "only process pairs of sequences that overlap over at least OVERLAP\
    \ nucleotides\n(an integer >0, default=100)"
  synonyms:
  - -l
  args: !SimpleFlagArg
    name: OVERLAP
  optional: true
- !Flag
  description: "in combination with AMBIGS, works to limit (for resolve and string\
    \ options to AMBIG)\nthe maximum tolerated FRACTION of ambiguous characters; sequences\
    \ whose pairwise comparisons\ninclude no more than FRACTION [0,1] of sites with\
    \ resolvable ambiguities will be resolved\nwhile all others will be AVERAGED (default\
    \ = 1.0)"
  synonyms:
  - -g
  args: !SimpleFlagArg
    name: FRACTION
  optional: true
- !Flag
  description: do not print progress updates to stderr (default is to print)
  synonyms:
  - -q
  args: !SimpleFlagArg
    name: QUIET
  optional: true
parent:
subcommands:
- !Command
  command:
  - tn93-cluster
  - FASTA
  positional: []
  named:
  - !Flag
    description: ''
    synonyms:
    - -q
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: ''
    synonyms:
    - -g
    args: !SimpleFlagArg
      name: FRACTION
    optional: true
  - !Flag
    description: ''
    synonyms:
    - -m
    args: !SimpleFlagArg
      name: OUTPUT_MODE
    optional: true
  - !Flag
    description: ''
    synonyms:
    - -c
    args: !SimpleFlagArg
      name: CLUSTER-TYPE
    optional: true
  - !Flag
    description: ''
    synonyms:
    - -t
    args: !SimpleFlagArg
      name: THERSHOLD
    optional: true
  - !Flag
    description: ''
    synonyms:
    - -l
    args: !SimpleFlagArg
      name: OVERLAP
    optional: true
  - !Flag
    description: ''
    synonyms:
    - -a
    args: !SimpleFlagArg
      name: AMBIGS
    optional: true
  - !Flag
    description: ''
    synonyms:
    - -o
    args: !SimpleFlagArg
      name: OUTPUT
    optional: true
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    description: ''
    synonyms:
    - -h
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: tn93-cluster [-h] [-o OUTPUT] [-a AMBIGS] [-l OVERLAP] [-t THERSHOLD]\
    \ [-c CLUSTER-TYPE] [-m OUTPUT_MODE] [-g FRACTION] [-q] [FASTA]\ntn93-cluster:\
    \ error: unknown argument: FASTA\n"
  generated_using: &id002
  - --help
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: tn93-cluster [-h] [-o OUTPUT] [-a AMBIGS] [-l OVERLAP] [-t THERSHOLD]\
  \ [-c CLUSTER-TYPE] [-m OUTPUT_MODE] [-g FRACTION] [-q] [FASTA]\n\nread a FASTA\
  \ MSA and (greedy) cluster sequences that lie within a specific distance of each\
  \ other\n\noptional arguments:\n  -h, --help               show this help message\
  \ and exit\n  -o OUTPUT                direct the output file with clusters to OUTPUT\
  \ either \n                           JSON or sets of FASTA files representing individual\
  \ clusters\n                           (default=stdout) see also -f\n  -t THRESHOLD\
  \             sequences which lie within this distance will be clustered (>=0, default=0.015)\n\
  \  -a AMBIGS                handle ambigous nucleotides using one of the following\
  \ strategies (default=resolve)\n                           resolve: resolve ambiguities\
  \ to minimize distance (e.g.R matches A);\n                           average: average\
  \ ambiguities (e.g.R-A is 0.5 A-A and 0.5 G-A);\n                           skip:\
  \    do not include sites with ambiguous nucleotides in distance calculations;\n\
  \                           gapmm:   a gap ('-') matched to anything other than\
  \ another gap is like matching an N (4-fold ambig) to it;\n                    \
  \       a string (e.g. RY): any ambiguity in the list is RESOLVED; any ambiguitiy\
  \ NOT in the list is averaged \n                           (LIST-NOT LIST will also\
  \ be averaged);\n  -c CLUSTER-TYPE          create clusters based on the following\
  \ rules (default=all)\n                           all:     each sequence in the\
  \ cluster is within the specified distance threshold \n                        \
  \            of EVERY other sequence; this cluster definition is stable from run\
  \ to run\n                           any:     each sequence in the cluster is within\
  \ the specified distance threshold \n                                    of AT LEAST\
  \ ONE other sequence; this cluster definition need NOT be stable \n            \
  \                        from run to run\n  -m OUTPUT-MODE           output clusters\
  \ in the following format (default=json)\n                           json:    write\
  \ a JSON file with individual clusters represented by the 'centroid' \n        \
  \                            i.e. the longest sequence, and the list of all other\
  \ sequence members\n                           files:   if OUTPUT is set then write\
  \ each cluster to as a FASTA file OUTPUT.x where\n                             \
  \       x is the cluster ID; if OUTPUT is stdout, then write each cluster as a FASTA\n\
  \                                    file separated by a line of ======\n  -l OVERLAP\
  \               only process pairs of sequences that overlap over at least OVERLAP\
  \ nucleotides \n                           (an integer >0, default=100)\n  -g FRACTION\
  \              in combination with AMBIGS, works to limit (for resolve and string\
  \ options to AMBIG)\n                           the maximum tolerated FRACTION of\
  \ ambiguous characters; sequences whose pairwise comparisons\n                 \
  \          include no more than FRACTION [0,1] of sites with resolvable ambiguities\
  \ will be resolved\n                           while all others will be AVERAGED\
  \ (default = 1.0)\n  -q QUIET                 do not print progress updates to stderr\
  \ (default is to print)\n"
generated_using: *id002
