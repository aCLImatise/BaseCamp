!Command
command:
- pglite
positional: []
named:
- !Flag
  description: "|postgres\nDefaults to `postgres`. The `pipeline` personality exists\
    \ to support\nPipelineDB."
  synonyms:
  - -p
  - --personality
  args: !SimpleFlagArg
    name: pipeline
  optional: true
- !Flag
  description: "/path/to/data\nDefaults to `./var`.\n"
  synonyms:
  - -d
  - --directory
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: " USAGE: pglite (-p|--personality <personality>)? (-d|--directory <path>)?\n\
  \        pglite setup (-p|--personality <personality>)? (-d|--directory <path>)?\n\
  \        pglite url (-d|--directory <path>)?\n        pglite start|stop|status (-d|--directory\
  \ <path>)?\n        pglite connect (-d|--directory <path>)?\n        pglite rm (-d|--directory\
  \ <path>)?\n\n  Creates and manages the lifecycle of a Postgres database, using\
  \ the system\n  server installation.\n\n  This is intended to facilitate embedded\
  \ applications, ephemeral database for\n  data processing applications, and testing.\n\
  \n pglite setup\n\n  Create the database directory.\n\n pglite url\n\n  Obtain the\
  \ Postgres URL for connecting (always a UNIX socket-based URL).\n\n pglite start|stop|status\n\
  \n  Start, stop or poll the status of the server.\n\n pglite connect\n\n  Connect\
  \ to the database, starting the server if it's not already started.\n\n pglite rm\n\
  \n  Remove the database directory and its configuration.\n\n -p|--personality pipeline|postgres\n\
  \n  Defaults to `postgres`. The `pipeline` personality exists to support\n  PipelineDB.\n\
  \n -d|--directory /path/to/data\n\n  Defaults to `./var`.\n\n"
generated_using:
- --help
