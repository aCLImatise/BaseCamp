!Command
positional:
- !Positional
  description: -verify-message-integrity Checks message data reliability for any non-empty
    message. add '-D CONFIG_SSE_4_2' in the Makefile to use hardware instruction (SSE
    4.2) -write-scheduling-data Writes RayPlatform scheduling information to RayOutput/Scheduling/
    -write-plugin-data Writes data for plugins registered with the RayPlatform API
    to RayOutput/Plugins -run-profiler Runs the profiler as the code runs. By default,
    only show granularity warnings. Running the profiler increases running times.
    -with-profiler-details Shows number of messages sent and received in each methods
    during in each time slices (epochs). Needs -run-profiler. -debug Turns on -run-profiler
    and -with-profiler-details for debugging -show-communication-events Shows all
    messages sent and received. -show-read-placement Shows read placement in the graph
    during the extension. -debug-bubbles Debugs bubble code. Bubbles can be due to
    heterozygous sites or sequencing errors or other (unknown) events -debug-seeds
    Debugs seed code. Seeds are paths in the graph that are likely unique. -debug-fusions
    Debugs fusion code. -debug-scaffolder Debug the scaffolder.
  position: 0
  name: Debugging
  optional: false
- !Positional
  description: Overall numbers for the assembly
  position: 0
  name: RayOutput/OutputNumbers.txt
  optional: false
- !Positional
  description: The distribution of coverage values
  position: 0
  name: RayOutput/CoverageDistribution.txt
  optional: false
- !Positional
  description: Analysis of the coverage distribution
  position: 1
  name: RayOutput/CoverageDistributionAnalysis.txt
  optional: false
- !Positional
  description: Distribution of ingoing and outgoing degrees
  position: 2
  name: RayOutput/degreeDistribution.txt
  optional: false
- !Positional
  description: 'k-mer graph, required option: -write-kmers The resulting file is not
    utilised by Ray. The resulting file is very large.'
  position: 3
  name: RayOutput/kmers.txt
  optional: false
- !Positional
  description: Number of reads in each file
  position: 0
  name: RayOutput/NumberOfSequences.txt
  optional: false
- !Positional
  description: Sequence partition
  position: 1
  name: RayOutput/SequencePartition.txt
  optional: false
- !Positional
  description: 'RayOutput/AMOS.afg Assembly representation in AMOS format, required
    option: -amos'
  position: 0
  name: AMOS
  optional: false
- !Positional
  description: RayOutput/NetworkTest.txt Latencies in microseconds RayOutput/Rank<rank>NetworkTestData.txt
    Network test raw data
  position: 1
  name: Communication
  optional: false
named:
- !Flag
  description: Displays Ray version and compilation options.
  synonyms:
  - -version
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Specifies the directory for outputted files. Default is RayOutput
    Other name: -output'
  synonyms:
  - -o
  args: !SimpleFlagArg
    name: outputDirectory
  optional: true
- !Flag
  description: 'Disables read recycling during the assembly reads will be set free
    in 3 cases: 1. the distance did not match for a pair 2. the read has not met its
    mate 3. the library population indicates a wrong placement see Constrained traversal
    of repeats with paired sequences. Sébastien Boisvert, Élénie Godzaridis, François
    Laviolette & Jacques Corbeil. First Annual RECOMB Satellite Workshop on Massively
    Parallel Sequencing, March 26-27 2011, Vancouver, BC, Canada.'
  synonyms:
  - -disable-recycling
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Debugs the recycling events
  synonyms:
  - -debug-recycling
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Disables assembly by ignoring seeds.
  synonyms:
  - -ignore-seeds
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Merges seeds initially to reduce running time.
  synonyms:
  - -merge-seeds
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Disables the scaffolder.
  synonyms:
  - -disable-scaffolder
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Changes the minimum seed length, default is 100 nucleotides
  synonyms:
  - -minimum-seed-length
  args: !SimpleFlagArg
    name: minimumSeedLength
  optional: true
- !Flag
  description: Changes the minimum contig length, default is 100 nucleotides
  synonyms:
  - -minimum-contig-length
  args: !SimpleFlagArg
    name: minimumContigLength
  optional: true
- !Flag
  description: Runs in color-space Needs csfasta files. Activated automatically if
    csfasta files are provided.
  synonyms:
  - -color-space
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Ignores any seed with a coverage depth above this threshold. The default
    is 4294967295.
  synonyms:
  - -use-maximum-seed-coverage
  args: !SimpleFlagArg
    name: maximumSeedCoverageDepth
  optional: true
- !Flag
  description: Sets the minimum seed coverage depth. Any path with a coverage depth
    lower than this will be discarded. The default is 0.
  synonyms:
  - -use-minimum-seed-coverage
  args: !SimpleFlagArg
    name: minimumSeedCoverageDepth
  optional: true
- !Flag
  description: Sets the number of bits for the Bloom filter Default is auto bits (adaptive),
    0 bits disables the Bloom filter.
  synonyms:
  - -bloom-filter-bits
  args: !SimpleFlagArg
    name: bits
  optional: true
- !Flag
  description: 'Sets the initial number of buckets. Must be a power of 2 ! Default
    value: 268435456'
  synonyms:
  - -hash-table-buckets
  args: !SimpleFlagArg
    name: buckets
  optional: true
- !Flag
  description: 'Sets the number of buckets per group for sparse storage Default value:
    64, Must be between >=1 and <= 64'
  synonyms:
  - -hash-table-buckets-per-group
  args: !SimpleFlagArg
    name: buckets
  optional: true
- !Flag
  description: 'Sets the load factor threshold for real-time resizing Default value:
    0.75, must be >= 0.5 and < 1'
  synonyms:
  - -hash-table-load-factor-threshold
  args: !SimpleFlagArg
    name: threshold
  optional: true
- !Flag
  description: Activates verbosity for the distributed storage engine
  synonyms:
  - -hash-table-verbosity
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Provides a directory containing fasta files to be searched in the de
    Bruijn graph. Biological abundances will be written to RayOutput/BiologicalAbundances
    See Documentation/BiologicalAbundances.txt
  synonyms:
  - -search
  args: !SimpleFlagArg
    name: searchDirectory
  optional: true
- !Flag
  description: Sets one color per file instead of one per sequence. By default, each
    sequence in each file has a different color. For files with large numbers of sequences,
    using one single color per file may be more efficient.
  synonyms:
  - -one-color-per-file
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Computes contig neighborhoods in the de Bruijn graph Output file:
    RayOutput/NeighbourhoodRelations.txt'
  synonyms:
  - -enable-neighbourhoods
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Writes the AMOS file called RayOutput/AMOS.afg An AMOS file contains
    read positions on contigs. Can be opened with software with graphical user interface.
  synonyms:
  - -amos
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Writes k-mer graph to RayOutput/kmers.txt The resulting file is not
    utilised by Ray. The resulting file is very large.
  synonyms:
  - -write-kmers
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Exits after building graph.
  synonyms:
  - -graph-only
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Writes read markers to disk.
  synonyms:
  - -write-read-markers
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Writes seed DNA sequences to RayOutput/Rank<rank>.RaySeeds.fasta
  synonyms:
  - -write-seeds
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Writes extension DNA sequences to RayOutput/Rank<rank>.RayExtensions.fasta
  synonyms:
  - -write-extensions
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Writes contig paths with coverage values to RayOutput/Rank<rank>.RayContigPaths.txt
  synonyms:
  - -write-contig-paths
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Writes marker statistics.
  synonyms:
  - -write-marker-summary
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Shows memory usage. Data is fetched from /proc on GNU/Linux Needs __linux__
  synonyms:
  - -show-memory-usage
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Shows memory allocation events
  synonyms:
  - -show-memory-allocations
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Write checkpoint files
  synonyms:
  - -write-checkpoints
  args: !SimpleFlagArg
    name: checkpointDirectory
  optional: true
- !Flag
  description: Read checkpoint files
  synonyms:
  - -read-checkpoints
  args: !SimpleFlagArg
    name: checkpointDirectory
  optional: true
- !Flag
  description: Read and write checkpoint files
  synonyms:
  - -read-write-checkpoints
  args: !SimpleFlagArg
    name: checkpointDirectory
  optional: true
- !Flag
  description: 'Enables the Ray message router. Disabled by default. Messages will
    be routed accordingly so that any rank can communicate directly with only a few
    others. Without -route-messages, any rank can communicate directly with any other
    rank. Files generated: Routing/Connections.txt, Routing/Routes.txt and Routing/RelayEvents.txt
    and Routing/Summary.txt'
  synonyms:
  - -route-messages
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Sets the connection type for routes. Accepted values are debruijn,\
    \ hypercube, polytope, group, random, kautz and complete. Default is debruijn.\
    \ torus: a k-ary n-cube, radix: k, dimension: n, degree: 2*dimension, vertices:\
    \ radix^dimension polytope: a convex regular polytope, alphabet is {0,1,...,B-1}\
    \ and the vertices is a power of B hypercube: a hypercube, alphabet is {0,1} and\
    \ the vertices is a power of 2 debruijn: a full de Bruijn graph a given alphabet\
    \ and diameter kautz: a full de Kautz graph, which is a subgraph of a de Bruijn\
    \ graph group: silly model where one representative per group can communicate\
    \ with outsiders random: Erdős–Rényi model complete: a full graph with all the\
    \ possible connections With the type debruijn, the number of ranks must be a power\
    \ of something. Examples: 256 = 16*16, 512=8*8*8, 49=7*7, and so on. Otherwise,\
    \ don't use debruijn routing but use another one With the type kautz, the number\
    \ of ranks n must be n=(k+1)*k^(d-1) for some k and d"
  synonyms:
  - -connection-type
  args: !SimpleFlagArg
    name: type
  optional: true
- !Flag
  description: Specifies the outgoing degree for the routing graph. See Documentation/Routing.txt
  synonyms:
  - -routing-graph-degree
  args: !SimpleFlagArg
    name: degree
  optional: true
command:
- Ray
parent:
subcommands: []
help_flag: !Flag
  description: Displays this help page.
  synonyms:
  - -help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "NAME\n       Ray - assemble genomes in parallel using the message-passing\
  \ interface\n\nSYNOPSIS\n       mpiexec -n 80 Ray -k 31 -p l1_1.fastq l1_2.fastq\
  \ -p l2_1.fastq l2_2.fastq -o test\n\n       mpiexec -n 80 Ray Ray.conf # with commands\
  \ in a file\n\n       mpiexec -n 80 Ray -k 31 -detect-sequence-files SampleDirectory\
  \ # auto-detection\n\n       mpiexec -n 10 Ray -mini-ranks-per-rank 7 Ray.conf #\
  \ with mini-ranks\n\nDESCRIPTION:\n\n  The Ray genome assembler is built on top\
  \ of the RayPlatform, a generic plugin-based\n  distributed and parallel compute\
  \ engine that uses the message-passing interface\n  for passing messages.\n\n  Ray\
  \ targets several applications:\n\n    - de novo genome assembly (with Ray vanilla)\n\
  \    - de novo meta-genome assembly (with Ray Méta)\n    - de novo transcriptome\
  \ assembly (works, but not tested a lot)\n    - quantification of contig abundances\n\
  \    - quantification of microbiome consortia members (with Ray Communities)\n \
  \   - quantification of transcript expression\n    - taxonomy profiling of samples\
  \ (with Ray Communities)\n    - gene ontology profiling of samples (with Ray Ontologies)\n\
  \n    - compare DNA samples using words (Ray -run-surveyor ...; see Ray Surveyor\
  \ options)\n\n       -help\n              Displays this help page.\n\n       -version\n\
  \              Displays Ray version and compilation options.\n\n  Run Ray in pure\
  \ MPI mode\n\n    mpiexec -n 80 Ray ...\n\n  Run Ray with mini-ranks on 10 machines,\
  \ 8 cores / machine (MPI and IEEE POSIX threads)\n\n    mpiexec -n 10 Ray -mini-ranks-per-rank\
  \ 7 ...\n\n  Run Ray on one core only (still needs MPI)\n\n    Ray ...\n\n\n  Using\
  \ a configuration file\n\n    Ray can be launched with\n    mpiexec -n 16 Ray Ray.conf\n\
  \    The configuration file can include comments (starting with #).\n\n  K-mer length\n\
  \n       -k kmerLength\n              Selects the length of k-mers. The default\
  \ value is 21. \n              It must be odd because reverse-complement vertices\
  \ are stored together.\n              The maximum length is defined at compilation\
  \ by CONFIG_MAXKMERLENGTH\n              Larger k-mers utilise more memory.\n\n\
  \  Inputs\n\n       -detect-sequence-files SampleDirectory\n              Detects\
  \ files in a directory automatically.\n              This option can generate these\
  \ commands automatically for you: LoadPairedEndReads (-p) and LoadSingleEndReads\
  \ (-s)\n\n       -p leftSequenceFile rightSequenceFile [averageOuterDistance standardDeviation]\n\
  \              Provides two files containing paired-end reads.\n              averageOuterDistance\
  \ and standardDeviation are automatically computed if not provided.\n          \
  \    LoadPairedEndReads is equivalent to -p\n\n       -i interleavedSequenceFile\
  \ [averageOuterDistance standardDeviation]\n              Provides one file containing\
  \ interleaved paired-end reads.\n              averageOuterDistance and standardDeviation\
  \ are automatically computed if not provided.\n\n       -s sequenceFile\n      \
  \        Provides a file containing single-end reads.\n              LoadSingleEndReads\
  \ is equivalent to -s\n\n  Outputs\n\n       -o outputDirectory\n              Specifies\
  \ the directory for outputted files. Default is RayOutput\n              Other name:\
  \ -output\n\n  Ray Surveyor options\n\n       -run-surveyor\n              Runs\
  \ Ray Surveyor to compare samples.\n              See Documentation/Ray-Surveyor.md\n\
  \              This workflow generates:\n              RayOutput/Surveyor/SimilarityMatrix.tsv\
  \ is a similarity Gramian matrix based on shared DNA words\n              RayOutput/Surveyor/DistanceMatrix.tsv\
  \ is a distance matrix (kernel-based).\n       -read-sample-graph SampleName SampleGraphFile\n\
  \              Reads a sample graph (generated with -write-kmers)\n\n  Assembly\
  \ options (defaults work well)\n\n       -disable-recycling\n              Disables\
  \ read recycling during the assembly\n              reads will be set free in 3\
  \ cases:\n              1. the distance did not match for a pair\n             \
  \ 2. the read has not met its mate\n              3. the library population indicates\
  \ a wrong placement\n              see Constrained traversal of repeats with paired\
  \ sequences.\n              Sébastien Boisvert, Élénie Godzaridis, François Laviolette\
  \ & Jacques Corbeil.\n              First Annual RECOMB Satellite Workshop on Massively\
  \ Parallel Sequencing, March 26-27 2011, Vancouver, BC, Canada.\n\n       -debug-recycling\n\
  \              Debugs the recycling events\n\n       -ignore-seeds\n           \
  \   Disables assembly by ignoring seeds.\n\n       -merge-seeds\n              Merges\
  \ seeds initially to reduce running time.\n\n       -disable-scaffolder\n      \
  \        Disables the scaffolder.\n\n       -minimum-seed-length minimumSeedLength\n\
  \              Changes the minimum seed length, default is 100 nucleotides\n\n \
  \      -minimum-contig-length minimumContigLength\n              Changes the minimum\
  \ contig length, default is 100 nucleotides\n\n       -color-space\n           \
  \   Runs in color-space\n              Needs csfasta files. Activated automatically\
  \ if csfasta files are provided.\n\n       -use-maximum-seed-coverage maximumSeedCoverageDepth\n\
  \              Ignores any seed with a coverage depth above this threshold.\n  \
  \            The default is 4294967295.\n\n       -use-minimum-seed-coverage minimumSeedCoverageDepth\n\
  \              Sets the minimum seed coverage depth.\n              Any path with\
  \ a coverage depth lower than this will be discarded. The default is 0.\n\n  Distributed\
  \ storage engine (all these values are for each MPI rank)\n\n       -bloom-filter-bits\
  \ bits\n              Sets the number of bits for the Bloom filter\n           \
  \   Default is auto bits (adaptive), 0 bits disables the Bloom filter.\n\n     \
  \  -hash-table-buckets buckets\n              Sets the initial number of buckets.\
  \ Must be a power of 2 !\n              Default value: 268435456\n\n       -hash-table-buckets-per-group\
  \ buckets\n              Sets the number of buckets per group for sparse storage\n\
  \              Default value: 64, Must be between >=1 and <= 64\n\n       -hash-table-load-factor-threshold\
  \ threshold\n              Sets the load factor threshold for real-time resizing\n\
  \              Default value: 0.75, must be >= 0.5 and < 1\n\n       -hash-table-verbosity\n\
  \              Activates verbosity for the distributed storage engine\n\n  Biological\
  \ abundances\n\n       -search searchDirectory\n              Provides a directory\
  \ containing fasta files to be searched in the de Bruijn graph.\n              Biological\
  \ abundances will be written to RayOutput/BiologicalAbundances\n              See\
  \ Documentation/BiologicalAbundances.txt\n\n       -one-color-per-file\n       \
  \       Sets one color per file instead of one per sequence.\n              By default,\
  \ each sequence in each file has a different color.\n              For files with\
  \ large numbers of sequences, using one single color per file may be more efficient.\n\
  \n  Taxonomic profiling with colored de Bruijn graphs\n\n       -with-taxonomy Genome-to-Taxon.tsv\
  \ TreeOfLife-Edges.tsv Taxon-Names.tsv\n              Provides a taxonomy.\n   \
  \           Computes and writes detailed taxonomic profiles.\n              See\
  \ Documentation/Taxonomy.txt for details.\n\n       -gene-ontology OntologyTerms.txt\
  \  Annotations.txt\n              Provides an ontology and annotations.\n      \
  \        OntologyTerms.txt is fetched from http://geneontology.org\n           \
  \   Annotations.txt is a 2-column file (EMBL_CDS handle\t&\tgene ontology identifier)\n\
  \              See Documentation/GeneOntology.txt\n  Other outputs\n\n       -enable-neighbourhoods\n\
  \              Computes contig neighborhoods in the de Bruijn graph\n          \
  \    Output file: RayOutput/NeighbourhoodRelations.txt\n\n       -amos\n       \
  \       Writes the AMOS file called RayOutput/AMOS.afg\n              An AMOS file\
  \ contains read positions on contigs.\n              Can be opened with software\
  \ with graphical user interface.\n\n       -write-kmers\n              Writes k-mer\
  \ graph to RayOutput/kmers.txt\n              The resulting file is not utilised\
  \ by Ray.\n              The resulting file is very large.\n\n       -graph-only\n\
  \              Exits after building graph.\n\n       -write-read-markers\n     \
  \         Writes read markers to disk.\n\n       -write-seeds\n              Writes\
  \ seed DNA sequences to RayOutput/Rank<rank>.RaySeeds.fasta\n\n       -write-extensions\n\
  \              Writes extension DNA sequences to RayOutput/Rank<rank>.RayExtensions.fasta\n\
  \n       -write-contig-paths\n              Writes contig paths with coverage values\n\
  \              to RayOutput/Rank<rank>.RayContigPaths.txt\n\n       -write-marker-summary\n\
  \              Writes marker statistics.\n\n  Memory usage\n\n       -show-memory-usage\n\
  \              Shows memory usage. Data is fetched from /proc on GNU/Linux\n   \
  \           Needs __linux__\n\n       -show-memory-allocations\n              Shows\
  \ memory allocation events\n\n  Algorithm verbosity\n\n       -show-extension-choice\n\
  \              Shows the choice made (with other choices) during the extension.\n\
  \n       -show-ending-context\n              Shows the ending context of each extension.\n\
  \              Shows the children of the vertex where extension was too difficult.\n\
  \n       -show-distance-summary\n              Shows summary of outer distances\
  \ used for an extension path.\n\n       -show-consensus\n              Shows the\
  \ consensus when a choice is done.\n\n  Checkpointing\n\n       -write-checkpoints\
  \ checkpointDirectory\n              Write checkpoint files\n\n       -read-checkpoints\
  \ checkpointDirectory\n              Read checkpoint files\n\n       -read-write-checkpoints\
  \ checkpointDirectory\n              Read and write checkpoint files\n\n  Message\
  \ routing for large number of cores\n\n       -route-messages\n              Enables\
  \ the Ray message router. Disabled by default.\n              Messages will be routed\
  \ accordingly so that any rank can communicate directly with only a few others.\n\
  \              Without -route-messages, any rank can communicate directly with any\
  \ other rank.\n              Files generated: Routing/Connections.txt, Routing/Routes.txt\
  \ and Routing/RelayEvents.txt\n              and Routing/Summary.txt\n\n       -connection-type\
  \ type\n              Sets the connection type for routes.\n              Accepted\
  \ values are debruijn, hypercube, polytope, group, random, kautz and complete. Default\
  \ is debruijn.\n               torus: a k-ary n-cube, radix: k, dimension: n, degree:\
  \ 2*dimension, vertices: radix^dimension\n               polytope: a convex regular\
  \ polytope, alphabet is {0,1,...,B-1} and the vertices is a power of B\n       \
  \        hypercube: a hypercube, alphabet is {0,1} and the vertices is a power of\
  \ 2\n               debruijn: a full de Bruijn graph a given alphabet and diameter\n\
  \               kautz: a full de Kautz graph, which is a subgraph of a de Bruijn\
  \ graph\n               group: silly model where one representative per group can\
  \ communicate with outsiders\n               random: Erdős–Rényi model\n       \
  \        complete: a full graph with all the possible connections\n            \
  \  With the type debruijn, the number of ranks must be a power of something.\n \
  \             Examples: 256 = 16*16, 512=8*8*8, 49=7*7, and so on.\n           \
  \   Otherwise, don't use debruijn routing but use another one\n              With\
  \ the type kautz, the number of ranks n must be n=(k+1)*k^(d-1) for some k and d\n\
  \n       -routing-graph-degree degree\n              Specifies the outgoing degree\
  \ for the routing graph.\n              See Documentation/Routing.txt\n\n  Hardware\
  \ testing\n\n       -test-network-only\n              Tests the network and returns.\n\
  \n       -write-network-test-raw-data\n              Writes one additional file\
  \ per rank detailing the network test.\n\n       -exchanges NumberOfExchanges\n\
  \              Sets the number of exchanges\n\n       -disable-network-test\n  \
  \            Skips the network test.\n\n  Debugging\n\n       -verify-message-integrity\n\
  \              Checks message data reliability for any non-empty message.\n    \
  \          add '-D CONFIG_SSE_4_2' in the Makefile to use hardware instruction (SSE\
  \ 4.2)\n\n       -write-scheduling-data\n              Writes RayPlatform scheduling\
  \ information to RayOutput/Scheduling/\n\n       -write-plugin-data\n          \
  \    Writes data for plugins registered with the RayPlatform API to RayOutput/Plugins\n\
  \n       -run-profiler\n              Runs the profiler as the code runs. By default,\
  \ only show granularity warnings.\n              Running the profiler increases\
  \ running times.\n\n       -with-profiler-details\n              Shows number of\
  \ messages sent and received in each methods during in each time slices (epochs).\
  \ Needs -run-profiler.\n\n       -debug\n              Turns on -run-profiler and\
  \ -with-profiler-details for debugging\n\n       -show-communication-events\n  \
  \            Shows all messages sent and received.\n\n       -show-read-placement\n\
  \              Shows read placement in the graph during the extension.\n\n     \
  \  -debug-bubbles\n              Debugs bubble code.\n              Bubbles can\
  \ be due to heterozygous sites or sequencing errors or other (unknown) events\n\n\
  \       -debug-seeds\n              Debugs seed code.\n              Seeds are paths\
  \ in the graph that are likely unique.\n\n       -debug-fusions\n              Debugs\
  \ fusion code.\n\n       -debug-scaffolder\n              Debug the scaffolder.\n\
  \n\nFILES\n\n  Input files\n\n     Note: file format is determined with file extension.\n\
  \n     .fasta\n     .fa\n     .fasta.gz (needs HAVE_LIBZ=y at compilation)\n   \
  \  .fa.gz (needs HAVE_LIBZ=y at compilation)\n     .fasta.bz2 (needs HAVE_LIBBZ2=y\
  \ at compilation)\n     .fa.bz2 (needs HAVE_LIBBZ2=y at compilation)\n     .fastq\n\
  \     .fq\n     .fastq.gz (needs HAVE_LIBZ=y at compilation)\n     .fq.gz (needs\
  \ HAVE_LIBZ=y at compilation)\n     .fastq.bz2 (needs HAVE_LIBBZ2=y at compilation)\n\
  \     .fq.bz2 (needs HAVE_LIBBZ2=y at compilation)\n     export.txt\n     qseq.txt\n\
  \     .sff (paired reads must be extracted manually)\n     .csfasta (color-space\
  \ reads)\n     .csfa (color-space reads)\n\n  Outputted files\n\n  Scaffolds\n\n\
  \     RayOutput/Scaffolds.fasta\n     \tThe scaffold sequences in FASTA format\n\
  \     RayOutput/ScaffoldComponents.txt\n     \tThe components of each scaffold\n\
  \     RayOutput/ScaffoldLengths.txt\n     \tThe length of each scaffold\n     RayOutput/ScaffoldLinks.txt\n\
  \     \tScaffold links\n\n  Contigs\n\n     RayOutput/Contigs.fasta\n     \tContiguous\
  \ sequences in FASTA format\n     RayOutput/ContigLengths.txt\n     \tThe lengths\
  \ of contiguous sequences\n\n  Summary\n\n     RayOutput/OutputNumbers.txt\n   \
  \  \tOverall numbers for the assembly\n\n  de Bruijn graph\n\n     RayOutput/CoverageDistribution.txt\n\
  \     \tThe distribution of coverage values\n     RayOutput/CoverageDistributionAnalysis.txt\n\
  \     \tAnalysis of the coverage distribution\n     RayOutput/degreeDistribution.txt\n\
  \     \tDistribution of ingoing and outgoing degrees\n     RayOutput/kmers.txt\n\
  \     \tk-mer graph, required option: -write-kmers\n         The resulting file\
  \ is not utilised by Ray.\n         The resulting file is very large.\n\n  Assembly\
  \ steps\n\n     RayOutput/SeedLengthDistribution.txt\n         Distribution of seed\
  \ length\n     RayOutput/Rank<rank>.OptimalReadMarkers.txt\n         Read markers.\n\
  \     RayOutput/Rank<rank>.RaySeeds.fasta\n         Seed DNA sequences, required\
  \ option: -write-seeds\n     RayOutput/Rank<rank>.RayExtensions.fasta\n        \
  \ Extension DNA sequences, required option: -write-extensions\n     RayOutput/Rank<rank>.RayContigPaths.txt\n\
  \         Contig paths with coverage values, required option: -write-contig-paths\n\
  \n  Paired reads\n\n     RayOutput/LibraryStatistics.txt\n     \tEstimation of outer\
  \ distances for paired reads\n     RayOutput/LibraryData.xml\n         Frequencies\
  \ for observed outer distances (insert size + read lengths)\n\n  Partition\n\n \
  \    RayOutput/NumberOfSequences.txt\n         Number of reads in each file\n  \
  \   RayOutput/SequencePartition.txt\n     \tSequence partition\n\n  Ray software\n\
  \n     RayOutput/RayVersion.txt\n        The version of Ray\n     RayOutput/RayCommand.txt\n\
  \        The exact same command provided\n     RayOutput/RaySmartCommand.txt\n \
  \       The smart command generated by Ray\n\n  AMOS\n\n     RayOutput/AMOS.afg\n\
  \     \tAssembly representation in AMOS format, required option: -amos\n\n  Communication\n\
  \n     RayOutput/NetworkTest.txt\n\t    \tLatencies in microseconds\n     RayOutput/Rank<rank>NetworkTestData.txt\n\
  \t    \tNetwork test raw data\n\nDOCUMENTATION\n\n       - mpiexec -n 1 Ray -help|less\
  \ (always up-to-date)\n       - This help page (always up-to-date)\n       - The\
  \ directory Documentation/\n       - Manual (Portable Document Format): InstructionManual.tex\
  \ (in Documentation)\n       - Mailing list archives: http://sourceforge.net/mailarchive/forum.php?forum_name=denovoassembler-users\n\
  \nAUTHOR\n       Written by Sébastien Boisvert.\n\nREPORTING BUGS\n       Report\
  \ bugs to denovoassembler-users@lists.sourceforge.net\n       Home page: <http://denovoassembler.sourceforge.net/>\n\
  \nCOPYRIGHT\n       This program is free software: you can redistribute it and/or\
  \ modify\n       it under the terms of the GNU General Public License as published\
  \ by\n       the Free Software Foundation, version 3 of the License.\n\n       This\
  \ program is distributed in the hope that it will be useful,\n       but WITHOUT\
  \ ANY WARRANTY; without even the implied warranty of\n       MERCHANTABILITY or\
  \ FITNESS FOR A PARTICULAR PURPOSE.  See the\n       GNU General Public License\
  \ for more details.\n\n       You have received a copy of the GNU General Public\
  \ License\n       along with this program (see LICENSE).\n\nRay Unknown\n"
generated_using:
- --help
