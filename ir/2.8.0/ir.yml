!Command
positional: []
named: []
command:
- ir
parent:
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "# unknown argument: -\nir version 2.8.0, copyright (c) 2006-2008 Bernhard\
  \ Haubold & Thomas Wiehe\n\tdistributed under the GNU General Public License.\n\
  purpose: calculate the index of repetitiveness, I_r\nusage: ir [options]\noptions:\n\
  \t[-i <FILE> read query sequence(s) from FILE; default: FILE=stdin]\n\t[-j <FILE>\
  \ read sbjct sequence(s) from FILE; default: analyse only query]\n\t[-o <FILE> write\
  \ output to FILE; default: FILE=stdout]\n\t[-w <NUM> sliding window of width NUM;\
  \ default: no sliding window]\n\t[-f <NUM> filter private regions of minimum length\
  \ NUM; default: no filter]\n\t[-c <NUM> increment sliding window by NUM positions;\
  \ default: window_width/10]\n\t[-n <NUM> print NUM characters of header; all if\
  \ NUM<0; default: NUM=30]\n\t[-r <NUM> compute Ae by randomizing sbjct NUM times;\
  \ NUM=0 for analytical computation (fast)\n\t\tdefault: NUM=floor(pow(10,4.99999999-log(seq->numSbjctNuc/2)/log(10)))+1]\n\
  \t[-S <NUM> NUM is seed of random number generator; default: seed from file or clock]\n\
  \t[-P <NUM> proportion of random shustrings considered; default:  1]\n\t[-D <NUM>\
  \ maximum depth of suffix tree; default: 1000000]\n\t[-s treat each sequence (query\
  \ & sbjct) separately; default: union(query)/union(sbjct)]\n\t[-u unnormalize Ir;\
  \ default: normalized Ir]\n\t[-I compare sequences with identical headers when using\
  \ -s (slow); default: assume ir=1]\n\t[-p print information about program]\n\t[-h\
  \ print this help message]\n\t[-d print debugging messages (use in conjunction with\
  \ grep)]\n"
generated_using:
- --help
