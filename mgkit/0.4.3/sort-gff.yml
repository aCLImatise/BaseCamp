!Command
positional:
- !Positional
  description: ''
  position: 0
  name: sort
  optional: false
- !Positional
  description: ''
  position: 1
  name: OPTION
  optional: true
named:
- !Flag
  description: leading blanks
  synonyms:
  - -b
  - --ignore-leading-blanks
  args: !SimpleFlagArg
    name: ignore
  optional: true
- !Flag
  description: only blanks and alphanumeric characters
  synonyms:
  - -d
  - --dictionary-order
  args: !SimpleFlagArg
    name: consider
  optional: true
- !Flag
  description: lower case to upper case characters
  synonyms:
  - -f
  - --ignore-case
  args: !SimpleFlagArg
    name: fold
  optional: true
- !Flag
  description: compare according to general numerical value
  synonyms:
  - -g
  - --general-numeric-sort
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: consider only printable characters
  synonyms:
  - -i
  - --ignore-nonprinting
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: compare (unknown) < 'JAN' < ... < 'DEC'
  synonyms:
  - -M
  - --month-sort
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: compare according to string numerical value
  synonyms:
  - -n
  - --numeric-sort
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: shuffle, but group identical keys.  See shuf(1)
  synonyms:
  - -R
  - --random-sort
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: get random bytes from FILE
  synonyms:
  - --random-source
  args: !SimpleFlagArg
    name: FILE
  optional: true
- !Flag
  description: reverse the result of comparisons
  synonyms:
  - -r
  - --reverse
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'sort according to WORD: general-numeric -g, human-numeric -h, month
    -M, numeric -n, random -R, version -V'
  synonyms:
  - --sort
  args: !SimpleFlagArg
    name: WORD
  optional: true
- !Flag
  description: natural sort of (version) numbers within text
  synonyms:
  - -V
  - --version-sort
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: change the number of sorts run concurrently to N
  synonyms:
  - --parallel
  args: !SimpleFlagArg
    name: N
  optional: true
- !Flag
  description: with -c, check for strict ordering; without -c, output only the first
    of an equal run
  synonyms:
  - -u
  - --unique
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: line delimiter is NUL, not newline
  synonyms:
  - -z
  - --zero-terminated
  args: !EmptyFlagArg {}
  optional: true
command:
- sort-gff.sh
parent:
subcommands: []
help_flag: !Flag
  description: this help and exit
  synonyms:
  - --help
  args: !SimpleFlagArg
    name: display
  optional: true
usage_flag:
version_flag: !Flag
  description: version information and exit
  synonyms:
  - --version
  args: !SimpleFlagArg
    name: output
  optional: true
help_text: "Usage: sort [OPTION]... [FILE]...\n  or: sort [OPTION]... --files0-from=F\n\
  Write sorted concatenation of all FILE(s) to standard output.\n\nWith no FILE, or\
  \ when FILE is -, read standard input.\n\nMandatory arguments to long options are\
  \ mandatory for short options too.\nOrdering options:\n\n  -b, --ignore-leading-blanks\
  \ ignore leading blanks\n  -d, --dictionary-order consider only blanks and alphanumeric\
  \ characters\n  -f, --ignore-case fold lower case to upper case characters\n  -g,\
  \ --general-numeric-sort  compare according to general numerical value\n  -i, --ignore-nonprinting\
  \    consider only printable characters\n  -M, --month-sort            compare (unknown)\
  \ < 'JAN' < ... < 'DEC'\n  -h, --human-numeric-sort    compare human readable numbers\
  \ (e.g., 2K 1G)\n  -n, --numeric-sort          compare according to string numerical\
  \ value\n  -R, --random-sort           shuffle, but group identical keys.  See shuf(1)\n\
  \      --random-source=FILE    get random bytes from FILE\n  -r, --reverse     \
  \          reverse the result of comparisons\n      --sort=WORD             sort\
  \ according to WORD:\n                                general-numeric -g, human-numeric\
  \ -h, month -M,\n                                numeric -n, random -R, version\
  \ -V\n  -V, --version-sort          natural sort of (version) numbers within text\n\
  \nOther options:\n\n      --batch-size=NMERGE   merge at most NMERGE inputs at once;\n\
  \                            for more use temp files\n  -c, --check, --check=diagnose-first\
  \  check for sorted input; do not sort\n  -C, --check=quiet, --check=silent  like\
  \ -c, but do not report first bad line\n      --compress-program=PROG  compress\
  \ temporaries with PROG;\n                              decompress them with PROG\
  \ -d\n      --debug               annotate the part of the line used to sort,\n\
  \                              and warn about questionable usage to stderr\n   \
  \   --files0-from=F       read input from the files specified by\n             \
  \               NUL-terminated names in file F;\n                            If\
  \ F is - then read names from standard input\n  -k, --key=KEYDEF          sort via\
  \ a key; KEYDEF gives location and type\n  -m, --merge               merge already\
  \ sorted files; do not sort\n  -o, --output=FILE         write result to FILE instead\
  \ of standard output\n  -s, --stable              stabilize sort by disabling last-resort\
  \ comparison\n  -S, --buffer-size=SIZE    use SIZE for main memory buffer\n  -t,\
  \ --field-separator=SEP  use SEP instead of non-blank to blank transition\n  -T,\
  \ --temporary-directory=DIR  use DIR for temporaries, not $TMPDIR or /tmp;\n   \
  \                           multiple options specify multiple directories\n    \
  \  --parallel=N          change the number of sorts run concurrently to N\n  -u,\
  \ --unique              with -c, check for strict ordering;\n                  \
  \            without -c, output only the first of an equal run\n  -z, --zero-terminated\
  \     line delimiter is NUL, not newline\n      --help display this help and exit\n\
  \      --version output version information and exit\n\nKEYDEF is F[.C][OPTS][,F[.C][OPTS]]\
  \ for start and stop position, where F is a\nfield number and C a character position\
  \ in the field; both are origin 1, and\nthe stop position defaults to the line's\
  \ end.  If neither -t nor -b is in\neffect, characters in a field are counted from\
  \ the beginning of the preceding\nwhitespace.  OPTS is one or more single-letter\
  \ ordering options [bdfgiMhnRrV],\nwhich override global ordering options for that\
  \ key.  If no key is given, use\nthe entire line as the key.  Use --debug to diagnose\
  \ incorrect key usage.\n\nSIZE may be followed by the following multiplicative suffixes:\n\
  % 1% of memory, b 1, K 1024 (default), and so on for M, G, T, P, E, Z, Y.\n\n***\
  \ WARNING ***\nThe locale specified by the environment affects sort order.\nSet\
  \ LC_ALL=C to get the traditional sort order that uses\nnative byte values.\n\n\
  GNU coreutils online help: <https://www.gnu.org/software/coreutils/>\nFull documentation\
  \ at: <https://www.gnu.org/software/coreutils/sort>\nor available locally via: info\
  \ '(coreutils) sort invocation'\n"
generated_using:
- --help
