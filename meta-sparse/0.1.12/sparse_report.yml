&id001 !Command
command:
- sparse
- report
positional:
- !Positional
  description: Folders that contain "SPARSE extract" outputs. REQUIRED at least one
    folder.
  position: 0
  name: workspace
  optional: false
named:
- !Flag
  description: All sparse workspaces under the assigned folder will be added in automatically.
  synonyms:
  - -p
  - --path
  args: !SimpleFlagArg
    name: PATH
  optional: true
- !Flag
  description: 'Tag level to report, default: s. Details see documents for the seqlist
    format.'
  synonyms:
  - -t
  - --tag
  args: !SimpleFlagArg
    name: TAG
  optional: true
- !Flag
  description: 'Report absolute numbers. Default: False (report percentages)'
  synonyms:
  - --absolute
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Lower limit of percentage for a value to report. Default: 0.0'
  synonyms:
  - -l
  - --low
  args: !SimpleFlagArg
    name: LOW
  optional: true
- !Flag
  description: Show only species listed in the file.
  synonyms:
  - -r
  - --speciesFilter
  args: !SimpleFlagArg
    name: SPECIESFILTER
  optional: true
- !Flag
  description: 'Show only samples that have hits in the listed species. Default: False'
  synonyms:
  - -c
  - --sampleFilter
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Inverse the output matrix such that columns are species and rows are
    samples.
  synonyms:
  - -v
  - --inverse
  args: !EmptyFlagArg {}
  optional: true
parent: &id002 !Command
  command:
  - sparse
  positional: []
  named: []
  parent:
  subcommands:
  - *id001
  - !Command
    command:
    - sparse
    - mapDB
    positional: []
    named:
    - !Flag
      description: Name for the database folder. REQUIRED.
      synonyms:
      - -n
      - --dbname
      args: !SimpleFlagArg
        name: DBNAME
      optional: true
    - !Flag
      description: Name for the sub-database. REQUIRED.
      synonyms:
      - -m
      - --mapDB
      args: !SimpleFlagArg
        name: MAPDB
      optional: true
    - !Flag
      description: A tab-delimited list of reference to include. It can be generated
        by "SPARSE.py query". REQUIRED.
      synonyms:
      - -s
      - --seqlist
      args: !SimpleFlagArg
        name: SEQLIST
      optional: true
    - !Flag
      description: 'Number of threads to use. Default: 20'
      synonyms:
      - -t
      - --n_thread
      args: !SimpleFlagArg
        name: N_THREAD
      optional: true
    - !Flag
      description: Use MALT instead of minimap2 [default]
      synonyms:
      - --malt
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Append to existing database instead of overwrite [default]
      synonyms:
      - --append
      args: !EmptyFlagArg {}
      optional: true
    parent: *id002
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: sparse mapDB [-h] -n DBNAME -m MAPDB -s SEQLIST [-t N_THREAD]\
      \ [--malt]\n                    [--append]\n\nGenerate sub-databases for read\
      \ alignments.\n\noptional arguments:\n  -h, --help            show this help\
      \ message and exit\n  -n DBNAME, --dbname DBNAME\n                        Name\
      \ for the database folder. REQUIRED. \n  -m MAPDB, --mapDB MAPDB\n         \
      \               Name for the sub-database. REQUIRED. \n  -s SEQLIST, --seqlist\
      \ SEQLIST\n                        A tab-delimited list of reference to include.\
      \ It can be generated by \"SPARSE.py query\". REQUIRED.\n  -t N_THREAD, --n_thread\
      \ N_THREAD\n                        Number of threads to use. Default: 20 \n\
      \  --malt                Use MALT instead of minimap2 [default]\n  --append\
      \              Append to existing database instead of overwrite [default]\n"
    generated_using: &id003
    - --help
  - !Command
    command:
    - sparse
    - mash
    positional: []
    named:
    - !Flag
      description: Name for the database folder. REQUIRED.
      synonyms:
      - -n
      - --dbname
      args: !SimpleFlagArg
        name: DBNAME
      optional: true
    - !Flag
      description: A genome in fasta format, or a set of reads in fastq format. REQUIRED.
      synonyms:
      - -q
      - --query
      args: !SimpleFlagArg
        name: QUERY
      optional: true
    - !Flag
      description: Specify if query is a read set rather than an assembly.
      synonyms:
      - --read
      args: !EmptyFlagArg {}
      optional: true
    parent: *id002
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: sparse mash [-h] -n DBNAME -q QUERY [--read]\n\nRapid mash\
      \ query of an assembly or a read set.\n\noptional arguments:\n  -h, --help \
      \           show this help message and exit\n  -n DBNAME, --dbname DBNAME\n\
      \                        Name for the database folder. REQUIRED.\n  -q QUERY,\
      \ --query QUERY\n                        A genome in fasta format, or a set\
      \ of reads in fastq format. REQUIRED. \n  --read                Specify if query\
      \ is a read set rather than an assembly.\n"
    generated_using: *id003
  - !Command
    command:
    - sparse
    - query
    positional: []
    named:
    - !Flag
      description: Name for the database. REQUIRED.
      synonyms:
      - -n
      - --dbname
      args: !SimpleFlagArg
        name: DBNAME
      optional: true
    - !Flag
      description: 'File name for the output. Default: to screen.'
      synonyms:
      - -s
      - --seqlist
      args: !SimpleFlagArg
        name: SEQLIST
      optional: true
    - !Flag
      description: "Default MapDB criteria for updates. Choose from:\nrepresentative,\
        \ subpopulation, Virus, Eukaryota"
      synonyms:
      - -d
      - --default
      args: !SimpleFlagArg
        name: DEFAULT
      optional: true
    - !Flag
      description: Minimum size of genomes to show
      synonyms:
      - --min
      args: !SimpleFlagArg
        name: MIN
      optional: true
    - !Flag
      description: Maximum size of genomes to show
      synonyms:
      - --max
      args: !SimpleFlagArg
        name: MAX
      optional: true
    - !Flag
      description: Filter using the prefix of barcode addresses
      synonyms:
      - --group
      args: !SimpleFlagArg
        name: GROUP
      optional: true
    - !Flag
      description: "Filter by relationships between different level of barcodes. i.e.,\n\
        \"p!=r;p==a\" gets references that have the same numbers in p groups and a\
        \ groups, but different between p groups and r groups"
      synonyms:
      - --tag
      args: !SimpleFlagArg
        name: TAG
      optional: true
    - !Flag
      description: Filter by index.
      synonyms:
      - --index
      args: !SimpleFlagArg
        name: INDEX
      optional: true
    - !Flag
      description: Filter by barcode.
      synonyms:
      - --barcode
      args: !SimpleFlagArg
        name: BARCODE
      optional: true
    - !Flag
      description: Filter by assembly_accession.
      synonyms:
      - --assembly_accession
      args: !SimpleFlagArg
        name: ASSEMBLY_ACCESSION
      optional: true
    - !Flag
      description: Filter by refseq_category.
      synonyms:
      - --refseq_category
      args: !SimpleFlagArg
        name: REFSEQ_CATEGORY
      optional: true
    - !Flag
      description: Filter by assembly_level.
      synonyms:
      - --assembly_level
      args: !SimpleFlagArg
        name: ASSEMBLY_LEVEL
      optional: true
    - !Flag
      description: Filter by taxid.
      synonyms:
      - --taxid
      args: !SimpleFlagArg
        name: TAXID
      optional: true
    - !Flag
      description: Filter by organism_name.
      synonyms:
      - --organism_name
      args: !SimpleFlagArg
        name: ORGANISM_NAME
      optional: true
    - !Flag
      description: Filter by species.
      synonyms:
      - --species
      args: !SimpleFlagArg
        name: SPECIES
      optional: true
    - !Flag
      description: Filter by genus.
      synonyms:
      - --genus
      args: !SimpleFlagArg
        name: GENUS
      optional: true
    - !Flag
      description: Filter by family.
      synonyms:
      - --family
      args: !SimpleFlagArg
        name: FAMILY
      optional: true
    - !Flag
      description: Filter by order.
      synonyms:
      - --order
      args: !SimpleFlagArg
        name: ORDER
      optional: true
    - !Flag
      description: Filter by class.
      synonyms:
      - --class
      args: !SimpleFlagArg
        name: CLASS
      optional: true
    - !Flag
      description: Filter by phylum.
      synonyms:
      - --phylum
      args: !SimpleFlagArg
        name: PHYLUM
      optional: true
    - !Flag
      description: Filter by kingdom.
      synonyms:
      - --kingdom
      args: !SimpleFlagArg
        name: KINGDOM
      optional: true
    - !Flag
      description: "Filter by superkingdom.\n"
      synonyms:
      - --superkingdom
      args: !SimpleFlagArg
        name: SUPERKINGDOM
      optional: true
    parent: *id002
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: sparse query [-h] -n DBNAME [-s SEQLIST] [-d DEFAULT] [--min\
      \ MIN]\n                    [--max MAX] [--group GROUP] [--tag TAG] [--index\
      \ INDEX]\n                    [--barcode BARCODE]\n                    [--assembly_accession\
      \ ASSEMBLY_ACCESSION]\n                    [--refseq_category REFSEQ_CATEGORY]\n\
      \                    [--assembly_level ASSEMBLY_LEVEL] [--taxid TAXID]\n   \
      \                 [--organism_name ORGANISM_NAME] [--species SPECIES]\n    \
      \                [--genus GENUS] [--family FAMILY] [--order ORDER]\n       \
      \             [--class CLASS] [--phylum PHYLUM] [--kingdom KINGDOM]\n      \
      \              [--superkingdom SUPERKINGDOM]\n\nRetrieve metadata for a set\
      \ of references.\n\noptional arguments:\n  -h, --help            show this help\
      \ message and exit\n  -n DBNAME, --dbname DBNAME\n                        Name\
      \ for the database. REQUIRED.\n  -s SEQLIST, --seqlist SEQLIST\n           \
      \             File name for the output. Default: to screen.\n  -d DEFAULT, --default\
      \ DEFAULT\n                        Default MapDB criteria for updates. Choose\
      \ from:\n                        representative, subpopulation, Virus, Eukaryota\n\
      \  --min MIN             Minimum size of genomes to show\n  --max MAX      \
      \       Maximum size of genomes to show\n  --group GROUP         Filter using\
      \ the prefix of barcode addresses\n  --tag TAG             Filter by relationships\
      \ between different level of barcodes. i.e., \n                        \"p!=r;p==a\"\
      \ gets references that have the same numbers in p groups and a groups, but different\
      \ between p groups and r groups\n  --index INDEX         Filter by index.\n\
      \  --barcode BARCODE     Filter by barcode.\n  --assembly_accession ASSEMBLY_ACCESSION\n\
      \                        Filter by assembly_accession.\n  --refseq_category\
      \ REFSEQ_CATEGORY\n                        Filter by refseq_category.\n  --assembly_level\
      \ ASSEMBLY_LEVEL\n                        Filter by assembly_level.\n  --taxid\
      \ TAXID         Filter by taxid.\n  --organism_name ORGANISM_NAME\n        \
      \                Filter by organism_name.\n  --species SPECIES     Filter by\
      \ species.\n  --genus GENUS         Filter by genus.\n  --family FAMILY    \
      \   Filter by family.\n  --order ORDER         Filter by order.\n  --class CLASS\
      \         Filter by class.\n  --phylum PHYLUM       Filter by phylum.\n  --kingdom\
      \ KINGDOM     Filter by kingdom.\n  --superkingdom SUPERKINGDOM\n          \
      \              Filter by superkingdom.\n"
    generated_using: *id003
  - !Command
    command:
    - sparse
    - predict
    positional: []
    named:
    - !Flag
      description: Name for the database folder. REQUIRED
      synonyms:
      - -n
      - --dbname
      args: !SimpleFlagArg
        name: DBNAME
      optional: true
    - !Flag
      description: "Comma delimited names for sub-databases. REQUIRED.\nDefault: representative,subpopulation,Virus"
      synonyms:
      - -m
      - --mapDB
      args: !SimpleFlagArg
        name: MAPDB
      optional: true
    - !Flag
      description: Folder name for all outputs and intermediate results. REQUIRED.
      synonyms:
      - -w
      - --workspace
      args: !SimpleFlagArg
        name: WORKSPACE
      optional: true
    - !Flag
      description: SE read or first part of PE reads. REQUIRED.
      synonyms:
      - '-1'
      - --r1
      args: !SimpleFlagArg
        name: R1
      optional: true
    - !Flag
      description: Second part of PE reads.
      synonyms:
      - '-2'
      - --r2
      args: !SimpleFlagArg
        name: R2
      optional: true
    - !Flag
      description: "Number of threads to use. Default: 20\n"
      synonyms:
      - -t
      - --n_thread
      args: !SimpleFlagArg
        name: N_THREAD
      optional: true
    parent: *id002
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: sparse predict [-h] -n DBNAME [-m MAPDB] -w WORKSPACE -1 R1\
      \ [-2 R2]\n                      [-t N_THREAD]\n\nAlignment based taxonomy prediction.\n\
      \noptional arguments:\n  -h, --help            show this help message and exit\n\
      \  -n DBNAME, --dbname DBNAME\n                        Name for the database\
      \ folder. REQUIRED \n  -m MAPDB, --mapDB MAPDB\n                        Comma\
      \ delimited names for sub-databases. REQUIRED.\n                         Default:\
      \ representative,subpopulation,Virus\n  -w WORKSPACE, --workspace WORKSPACE\n\
      \                        Folder name for all outputs and intermediate results.\
      \ REQUIRED.\n  -1 R1, --r1 R1        SE read or first part of PE reads. REQUIRED.\
      \ \n  -2 R2, --r2 R2        Second part of PE reads.\n  -t N_THREAD, --n_thread\
      \ N_THREAD\n                        Number of threads to use. Default: 20 \n"
    generated_using: *id003
  - !Command
    command:
    - sparse
    - update
    positional: []
    named:
    - !Flag
      description: Name for the database. REQUIRED.
      synonyms:
      - -n
      - --dbname
      args: !SimpleFlagArg
        name: DBNAME
      optional: true
    - !Flag
      description: "A tab-delimited list of references. Needs to be in the same format\
        \ as the output of \"SPARSE query\". REQUIRED.\n"
      synonyms:
      - -s
      - --seqlist
      args: !SimpleFlagArg
        name: SEQLIST
      optional: true
    parent: *id002
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: sparse update [-h] -n DBNAME -s SEQLIST\n\nUpdate metadata.\n\
      \noptional arguments:\n  -h, --help            show this help message and exit\n\
      \  -n DBNAME, --dbname DBNAME\n                        Name for the database.\
      \ REQUIRED. \n  -s SEQLIST, --seqlist SEQLIST\n                        A tab-delimited\
      \ list of references. Needs to be in the same format as the output of \"SPARSE\
      \ query\". REQUIRED. \n"
    generated_using: *id003
  - !Command
    command:
    - sparse
    - index
    positional: []
    named:
    - !Flag
      description: Name for the database folder. REQUIRED.
      synonyms:
      - -n
      - --dbname
      args: !SimpleFlagArg
        name: DBNAME
      optional: true
    - !Flag
      description: Index the current RefSeq database. Overwrite SEQLIST.
      synonyms:
      - -u
      - --update
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Load in a tab-delimited file generated by \"SPARSE.py query\"\
        .\nSpecify the absolute path in column \"file_path\" if your genomes are local."
      synonyms:
      - -s
      - --seqlist
      args: !SimpleFlagArg
        name: SEQLIST
      optional: true
    - !Flag
      description: "Number of threads to use. Default: 20\n"
      synonyms:
      - -t
      - --n_thread
      args: !SimpleFlagArg
        name: N_THREAD
      optional: true
    parent: *id002
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: sparse index [-h] -n DBNAME [-u] [-s SEQLIST] [-t N_THREAD]\n\
      \nFill reference genomes into a SPARSE database created by SPARSE.py create\n\
      \noptional arguments:\n  -h, --help            show this help message and exit\n\
      \  -n DBNAME, --dbname DBNAME\n                        Name for the database\
      \ folder. REQUIRED. \n  -u, --update          Index the current RefSeq database.\
      \ Overwrite SEQLIST. \n  -s SEQLIST, --seqlist SEQLIST\n                   \
      \     Load in a tab-delimited file generated by \"SPARSE.py query\".\n     \
      \                   Specify the absolute path in column \"file_path\" if your\
      \ genomes are local. \n  -t N_THREAD, --n_thread N_THREAD\n                \
      \        Number of threads to use. Default: 20 \n"
    generated_using: *id003
  - !Command
    command:
    - sparse
    - init
    positional: []
    named:
    - !Flag
      description: "Name for the new database to be generated.\n"
      synonyms:
      - -n
      - --dbname
      args: !SimpleFlagArg
        name: DBNAME
      optional: true
    parent: *id002
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: sparse init [-h] -n DBNAME\n\nCreate an empty database. Use\
      \ \"SPARSE.py index\" to fill in references later\n\noptional arguments:\n \
      \ -h, --help            show this help message and exit\n  -n DBNAME, --dbname\
      \ DBNAME\n                        Name for the new database to be generated.\
      \ \n"
    generated_using: *id003
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "\nProgram: SPARSE (Strain Prediction and Analysis with Representative\
    \ SEquences)\n\nUsage:   SPARSE.py <command> [options]\n\nCommands:\n  init  \
    \        Create empty folder structures for a new SPARSE database\n  index   \
    \      Load in a list of assemblies (in RefSeq format) and index them into a SPARSE\
    \ database\n  query         Query metadata info in a SPARSE database\n  update\
    \        Update metadata info in a SPARSE database\n  mapDB         Create bowtie2\
    \ or MALT sub-databases for metagenomic reads\n  predict       Align reads onto\
    \ MapDB and do taxonomic predictions, and save all outputs in a specified workspaces\n\
    \  mash          Compare an assembly with all genomes in a SPARSE database using\
    \ MASH\n  extract       Extract species-specific reads from a SPARSE read-mapping\
    \ result\n  report        Reformat and merge multiple SPARSE workspaces into a\
    \ flat table. It also predicts human pathogens. \n\nUse SPARSE.py <command> -h\
    \ to get help for each command.\n\n"
  generated_using: *id003
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: sparse report [-h] [-p PATH] [-t TAG] [--absolute] [-l LOW]\n \
  \                    [-r SPECIESFILTER] [-c] [-v]\n                     [workspace\
  \ [workspace ...]]\n\nGenerate a flat-table report for multiple runs. Also tries\
  \ to identify some potential human pathogens. \n\npositional arguments:\n  workspace\
  \             Folders that contain \"SPARSE extract\" outputs. REQUIRED at least\
  \ one folder.\n\noptional arguments:\n  -h, --help            show this help message\
  \ and exit\n  -p PATH, --path PATH  All sparse workspaces under the assigned folder\
  \ will be added in automatically.\n  -t TAG, --tag TAG     Tag level to report,\
  \ default: s. Details see documents for the seqlist format.\n  --absolute      \
  \      Report absolute numbers. Default: False (report percentages)\n  -l LOW, --low\
  \ LOW     Lower limit of percentage for a value to report. Default: 0.0\n  -r SPECIESFILTER,\
  \ --speciesFilter SPECIESFILTER\n                        Show only species listed\
  \ in the file.\n  -c, --sampleFilter    Show only samples that have hits in the\
  \ listed species. Default: False\n  -v, --inverse         Inverse the output matrix\
  \ such that columns are species and rows are samples.\n"
generated_using: *id003
