&id002 !Command
command:
- deepac-vir
- convert
positional:
- !Positional
  description: Training config file.
  position: 0
  name: config
  optional: false
- !Positional
  description: Saved model.
  position: 1
  name: model
  optional: false
named:
- !Flag
  description: Use prepared weights instead of the model file.
  synonyms:
  - -w
  - --weights
  args: !EmptyFlagArg {}
  optional: true
parent: &id001 !Command
  command:
  - deepac-vir
  positional: []
  named:
  - !Flag
    description: Disable eager mode.
    synonyms:
    - --debug-no-eager
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "Set tensorflow debug info verbosity level. 0 = max, 3\n= min. Default:\
      \ 2 (errors); 3 for tests (muted)"
    synonyms:
    - --debug-tf
    args: !SimpleFlagArg
      name: DEBUG_TF
    optional: true
  - !Flag
    description: Enable verbose device placement information.
    synonyms:
    - --debug-device
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Use a CPU even if GPUs are available.
    synonyms:
    - --force-cpu
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "TPU name: 'colab' for Google Colab, or name of your\nTPU on GCE.\n"
    synonyms:
    - --tpu
    args: !SimpleFlagArg
      name: TPU
    optional: true
  - !Flag
    description: ''
    synonyms:
    - -v
    args: !EmptyFlagArg {}
    optional: true
  parent:
  subcommands:
  - !Command
    command:
    - deepac-vir
    - test
    positional:
    - !Positional
      description: ''
      position: 0
      name: deepac
      optional: false
    - !Positional
      description: ''
      position: 1
      name: test
      optional: false
    named:
    - !Flag
      description: 'Number of CPU cores. Default: all.'
      synonyms:
      - -n
      - --n-cpus
      args: !SimpleFlagArg
        name: N_CPUS
      optional: true
    - !Flag
      description: 'GPU devices to use. Default: all'
      synonyms:
      - -g
      - --gpus
      args: !RepeatFlagArg
        name: GPUS
      optional: true
    - !Flag
      description: Test explain workflows.
      synonyms:
      - -x
      - --explain
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Test gwpa workflows.
      synonyms:
      - -p
      - --gwpa
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Test all functions.
      synonyms:
      - -a
      - --all
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Don't test heavy models (e.g. when no GPU available).
      synonyms:
      - -q
      - --quick
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Don't delete previous test output.
      synonyms:
      - -k
      - --keep
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "Generate s*1024 reads for testing (Default: s=1).\n"
      synonyms:
      - -s
      - --scale
      args: !SimpleFlagArg
        name: SCALE
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "DeePaC-vir 0.2.1. Using viral models.\nusage: deepac test [-h] [-n\
      \ N_CPUS] [-g GPUS [GPUS ...]] [-x] [-p] [-a] [-q]\n                   [-k]\
      \ [-s SCALE]\n\noptional arguments:\n  -h, --help            show this help\
      \ message and exit\n  -n N_CPUS, --n-cpus N_CPUS\n                        Number\
      \ of CPU cores. Default: all.\n  -g GPUS [GPUS ...], --gpus GPUS [GPUS ...]\n\
      \                        GPU devices to use. Default: all\n  -x, --explain \
      \        Test explain workflows.\n  -p, --gwpa            Test gwpa workflows.\n\
      \  -a, --all             Test all functions.\n  -q, --quick           Don't\
      \ test heavy models (e.g. when no GPU available).\n  -k, --keep            Don't\
      \ delete previous test output.\n  -s SCALE, --scale SCALE\n                \
      \        Generate s*1024 reads for testing (Default: s=1).\n"
    generated_using: &id003
    - --help
  - *id002
  - !Command
    command:
    - deepac-vir
    - gwpa
    positional:
    - !Positional
      description: fragment            Fragment genomes for analysis.
      position: 0
      name: details.
      optional: false
    - !Positional
      description: Generate a genome-wide phenotype potential map.
      position: 1
      name: genomemap
      optional: false
    - !Positional
      description: Generate gene rankings.
      position: 2
      name: granking
      optional: false
    - !Positional
      description: Generate a genome-wide nt contribution map.
      position: 3
      name: ntcontribs
      optional: false
    - !Positional
      description: Get filter activations.
      position: 4
      name: factiv
      optional: false
    - !Positional
      description: Run filter enrichment analysis.
      position: 5
      name: fenrichment
      optional: false
    named: []
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "DeePaC-vir 0.2.1. Using viral models.\nusage: deepac gwpa [-h]\n \
      \                  {fragment,genomemap,granking,ntcontribs,factiv,fenrichment}\n\
      \                   ...\n\npositional arguments:\n  {fragment,genomemap,granking,ntcontribs,factiv,fenrichment}\n\
      \                        DeePaC gwpa subcommands. See command --help for\n \
      \                       details.\n    fragment            Fragment genomes for\
      \ analysis.\n    genomemap           Generate a genome-wide phenotype potential\
      \ map.\n    granking            Generate gene rankings.\n    ntcontribs    \
      \      Generate a genome-wide nt contribution map.\n    factiv             \
      \ Get filter activations.\n    fenrichment         Run filter enrichment analysis.\n\
      \noptional arguments:\n  -h, --help            show this help message and exit\n"
    generated_using: &id004
    - -h
  usage: []
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag: !Flag
    description: Print version.
    synonyms:
    - -v
    - --version
    args: !EmptyFlagArg {}
    optional: true
  help_text: "DeePaC-vir 0.2.1. Using viral models.\nusage: deepac [-h] [-v] [--debug-no-eager]\
    \ [--debug-tf DEBUG_TF]\n              [--debug-device] [--force-cpu] [--tpu TPU]\n\
    \              {predict,filter,train,preproc,eval,convert,test,explain,gwpa,templates}\n\
    \              ...\n\nPredicting pathogenic potentials of novel DNA with reverse-complement\
    \ neural\nnetworks.\n\npositional arguments:\n  {predict,filter,train,preproc,eval,convert,test,explain,gwpa,templates}\n\
    \                        DeePaC subcommands. See command --help for details.\n\
    \    predict             Predict using a trained model.\n    filter          \
    \    Filter prediction results.\n    train               Train a new model.\n\
    \    preproc             Convert fasta files to numpy arrays for training.\n \
    \   eval                Predict using a trained model.\n    convert          \
    \   Convert a CuDNNLSTM to a CPU-compatible LSTM.\n    test                Run\
    \ additional tests.\n    explain             Run filter visualization workflows.\n\
    \    gwpa                Run GWPA workflows.\n    templates           Get config\
    \ templates (in this directory).\n\noptional arguments:\n  -h, --help        \
    \    show this help message and exit\n  -v, --version         Print version.\n\
    \  --debug-no-eager      Disable eager mode.\n  --debug-tf DEBUG_TF   Set tensorflow\
    \ debug info verbosity level. 0 = max, 3\n                        = min. Default:\
    \ 2 (errors); 3 for tests (muted)\n  --debug-device        Enable verbose device\
    \ placement information.\n  --force-cpu           Use a CPU even if GPUs are available.\n\
    \  --tpu TPU             TPU name: 'colab' for Google Colab, or name of your\n\
    \                        TPU on GCE.\n"
  generated_using: *id003
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "DeePaC-vir 0.2.1. Using viral models.\nusage: deepac convert [-h] [-w]\
  \ config model\n\npositional arguments:\n  config         Training config file.\n\
  \  model          Saved model.\n\noptional arguments:\n  -h, --help     show this\
  \ help message and exit\n  -w, --weights  Use prepared weights instead of the model\
  \ file.\n"
generated_using: *id004
