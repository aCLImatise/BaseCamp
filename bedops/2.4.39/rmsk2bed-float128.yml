!Command
positional: []
named: []
command:
- rmsk2bed-float128
parent:
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "convert2bed -i rmsk\n  version:  2.4.39\n  author:   Alex Reynolds\n\n\
  \  Converts 1-base, closed [a, b] RepeatMasker annotation input\n  into 0-based,\
  \ half-open [a-1, b) extended BED or BEDOPS Starch\n\n  Usage:\n\n  $ rmsk2bed <\
  \ foo.out > sorted-foo.out.bed\n  $ rmsk2starch < foo.out > sorted-foo.out.starch\n\
  \n  Or:\n\n  $ convert2bed -i rmsk < foo.out > sorted-foo.out.bed\n  $ convert2bed\
  \ -i rmsk -o starch < foo.out > sorted-foo.out.starch\n\n  We make no assumptions\
  \ about sort order from converted output. Apply\n  the usage case displayed to pass\
  \ data to the BEDOPS sort-bed application,\n  which generates lexicographically-sorted\
  \ BED data as output.\n\n  If you want to skip sorting, use the --do-not-sort option:\n\
  \n  $ rmsk2bed --do-not-sort < foo.out > unsorted-foo.out.bed\n\n  The RepeatMasker\
  \ annotation format is 1-based and closed [a, b]\n  which is converted to 0-based,\
  \ half-closed [a-1, b) when creating\n  BED output.\n\n  We process RepeatMasker\
  \ annotation data (as described in:\n  http://www.repeatmasker.org/webrepeatmaskerhelp.html)\
  \ converting\n  them into the first six UCSC BED columns, as follows:\n\n  - Query\
  \ sequence            <-->   chromosome (1st column)\n  - Query start -  1     \
  \     <-->   start (2nd column)\n  - Query end                 <-->   stop (3rd\
  \ column)\n  - Match repeat name         <-->   id (4th column)\n  - SW score  \
  \                <-->   score (5th column)\n  - strand                    <--> \
  \  strand (6th column)\n\n  The remaining RepeatMasker columns are mapped as-is,\
  \ in order,\n  to adjacent BED columns:\n\n  - Percent, divergence\n  - Percent,\
  \ bases opposite gap in query (deleted bp)\n  - Percent, bases opposite gap in repeat\
  \ (inserted bp)\n  - Bases in query sequence past the ending position of match\n\
  \  - Repeat class\n  - Bases in (complement of) the repeat consensus sequence\n\
  \  - Match start (in repeat consensus sequence)\n  - Match end (in repeat consensus\
  \ sequence)\n  - Identifier for individual insertions\n\n  Because we have mapped\
  \ all columns, we can translate converted BED data back\n  to RepeatMasker annotation\
  \ output with a simple awk statement or other script\n  that calculates 1-based\
  \ coordinates and permutes columns.\n\n  RepeatMasker annotation conversion options:\n\
  \n  --keep-header (-k)\n      Preserve header section as pseudo-BED elements\n\n\
  \  Other processing options:\n\n  --do-not-sort (-d)\n      Do not sort BED output\
  \ with sort-bed (not compatible with --output=starch)\n  --max-mem=<value> (-m <val>)\n\
  \      Sets aside <value> memory for sorting BED output. For example, <value> can\n\
  \      be 8G, 8000M or 8000000000 to specify 8 GB of memory (default is 2G)\n  --sort-tmpdir=<dir>\
  \ (-r <dir>)\n      Optionally sets [dir] as temporary directory for sort data,\
  \ when used in\n      conjunction with --max-mem=[value], instead of the host's\
  \ operating system\n      default temporary directory\n  --starch-bzip2 (-z)\n \
  \     Used with --output=starch, the compressed output explicitly applies the bzip2\n\
  \      algorithm to compress intermediate data (default is bzip2)\n  --starch-gzip\
  \ (-g)\n      Used with --output=starch, the compressed output applies gzip compression\
  \ on\n      intermediate data\n  --starch-note=\"xyz...\" (-e \"xyz...\")\n    \
  \  Used with --output=starch, this adds a note to the Starch archive metadata\n\
  \  --help | --help[-bam|-gff|-gtf|-gvf|-psl|-rmsk|-sam|-vcf|-wig] (-h | -h <fmt>)\n\
  \      Show general help message (or detailed help for a specified input format)\n\
  \  --version (-w)\n      Show application version\n\n"
generated_using:
- --help
