!Command
positional: []
named:
- !Flag
  description: 'modify the original input files                           '
  synonyms:
  - -modify
  - -m
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'force tags to upper case                                  '
  synonyms:
  - -upper
  - -u
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'replace FONT, NOBR and CENTER tags by CSS                 '
  synonyms:
  - -clean
  - -c
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'strip out smart quotes and em dashes, etc.                '
  synonyms:
  - -bare
  - -b
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'output numeric rather than named entities                 '
  synonyms:
  - -numeric
  - -n
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'show only errors and warnings                             '
  synonyms:
  - -errors
  - -e
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'suppress nonessential output                              '
  synonyms:
  - -quiet
  - -q
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'omit optional end tags                                    '
  synonyms:
  - -omit
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'specify the input is well formed XML                      '
  synonyms:
  - -xml
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'convert HTML to well formed XHTML                         '
  synonyms:
  - -asxml
  - -asxhtml
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'force XHTML to well formed HTML                           '
  synonyms:
  - -ashtml
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'do additional accessibility checks (<level> = 0, 1, 2, 3). 0 is assumed
    if <level> is missing.                       '
  synonyms:
  - -access
  args: !SimpleFlagArg
    name: level
  optional: true
- !Flag
  description: 'output values above 127 without conversion to entities    '
  synonyms:
  - -raw
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'use ISO-8859-1 for input, US-ASCII for output             '
  synonyms:
  - -ascii
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'use ISO-8859-15 for input, US-ASCII for output            '
  synonyms:
  - -latin0
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'use ISO-8859-1 for both input and output                  '
  synonyms:
  - -latin1
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'use ISO-2022 for both input and output                    '
  synonyms:
  - -iso2022
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'use UTF-8 for both input and output                       '
  synonyms:
  - -utf8
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'use MacRoman for input, US-ASCII for output               '
  synonyms:
  - -mac
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'use Windows-1252 for input, US-ASCII for output           '
  synonyms:
  - -win1252
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'use IBM-858 (CP850+Euro) for input, US-ASCII for output   '
  synonyms:
  - -ibm858
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'use UTF-16LE for both input and output                    '
  synonyms:
  - -utf16le
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'use UTF-16BE for both input and output                    '
  synonyms:
  - -utf16be
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'use UTF-16 for both input and output                      '
  synonyms:
  - -utf16
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'use Big5 for both input and output                        '
  synonyms:
  - -big5
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'use Shift_JIS for both input and output                   '
  synonyms:
  - -shiftjis
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'set the two-letter language code <lang> (for future use)  '
  synonyms:
  - -language
  args: !SimpleFlagArg
    name: lang
  optional: true
- !Flag
  description: 'show the version of Tidy                                  '
  synonyms:
  - -version
  - -v
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'list the command line options in XML format               '
  synonyms:
  - -xml-help
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'list all configuration options                            '
  synonyms:
  - -help-config
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'list all configuration options in XML format              '
  synonyms:
  - -xml-config
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'list the current configuration settings                   '
  synonyms:
  - -show-config
  args: !EmptyFlagArg {}
  optional: true
command:
- tidyp
parent:
subcommands: []
help_flag: !Flag
  description: ', -?       list the command line options                             '
  synonyms:
  - -help
  - -h
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "tidyp [option...] [file...] [option...] [file...]\nUtility to clean up\
  \ and pretty print HTML/XHTML/XML\nSee http://tidy.sourceforge.net/\n\nOptions for\
  \ tidyp for Linux v1.04:\n\nFile manipulation\n-----------------\n -output <file>,\
  \ -o  write output to the specified <file>                      \n <file>      \
  \                                                                  \n -config <file>\
  \      set configuration options from the specified <file>       \n -file <file>,\
  \ -f    write errors and warnings to the specified <file>         \n <file>    \
  \                                                                    \n -modify,\
  \ -m         modify the original input files                           \n\nProcessing\
  \ directives\n---------------------\n -indent, -i         indent element content\
  \                                    \n -wrap <column>, -w  wrap text at the specified\
  \ <column>. 0 is assumed if      \n <column>            <column> is missing. When\
  \ this option is omitted, the     \n                     default of the configuration\
  \ option \"wrap\" applies.       \n -upper, -u          force tags to upper case\
  \                                  \n -clean, -c          replace FONT, NOBR and\
  \ CENTER tags by CSS                 \n -bare, -b           strip out smart quotes\
  \ and em dashes, etc.                \n -numeric, -n        output numeric rather\
  \ than named entities                 \n -errors, -e         show only errors and\
  \ warnings                             \n -quiet, -q          suppress nonessential\
  \ output                              \n -omit               omit optional end tags\
  \                                    \n -xml                specify the input is\
  \ well formed XML                      \n -asxml, -asxhtml    convert HTML to well\
  \ formed XHTML                         \n -ashtml             force XHTML to well\
  \ formed HTML                           \n -access <level>     do additional accessibility\
  \ checks (<level> = 0, 1, 2, 3).\n                     0 is assumed if <level> is\
  \ missing.                       \n\nCharacter encodings\n-------------------\n\
  \ -raw                output values above 127 without conversion to entities   \
  \ \n -ascii              use ISO-8859-1 for input, US-ASCII for output         \
  \    \n -latin0             use ISO-8859-15 for input, US-ASCII for output     \
  \       \n -latin1             use ISO-8859-1 for both input and output        \
  \          \n -iso2022            use ISO-2022 for both input and output       \
  \             \n -utf8               use UTF-8 for both input and output       \
  \                \n -mac                use MacRoman for input, US-ASCII for output\
  \               \n -win1252            use Windows-1252 for input, US-ASCII for\
  \ output           \n -ibm858             use IBM-858 (CP850+Euro) for input, US-ASCII\
  \ for output   \n -utf16le            use UTF-16LE for both input and output   \
  \                 \n -utf16be            use UTF-16BE for both input and output\
  \                    \n -utf16              use UTF-16 for both input and output\
  \                      \n -big5               use Big5 for both input and output\
  \                        \n -shiftjis           use Shift_JIS for both input and\
  \ output                   \n -language <lang>    set the two-letter language code\
  \ <lang> (for future use)  \n\nMiscellaneous\n-------------\n -version, -v     \
  \   show the version of Tidy                                  \n -help, -h, -? \
  \      list the command line options                             \n -xml-help  \
  \         list the command line options in XML format               \n -help-config\
  \        list all configuration options                            \n -xml-config\
  \         list all configuration options in XML format              \n -show-config\
  \        list the current configuration settings                   \n\nUse --optionX\
  \ valueX for any configuration option \"optionX\" with argument\n\"valueX\". For\
  \ a list of the configuration options, use \"-help-config\" or refer\nto the man\
  \ page.\n\nInput/Output default to stdin/stdout respectively.\nSingle letter options\
  \ apart from -f may be combined\nas in:  tidy -f errs.txt -imu foo.html\nFor further\
  \ info on HTML see http://www.w3.org/MarkUp\n\n"
generated_using:
- -h
