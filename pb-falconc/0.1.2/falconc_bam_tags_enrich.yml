&id003 !Command
command:
- falconc
- bam-tags-enrich
positional: []
named:
- !Flag
  description: 'advanced: prepend,plurals,..'
  synonyms:
  - --help-syntax
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "=, --output-fn=  string  REQUIRED  Bam or Sam filename (based on its\n\
    extension)"
  synonyms:
  - -o
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "=, --input-fn=   string  REQUIRED  Bam or Sam filename (based on its\n\
    extension), or '-'\n"
  synonyms:
  - -i
  args: !EmptyFlagArg {}
  optional: true
parent: &id001 !Command
  command:
  - falconc
  positional: []
  named: []
  parent:
  subcommands:
  - !Command
    command:
    - falconc
    - bam-filter-clipped
    positional:
    - !Positional
      description: -F=, --Flags-exclude=  string  "0"       Integer (0x ok) of flags
        to exclude,
      position: 0
      name: basepairs
      optional: false
    - !Positional
      description: -t, --tags-enrich      bool    false     Also enrich the tags.
        (See
      position: 0
      name: count.
      optional: false
    named:
    - !Flag
      description: 'advanced: prepend,plurals,..'
      synonyms:
      - --help-syntax
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=, --output-fn=      string  REQUIRED  Bam or Sam filename (based\
        \ on its\nextension)"
      synonyms:
      - -o
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=, --input-fn=       string  REQUIRED  Bam or Sam filename (based\
        \ on its\nextension), or '-'"
      synonyms:
      - -i
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=, --max-clipping=   int     100       Maximum clipping on left\
        \ or right of\nquery, in basepairs"
      synonyms:
      - -m
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --end-margin=     int     25        Maximum margin on contig
        ends, in
      synonyms:
      - -e
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: bool    false     Show each skipped alignment, and a
      synonyms:
      - -v
      - --verbose
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: print this cligen-erated help
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "bam-filter-clipped [required&optional-params] \nFilter alignments\
      \ with significant clipping. To skip an alignment, both\nmax_clipping and end_margin\
      \ must be exceeded on at least 1 end.\nOptions(opt-arg sep :|=|spc):\n  -h,\
      \ --help                               print this cligen-erated help\n  --help-syntax\
      \                            advanced: prepend,plurals,..\n  -o=, --output-fn=\
      \      string  REQUIRED  Bam or Sam filename (based on its\n               \
      \                            extension)\n  -i=, --input-fn=       string  REQUIRED\
      \  Bam or Sam filename (based on its\n                                     \
      \      extension), or '-'\n  -m=, --max-clipping=   int     100       Maximum\
      \ clipping on left or right of\n                                           query,\
      \ in basepairs\n  -e=, --end-margin=     int     25        Maximum margin on\
      \ contig ends, in\n                                           basepairs\n  -F=,\
      \ --Flags-exclude=  string  \"0\"       Integer (0x ok) of flags to exclude,\n\
      \                                           independent of other filters\n \
      \ -v, --verbose          bool    false     Show each skipped alignment, and\
      \ a\n                                           count.\n  -t, --tags-enrich\
      \      bool    false     Also enrich the tags. (See\n                      \
      \                     bam-tags-enrich.)\n"
    generated_using: &id002
    - --help
  - !Command
    command:
    - falconc
    - m4filt-merge-blacklist
    positional: []
    named:
    - !Flag
      description: 'advanced: prepend,plurals,..'
      synonyms:
      - --help-syntax
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --blistFofn=  string  REQUIRED  set blistFofn
      synonyms:
      - -b
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --outFn=      string  REQUIRED  set outFn
      synonyms:
      - -o
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: print this cligen-erated help
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "m4filt-merge-blacklist [required&optional-params] \nOptions(opt-arg\
      \ sep :|=|spc):\n  -h, --help                           print this cligen-erated\
      \ help\n  --help-syntax                        advanced: prepend,plurals,..\n\
      \  -b=, --blistFofn=  string  REQUIRED  set blistFofn\n  -o=, --outFn=     \
      \ string  REQUIRED  set outFn\n"
    generated_using: *id002
  - !Command
    command:
    - falconc
    - bam-filter-ipa
    positional: []
    named:
    - !Flag
      description: 'advanced: prepend,plurals,..'
      synonyms:
      - --help-syntax
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --bams-fofn=             string  REQUIRED  set bams_fofn
      synonyms:
      - -b
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --all-subread-names-fn=  string  ""        set all_subread_names_fn
      synonyms:
      - -a
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --min-len=               int     -1        set min_len
      synonyms:
      - -m
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =                   float   0.7       set min_frac
      synonyms:
      - --min-frac
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: print this cligen-erated help
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "bam-filter-ipa [required&optional-params] \nPrint subreads which have\
      \ decent alignments in any of the bam inputs.\nOptions(opt-arg sep :|=|spc):\n\
      \  -h, --help                                      print this cligen-erated\
      \ help\n  --help-syntax                                   advanced: prepend,plurals,..\n\
      \  -b=, --bams-fofn=             string  REQUIRED  set bams_fofn\n  -a=, --all-subread-names-fn=\
      \  string  \"\"        set all_subread_names_fn\n  -m=, --min-len=         \
      \      int     -1        set min_len\n  --min-frac=                   float\
      \   0.7       set min_frac\n"
    generated_using: *id002
  - !Command
    command:
    - falconc
    - m4filt-ipaRunner
    positional:
    - !Positional
      description: --outputFn=              string  REQUIRED  Final m4 overlap file
      position: 0
      name: file
      optional: false
    named:
    - !Flag
      description: 'advanced: prepend,plurals,..'
      synonyms:
      - --help-syntax
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --ovls-fofn-fn=     string  REQUIRED  List of m4 files from
        ipa/raptor
      synonyms:
      - -o
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=, --idt-stage1=       float   90.0      Stage one percent identity\
        \ filter,\nformatted as percentage, overlaps <\n%idt are skipped"
      synonyms:
      - -i
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =            float   90.0      Stage two percent identify filter
      synonyms:
      - --idt-stage2
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=, --min-len=          int     6000      Minimum read length,\
        \ reads shorter\nthan minLen will be discarded"
      synonyms:
      - -m
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=               int     2         Minimum number of overlaps on\n\
        either side of a read"
      synonyms:
      - --min-cov
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=               int     200       Maximum number of overlaps on\n\
        either side of a read"
      synonyms:
      - --max-cov
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=              int     100       Reads are skipped is abs(5p-3p)\n\
        overlap counts > maxDiff"
      synonyms:
      - --max-diff
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=, --bestn=            int     10        Keep N best overlaps\
        \ at 5prime AND\n3prime of a read"
      synonyms:
      - -b
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=             int     2         Depths lower than minDepth are\n\
        considered gaps"
      synonyms:
      - --min-depth
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "bool    false     Run depth filter, takes a little\nmore time"
      synonyms:
      - -g
      - --gap-filt
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: bool    false     set keepIntermediates
      synonyms:
      - -k
      - --keepIntermediates
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --n-proc=           int     24        Number of processes to
        run locally
      synonyms:
      - -n
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --filter-log-fn=    string  REQUIRED  Write read filter stats
        to this
      synonyms:
      - -f
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: print this cligen-erated help
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "m4filt-ipaRunner [required&optional-params] \nRuns the multi-stage\
      \ m4 overlap filter for IPA. In stage one, reads that trigger\na filter are\
      \ marked including containment, gaps in coverage along the A-read,\nand repeat\
      \ reads. In stage two the filters are applied and the N-best overlaps\nare kept\
      \ for the 5prime and 3prime of each read.\nOptions(opt-arg sep :|=|spc):\n \
      \ -h, --help                                 print this cligen-erated help\n\
      \  --help-syntax                              advanced: prepend,plurals,..\n\
      \  -o=, --ovls-fofn-fn=     string  REQUIRED  List of m4 files from ipa/raptor\n\
      \  -i=, --idt-stage1=       float   90.0      Stage one percent identity filter,\n\
      \                                             formatted as percentage, overlaps\
      \ <\n                                             %idt are skipped\n  --idt-stage2=\
      \            float   90.0      Stage two percent identify filter\n  -m=, --min-len=\
      \          int     6000      Minimum read length, reads shorter\n          \
      \                                   than minLen will be discarded\n  --min-cov=\
      \               int     2         Minimum number of overlaps on\n          \
      \                                   either side of a read\n  --max-cov=    \
      \           int     200       Maximum number of overlaps on\n              \
      \                               either side of a read\n  --max-diff=       \
      \       int     100       Reads are skipped is abs(5p-3p)\n                \
      \                             overlap counts > maxDiff\n  -b=, --bestn=    \
      \        int     10        Keep N best overlaps at 5prime AND\n            \
      \                                 3prime of a read\n  --min-depth=         \
      \    int     2         Depths lower than minDepth are\n                    \
      \                         considered gaps\n  -g, --gap-filt           bool \
      \   false     Run depth filter, takes a little\n                           \
      \                  more time\n  -k, --keepIntermediates  bool    false     set\
      \ keepIntermediates\n  -n=, --n-proc=           int     24        Number of\
      \ processes to run locally\n  -f=, --filter-log-fn=    string  REQUIRED  Write\
      \ read filter stats to this\n                                             file\n\
      \  --outputFn=              string  REQUIRED  Final m4 overlap file\n"
    generated_using: *id002
  - !Command
    command:
    - falconc
    - kmers
    positional: []
    named:
    - !Flag
      description: 'advanced: prepend,plurals,..'
      synonyms:
      - --help-syntax
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --int-dummy=     int     42       set int_dummy
      synonyms:
      - -d
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --string-dummy=  string  "hello"  set string_dummy
      synonyms:
      - -s
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: print this cligen-erated help
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "kmers [optional-params] \nOptions(opt-arg sep :|=|spc):\n  -h, --help\
      \                             print this cligen-erated help\n  --help-syntax\
      \                          advanced: prepend,plurals,..\n  -d=, --int-dummy=\
      \     int     42       set int_dummy\n  -s=, --string-dummy=  string  \"hello\"\
      \  set string_dummy\n"
    generated_using: *id002
  - !Command
    command:
    - falconc
    - phasr
    positional: []
    named:
    - !Flag
      description: 'advanced: prepend,plurals,..'
      synonyms:
      - --help-syntax
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --aln-fn=      string  REQUIRED  BAM alignment, sorted on 'coordinate'
      synonyms:
      - -a
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --ref-fn=      string  REQUIRED  FASTA reference
      synonyms:
      - -r
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --out-fn=      string  REQUIRED  Output file name
      synonyms:
      - -o
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --iterations=  int     1000      Number of phasing iterations
        per read
      synonyms:
      - -i
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --kmersize=    int     21        Kmer size
      synonyms:
      - -k
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --delta=       float   0.75      Frequency cut
      synonyms:
      - -d
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: print this cligen-erated help
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "phasr [required&optional-params] \nPhase PacBio CCS/HIFI reads.\n\
      Options(opt-arg sep :|=|spc):\n  -h, --help                            print\
      \ this cligen-erated help\n  --help-syntax                         advanced:\
      \ prepend,plurals,..\n  -a=, --aln-fn=      string  REQUIRED  BAM alignment,\
      \ sorted on 'coordinate'\n  -r=, --ref-fn=      string  REQUIRED  FASTA reference\n\
      \  -o=, --out-fn=      string  REQUIRED  Output file name\n  -i=, --iterations=\
      \  int     1000      Number of phasing iterations per read\n  -k=, --kmersize=\
      \    int     21        Kmer size\n  -d=, --delta=       float   0.75      Frequency\
      \ cut\n"
    generated_using: *id002
  - !Command
    command:
    - falconc
    - m4filt-falconRunner
    positional:
    - !Positional
      description: '--help-syntax                                     advanced: prepend,plurals,..'
      position: 0
      name: help
      optional: false
    - !Positional
      description: -m=, --min-len=          int     6000             Minimum read
        length, reads
      position: 1
      name: filter
      optional: false
    - !Positional
      description: --min-cov=               int     2                Minimum number
        of overlaps
      position: 0
      name: discarded
      optional: false
    - !Positional
      description: -f=, --filter-log-fn=    string  REQUIRED         Write read filter
        stats to
      position: 0
      name: locally
      optional: false
    named:
    - !Flag
      description: =, --db=               string  REQUIRED         set db
      synonyms:
      - -d
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=, --las-json-fn=      string  REQUIRED         List of las files\
        \ from\nfalcon, e.g../1-preads_ovl/\nlas-merge-combine/las_fofn.j\nson"
      synonyms:
      - -l
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=, --idt-stage1=       float   90.0             Stage one percent\
        \ identity\nfilter, formatted as\npercentage, overlaps < %idt\nare skipped"
      synonyms:
      - -i
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =            float   90.0             Stage two percent identify
      synonyms:
      - --idt-stage2
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=               int     200              Maximum number of overlaps\n\
        on either side of a read"
      synonyms:
      - --max-cov
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=              int     100              Reads are skipped is\n\
        abs(5p-3p) overlap counts >\nmaxDiff"
      synonyms:
      - --max-diff
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=, --bestn=            int     10               Keep N best overlaps\
        \ at\n5prime AND 3prime of a read"
      synonyms:
      - -b
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=             int     2                Depths lower than minDepth\n\
        are considered gaps"
      synonyms:
      - --min-depth
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "bool    false            Run depth filter, takes a\nlittle more\
        \ time"
      synonyms:
      - -g
      - --gap-filt
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: bool    false            set keepIntermediates
      synonyms:
      - -k
      - --keepIntermediates
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --n-proc=           int     24               Number of processes
        to run
      synonyms:
      - -n
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =          string  "LA4Falcon.log"  Write stderr to this file
      synonyms:
      - --debug-log-fn
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --out-fn=           string  REQUIRED         Final m4 overlap
        file
      synonyms:
      - -o
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: print this cligen-erated
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "m4filt-falconRunner [required&optional-params] \nRuns the multi-stage\
      \ m4 overlap filter for falcon. In stage one, reads that\ntrigger a filter are\
      \ marked including containment, gaps in coverage along the\nA-read, and repeat\
      \ reads. In stage two the filters are applied and the N-best\noverlaps are kept\
      \ for the 5prime and 3prime of each read.\nOptions(opt-arg sep :|=|spc):\n \
      \ -h, --help                                        print this cligen-erated\n\
      \                                                    help\n  --help-syntax \
      \                                    advanced: prepend,plurals,..\n  -d=, --db=\
      \               string  REQUIRED         set db\n  -l=, --las-json-fn=     \
      \ string  REQUIRED         List of las files from\n                        \
      \                            falcon, e.g../1-preads_ovl/\n                 \
      \                                   las-merge-combine/las_fofn.j\n         \
      \                                           son\n  -i=, --idt-stage1=      \
      \ float   90.0             Stage one percent identity\n                    \
      \                                filter, formatted as\n                    \
      \                                percentage, overlaps < %idt\n             \
      \                                       are skipped\n  --idt-stage2=       \
      \     float   90.0             Stage two percent identify\n                \
      \                                    filter\n  -m=, --min-len=          int\
      \     6000             Minimum read length, reads\n                        \
      \                            shorter than minLen will be\n                 \
      \                                   discarded\n  --min-cov=               int\
      \     2                Minimum number of overlaps\n                        \
      \                            on either side of a read\n  --max-cov=        \
      \       int     200              Maximum number of overlaps\n              \
      \                                      on either side of a read\n  --max-diff=\
      \              int     100              Reads are skipped is\n             \
      \                                       abs(5p-3p) overlap counts >\n      \
      \                                              maxDiff\n  -b=, --bestn=    \
      \        int     10               Keep N best overlaps at\n                \
      \                                    5prime AND 3prime of a read\n  --min-depth=\
      \             int     2                Depths lower than minDepth\n        \
      \                                            are considered gaps\n  -g, --gap-filt\
      \           bool    false            Run depth filter, takes a\n           \
      \                                         little more time\n  -k, --keepIntermediates\
      \  bool    false            set keepIntermediates\n  -n=, --n-proc=        \
      \   int     24               Number of processes to run\n                  \
      \                                  locally\n  -f=, --filter-log-fn=    string\
      \  REQUIRED         Write read filter stats to\n                           \
      \                         this file\n  --debug-log-fn=          string  \"LA4Falcon.log\"\
      \  Write stderr to this file\n  -o=, --out-fn=           string  REQUIRED  \
      \       Final m4 overlap file\n"
    generated_using: *id002
  - !Command
    command:
    - falconc
    - circ-randomize
    positional: []
    named:
    - !Flag
      description: 'advanced: prepend,plurals,..'
      synonyms:
      - --help-syntax
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --input=   string  REQUIRED  fasta file of circular sequences
      synonyms:
      - -i
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --output=  string  REQUIRED  fasta file output
      synonyms:
      - -o
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --seed=    int64   0         set seed, if non-zero
      synonyms:
      - -s
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: print this cligen-erated help
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "circ-randomize [required&optional-params] \nrandomly rotates left\
      \ rotates the sequence and writes to the output file.\nOptions(opt-arg sep :|=|spc):\n\
      \  -h, --help                        print this cligen-erated help\n  --help-syntax\
      \                     advanced: prepend,plurals,..\n  -i=, --input=   string\
      \  REQUIRED  fasta file of circular sequences\n  -o=, --output=  string  REQUIRED\
      \  fasta file output\n  -s=, --seed=    int64   0         set seed, if non-zero\n"
    generated_using: *id002
  - *id003
  - !Command
    command:
    - falconc
    - rr-hctg-track2
    positional:
    - !Positional
      description: help
      position: 0
      name: cligen-erated
      optional: false
    - !Positional
      description: -p=, --partials-fn=         string  "./4-quiver/track-reads/partials.json"       set
        partials_fn
      position: 1
      name: ig_map
      optional: false
    - !Positional
      description: --rawread-ids=              string  ""                                           set
        rawread_ids
      position: 2
      name: phased_read_file
      optional: false
    named:
    - !Flag
      description: "advanced:prepen\nd,plurals,.."
      synonyms:
      - --help-syntax
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: bool    false                                        set test
      synonyms:
      - -t
      - --test
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --read-to-contig-map=  string  "./4-quiver/track_reads/read_to_contig_map"  setread_to_cont
      synonyms:
      - -r
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --output=              string  "./4-quiver/track-reads/rawread_to_contigs"  set
        output
      synonyms:
      - -o
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --bestn=               int     40                                           set
        bestn
      synonyms:
      - -b
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --n-core=              int     0                                            set
        n_core
      synonyms:
      - -n
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =         string  ""                                           set
      synonyms:
      - --phased-read-file
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --min-len=             int     2500                                         set
        min_len
      synonyms:
      - -m
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: bool    false                                        set stream
      synonyms:
      - -s
      - --stream
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: bool    false                                        set debug
      synonyms:
      - -d
      - --debug
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: bool    false                                        set silent
      synonyms:
      - --silent
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: print this
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "rr-hctg-track2 [optional-params] \nStage 2 of rr_hctg_track\nOptions(opt-arg\
      \ sep :|=|spc):\n  -h, --help                                              \
      \                         print this\n                                     \
      \                                              cligen-erated\n             \
      \                                                                      help\n\
      \  --help-syntax                                                           \
      \         advanced:prepen\n                                                \
      \                                   d,plurals,..\n  -t, --test             \
      \     bool    false                                        set test\n  -r=,\
      \ --read-to-contig-map=  string  \"./4-quiver/track_reads/read_to_contig_map\"\
      \  setread_to_cont\n                                                       \
      \                            ig_map\n  -p=, --partials-fn=         string  \"\
      ./4-quiver/track-reads/partials.json\"       set partials_fn\n  -o=, --output=\
      \              string  \"./4-quiver/track-reads/rawread_to_contigs\"  set output\n\
      \  -b=, --bestn=               int     40                                  \
      \         set bestn\n  -n=, --n-core=              int     0               \
      \                             set n_core\n  --phased-read-file=         string\
      \  \"\"                                           set\n                    \
      \                                                               phased_read_file\n\
      \  --rawread-ids=              string  \"\"                                \
      \           set rawread_ids\n  -m=, --min-len=             int     2500    \
      \                                     set min_len\n  -s, --stream          \
      \      bool    false                                        set stream\n  -d,\
      \ --debug                 bool    false                                    \
      \    set debug\n  --silent                    bool    false                \
      \                        set silent\n"
    generated_using: *id002
  - !Command
    command:
    - falconc
    - version
    positional: []
    named:
    - !Flag
      description: 'advanced: prepend,plurals,..'
      synonyms:
      - --help-syntax
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: print this cligen-erated help
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "version [optional-params] \nOptions(opt-arg sep :|=|spc):\n  -h, --help\
      \         print this cligen-erated help\n  --help-syntax      advanced: prepend,plurals,..\n"
    generated_using: *id002
  - !Command
    command:
    - falconc
    - raptor-db-calc-length-cutoff
    positional: []
    named:
    - !Flag
      description: 'advanced: prepend,plurals,..'
      synonyms:
      - --help-syntax
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --rdb-fn=       string  "rawreads.db"  set rdb_fn
      synonyms:
      - -r
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --genome-size=  int64   4600000        set genome_size
      synonyms:
      - -g
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --coverage=     float   30.0           set coverage
      synonyms:
      - -c
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "bool    false          Exit non-zero if the input\ncoverage was\
        \ insufficient to\nsatisfy the requirement."
      synonyms:
      - -f
      - --fail-low-cov
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=, --alarms-fn=    string  \"\"             Optional JSON file\
        \ to write SMRT\nLink alarms. (typically used w/\n-f)\n"
      synonyms:
      - -a
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: print this cligen-erated help
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "raptor-db-calc-length-cutoff [optional-params] \nPerform a linear\
      \ pass on an overlap file, and determine rough clipping\ncoordinates to 'correct'\
      \ reads. Write integer to stdout.\nOptions(opt-arg sep :|=|spc):\n  -h, --help\
      \                                  print this cligen-erated help\n  --help-syntax\
      \                               advanced: prepend,plurals,..\n  -r=, --rdb-fn=\
      \       string  \"rawreads.db\"  set rdb_fn\n  -g=, --genome-size=  int64  \
      \ 4600000        set genome_size\n  -c=, --coverage=     float   30.0      \
      \     set coverage\n  -f, --fail-low-cov   bool    false          Exit non-zero\
      \ if the input\n                                              coverage was insufficient\
      \ to\n                                              satisfy the requirement.\n\
      \  -a=, --alarms-fn=    string  \"\"             Optional JSON file to write\
      \ SMRT\n                                              Link alarms. (typically\
      \ used w/\n                                              -f)\n"
    generated_using: *id002
  - !Command
    command:
    - falconc
    - circ-orient
    positional:
    - !Positional
      description: -o=, --output-fn=  string  REQUIRED  fasta (or fastq) file output
      position: 0
      name: sequences
      optional: false
    named:
    - !Flag
      description: 'advanced: prepend,plurals,..'
      synonyms:
      - --help-syntax
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --input-fn=   string  REQUIRED  fasta (or fastq) file of circular
      synonyms:
      - -i
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=, --wl-fn=      string  \"\"        white list of sequences to\
        \ rotate, one\nper line, no spaces, no trailing spaces"
      synonyms:
      - -w
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =          int     500       window size to caculate gc-skew
      synonyms:
      - --window
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --step=       int     200       window step
      synonyms:
      - -s
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "bool    false     print skew data to files\n('SEQ.gc_skew.txt'),\
        \ one per sequence\n"
      synonyms:
      - -p
      - --print
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: print this cligen-erated help
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "circ-orient [required&optional-params] \nreorients circular sequences\
      \ based on gc-skew distribution and writes to output.\nOptions(opt-arg sep :|=|spc):\n\
      \  -h, --help                           print this cligen-erated help\n  --help-syntax\
      \                        advanced: prepend,plurals,..\n  -i=, --input-fn=  \
      \ string  REQUIRED  fasta (or fastq) file of circular\n                    \
      \                   sequences\n  -o=, --output-fn=  string  REQUIRED  fasta\
      \ (or fastq) file output\n  -w=, --wl-fn=      string  \"\"        white list\
      \ of sequences to rotate, one\n                                       per line,\
      \ no spaces, no trailing spaces\n  --window=          int     500       window\
      \ size to caculate gc-skew\n  -s=, --step=       int     200       window step\n\
      \  -p, --print        bool    false     print skew data to files\n         \
      \                              ('SEQ.gc_skew.txt'), one per sequence\n"
    generated_using: *id002
  - !Command
    command:
    - falconc
    - m4filt-stage2
    positional: []
    named:
    - !Flag
      description: 'advanced: prepend,plurals,..'
      synonyms:
      - --help-syntax
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --minIdt=          float   90.0      set minIdt
      synonyms:
      - -m
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --bestN=           int     10        set bestN
      synonyms:
      - -b
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =          string  REQUIRED  set blacklistIn
      synonyms:
      - --blacklistIn
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --filteredOutput=  string  REQUIRED  set filteredOutput
      synonyms:
      - -f
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: print this cligen-erated help
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "m4filt-stage2 [required&optional-params] \nOptions(opt-arg sep :|=|spc):\n\
      \  -h, --help                                print this cligen-erated help\n\
      \  --help-syntax                             advanced: prepend,plurals,..\n\
      \  -m=, --minIdt=          float   90.0      set minIdt\n  -b=, --bestN=   \
      \        int     10        set bestN\n  --blacklistIn=          string  REQUIRED\
      \  set blacklistIn\n  -f=, --filteredOutput=  string  REQUIRED  set filteredOutput\n"
    generated_using: *id002
  - !Command
    command:
    - falconc
    - help
    positional:
    - !Positional
      description: -F=, --Flags-exclude=  string  "0"       Integer (0x ok) of flags
        to
      position: 0
      name: basepairs
      optional: false
    - !Positional
      description: -v, --verbose          bool    false     Show each skipped alignment,
        and
      position: 0
      name: filters
      optional: false
    - !Positional
      description: 'Options(opt-arg sep :|=|spc):'
      position: 0
      name: output.
      optional: false
    - !Positional
      description: -o=, --output-fn=  string  REQUIRED  fasta (or fastq) file output
      position: 1
      name: sequences
      optional: false
    - !Positional
      description: -k=, --kmersize=    int     21        Kmer size
      position: 0
      name: read
      optional: false
    - !Positional
      description: -m=, --min-len=          int     6000      Minimum read length,
        reads
      position: 0
      name: filter
      optional: false
    - !Positional
      description: --min-cov=               int     2         Minimum number of overlaps
        on
      position: 0
      name: discarded
      optional: false
    - !Positional
      description: -f=, --filter-log-fn=    string  REQUIRED  Write read filter stats
        to this
      position: 0
      name: locally
      optional: false
    - !Positional
      description: -o=, --out-fn=           string  REQUIRED  Final m4 overlap file
      position: 1
      name: file
      optional: false
    - !Positional
      description: '--help-syntax                                     advanced:'
      position: 0
      name: help
      optional: false
    - !Positional
      description: -o=, --out-fn=           string  REQUIRED         Final m4 overlap
        file
      position: 0
      name: file
      optional: false
    - !Positional
      description: -i=, --idt-stage1=       float   90.0      Stage one percent identity
      position: 0
      name: ipa/raptor
      optional: false
    - !Positional
      description: --idt-stage2=            float   90.0      Stage two percent identify
      position: 0
      name: skipped
      optional: false
    - !Positional
      description: -m=, --min-len=          int     6000      Minimum read length,
        reads
      position: 1
      name: filter
      optional: false
    - !Positional
      description: --min-cov=               int     2         Minimum number of overlaps
        on
      position: 0
      name: discarded
      optional: false
    - !Positional
      description: -f=, --filter-log-fn=    string  REQUIRED  Write read filter stats
        to this
      position: 0
      name: locally
      optional: false
    - !Positional
      description: --outputFn=              string  REQUIRED  Final m4 overlap file
      position: 1
      name: file
      optional: false
    - !Positional
      description: help
      position: 0
      name: cligen-erated
      optional: false
    - !Positional
      description: -r=, --read-to-contig-map=  string  "./4-quiver/read_maps/read_to_contig_map"                       setread_to_cont
      position: 1
      name: phased_read_file
      optional: false
    - !Positional
      description: --rawread-ids=              string  "./2-asm-falcon/read_maps/dump_rawread_ids/rawread_ids"         set
        rawread_ids
      position: 2
      name: ig_map
      optional: false
    - !Positional
      description: help
      position: 0
      name: cligen-erated
      optional: false
    - !Positional
      description: -p=, --partials-fn=         string  "./4-quiver/track-reads/partials.json"       set
        partials_fn
      position: 1
      name: ig_map
      optional: false
    - !Positional
      description: --rawread-ids=              string  ""                                           set
        rawread_ids
      position: 2
      name: phased_read_file
      optional: false
    named:
    - !Flag
      description: 'advanced: prepend,plurals,..'
      synonyms:
      - --help-syntax
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --int-dummy=     int     42       set int_dummy
      synonyms:
      - -d
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --string-dummy=  string  "hello"  set string_dummy
      synonyms:
      - -s
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --float_req=  float  REQUIRED  special help message
      synonyms:
      - -f
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --bams-fofn=             string  REQUIRED  set bams_fofn
      synonyms:
      - -b
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --all-subread-names-fn=  string  ""        set all_subread_names_fn
      synonyms:
      - -a
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --min-len=               int     -1        set min_len
      synonyms:
      - -m
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =                   float   0.7       set min_frac
      synonyms:
      - --min-frac
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=, --output-fn=  string  REQUIRED  Bam or Sam filename (based\
        \ on its\nextension)"
      synonyms:
      - -o
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=, --input-fn=   string  REQUIRED  Bam or Sam filename (based\
        \ on its\nextension), or '-'"
      synonyms:
      - -i
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --end-margin=     int     25        Maximum margin on contig
        ends, in
      synonyms:
      - -e
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "bool    false     Also enrich the tags. (See\nbam-tags-enrich.)"
      synonyms:
      - -t
      - --tags-enrich
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --rdb-fn=       string  "rawreads.db"  set rdb_fn
      synonyms:
      - -r
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --genome-size=  int64   4600000        set genome_size
      synonyms:
      - -g
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --coverage=     float   30.0           set coverage
      synonyms:
      - -c
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "bool    false          Exit non-zero if the input\ncoverage was\
        \ insufficient to\nsatisfy the requirement."
      synonyms:
      - -f
      - --fail-low-cov
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=, --wl-fn=      string  \"\"        white list of sequences to\
        \ rotate,\none per line, no spaces, no trailing\nspaces"
      synonyms:
      - -w
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =          int     500       window size to caculate gc-skew
      synonyms:
      - --window
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "bool    false     print skew data to files\n('SEQ.gc_skew.txt'),\
        \ one per sequence"
      synonyms:
      - -p
      - --print
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =          int     200       set maxCov
      synonyms:
      - --maxCov
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =          int     2         set minCov
      synonyms:
      - --minCov
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =          int     6000      set minLen
      synonyms:
      - --minLen
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =          float   95.0      set minIdt
      synonyms:
      - --minIdt
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: bool    false     set gapFilt
      synonyms:
      - -g
      - --gapFilt
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =        int     2         set minDepth
      synonyms:
      - --minDepth
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =          string  REQUIRED  set blacklistIn
      synonyms:
      - --blacklistIn
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =            float   90.0      Stage two percent identify
      synonyms:
      - --idt-stage2
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=               int     200       Maximum number of overlaps on\n\
        either side of a read"
      synonyms:
      - --max-cov
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=              int     100       Reads are skipped is abs(5p-3p)\n\
        overlap counts > maxDiff"
      synonyms:
      - --max-diff
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=             int     2         Depths lower than minDepth are\n\
        considered gaps"
      synonyms:
      - --min-depth
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "bool    false     Run depth filter, takes a\nlittle more time"
      synonyms:
      - -g
      - --gap-filt
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: bool    false     set keepIntermediates
      synonyms:
      - -k
      - --keepIntermediates
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --n-proc=           int     24        Number of processes to
        run
      synonyms:
      - -n
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=, --las-json-fn=      string  REQUIRED         List of las files\
        \ from\nfalcon, e.g../1-preads_\novl/las-merge-combine/la\ns_fofn.json"
      synonyms:
      - -l
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=               int     2                Minimum number of\noverlaps\
        \ on either side\nof a read"
      synonyms:
      - --min-cov
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =          string  "LA4Falcon.log"  Write stderr to this
      synonyms:
      - --debug-log-fn
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "bool    false     IGNORED (used in\novlp_to_graph)"
      synonyms:
      - --lfc
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "bool    false     IGNORED (used in\novlp_to_graph)"
      synonyms:
      - --disable_chimer_bridge_removal
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=                    string  \"\"        IGNORED (used in\novlp_to_graph)"
      synonyms:
      - --ctg_prefix
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=                       int     400       Minimum read length;\n\
        reads shorter than\nminLen will be\ndiscarded"
      synonyms:
      - --min-len
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=                   float   96.0      Minimum overlap\nidentity;\
        \ worse\noverlaps will be\ndiscarded"
      synonyms:
      - --min-idt-pct
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --verbose=  int     1                         set verbose
      synonyms:
      - -v
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: bool    false                     set dry_run
      synonyms:
      - -n
      - --dry-run
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: bool    false                                                           set
        test
      synonyms:
      - -t
      - --test
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: bool    false                                                           set
        stream
      synonyms:
      - -s
      - --stream
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: bool    false                                                           set
        debug
      synonyms:
      - -d
      - --debug
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: bool    false                                                           set
        silent
      synonyms:
      - --silent
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =         string  ""                                           set
      synonyms:
      - --phased-read-file
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: print this
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "This is a multiple-dispatch command.  Top-level --help/--help-syntax\n\
      is also available.  Usage is like:\n    falconc {SUBCMD} [subcommand-opts &\
      \ args]\nwhere subcommand syntaxes are as follows:\n\n  version [optional-params]\
      \ \n  Options(opt-arg sep :|=|spc):\n      -h, --help         print this cligen-erated\
      \ help\n      --help-syntax      advanced: prepend,plurals,..\n\n  dataset [optional-params]\
      \ [extras: string...]\n  Options(opt-arg sep :|=|spc):\n      -h, --help   \
      \      print this cligen-erated help\n      --help-syntax      advanced: prepend,plurals,..\n\
      \n  kmers [optional-params] \n  Options(opt-arg sep :|=|spc):\n      -h, --help\
      \                             print this cligen-erated help\n      --help-syntax\
      \                          advanced: prepend,plurals,..\n      -d=, --int-dummy=\
      \     int     42       set int_dummy\n      -s=, --string-dummy=  string  \"\
      hello\"  set string_dummy\n\n  utils [required&optional-params] [extras: string...]\n\
      \  Options(opt-arg sep :|=|spc):\n      -h, --help                         \
      \ print this cligen-erated help\n      --help-syntax                       advanced:\
      \ prepend,plurals,..\n      -f=, --float_req=  float  REQUIRED  special help\
      \ message\n\n  bam-filter-ipa [required&optional-params] \n    Print subreads\
      \ which have decent alignments in any of the bam inputs.\n  Options(opt-arg\
      \ sep :|=|spc):\n      -h, --help                                      print\
      \ this cligen-erated\n                                                     \
      \ help\n      --help-syntax                                   advanced:\n  \
      \                                                    prepend,plurals,..\n  \
      \    -b=, --bams-fofn=             string  REQUIRED  set bams_fofn\n      -a=,\
      \ --all-subread-names-fn=  string  \"\"        set all_subread_names_fn\n  \
      \    -m=, --min-len=               int     -1        set min_len\n      --min-frac=\
      \                   float   0.7       set min_frac\n\n  align-filter [required&optional-params]\
      \ \n    alias for bam-filter-ipa\n  Options(opt-arg sep :|=|spc):\n      -h,\
      \ --help                                      print this cligen-erated\n   \
      \                                                   help\n      --help-syntax\
      \                                   advanced:\n                            \
      \                          prepend,plurals,..\n      -b=, --bams-fofn=     \
      \        string  REQUIRED  set bams_fofn\n      -a=, --all-subread-names-fn=\
      \  string  \"\"        set all_subread_names_fn\n      -m=, --min-len=     \
      \          int     -1        set min_len\n      --min-frac=                \
      \   float   0.7       set min_frac\n\n  bam-tags-enrich [required&optional-params]\
      \ \n    Add XB/XE/XP/XR/XQ: beg/end/%idt/aln-ref-len/qry-len\n  Options(opt-arg\
      \ sep :|=|spc):\n      -h, --help                           print this cligen-erated\
      \ help\n      --help-syntax                        advanced: prepend,plurals,..\n\
      \      -o=, --output-fn=  string  REQUIRED  Bam or Sam filename (based on its\n\
      \                                           extension)\n      -i=, --input-fn=\
      \   string  REQUIRED  Bam or Sam filename (based on its\n                  \
      \                         extension), or '-'\n\n  bam-filter-clipped [required&optional-params]\
      \ \n    Filter alignments with significant clipping. To skip an alignment, both\n\
      \    max_clipping and end_margin must be exceeded on at least 1 end.\n  Options(opt-arg\
      \ sep :|=|spc):\n      -h, --help                               print this cligen-erated\
      \ help\n      --help-syntax                            advanced: prepend,plurals,..\n\
      \      -o=, --output-fn=      string  REQUIRED  Bam or Sam filename (based on\
      \ its\n                                               extension)\n      -i=,\
      \ --input-fn=       string  REQUIRED  Bam or Sam filename (based on its\n  \
      \                                             extension), or '-'\n      -m=,\
      \ --max-clipping=   int     100       Maximum clipping on left or right\n  \
      \                                             of query, in basepairs\n     \
      \ -e=, --end-margin=     int     25        Maximum margin on contig ends, in\n\
      \                                               basepairs\n      -F=, --Flags-exclude=\
      \  string  \"0\"       Integer (0x ok) of flags to\n                       \
      \                        exclude, independent of other\n                   \
      \                            filters\n      -v, --verbose          bool    false\
      \     Show each skipped alignment, and\n                                   \
      \            a count.\n      -t, --tags-enrich      bool    false     Also enrich\
      \ the tags. (See\n                                               bam-tags-enrich.)\n\
      \n  raptor-db-filter [optional-params] \n    Read/write raptor-db to/from stdin/stdout.\
      \ Exclude zmws in blacklist.\n  Options(opt-arg sep :|=|spc):\n      -h, --help\
      \                        print this cligen-erated help\n      --help-syntax\
      \                     advanced: prepend,plurals,..\n      -b=, --blacklist-fn=\
      \  string  \"\"  set blacklist_fn\n\n  raptor-db-calc-length-cutoff [optional-params]\
      \ \n    Perform a linear pass on an overlap file, and determine rough clipping\n\
      \    coordinates to 'correct' reads. Write integer to stdout.\n  Options(opt-arg\
      \ sep :|=|spc):\n      -h, --help                                  print this\
      \ cligen-erated help\n      --help-syntax                               advanced:\
      \ prepend,plurals,..\n      -r=, --rdb-fn=       string  \"rawreads.db\"  set\
      \ rdb_fn\n      -g=, --genome-size=  int64   4600000        set genome_size\n\
      \      -c=, --coverage=     float   30.0           set coverage\n      -f, --fail-low-cov\
      \   bool    false          Exit non-zero if the input\n                    \
      \                              coverage was insufficient to\n              \
      \                                    satisfy the requirement.\n      -a=, --alarms-fn=\
      \    string  \"\"             Optional JSON file to write\n                \
      \                                  SMRT Link alarms. (typically\n          \
      \                                        used w/ -f)\n\n  circ-orient [required&optional-params]\
      \ \n    reorients circular sequences based on gc-skew distribution and writes\
      \ to\n    output.\n  Options(opt-arg sep :|=|spc):\n      -h, --help       \
      \                    print this cligen-erated help\n      --help-syntax    \
      \                    advanced: prepend,plurals,..\n      -i=, --input-fn=  \
      \ string  REQUIRED  fasta (or fastq) file of circular\n                    \
      \                       sequences\n      -o=, --output-fn=  string  REQUIRED\
      \  fasta (or fastq) file output\n      -w=, --wl-fn=      string  \"\"     \
      \   white list of sequences to rotate,\n                                   \
      \        one per line, no spaces, no trailing\n                            \
      \               spaces\n      --window=          int     500       window size\
      \ to caculate gc-skew\n      -s=, --step=       int     200       window step\n\
      \      -p, --print        bool    false     print skew data to files\n     \
      \                                      ('SEQ.gc_skew.txt'), one per sequence\n\
      \n  circ-randomize [required&optional-params] \n    randomly rotates left rotates\
      \ the sequence and writes to the output file.\n  Options(opt-arg sep :|=|spc):\n\
      \      -h, --help                        print this cligen-erated help\n   \
      \   --help-syntax                     advanced: prepend,plurals,..\n      -i=,\
      \ --input=   string  REQUIRED  fasta file of circular sequences\n      -o=,\
      \ --output=  string  REQUIRED  fasta file output\n      -s=, --seed=    int64\
      \   0         set seed, if non-zero\n\n  phasr [required&optional-params] \n\
      \    Phase PacBio CCS/HIFI reads.\n  Options(opt-arg sep :|=|spc):\n      -h,\
      \ --help                            print this cligen-erated help\n      --help-syntax\
      \                         advanced: prepend,plurals,..\n      -a=, --aln-fn=\
      \      string  REQUIRED  BAM alignment, sorted on\n                        \
      \                    'coordinate'\n      -r=, --ref-fn=      string  REQUIRED\
      \  FASTA reference\n      -o=, --out-fn=      string  REQUIRED  Output file\
      \ name\n      -i=, --iterations=  int     1000      Number of phasing iterations\
      \ per\n                                            read\n      -k=, --kmersize=\
      \    int     21        Kmer size\n      -d=, --delta=       float   0.75   \
      \   Frequency cut\n\n  m4filt-merge-blacklist [required&optional-params] \n\
      \  Options(opt-arg sep :|=|spc):\n      -h, --help                         \
      \  print this cligen-erated help\n      --help-syntax                      \
      \  advanced: prepend,plurals,..\n      -b=, --blistFofn=  string  REQUIRED \
      \ set blistFofn\n      -o=, --outFn=      string  REQUIRED  set outFn\n\n  m4filt-stage1\
      \ [required&optional-params] \n  Options(opt-arg sep :|=|spc):\n      -h, --help\
      \                           print this cligen-erated help\n      --help-syntax\
      \                        advanced: prepend,plurals,..\n      -m=, --maxDiff=\
      \    int     100       set maxDiff\n      --maxCov=          int     200   \
      \    set maxCov\n      --minCov=          int     2         set minCov\n   \
      \   --minLen=          int     6000      set minLen\n      --minIdt=       \
      \   float   95.0      set minIdt\n      -g, --gapFilt      bool    false   \
      \  set gapFilt\n      --minDepth=        int     2         set minDepth\n  \
      \    -b=, --blacklist=  string  REQUIRED  set blacklist\n\n  m4filt-stage2 [required&optional-params]\
      \ \n  Options(opt-arg sep :|=|spc):\n      -h, --help                      \
      \          print this cligen-erated help\n      --help-syntax              \
      \               advanced: prepend,plurals,..\n      -m=, --minIdt=         \
      \ float   90.0      set minIdt\n      -b=, --bestN=           int     10   \
      \     set bestN\n      --blacklistIn=          string  REQUIRED  set blacklistIn\n\
      \      -f=, --filteredOutput=  string  REQUIRED  set filteredOutput\n\n  m4filt-dump-blacklist\
      \ [required&optional-params] \n  Options(opt-arg sep :|=|spc):\n      -h, --help\
      \                           print this cligen-erated help\n      --help-syntax\
      \                        advanced: prepend,plurals,..\n      -b=, --blacklist=\
      \  string  REQUIRED  set blacklist\n\n  m4filt [required&optional-params] \n\
      \    Run the multi-stage m4 overlap filter. Read the m4 filenames from stdin.\
      \ In\n    stage one, reads that trigger a filter are marked including containment,\n\
      \    gaps in coverage along the A-read, and repeat reads. In stage two the\n\
      \    filters are applied and the N-best overlaps are kept for the 5prime and\n\
      \    3prime of each read.\n  Options(opt-arg sep :|=|spc):\n      -h, --help\
      \                                 print this cligen-erated help\n      --help-syntax\
      \                              advanced: prepend,plurals,..\n      -i=, --idt-stage1=\
      \       float   90.0      Stage one percent identity\n                     \
      \                            filter, formatted as\n                        \
      \                         percentage, overlaps < %idt are\n                \
      \                                 skipped\n      --idt-stage2=            float\
      \   90.0      Stage two percent identify\n                                 \
      \                filter\n      -m=, --min-len=          int     6000      Minimum\
      \ read length, reads\n                                                 shorter\
      \ than minLen will be\n                                                 discarded\n\
      \      --min-cov=               int     2         Minimum number of overlaps\
      \ on\n                                                 either side of a read\n\
      \      --max-cov=               int     200       Maximum number of overlaps\
      \ on\n                                                 either side of a read\n\
      \      --max-diff=              int     100       Reads are skipped is abs(5p-3p)\n\
      \                                                 overlap counts > maxDiff\n\
      \      -b=, --bestn=            int     10        Keep N best overlaps at 5prime\n\
      \                                                 AND 3prime of a read\n   \
      \   --min-depth=             int     2         Depths lower than minDepth are\n\
      \                                                 considered gaps\n      -g,\
      \ --gap-filt           bool    false     Run depth filter, takes a\n       \
      \                                          little more time\n      -k, --keepIntermediates\
      \  bool    false     set keepIntermediates\n      -n=, --n-proc=           int\
      \     24        Number of processes to run\n                               \
      \                  locally\n      -f=, --filter-log-fn=    string  REQUIRED\
      \  Write read filter stats to this\n                                       \
      \          file\n      -o=, --out-fn=           string  REQUIRED  Final m4 overlap\
      \ file\n\n  m4filt-falconRunner [required&optional-params] \n    Runs the multi-stage\
      \ m4 overlap filter for falcon. In stage one, reads that\n    trigger a filter\
      \ are marked including containment, gaps in coverage along\n    the A-read,\
      \ and repeat reads. In stage two the filters are applied and the\n    N-best\
      \ overlaps are kept for the 5prime and 3prime of each read.\n  Options(opt-arg\
      \ sep :|=|spc):\n      -h, --help                                        print\
      \ this cligen-erated\n                                                     \
      \   help\n      --help-syntax                                     advanced:\n\
      \                                                        prepend,plurals,..\n\
      \      -d=, --db=               string  REQUIRED         set db\n      -l=,\
      \ --las-json-fn=      string  REQUIRED         List of las files from\n    \
      \                                                    falcon, e.g../1-preads_\n\
      \                                                        ovl/las-merge-combine/la\n\
      \                                                        s_fofn.json\n     \
      \ -i=, --idt-stage1=       float   90.0             Stage one percent\n    \
      \                                                    identity filter,\n    \
      \                                                    formatted as percentage,\n\
      \                                                        overlaps < %idt are\n\
      \                                                        skipped\n      --idt-stage2=\
      \            float   90.0             Stage two percent\n                  \
      \                                      identify filter\n      -m=, --min-len=\
      \          int     6000             Minimum read length,\n                 \
      \                                       reads shorter than\n               \
      \                                         minLen will be discarded\n      --min-cov=\
      \               int     2                Minimum number of\n               \
      \                                         overlaps on either side\n        \
      \                                                of a read\n      --max-cov=\
      \               int     200              Maximum number of\n               \
      \                                         overlaps on either side\n        \
      \                                                of a read\n      --max-diff=\
      \              int     100              Reads are skipped is\n             \
      \                                           abs(5p-3p) overlap\n           \
      \                                             counts > maxDiff\n      -b=, --bestn=\
      \            int     10               Keep N best overlaps at\n            \
      \                                            5prime AND 3prime of a\n      \
      \                                                  read\n      --min-depth=\
      \             int     2                Depths lower than\n                 \
      \                                       minDepth are considered\n          \
      \                                              gaps\n      -g, --gap-filt  \
      \         bool    false            Run depth filter, takes\n               \
      \                                         a little more time\n      -k, --keepIntermediates\
      \  bool    false            set keepIntermediates\n      -n=, --n-proc=    \
      \       int     24               Number of processes to\n                  \
      \                                      run locally\n      -f=, --filter-log-fn=\
      \    string  REQUIRED         Write read filter stats\n                    \
      \                                    to this file\n      --debug-log-fn=   \
      \       string  \"LA4Falcon.log\"  Write stderr to this\n                  \
      \                                      file\n      -o=, --out-fn=          \
      \ string  REQUIRED         Final m4 overlap file\n\n  m4filt-ipaRunner [required&optional-params]\
      \ \n    Runs the multi-stage m4 overlap filter for IPA. In stage one, reads\
      \ that\n    trigger a filter are marked including containment, gaps in coverage\
      \ along\n    the A-read, and repeat reads. In stage two the filters are applied\
      \ and the\n    N-best overlaps are kept for the 5prime and 3prime of each read.\n\
      \  Options(opt-arg sep :|=|spc):\n      -h, --help                         \
      \        print this cligen-erated help\n      --help-syntax                \
      \              advanced: prepend,plurals,..\n      -o=, --ovls-fofn-fn=    \
      \ string  REQUIRED  List of m4 files from\n                                \
      \                 ipa/raptor\n      -i=, --idt-stage1=       float   90.0  \
      \    Stage one percent identity\n                                          \
      \       filter, formatted as\n                                             \
      \    percentage, overlaps < %idt are\n                                     \
      \            skipped\n      --idt-stage2=            float   90.0      Stage\
      \ two percent identify\n                                                 filter\n\
      \      -m=, --min-len=          int     6000      Minimum read length, reads\n\
      \                                                 shorter than minLen will be\n\
      \                                                 discarded\n      --min-cov=\
      \               int     2         Minimum number of overlaps on\n          \
      \                                       either side of a read\n      --max-cov=\
      \               int     200       Maximum number of overlaps on\n          \
      \                                       either side of a read\n      --max-diff=\
      \              int     100       Reads are skipped is abs(5p-3p)\n         \
      \                                        overlap counts > maxDiff\n      -b=,\
      \ --bestn=            int     10        Keep N best overlaps at 5prime\n   \
      \                                              AND 3prime of a read\n      --min-depth=\
      \             int     2         Depths lower than minDepth are\n           \
      \                                      considered gaps\n      -g, --gap-filt\
      \           bool    false     Run depth filter, takes a\n                  \
      \                               little more time\n      -k, --keepIntermediates\
      \  bool    false     set keepIntermediates\n      -n=, --n-proc=           int\
      \     24        Number of processes to run\n                               \
      \                  locally\n      -f=, --filter-log-fn=    string  REQUIRED\
      \  Write read filter stats to this\n                                       \
      \          file\n      --outputFn=              string  REQUIRED  Final m4 overlap\
      \ file\n\n  m4filt-contained [required&optional-params] \n    Parse .m4 file.\n\
      \    Write only the overlaps which pass the filters.\n    (no overlaps involving\
      \ contained reads;\n     no overlaps involving short reads;\n     no overlaps\
      \ with low identity)\n  Options(opt-arg sep :|=|spc):\n      -h, --help    \
      \                                     print this\n                         \
      \                                cligen-erated help\n      --help-syntax   \
      \                                   advanced:\n                            \
      \                             prepend,plurals,..\n      -i=, --in-fn=      \
      \              string  REQUIRED  Input m4 overlap file\n      -o=, --out-fn=\
      \                   string  REQUIRED  Output m4 overlap file\n      --lfc  \
      \                          bool    false     IGNORED (used in\n            \
      \                                             ovlp_to_graph)\n      --disable_chimer_bridge_removal\
      \  bool    false     IGNORED (used in\n                                    \
      \                     ovlp_to_graph)\n      --ctg_prefix=                  \
      \  string  \"\"        IGNORED (used in\n                                  \
      \                       ovlp_to_graph)\n      --min-len=                   \
      \    int     400       Minimum read length;\n                              \
      \                           reads shorter than\n                           \
      \                              minLen will be\n                            \
      \                             discarded\n      --min-idt-pct=              \
      \     float   96.0      Minimum overlap\n                                  \
      \                       identity; worse\n                                  \
      \                       overlaps will be\n                                 \
      \                        discarded\n\n  pbcromwell-rm-las [optional-params]\
      \ \n    Remove all .las files except final stage of merge. (Unzip is still\n\
      \    possible.) Filepaths come from the provided command as a subprocess, or\
      \ from\n    stdin if command==\"-\", (Someday, we will add a flag to delete\
      \ the final\n    stage too, optionally.)\n  Options(opt-arg sep :|=|spc):\n\
      \      -h, --help                                         print this\n     \
      \                                                    cligen-erated help\n  \
      \    --help-syntax                                      advanced:\n        \
      \                                                 prepend,plurals,..\n     \
      \ -c=, --command=  string  \"find . -name \\'*.las\\'\"  set command\n     \
      \ -v=, --verbose=  int     1                         set verbose\n      -n,\
      \ --dry-run    bool    false                     set dry_run\n\n  pbreports-circ\
      \ [required&optional-params] \n    Given FASTA of all ctgs and text-list of\
      \ circular ctgs, print a report\n    (pbreports format).\n  Options(opt-arg\
      \ sep :|=|spc):\n      -h, --help                          print this cligen-erated\
      \ help\n      --help-syntax                       advanced: prepend,plurals,..\n\
      \      -f=, --fasta-fn=  string  REQUIRED  FASTA filename, preferably indexed\n\
      \                                          (with .fai)\n      -c=, --circ-fn=\
      \   string  REQUIRED  Text list of circular contigs\n                      \
      \                    (newline-delimited)\n\n  stats-assembly [required&optional-params]\
      \ \n  Options(opt-arg sep :|=|spc):\n      -h, --help                      \
      \    print this cligen-erated help\n      --help-syntax                    \
      \   advanced: prepend,plurals,..\n      -f=, --fasta-fn=  string  REQUIRED \
      \ FASTA filename, preferably indexed\n                                     \
      \     (with .fai)\n\n  rr-hctg-track1 [optional-params] \n  Options(opt-arg\
      \ sep :|=|spc):\n      -h, --help                                          \
      \                                                print this\n              \
      \                                                                          \
      \                  cligen-erated\n                                         \
      \                                                                 help\n   \
      \   --help-syntax                                                          \
      \                             advanced:prepen\n                            \
      \                                                                          \
      \    d,plurals,..\n      -t, --test                  bool    false         \
      \                                                  set test\n      -p=, --phased-read-file=\
      \    string  \"./3-unzip/all_phased_reads\"                                \
      \    set\n                                                                 \
      \                                         phased_read_file\n      -r=, --read-to-contig-map=\
      \  string  \"./4-quiver/read_maps/read_to_contig_map\"                     \
      \  setread_to_cont\n                                                       \
      \                                                   ig_map\n      --rawread-ids=\
      \              string  \"./2-asm-falcon/read_maps/dump_rawread_ids/rawread_ids\"\
      \         set rawread_ids\n      -b=, --bestn=               int     40    \
      \                                                          set bestn\n     \
      \ -n=, --n-core=              int     0                                    \
      \                           set n_core\n      -m=, --min-len=             int\
      \     2500                                                            set min_len\n\
      \      -o=, --output=              string  \"./2-asm-falcon/read_maps/dump_rawread_ids/rawread_to_contigs\"\
      \  set output\n      -s, --stream                bool    false             \
      \                                              set stream\n      -d, --debug\
      \                 bool    false                                            \
      \               set debug\n      --silent                    bool    false \
      \                                                          set silent\n\n  rr-hctg-track2\
      \ [optional-params] \n    Stage 2 of rr_hctg_track\n  Options(opt-arg sep :|=|spc):\n\
      \      -h, --help                                                          \
      \             print this\n                                                 \
      \                                      cligen-erated\n                     \
      \                                                                  help\n  \
      \    --help-syntax                                                         \
      \           advanced:prepen\n                                              \
      \                                         d,plurals,..\n      -t, --test   \
      \               bool    false                                        set test\n\
      \      -r=, --read-to-contig-map=  string  \"./4-quiver/track_reads/read_to_contig_map\"\
      \  setread_to_cont\n                                                       \
      \                                ig_map\n      -p=, --partials-fn=         string\
      \  \"./4-quiver/track-reads/partials.json\"       set partials_fn\n      -o=,\
      \ --output=              string  \"./4-quiver/track-reads/rawread_to_contigs\"\
      \  set output\n      -b=, --bestn=               int     40                \
      \                           set bestn\n      -n=, --n-core=              int\
      \     0                                            set n_core\n      --phased-read-file=\
      \         string  \"\"                                           set\n     \
      \                                                                          \
      \        phased_read_file\n      --rawread-ids=              string  \"\"  \
      \                                         set rawread_ids\n      -m=, --min-len=\
      \             int     2500                                         set min_len\n\
      \      -s, --stream                bool    false                           \
      \             set stream\n      -d, --debug                 bool    false  \
      \                                      set debug\n      --silent           \
      \         bool    false                                        set silent\n"
    generated_using: []
  - !Command
    command:
    - falconc
    - pbcromwell-rm-las
    positional:
    - !Positional
      description: '--help-syntax                                      advanced:'
      position: 0
      name: help
      optional: false
    named:
    - !Flag
      description: =, --command=  string  "find . -name \'*.las\'"  set command
      synonyms:
      - -c
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --verbose=  int     1                         set verbose
      synonyms:
      - -v
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: bool    false                     set dry_run
      synonyms:
      - -n
      - --dry-run
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: print this cligen-erated
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "pbcromwell-rm-las [optional-params] \nRemove all .las files except\
      \ final stage of merge. (Unzip is still possible.)\nFilepaths come from the\
      \ provided command as a subprocess, or from stdin if\ncommand==\"-\", (Someday,\
      \ we will add a flag to delete the final stage too,\noptionally.)\nOptions(opt-arg\
      \ sep :|=|spc):\n  -h, --help                                         print\
      \ this cligen-erated\n                                                     help\n\
      \  --help-syntax                                      advanced:\n          \
      \                                           prepend,plurals,..\n  -c=, --command=\
      \  string  \"find . -name \\'*.las\\'\"  set command\n  -v=, --verbose=  int\
      \     1                         set verbose\n  -n, --dry-run    bool    false\
      \                     set dry_run\n"
    generated_using: *id002
  - !Command
    command:
    - falconc
    - m4filt
    positional:
    - !Positional
      description: -o=, --out-fn=           string  REQUIRED  Final m4 overlap file
      position: 0
      name: file
      optional: false
    named:
    - !Flag
      description: 'advanced: prepend,plurals,..'
      synonyms:
      - --help-syntax
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=, --idt-stage1=       float   90.0      Stage one percent identity\
        \ filter,\nformatted as percentage, overlaps <\n%idt are skipped"
      synonyms:
      - -i
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =            float   90.0      Stage two percent identify filter
      synonyms:
      - --idt-stage2
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=, --min-len=          int     6000      Minimum read length,\
        \ reads shorter\nthan minLen will be discarded"
      synonyms:
      - -m
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=               int     2         Minimum number of overlaps on\n\
        either side of a read"
      synonyms:
      - --min-cov
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=               int     200       Maximum number of overlaps on\n\
        either side of a read"
      synonyms:
      - --max-cov
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=              int     100       Reads are skipped is abs(5p-3p)\n\
        overlap counts > maxDiff"
      synonyms:
      - --max-diff
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=, --bestn=            int     10        Keep N best overlaps\
        \ at 5prime AND\n3prime of a read"
      synonyms:
      - -b
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=             int     2         Depths lower than minDepth are\n\
        considered gaps"
      synonyms:
      - --min-depth
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "bool    false     Run depth filter, takes a little\nmore time"
      synonyms:
      - -g
      - --gap-filt
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: bool    false     set keepIntermediates
      synonyms:
      - -k
      - --keepIntermediates
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --n-proc=           int     24        Number of processes to
        run locally
      synonyms:
      - -n
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --filter-log-fn=    string  REQUIRED  Write read filter stats
        to this
      synonyms:
      - -f
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: print this cligen-erated help
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "m4filt [required&optional-params] \nRun the multi-stage m4 overlap\
      \ filter. Read the m4 filenames from stdin. In\nstage one, reads that trigger\
      \ a filter are marked including containment, gaps in\ncoverage along the A-read,\
      \ and repeat reads. In stage two the filters are\napplied and the N-best overlaps\
      \ are kept for the 5prime and 3prime of each read.\nOptions(opt-arg sep :|=|spc):\n\
      \  -h, --help                                 print this cligen-erated help\n\
      \  --help-syntax                              advanced: prepend,plurals,..\n\
      \  -i=, --idt-stage1=       float   90.0      Stage one percent identity filter,\n\
      \                                             formatted as percentage, overlaps\
      \ <\n                                             %idt are skipped\n  --idt-stage2=\
      \            float   90.0      Stage two percent identify filter\n  -m=, --min-len=\
      \          int     6000      Minimum read length, reads shorter\n          \
      \                                   than minLen will be discarded\n  --min-cov=\
      \               int     2         Minimum number of overlaps on\n          \
      \                                   either side of a read\n  --max-cov=    \
      \           int     200       Maximum number of overlaps on\n              \
      \                               either side of a read\n  --max-diff=       \
      \       int     100       Reads are skipped is abs(5p-3p)\n                \
      \                             overlap counts > maxDiff\n  -b=, --bestn=    \
      \        int     10        Keep N best overlaps at 5prime AND\n            \
      \                                 3prime of a read\n  --min-depth=         \
      \    int     2         Depths lower than minDepth are\n                    \
      \                         considered gaps\n  -g, --gap-filt           bool \
      \   false     Run depth filter, takes a little\n                           \
      \                  more time\n  -k, --keepIntermediates  bool    false     set\
      \ keepIntermediates\n  -n=, --n-proc=           int     24        Number of\
      \ processes to run locally\n  -f=, --filter-log-fn=    string  REQUIRED  Write\
      \ read filter stats to this\n                                             file\n\
      \  -o=, --out-fn=           string  REQUIRED  Final m4 overlap file\n"
    generated_using: *id002
  - !Command
    command:
    - falconc
    - pbreports-circ
    positional: []
    named:
    - !Flag
      description: 'advanced: prepend,plurals,..'
      synonyms:
      - --help-syntax
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=, --fasta-fn=  string  REQUIRED  FASTA filename, preferably indexed\
        \ (with\n.fai)"
      synonyms:
      - -f
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=, --circ-fn=   string  REQUIRED  Text list of circular contigs\n\
        (newline-delimited)\n"
      synonyms:
      - -c
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: print this cligen-erated help
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "pbreports-circ [required&optional-params] \nGiven FASTA of all ctgs\
      \ and text-list of circular ctgs, print a report\n(pbreports format).\nOptions(opt-arg\
      \ sep :|=|spc):\n  -h, --help                          print this cligen-erated\
      \ help\n  --help-syntax                       advanced: prepend,plurals,..\n\
      \  -f=, --fasta-fn=  string  REQUIRED  FASTA filename, preferably indexed (with\n\
      \                                      .fai)\n  -c=, --circ-fn=   string  REQUIRED\
      \  Text list of circular contigs\n                                      (newline-delimited)\n"
    generated_using: *id002
  - !Command
    command:
    - falconc
    - stats-assembly
    positional: []
    named:
    - !Flag
      description: 'advanced: prepend,plurals,..'
      synonyms:
      - --help-syntax
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=, --fasta-fn=  string  REQUIRED  FASTA filename, preferably indexed\
        \ (with\n.fai)\n"
      synonyms:
      - -f
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: print this cligen-erated help
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "stats-assembly [required&optional-params] \nOptions(opt-arg sep :|=|spc):\n\
      \  -h, --help                          print this cligen-erated help\n  --help-syntax\
      \                       advanced: prepend,plurals,..\n  -f=, --fasta-fn=  string\
      \  REQUIRED  FASTA filename, preferably indexed (with\n                    \
      \                  .fai)\n"
    generated_using: *id002
  - !Command
    command:
    - falconc
    - m4filt-contained
    positional:
    - !Positional
      description: '--help-syntax                                      advanced:'
      position: 0
      name: help
      optional: false
    named:
    - !Flag
      description: =, --in-fn=                    string  REQUIRED  Input m4 overlap
        file
      synonyms:
      - -i
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --out-fn=                   string  REQUIRED  Output m4 overlap
        file
      synonyms:
      - -o
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "bool    false     IGNORED (used in\novlp_to_graph)"
      synonyms:
      - --lfc
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "bool    false     IGNORED (used in\novlp_to_graph)"
      synonyms:
      - --disable_chimer_bridge_removal
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=                    string  \"\"        IGNORED (used in\novlp_to_graph)"
      synonyms:
      - --ctg_prefix
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=                       int     400       Minimum read length;\
        \ reads\nshorter than minLen will be\ndiscarded"
      synonyms:
      - --min-len
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: "=                   float   96.0      Minimum overlap identity;\n\
        worse overlaps will be\ndiscarded\n"
      synonyms:
      - --min-idt-pct
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: print this cligen-erated
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "m4filt-contained [required&optional-params] \nParse .m4 file.\nWrite\
      \ only the overlaps which pass the filters.\n(no overlaps involving contained\
      \ reads;\n no overlaps involving short reads;\n no overlaps with low identity)\n\
      Options(opt-arg sep :|=|spc):\n  -h, --help                                \
      \         print this cligen-erated\n                                       \
      \              help\n  --help-syntax                                      advanced:\n\
      \                                                     prepend,plurals,..\n \
      \ -i=, --in-fn=                    string  REQUIRED  Input m4 overlap file\n\
      \  -o=, --out-fn=                   string  REQUIRED  Output m4 overlap file\n\
      \  --lfc                            bool    false     IGNORED (used in\n   \
      \                                                  ovlp_to_graph)\n  --disable_chimer_bridge_removal\
      \  bool    false     IGNORED (used in\n                                    \
      \                 ovlp_to_graph)\n  --ctg_prefix=                    string\
      \  \"\"        IGNORED (used in\n                                          \
      \           ovlp_to_graph)\n  --min-len=                       int     400 \
      \      Minimum read length; reads\n                                        \
      \             shorter than minLen will be\n                                \
      \                     discarded\n  --min-idt-pct=                   float  \
      \ 96.0      Minimum overlap identity;\n                                    \
      \                 worse overlaps will be\n                                 \
      \                    discarded\n"
    generated_using: *id002
  - !Command
    command:
    - falconc
    - raptor-db-filter
    positional: []
    named:
    - !Flag
      description: 'advanced: prepend,plurals,..'
      synonyms:
      - --help-syntax
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --blacklist-fn=  string  ""  set blacklist_fn
      synonyms:
      - -b
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: print this cligen-erated help
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "raptor-db-filter [optional-params] \nRead/write raptor-db to/from\
      \ stdin/stdout. Exclude zmws in blacklist.\nOptions(opt-arg sep :|=|spc):\n\
      \  -h, --help                        print this cligen-erated help\n  --help-syntax\
      \                     advanced: prepend,plurals,..\n  -b=, --blacklist-fn= \
      \ string  \"\"  set blacklist_fn\n"
    generated_using: *id002
  - !Command
    command:
    - falconc
    - align-filter
    positional: []
    named:
    - !Flag
      description: 'advanced: prepend,plurals,..'
      synonyms:
      - --help-syntax
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --bams-fofn=             string  REQUIRED  set bams_fofn
      synonyms:
      - -b
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --all-subread-names-fn=  string  ""        set all_subread_names_fn
      synonyms:
      - -a
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =, --min-len=               int     -1        set min_len
      synonyms:
      - -m
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: =                   float   0.7       set min_frac
      synonyms:
      - --min-frac
      args: !EmptyFlagArg {}
      optional: true
    parent: *id001
    subcommands: []
    usage: []
    help_flag: !Flag
      description: print this cligen-erated help
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "align-filter [required&optional-params] \nalias for bam-filter-ipa\n\
      Options(opt-arg sep :|=|spc):\n  -h, --help                                \
      \      print this cligen-erated help\n  --help-syntax                      \
      \             advanced: prepend,plurals,..\n  -b=, --bams-fofn=            \
      \ string  REQUIRED  set bams_fofn\n  -a=, --all-subread-names-fn=  string  \"\
      \"        set all_subread_names_fn\n  -m=, --min-len=               int    \
      \ -1        set min_len\n  --min-frac=                   float   0.7       set\
      \ min_frac\n"
    generated_using: *id002
  usage: []
  help_flag:
  usage_flag:
  version_flag:
  help_text: "Usage:\n  falconc {SUBCMD}  [sub-command options & parameters]\nwhere\
    \ {SUBCMD} is one of:\n  help                          print comprehensive or\
    \ per-cmd help\n  version                       \n  dataset                  \
    \     \n  kmers                         \n  utils                         \n \
    \ bam-filter-ipa                Print subreads which have decent alignments in\n\
    \                                any of the bam inputs.\n  align-filter      \
    \            alias for bam-filter-ipa\n  bam-tags-enrich               Add XB/XE/XP/XR/XQ:\n\
    \                                beg/end/%idt/aln-ref-len/qry-len\n  bam-filter-clipped\
    \            Filter alignments with significant clipping. To\n               \
    \                 skip an alignment, both max_clipping and\n                 \
    \               end_margin must be exceeded on at least 1 end.\n  raptor-db-filter\
    \              Read/write raptor-db to/from stdin/stdout.\n                  \
    \              Exclude zmws in blacklist.\n  raptor-db-calc-length-cutoff  Perform\
    \ a linear pass on an overlap file, and\n                                determine\
    \ rough clipping coordinates to\n                                'correct' reads.\
    \ Write integer to stdout.\n  circ-orient                   reorients circular\
    \ sequences based on gc-skew\n                                distribution and\
    \ writes to output.\n  circ-randomize                randomly rotates left rotates\
    \ the sequence and\n                                writes to the output file.\n\
    \  phasr                         Phase PacBio CCS/HIFI reads.\n  m4filt-merge-blacklist\
    \        \n  m4filt-stage1                 \n  m4filt-stage2                 \n\
    \  m4filt-dump-blacklist         \n  m4filt                        Run the multi-stage\
    \ m4 overlap filter. Read the\n                                m4 filenames from\
    \ stdin. In stage one, reads\n                                that trigger a filter\
    \ are marked including\n                                containment, gaps in coverage\
    \ along the A-read,\n                                and repeat reads. In stage\
    \ two the filters are\n                                applied and the N-best\
    \ overlaps are kept for the\n                                5prime and 3prime\
    \ of each read.\n  m4filt-falconRunner           Runs the multi-stage m4 overlap\
    \ filter for\n                                falcon. In stage one, reads that\
    \ trigger a\n                                filter are marked including containment,\
    \ gaps in\n                                coverage along the A-read, and repeat\
    \ reads. In\n                                stage two the filters are applied\
    \ and the N-best\n                                overlaps are kept for the 5prime\
    \ and 3prime of\n                                each read.\n  m4filt-ipaRunner\
    \              Runs the multi-stage m4 overlap filter for IPA.\n             \
    \                   In stage one, reads that trigger a filter are\n          \
    \                      marked including containment, gaps in coverage\n      \
    \                          along the A-read, and repeat reads. In stage two\n\
    \                                the filters are applied and the N-best overlaps\n\
    \                                are kept for the 5prime and 3prime of each read.\n\
    \  m4filt-contained              Parse .m4 file. Write only the overlaps which\n\
    \                                pass the filters. (no overlaps involving\n  \
    \                              contained reads;  no overlaps involving short\n\
    \                                reads;  no overlaps with low identity)\n  pbcromwell-rm-las\
    \             Remove all .las files except final stage of\n                  \
    \              merge. (Unzip is still possible.) Filepaths come\n            \
    \                    from the provided command as a subprocess, or\n         \
    \                       from stdin if command==\"-\", (Someday, we will\n    \
    \                            add a flag to delete the final stage too,\n     \
    \                           optionally.)\n  pbreports-circ                Given\
    \ FASTA of all ctgs and text-list of\n                                circular\
    \ ctgs, print a report (pbreports\n                                format).\n\
    \  stats-assembly                \n  rr-hctg-track1                \n  rr-hctg-track2\
    \                Stage 2 of rr_hctg_track\n\nfalconc {-h|--help} or with no args\
    \ at all prints this message.\nfalconc --help-syntax gives general cligen syntax\
    \ help.\nRun \"falconc {help SUBCMD|SUBCMD --help}\" to see help for just SUBCMD.\n\
    Run \"falconc help\" to get *comprehensive* help.\n"
  generated_using: *id002
subcommands: []
usage: []
help_flag: !Flag
  description: print this cligen-erated help
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "bam-tags-enrich [required&optional-params] \nAdd XB/XE/XP/XR/XQ: beg/end/%idt/aln-ref-len/qry-len\n\
  Options(opt-arg sep :|=|spc):\n  -h, --help                           print this\
  \ cligen-erated help\n  --help-syntax                        advanced: prepend,plurals,..\n\
  \  -o=, --output-fn=  string  REQUIRED  Bam or Sam filename (based on its\n    \
  \                                   extension)\n  -i=, --input-fn=   string  REQUIRED\
  \  Bam or Sam filename (based on its\n                                       extension),\
  \ or '-'\n"
generated_using: *id002
