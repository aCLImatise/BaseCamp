from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Int, Float, Boolean, File

Treekin_V0_1_0 = CommandToolBuilder(tool="treekin", base_command=["treekin"], inputs=[ToolInput(tag="in_absorb", input_type=String(optional=True), prefix="--absorb", doc=InputDocumentation(doc="Make a state absorbing")), ToolInput(tag="in_method", input_type=String(optional=True), prefix="--method", doc=InputDocumentation(doc="Select method to build transition matrix:\nA ==> Arrhenius-like kinetics\nI ==> use input as a rate matrix  (possible\nvalues='A', 'I' default=`I')")), ToolInput(tag="in_num_err", input_type=Int(optional=True), prefix="--num-err", doc=InputDocumentation(doc="Specify how to treat issues with numerical errors\nin probability:\nI ==> Ignore\nH ==> Halt the program\nR ==> Rescale the probability  (possible\nvalues='I', 'H', 'R' default=`H')")), ToolInput(tag="in_t_zero", input_type=Int(optional=True), prefix="--t0", doc=InputDocumentation(doc="Start time  (default=`0.1')")), ToolInput(tag="in_t_eight", input_type=Int(optional=True), prefix="--t8", doc=InputDocumentation(doc="Stop time  (default=`1E12')")), ToolInput(tag="in_temp", input_type=Float(optional=True), prefix="--Temp", doc=InputDocumentation(doc="Temperature in Celsius  (default=`37.0')")), ToolInput(tag="in_n_states", input_type=Int(optional=True), prefix="--nstates", doc=InputDocumentation(doc="Read only first <int> states (assume\nquasi-stationary distribution (derivation of\nothers is = 0))")), ToolInput(tag="in_pzero", input_type=Int(optional=True), prefix="--p0", doc=InputDocumentation(doc="Set initial population of state <int> to <double>\nCan be given multiple times\n(NOTE: sum of <double> must equal 1)\n(example: '--p0 2=1.0' - state 2 has initial\npopulation 100 percent)")), ToolInput(tag="in_tinc", input_type=Float(optional=True), prefix="--tinc", doc=InputDocumentation(doc="Time scaling factor (for log time-scale)\n(default=`1.02')")), ToolInput(tag="in_degeneracy", input_type=Boolean(optional=True), prefix="--degeneracy", doc=InputDocumentation(doc="Consider degeneracy in transition rates\n(default=off)")), ToolInput(tag="in_exponent", input_type=Boolean(optional=True), prefix="--exponent", doc=InputDocumentation(doc="Use matrix-expontent routines, rather than")), ToolInput(tag="in_dump_u", input_type=Boolean(optional=True), prefix="--dumpU", doc=InputDocumentation(doc="Dump transition matrix U to file mx.txt (and to\nbinary mx.bin - not fixed yet)  (default=off)")), ToolInput(tag="in_mathematica_matrix", input_type=Boolean(optional=True), prefix="--mathematicamatrix", doc=InputDocumentation(doc="Dump transition matrix U to Mathematica-readable\nfile mxMat.txt  (default=off)")), ToolInput(tag="in_bin", input_type=Boolean(optional=True), prefix="--bin", doc=InputDocumentation(doc="Assume binary rates input  (default=off)")), ToolInput(tag="in_bar", input_type=File(optional=True), prefix="--bar", doc=InputDocumentation(doc="Input barriers file. Required in case '-m I'\n(rates kinetics) AND '-a' (absorbing state) is\ngiven")), ToolInput(tag="in_fpt", input_type=Int(optional=True), prefix="--fpt", doc=InputDocumentation(doc="Compute first passage times (FPT). Arguments:\nall => compute all FPT (slow)\n<num> - compute FPT to state <num> from all\nstates")), ToolInput(tag="in_recover_e", input_type=Boolean(optional=True), prefix="--recoverE", doc=InputDocumentation(doc="Recover from pre-ccomputes eigenvalues and")), ToolInput(tag="in_dump_e", input_type=Boolean(optional=True), prefix="--dumpE", doc=InputDocumentation(doc="Dump eigenvalues and eigenvectors to a binary\nrecovery file and continue with iteration\n(default=off)")), ToolInput(tag="in_dump_x", input_type=Boolean(optional=True), prefix="--dumpX", doc=InputDocumentation(doc="Dump eigenvalues to ASCII file and exit (do not\niterate)  (default=off)")), ToolInput(tag="in_info", input_type=Boolean(optional=True), prefix="--info", doc=InputDocumentation(doc="Show settings  (default=off)")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Verbose output  (default=off)")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="Be silent (do not print out the output)\n(default=off)")), ToolInput(tag="in_fpt_file", input_type=File(optional=True), prefix="--fptfile", doc=InputDocumentation(doc="Filename of FPT file (provided -t option given)")), ToolInput(tag="in_visualize", input_type=File(optional=True), prefix="--visualize", doc=InputDocumentation(doc="Filename where to print a visualization of rate\ngraph (without file subscript, two files will be\ngenerated: .dot and .eps with text and visual\nrepresentation of graph)")), ToolInput(tag="in_just_shorten", input_type=Boolean(optional=True), prefix="--just-shorten", doc=InputDocumentation(doc="Do not diagonalize and iterate, just shorten input\n(meaningfull only with -n X option or -fpt\noption or --visualize option)  (default=off)")), ToolInput(tag="in_max_decrease", input_type=Int(optional=True), prefix="--max-decrease", doc=InputDocumentation(doc="Maximal decrease in dimension in one step\n(default=`1000000')")), ToolInput(tag="in_feps", input_type=Int(optional=True), prefix="--feps", doc=InputDocumentation(doc="Machine precision used by LAPACK routines (and\nmatrix aritmetic) -- if set to negative number,\nthe lapack suggested value is used\n(2*DLAMCH('S') )  (default=`1E-15')")), ToolInput(tag="in_use_plus_i", input_type=Boolean(optional=True), prefix="--useplusI", doc=InputDocumentation(doc="Use old treekin computation where we add identity\nmatrix to transition matrix. Sometimes less\nprecise (maybe sometimes also more precise), in\nnormal case it should not affect results at all.\n(default=off)")), ToolInput(tag="in_minimal_rate", input_type=String(optional=True), prefix="--minimal-rate", doc=InputDocumentation(doc="Rescale all rates to be higher than the minimal\nrate using formula  'rate ->\nrate^(ln(desired_minimal_rate)/ln(minimal_rate))',\nwhere desired_minimal_rate is from input,\nminimal_rate is the lowest from all rates in\nrate matrix.")), ToolInput(tag="in_hard_rescale", input_type=Float(optional=True), prefix="--hard-rescale", doc=InputDocumentation(doc="Rescale all rates by a hard exponent (usually\n0.0<HR<1.0). Formula: 'rate ->\nrate^(hard-rescale)'. Overrides --minimal-rate\nargument.")), ToolInput(tag="in_equi_l_file", input_type=File(optional=True), prefix="--equil-file", doc=InputDocumentation(doc="Write equilibrium distribution into a file.")), ToolInput(tag="in_times", input_type=Int(optional=True), prefix="--times", doc=InputDocumentation(doc="Multiply rates with a constant number.")), ToolInput(tag="in_warnings", input_type=Boolean(optional=True), prefix="--warnings", doc=InputDocumentation(doc="Turn all the warnings about underflow on.\n(default=off)\n")), ToolInput(tag="in_diagonalization", input_type=String(), position=0, doc=InputDocumentation(doc="(default=off)")), ToolInput(tag="in_eigenvectors", input_type=String(), position=1, doc=InputDocumentation(doc="(default=off)"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Treekin_V0_1_0().translate("wdl", allow_empty_container=True)

