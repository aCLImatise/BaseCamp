from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File

Brassi_Filter_Pl_V0_1_0 = CommandToolBuilder(tool="brassI_filter.pl", base_command=["brassI_filter.pl"], inputs=[ToolInput(tag="in_in_file", input_type=Boolean(optional=True), prefix="-infile", doc=InputDocumentation(doc=": Name of the input brassI marked groups file")), ToolInput(tag="in_outfile", input_type=File(optional=True), prefix="-outfile", doc=InputDocumentation(doc=": Name of the output file (bedpe filename extension will be appended if not supplied)")), ToolInput(tag="in_tumour", input_type=Boolean(optional=True), prefix="-tumour", doc=InputDocumentation(doc=": Name of the tumour sample")), ToolInput(tag="in_trans_only", input_type=Boolean(optional=True), prefix="-trans_only", doc=InputDocumentation(doc=": run/rerun translocation flagging of the bedpe file")), ToolInput(tag="in_occurrences_only", input_type=Boolean(optional=True), prefix="-occurrences_only", doc=InputDocumentation(doc=": run/rerun occurrences flagging of the bedpe file")), ToolInput(tag="in_cn_only", input_type=Boolean(optional=True), prefix="-cn_only", doc=InputDocumentation(doc=": run/rerun near-copynumber-change flagging of the bedpe file")), ToolInput(tag="in_blat_only", input_type=Boolean(optional=True), prefix="-blat_only", doc=InputDocumentation(doc=": run/rerun blat flagging of the bedpe file")), ToolInput(tag="in_seq_depth", input_type=Boolean(optional=True), prefix="-seq_depth", doc=InputDocumentation(doc=": filter flag. Sequence depth for this sample. (default = 30)")), ToolInput(tag="in_seq_depth_threshold", input_type=Boolean(optional=True), prefix="-seq_depth_threshold", doc=InputDocumentation(doc=": filter flag. Use min_tumour_count_high over this value and min_tumour_count_low otherwise. (default = 25)")), ToolInput(tag="in_distance_threshold", input_type=Boolean(optional=True), prefix="-distance_threshold", doc=InputDocumentation(doc=": filter flag. Discard rearrangements, where chrH=chrL, that do not exceed this value (default = 100)")), ToolInput(tag="in_min_tumour_count_low", input_type=Boolean(optional=True), prefix="-min_tumour_count_low", doc=InputDocumentation(doc=": filter flag. Discard rearrangements which do not reach this number of reads in any of the tumour or metastatic samples involved\n(low seq_depth) (default = 2)")), ToolInput(tag="in_min_tumour_count_high", input_type=Boolean(optional=True), prefix="-min_tumour_count_high", doc=InputDocumentation(doc=": filter flag. Discard rearrangements which do not reach this number of reads in any of the tumour or metastatic samples involved\n(above seq_depth threshold) (default = 4)")), ToolInput(tag="in_max_normal_count", input_type=Boolean(optional=True), prefix="-max_normal_count", doc=InputDocumentation(doc=": filter flag. Discard rearrangements which have more than this number of reads in the matched normal (default = 0)")), ToolInput(tag="in_max_np_sample_count", input_type=Boolean(optional=True), prefix="-max_np_sample_count", doc=InputDocumentation(doc=": filter flag. Discard rearrangements which have more than this number of unmatched normal panel samples with reads  (default = 0)")), ToolInput(tag="in_max_np_count", input_type=Boolean(optional=True), prefix="-max_np_count", doc=InputDocumentation(doc=": filter flag. Discard rearrangements which have more than this number of reads in the unmatched normal panel samples (default = 0, +1 for foldback <= 5kb)")), ToolInput(tag="in_discard_if_repeats", input_type=Boolean(optional=True), prefix="-discard_if_repeats", doc=InputDocumentation(doc=": filter flag. Discard rearrangements which are associated with known repeats (default = 0)")), ToolInput(tag="in_bal_trans_field", input_type=Boolean(optional=True), prefix="-bal_trans_field", doc=InputDocumentation(doc=": which number field of the bedpe output file the balanced translocation flag should go into (default = 21)")), ToolInput(tag="in_in_v_field", input_type=Boolean(optional=True), prefix="-inv_field", doc=InputDocumentation(doc=": which number field of the bedpe output file the inversion flag should go into (default = 22)")), ToolInput(tag="in_occ_l_field", input_type=Boolean(optional=True), prefix="-occL_field", doc=InputDocumentation(doc=": which number field of the bedpe output file the L occurrences flag should go into (default = 23)")), ToolInput(tag="in_occ_h_field", input_type=Boolean(optional=True), prefix="-occH_field", doc=InputDocumentation(doc=": which number field of the bedpe output file the H occurrences flag should go into (default = 24)")), ToolInput(tag="in_cn_field", input_type=Boolean(optional=True), prefix="-cn_field", doc=InputDocumentation(doc=": which number field of the bedpe output file the near-copynumber-change flag should go into (default = 25)")), ToolInput(tag="in_blat_field", input_type=Boolean(optional=True), prefix="-blat_field", doc=InputDocumentation(doc=": which number field of the bedpe output file the L v H blat score should go into (default = 26)")), ToolInput(tag="in_occurs_distance", input_type=Boolean(optional=True), prefix="-occurs_distance", doc=InputDocumentation(doc=": how far away breakpoint ends in 2 different rearrangements can be, to be declared a similar coordinate (default = 500)")), ToolInput(tag="in_bal_distance", input_type=Boolean(optional=True), prefix="-bal_distance", doc=InputDocumentation(doc=": how far away the breakpoint coordinates for 2 different rearrangements can be, to be declared a balanced translocation (default = 100000)")), ToolInput(tag="in_in_v_distance", input_type=Boolean(optional=True), prefix="-inv_distance", doc=InputDocumentation(doc=": how far away the breakpoint coordinates for 2 different rearrangements can be, to be declared a inversion (default = 1000)")), ToolInput(tag="in_cn_distance", input_type=Boolean(optional=True), prefix="-cn_distance", doc=InputDocumentation(doc=": how far away a copynumber chagepoint can be from a rearrangement for it to qualify as a changepoint hit (default = 100000)")), ToolInput(tag="in_cn_one_end_hit", input_type=Boolean(optional=True), prefix="-cn_one_end_hit", doc=InputDocumentation(doc=": If -cn_one_end_hit is present, call a hit even if only one end of the rearrangement is near a changepoint (default = not set)")), ToolInput(tag="in_as_cat", input_type=Boolean(optional=True), prefix="-ascat", doc=InputDocumentation(doc=": copynumber (cn) segments summary file for this sample - ASCAT. (optional)\nLine Format: unused,chr,start,end,normal_total_cn(optional),normal_minor_cn(optional),tumour_total_cn,tumour_minor_cn")), ToolInput(tag="in_ngs", input_type=Boolean(optional=True), prefix="-ngs", doc=InputDocumentation(doc=": copynumber (cn) segments summary file for this sample - NGS. (optional)\nLine Format: unused,chr,start,end,normal_total_cn(optional),normal_minor_cn(optional),tumour_total_cn,tumour_minor_cn")), ToolInput(tag="in_bb", input_type=Boolean(optional=True), prefix="-bb", doc=InputDocumentation(doc=": copynumber (cn) segments summary file for this sample - Battenberg. (optional)\nLine Format: unused,chr,start,end,normal_total_cn(optional),normal_minor_cn(optional),tumour_total_cn,tumour_minor_cn")), ToolInput(tag="in_ref", input_type=Boolean(optional=True), prefix="-ref", doc=InputDocumentation(doc=": Blat of breakpoint range L against range H - fasta format Reference file (fai index file also present) to retrieve breakpoint range sequence from.")), ToolInput(tag="in_blat", input_type=Boolean(optional=True), prefix="-blat", doc=InputDocumentation(doc=": Blat of breakpoint range L against range H - blat script to use (default = blat)")), ToolInput(tag="in_min_identity", input_type=Boolean(optional=True), prefix="-minIdentity", doc=InputDocumentation(doc=": Blat of breakpoint range L against range H - minimum identity value to supply to blat (default = 95)"))], outputs=[ToolOutput(tag="out_outfile", output_type=File(optional=True), selector=InputSelector(input_to_select="in_outfile", type_hint=File()), doc=OutputDocumentation(doc=": Name of the output file (bedpe filename extension will be appended if not supplied)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Brassi_Filter_Pl_V0_1_0().translate("wdl", allow_empty_container=True)

