from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Int, String

Gffread_V0_1_0 = CommandToolBuilder(tool="gffread", base_command=["gffread"], inputs=[ToolInput(tag="in_full_path_names", input_type=Boolean(optional=True), prefix="-g", doc=InputDocumentation(doc="full path to a multi-fasta file with the genomic sequences\nfor all input mappings, OR a directory with single-fasta files\n(one per genomic sequence, with file names matching sequence names)")), ToolInput(tag="in_seqinfofsize_tabdelimited_file", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="<seq_info.fsize> is a tab-delimited file providing this info\nfor each of the mapped sequences:\n<seq-name> <seq-length> <seq-description>\n(useful for -A option with mRNA/EST/protein mappings)")), ToolInput(tag="in_discard_transcripts_having", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="discard transcripts having an intron larger than <maxintron>")), ToolInput(tag="in_only_show_transcripts", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="only show transcripts overlapping coordinate range <start>..<end>\n(on chromosome/contig <chr>, strand <strand> if provided)")), ToolInput(tag="in_r_option_discard", input_type=Boolean(optional=True), prefix="-R", doc=InputDocumentation(doc="for -r option, discard all transcripts that are not fully\ncontained within the given range")), ToolInput(tag="in_discard_singleexon_transcripts", input_type=Boolean(optional=True), prefix="-U", doc=InputDocumentation(doc="discard single-exon transcripts")), ToolInput(tag="in_coding_discard_mrnas", input_type=Boolean(optional=True), prefix="-C", doc=InputDocumentation(doc="coding only: discard mRNAs that have no CDS feature")), ToolInput(tag="in_full_gff_attribute", input_type=Boolean(optional=True), prefix="-F", doc=InputDocumentation(doc="full GFF attribute preservation (all attributes are shown)")), ToolInput(tag="in_only_parse_attributes", input_type=Boolean(optional=True), prefix="-G", doc=InputDocumentation(doc="only parse additional exon attributes from the first exon\nand move them to the mRNA level (useful for GTF input)")), ToolInput(tag="in_use_description_field", input_type=Boolean(optional=True), prefix="-A", doc=InputDocumentation(doc="use the description field from <seq_info.fsize> and add it\nas the value for a 'descr' attribute to the GFF record")), ToolInput(tag="in_process_also_records", input_type=Boolean(optional=True), prefix="-O", doc=InputDocumentation(doc="process also non-transcript GFF records (by default non-transcript\nrecords are ignored)")), ToolInput(tag="in_discard_mrnas_cds", input_type=Boolean(optional=True), prefix="-V", doc=InputDocumentation(doc="discard any mRNAs with CDS having in-frame stop codons")), ToolInput(tag="in_v_option_check", input_type=Boolean(optional=True), prefix="-H", doc=InputDocumentation(doc="for -V option, check and adjust the starting CDS phase\nif the original phase leads to a translation with an\nin-frame stop codon")), ToolInput(tag="in_v_option_singleexon", input_type=Boolean(optional=True), prefix="-B", doc=InputDocumentation(doc="for -V option, single-exon transcripts are also checked on the\nopposite strand")), ToolInput(tag="in_discard_multiexon_mrnas", input_type=Boolean(optional=True), prefix="-N", doc=InputDocumentation(doc="discard multi-exon mRNAs that have any intron with a non-canonical\nsplice site consensus (i.e. not GT-AG, GC-AG or AT-AC)")), ToolInput(tag="in_discard_mrnas_codonor", input_type=Boolean(optional=True), prefix="-J", doc=InputDocumentation(doc="discard any mRNAs that either lack initial START codon\nor the terminal STOP codon, or have an in-frame stop codon\n(only print mRNAs with a fulll, valid CDS)")), ToolInput(tag="in_no_pseudo", input_type=Boolean(optional=True), prefix="--no-pseudo", doc=InputDocumentation(doc=": filter out records matching the 'pseudo' keyword")), ToolInput(tag="in_merge", input_type=Boolean(optional=True), prefix="--merge", doc=InputDocumentation(doc=": cluster the input transcripts into loci, collapsing matching\ntranscripts (those with the same exact introns and fully contained)")), ToolInput(tag="in_m_option_write", input_type=File(optional=True), prefix="-d", doc=InputDocumentation(doc=": for -M option, write collapsing info to file <dupinfo>")), ToolInput(tag="in_cluster_only", input_type=Boolean(optional=True), prefix="--cluster-only", doc=InputDocumentation(doc=": same as --merge but without collapsing matching transcripts")), ToolInput(tag="in_m_option_also", input_type=Boolean(optional=True), prefix="-K", doc=InputDocumentation(doc="for -M option: also collapse shorter, fully contained transcripts\nwith fewer introns than the container")), ToolInput(tag="in_m_option_remove", input_type=Boolean(optional=True), prefix="-Q", doc=InputDocumentation(doc="for -M option, remove the containment restriction:\n(multi-exon transcripts will be collapsed if just their introns match,\nwhile single-exon transcripts can partially overlap (80%))")), ToolInput(tag="in_force_exons", input_type=Boolean(optional=True), prefix="--force-exons", doc=InputDocumentation(doc=": make sure that the lowest level GFF features are printed as\n'exon' features")), ToolInput(tag="in_expose_warn_duplicate", input_type=Boolean(optional=True), prefix="-E", doc=InputDocumentation(doc="expose (warn about) duplicate transcript IDs and other potential\nproblems with the given GFF/GTF records")), ToolInput(tag="in_decode_url_encoded", input_type=Boolean(optional=True), prefix="-D", doc=InputDocumentation(doc="decode url encoded characters within attributes")), ToolInput(tag="in_merge_close_exons", input_type=Boolean(optional=True), prefix="-Z", doc=InputDocumentation(doc="merge close exons into a single exon (for intron size<4)")), ToolInput(tag="in_write_spliced_exons", input_type=Boolean(optional=True), prefix="-w", doc=InputDocumentation(doc="write a fasta file with spliced exons for each GFF transcript")), ToolInput(tag="in_write_spliced_cds", input_type=Boolean(optional=True), prefix="-x", doc=InputDocumentation(doc="write a fasta file with spliced CDS for each GFF transcript")), ToolInput(tag="in_w_options_also", input_type=Boolean(optional=True), prefix="-W", doc=InputDocumentation(doc="for -w and -x options, also write for each fasta record the exon\ncoordinates projected onto the spliced sequence")), ToolInput(tag="in_write_protein_file", input_type=Boolean(optional=True), prefix="-y", doc=InputDocumentation(doc="write a protein fasta file with the translation of CDS for each record")), ToolInput(tag="in_ensembl_gtf_gff", input_type=Boolean(optional=True), prefix="-L", doc=InputDocumentation(doc="Ensembl GTF to GFF3 conversion (implies -F; should be used with -m)")), ToolInput(tag="in_chrreplace_reference_genomic", input_type=File(optional=True), prefix="-m", doc=InputDocumentation(doc="<chr_replace> is a reference (genomic) sequence replacement table with\nthis format:\n<original_ref_ID> <new_ref_ID>\nGFF records on reference sequences that are not found among the\n<original_ref_ID> entries in this file will be filtered out")), ToolInput(tag="in_gff_records_written", input_type=Boolean(optional=True), prefix="-o", doc=InputDocumentation(doc="the 'filtered' GFF records will be written to <outfile.gff>\n(use -o- for printing to stdout)")), ToolInput(tag="in_use_trackname_second", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="use <trackname> in the second column of each GFF output line")), ToolInput(tag="in_output_gtf_format", input_type=Int(optional=True), prefix="-T", doc=InputDocumentation(doc="will output GTF format instead of GFF3")), ToolInput(tag="in_input_gff", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_chrreplace_reference_genomic", output_type=File(optional=True), selector=InputSelector(input_to_select="in_chrreplace_reference_genomic", type_hint=File()), doc=OutputDocumentation(doc="<chr_replace> is a reference (genomic) sequence replacement table with\nthis format:\n<original_ref_ID> <new_ref_ID>\nGFF records on reference sequences that are not found among the\n<original_ref_ID> entries in this file will be filtered out"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Gffread_V0_1_0().translate("wdl", allow_empty_container=True)

