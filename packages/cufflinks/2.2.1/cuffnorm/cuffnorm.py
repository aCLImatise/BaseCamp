from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Directory, Boolean, String

Cuffnorm_V0_1_0 = CommandToolBuilder(tool="cuffnorm", base_command=["cuffnorm"], inputs=[ToolInput(tag="in_output_dir", input_type=Directory(optional=True), prefix="--output-dir", doc=InputDocumentation(doc="write all output files to this directory              [ default:     ./ ]")), ToolInput(tag="in_labels", input_type=Boolean(optional=True), prefix="--labels", doc=InputDocumentation(doc="comma-separated list of condition labels")), ToolInput(tag="in_norm_standards_file", input_type=Boolean(optional=True), prefix="--norm-standards-file", doc=InputDocumentation(doc="Housekeeping/spike genes to normalize libraries       [ default:   NULL ]")), ToolInput(tag="in_num_threads", input_type=Boolean(optional=True), prefix="--num-threads", doc=InputDocumentation(doc="number of threads used during quantification          [ default:      1 ]")), ToolInput(tag="in_library_type", input_type=Boolean(optional=True), prefix="--library-type", doc=InputDocumentation(doc="Library prep used for input reads                     [ default:  below ]")), ToolInput(tag="in_library_norm_method", input_type=Boolean(optional=True), prefix="--library-norm-method", doc=InputDocumentation(doc="Method used to normalize library sizes                [ default:  below ]")), ToolInput(tag="in_output_format", input_type=Boolean(optional=True), prefix="--output-format", doc=InputDocumentation(doc="Format for output tables                              [ default:  below ]")), ToolInput(tag="in_compatible_hits_norm", input_type=Boolean(optional=True), prefix="--compatible-hits-norm", doc=InputDocumentation(doc="count hits compatible with reference RNAs only        [ default:   TRUE ]")), ToolInput(tag="in_total_hits_norm", input_type=Boolean(optional=True), prefix="--total-hits-norm", doc=InputDocumentation(doc="count all hits for normalization                      [ default:  FALSE ]")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="log-friendly verbose processing (no progress bar)     [ default:  FALSE ]")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="log-friendly quiet processing (no progress bar)       [ default:  FALSE ]")), ToolInput(tag="in_seed", input_type=Boolean(optional=True), prefix="--seed", doc=InputDocumentation(doc="value of random number generator seed                 [ default:      0 ]")), ToolInput(tag="in_no_update_check", input_type=Boolean(optional=True), prefix="--no-update-check", doc=InputDocumentation(doc="do not contact server to check for update availability[ default:  FALSE ]")), ToolInput(tag="in_ff_first_strand", input_type=String(), position=0, doc=InputDocumentation(doc="ff-secondstrand")), ToolInput(tag="in_ff_un_stranded", input_type=String(), position=1, doc=InputDocumentation(doc="fr-firststrand")), ToolInput(tag="in_fr_second_strand", input_type=String(), position=2, doc=InputDocumentation(doc="fr-unstranded (default)")), ToolInput(tag="in_trans_frags", input_type=String(), position=3, doc=InputDocumentation(doc="Supported library normalization methods:")), ToolInput(tag="in_classic_fp_km", input_type=String(), position=4, doc=InputDocumentation(doc="geometric (default)")), ToolInput(tag="in_geometric", input_type=String(), position=5, doc=InputDocumentation(doc="quartile")), ToolInput(tag="in_cuff_diff", input_type=String(), position=0, doc=InputDocumentation(doc="simple-table (default)"))], outputs=[ToolOutput(tag="out_output_dir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output_dir", type_hint=File()), doc=OutputDocumentation(doc="write all output files to this directory              [ default:     ./ ]"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Cuffnorm_V0_1_0().translate("wdl", allow_empty_container=True)

