from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, String, File

Cuffcompare_V0_1_0 = CommandToolBuilder(tool="cuffcompare", base_command=["cuffcompare"], inputs=[ToolInput(tag="in_text_file_process", input_type=Int(optional=True), prefix="-i", doc=InputDocumentation(doc="a text file with a list of Cufflinks GTF files to process instead\nof expecting them as command line arguments (useful when a large number\nof GTF files should be processed)")), ToolInput(tag="in_set_known_use", input_type=String(optional=True), prefix="-r", doc=InputDocumentation(doc="set of known mRNAs to use as a reference for assessing\nthe accuracy of mRNAs or gene models given in <input.gtf>")), ToolInput(tag="in_consider_only_reference_transcripts_thatoverlap", input_type=String(optional=True), prefix="-R", doc=InputDocumentation(doc=", consider only the reference transcripts that\noverlap any of the input transfrags (Sn correction)")), ToolInput(tag="in_consider_only_input_transcripts_thatoverlap", input_type=String(optional=True), prefix="-Q", doc=InputDocumentation(doc=", consider only the input transcripts that\noverlap any of the reference transcripts (Sp correction);\n(Warning: this will discard all 'novel' loci!)")), ToolInput(tag="in_ignore_singleexon_transfrags", input_type=String(optional=True), prefix="-M", doc=InputDocumentation(doc="(ignore) single-exon transfrags and reference transcripts")), ToolInput(tag="in_ignore_singleexon_transcripts", input_type=String(optional=True), prefix="-N", doc=InputDocumentation(doc="(ignore) single-exon reference transcripts")), ToolInput(tag="in_be_multifasta_file", input_type=File(optional=True), prefix="-s", doc=InputDocumentation(doc="can be a multi-fasta file with all the genomic sequences or\na directory containing multiple single-fasta files (one file per contig);\nlower case bases will be used to classify input transcripts as repeats")), ToolInput(tag="in_distance_range_allowed", input_type=Int(optional=True), prefix="-e", doc=InputDocumentation(doc="distance (range) allowed from free ends of terminal exons of reference\ntranscripts when assessing exon accuracy (100)")), ToolInput(tag="in_distance_range_grouping", input_type=Int(optional=True), prefix="-d", doc=InputDocumentation(doc="distance (range) for grouping transcript start sites (100)")), ToolInput(tag="in_name_prefix_use", input_type=File(optional=True), prefix="-p", doc=InputDocumentation(doc="name prefix to use for consensus transcripts in the\n<outprefix>.combined.gtf file (default: 'TCONS')")), ToolInput(tag="in_transcripts_combinedgtf_file", input_type=File(optional=True), prefix="-C", doc=InputDocumentation(doc="the 'contained' transcripts in the .combined.gtf file")), ToolInput(tag="in_discard_intronredundant_transfrags", input_type=Int(optional=True), prefix="-F", doc=InputDocumentation(doc="not discard intron-redundant transfrags if they share the 5' end\n(if they differ only at the 3' end))")), ToolInput(tag="in_gff_input_files", input_type=File(optional=True), prefix="-G", doc=InputDocumentation(doc="GFF input file(s): do not assume Cufflinks GTF, do not\ndiscard any intron-redundant transfrags)")), ToolInput(tag="in_generate_files_input", input_type=File(optional=True), prefix="-T", doc=InputDocumentation(doc="not generate .tmap and .refmap files for each input file")), ToolInput(tag="in_processing_mode_showing", input_type=String(optional=True), prefix="-V", doc=InputDocumentation(doc="processing mode (showing all GFF parsing warnings)"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Cuffcompare_V0_1_0().translate("wdl", allow_empty_container=True)

