from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean

Mloc2Stockholm_Pl_V0_1_0 = CommandToolBuilder(tool="mloc2stockholm.pl", base_command=["mloc2stockholm.pl"], inputs=[ToolInput(tag="in_file", input_type=Boolean(optional=True), prefix="-file", doc=InputDocumentation(doc="[MANDATORY]     File to convert into stockholm format")), ToolInput(tag="in_split_input", input_type=Boolean(optional=True), prefix="-split_input", doc=InputDocumentation(doc="[OPTIONAL][yes||no]     REGULATES THE PROCESSING OF THE INPUT:   DEFAULT IS 'no'\nIF 'yes': the stockholm format is generated out of two files:\na) clustalw multiple alignment file, generated by locarna-program, and\nb) consensus structure information file\nIF 'no': the clustalw multiple alignment file contains both, the multiple alignment AND the consensus\nstructure information. This single file is sufficient to generate the stockholm format file.")), ToolInput(tag="in_con_struct", input_type=Boolean(optional=True), prefix="-con_struct", doc=InputDocumentation(doc="[OPTIONAL]      File containing the consensus structure information in the second line. Must be inputed, if split_input is 'yes'")), ToolInput(tag="in_interval_only", input_type=Boolean(optional=True), prefix="-interval_only", doc=InputDocumentation(doc="[OPTIONAL][yes||no]     REGULATES THE USAGE OF A locaRNAP RESULT INTERVAL. STANDARD IS 'NO', IF 'YES' IS CHOOSEN,\na corresponding rel_signal-file has to be present for the cleavage adresses.")), ToolInput(tag="in_rel_signal", input_type=Boolean(optional=True), prefix="-rel_signal", doc=InputDocumentation(doc="[OPTIONAL]      Has to be provided, if interval_only is set to 'yes'. Contains the interval for the cleavage process.")), ToolInput(tag="in_mode", input_type=Boolean(optional=True), prefix="-mode", doc=InputDocumentation(doc="[OPTIONAL][SE|RSE|NO]   Has to be set, if a relative signal has been provided\nSE: SIMPLE EXTENTION MODEL\nRSE: RELATIVE EXTENTION/PRUNING MODEL\nNO: THERE AIN'T NO MODIFICATIONS"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Mloc2Stockholm_Pl_V0_1_0().translate("wdl", allow_empty_container=True)

