from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Array, String, Int, Boolean

Methylpy_Allc_To_Bigwig_V0_1_0 = CommandToolBuilder(tool="methylpy_allc_to_bigwig", base_command=["methylpy", "allc-to-bigwig"], inputs=[ToolInput(tag="in_all_c_file", input_type=File(optional=True), prefix="--allc-file", doc=InputDocumentation(doc="input allc file to be converted to bigwig format\n(default: None)")), ToolInput(tag="in_output_file", input_type=File(optional=True), prefix="--output-file", doc=InputDocumentation(doc="Name of output file (default: None)")), ToolInput(tag="in_ref_fast_a", input_type=File(optional=True), prefix="--ref-fasta", doc=InputDocumentation(doc="string indicating the path to a fasta file containing\nthe genome sequences (default: None)")), ToolInput(tag="in_mc_type", input_type=Array(t=String(), optional=True), prefix="--mc-type", doc=InputDocumentation(doc="List of space separated mc nucleotide contexts for\nwhich you want to look for DMRs. These classifications\nmay use the wildcards H (indicating anything but a G)\nand N (indicating any nucleotide). (default: ['CGN'])")), ToolInput(tag="in_bin_size", input_type=Int(optional=True), prefix="--bin-size", doc=InputDocumentation(doc="Genomic bin size for calculating methylation level\n(default: 100)")), ToolInput(tag="in_min_bin_sites", input_type=Int(optional=True), prefix="--min-bin-sites", doc=InputDocumentation(doc="Minimum sites in a bin for it to be included.\n(default: 0)")), ToolInput(tag="in_min_bin_cov", input_type=Int(optional=True), prefix="--min-bin-cov", doc=InputDocumentation(doc="Minimum total coverage of all sites in a bin for\nmethylation level to be calculated. (default: 0)")), ToolInput(tag="in_min_site_cov", input_type=Int(optional=True), prefix="--min-site-cov", doc=InputDocumentation(doc="Minimum total coverage of a site for it to be\nincluded. (default: 0)")), ToolInput(tag="in_max_site_cov", input_type=Int(optional=True), prefix="--max-site-cov", doc=InputDocumentation(doc="Maximum total coverage of a site for it to be\nincluded. (default: None)")), ToolInput(tag="in_path_to_wig_to_bigwig", input_type=File(optional=True), prefix="--path-to-wigToBigWig", doc=InputDocumentation(doc="Path to wigToBigWig executable (default: )")), ToolInput(tag="in_path_to_sam_tools", input_type=File(optional=True), prefix="--path-to-samtools", doc=InputDocumentation(doc="Path to samtools installation (default: )")), ToolInput(tag="in_remove_chr_prefix", input_type=Boolean(optional=True), prefix="--remove-chr-prefix", doc=InputDocumentation(doc="Boolean indicates whether to remove 'chr' in the\nchromosome names in genome sequence file to match\nchromosome names in input allc file. (default: True)")), ToolInput(tag="in_add_chr_prefix", input_type=Boolean(optional=True), prefix="--add-chr-prefix", doc=InputDocumentation(doc="Boolean indicates whether to add 'chr' in the\nchromosome names in input allc file to match\nchromosome names in genome sequence file. This option\noverrides --remove-chr-prefix. (default: False)\n"))], outputs=[ToolOutput(tag="out_output_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_file", type_hint=File()), doc=OutputDocumentation(doc="Name of output file (default: None)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Methylpy_Allc_To_Bigwig_V0_1_0().translate("wdl", allow_empty_container=True)

