from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Guppy_Filter_V0_1_0 = CommandToolBuilder(tool="guppy_filter", base_command=["guppy", "filter"], inputs=[ToolInput(tag="in_specify_filename_write", input_type=Boolean(optional=True), prefix="-o", doc=InputDocumentation(doc="Specify the filename to write to.")), ToolInput(tag="in_out_dir", input_type=Boolean(optional=True), prefix="--out-dir", doc=InputDocumentation(doc="Specify the directory to write files to.")), ToolInput(tag="in_prefix", input_type=Boolean(optional=True), prefix="--prefix", doc=InputDocumentation(doc="Specify a string to be prepended to filenames.")), ToolInput(tag="in_vr", input_type=Boolean(optional=True), prefix="-Vr", doc=InputDocumentation(doc="Exclude every placement name by default (by default everything included).")), ToolInput(tag="in_ir", input_type=Boolean(optional=True), prefix="-Ir", doc=InputDocumentation(doc="Include placements whose name matches the given regexp. May be passed multiple times.")), ToolInput(tag="in_er", input_type=Boolean(optional=True), prefix="-Er", doc=InputDocumentation(doc="Exclude placements whose name matches the given regexp. May be passed multiple times.")), ToolInput(tag="in_reference_package_path", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="Reference package path.")), ToolInput(tag="in_cut_off", input_type=Boolean(optional=True), prefix="--cutoff", doc=InputDocumentation(doc="Use this cutoff for determining how likely a match is for a tax_id. Default: 0.9")), ToolInput(tag="in_pp", input_type=Boolean(optional=True), prefix="--pp", doc=InputDocumentation(doc="Use posterior probability for our criteria.")), ToolInput(tag="in_vx", input_type=Boolean(optional=True), prefix="-Vx", doc=InputDocumentation(doc="Exclude every tax_id by default (by default everything included).")), ToolInput(tag="in_ix", input_type=Boolean(optional=True), prefix="-Ix", doc=InputDocumentation(doc="Include placements which are likely matches for the given tax_id. May be passed multiple times.")), ToolInput(tag="in_ex", input_type=Boolean(optional=True), prefix="-Ex", doc=InputDocumentation(doc="Exclude placements which are likely matches for the given tax_id. May be passed multiple times.")), ToolInput(tag="in_mass_gt", input_type=Boolean(optional=True), prefix="--mass-gt", doc=InputDocumentation(doc="Include pqueries with a mass greater than the specified value.")), ToolInput(tag="in_mass_le", input_type=Boolean(optional=True), prefix="--mass-le", doc=InputDocumentation(doc="Include pqueries with a mass less than or equal to the specified value.")), ToolInput(tag="in_help", input_type=Boolean(optional=True), prefix="--help", doc=InputDocumentation(doc="Display this list of options")), ToolInput(tag="in_filter", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_place_file", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_s", input_type=String(optional=True), position=2, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Guppy_Filter_V0_1_0().translate("wdl", allow_empty_container=True)

