from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String

Bl_Filter_Illumina_V0_1_0 = CommandToolBuilder(tool="bl_filter_illumina", base_command=["bl-filter-illumina"], inputs=[ToolInput(tag="in_specify_multiple_input_files", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="specify multiple INPUT files")), ToolInput(tag="in_specify_multiple_output_files", input_type=Boolean(optional=True), prefix="-o", doc=InputDocumentation(doc="specify multiple OUTPUT files. If input data are paired, these files\ncontain only reads that passed for both members of the pair")), ToolInput(tag="in_specify_single_file", input_type=File(optional=True), prefix="-u", doc=InputDocumentation(doc="specify single OUTPUT file for reads that passed for one member of a\npair but not the other. These reads passed the filter criteria, but\nare excluded from the multiple OUTPUT files specified by -o because\ntheir paired read did not pass")), ToolInput(tag="in_use_fasta_output", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc="use FASTA output instead of FASTQ")), ToolInput(tag="in_ascii_offset_quality", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="ascii OFFSET for the quality score (default = 33)")), ToolInput(tag="in_filter_reads_have", input_type=Boolean(optional=True), prefix="-q", doc=InputDocumentation(doc="filter out reads that have a mean quality less than QUALITY")), ToolInput(tag="in_limit_output_pass", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="limit output to only the first NREADS that pass")), ToolInput(tag="in_remove_illumina_sequences", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="remove Illumina adapter sequences")), ToolInput(tag="in_remove_sequences_suspicious", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc="remove sequences with suspicious base content")), ToolInput(tag="in_reformat_paired_read", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="reformat paired read ID lines by replacing everything after the first\nspace, tab or / with the specified SEP followed by the input file number\n(e.g. '/' will use /1 as the ID suffix for the first input file, etc.)")), ToolInput(tag="in_filter_illumina", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_specify_single_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_specify_single_file", type_hint=File()), doc=OutputDocumentation(doc="specify single OUTPUT file for reads that passed for one member of a\npair but not the other. These reads passed the filter criteria, but\nare excluded from the multiple OUTPUT files specified by -o because\ntheir paired read did not pass"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bl_Filter_Illumina_V0_1_0().translate("wdl", allow_empty_container=True)

