from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Directory, File, Int, String, Boolean

Debarcer_Run_V0_1_0 = CommandToolBuilder(tool="debarcer_run", base_command=["debarcer", "run"], inputs=[ToolInput(tag="in_outdir", input_type=Directory(optional=True), prefix="--Outdir", doc=InputDocumentation(doc="Output directory where subdirectories are created")), ToolInput(tag="in_config", input_type=File(optional=True), prefix="--Config", doc=InputDocumentation(doc="Path to the config file")), ToolInput(tag="in_bam_file", input_type=File(optional=True), prefix="--Bamfile", doc=InputDocumentation(doc="Path to the BAM file")), ToolInput(tag="in_reference", input_type=File(optional=True), prefix="--Reference", doc=InputDocumentation(doc="Path to the refeence genome")), ToolInput(tag="in_fam_size", input_type=Int(optional=True), prefix="--Famsize", doc=InputDocumentation(doc="Comma-separated list of minimum umi family size to\ncollapase on")), ToolInput(tag="in_bed_file", input_type=File(optional=True), prefix="--Bedfile", doc=InputDocumentation(doc="Path to the bed file")), ToolInput(tag="in_count_threshold", input_type=String(optional=True), prefix="--CountThreshold", doc=InputDocumentation(doc="Base count threshold in pileup column")), ToolInput(tag="in_percent_threshold", input_type=String(optional=True), prefix="--PercentThreshold", doc=InputDocumentation(doc="Base percent threshold in pileup column")), ToolInput(tag="in_position", input_type=String(optional=True), prefix="--Position", doc=InputDocumentation(doc="Umi position threshold for grouping umis together")), ToolInput(tag="in_distance", input_type=String(optional=True), prefix="--Distance", doc=InputDocumentation(doc="Hamming distance threshold for connecting parent-\nchildren umis")), ToolInput(tag="in_ref_threshold", input_type=String(optional=True), prefix="--RefThreshold", doc=InputDocumentation(doc="A position is considered variable of reference\nfrequency is <= ref_threshold")), ToolInput(tag="in_alternative_threshold", input_type=String(optional=True), prefix="--AlternativeThreshold", doc=InputDocumentation(doc="Variable position is labeled PASS if allele frequency\n>= alt_threshold")), ToolInput(tag="in_filter_threshold", input_type=Int(optional=True), prefix="--FilterThreshold", doc=InputDocumentation(doc="Minimum number of reads to pass alternative variants")), ToolInput(tag="in_maxdepth", input_type=Int(optional=True), prefix="--MaxDepth", doc=InputDocumentation(doc="Maximum read depth. Default is 1000000")), ToolInput(tag="in_truncate", input_type=Boolean(optional=True), prefix="--Truncate", doc=InputDocumentation(doc="Only pileup columns in the exact region specificied\nare returned. Default is False, becomes True is used")), ToolInput(tag="in_ignore_orphans", input_type=Boolean(optional=True), prefix="--IgnoreOrphans", doc=InputDocumentation(doc="Ignore orphans (paired reads that are not in a proper\npair). Default is False, becomes True if used")), ToolInput(tag="in_ignore", input_type=Boolean(optional=True), prefix="--Ignore", doc=InputDocumentation(doc="Keep the most abundant family and ignore families at\nother positions within each group. Default is False,\nbecomes True if used")), ToolInput(tag="in_merge", input_type=Boolean(optional=True), prefix="--Merge", doc=InputDocumentation(doc="Merge data, json and consensus files respectively into\na 1 single file. Default is True, becomes False if\nused")), ToolInput(tag="in_plot", input_type=Boolean(optional=True), prefix="--Plot", doc=InputDocumentation(doc="Generate figure plots. Default is True, becomes False\nif used")), ToolInput(tag="in_report", input_type=Boolean(optional=True), prefix="--Report", doc=InputDocumentation(doc="Generate report. Default is True, becomes False if")), ToolInput(tag="in_extension", input_type=String(optional=True), prefix="--Extension", doc=InputDocumentation(doc="Figure format. Does not generate a report if pdf, even\nwith -r True. Default is png")), ToolInput(tag="in_sample", input_type=Directory(optional=True), prefix="--Sample", doc=InputDocumentation(doc="Sample name to appear to report. Optional, use Output\ndirectory basename if not provided")), ToolInput(tag="in_project", input_type=String(optional=True), prefix="--Project", doc=InputDocumentation(doc="Project for submitting jobs on Univa")), ToolInput(tag="in_memory", input_type=Int(optional=True), prefix="--Memory", doc=InputDocumentation(doc="Requested memory for submitting jobs to SGE. Default\nis 20g")), ToolInput(tag="in_my_python", input_type=File(optional=True), prefix="--MyPython", doc=InputDocumentation(doc="Path to python. Default is /.mounts/labs/PDE/Modules/s\nw/python/Python-3.6.4/bin/python3.6")), ToolInput(tag="in_my_debar_cer", input_type=File(optional=True), prefix="--MyDebarcer", doc=InputDocumentation(doc="Path to the file debarcer.py. Default is /.mounts/labs\n/PDE/Modules/sw/python/Python-3.6.4/lib/python3.6/site\n-packages/debarcer/debarcer.py")), ToolInput(tag="in_min_cov", input_type=Int(optional=True), prefix="--MinCov", doc=InputDocumentation(doc="Minimum coverage value. Values below are plotted in\nred")), ToolInput(tag="in_min_ratio", input_type=Int(optional=True), prefix="--MinRatio", doc=InputDocumentation(doc="Minimum children to parent umi ratio. Values below are\nplotted in red")), ToolInput(tag="in_minum_is", input_type=String(optional=True), prefix="--MinUmis", doc=InputDocumentation(doc="Minimum umi count. Values below are plotted in red")), ToolInput(tag="in_min_children", input_type=Int(optional=True), prefix="--MinChildren", doc=InputDocumentation(doc="Minimum children umi count. Values below are plotted\nin red")), ToolInput(tag="in_stepper", input_type=String(optional=True), prefix="--Stepper", doc=InputDocumentation(doc="Filter or include reads in the pileup. Options all:\nskip reads with BAM_FUNMAP, BAM_FSECONDARY,\nBAM_FQCFAIL, BAM_FDUP flags, nofilter: uses every\nsingle read turning off any filtering")), ToolInput(tag="in_separator", input_type=String(optional=True), prefix="--Separator", doc=InputDocumentation(doc="String separating the UMI from the remaining of the\nread name")), ToolInput(tag="in_quality", input_type=Int(optional=True), prefix="--Quality", doc=InputDocumentation(doc="Base quality score threshold. Bases with quality\nscores below the threshold are not used in the\nconsensus. Default is 25")), ToolInput(tag="in_read_count", input_type=Int(optional=True), prefix="--ReadCount", doc=InputDocumentation(doc="Minimum number of reads in region required for\ngrouping. Default is 0\n")), ToolInput(tag="in_used", input_type=String(), position=0, doc=InputDocumentation(doc="-cl, --Call           Convert consensus files to VCF format. Default is"))], outputs=[ToolOutput(tag="out_outdir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_outdir", type_hint=File()), doc=OutputDocumentation(doc="Output directory where subdirectories are created")), ToolOutput(tag="out_sample", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_sample", type_hint=File()), doc=OutputDocumentation(doc="Sample name to appear to report. Optional, use Output\ndirectory basename if not provided"))], container="quay.io/biocontainers/debarcer:2.1.3--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Debarcer_Run_V0_1_0().translate("wdl")

