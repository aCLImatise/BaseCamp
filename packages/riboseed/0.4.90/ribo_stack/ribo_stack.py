from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Directory, File, Int, String, Boolean

Ribo_Stack_V0_1_0 = CommandToolBuilder(tool="ribo_stack", base_command=["ribo", "stack"], inputs=[ToolInput(tag="in_output", input_type=Directory(optional=True), prefix="--output", doc=InputDocumentation(doc="output directory; default: /")), ToolInput(tag="in_bam", input_type=File(optional=True), prefix="--bam", doc=InputDocumentation(doc="BAM file; tested with BWA output; default: None")), ToolInput(tag="in_ribose_ed_dir", input_type=File(optional=True), prefix="--riboSeed_dir", doc=InputDocumentation(doc="look for BAM file in this riboSeed output directory")), ToolInput(tag="in_n_samples", input_type=Int(optional=True), prefix="--n_samples", doc=InputDocumentation(doc="Number of regions to compare rDNA depth to; must be\ngreater than 1; default: 10")), ToolInput(tag="in_experiment_name", input_type=String(optional=True), prefix="--experiment_name", doc=InputDocumentation(doc="prefix for results files; default: riboStack")), ToolInput(tag="in_infer", input_type=Boolean(optional=True), prefix="--infer", doc=InputDocumentation(doc="If --infer, ignore the name and length of reference\nsequence, using the BAM header instead default: False")), ToolInput(tag="in_verbosity", input_type=File(optional=True), prefix="--verbosity", doc=InputDocumentation(doc="Logger writes debug to file in output dir; this sets\nverbosity level sent to stderr. 1 = debug(), 2 =\ninfo(), 3 = warning(), 4 = error() and 5 = critical();\ndefault: 2")), ToolInput(tag="in_run_dot", input_type=String(), position=1, doc=InputDocumentation(doc="required named arguments:"))], outputs=[ToolOutput(tag="out_output", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="output directory; default: /")), ToolOutput(tag="out_bam", output_type=File(optional=True), selector=InputSelector(input_to_select="in_bam", type_hint=File()), doc=OutputDocumentation(doc="BAM file; tested with BWA output; default: None")), ToolOutput(tag="out_ribose_ed_dir", output_type=File(optional=True), selector=InputSelector(input_to_select="in_ribose_ed_dir", type_hint=File()), doc=OutputDocumentation(doc="look for BAM file in this riboSeed output directory")), ToolOutput(tag="out_verbosity", output_type=File(optional=True), selector=InputSelector(input_to_select="in_verbosity", type_hint=File()), doc=OutputDocumentation(doc="Logger writes debug to file in output dir; this sets\nverbosity level sent to stderr. 1 = debug(), 2 =\ninfo(), 3 = warning(), 4 = error() and 5 = critical();\ndefault: 2"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Ribo_Stack_V0_1_0().translate("wdl", allow_empty_container=True)

