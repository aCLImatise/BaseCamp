from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, String, File, Boolean, Float

Merge_Midas_Py_Snps_V0_1_0 = CommandToolBuilder(tool="merge_midas.py_snps", base_command=["merge_midas.py", "snps"], inputs=[ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of CPUs to use (1)")), ToolInput(tag="in_input_sample_directories", input_type=String(optional=True), prefix="-i", doc=InputDocumentation(doc="Input to sample directories output by run_midas.py; see '-t' for details")), ToolInput(tag="in_specify_one_ex", input_type=File(optional=True), prefix="-t", doc=InputDocumentation(doc="Specify one of the following:\nlist: -i is a comma-separated list (ex: /samples/sample_1,/samples/sample_2)\ndir: -i is a directory containing all samples (ex: /samples)\nfile: -i is a file of paths to samples (ex: /sample_paths.txt)")), ToolInput(tag="in_path_reference_databaseby", input_type=File(optional=True), prefix="-d", doc=InputDocumentation(doc="Path to reference database\nBy default, the MIDAS_DB environmental variable is used")), ToolInput(tag="in_core_snps", input_type=Boolean(optional=True), prefix="--core_snps", doc=InputDocumentation(doc="Same as: --snp_type bi --site_depth 1 --site_ratio 2.0 --site_prev 0.95 (default)")), ToolInput(tag="in_core_sites", input_type=Boolean(optional=True), prefix="--core_sites", doc=InputDocumentation(doc="Same as: --snp_type any --site_depth 1 --site_ratio 2.0 --site_prev 0.95")), ToolInput(tag="in_all_snps", input_type=Boolean(optional=True), prefix="--all_snps", doc=InputDocumentation(doc="Same as: --snp_type bi --site_prev 0.0")), ToolInput(tag="in_all_sites", input_type=Boolean(optional=True), prefix="--all_sites", doc=InputDocumentation(doc="Same as: --snp_type any --site_prev 0.0")), ToolInput(tag="in_min_samples", input_type=Int(optional=True), prefix="--min_samples", doc=InputDocumentation(doc="All species with >= MIN_SAMPLES (1)")), ToolInput(tag="in_species_id", input_type=String(optional=True), prefix="--species_id", doc=InputDocumentation(doc="Comma-separated list of species ids")), ToolInput(tag="in_max_species", input_type=Int(optional=True), prefix="--max_species", doc=InputDocumentation(doc="Maximum number of species to call SNPs for (all with >= 1 sample)")), ToolInput(tag="in_sample_depth", input_type=Float(optional=True), prefix="--sample_depth", doc=InputDocumentation(doc="Minimum average read depth per sample (5.0)")), ToolInput(tag="in_fract_cov", input_type=Float(optional=True), prefix="--fract_cov", doc=InputDocumentation(doc="Fraction of reference sites covered by at least 1 read (0.4)")), ToolInput(tag="in_max_samples", input_type=Int(optional=True), prefix="--max_samples", doc=InputDocumentation(doc="Maximum number of samples to process. useful for quick tests (use all)")), ToolInput(tag="in_all_samples", input_type=Boolean(optional=True), prefix="--all_samples", doc=InputDocumentation(doc="Include all samples in output")), ToolInput(tag="in_snp_type", input_type=Boolean(optional=True), prefix="--snp_type", doc=InputDocumentation(doc="[ ...]    Specify one or more of the following:\nmono: keep sites with 1 allele > ALLELE_FREQ\nbi: keep sites with 2 alleles > ALLELE_FREQ (default)\ntri: keep sites with 3 alleles > ALLELE_FREQ\nquad: keep sites with 4 alleles > ALLELE_FREQ\nany: keep sites regardless of observed alleles")), ToolInput(tag="in_allele_freq", input_type=Float(optional=True), prefix="--allele_freq", doc=InputDocumentation(doc="Minimum frequency for calling an allele present (0.01)\nValues > 0.0 and < 0.5 are accepted.\nEx: --snp_type=bi --allele_freq=0.01 keeps bi-allelic SNPs with a minimum frequency of 1%")), ToolInput(tag="in_site_depth", input_type=Int(optional=True), prefix="--site_depth", doc=InputDocumentation(doc="Minimum number of reads mapped to genomic site (1)\nUsed in combination with --site_prev to determine if site is in core-genome")), ToolInput(tag="in_site_ratio", input_type=Float(optional=True), prefix="--site_ratio", doc=InputDocumentation(doc="Maximum ratio of site depth to genome depth (2.0)\nThis filter helps to eliminate genomic sites with abnormally high read depth")), ToolInput(tag="in_site_prev", input_type=Float(optional=True), prefix="--site_prev", doc=InputDocumentation(doc="Minimum fraction of sample where genomic site is >= SITE_DEPTH and <= SITE_RATIO (0.95)\nA high value selects for sites in the core-genome (i.e. present in nearly all strains).\nA low value includes sites in variable regions and/or with abnormally high read depth")), ToolInput(tag="in_max_sites", input_type=Int(optional=True), prefix="--max_sites", doc=InputDocumentation(doc="Maximum number of sites to include in output (use all). Useful for quick tests")), ToolInput(tag="in_outdir", input_type=String(), position=0, doc=InputDocumentation(doc="Directory for output files. \nA subdirectory will be created for each species_id"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Merge_Midas_Py_Snps_V0_1_0().translate("wdl", allow_empty_container=True)

