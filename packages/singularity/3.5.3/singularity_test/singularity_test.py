from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Boolean, File, Directory, Int

Singularity_Test_V0_1_0 = CommandToolBuilder(tool="singularity_test", base_command=["singularity", "test"], inputs=[ToolInput(tag="in_add_caps", input_type=String(optional=True), prefix="--add-caps", doc=InputDocumentation(doc="a comma separated capability list to add")), ToolInput(tag="in_allow_setuid", input_type=Boolean(optional=True), prefix="--allow-setuid", doc=InputDocumentation(doc="allow setuid binaries in container (root only)")), ToolInput(tag="in_app", input_type=String(optional=True), prefix="--app", doc=InputDocumentation(doc="set an application to run inside a container")), ToolInput(tag="in_apply_c_groups", input_type=File(optional=True), prefix="--apply-cgroups", doc=InputDocumentation(doc="apply cgroups from file for container\nprocesses (root only)")), ToolInput(tag="in_bind", input_type=File(optional=True), prefix="--bind", doc=InputDocumentation(doc="a user-bind path specification.  spec has\nthe format src[:dest[:opts]], where src and\ndest are outside and inside paths.  If dest\nis not given, it is set equal to src.\nMount options ('opts') may be specified as\n'ro' (read-only) or 'rw' (read/write, which\nis the default). Multiple bind paths can be\ngiven by a comma separated list.")), ToolInput(tag="in_clean_env", input_type=Boolean(optional=True), prefix="--cleanenv", doc=InputDocumentation(doc="clean environment before running container")), ToolInput(tag="in_contain", input_type=Boolean(optional=True), prefix="--contain", doc=InputDocumentation(doc="use minimal /dev and empty other\ndirectories (e.g. /tmp and $HOME) instead\nof sharing filesystems from your host")), ToolInput(tag="in_contain_all", input_type=Boolean(optional=True), prefix="--containall", doc=InputDocumentation(doc="contain not only file systems, but also\nPID, IPC, and environment")), ToolInput(tag="in_disable_cache", input_type=Boolean(optional=True), prefix="--disable-cache", doc=InputDocumentation(doc="dont use cache, and dont create cache")), ToolInput(tag="in_dns", input_type=String(optional=True), prefix="--dns", doc=InputDocumentation(doc="list of DNS server separated by commas to\nadd in resolv.conf")), ToolInput(tag="in_docker_login", input_type=Boolean(optional=True), prefix="--docker-login", doc=InputDocumentation(doc="login to a Docker Repository interactively")), ToolInput(tag="in_drop_caps", input_type=String(optional=True), prefix="--drop-caps", doc=InputDocumentation(doc="a comma separated capability list to drop")), ToolInput(tag="in_fakeroot", input_type=Boolean(optional=True), prefix="--fakeroot", doc=InputDocumentation(doc="run container in new user namespace as uid 0")), ToolInput(tag="in_home", input_type=File(optional=True), prefix="--home", doc=InputDocumentation(doc="a home directory specification.  spec can\neither be a src path or src:dest pair.  src\nis the source path of the home directory\noutside the container and dest overrides\nthe home directory within the container.\n(default '/root')")), ToolInput(tag="in_hostname", input_type=String(optional=True), prefix="--hostname", doc=InputDocumentation(doc="set container hostname")), ToolInput(tag="in_ipc", input_type=Boolean(optional=True), prefix="--ipc", doc=InputDocumentation(doc="run container in a new IPC namespace")), ToolInput(tag="in_keep_privs", input_type=Boolean(optional=True), prefix="--keep-privs", doc=InputDocumentation(doc="let root user keep privileges in container\n(root only)")), ToolInput(tag="in_net", input_type=Boolean(optional=True), prefix="--net", doc=InputDocumentation(doc="run container in a new network namespace\n(sets up a bridge network interface by default)")), ToolInput(tag="in_network", input_type=String(optional=True), prefix="--network", doc=InputDocumentation(doc="specify desired network type separated by\ncommas, each network will bring up a\ndedicated interface inside container\n(default 'bridge')")), ToolInput(tag="in_network_args", input_type=String(optional=True), prefix="--network-args", doc=InputDocumentation(doc="specify network arguments to pass to CNI plugins")), ToolInput(tag="in_no_home", input_type=Boolean(optional=True), prefix="--no-home", doc=InputDocumentation(doc="do NOT mount users home directory if home\nis not the current working directory")), ToolInput(tag="in_no_in_it", input_type=Boolean(optional=True), prefix="--no-init", doc=InputDocumentation(doc="do NOT start shim process with --pid")), ToolInput(tag="in_no_privs", input_type=Boolean(optional=True), prefix="--no-privs", doc=InputDocumentation(doc="drop all privileges from root user in container)")), ToolInput(tag="in_no_https", input_type=Boolean(optional=True), prefix="--nohttps", doc=InputDocumentation(doc="do NOT use HTTPS with the docker://\ntransport (useful for local docker\nregistries without a certificate)")), ToolInput(tag="in_no_net", input_type=Boolean(optional=True), prefix="--nonet", doc=InputDocumentation(doc="disable VM network handling")), ToolInput(tag="in_nv", input_type=Boolean(optional=True), prefix="--nv", doc=InputDocumentation(doc="enable experimental Nvidia support")), ToolInput(tag="in_overlay", input_type=String(optional=True), prefix="--overlay", doc=InputDocumentation(doc="use an overlayFS image for persistent data\nstorage or as read-only layer of container")), ToolInput(tag="in_passphrase", input_type=Boolean(optional=True), prefix="--passphrase", doc=InputDocumentation(doc="prompt for an encryption passphrase")), ToolInput(tag="in_pem_path", input_type=File(optional=True), prefix="--pem-path", doc=InputDocumentation(doc="enter an path to a PEM formated RSA key for\nan encrypted container")), ToolInput(tag="in_pid", input_type=Boolean(optional=True), prefix="--pid", doc=InputDocumentation(doc="run container in a new PID namespace")), ToolInput(tag="in_pwd", input_type=Directory(optional=True), prefix="--pwd", doc=InputDocumentation(doc="initial working directory for payload\nprocess inside the container")), ToolInput(tag="in_roc_m", input_type=Boolean(optional=True), prefix="--rocm", doc=InputDocumentation(doc="enable experimental Rocm support")), ToolInput(tag="in_scratch", input_type=Directory(optional=True), prefix="--scratch", doc=InputDocumentation(doc="include a scratch directory within the\ncontainer that is linked to a temporary dir\n(use -W to force location)")), ToolInput(tag="in_security", input_type=String(optional=True), prefix="--security", doc=InputDocumentation(doc="enable security features (SELinux,\nApparmor, Seccomp)")), ToolInput(tag="in_user_ns", input_type=Boolean(optional=True), prefix="--userns", doc=InputDocumentation(doc="run container in a new user namespace,\nallowing Singularity to run completely\nunprivileged on recent kernels. This\ndisables some features of Singularity, for\nexample it only works with sandbox images.")), ToolInput(tag="in_uts", input_type=Boolean(optional=True), prefix="--uts", doc=InputDocumentation(doc="run container in a new UTS namespace")), ToolInput(tag="in_vm", input_type=Boolean(optional=True), prefix="--vm", doc=InputDocumentation(doc="enable VM support")), ToolInput(tag="in_vm_cpu", input_type=Int(optional=True), prefix="--vm-cpu", doc=InputDocumentation(doc="number of CPU cores to allocate to Virtual\nMachine (implies --vm) (default '1')")), ToolInput(tag="in_vm_err", input_type=Boolean(optional=True), prefix="--vm-err", doc=InputDocumentation(doc="enable attaching stderr from VM")), ToolInput(tag="in_vm_ip", input_type=String(optional=True), prefix="--vm-ip", doc=InputDocumentation(doc="IP Address to assign for container usage.\nDefaults to DHCP within bridge network.\n(default 'dhcp')")), ToolInput(tag="in_vm_ram", input_type=Int(optional=True), prefix="--vm-ram", doc=InputDocumentation(doc="amount of RAM in MiB to allocate to Virtual\nMachine (implies --vm) (default '1024')")), ToolInput(tag="in_workdir", input_type=Directory(optional=True), prefix="--workdir", doc=InputDocumentation(doc="working directory to be used for /tmp,\n/var/tmp and $HOME (if -c/--contain was\nalso used)")), ToolInput(tag="in_writable", input_type=Boolean(optional=True), prefix="--writable", doc=InputDocumentation(doc="by default all Singularity containers are\navailable as read only. This option makes\nthe file system accessible as read/write.")), ToolInput(tag="in_writable_tmpfs", input_type=Boolean(optional=True), prefix="--writable-tmpfs", doc=InputDocumentation(doc="makes the file system accessible as\nread-write with non persistent data (with\noverlay support only)")), ToolInput(tag="in_exec", input_type=String(optional=True), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_options_dot_dot_dot", input_type=String(optional=True), position=1, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Singularity_Test_V0_1_0().translate("wdl", allow_empty_container=True)

