from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String

Map_Kmers_Sh_V0_1_0 = CommandToolBuilder(tool="map_kmers.sh", base_command=["map_kmers.sh"], inputs=[ToolInput(tag="in_h", input_type=Boolean(optional=True), prefix="-H", doc=InputDocumentation(doc="Add 'filename:' prefix")), ToolInput(tag="in_n", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="Add 'line_no:' prefix")), ToolInput(tag="in_show_names_match", input_type=Boolean(optional=True), prefix="-l", doc=InputDocumentation(doc="Show only names of files that match")), ToolInput(tag="in_show_names_do", input_type=Boolean(optional=True), prefix="-L", doc=InputDocumentation(doc="Show only names of files that don't match")), ToolInput(tag="in_show_only_count", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="Show only count of matching lines")), ToolInput(tag="in_show_only_part", input_type=Boolean(optional=True), prefix="-o", doc=InputDocumentation(doc="Show only the matching part of line")), ToolInput(tag="in_quiet_return_pattern", input_type=Boolean(optional=True), prefix="-q", doc=InputDocumentation(doc="Quiet. Return 0 if PATTERN is found, 1 otherwise")), ToolInput(tag="in_select_nonmatching_lines", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="Select non-matching lines")), ToolInput(tag="in_suppress_open_read", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="Suppress open and read errors")), ToolInput(tag="in_recurse", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="Recurse")), ToolInput(tag="in_ignore_case", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="Ignore case")), ToolInput(tag="in_match_whole_words", input_type=Boolean(optional=True), prefix="-w", doc=InputDocumentation(doc="Match whole words only")), ToolInput(tag="in_match_whole_lines", input_type=Boolean(optional=True), prefix="-x", doc=InputDocumentation(doc="Match whole lines only")), ToolInput(tag="in_pattern_literal_regexp", input_type=Boolean(optional=True), prefix="-F", doc=InputDocumentation(doc="PATTERN is a literal (not regexp)")), ToolInput(tag="in_pattern_extended_regexp", input_type=Boolean(optional=True), prefix="-E", doc=InputDocumentation(doc="PATTERN is an extended regexp")), ToolInput(tag="in_match_n_times", input_type=File(optional=True), prefix="-m", doc=InputDocumentation(doc="Match up to N times per file")), ToolInput(tag="in_print_n_lines_trailing", input_type=String(optional=True), prefix="-A", doc=InputDocumentation(doc="Print N lines of trailing context")), ToolInput(tag="in_print_n_lines_leading", input_type=String(optional=True), prefix="-B", doc=InputDocumentation(doc="Print N lines of leading context")), ToolInput(tag="in_same_as", input_type=String(optional=True), prefix="-C", doc=InputDocumentation(doc="Same as '-A N -B N'")), ToolInput(tag="in_pattern_to_match", input_type=String(optional=True), prefix="-e", doc=InputDocumentation(doc="Pattern to match")), ToolInput(tag="in_read_pattern_file", input_type=File(optional=True), prefix="-f", doc=InputDocumentation(doc="Read pattern from file")), ToolInput(tag="in_fi", input_type=Boolean(optional=True), prefix="-fi", doc=InputDocumentation(doc="Input FASTA file")), ToolInput(tag="in_fo", input_type=File(optional=True), prefix="-fo", doc=InputDocumentation(doc="Output file (opt., default is STDOUT")), ToolInput(tag="in_bed", input_type=Boolean(optional=True), prefix="-bed", doc=InputDocumentation(doc="BED/GFF/VCF file of ranges to extract from -fi")), ToolInput(tag="in_name_only", input_type=Boolean(optional=True), prefix="-nameOnly", doc=InputDocumentation(doc="Use the name field for the FASTA header")), ToolInput(tag="in_split", input_type=Boolean(optional=True), prefix="-split", doc=InputDocumentation(doc="Given BED12 fmt., extract and concatenate the sequences\nfrom the BED 'blocks' (e.g., exons)")), ToolInput(tag="in_tab", input_type=Boolean(optional=True), prefix="-tab", doc=InputDocumentation(doc="Write output in TAB delimited format.\n- Default is FASTA format.")), ToolInput(tag="in_full_header", input_type=Boolean(optional=True), prefix="-fullHeader", doc=InputDocumentation(doc="Use full fasta header.\n- By default, only the word before the first space or tab\nis used.")), ToolInput(tag="in_ignore_leading_blanks", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc="Ignore leading blanks")), ToolInput(tag="in_dictionary_order_blank", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc="Dictionary order (blank or alphanumeric only)")), ToolInput(tag="in_general_numerical_sort", input_type=Boolean(optional=True), prefix="-g", doc=InputDocumentation(doc="General numerical sort")), ToolInput(tag="in_sort_key", input_type=Boolean(optional=True), prefix="-k", doc=InputDocumentation(doc="Sort key")), ToolInput(tag="in_sort_month", input_type=Boolean(optional=True), prefix="-M", doc=InputDocumentation(doc="Sort month")), ToolInput(tag="in_key_separator", input_type=String(optional=True), prefix="-t", doc=InputDocumentation(doc="Key separator")), ToolInput(tag="in_suppress_duplicate_lines", input_type=Boolean(optional=True), prefix="-u", doc=InputDocumentation(doc="Suppress duplicate lines")), ToolInput(tag="in_lines_terminated_newline", input_type=Boolean(optional=True), prefix="-z", doc=InputDocumentation(doc="Lines are terminated by NUL, not newline")), ToolInput(tag="in_mst", input_type=Boolean(optional=True), prefix="-mST", doc=InputDocumentation(doc="Ignored for GNU compatibility")), ToolInput(tag="in_nrugmcszbdfimstokt", input_type=Boolean(optional=True), prefix="-nrugMcszbdfimSTokt", doc=InputDocumentation(doc="")), ToolInput(tag="in_hhnlloqvsriwfe", input_type=Boolean(optional=True), prefix="-HhnlLoqvsriwFE", doc=InputDocumentation(doc="")), ToolInput(tag="in_bed_tools", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_grep", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_sort", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_get_fast_a", input_type=String(), position=1, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_fo", output_type=File(optional=True), selector=InputSelector(input_to_select="in_fo", type_hint=File()), doc=OutputDocumentation(doc="Output file (opt., default is STDOUT"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Map_Kmers_Sh_V0_1_0().translate("wdl", allow_empty_container=True)

