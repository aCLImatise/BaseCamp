from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean, String, Int

Protrac_2_4_2_Pl_V0_1_0 = CommandToolBuilder(tool="proTRAC_2.4.2.pl", base_command=["proTRAC_2.4.2.pl"], inputs=[ToolInput(tag="in_genome", input_type=File(optional=True), prefix="-genome", doc=InputDocumentation(doc="[file]    Name of the file that contains the genomic sequence\nand that was used for mapping the sequence reads.")), ToolInput(tag="in_map", input_type=File(optional=True), prefix="-map", doc=InputDocumentation(doc="[file]       Name of the file that contains mapped reads in SAM\nor ELAND3 format. We recommend to use SeqMap with\noption /output_all_matches or sRNAmapper with default\nsettings to create an appropriate file. When using a\nmore popular mapper you should make sure to allow for\nmulti-mapping.")), ToolInput(tag="in_format", input_type=File(optional=True), prefix="-format", doc=InputDocumentation(doc="[s]       Specify the input format. Allowed values are SAM and\nELAND3. This is only required if the input file\ncontains less than 1000 hits.")), ToolInput(tag="in_repeatmasker", input_type=Boolean(optional=True), prefix="-repeatmasker", doc=InputDocumentation(doc="[file]    Name of the file that contains the RepeatMasker\nannotation. Make sure that the names for the\nchromosomes/scaffolds are identical in your Repeat-\nMasker and genome file.")), ToolInput(tag="in_gene_set", input_type=Boolean(optional=True), prefix="-geneset", doc=InputDocumentation(doc="[file]         Name of the file that contains gene annotation (GTF-\nfile from Ensembl database). Make sure that the names\nfor the chromosomes/scaffolds are identical in your\nGTF- and genome file.")), ToolInput(tag="in_sw_size", input_type=Boolean(optional=True), prefix="-swsize", doc=InputDocumentation(doc="[int]           Size of the sliding window (default=5000)")), ToolInput(tag="in_sw_incr", input_type=Boolean(optional=True), prefix="-swincr", doc=InputDocumentation(doc="[int]           Increment of the sliding window (default=1000)")), ToolInput(tag="in_no_hc", input_type=Boolean(optional=True), prefix="-nohc", doc=InputDocumentation(doc="Do not consider total number of genomic hits for the\nsequence in question for calculation of hit counts.")), ToolInput(tag="in_norc", input_type=Boolean(optional=True), prefix="-norc", doc=InputDocumentation(doc="Do not consider number of reads for the sequence in\nquestion for calculation of hit counts.")), ToolInput(tag="in_nor_pm", input_type=Boolean(optional=True), prefix="-norpm", doc=InputDocumentation(doc="Do not normalize the hit count with the total number\nof mapped sequence reads (reads per million).\nNormalization will make the values comparable accross\ndifferent piRNA libraries and/or organisms.")), ToolInput(tag="in_dens", input_type=Boolean(optional=True), prefix="-dens", doc=InputDocumentation(doc="[fpt]             Define an absolute minimum number of (normalized)\nread counts per kb.")), ToolInput(tag="in_p_dens", input_type=Boolean(optional=True), prefix="-pdens", doc=InputDocumentation(doc="[0..1]           Define a p-value for minimum number of (normalized)\nread counts per kb. A p-value of 0.01 means that the\n(normalized) read count value in a sliding window must\nbelong to the top 1% of all sliding windows.")), ToolInput(tag="in_est", input_type=Boolean(optional=True), prefix="-est", doc=InputDocumentation(doc="[int]              Use that option together with -pdens. Estimate the\nrequired minimum number of (normalized) read counts\nin a sliding windows based on n random 1kb sliding\nwindows (faster). Without that option proTRAC will\nscan the map file and calculate the required minimum\nnumber of (normalized) read counts in a sliding\nwindow based on the observed distribution.")), ToolInput(tag="in_pi_size", input_type=Boolean(optional=True), prefix="-pisize", doc=InputDocumentation(doc="[0..1]          Fraction of (normalized) read counts that have\nthe typical piRNA size (default=0.75).")), ToolInput(tag="in_pim_in", input_type=Boolean(optional=True), prefix="-pimin", doc=InputDocumentation(doc="[int]            Define the minimum length of a piRNA (default=24).")), ToolInput(tag="in_pi_max", input_type=Boolean(optional=True), prefix="-pimax", doc=InputDocumentation(doc="[int]            Define the maximum length of a piRNA (default=32).")), ToolInput(tag="in_one_tor_one_zero_a", input_type=Boolean(optional=True), prefix="-1Tor10A", doc=InputDocumentation(doc="[0..1]         Fraction of (normalized) read counts that have 1T\n(1U) or 10A (default=0.75).")), ToolInput(tag="in_on_et_and_one_zero_a", input_type=Boolean(optional=True), prefix="-1Tand10A", doc=InputDocumentation(doc="[0..1]        If the fraction of (normalized) read counts with 1T\n(1U) OR 10A is below the value defined by -1Tor10A,\naccept the sliding window if BOTH the 1T (1U) and the\n10A fraction reach this value (default=0.5).")), ToolInput(tag="in_distr", input_type=Boolean(optional=True), prefix="-distr", doc=InputDocumentation(doc="[ftp-ftp]        To avoid false positive piRNA cluster annotation of\nloci with one or few mapped sequences represented by\nexceptionally many reads. You can e.g. type\n'-distr 10-75' which means that the TOP 10% of\nmapped sequences account for max. 75% of the piRNA\nclusters (normalized) read counts. Otherwise the\nlocus is rejected.")), ToolInput(tag="in_cl_size", input_type=Boolean(optional=True), prefix="-clsize", doc=InputDocumentation(doc="[int]           Set the minimum size for a piRNA cluster (default=\n1000).")), ToolInput(tag="in_cl_hits", input_type=Boolean(optional=True), prefix="-clhits", doc=InputDocumentation(doc="[int]           Minimum number of sequence hit loci per piRNA cluster\n(default=0).")), ToolInput(tag="in_cl_hits_n", input_type=Boolean(optional=True), prefix="-clhitsn", doc=InputDocumentation(doc="[ftp]          Minimum number of normalized sequence read counts per\npiRNA cluster (default=0).")), ToolInput(tag="in_cl_strand", input_type=Boolean(optional=True), prefix="-clstrand", doc=InputDocumentation(doc="[0..1]        Fraction of (normalized) read counts that map to the\nmain strand (default=0.75).")), ToolInput(tag="in_cl_split", input_type=Boolean(optional=True), prefix="-clsplit", doc=InputDocumentation(doc="[0..1]         Minimum fraction of (normalized) read counts on the\nsmaller arm of a bi-directional piRNA cluster.\nOtherwise the cluster will be annotated as\nmono-directional (default=0.1).")), ToolInput(tag="in_no_html", input_type=Boolean(optional=True), prefix="-nohtml", doc=InputDocumentation(doc="Do not output .html files for each piRNA cluster.")), ToolInput(tag="in_notable", input_type=Boolean(optional=True), prefix="-notable", doc=InputDocumentation(doc="Do not output a summary table.")), ToolInput(tag="in_nofa_spi", input_type=File(optional=True), prefix="-nofaspi", doc=InputDocumentation(doc="Do not output a FASTA file comprising mapped piRNAs\nfor each cluster.")), ToolInput(tag="in_nofa_scl", input_type=File(optional=True), prefix="-nofascl", doc=InputDocumentation(doc="Do not output a FASTA file comprising all piRNA\ncluster sequences.")), ToolInput(tag="in_no_gtf", input_type=File(optional=True), prefix="-nogtf", doc=InputDocumentation(doc="Do not output a GTF file for predicted piRNA")), ToolInput(tag="in_pti", input_type=File(optional=True), prefix="-pti", doc=InputDocumentation(doc="Output a file that contains information on mapped\nsequence reads in a tab-delimited table that\ncomprises sequence, reads, genomic hits e.g:\nTGGGCACGCAAATTCGAGTATCG   12   4\n")), ToolInput(tag="in_option", input_type=String(optional=True), prefix="-option", doc=InputDocumentation(doc="")), ToolInput(tag="in_ftp", input_type=String(), position=0, doc=InputDocumentation(doc="= floating point number")), ToolInput(tag="in_int", input_type=Int(), position=1, doc=InputDocumentation(doc="= integer")), ToolInput(tag="in_clusters_dot", input_type=String(), position=0, doc=InputDocumentation(doc="-nomotif                Do not search for transcription factor binding")), ToolInput(tag="in_sites_dot", input_type=String(), position=1, doc=InputDocumentation(doc="-flank [int]            Include n bp of flanking sequence in output files."))], outputs=[ToolOutput(tag="out_nofa_spi", output_type=File(optional=True), selector=InputSelector(input_to_select="in_nofa_spi", type_hint=File()), doc=OutputDocumentation(doc="Do not output a FASTA file comprising mapped piRNAs\nfor each cluster.")), ToolOutput(tag="out_nofa_scl", output_type=File(optional=True), selector=InputSelector(input_to_select="in_nofa_scl", type_hint=File()), doc=OutputDocumentation(doc="Do not output a FASTA file comprising all piRNA\ncluster sequences.")), ToolOutput(tag="out_no_gtf", output_type=File(optional=True), selector=InputSelector(input_to_select="in_no_gtf", type_hint=File()), doc=OutputDocumentation(doc="Do not output a GTF file for predicted piRNA")), ToolOutput(tag="out_pti", output_type=File(optional=True), selector=InputSelector(input_to_select="in_pti", type_hint=File()), doc=OutputDocumentation(doc="Output a file that contains information on mapped\nsequence reads in a tab-delimited table that\ncomprises sequence, reads, genomic hits e.g:\nTGGGCACGCAAATTCGAGTATCG   12   4\n"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Protrac_2_4_2_Pl_V0_1_0().translate("wdl", allow_empty_container=True)

