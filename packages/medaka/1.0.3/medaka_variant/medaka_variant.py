from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Directory

Medaka_Variant_V0_1_0 = CommandToolBuilder(tool="medaka_variant", base_command=["medaka_variant"], inputs=[ToolInput(tag="in_input_bam_reads", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="input bam of reads aligned to ref. Read groups are currently ignored,\nso the bam should only contain reads from a single sample.")), ToolInput(tag="in_input_fasta_input", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc="input fasta input reference (required).")), ToolInput(tag="in_region_strings_wrap", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="region string(s). If providing multiple regions, wrap them in quotes.\nIf not provided, will process all contigs in bam.")), ToolInput(tag="in_output_folder_default", input_type=Directory(optional=True), prefix="-o", doc=InputDocumentation(doc="output folder (default: medaka_variant).")), ToolInput(tag="in_var_4", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="medaka model for initial SNP calling from mixed reads prior to phasing,\n(default: r941_prom_snp_g360).\nAvailable: r103_min_high_g345, r103_min_high_g360, r103_prom_high_g360, r103_prom_snp_g3210, r103_prom_variant_g3210, r10_min_high_g303, r10_min_high_g340, r941_min_fast_g303, r941_min_high_g303, r941_min_high_g330, r941_min_high_g340_rle, r941_min_high_g344, r941_min_high_g351, r941_min_high_g360, r941_prom_fast_g303, r941_prom_high_g303, r941_prom_high_g330, r941_prom_high_g344, r941_prom_high_g360, r941_prom_snp_g303, r941_prom_snp_g322, r941_prom_snp_g360, r941_prom_variant_g303, r941_prom_variant_g322, r941_prom_variant_g360.\nAlternatively a .hdf file from 'medaka train'.")), ToolInput(tag="in_m", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="medaka model for final variant calling from phased reads,\n(default: r941_prom_variant_g360).\nAvailable: r103_min_high_g345, r103_min_high_g360, r103_prom_high_g360, r103_prom_snp_g3210, r103_prom_variant_g3210, r10_min_high_g303, r10_min_high_g340, r941_min_fast_g303, r941_min_high_g303, r941_min_high_g330, r941_min_high_g340_rle, r941_min_high_g344, r941_min_high_g351, r941_min_high_g360, r941_prom_fast_g303, r941_prom_high_g303, r941_prom_high_g330, r941_prom_high_g344, r941_prom_high_g360, r941_prom_snp_g303, r941_prom_snp_g322, r941_prom_snp_g360, r941_prom_variant_g303, r941_prom_variant_g322, r941_prom_variant_g360.\nAlternatively a .hdf file from 'medaka train'.")), ToolInput(tag="in_number_threads_create", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="number of threads with which to create features (default: 1).")), ToolInput(tag="in_output_phased_vcf", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="output phased vcf.")), ToolInput(tag="in_batchsize_controls_default", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc="batchsize, controls memory use (default: 100).")), ToolInput(tag="in_delete_intermediate_files", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc="delete intermediate files. (default: keep).")), ToolInput(tag="in_threshold_filtering_indels", input_type=Boolean(optional=True), prefix="-N", doc=InputDocumentation(doc="threshold for filtering indels in final VCF (default: 9)")), ToolInput(tag="in_threshold_filtering_snps", input_type=Boolean(optional=True), prefix="-P", doc=InputDocumentation(doc="threshold for filtering SNPs in final VCF (default: 8)")), ToolInput(tag="in_avoid_filtering_final", input_type=Boolean(optional=True), prefix="-U", doc=InputDocumentation(doc="Avoid filtering of final VCF (default: do filter)")), ToolInput(tag="in_stop_snp_calling", input_type=Boolean(optional=True), prefix="-S", doc=InputDocumentation(doc="stop after initial SNP calling from mixed reads prior to phasing."))], outputs=[ToolOutput(tag="out_output_folder_default", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output_folder_default", type_hint=File()), doc=OutputDocumentation(doc="output folder (default: medaka_variant)."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Medaka_Variant_V0_1_0().translate("wdl", allow_empty_container=True)

