from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File

Mini_Align_V0_1_0 = CommandToolBuilder(tool="mini_align", base_command=["mini_align"], inputs=[ToolInput(tag="in_reference_be_file", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="reference, should be a fasta file. If correspondng minimap indices\ndo not exist they will be created. (required).")), ToolInput(tag="in_fastqa_input_reads", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="fastq/a input reads (required).")), ToolInput(tag="in_split_index_num", input_type=Boolean(optional=True), prefix="-I", doc=InputDocumentation(doc="split index every ~NUM input bases (default: 16G, this is larger\nthan the usual minimap2 default).")), ToolInput(tag="in_force_recreation_index", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc="force recreation of index file.")), ToolInput(tag="in_aggressively_extend_gaps", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="aggressively extend gaps (sets -A1 -B2 -O2 -E1 for minimap2).")), ToolInput(tag="in_filter_only_primary", input_type=Boolean(optional=True), prefix="-P", doc=InputDocumentation(doc="filter to only primary alignments (i.e. run samtools view -F 2308).\nDeprecated: this filter is now default and can be disabled with -A.")), ToolInput(tag="in_filter_alignments_output", input_type=Boolean(optional=True), prefix="-A", doc=InputDocumentation(doc="do not filter alignments to primary alignments, output all.")), ToolInput(tag="in_sort_bam_read", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="sort bam by read name.")), ToolInput(tag="in_chunk_size_input", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="chunk size. Input reads/contigs will be broken into chunks\nprior to alignment.")), ToolInput(tag="in_alignment_threads_default", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="alignment threads (default: 1).")), ToolInput(tag="in_output_file_prefix", input_type=File(optional=True), prefix="-p", doc=InputDocumentation(doc="output file prefix (default: reads).")), ToolInput(tag="in_fill_md_tag", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="fill MD tag.")), ToolInput(tag="in_fill_cslong_tag", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="fill cs(=long) tag.")), ToolInput(tag="in_only_create_files", input_type=Boolean(optional=True), prefix="-X", doc=InputDocumentation(doc="only create reference index files.")), ToolInput(tag="in_log_commands_running", input_type=Boolean(optional=True), prefix="-x", doc=InputDocumentation(doc="log all commands before running.")), ToolInput(tag="in_match_score", input_type=Boolean(optional=True), prefix="-M", doc=InputDocumentation(doc="match score")), ToolInput(tag="in_mismatch_score", input_type=Boolean(optional=True), prefix="-S", doc=InputDocumentation(doc="mismatch score")), ToolInput(tag="in_open_gat_penalty", input_type=Boolean(optional=True), prefix="-O", doc=InputDocumentation(doc="open gat penalty")), ToolInput(tag="in_extend_gap_penalty", input_type=Boolean(optional=True), prefix="-E", doc=InputDocumentation(doc="extend gap penalty."))], outputs=[ToolOutput(tag="out_output_file_prefix", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_file_prefix", type_hint=File()), doc=OutputDocumentation(doc="output file prefix (default: reads)."))], container="quay.io/biocontainers/medaka:1.3.2--py38h130def0_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Mini_Align_V0_1_0().translate("wdl")

