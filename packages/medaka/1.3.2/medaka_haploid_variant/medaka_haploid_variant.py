from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Directory

Medaka_Haploid_Variant_V0_1_0 = CommandToolBuilder(tool="medaka_haploid_variant", base_command=["medaka_haploid_variant"], inputs=[ToolInput(tag="in_fastx_input_basecalls", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="fastx input basecalls (required).")), ToolInput(tag="in_fasta_reference_sequence", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="fasta reference sequence (required).")), ToolInput(tag="in_output_folder_default", input_type=Directory(optional=True), prefix="-o", doc=InputDocumentation(doc="output folder (default: medaka).")), ToolInput(tag="in_medaka_model_default", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="medaka model, (default: r941_prom_variant_g360).\nAvailable: r103_min_high_g345, r103_min_high_g360, r103_prom_high_g360, r103_prom_snp_g3210, r103_prom_variant_g3210, r10_min_high_g303, r10_min_high_g340, r941_min_fast_g303, r941_min_high_g303, r941_min_high_g330, r941_min_high_g340_rle, r941_min_high_g344, r941_min_high_g351, r941_min_high_g360, r941_prom_fast_g303, r941_prom_high_g303, r941_prom_high_g330, r941_prom_high_g344, r941_prom_high_g360, r941_prom_high_g4011, r941_prom_snp_g303, r941_prom_snp_g322, r941_prom_snp_g360, r941_prom_variant_g303, r941_prom_variant_g322, r941_prom_variant_g360.\nA model named with 'variant' should be used with this program.")), ToolInput(tag="in_perform_read_realignment", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="Perform read realignment when annotating variants.")), ToolInput(tag="in_force_overwrite_outputs", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc="Force overwrite of outputs (default will reuse existing outputs).")), ToolInput(tag="in_number_threads_create", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="number of threads with which to create features (default: 1).")), ToolInput(tag="in_batchsize_controls_default", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc="batchsize, controls memory use (default: 100)."))], outputs=[ToolOutput(tag="out_output_folder_default", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output_folder_default", type_hint=File()), doc=OutputDocumentation(doc="output folder (default: medaka)."))], container="quay.io/biocontainers/medaka:1.3.2--py38h130def0_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Medaka_Haploid_Variant_V0_1_0().translate("wdl")

