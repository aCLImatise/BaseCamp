from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Directory, Boolean, Int, String

Counterr_V0_1_0 = CommandToolBuilder(tool="counterr", base_command=["counterr"], inputs=[ToolInput(tag="in_bam", input_type=File(optional=True), prefix="-bam", doc=InputDocumentation(doc="the input bam file (default: None)")), ToolInput(tag="in_genome", input_type=File(optional=True), prefix="-genome", doc=InputDocumentation(doc="the input fasta file (default: None)")), ToolInput(tag="in_output_dir", input_type=Directory(optional=True), prefix="-output_dir", doc=InputDocumentation(doc="the output directory for figures and stats (default:\nNone)")), ToolInput(tag="in_no_figures", input_type=Boolean(optional=True), prefix="-no_figures", doc=InputDocumentation(doc="pass this flag to not generate figures (default:\nFalse)")), ToolInput(tag="in_bai", input_type=File(optional=True), prefix="-bai", doc=InputDocumentation(doc="the input bai filename if non-conventionally named\n(default: )")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="-verbose", doc=InputDocumentation(doc="pass this flag to follow progress in the terminal\n(default: False)")), ToolInput(tag="in_len_min_contig", input_type=Int(optional=True), prefix="-len_min_contig", doc=InputDocumentation(doc="minimum contig length (default: 1500)")), ToolInput(tag="in_mapq_th_res", input_type=Int(optional=True), prefix="-mapq_thres", doc=InputDocumentation(doc="minimum mapq threshold (default: 40)")), ToolInput(tag="in_len_min_read", input_type=Int(optional=True), prefix="-len_min_read", doc=InputDocumentation(doc="minimum read length (default: 1500)")), ToolInput(tag="in_len_min_aln", input_type=Int(optional=True), prefix="-len_min_aln", doc=InputDocumentation(doc="minimum length aligned (default: 1000)")), ToolInput(tag="in_bit_flag", input_type=Int(optional=True), prefix="-bitflag", doc=InputDocumentation(doc="bit flag for read filter (as specified in SAM doc)\n(default: 3845)")), ToolInput(tag="in_len_min_hp", input_type=Int(optional=True), prefix="-len_min_hp", doc=InputDocumentation(doc="minimum homopolymer length (default: 3)")), ToolInput(tag="in_len_max_hp", input_type=Int(optional=True), prefix="-len_max_hp", doc=InputDocumentation(doc="maximum homopolymer length (default: 20)")), ToolInput(tag="in_len_context_sub", input_type=Int(optional=True), prefix="-len_context_sub", doc=InputDocumentation(doc="length of the k-mer context for context dependent\nsubstitution table (default: 5)")), ToolInput(tag="in_len_context_ins", input_type=Int(optional=True), prefix="-len_context_ins", doc=InputDocumentation(doc="length of the k-mer context for context dependent\ninsertion table (default: 6)")), ToolInput(tag="in_len_max_in_del", input_type=Int(optional=True), prefix="-len_max_indel", doc=InputDocumentation(doc="maximum length of indels to consider (default: 20)")), ToolInput(tag="in_len_trim_contig_edge", input_type=Int(optional=True), prefix="-len_trim_contig_edge", doc=InputDocumentation(doc="length of the contig edge to trim before computing\nvarious statistics (default: 1)")), ToolInput(tag="in_use_recorded", input_type=Boolean(optional=True), prefix="-use_recorded", doc=InputDocumentation(doc="pass this flag to NOT perform reverse complementing of\nthe reverse complement mapped reads (default: False)")), ToolInput(tag="in_lim", input_type=Int(optional=True), prefix="-lim", doc=InputDocumentation(doc="pass this flag to run the program with 'lim' randomly\nselected reads (both pass and fail) (default: -1)")), ToolInput(tag="in_num_pts_max", input_type=Int(optional=True), prefix="-num_pts_max", doc=InputDocumentation(doc="maximum number of points to be plotted for any scatter\nplots (default: 100000)")), ToolInput(tag="in_report_name", input_type=String(optional=True), prefix="-report_name", doc=InputDocumentation(doc="the name of the output PDF report if the user wishes\nto use a non-default name. (default: report.pdf)\n"))], outputs=[ToolOutput(tag="out_output_dir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output_dir", type_hint=File()), doc=OutputDocumentation(doc="the output directory for figures and stats (default:\nNone)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Counterr_V0_1_0().translate("wdl", allow_empty_container=True)

