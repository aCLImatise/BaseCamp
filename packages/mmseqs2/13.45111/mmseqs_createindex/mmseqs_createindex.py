from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, String, Float, Boolean

Mmseqs_Createindex_V0_1_0 = CommandToolBuilder(tool="mmseqs_createindex", base_command=["mmseqs", "createindex"], inputs=[ToolInput(tag="in_seed_sub_mat", input_type=File(optional=True), prefix="--seed-sub-mat", doc=InputDocumentation(doc="Substitution matrix file for k-mer generation [nucl:nucleotide.out,aa:VTML80.out]")), ToolInput(tag="in_kmer_length_set", input_type=Int(optional=True), prefix="-k", doc=InputDocumentation(doc="k-mer length (0: automatically set to optimum) [0]")), ToolInput(tag="in_alph_size", input_type=Int(optional=True), prefix="--alph-size", doc=InputDocumentation(doc="Alphabet size (range 2-21) [nucl:5,aa:21]")), ToolInput(tag="in_comp_bias_corr", input_type=Int(optional=True), prefix="--comp-bias-corr", doc=InputDocumentation(doc="Correct for locally biased amino acid composition (range 0-1) [1]")), ToolInput(tag="in_max_seqs", input_type=Int(optional=True), prefix="--max-seqs", doc=InputDocumentation(doc="Maximum results per query sequence allowed to pass the prefilter (affects sensitivity) [300]")), ToolInput(tag="in_mask", input_type=Int(optional=True), prefix="--mask", doc=InputDocumentation(doc="Mask sequences in k-mer stage: 0: w/o low complexity masking, 1: with low complexity masking [1]")), ToolInput(tag="in_mask_lower_case", input_type=Int(optional=True), prefix="--mask-lower-case", doc=InputDocumentation(doc="Lowercase letters will be excluded from k-mer search 0: include region, 1: exclude region [0]")), ToolInput(tag="in_spaced_km_er_mode", input_type=Int(optional=True), prefix="--spaced-kmer-mode", doc=InputDocumentation(doc="0: use consecutive positions in k-mers; 1: use spaced k-mers [1]")), ToolInput(tag="in_spaced_km_er_pattern", input_type=String(optional=True), prefix="--spaced-kmer-pattern", doc=InputDocumentation(doc="User-specified spaced k-mer pattern []")), ToolInput(tag="in_sensitivity_faster_fast", input_type=Float(optional=True), prefix="-s", doc=InputDocumentation(doc="Sensitivity: 1.0 faster; 4.0 fast; 7.5 sensitive [7.500]")), ToolInput(tag="in_k_score", input_type=Int(optional=True), prefix="--k-score", doc=InputDocumentation(doc="k-mer threshold for generating similar k-mer lists [0]")), ToolInput(tag="in_split", input_type=Int(optional=True), prefix="--split", doc=InputDocumentation(doc="Split input into N equally distributed chunks. 0: set the best split automatically [0]")), ToolInput(tag="in_split_memory_limit", input_type=Int(optional=True), prefix="--split-memory-limit", doc=InputDocumentation(doc="Set max memory per split. E.g. 800B, 5K, 10M, 1G. Default (0) to all available system memory [0]")), ToolInput(tag="in_check_compatible", input_type=Int(optional=True), prefix="--check-compatible", doc=InputDocumentation(doc="0: Always recreate index, 1: Check if recreating index is needed, 2: Fail if index is incompatible [0]")), ToolInput(tag="in_search_type", input_type=Int(optional=True), prefix="--search-type", doc=InputDocumentation(doc="Search type 0: auto 1: amino acid, 2: translated, 3: nucleotide, 4: translated nucleotide alignment [0]")), ToolInput(tag="in_min_length", input_type=Int(optional=True), prefix="--min-length", doc=InputDocumentation(doc="Minimum codon number in open reading frames [30]")), ToolInput(tag="in_max_length", input_type=Int(optional=True), prefix="--max-length", doc=InputDocumentation(doc="Maximum codon number in open reading frames [32734]")), ToolInput(tag="in_max_gaps", input_type=Int(optional=True), prefix="--max-gaps", doc=InputDocumentation(doc="Maximum number of codons with gaps or unknown residues before an open reading frame is rejected [2147483647]")), ToolInput(tag="in_contig_start_mode", input_type=Int(optional=True), prefix="--contig-start-mode", doc=InputDocumentation(doc="Contig start can be 0: incomplete, 1: complete, 2: both [2]")), ToolInput(tag="in_contig_end_mode", input_type=Int(optional=True), prefix="--contig-end-mode", doc=InputDocumentation(doc="Contig end can be 0: incomplete, 1: complete, 2: both [2]")), ToolInput(tag="in_orf_start_mode", input_type=Int(optional=True), prefix="--orf-start-mode", doc=InputDocumentation(doc="Orf fragment can be 0: from start to stop, 1: from any to stop, 2: from last encountered start to stop (no start in the middle) [1]")), ToolInput(tag="in_forward_frames", input_type=Int(optional=True), prefix="--forward-frames", doc=InputDocumentation(doc="Comma-separated list of frames on the forward strand to be extracted [1,2,3]")), ToolInput(tag="in_reverse_frames", input_type=Int(optional=True), prefix="--reverse-frames", doc=InputDocumentation(doc="Comma-separated list of frames on the reverse strand to be extracted [1,2,3]")), ToolInput(tag="in_translation_table", input_type=Int(optional=True), prefix="--translation-table", doc=InputDocumentation(doc="1) CANONICAL, 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4) MOLD_MITOCHONDRIAL, 5) INVERT_MITOCHONDRIAL, 6) CILIATE\n9) FLATWORM_MITOCHONDRIAL, 10) EUPLOTID, 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14) ALT_FLATWORM_MITOCHONDRIAL\n15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL, 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL\n23) THRAUSTOCHYTRIUM_MITOCHONDRIAL, 24) PTEROBRANCHIA_MITOCHONDRIAL, 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27) KARYORELICT, 28) CONDYLOSTOMA\n29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA [1]")), ToolInput(tag="in_translate", input_type=Int(optional=True), prefix="--translate", doc=InputDocumentation(doc="Translate ORF to amino acid [0]")), ToolInput(tag="in_use_all_table_starts", input_type=Boolean(optional=True), prefix="--use-all-table-starts", doc=InputDocumentation(doc="Use all alternatives for a start codon in the genetic table, if false - only ATG (AUG) [0]")), ToolInput(tag="in_id_offset", input_type=Int(optional=True), prefix="--id-offset", doc=InputDocumentation(doc="Numeric ids in index file are offset by this value [0]")), ToolInput(tag="in_add_orf_stop", input_type=Boolean(optional=True), prefix="--add-orf-stop", doc=InputDocumentation(doc="Add stop codon '*' at complete start and end [0]")), ToolInput(tag="in_sequence_overlap", input_type=Int(optional=True), prefix="--sequence-overlap", doc=InputDocumentation(doc="Overlap between sequences [0]")), ToolInput(tag="in_sequence_split_mode", input_type=Int(optional=True), prefix="--sequence-split-mode", doc=InputDocumentation(doc="Sequence split mode 0: copy data, 1: soft link data and write new index, [1]")), ToolInput(tag="in_headers_split_mode", input_type=Int(optional=True), prefix="--headers-split-mode", doc=InputDocumentation(doc="Header split mode: 0: split position, 1: original header [0]")), ToolInput(tag="in_max_seq_len", input_type=Int(optional=True), prefix="--max-seq-len", doc=InputDocumentation(doc="Maximum sequence length [65535]")), ToolInput(tag="in_verbosity_level_errors", input_type=Int(optional=True), prefix="-v", doc=InputDocumentation(doc="Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of CPU-cores used (all by default) [2]")), ToolInput(tag="in_compressed", input_type=Int(optional=True), prefix="--compressed", doc=InputDocumentation(doc="Write compressed output [0]")), ToolInput(tag="in_remove_tmp_files", input_type=Boolean(optional=True), prefix="--remove-tmp-files", doc=InputDocumentation(doc="Delete temporary files [0]")), ToolInput(tag="in_create_lookup", input_type=Int(optional=True), prefix="--create-lookup", doc=InputDocumentation(doc="Create database lookup file (can be very large) [0]")), ToolInput(tag="in_strand", input_type=Int(optional=True), prefix="--strand", doc=InputDocumentation(doc="Strand selection only works for DNA/DNA search 0: reverse, 1: forward, 2: both [1]"))], outputs=[ToolOutput(tag="out_seed_sub_mat", output_type=File(optional=True), selector=InputSelector(input_to_select="in_seed_sub_mat", type_hint=File()), doc=OutputDocumentation(doc="Substitution matrix file for k-mer generation [nucl:nucleotide.out,aa:VTML80.out]"))], container="quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Mmseqs_Createindex_V0_1_0().translate("wdl")

