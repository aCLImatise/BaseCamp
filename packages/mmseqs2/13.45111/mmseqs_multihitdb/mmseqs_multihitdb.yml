!Command
command:
- mmseqs
- multihitdb
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - --dbtype
  description: 'Database type 0: auto, 1: amino acid 2: nucleotides [0]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --shuffle
  description: Shuffle input database [1]
  args: !SimpleFlagArg
    name: BOOL
- !Flag
  optional: true
  synonyms:
  - --createdb-mode
  description: 'Createdb mode 0: copy data, 1: soft link data and write new index
    (works only with single line fasta/q) [0]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --id-offset
  description: Numeric ids in index file are offset by this value [0]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --min-length
  description: Minimum codon number in open reading frames [30]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --max-length
  description: Maximum codon number in open reading frames [32734]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --max-gaps
  description: Maximum number of codons with gaps or unknown residues before an open
    reading frame is rejected [2147483647]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --contig-start-mode
  description: 'Contig start can be 0: incomplete, 1: complete, 2: both [2]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --contig-end-mode
  description: 'Contig end can be 0: incomplete, 1: complete, 2: both [2]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --orf-start-mode
  description: 'Orf fragment can be 0: from start to stop, 1: from any to stop, 2:
    from last encountered start to stop (no start in the middle) [1]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --forward-frames
  description: Comma-separated list of frames on the forward strand to be extracted
    [1,2,3]
  args: !SimpleFlagArg
    name: STR
- !Flag
  optional: true
  synonyms:
  - --reverse-frames
  description: Comma-separated list of frames on the reverse strand to be extracted
    [1,2,3]
  args: !SimpleFlagArg
    name: STR
- !Flag
  optional: true
  synonyms:
  - --translation-table
  description: "1) CANONICAL, 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4) MOLD_MITOCHONDRIAL,\
    \ 5) INVERT_MITOCHONDRIAL, 6) CILIATE\n9) FLATWORM_MITOCHONDRIAL, 10) EUPLOTID,\
    \ 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14) ALT_FLATWORM_MITOCHONDRIAL\n\
    15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL, 21) TREMATODE_MITOCHONDRIAL,\
    \ 22) SCENEDESMUS_MITOCHONDRIAL\n23) THRAUSTOCHYTRIUM_MITOCHONDRIAL, 24) PTEROBRANCHIA_MITOCHONDRIAL,\
    \ 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27) KARYORELICT, 28) CONDYLOSTOMA\n29)\
    \ MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA [1]"
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --translate
  description: Translate ORF to amino acid [0]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --use-all-table-starts
  description: Use all alternatives for a start codon in the genetic table, if false
    - only ATG (AUG) [0]
  args: !SimpleFlagArg
    name: BOOL
- !Flag
  optional: true
  synonyms:
  - --add-orf-stop
  description: Add stop codon '*' at complete start and end [0]
  args: !SimpleFlagArg
    name: BOOL
- !Flag
  optional: true
  synonyms:
  - --stat
  description: 'One of: linecount, mean, doolittle, charges, seqlen, firstline []'
  args: !SimpleFlagArg
    name: STR
- !Flag
  optional: true
  synonyms:
  - --tsv
  description: Return output in TSV format [0]
  args: !SimpleFlagArg
    name: BOOL
- !Flag
  optional: true
  synonyms:
  - --compressed
  description: Write compressed output [0]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - -v
  description: 'Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]'
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --threads
  description: Number of CPU-cores used (all by default) [2]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --write-lookup
  description: write .lookup file containing mapping from internal id, fasta id and
    file number [1]
  args: !SimpleFlagArg
    name: INT
- !Flag
  optional: true
  synonyms:
  - --create-lookup
  description: Create database lookup file (can be very large) [0]
  args: !SimpleFlagArg
    name: INT
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "usage: mmseqs multihitdb <i:fastaFile1[.gz|bz2]> ... <i:fastaFileN[.gz|bz2]>\
  \ <o:setDB> <tmpDir> [options]\n By Ruoshi Zhang, Clovis Norroy & Milot Mirdita\
  \ <milot@mirdita.de>\noptions: misc:                       \n --dbtype INT     \
  \            Database type 0: auto, 1: amino acid 2: nucleotides [0]\n --shuffle\
  \ BOOL               Shuffle input database [1]\n --createdb-mode INT          Createdb\
  \ mode 0: copy data, 1: soft link data and write new index (works only with single\
  \ line fasta/q) [0]\n --id-offset INT              Numeric ids in index file are\
  \ offset by this value [0]\n --min-length INT             Minimum codon number in\
  \ open reading frames [30]\n --max-length INT             Maximum codon number in\
  \ open reading frames [32734]\n --max-gaps INT               Maximum number of codons\
  \ with gaps or unknown residues before an open reading frame is rejected [2147483647]\n\
  \ --contig-start-mode INT      Contig start can be 0: incomplete, 1: complete, 2:\
  \ both [2]\n --contig-end-mode INT        Contig end can be 0: incomplete, 1: complete,\
  \ 2: both [2]\n --orf-start-mode INT         Orf fragment can be 0: from start to\
  \ stop, 1: from any to stop, 2: from last encountered start to stop (no start in\
  \ the middle) [1]\n --forward-frames STR         Comma-separated list of frames\
  \ on the forward strand to be extracted [1,2,3]\n --reverse-frames STR         Comma-separated\
  \ list of frames on the reverse strand to be extracted [1,2,3]\n --translation-table\
  \ INT      1) CANONICAL, 2) VERT_MITOCHONDRIAL, 3) YEAST_MITOCHONDRIAL, 4) MOLD_MITOCHONDRIAL,\
  \ 5) INVERT_MITOCHONDRIAL, 6) CILIATE\n                              9) FLATWORM_MITOCHONDRIAL,\
  \ 10) EUPLOTID, 11) PROKARYOTE, 12) ALT_YEAST, 13) ASCIDIAN_MITOCHONDRIAL, 14) ALT_FLATWORM_MITOCHONDRIAL\n\
  \                              15) BLEPHARISMA, 16) CHLOROPHYCEAN_MITOCHONDRIAL,\
  \ 21) TREMATODE_MITOCHONDRIAL, 22) SCENEDESMUS_MITOCHONDRIAL\n                 \
  \             23) THRAUSTOCHYTRIUM_MITOCHONDRIAL, 24) PTEROBRANCHIA_MITOCHONDRIAL,\
  \ 25) GRACILIBACTERIA, 26) PACHYSOLEN, 27) KARYORELICT, 28) CONDYLOSTOMA\n     \
  \                          29) MESODINIUM, 30) PERTRICH, 31) BLASTOCRITHIDIA [1]\n\
  \ --translate INT              Translate ORF to amino acid [0]\n --use-all-table-starts\
  \ BOOL  Use all alternatives for a start codon in the genetic table, if false -\
  \ only ATG (AUG) [0]\n --add-orf-stop BOOL          Add stop codon '*' at complete\
  \ start and end [0]\n --stat STR                   One of: linecount, mean, doolittle,\
  \ charges, seqlen, firstline []\n --tsv BOOL                   Return output in\
  \ TSV format [0]\ncommon:                     \n --compressed INT             Write\
  \ compressed output [0]\n -v INT                       Verbosity level: 0: quiet,\
  \ 1: +errors, 2: +warnings, 3: +info [3]\n --threads INT                Number of\
  \ CPU-cores used (all by default) [2]\nexpert:                     \n --write-lookup\
  \ INT           write .lookup file containing mapping from internal id, fasta id\
  \ and file number [1]\n --create-lookup INT          Create database lookup file\
  \ (can be very large) [0]\n\nreferences:\n - Steinegger M, Soding J: MMseqs2 enables\
  \ sensitive protein sequence searching for the analysis of massive data sets. Nature\
  \ Biotechnology, 35(11), 1026-1028 (2017)\n"
generated_using:
- --help
docker_image: quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0
