from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, Int, Float, File

Mmseqs_Filterdb_V0_1_0 = CommandToolBuilder(tool="mmseqs_filterdb", base_command=["mmseqs", "filterdb"], inputs=[ToolInput(tag="in_add_self_matches", input_type=Boolean(optional=True), prefix="--add-self-matches", doc=InputDocumentation(doc="Artificially add entries of queries with themselves (for clustering) [0]")), ToolInput(tag="in_filter_expression", input_type=String(optional=True), prefix="--filter-expression", doc=InputDocumentation(doc="Specify a mathematical expression to filter lines []")), ToolInput(tag="in_filter_column", input_type=Int(optional=True), prefix="--filter-column", doc=InputDocumentation(doc="column [1]")), ToolInput(tag="in_column_to_take", input_type=Int(optional=True), prefix="--column-to-take", doc=InputDocumentation(doc="column to take in join mode. If -1, the whole line is taken [-1]")), ToolInput(tag="in_filter_regex", input_type=Float(optional=True), prefix="--filter-regex", doc=InputDocumentation(doc="Regex to select column (example float: [0-9]*(.[0-9]+)? int:[1-9]{1}[0-9]) [^.*$]")), ToolInput(tag="in_positive_filter", input_type=File(optional=True), prefix="--positive-filter", doc=InputDocumentation(doc="Used in conjunction with --filter-file. If true, out  = in \intersect filter ; if false, out = in - filter [1]")), ToolInput(tag="in_filter_file", input_type=File(optional=True), prefix="--filter-file", doc=InputDocumentation(doc="Specify a file that contains the filtering elements []")), ToolInput(tag="in_beats_first", input_type=Boolean(optional=True), prefix="--beats-first", doc=InputDocumentation(doc="Filter by comparing each entry to the first entry [0]")), ToolInput(tag="in_mapping_file", input_type=File(optional=True), prefix="--mapping-file", doc=InputDocumentation(doc="Specify a file that translates the keys of a DB to new keys, TSV format []")), ToolInput(tag="in_trim_to_one_column", input_type=Boolean(optional=True), prefix="--trim-to-one-column", doc=InputDocumentation(doc="Output only the column specified by --filter-column [0]")), ToolInput(tag="in_extract_lines", input_type=Int(optional=True), prefix="--extract-lines", doc=InputDocumentation(doc="Extract n lines of each entry [0]")), ToolInput(tag="in_comparison_operator", input_type=String(optional=True), prefix="--comparison-operator", doc=InputDocumentation(doc="Filter by comparing each entry row numerically by using the le) less-than-equal, ge) greater-than-equal or e) equal operator []")), ToolInput(tag="in_comparison_value", input_type=Float(optional=True), prefix="--comparison-value", doc=InputDocumentation(doc="Filter by comparing each entry to this value [0.000E+00]")), ToolInput(tag="in_sort_entries", input_type=Int(optional=True), prefix="--sort-entries", doc=InputDocumentation(doc="Sort column set by --filter-column, by 0: no sorting, 1: increasing, 2: decreasing, 3: random shuffle [0]")), ToolInput(tag="in_join_db", input_type=String(optional=True), prefix="--join-db", doc=InputDocumentation(doc="Join another database entry with respect to the database identifier in the chosen column []")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of CPU-cores used (all by default) [2]")), ToolInput(tag="in_compressed", input_type=Int(optional=True), prefix="--compressed", doc=InputDocumentation(doc="Write compressed output [0]")), ToolInput(tag="in_verbosity_level_errors", input_type=Int(optional=True), prefix="-v", doc=InputDocumentation(doc="Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]"))], outputs=[ToolOutput(tag="out_positive_filter", output_type=File(optional=True), selector=InputSelector(input_to_select="in_positive_filter", type_hint=File()), doc=OutputDocumentation(doc="Used in conjunction with --filter-file. If true, out  = in \intersect filter ; if false, out = in - filter [1]"))], container="quay.io/biocontainers/mmseqs2:13.45111--h2d02072_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Mmseqs_Filterdb_V0_1_0().translate("wdl")

