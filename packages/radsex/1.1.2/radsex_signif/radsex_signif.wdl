version 1.0

task RadsexSignif {
  input {
    Boolean? markers_table
    Boolean? pop_map
    File? output_file
    Boolean? min_depth
    Boolean? groups
    Boolean? sign_if_threshold
    Boolean? disable_correction
    Boolean? output_fast_a
  }
  command <<<
    radsex signif \
      ~{if (markers_table) then "--markers-table" else ""} \
      ~{if (pop_map) then "--popmap" else ""} \
      ~{if (output_file) then "--output-file" else ""} \
      ~{if (min_depth) then "--min-depth" else ""} \
      ~{if (groups) then "--groups" else ""} \
      ~{if (sign_if_threshold) then "--signif-threshold" else ""} \
      ~{if (disable_correction) then "--disable-correction" else ""} \
      ~{if (output_fast_a) then "--output-fasta" else ""}
  >>>
  parameter_meta {
    markers_table: "TEXT:FILE                 Path to a marker depths table generated by \\\"process\\\"                                                                      [REQUIRED]"
    pop_map: "TEXT:FILE                 Path to a tabulated file specifying groups for all individuals (population map)                                           [REQUIRED]"
    output_file: "TEXT                      Path to the output file (marker depths table or fasta file for markers significantly associated with phenotypic group)    [REQUIRED]"
    min_depth: "UINT:INT in [1 - 9999]    Minimum depth to consider a marker present in an individual                                                               [1]"
    groups: "TEXT                      Names of the groups to compare if there are more than two groups in the popmap (--groups group1,group2)"
    sign_if_threshold: "FLOAT:FLOAT in [0 - 1]    P-value threshold to consider a marker significantly associated with a phenotypic group                                   [0.05]"
    disable_correction: "If set, Bonferroni correction will NOT be used when assessing significance of association with phenotypic group"
    output_fast_a: "If set, markers will be output in fasta format instead of table format"
  }
  output {
    File out_stdout = stdout()
    File out_output_file = "${in_output_file}"
  }
}