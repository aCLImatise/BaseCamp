class: CommandLineTool
id: rnaQUAST.py.cwl
inputs:
- id: in_reference
  doc: "Single file (or several files for meta RNA) with\nreference genome in FASTA\
    \ format or *.txt file with\none-per-line list of FASTA files with reference\n\
    sequences"
  type: string[]
  inputBinding:
    prefix: --reference
- id: in_gtf
  doc: "File with gene coordinates (or several files or *.txt\nfile with one-per-line\
    \ list of GTF / GFF files for\nmeta RNA). We recommend to use files downloaded\
    \ from\nGENCODE or Ensembl [GTF/GFF]"
  type: string[]
  inputBinding:
    prefix: --gtf
- id: in_gene_db
  doc: Path to the gene database generated by gffutils to be
  type: File?
  inputBinding:
    prefix: --gene_db
- id: in_alignment
  doc: "File(s) with transcript alignments to the reference\ngenome [PSL]"
  type: string[]
  inputBinding:
    prefix: --alignment
- id: in_reads_alignment
  doc: "File with read alignments to the reference genome\n[SAM]"
  type: File?
  inputBinding:
    prefix: --reads_alignment
- id: in_left_reads
  doc: "File with forward paired-end reads [FASTQ or gzip-\ncompressed]"
  type: File?
  inputBinding:
    prefix: --left_reads
- id: in_right_reads
  doc: "File with reverse paired-end reads [FASTQ or gzip-\ncompressed]"
  type: File?
  inputBinding:
    prefix: --right_reads
- id: in_single_reads
  doc: File with unpaired reads [FASTQ or gzip-compressed]
  type: File?
  inputBinding:
    prefix: --single_reads
- id: in_gmap_index
  doc: Folder containing GMAP index for the reference genome
  type: Directory?
  inputBinding:
    prefix: --gmap_index
- id: in_output_dir
  doc: "Directory to store all results [default:\nrnaQUAST_results/results_<datetime>]"
  type: Directory?
  inputBinding:
    prefix: --output_dir
- id: in_test
  doc: "Run rnaQUAST on the test data from the test_data\nfolder, output directory\
    \ is rnaOUAST_test_output"
  type: Directory?
  inputBinding:
    prefix: --test
- id: in_debug
  doc: "Report detailed information, typically used only for\ndetecting problems."
  type: boolean?
  inputBinding:
    prefix: --debug
- id: in_threads
  doc: "Maximum number of threads, default: min(number of CPUs\n/ 2, 16)"
  type: long?
  inputBinding:
    prefix: --threads
- id: in_labels
  doc: Name(s) of assemblies that will be used in the reports
  type: string[]
  inputBinding:
    prefix: --labels
- id: in_strand_specific
  doc: "Set if transcripts were assembled using strand-\nspecific RNA-Seq data"
  type: boolean?
  inputBinding:
    prefix: --strand_specific
- id: in_min_alignment
  doc: 'Minimal alignment length, default: 50'
  type: long?
  inputBinding:
    prefix: --min_alignment
- id: in_no_plots
  doc: Do not draw plots (to speed up computation)
  type: boolean?
  inputBinding:
    prefix: --no_plots
- id: in_blat
  doc: "Run with BLAT alignment tool\n(http://hgwdev.cse.ucsc.edu/~kent/exe/) instead\
    \ of\nGMAP"
  type: boolean?
  inputBinding:
    prefix: --blat
- id: in_gene_mark
  doc: "Run with GeneMarkS-T tool\n(http://topaz.gatech.edu/GeneMark/)"
  type: boolean?
  inputBinding:
    prefix: --gene_mark
- id: in_meta
  doc: Run QUALITY ASSESSMENT FOR METATRANSCRIPTOME
  type: boolean?
  inputBinding:
    prefix: --meta
- id: in_upper_threshold
  doc: "Upper threshold for x-assembled/covered/matched\nmetrics, default: 0.95"
  type: double?
  inputBinding:
    prefix: --upper_threshold
- id: in_prokaryote
  doc: Use this option if the genome is prokaryotic
  type: boolean?
  inputBinding:
    prefix: --prokaryote
- id: in_disable_infer_genes
  doc: "Use this option if your GTF file already contains\ngenes records"
  type: boolean?
  inputBinding:
    prefix: --disable_infer_genes
- id: in_disable_infer_transcripts
  doc: "Use this option if your GTF already contains\ntranscripts records"
  type: boolean?
  inputBinding:
    prefix: --disable_infer_transcripts
- id: in_busco
  doc: "Run with BUSCO tool (http://busco.ezlab.org/).\nAutomated lineage selection\
    \ [auto-lineage], BUSCO\ndataset name or a path to the lineage data to be used"
  type: File?
  inputBinding:
    prefix: --busco
- id: in_used
  doc: -c TRANSCRIPTS [TRANSCRIPTS ...], --transcripts TRANSCRIPTS [TRANSCRIPTS ...]
  type: string
  inputBinding:
    position: 0
- id: in_assemblies
  doc: --lower_threshold LOWER_THRESHOLD
  type: string
  inputBinding:
    position: 0
outputs:
- id: out_stdout
  doc: Standard output stream
  type: stdout
- id: out_test
  doc: "Run rnaQUAST on the test data from the test_data\nfolder, output directory\
    \ is rnaOUAST_test_output"
  type: Directory?
  outputBinding:
    glob: $(inputs.in_test)
hints:
- class: DockerRequirement
  dockerPull: quay.io/biocontainers/rnaquast:2.2.0--0
cwlVersion: v1.1
baseCommand:
- rnaQUAST.py
