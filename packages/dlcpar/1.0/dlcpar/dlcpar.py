from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Int, Float, Boolean

Dlcpar_V0_1_0 = CommandToolBuilder(tool="dlcpar", base_command=["dlcpar"], inputs=[ToolInput(tag="in_stree", input_type=File(optional=True), prefix="--stree", doc=InputDocumentation(doc="species tree file in newick format")), ToolInput(tag="in_s_map", input_type=String(optional=True), prefix="--smap", doc=InputDocumentation(doc="gene to species map")), ToolInput(tag="in_l_map", input_type=String(optional=True), prefix="--lmap", doc=InputDocumentation(doc="gene to locus map (species-specific)")), ToolInput(tag="in_n_samples", input_type=Int(optional=True), prefix="--nsamples", doc=InputDocumentation(doc="number of uniform samples (default: 1)")), ToolInput(tag="in_input_ext", input_type=File(optional=True), prefix="--inputext", doc=InputDocumentation(doc="input file extension (default: '')")), ToolInput(tag="in_output_ext", input_type=File(optional=True), prefix="--outputext", doc=InputDocumentation(doc="output file extension (default: '.dlcpar')")), ToolInput(tag="in_dup_cost", input_type=Float(optional=True), prefix="--dupcost", doc=InputDocumentation(doc="duplication cost (default: 1.0)")), ToolInput(tag="in_loss_cost", input_type=Float(optional=True), prefix="--losscost", doc=InputDocumentation(doc="loss cost (default: 1.0)")), ToolInput(tag="in_coal_cost", input_type=Float(optional=True), prefix="--coalcost", doc=InputDocumentation(doc="deep coalescence cost (default: 0.5)")), ToolInput(tag="in_no_prescreen", input_type=Boolean(optional=True), prefix="--no_prescreen", doc=InputDocumentation(doc="set to disable prescreen of locus maps")), ToolInput(tag="in_prescreen_min", input_type=Int(optional=True), prefix="--prescreen_min", doc=InputDocumentation(doc="prescreen locus maps if min (forward) cost exceeds\nthis value (default: 50)")), ToolInput(tag="in_prescreen_factor", input_type=Int(optional=True), prefix="--prescreen_factor", doc=InputDocumentation(doc="prescreen locus maps if (forward) cost exceeds this\nfactor * min (forward) cost (default: 10)")), ToolInput(tag="in_max_loci", input_type=Boolean(optional=True), prefix="--max_loci", doc=InputDocumentation(doc="=<max # of loci>\nmaximum # of co-existing loci (in each ancestral\nspecies), set to -1 for no limit (default: -1)")), ToolInput(tag="in_max_dups", input_type=Boolean(optional=True), prefix="--max_dups", doc=InputDocumentation(doc="=<max # of dups>\nmaximum # of duplications (in each ancestral species),\nset to -1 for no limit (default: 4)")), ToolInput(tag="in_max_losses", input_type=Boolean(optional=True), prefix="--max_losses", doc=InputDocumentation(doc="=<max # of losses>\nmaximum # of losses (in each ancestral species), set\nto -1 for no limit (default: 4)")), ToolInput(tag="in_allow_both", input_type=Boolean(optional=True), prefix="--allow_both", doc=InputDocumentation(doc="set to allow duplications on both children")), ToolInput(tag="in_seed", input_type=Int(optional=True), prefix="--seed", doc=InputDocumentation(doc="random number seed")), ToolInput(tag="in_output_format", input_type=Boolean(optional=True), prefix="--output_format", doc=InputDocumentation(doc="=[dlcpar|dlcoal]\nspecify output format (default: dlcpar)")), ToolInput(tag="in_log", input_type=Boolean(optional=True), prefix="--log", doc=InputDocumentation(doc="if given, output debugging log")), ToolInput(tag="in_dlc_par", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_is", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_a", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_phylogenetic", input_type=String(), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_program", input_type=String(), position=4, doc=InputDocumentation(doc="")), ToolInput(tag="in_for", input_type=String(), position=5, doc=InputDocumentation(doc="")), ToolInput(tag="in_finding", input_type=String(), position=6, doc=InputDocumentation(doc="")), ToolInput(tag="in_the", input_type=String(), position=7, doc=InputDocumentation(doc="")), ToolInput(tag="in_most", input_type=String(), position=8, doc=InputDocumentation(doc="")), ToolInput(tag="in_parsimonious", input_type=String(), position=9, doc=InputDocumentation(doc="")), ToolInput(tag="in_gene", input_type=String(), position=10, doc=InputDocumentation(doc="")), ToolInput(tag="in_tree", input_type=String(), position=11, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output_ext", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_ext", type_hint=File()), doc=OutputDocumentation(doc="output file extension (default: '.dlcpar')"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Dlcpar_V0_1_0().translate("wdl", allow_empty_container=True)

