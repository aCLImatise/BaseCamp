from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File

Ccconfig_V0_1_0 = CommandToolBuilder(tool="ccconfig", base_command=["ccconfig"], inputs=[ToolInput(tag="in_cc", input_type=Boolean(optional=True), prefix="--cc", doc=InputDocumentation(doc="compiler   compiler executable to test\ndefault: auto-determined")), ToolInput(tag="in_output_file", input_type=File(optional=True), prefix="--output-file", doc=InputDocumentation(doc="file       output filename\ndefault: output to stdout")), ToolInput(tag="in_output_format", input_type=Boolean(optional=True), prefix="--output-format", doc=InputDocumentation(doc="format     output format\ndefault: dumper")), ToolInput(tag="in_basename", input_type=Boolean(optional=True), prefix="--basename", doc=InputDocumentation(doc="name       basename of the temporary test files\ndefault: _t_e_s_t")), ToolInput(tag="in_inc_path", input_type=Boolean(optional=True), prefix="--inc-path", doc=InputDocumentation(doc="path       manually set compiler include path")), ToolInput(tag="in_preprocess", input_type=Boolean(optional=True), prefix="--preprocess", doc=InputDocumentation(doc="rule       compiler rule for preprocessing")), ToolInput(tag="in_compile_obj", input_type=Boolean(optional=True), prefix="--compile-obj", doc=InputDocumentation(doc="rule       compiler rule for compiling objects")), ToolInput(tag="in_compile_exe", input_type=Boolean(optional=True), prefix="--compile-exe", doc=InputDocumentation(doc="rule       compiler rule for compiling executables")), ToolInput(tag="in_c_ext", input_type=Boolean(optional=True), prefix="--c-ext", doc=InputDocumentation(doc="ext        extension of C source files")), ToolInput(tag="in_pp_ext", input_type=Boolean(optional=True), prefix="--pp-ext", doc=InputDocumentation(doc="ext        extension of preprocessor output files")), ToolInput(tag="in_obj_ext", input_type=Boolean(optional=True), prefix="--obj-ext", doc=InputDocumentation(doc="ext        extension of object files")), ToolInput(tag="in_exe_ext", input_type=Boolean(optional=True), prefix="--exe-ext", doc=InputDocumentation(doc="ext        extension of executable files")), ToolInput(tag="in_no_delete", input_type=Boolean(optional=True), prefix="--nodelete", doc=InputDocumentation(doc="don't delete temporary files")), ToolInput(tag="in_no_run", input_type=Boolean(optional=True), prefix="--norun", doc=InputDocumentation(doc="don't try to run executables")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="don't display anything")), ToolInput(tag="in_no_status", input_type=Boolean(optional=True), prefix="--nostatus", doc=InputDocumentation(doc="don't display status indicator")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="debug mode"))], outputs=[ToolOutput(tag="out_output_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_file", type_hint=File()), doc=OutputDocumentation(doc="file       output filename\ndefault: output to stdout"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Ccconfig_V0_1_0().translate("wdl", allow_empty_container=True)

