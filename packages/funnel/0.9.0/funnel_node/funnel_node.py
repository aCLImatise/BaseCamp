from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, File, String, Float, Directory

Funnel_Node_V0_1_0 = CommandToolBuilder(tool="funnel_node", base_command=["funnel", "node"], inputs=[ToolInput(tag="in_amazons_three_dot_disabled", input_type=Boolean(optional=True), prefix="--AmazonS3.Disabled", doc=InputDocumentation(doc="Disable storage backend")), ToolInput(tag="in_amazons_three_dot_max_retries", input_type=Int(optional=True), prefix="--AmazonS3.MaxRetries", doc=InputDocumentation(doc="Maximum number of times that a request will be retried for failures")), ToolInput(tag="in_bolt_db_dot_path", input_type=File(optional=True), prefix="--BoltDB.Path", doc=InputDocumentation(doc="Path to BoltDB database")), ToolInput(tag="in_compute", input_type=String(optional=True), prefix="--Compute", doc=InputDocumentation(doc="Name of compute backed to use")), ToolInput(tag="in_database", input_type=String(optional=True), prefix="--Database", doc=InputDocumentation(doc="Name of database backed to use")), ToolInput(tag="in_datastore_dotproject", input_type=String(optional=True), prefix="--Datastore.Project", doc=InputDocumentation(doc="Google project for Datastore")), ToolInput(tag="in_dynamo_db_dot_max_retries", input_type=Int(optional=True), prefix="--DynamoDB.MaxRetries", doc=InputDocumentation(doc="Maximum number of times that a request will be retried for failures")), ToolInput(tag="in_dynamo_db_dot_region", input_type=String(optional=True), prefix="--DynamoDB.Region", doc=InputDocumentation(doc="AWS region of DynamoDB tables")), ToolInput(tag="in_dynamo_db_dot_table_basename", input_type=String(optional=True), prefix="--DynamoDB.TableBasename", doc=InputDocumentation(doc="Basename of DynamoDB tables")), ToolInput(tag="in_elastic_dot_index_prefix", input_type=String(optional=True), prefix="--Elastic.IndexPrefix", doc=InputDocumentation(doc="Prefix to use for Elasticsearch indices")), ToolInput(tag="in_elastic_dot_url", input_type=String(optional=True), prefix="--Elastic.URL", doc=InputDocumentation(doc="Elasticsearch URL")), ToolInput(tag="in_event_writers", input_type=String(optional=True), prefix="--EventWriters", doc=InputDocumentation(doc="Name of an event writer backend to use. This flag can be used multiple times")), ToolInput(tag="in_google_storage_dot_disabled", input_type=Boolean(optional=True), prefix="--GoogleStorage.Disabled", doc=InputDocumentation(doc="Disable storage backend")), ToolInput(tag="in_http_storage_dot_disabled", input_type=Boolean(optional=True), prefix="--HTTPStorage.Disabled", doc=InputDocumentation(doc="Disable storage backend")), ToolInput(tag="in_http_storage_dot_timeout", input_type=Int(optional=True), prefix="--HTTPStorage.Timeout", doc=InputDocumentation(doc="Timeout in seconds for request (default 0s)")), ToolInput(tag="in_kafka_dot_servers", input_type=String(optional=True), prefix="--Kafka.Servers", doc=InputDocumentation(doc="Address of a Kafka server. This flag can be used multiple times")), ToolInput(tag="in_kafka_dot_topic", input_type=String(optional=True), prefix="--Kafka.Topic", doc=InputDocumentation(doc="Kafka topic to write events to")), ToolInput(tag="in_local_storage_dot_allowed_dirs", input_type=String(optional=True), prefix="--LocalStorage.AllowedDirs", doc=InputDocumentation(doc="Directories Funnel is allowed to access. This flag can be used multiple times")), ToolInput(tag="in_local_storage_dot_disabled", input_type=Boolean(optional=True), prefix="--LocalStorage.Disabled", doc=InputDocumentation(doc="Disable storage backend")), ToolInput(tag="in_logger_dot_formatter", input_type=String(optional=True), prefix="--Logger.Formatter", doc=InputDocumentation(doc="Logs formatter. One of ['text', 'json']")), ToolInput(tag="in_logger_dot_level", input_type=String(optional=True), prefix="--Logger.Level", doc=InputDocumentation(doc="Level of logging")), ToolInput(tag="in_logger_dot_output_file", input_type=File(optional=True), prefix="--Logger.OutputFile", doc=InputDocumentation(doc="File path to write logs to")), ToolInput(tag="in_mongo_db_dot_addrs", input_type=String(optional=True), prefix="--MongoDB.Addrs", doc=InputDocumentation(doc="Address of a MongoDB seed server. This flag can be used multiple times")), ToolInput(tag="in_mongo_db_dot_database", input_type=String(optional=True), prefix="--MongoDB.Database", doc=InputDocumentation(doc="Database name in MongoDB")), ToolInput(tag="in_mongo_db_dot_timeout", input_type=Int(optional=True), prefix="--MongoDB.Timeout", doc=InputDocumentation(doc="Timeout in seconds for initial connection and follow up operations (default 0s)")), ToolInput(tag="in_node_dot_resources_dot_cpus", input_type=Int(optional=True), prefix="--Node.Resources.Cpus", doc=InputDocumentation(doc="Cpus available to Node")), ToolInput(tag="in_node_dot_resources_dot_disk_gb", input_type=Float(optional=True), prefix="--Node.Resources.DiskGb", doc=InputDocumentation(doc="Free disk (GB) available to Node")), ToolInput(tag="in_node_dot_resources_do_tram_gb", input_type=Float(optional=True), prefix="--Node.Resources.RamGb", doc=InputDocumentation(doc="Ram (GB) available to Node")), ToolInput(tag="in_node_dot_timeout", input_type=Int(optional=True), prefix="--Node.Timeout", doc=InputDocumentation(doc="Node timeout in seconds (default 0s)")), ToolInput(tag="in_node_dot_update_rate", input_type=Int(optional=True), prefix="--Node.UpdateRate", doc=InputDocumentation(doc="Node update rate (default 0s)")), ToolInput(tag="in_rpcclient_dot_max_retries", input_type=Int(optional=True), prefix="--RPCClient.MaxRetries", doc=InputDocumentation(doc="Maximum number of times that a request will be retried for failures")), ToolInput(tag="in_rpcclient_dot_server_address", input_type=String(optional=True), prefix="--RPCClient.ServerAddress", doc=InputDocumentation(doc="RPC server address")), ToolInput(tag="in_rpcclient_dot_timeout", input_type=Int(optional=True), prefix="--RPCClient.Timeout", doc=InputDocumentation(doc="Request timeout for RPC client connections (default 0s)")), ToolInput(tag="in_server_dot_http_port", input_type=String(optional=True), prefix="--Server.HTTPPort", doc=InputDocumentation(doc="HTTP Port")), ToolInput(tag="in_server_dot_hostname", input_type=String(optional=True), prefix="--Server.HostName", doc=InputDocumentation(doc="Host name or IP")), ToolInput(tag="in_server_dot_rpc_port", input_type=String(optional=True), prefix="--Server.RPCPort", doc=InputDocumentation(doc="RPC Port")), ToolInput(tag="in_server_dot_service_name", input_type=String(optional=True), prefix="--Server.ServiceName", doc=InputDocumentation(doc="Host name or IP")), ToolInput(tag="in_swift_dot_chunksize_bytes", input_type=Int(optional=True), prefix="--Swift.ChunkSizeBytes", doc=InputDocumentation(doc="Size of chunks to use for large object creation")), ToolInput(tag="in_swift_dot_disabled", input_type=Boolean(optional=True), prefix="--Swift.Disabled", doc=InputDocumentation(doc="Disable storage backend")), ToolInput(tag="in_swift_dot_max_retries", input_type=Int(optional=True), prefix="--Swift.MaxRetries", doc=InputDocumentation(doc="Maximum number of times that a request will be retried for failures")), ToolInput(tag="in_worker_dot_leave_workdir", input_type=Boolean(optional=True), prefix="--Worker.LeaveWorkDir", doc=InputDocumentation(doc="Leave working directory after execution")), ToolInput(tag="in_worker_dot_log_tail_size", input_type=Int(optional=True), prefix="--Worker.LogTailSize", doc=InputDocumentation(doc="Max bytes to store for stdout/stderr")), ToolInput(tag="in_worker_dot_log_update_rate", input_type=Int(optional=True), prefix="--Worker.LogUpdateRate", doc=InputDocumentation(doc="How often to send stdout/stderr log updates (default 0s)")), ToolInput(tag="in_worker_dot_polling_rate", input_type=Int(optional=True), prefix="--Worker.PollingRate", doc=InputDocumentation(doc="How often to poll for cancel signals (default 0s)")), ToolInput(tag="in_worker_dot_workdir", input_type=Directory(optional=True), prefix="--Worker.WorkDir", doc=InputDocumentation(doc="Working directory")), ToolInput(tag="in_config", input_type=File(optional=True), prefix="--config", doc=InputDocumentation(doc="Config File")), ToolInput(tag="in_run", input_type=String(), position=0, doc=InputDocumentation(doc="Run a Funnel node."))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Funnel_Node_V0_1_0().translate("wdl", allow_empty_container=True)

