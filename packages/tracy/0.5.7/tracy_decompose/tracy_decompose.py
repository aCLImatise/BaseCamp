from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int

Tracy_Decompose_V0_1_0 = CommandToolBuilder(tool="tracy_decompose", base_command=["tracy", "decompose"], inputs=[ToolInput(tag="in_arg_gzipped_fasta", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="[ --genome ] arg                 (gzipped) fasta or wildtype ab1 file")), ToolInput(tag="in_arg_peak_ratio", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="[ --pratio ] arg (=0.330000013)  peak ratio to call base")), ToolInput(tag="in_arg_kmer_size", input_type=Boolean(optional=True), prefix="-k", doc=InputDocumentation(doc="[ --kmer ] arg (=15)             kmer size")), ToolInput(tag="in_arg_min_kmer", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="[ --support ] arg (=3)           min. kmer support")), ToolInput(tag="in_arg_max_indel", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="[ --maxindel ] arg (=1000)       max. indel size in Sanger trace")), ToolInput(tag="in_arg_annotate_variants", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="[ --annotate ] arg               annotate variants [homo_sapiens|homo_sapi\nens_hg19|mus_musculus|danio_rerio|...]")), ToolInput(tag="in_call_variants_trace", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="[ --callVariants ]               call variants in trace")), ToolInput(tag="in_arg_gap_open", input_type=Boolean(optional=True), prefix="-g", doc=InputDocumentation(doc="[ --gapopen ] arg (=-10)         gap open")), ToolInput(tag="in_arg_gap_extension", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc="[ --gapext ] arg (=-4)           gap extension")), ToolInput(tag="in__arg_match", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="[ --match ] arg (=3)             match")), ToolInput(tag="in__arg_mismatch", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="[ --mismatch ] arg (=-5)         mismatch")), ToolInput(tag="in__usetrimleft_trimright", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="[ --trim ] arg (=0)              trimming stringency [1:9], 0: use\ntrimLeft and trimRight")), ToolInput(tag="in_arg_trim_size_left", input_type=Boolean(optional=True), prefix="-q", doc=InputDocumentation(doc="[ --trimLeft ] arg (=50)         trim size left")), ToolInput(tag="in_arg_trim_size_right", input_type=Boolean(optional=True), prefix="-u", doc=InputDocumentation(doc="[ --trimRight ] arg (=50)        trim size right")), ToolInput(tag="in_arg_alignment_line", input_type=Boolean(optional=True), prefix="-l", doc=InputDocumentation(doc="[ --linelimit ] arg (=60)        alignment line length")), ToolInput(tag="in_arg_output_prefix", input_type=Boolean(optional=True), prefix="-o", doc=InputDocumentation(doc="[ --outprefix ] arg (=out)       output prefix")), ToolInput(tag="in_trace_do_tab_one", input_type=Int(), position=0, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Tracy_Decompose_V0_1_0().translate("wdl", allow_empty_container=True)

