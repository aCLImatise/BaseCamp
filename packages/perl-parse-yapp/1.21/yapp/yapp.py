from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Boolean

Yapp_V0_1_0 = CommandToolBuilder(tool="yapp", base_command=["yapp"], inputs=[ToolInput(tag="in_give_your_module", input_type=String(optional=True), prefix="-m", doc=InputDocumentation(doc="Give your parser module the name <module>\ndefault is <grammar>")), ToolInput(tag="in_create_file_grammaroutput", input_type=File(optional=True), prefix="-v", doc=InputDocumentation(doc="Create a file <grammar>.output describing your parser")), ToolInput(tag="in_create_standalone_module", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="Create a standalone module in which the driver is included")), ToolInput(tag="in_disable_source_file", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="Disable source file line numbering embedded in your parser")), ToolInput(tag="in_create_file_outfile", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="Create the file <outfile> for your parser module\nDefault is <grammar>.pm or, if -m A::Module::Name is\nspecified, Name.pm")), ToolInput(tag="in_uses_file_filename", input_type=File(optional=True), prefix="-t", doc=InputDocumentation(doc="Uses the file <filename> as a template for creating the parser\nmodule file.  Default is to use internal template defined\nin Parse::Yapp::Output")), ToolInput(tag="in_adds_very_first", input_type=File(optional=True), prefix="-b", doc=InputDocumentation(doc="Adds '#!<shebang>' as the very first line of the output file")), ToolInput(tag="in_display_current_version", input_type=Boolean(optional=True), prefix="-V", doc=InputDocumentation(doc="Display current version of Parse::Yapp and gracefully exits")), ToolInput(tag="in_more_options", input_type=Boolean(optional=True), prefix="-MORE_OPTIONS", doc=InputDocumentation(doc="")), ToolInput(tag="in_options", input_type=Boolean(optional=True), prefix="-OPTIONS", doc=InputDocumentation(doc="")), ToolInput(tag="in_grammar", input_type=String(), position=2, doc=InputDocumentation(doc="The grammar file. If no suffix is given, and the file\ndoes not exists, .yp is added"))], outputs=[ToolOutput(tag="out_create_file_grammaroutput", output_type=File(optional=True), selector=InputSelector(input_to_select="in_create_file_grammaroutput", type_hint=File()), doc=OutputDocumentation(doc="Create a file <grammar>.output describing your parser")), ToolOutput(tag="out_uses_file_filename", output_type=File(optional=True), selector=InputSelector(input_to_select="in_uses_file_filename", type_hint=File()), doc=OutputDocumentation(doc="Uses the file <filename> as a template for creating the parser\nmodule file.  Default is to use internal template defined\nin Parse::Yapp::Output")), ToolOutput(tag="out_adds_very_first", output_type=File(optional=True), selector=InputSelector(input_to_select="in_adds_very_first", type_hint=File()), doc=OutputDocumentation(doc="Adds '#!<shebang>' as the very first line of the output file"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Yapp_V0_1_0().translate("wdl", allow_empty_container=True)

