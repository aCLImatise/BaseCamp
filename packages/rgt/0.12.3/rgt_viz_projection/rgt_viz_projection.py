from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Directory

Rgt_Viz_Projection_V0_1_0 = CommandToolBuilder(tool="rgt_viz_projection", base_command=["rgt-viz", "projection"], inputs=[ToolInput(tag="in_file_name_multiplereferences", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="The file name of the reference Experimental Matrix. Multiple\nreferences are acceptable. (default: None)")), ToolInput(tag="in_file_name_query", input_type=Boolean(optional=True), prefix="-q", doc=InputDocumentation(doc="The file name of the query Experimental Matrix. Multiple\nqueries are acceptable. (default: None)")), ToolInput(tag="in_directory_name_output", input_type=Directory(optional=True), prefix="-o", doc=InputDocumentation(doc="The directory name for the output files. For example, project\nname. (default: None)")), ToolInput(tag="in_title_shown_top", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="The title shown on the top of the plot and also the folder\nname. (default: projection_test)")), ToolInput(tag="in_group_data_matrix", input_type=Boolean(optional=True), prefix="-g", doc=InputDocumentation(doc="Group the data by any optional column (for example, 'cell') of\nexperimental matrix, or None. (default: None)")), ToolInput(tag="in_color_data_matrix", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="Color the data by any optional column (for example, 'cell') of\nexperimental matrix, or None. (default: regions)")), ToolInput(tag="in_bg", input_type=Boolean(optional=True), prefix="-bg", doc=InputDocumentation(doc="Define a BED file as background. If not defined, the\nbackground is whole genome according to the given organism.\n(default: None)")), ToolInput(tag="in_union", input_type=Boolean(optional=True), prefix="-union", doc=InputDocumentation(doc="Take the union of references as background for binominal test.\n(default: False)")), ToolInput(tag="in_organism", input_type=Boolean(optional=True), prefix="-organism", doc=InputDocumentation(doc="Define the organism. (default: hg19)")), ToolInput(tag="in_log", input_type=Boolean(optional=True), prefix="-log", doc=InputDocumentation(doc="Set y axis of the plot in log scale. (default: False)")), ToolInput(tag="in_color", input_type=Boolean(optional=True), prefix="-color", doc=InputDocumentation(doc="Define the specific colors with the given column 'color' in\nexperimental matrix. The color should be in the format of\nmatplotlib.colors. For example, 'r' for red, 'b' for blue, or\n'(100, 35, 138)' for RGB. (default: False)")), ToolInput(tag="in_show", input_type=Boolean(optional=True), prefix="-show", doc=InputDocumentation(doc="Show the figure in the screen. (default: False)")), ToolInput(tag="in_table", input_type=Boolean(optional=True), prefix="-table", doc=InputDocumentation(doc="Store the tables of the figure in text format. (default:\nFalse)")), ToolInput(tag="in_bed", input_type=Boolean(optional=True), prefix="-bed", doc=InputDocumentation(doc="Output BED files for the regions of query which overlap the\nreference. (default: False)")), ToolInput(tag="in_pw", input_type=Boolean(optional=True), prefix="-pw", doc=InputDocumentation(doc="Define the width of single panel. (default: 5)")), ToolInput(tag="in_ph", input_type=Boolean(optional=True), prefix="-ph", doc=InputDocumentation(doc="Define the height of single panel. (default: 3)")), ToolInput(tag="in_cfp", input_type=Boolean(optional=True), prefix="-cfp", doc=InputDocumentation(doc="Define the cutoff of the proportion. (default: 0)")), ToolInput(tag="in_load", input_type=Boolean(optional=True), prefix="-load", doc=InputDocumentation(doc="Load the BED files later during processing, which saves memory\nusage when dealing with large number of BED files.\n"))], outputs=[ToolOutput(tag="out_directory_name_output", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_directory_name_output", type_hint=File()), doc=OutputDocumentation(doc="The directory name for the output files. For example, project\nname. (default: None)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Rgt_Viz_Projection_V0_1_0().translate("wdl", allow_empty_container=True)

