from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String, Int

Sam_Dump_V0_1_0 = CommandToolBuilder(tool="sam_dump", base_command=["sam-dump"], inputs=[ToolInput(tag="in_unaligned", input_type=Boolean(optional=True), prefix="--unaligned", doc=InputDocumentation(doc="output unaligned reads along with aligned")), ToolInput(tag="in_cigar_long", input_type=Boolean(optional=True), prefix="--cigar-long", doc=InputDocumentation(doc="output long version of CIGAR")), ToolInput(tag="in_cigar_cg", input_type=Boolean(optional=True), prefix="--cigar-CG", doc=InputDocumentation(doc="output CG version of CIGAR")), ToolInput(tag="in_header", input_type=Boolean(optional=True), prefix="--header", doc=InputDocumentation(doc="always reconstruct header")), ToolInput(tag="in_header_file", input_type=File(optional=True), prefix="--header-file", doc=InputDocumentation(doc="take all headers from this file")), ToolInput(tag="in_no_header", input_type=Boolean(optional=True), prefix="--no-header", doc=InputDocumentation(doc="do not output headers")), ToolInput(tag="in_header_comment", input_type=String(optional=True), prefix="--header-comment", doc=InputDocumentation(doc="[,...] add comment to header. Use multiple times\nfor several lines. Use quotes")), ToolInput(tag="in_aligned_region", input_type=Boolean(optional=True), prefix="--aligned-region", doc=InputDocumentation(doc="<name[:from-to]>[,...]\nFilter by position on genome. Name can\neither be file specific name (ex: 'chr1'\nor '1'). 'from' and 'to' (inclusive) are\n1-based coordinates")), ToolInput(tag="in_mate_pair_distance", input_type=Boolean(optional=True), prefix="--matepair-distance", doc=InputDocumentation(doc="<from-to|'unknown'>\nFilter by distance between matepairs. Use\n'unknown' to find matepairs split\nbetween the references. Use from-to\n(inclusive) to limit matepair distance\non the same reference")), ToolInput(tag="in_seq_id", input_type=Boolean(optional=True), prefix="--seqid", doc=InputDocumentation(doc="Print reference SEQ_ID in RNAME instead of")), ToolInput(tag="in_bzip_two", input_type=Boolean(optional=True), prefix="--bzip2", doc=InputDocumentation(doc="Compress output using bzip2")), ToolInput(tag="in_spot_group", input_type=Boolean(optional=True), prefix="--spot-group", doc=InputDocumentation(doc="Add .SPOT_GROUP to QNAME")), ToolInput(tag="in_fast_q", input_type=Boolean(optional=True), prefix="--fastq", doc=InputDocumentation(doc="Produce FastQ formatted output")), ToolInput(tag="in_fast_a", input_type=Boolean(optional=True), prefix="--fasta", doc=InputDocumentation(doc="Produce Fasta formatted output")), ToolInput(tag="in_prefix", input_type=String(optional=True), prefix="--prefix", doc=InputDocumentation(doc="Prefix QNAME: prefix.QNAME")), ToolInput(tag="in_reverse", input_type=Boolean(optional=True), prefix="--reverse", doc=InputDocumentation(doc="Reverse unaligned reads according to read")), ToolInput(tag="in_xi", input_type=Boolean(optional=True), prefix="--XI", doc=InputDocumentation(doc="Output cSRA alignment id in XI column")), ToolInput(tag="in_qual_quant", input_type=String(optional=True), prefix="--qual-quant", doc=InputDocumentation(doc="Quality scores quantization level string\nlike '1:10,10:20,20:30,30:-'")), ToolInput(tag="in_cg_evidence", input_type=Boolean(optional=True), prefix="--CG-evidence", doc=InputDocumentation(doc="Output CG evidence aligned to reference")), ToolInput(tag="in_cg_ev_dnb", input_type=Boolean(optional=True), prefix="--CG_ev-dnb", doc=InputDocumentation(doc="Output CG evidence DNB's aligned to")), ToolInput(tag="in_cg_sam", input_type=Boolean(optional=True), prefix="--CG-SAM", doc=InputDocumentation(doc="Output CG evidence DNB's aligned to")), ToolInput(tag="in_output_file", input_type=File(optional=True), prefix="--output-file", doc=InputDocumentation(doc="print output into this file (instead of\nSTDOUT)")), ToolInput(tag="in_output_buffer_size", input_type=Int(optional=True), prefix="--output-buffer-size", doc=InputDocumentation(doc="size of output-buffer (dflt:32k, 0...off)")), ToolInput(tag="in_cache_report", input_type=Boolean(optional=True), prefix="--cachereport", doc=InputDocumentation(doc="print report about mate-pair-cache")), ToolInput(tag="in_unaligned_spots_only", input_type=Boolean(optional=True), prefix="--unaligned-spots-only", doc=InputDocumentation(doc="output reads for spots with no aligned")), ToolInput(tag="in_min_mapq", input_type=Int(optional=True), prefix="--min-mapq", doc=InputDocumentation(doc="min. mapq an alignment has to have, to be")), ToolInput(tag="in_rna_splicing", input_type=Boolean(optional=True), prefix="--rna-splicing", doc=InputDocumentation(doc="modify cigar-string (replace .D. with .N.)\nand add output flags (XS:A:+/-) when\nrna-splicing is detected by match to\nspliceosome recognition sites")), ToolInput(tag="in_rna_splice_level", input_type=Int(optional=True), prefix="--rna-splice-level", doc=InputDocumentation(doc="level of rna-splicing detection (0,1,2)\nwhen testing for spliceosome recognition\nsites 0=perfect match, 1=one mismatch,\n2=two mismatches, one on each site")), ToolInput(tag="in_rna_splice_log", input_type=File(optional=True), prefix="--rna-splice-log", doc=InputDocumentation(doc="file, into which rna-splice events are")), ToolInput(tag="in_ngc", input_type=File(optional=True), prefix="--ngc", doc=InputDocumentation(doc="<path> to ngc file")), ToolInput(tag="in_perm", input_type=File(optional=True), prefix="--perm", doc=InputDocumentation(doc="<path> to permission file")), ToolInput(tag="in_location", input_type=String(optional=True), prefix="--location", doc=InputDocumentation(doc="location in cloud")), ToolInput(tag="in_cart", input_type=File(optional=True), prefix="--cart", doc=InputDocumentation(doc="<path> to cart file")), ToolInput(tag="in_disable_multithreading", input_type=Boolean(optional=True), prefix="--disable-multithreading", doc=InputDocumentation(doc="disable multithreading")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Increase the verbosity of the program\nstatus messages. Use multiple times for\nmore verbosity.")), ToolInput(tag="in_log_level", input_type=Int(optional=True), prefix="--log-level", doc=InputDocumentation(doc="Logging level as number or enum string.\nOne of\n(fatal|sys|int|err|warn|info|debug) or\n(0-6) Current/default is warn")), ToolInput(tag="in_option_file", input_type=File(optional=True), prefix="--option-file", doc=InputDocumentation(doc="Read more options and parameters from the")), ToolInput(tag="in___primary", input_type=String(), position=0, doc=InputDocumentation(doc="-1|--primary                     output only primary alignments")), ToolInput(tag="in_name", input_type=String(), position=1, doc=InputDocumentation(doc="-=|--hide-identical              Output '=' if base is identical to")), ToolInput(tag="in_gzip_output_using", input_type=String(), position=2, doc=InputDocumentation(doc="--gzip                        Compress output using gzip")), ToolInput(tag="in_type", input_type=String(), position=3, doc=InputDocumentation(doc="--cigar-cg-merge              Apply CG fixups to CIGAR/SEQ/QUAL and")), ToolInput(tag="in_evidence", input_type=String(), position=0, doc=InputDocumentation(doc="--CG-mappings                 Output CG sequences aligned to reference")), ToolInput(tag="in_report_report_options", input_type=String(), position=1, doc=InputDocumentation(doc="--report                      report options instead of executing")), ToolInput(tag="in__cgnames_prints", input_type=String(), position=2, doc=InputDocumentation(doc="--CG-names                    prints cg-style spotgroup.spotid formed")), ToolInput(tag="in_names", input_type=String(), position=3, doc=InputDocumentation(doc="--cursor-cache <size>         open cached cursor with this size")), ToolInput(tag="in_printed", input_type=String(), position=4, doc=InputDocumentation(doc="--no-mate-cache               do not use mate-cache, slower but less")), ToolInput(tag="in_written", input_type=String(), position=0, doc=InputDocumentation(doc="--with-md-flag                print MD-flag")), ToolInput(tag="in_file_dot", input_type=File(), position=1, doc=InputDocumentation(doc="-h|--help                        print this message"))], outputs=[ToolOutput(tag="out_output_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_file", type_hint=File()), doc=OutputDocumentation(doc="print output into this file (instead of\nSTDOUT)"))], container="quay.io/biocontainers/sra-tools:2.10.9--pl526haddd2b5_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Sam_Dump_V0_1_0().translate("wdl")

