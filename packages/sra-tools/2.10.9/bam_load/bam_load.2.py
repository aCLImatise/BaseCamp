from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean, Int, String

Bam_Load_2_V0_1_0 = CommandToolBuilder(tool="bam_load.2", base_command=["bam-load.2"], inputs=[ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="Path and Name of the output database.")), ToolInput(tag="in_input", input_type=File(optional=True), prefix="--input", doc=InputDocumentation(doc="Path where to get fasta files from.")), ToolInput(tag="in_config", input_type=File(optional=True), prefix="--config", doc=InputDocumentation(doc="Path to configuration file: maps the input\nBAM file's reference names to the\nequivalent GenBank accession. It is\ntab-delimited text file with unix line\nendings (\n LF) with the following fields\nin this order: #1 reference name as it\noccurs in the BAM file's SN field of @SQ\nheader record; #2 INSDC reference ID")), ToolInput(tag="in_header", input_type=File(optional=True), prefix="--header", doc=InputDocumentation(doc="path to file containing the SAM header to\nstore in the resulting cSRA, recommended in\ncase of multiple input BAMs")), ToolInput(tag="in_tmpfs", input_type=File(optional=True), prefix="--tmpfs", doc=InputDocumentation(doc="Path to be used for scratch files.")), ToolInput(tag="in_unaligned", input_type=File(optional=True), prefix="--unaligned", doc=InputDocumentation(doc="Specify file without aligned reads")), ToolInput(tag="in_accept_dups", input_type=Boolean(optional=True), prefix="--accept-dups", doc=InputDocumentation(doc="Accept spots inconsistent PCR duplicate")), ToolInput(tag="in_no_match_log", input_type=File(optional=True), prefix="--nomatch-log", doc=InputDocumentation(doc="Where to write info for alignments with no\nmatching bases")), ToolInput(tag="in_qual_quant", input_type=Int(optional=True), prefix="--qual-quant", doc=InputDocumentation(doc="Quality scores quantization level, can be\nnumber (0: none, 1: 2bit, 2: 1bit), or\nstring like '1:10,10:20,20:30,30:-' (which\nis equivalent to 1) (nb. the endpoint is\nexclusive).")), ToolInput(tag="in_min_mapq", input_type=Int(optional=True), prefix="--min-mapq", doc=InputDocumentation(doc="Filter secondary alignments by minimum\nmapping quality.")), ToolInput(tag="in_cache_size", input_type=Int(optional=True), prefix="--cache-size", doc=InputDocumentation(doc="Set the cache size in MB for the temporary")), ToolInput(tag="in_minimum_match", input_type=Int(optional=True), prefix="--minimum-match", doc=InputDocumentation(doc="minimum number of matches for an alignment")), ToolInput(tag="in_no_secondary", input_type=Boolean(optional=True), prefix="--no-secondary", doc=InputDocumentation(doc="ignore alignments marked as secondary")), ToolInput(tag="in_unsorted", input_type=Boolean(optional=True), prefix="--unsorted", doc=InputDocumentation(doc="Tell the loader to expect unsorted input\n(requires more memory)")), ToolInput(tag="in_sorted", input_type=Boolean(optional=True), prefix="--sorted", doc=InputDocumentation(doc="Tell the loader to require sorted input")), ToolInput(tag="in_no_verify", input_type=Boolean(optional=True), prefix="--no-verify", doc=InputDocumentation(doc="Skip verify existence of references from\nthe BAM file")), ToolInput(tag="in_only_verify", input_type=Boolean(optional=True), prefix="--only-verify", doc=InputDocumentation(doc="Exit after verifying existence of\nreferences from the BAM file")), ToolInput(tag="in_use_qual", input_type=Boolean(optional=True), prefix="--use-QUAL", doc=InputDocumentation(doc="use QUAL column for quality values (default\nis to use OQ if it is available)")), ToolInput(tag="in_ref_config", input_type=Boolean(optional=True), prefix="--ref-config", doc=InputDocumentation(doc="Only process alignments to references in\nthe config file")), ToolInput(tag="in_ref_filter", input_type=String(optional=True), prefix="--ref-filter", doc=InputDocumentation(doc="Only process alignments to the given")), ToolInput(tag="in_keep_mismatch_qual", input_type=Boolean(optional=True), prefix="--keep-mismatch-qual", doc=InputDocumentation(doc="Don't quantized quality at mismatched")), ToolInput(tag="in_max_err_count", input_type=Int(optional=True), prefix="--max-err-count", doc=InputDocumentation(doc="Set the maximum number of errors to ignore\nfrom the BAM file")), ToolInput(tag="in_ref_file", input_type=File(optional=True), prefix="--ref-file", doc=InputDocumentation(doc="path to fasta file with references")), ToolInput(tag="in_ti", input_type=Boolean(optional=True), prefix="--TI", doc=InputDocumentation(doc="for trace alignments")), ToolInput(tag="in_max_warning_dup_flag", input_type=Int(optional=True), prefix="--max-warning-dup-flag", doc=InputDocumentation(doc="set limit for number of duplicate flag\nmismatch warnings")), ToolInput(tag="in_accept_hard_clip", input_type=Boolean(optional=True), prefix="--accept-hard-clip", doc=InputDocumentation(doc="accept hard clipping in CIGAR")), ToolInput(tag="in_allow_multi_map", input_type=Boolean(optional=True), prefix="--allow-multi-map", doc=InputDocumentation(doc="allow the same reference to be mapped to\nmultiple names in the input files (default\nis disallow, old behaviors was to allow it)")), ToolInput(tag="in_make_spots_with_secondary", input_type=Boolean(optional=True), prefix="--make-spots-with-secondary", doc=InputDocumentation(doc="use secondary alignments for constructing")), ToolInput(tag="in_xml_log", input_type=File(optional=True), prefix="--xml-log", doc=InputDocumentation(doc="produce XML-formatted log file")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Increase the verbosity of the program\nstatus messages. Use multiple times for more\nverbosity. Negates quiet.")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="Turn off all status messages for the\nprogram. Negated by verbose.")), ToolInput(tag="in_option_file", input_type=File(optional=True), prefix="--option-file", doc=InputDocumentation(doc="Read more options and parameters from the")), ToolInput(tag="in_flags", input_type=String(), position=0, doc=InputDocumentation(doc="--accept-nomatch                 Accept alignments with no matching bases ")), ToolInput(tag="in_indices", input_type=String(), position=1, doc=InputDocumentation(doc="--no-cs                          turn off awareness of colorspace ")), ToolInput(tag="in_reference", input_type=String(), position=2, doc=InputDocumentation(doc="--edit-aligned-qual <new-value>  Convert quality at aligned positions to ")), ToolInput(tag="in_positions", input_type=String(), position=0, doc=InputDocumentation(doc="--max-rec-count <number>         Set the maximum number of records to ")), ToolInput(tag="in_spots", input_type=String(), position=0, doc=InputDocumentation(doc="--defer-secondary                defer processing of secondary alignments ")), ToolInput(tag="in_quit_dot", input_type=String(), position=0, doc=InputDocumentation(doc="-L|--log-level <level>           Logging level as number or enum string. One ")), ToolInput(tag="in_file_dot", input_type=File(), position=0, doc=InputDocumentation(doc="bam-load.2 : 2.10.9"))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="Path and Name of the output database."))], container="quay.io/biocontainers/sra-tools:2.10.9--pl526haddd2b5_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bam_Load_2_V0_1_0().translate("wdl")

