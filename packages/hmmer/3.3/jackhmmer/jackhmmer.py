from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, File, String, Boolean, Float

Jackhmmer_V0_1_0 = CommandToolBuilder(tool="jackhmmer", base_command=["jackhmmer"], inputs=[ToolInput(tag="in_set_maximum_number", input_type=Int(optional=True), prefix="-N", doc=InputDocumentation(doc=": set maximum number of iterations to <n>  [5]  (n>0)")), ToolInput(tag="in_direct_output_file", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc=": direct output to file <f>, not stdout")), ToolInput(tag="in_save_multiple_alignment", input_type=File(optional=True), prefix="-A", doc=InputDocumentation(doc=": save multiple alignment of hits to file <f>")), ToolInput(tag="in_tbl_out", input_type=File(optional=True), prefix="--tblout", doc=InputDocumentation(doc=": save parseable table of per-sequence hits to file <f>")), ToolInput(tag="in_dom_tbl_out", input_type=File(optional=True), prefix="--domtblout", doc=InputDocumentation(doc=": save parseable table of per-domain hits to file <f>")), ToolInput(tag="in_chk_hmm", input_type=String(optional=True), prefix="--chkhmm", doc=InputDocumentation(doc=": save HMM checkpoints to files <f>-<iteration>.hmm")), ToolInput(tag="in_ch_kali", input_type=String(optional=True), prefix="--chkali", doc=InputDocumentation(doc=": save alignment checkpoints to files <f>-<iteration>.sto")), ToolInput(tag="in_acc", input_type=Boolean(optional=True), prefix="--acc", doc=InputDocumentation(doc=": prefer accessions over names in output")), ToolInput(tag="in_no_ali", input_type=Boolean(optional=True), prefix="--noali", doc=InputDocumentation(doc=": don't output alignments, so output is smaller")), ToolInput(tag="in_no_text_w", input_type=Boolean(optional=True), prefix="--notextw", doc=InputDocumentation(doc=": unlimit ASCII text output line width")), ToolInput(tag="in_text_w", input_type=Int(optional=True), prefix="--textw", doc=InputDocumentation(doc=": set max width of ASCII text output lines  [120]  (n>=120)")), ToolInput(tag="in_popen", input_type=String(optional=True), prefix="--popen", doc=InputDocumentation(doc=": gap open probability")), ToolInput(tag="in_p_extend", input_type=String(optional=True), prefix="--pextend", doc=InputDocumentation(doc=": gap extend probability")), ToolInput(tag="in_mx", input_type=String(optional=True), prefix="--mx", doc=InputDocumentation(doc=": substitution score matrix choice (of some built-in matrices)")), ToolInput(tag="in_mx_file", input_type=File(optional=True), prefix="--mxfile", doc=InputDocumentation(doc=": read substitution score matrix from file <f>")), ToolInput(tag="in_report_sequences_threshold", input_type=Float(optional=True), prefix="-E", doc=InputDocumentation(doc=": report sequences <= this E-value threshold in output  [10.0]  (x>0)")), ToolInput(tag="in_report_sequences_score", input_type=String(optional=True), prefix="-T", doc=InputDocumentation(doc=": report sequences >= this score threshold in output")), ToolInput(tag="in_dome", input_type=Float(optional=True), prefix="--domE", doc=InputDocumentation(doc=": report domains <= this E-value threshold in output  [10.0]  (x>0)")), ToolInput(tag="in_do_mt", input_type=String(optional=True), prefix="--domT", doc=InputDocumentation(doc=": report domains >= this score cutoff in output")), ToolInput(tag="in_ince", input_type=String(optional=True), prefix="--incE", doc=InputDocumentation(doc=": consider sequences <= this E-value threshold as significant")), ToolInput(tag="in_in_ct", input_type=String(optional=True), prefix="--incT", doc=InputDocumentation(doc=": consider sequences >= this score threshold as significant")), ToolInput(tag="in_inc_dome", input_type=String(optional=True), prefix="--incdomE", doc=InputDocumentation(doc=": consider domains <= this E-value threshold as significant")), ToolInput(tag="in_inc_do_mt", input_type=String(optional=True), prefix="--incdomT", doc=InputDocumentation(doc=": consider domains >= this score threshold as significant")), ToolInput(tag="in_max", input_type=Boolean(optional=True), prefix="--max", doc=InputDocumentation(doc=": Turn all heuristic filters off (less speed, more power)")), ToolInput(tag="in_fone", input_type=Int(optional=True), prefix="--F1", doc=InputDocumentation(doc=": Stage 1 (MSV) threshold: promote hits w/ P <= F1  [0.02]")), ToolInput(tag="in_f_two", input_type=Int(optional=True), prefix="--F2", doc=InputDocumentation(doc=": Stage 2 (Vit) threshold: promote hits w/ P <= F2  [1e-3]")), ToolInput(tag="in_f_three", input_type=Int(optional=True), prefix="--F3", doc=InputDocumentation(doc=": Stage 3 (Fwd) threshold: promote hits w/ P <= F3  [1e-5]")), ToolInput(tag="in_no_bias", input_type=Boolean(optional=True), prefix="--nobias", doc=InputDocumentation(doc=": turn off composition bias filter")), ToolInput(tag="in_frag_thresh", input_type=Float(optional=True), prefix="--fragthresh", doc=InputDocumentation(doc=": if L <= x*alen, tag sequence as a fragment  [0.5]  (0<=x<=1)")), ToolInput(tag="in_wpb", input_type=Boolean(optional=True), prefix="--wpb", doc=InputDocumentation(doc=": Henikoff position-based weights  [default]")), ToolInput(tag="in_wgs_c", input_type=Boolean(optional=True), prefix="--wgsc", doc=InputDocumentation(doc=": Gerstein/Sonnhammer/Chothia tree weights")), ToolInput(tag="in_w_blosum", input_type=Boolean(optional=True), prefix="--wblosum", doc=InputDocumentation(doc=": Henikoff simple filter weights")), ToolInput(tag="in_w_none", input_type=Boolean(optional=True), prefix="--wnone", doc=InputDocumentation(doc=": don't do any relative weighting; set all to 1")), ToolInput(tag="in_wid", input_type=Float(optional=True), prefix="--wid", doc=InputDocumentation(doc=": for --wblosum: set identity cutoff  [0.62]  (0<=x<=1)")), ToolInput(tag="in_e_ent", input_type=Boolean(optional=True), prefix="--eent", doc=InputDocumentation(doc=": adjust eff seq # to achieve relative entropy target")), ToolInput(tag="in_e_ent_exp", input_type=Boolean(optional=True), prefix="--eentexp", doc=InputDocumentation(doc=": adjust eff seq # to reach rel. ent. target using exp scaling")), ToolInput(tag="in_ec_lust", input_type=Boolean(optional=True), prefix="--eclust", doc=InputDocumentation(doc=": eff seq # is # of single linkage clusters")), ToolInput(tag="in_en_one", input_type=Boolean(optional=True), prefix="--enone", doc=InputDocumentation(doc=": no effective seq # weighting: just use nseq")), ToolInput(tag="in_e_set", input_type=String(optional=True), prefix="--eset", doc=InputDocumentation(doc=": set eff seq # for all models to <x>")), ToolInput(tag="in_ere", input_type=String(optional=True), prefix="--ere", doc=InputDocumentation(doc=": for --eent[exp]: set minimum rel entropy/position to <x>")), ToolInput(tag="in_e_sigma", input_type=String(optional=True), prefix="--esigma", doc=InputDocumentation(doc=": for --eent[exp]: set sigma param to <x>")), ToolInput(tag="in_eid", input_type=String(optional=True), prefix="--eid", doc=InputDocumentation(doc=": for --eclust: set fractional identity cutoff to <x>")), ToolInput(tag="in_p_none", input_type=Boolean(optional=True), prefix="--pnone", doc=InputDocumentation(doc=": don't use any prior; parameters are frequencies")), ToolInput(tag="in_pla_place", input_type=Boolean(optional=True), prefix="--plaplace", doc=InputDocumentation(doc=": use a Laplace +1 prior")), ToolInput(tag="in_eml", input_type=Int(optional=True), prefix="--EmL", doc=InputDocumentation(doc=": length of sequences for MSV Gumbel mu fit  [200]  (n>0)")), ToolInput(tag="in_emn", input_type=Int(optional=True), prefix="--EmN", doc=InputDocumentation(doc=": number of sequences for MSV Gumbel mu fit  [200]  (n>0)")), ToolInput(tag="in_evl", input_type=Int(optional=True), prefix="--EvL", doc=InputDocumentation(doc=": length of sequences for Viterbi Gumbel mu fit  [200]  (n>0)")), ToolInput(tag="in_evn", input_type=Int(optional=True), prefix="--EvN", doc=InputDocumentation(doc=": number of sequences for Viterbi Gumbel mu fit  [200]  (n>0)")), ToolInput(tag="in_efl", input_type=Int(optional=True), prefix="--EfL", doc=InputDocumentation(doc=": length of sequences for Forward exp tail tau fit  [100]  (n>0)")), ToolInput(tag="in_efn", input_type=Int(optional=True), prefix="--EfN", doc=InputDocumentation(doc=": number of sequences for Forward exp tail tau fit  [200]  (n>0)")), ToolInput(tag="in_eft", input_type=Float(optional=True), prefix="--Eft", doc=InputDocumentation(doc=": tail mass for Forward exponential tail tau fit  [0.04]  (0<x<1)")), ToolInput(tag="in_no_null_two", input_type=Boolean(optional=True), prefix="--nonull2", doc=InputDocumentation(doc=": turn off biased composition score corrections")), ToolInput(tag="in_set_comparisons_done", input_type=String(optional=True), prefix="-Z", doc=InputDocumentation(doc=": set # of comparisons done, for E-value calculation")), ToolInput(tag="in_do_mz", input_type=String(optional=True), prefix="--domZ", doc=InputDocumentation(doc=": set # of significant seqs, for domain E-value calculation")), ToolInput(tag="in_seed", input_type=Int(optional=True), prefix="--seed", doc=InputDocumentation(doc=": set RNG seed to <n> (if 0: one-time arbitrary seed)  [42]")), ToolInput(tag="in_q_format", input_type=String(optional=True), prefix="--qformat", doc=InputDocumentation(doc=": assert query <seqfile> is in format <s>: no autodetection")), ToolInput(tag="in_t_format", input_type=String(optional=True), prefix="--tformat", doc=InputDocumentation(doc=": assert target <seqdb> is in format <s>>: no autodetection")), ToolInput(tag="in_cpu", input_type=Int(optional=True), prefix="--cpu", doc=InputDocumentation(doc=": number of parallel CPU workers to use for multithreads  [2]")), ToolInput(tag="in_options", input_type=Boolean(optional=True), prefix="-options", doc=InputDocumentation(doc="")), ToolInput(tag="in_seq_file", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_seq_db", input_type=String(), position=1, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_direct_output_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_direct_output_file", type_hint=File()), doc=OutputDocumentation(doc=": direct output to file <f>, not stdout"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Jackhmmer_V0_1_0().translate("wdl", allow_empty_container=True)

