from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Directory

Jamm_Sh_V0_1_0 = CommandToolBuilder(tool="JAMM.sh", base_command=["JAMM.sh"], inputs=[ToolInput(tag="in_directory_containing_sample_files", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="directory containing Sample files (required)")), ToolInput(tag="in_genome_size_file", input_type=Boolean(optional=True), prefix="-g", doc=InputDocumentation(doc="Genome size file (required)")), ToolInput(tag="in_output_directory_required", input_type=Directory(optional=True), prefix="-o", doc=InputDocumentation(doc="Output directory (required)")), ToolInput(tag="in_directory_containing_input_files", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="directory containing input or Control files")), ToolInput(tag="in_fragment_lengths_estimated", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc="Fragment length(s) (default: estimated)")), ToolInput(tag="in_resolution_peak_region", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="Resolution, peak or region or window (default: peak)")), ToolInput(tag="in_mode_normal_narrow", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="Mode, normal or narrow (default: normal)")), ToolInput(tag="in_clustering_selection_default", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="clustering Initialization window selection, deterministic or stochastic (default: deterministic)")), ToolInput(tag="in_bin_size_default", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc="Bin Size (default: estimated)")), ToolInput(tag="in_minimum_window_size", input_type=Boolean(optional=True), prefix="-w", doc=InputDocumentation(doc="minimum Window size (default: 2 --- Note: this means minimum_window_size = bin_size x the_value_of_-w)")), ToolInput(tag="in_window_enrichment_cutoff", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc="window Enrichment cutoff, auto or any numeric value (default: 1 --- Set this to 'auto' to estimate the window enrichment cutoff)")), ToolInput(tag="in_keep_pcr_dupicates", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc="keep PCR Dupicates in single-end mode, y or n (default: n --- if -t is 'paired', this option has no effect)")), ToolInput(tag="in_type_single_paired", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="Type, single or paired (default: single, requires BED files. paired requires BEDPE files)")), ToolInput(tag="in_number_processors_used", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="Number of processors used by R scripts (default: 1)")), ToolInput(tag="in_directory_where_created", input_type=Boolean(optional=True), prefix="-T", doc=InputDocumentation(doc="Directory where the temporary working repository will be created. This directory will be deleted after JAMM is done (default: a new directory is created in /tmp folder)."))], outputs=[ToolOutput(tag="out_output_directory_required", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output_directory_required", type_hint=File()), doc=OutputDocumentation(doc="Output directory (required)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Jamm_Sh_V0_1_0().translate("wdl", allow_empty_container=True)

