from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Boolean, Int, Float, File

Hmmbuild2_V0_1_0 = CommandToolBuilder(tool="hmmbuild2", base_command=["hmmbuild2"], inputs=[ToolInput(tag="in_name_name_hmm", input_type=String(optional=True), prefix="-n", doc=InputDocumentation(doc=": name; name this (first) HMM <s>")), ToolInput(tag="in__annotated_alignment", input_type=String(optional=True), prefix="-o", doc=InputDocumentation(doc=": re-save annotated alignment to <f>")), ToolInput(tag="in_append_append_hmm", input_type=Boolean(optional=True), prefix="-A", doc=InputDocumentation(doc=": append; append this HMM to <hmmfile>")), ToolInput(tag="in_force_allow_overwriting", input_type=Boolean(optional=True), prefix="-F", doc=InputDocumentation(doc=": force; allow overwriting of <hmmfile>")), ToolInput(tag="in_multihit_local_hmmfs", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc=": multi-hit local (hmmfs style)")), ToolInput(tag="in_global_alignment_hmms", input_type=Boolean(optional=True), prefix="-g", doc=InputDocumentation(doc=": global alignment (hmms style, Needleman/Wunsch)")), ToolInput(tag="in_local_alignment_hmmsw", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc=": local alignment (hmmsw style, Smith/Waterman)")), ToolInput(tag="in_fast", input_type=Boolean(optional=True), prefix="--fast", doc=InputDocumentation(doc=": Krogh/Haussler fast heuristic construction (see --gapmax)")), ToolInput(tag="in_hand", input_type=Boolean(optional=True), prefix="--hand", doc=InputDocumentation(doc=": manual construction (requires annotated alignment)")), ToolInput(tag="in_null", input_type=Boolean(optional=True), prefix="--null", doc=InputDocumentation(doc="<f>   : read null (random sequence) model from <f>")), ToolInput(tag="in_pam", input_type=Boolean(optional=True), prefix="--pam", doc=InputDocumentation(doc="<f>   : heuristic PAM-based prior, using BLAST PAM matrix in <f>")), ToolInput(tag="in_prior", input_type=String(optional=True), prefix="--prior", doc=InputDocumentation(doc=": read Dirichlet prior parameters from <f>")), ToolInput(tag="in_w_blosum", input_type=Boolean(optional=True), prefix="--wblosum", doc=InputDocumentation(doc=": Henikoff simple filter weights (see --idlevel)")), ToolInput(tag="in_wgs_c", input_type=Boolean(optional=True), prefix="--wgsc", doc=InputDocumentation(doc=": Gerstein/Sonnhammer/Chothia tree weights (default)")), ToolInput(tag="in_w_me", input_type=Boolean(optional=True), prefix="--wme", doc=InputDocumentation(doc=": maximum entropy (ME)")), ToolInput(tag="in_wpb", input_type=Boolean(optional=True), prefix="--wpb", doc=InputDocumentation(doc=": Henikoff position-based weights")), ToolInput(tag="in_w_voronoi", input_type=Boolean(optional=True), prefix="--wvoronoi", doc=InputDocumentation(doc=": Sibbald/Argos Voronoi weights")), ToolInput(tag="in_w_none", input_type=Boolean(optional=True), prefix="--wnone", doc=InputDocumentation(doc=": don't do any weighting")), ToolInput(tag="in_no_eff", input_type=Boolean(optional=True), prefix="--noeff", doc=InputDocumentation(doc=": don't use effective sequence number; just use nseq")), ToolInput(tag="in_pb_switch", input_type=String(optional=True), prefix="--pbswitch", doc=InputDocumentation(doc=": set switch from GSC to position-based wgts at > n seqs")), ToolInput(tag="in_amino", input_type=Boolean(optional=True), prefix="--amino", doc=InputDocumentation(doc=": override autodetection, assert that seqs are protein")), ToolInput(tag="in_nucleic", input_type=Boolean(optional=True), prefix="--nucleic", doc=InputDocumentation(doc=": override autodetection, assert that seqs are DNA/RNA")), ToolInput(tag="in_arch_pri", input_type=Int(optional=True), prefix="--archpri", doc=InputDocumentation(doc=": set architecture size prior to <x> {0.85} [0..1]")), ToolInput(tag="in_binary", input_type=Boolean(optional=True), prefix="--binary", doc=InputDocumentation(doc=": save the model in binary format, not ASCII text")), ToolInput(tag="in_c_file", input_type=String(optional=True), prefix="--cfile", doc=InputDocumentation(doc=": save count vectors to <f>")), ToolInput(tag="in_gap_max", input_type=Int(optional=True), prefix="--gapmax", doc=InputDocumentation(doc=": max fraction of gaps in mat column {0.50} [0..1]")), ToolInput(tag="in_id_level", input_type=Float(optional=True), prefix="--idlevel", doc=InputDocumentation(doc=": set frac. id level used by eff. nseq and --wblosum {0.62}")), ToolInput(tag="in_in_format", input_type=String(optional=True), prefix="--informat", doc=InputDocumentation(doc=": input alignment is in format <s>, not Stockholm")), ToolInput(tag="in_pam_wgt", input_type=Int(optional=True), prefix="--pamwgt", doc=InputDocumentation(doc=": set weight on PAM-based prior to <x> {20.}[>=0]")), ToolInput(tag="in_sw_entry", input_type=Float(optional=True), prefix="--swentry", doc=InputDocumentation(doc=": set S/W aggregate entry prob. to <x> {0.5}")), ToolInput(tag="in_sw_exit", input_type=Float(optional=True), prefix="--swexit", doc=InputDocumentation(doc=": set S/W aggregate exit prob. to <x>  {0.5}")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc=": print boring information")), ToolInput(tag="in_options", input_type=Boolean(optional=True), prefix="-options", doc=InputDocumentation(doc="")), ToolInput(tag="in_hmmbuild", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_hmm_file_output", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_alignment_file", input_type=File(), position=2, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Hmmbuild2_V0_1_0().translate("wdl", allow_empty_container=True)

