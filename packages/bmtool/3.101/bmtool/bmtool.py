from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Int

Bmtool_V0_1_0 = CommandToolBuilder(tool="bmtool", base_command=["bmtool"], inputs=[ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="Do not show progress indicators [off]")), ToolInput(tag="in_fast_a_file", input_type=Boolean(optional=True), prefix="--fasta-file", doc=InputDocumentation(doc="=''        -d ''  Input fasta or blastdb file")), ToolInput(tag="in_output_file", input_type=File(optional=True), prefix="--output-file", doc=InputDocumentation(doc="=''       -o ''  Output word bitmask file")), ToolInput(tag="in_gi_list", input_type=Boolean(optional=True), prefix="--gi-list", doc=InputDocumentation(doc="=''           -l ''  Set gi list for blastdb file")), ToolInput(tag="in_input_file", input_type=Boolean(optional=True), prefix="--input-file", doc=InputDocumentation(doc="=''        -i ''  Set word bitmask file as input")), ToolInput(tag="in_fast_a_parse_ids", input_type=Int(optional=True), prefix="--fasta-parse-ids", doc=InputDocumentation(doc="Parse FASTA ids (becomes broken if ranges are used)")), ToolInput(tag="in_word_size", input_type=Int(optional=True), prefix="--word-size", doc=InputDocumentation(doc="Word size to use")), ToolInput(tag="in_word_step", input_type=Int(optional=True), prefix="--word-step", doc=InputDocumentation(doc="Step (stride size) to use")), ToolInput(tag="in_max_amb", input_type=Int(optional=True), prefix="--max-amb", doc=InputDocumentation(doc="Maximal number of ambiguities to count")), ToolInput(tag="in_pattern", input_type=Int(optional=True), prefix="--pattern", doc=InputDocumentation(doc="Set pattern to use with discontiguous words, 0x or 0b prefix may be used for hex or bin (-w## will be ignored)")), ToolInput(tag="in_max_word_count", input_type=Int(optional=True), prefix="--max-word-count", doc=InputDocumentation(doc="Do not include words counted more than this value (for 16-mers or less)")), ToolInput(tag="in_compress", input_type=Boolean(optional=True), prefix="--compress", doc=InputDocumentation(doc="Compress bitmask (requires version 2) [off]")), ToolInput(tag="in_extra_compress", input_type=Boolean(optional=True), prefix="--extra-compress", doc=InputDocumentation(doc="Compress bitmask (requires version 2) looking for duplicate extension sets [off]")), ToolInput(tag="in_pack_prefix_bits", input_type=Int(optional=True), prefix="--pack-prefix-bits", doc=InputDocumentation(doc="Bits to use for compression prefix")), ToolInput(tag="in_pack_offset_bits", input_type=Int(optional=True), prefix="--pack-offset-bits", doc=InputDocumentation(doc="Number of bits in table to use for data segment offset")), ToolInput(tag="in_pack_count_bits", input_type=Int(optional=True), prefix="--pack-count-bits", doc=InputDocumentation(doc="Number of bits to reserve for entry count within segment")), ToolInput(tag="in_mmap", input_type=Boolean(optional=True), prefix="--mmap", doc=InputDocumentation(doc="Memory map source file instead of reading [off]")), ToolInput(tag="in_diff", input_type=Boolean(optional=True), prefix="--diff", doc=InputDocumentation(doc="Diff source and result before writing, repport differences [off]")), ToolInput(tag="in_slow", input_type=Boolean(optional=True), prefix="--slow", doc=InputDocumentation(doc="Slow copy (using query API - to check query api [off]")), ToolInput(tag="in_bit_test", input_type=Boolean(optional=True), prefix="--bit-test", doc=InputDocumentation(doc="Test bit operations [off]"))], outputs=[ToolOutput(tag="out_output_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_file", type_hint=File()), doc=OutputDocumentation(doc="=''       -o ''  Output word bitmask file"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bmtool_V0_1_0().translate("wdl", allow_empty_container=True)

