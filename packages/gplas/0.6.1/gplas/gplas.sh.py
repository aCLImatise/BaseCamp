from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean

Gplas_Sh_V0_1_0 = CommandToolBuilder(tool="gplas.sh", base_command=["gplas.sh"], inputs=[ToolInput(tag="in_mandatory_path_graph", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="Mandatory: Path to the graph file in *.gfa format used to extract nodes and links. Gfa file format")), ToolInput(tag="in_mandatory_classifier_used", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="Mandatory: Classifier used to predict the contigs extracted from the input graph. String value: 'plasflow' or 'mlplasmids'")), ToolInput(tag="in_mandatory_mlplasmids_chosen", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="Mandatory (if mlplasmids is chosen): Bacterial species from the graph file. If you have specified mlplasmids as classifier\nyou need to provide one of the following three bacterial species:\n'Enterococcus faecium','Klebsiella pneumoniae' or 'Escherichia coli'")), ToolInput(tag="in_optional_output_name", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="Optional: Output name used in the files generated by gplas. Default: 'unnamed'")), ToolInput(tag="in_optional_threshold_predict", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="Optional: Threshold to predict plasmid-derived sequences. Integer value ranging from 0 to 1.\nDefault mlplasmids threshold: 0.5\nDefault plasflow threshold: 0.7")), ToolInput(tag="in_optional_number_times", input_type=Boolean(optional=True), prefix="-x", doc=InputDocumentation(doc="Optional: Number of times gplas finds plasmid walks per each plasmid starting node. Integer value ranging from 1 to infinite.\nDefault: 20")), ToolInput(tag="in_optional_gplas_filtering", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc="Optional: Gplas filtering threshold score to reject possible outcoming edges. Integer value ranging from 0 to 1.\nDefault: 0.1")), ToolInput(tag="in_optional_modularity_threshold", input_type=Boolean(optional=True), prefix="-q", doc=InputDocumentation(doc="Optional: Modularity threshold to split components present in the plasmidome network. Integer value ranging from 0 to 1\nDefault: 0.2")), ToolInput(tag="in_optional_path_corresponding", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="Optional: Path to the complete reference genome corresponding to the graph given. For optimal results using this\nbenchmarking flag, please name the reference genomes using the Unicycler scheme: e.g. '1 length=4123456' '2 length=10000' '3 length=2000'\nfor your chromosome and plasmids. Fasta file format\n"))], outputs=[], container="quay.io/biocontainers/gplas:0.6.1--0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Gplas_Sh_V0_1_0().translate("wdl")

