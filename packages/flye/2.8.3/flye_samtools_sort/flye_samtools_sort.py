from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, Boolean, String, File

Flye_Samtools_Sort_V0_1_0 = CommandToolBuilder(tool="flye_samtools_sort", base_command=["flye-samtools", "sort"], inputs=[ToolInput(tag="in_set_compression_level", input_type=Int(optional=True), prefix="-l", doc=InputDocumentation(doc="Set compression level, from 0 (uncompressed) to 9 (best)")), ToolInput(tag="in_set_maximum_memory", input_type=Int(optional=True), prefix="-m", doc=InputDocumentation(doc="Set maximum memory per thread; suffix K/M/G recognized [768M]")), ToolInput(tag="in_sort_read_name", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="Sort by read name")), ToolInput(tag="in_sort_value_tag", input_type=String(optional=True), prefix="-t", doc=InputDocumentation(doc="Sort by value of TAG. Uses position as secondary index (or read name if -n is set)")), ToolInput(tag="in_write_final_output", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="Write final output to FILE rather than standard output")), ToolInput(tag="in_write_temporary_files", input_type=String(optional=True), prefix="-T", doc=InputDocumentation(doc="Write temporary files to PREFIX.nnnn.bam")), ToolInput(tag="in_input_fmt_option", input_type=File(optional=True), prefix="--input-fmt-option", doc=InputDocumentation(doc="[=VAL]\nSpecify a single input file format option in the form\nof OPTION or OPTION=VALUE")), ToolInput(tag="in_output_fmt", input_type=String(optional=True), prefix="--output-fmt", doc=InputDocumentation(doc="[,OPT[=VAL]]...\nSpecify output format (SAM, BAM, CRAM)")), ToolInput(tag="in_output_fmt_option", input_type=File(optional=True), prefix="--output-fmt-option", doc=InputDocumentation(doc="[=VAL]\nSpecify a single output file format option in the form\nof OPTION or OPTION=VALUE")), ToolInput(tag="in_reference", input_type=File(optional=True), prefix="--reference", doc=InputDocumentation(doc="Reference sequence FASTA FILE [null]")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of additional threads to use [0]\n")), ToolInput(tag="in_sam_tools", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_sort", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_options_dot_dot_dot", input_type=String(optional=True), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_in_dot_bam", input_type=String(optional=True), position=3, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_write_final_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_write_final_output", type_hint=File()), doc=OutputDocumentation(doc="Write final output to FILE rather than standard output")), ToolOutput(tag="out_output_fmt_option", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_fmt_option", type_hint=File()), doc=OutputDocumentation(doc="[=VAL]\nSpecify a single output file format option in the form\nof OPTION or OPTION=VALUE"))], container="quay.io/biocontainers/flye:2.8.3--py38h1c8e9b9_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Flye_Samtools_Sort_V0_1_0().translate("wdl")

