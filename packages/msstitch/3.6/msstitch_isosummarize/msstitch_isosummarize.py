from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Directory, String, Array, Boolean, Int

Msstitch_Isosummarize_V0_1_0 = CommandToolBuilder(tool="msstitch_isosummarize", base_command=["msstitch", "isosummarize"], inputs=[ToolInput(tag="in_input_file_format", input_type=File(optional=True), prefix="-i", doc=InputDocumentation(doc="Input file of {} format")), ToolInput(tag="in_directory_to_output", input_type=Directory(optional=True), prefix="-d", doc=InputDocumentation(doc="Directory to output in")), ToolInput(tag="in_output_file", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="Output file")), ToolInput(tag="in_is_ob_quant_col_pattern", input_type=String(optional=True), prefix="--isobquantcolpattern", doc=InputDocumentation(doc="Unique text pattern to identify isobaric quant columns\nin input table.")), ToolInput(tag="in_denom_patterns", input_type=Array(t=String(), optional=True), prefix="--denompatterns", doc=InputDocumentation(doc="Regex patterns to detect denominator channels in a PSM\ntable, when creating a table with summarized feature\nisobaric ratios. If both --denompatterns and\n--denomcol are given then column numbers are used.\nUsage e.g. --denompattern _126 _131. Also possible:\n--denompattern _12[6-7] to detect multiple columns.")), ToolInput(tag="in_denom_cols", input_type=Array(t=String(), optional=True), prefix="--denomcols", doc=InputDocumentation(doc="Column numbers of denominator channels when creating a\nsummarized feature table with isobaric ratios from\nPSMs")), ToolInput(tag="in_median_sweep", input_type=Boolean(optional=True), prefix="--mediansweep", doc=InputDocumentation(doc="Instead of choosing a denominator channel, use the\nmedian intensity of each PSM as its denominator.")), ToolInput(tag="in_median_intensity", input_type=Boolean(optional=True), prefix="--medianintensity", doc=InputDocumentation(doc="Instead of choosing a denominator channel or median-\nsweeping, report the the median intensity of each\nsummarized feat per channel. This results in reported\nintensities rather than ratios.")), ToolInput(tag="in_summarize_average", input_type=Boolean(optional=True), prefix="--summarize-average", doc=InputDocumentation(doc="Use average isobaric quantification values for\nsummarizing quant from PSMs, instead of default PSM\nmedian values")), ToolInput(tag="in_keep_psms_na_quant", input_type=Boolean(optional=True), prefix="--keep-psms-na-quant", doc=InputDocumentation(doc="When summarizing isobaric quantification data, also\nuse the PSMs that have an NA in any channel, even if\nthese may contain overly noisy quant data in the other\nchannels. Normally these PSMs would be skipped in\nquantification")), ToolInput(tag="in_min_int", input_type=Int(optional=True), prefix="--minint", doc=InputDocumentation(doc="Intensity threshold of PSMs when calculating isobaric\nratios. Values below threshold will be set to NA.\nDefaults to no threshold.")), ToolInput(tag="in_feat_col", input_type=Int(optional=True), prefix="--featcol", doc=InputDocumentation(doc="Column number in table in which desired accessions to\nsummarize are stored. First column number is 1. If not\nspecified this will summarize to PSMs themselves, i.e.\nonly calculate the ratios and add those to the PSM\ntable.")), ToolInput(tag="in_log_iso_quant", input_type=Boolean(optional=True), prefix="--logisoquant", doc=InputDocumentation(doc="Output log2 values for isoquant ratios. This\nlog2-transforms input PSM data prior to summarizing\nand optional normalization. Ratios will be calculated\nsubtracted rather than divided, obviously.")), ToolInput(tag="in_median_normalize", input_type=Boolean(optional=True), prefix="--median-normalize", doc=InputDocumentation(doc="Median-centering normalization for isobaric quant data\non protein or peptide level. This median-centers the\ndata for each channel by dividing with the median\nchannel value (or subtracting in case of log data),\nfor each channel in output features, e.g. proteins.\n"))], outputs=[ToolOutput(tag="out_directory_to_output", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_directory_to_output", type_hint=File()), doc=OutputDocumentation(doc="Directory to output in")), ToolOutput(tag="out_output_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_file", type_hint=File()), doc=OutputDocumentation(doc="Output file"))], container="quay.io/biocontainers/msstitch:3.6--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Msstitch_Isosummarize_V0_1_0().translate("wdl")

