from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, File, Boolean

Make_Batch_For_Iteratively_Mapping_Assembling_Py_V0_1_0 = CommandToolBuilder(tool="make_batch_for_iteratively_mapping_assembling.py", base_command=["make_batch_for_iteratively_mapping_assembling.py"], inputs=[ToolInput(tag="in_input_st_fastq", input_type=Int(optional=True), prefix="-1", doc=InputDocumentation(doc="Input 1st fastq format file as pool")), ToolInput(tag="in_input_nd_fastq", input_type=Int(optional=True), prefix="-2", doc=InputDocumentation(doc="Input 2nd fastq format file as pool")), ToolInput(tag="in_input_fasta_format", input_type=File(optional=True), prefix="-s", doc=InputDocumentation(doc="Input fasta format file as initial seed")), ToolInput(tag="in_how_many_iterations", input_type=Int(optional=True), prefix="-R", doc=InputDocumentation(doc="How many iterations would you like to have? Default=3")), ToolInput(tag="in_theads_used_default", input_type=Int(optional=True), prefix="-t", doc=InputDocumentation(doc="theads used for bowtie2 and SPAdes. Default=1")), ToolInput(tag="in_spades_kmer_settings", input_type=Int(optional=True), prefix="-k", doc=InputDocumentation(doc="SPAdes k-mer settings. Use the same format as in\nSPAdes. Default=21,45,65,85,105")), ToolInput(tag="in_executable_output_batch", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="Executable output batch file.")), ToolInput(tag="in_un", input_type=Boolean(optional=True), prefix="--un", doc=InputDocumentation(doc="Try to map and assembly without paired information.")), ToolInput(tag="in_random_seed", input_type=Int(optional=True), prefix="--random-seed", doc=InputDocumentation(doc="seed for random generator for bowtie2. Default: 12345")), ToolInput(tag="in_which_bowtie_two", input_type=Int(optional=True), prefix="--which-bowtie2", doc=InputDocumentation(doc="Assign the path to Bowtie2 binary files if not added\nto the path. Default: try\nGetOrganelleDep/linux/bowtie2 first, then $PATH")), ToolInput(tag="in_which_spades", input_type=File(optional=True), prefix="--which-spades", doc=InputDocumentation(doc="Assign the path to SPAdes binary files if not added to\nthe path. Default: try GetOrganelleDep/linux/SPAdes\nfirst, then $PATH\n"))], outputs=[ToolOutput(tag="out_executable_output_batch", output_type=File(optional=True), selector=InputSelector(input_to_select="in_executable_output_batch", type_hint=File()), doc=OutputDocumentation(doc="Executable output batch file."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Make_Batch_For_Iteratively_Mapping_Assembling_Py_V0_1_0().translate("wdl", allow_empty_container=True)

