from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, Boolean, File, Float, String, Array

Pyquant_V0_1_0 = CommandToolBuilder(tool="pyQuant", base_command=["pyQuant"], inputs=[ToolInput(tag="in_threads_run_default", input_type=Int(optional=True), prefix="-p", doc=InputDocumentation(doc="Threads to run (default: 1)")), ToolInput(tag="in_scan_files_providedassumed", input_type=Boolean(optional=True), prefix="--scan-file", doc=InputDocumentation(doc="[SCAN_FILE [SCAN_FILE ...]]\nThe scan file(s) for the raw data. If not provided,\nassumed to be in the directory of the\nprocessed/tabbed/peaklist file. (default: None)")), ToolInput(tag="in_scan_file_dir", input_type=File(optional=True), prefix="--scan-file-dir", doc=InputDocumentation(doc="The directory containing raw data. (default: None)")), ToolInput(tag="in_precision", input_type=Float(optional=True), prefix="--precision", doc=InputDocumentation(doc="The precision for storing m/z values. Defaults to 6\ndecimal places. (default: 6)")), ToolInput(tag="in_precursor_ppm", input_type=Int(optional=True), prefix="--precursor-ppm", doc=InputDocumentation(doc="The mass accuracy for the first monoisotopic peak in\nppm. (default: 5)")), ToolInput(tag="in_isotope_ppm", input_type=Float(optional=True), prefix="--isotope-ppm", doc=InputDocumentation(doc="The mass accuracy for the isotopic cluster. (default:\n2.5)")), ToolInput(tag="in_spread", input_type=Boolean(optional=True), prefix="--spread", doc=InputDocumentation(doc="Assume there is spread of the isotopic label.\n(default: False)")), ToolInput(tag="in_search_file", input_type=File(optional=True), prefix="--search-file", doc=InputDocumentation(doc="A search output or Proteome Discoverer msf file\n(default: None)")), ToolInput(tag="in_skip", input_type=Boolean(optional=True), prefix="--skip", doc=InputDocumentation(doc="If true, skip scans with missing files in the mapping.\n(default: False)")), ToolInput(tag="in_peptide", input_type=Boolean(optional=True), prefix="--peptide", doc=InputDocumentation(doc="[PEPTIDE [PEPTIDE ...]]\nThe peptide(s) to limit quantification to. (default:\nNone)")), ToolInput(tag="in_peptide_file", input_type=File(optional=True), prefix="--peptide-file", doc=InputDocumentation(doc="A file of peptide(s) to limit quantification to.\n(default: None)")), ToolInput(tag="in_scan", input_type=Boolean(optional=True), prefix="--scan", doc=InputDocumentation(doc="[SCAN [SCAN ...]]\nThe scan(s) to limit quantification to. (default:\nNone)")), ToolInput(tag="in_mva", input_type=Boolean(optional=True), prefix="--mva", doc=InputDocumentation(doc="Analyze files in 'missing value' mode. (default:\nFalse)")), ToolInput(tag="in_rt_window", input_type=Float(optional=True), prefix="--rt-window", doc=InputDocumentation(doc="The maximal deviation of a scan's retention time to be\nconsidered for analysis. (default: 0.25)")), ToolInput(tag="in_label_scheme", input_type=File(optional=True), prefix="--label-scheme", doc=InputDocumentation(doc="The file corresponding to the labeling scheme\nutilized. (default: None)")), ToolInput(tag="in_label_method", input_type=String(optional=True), prefix="--label-method", doc=InputDocumentation(doc="Predefined labeling schemes to use. (default: None)")), ToolInput(tag="in_reference_label", input_type=String(optional=True), prefix="--reference-label", doc=InputDocumentation(doc="The label to use as a reference (by default all\ncomparisons are taken). (default: None)")), ToolInput(tag="in_tsv", input_type=File(optional=True), prefix="--tsv", doc=InputDocumentation(doc="A delimited file containing scan information.\n(default: None)")), ToolInput(tag="in_label", input_type=String(optional=True), prefix="--label", doc=InputDocumentation(doc="The column indicating the label state of the peptide.\nIf not found, entry assumed to be light variant.\n(default: Labeling State)")), ToolInput(tag="in_peptide_col", input_type=String(optional=True), prefix="--peptide-col", doc=InputDocumentation(doc="The column indicating the peptide. (default: Peptide)")), ToolInput(tag="in_rt", input_type=String(optional=True), prefix="--rt", doc=InputDocumentation(doc="The column indicating the retention time. (default:\nRetention time)")), ToolInput(tag="in_mz", input_type=String(optional=True), prefix="--mz", doc=InputDocumentation(doc="The column indicating the MZ value of the precursor\nion. This is not the MH+. (default: Light Precursor)")), ToolInput(tag="in_scan_col", input_type=Int(optional=True), prefix="--scan-col", doc=InputDocumentation(doc="The column indicating the scan corresponding to the\nion. (default: MS2 Spectrum ID)")), ToolInput(tag="in_charge", input_type=String(optional=True), prefix="--charge", doc=InputDocumentation(doc="The column indicating the charge state of the ion.\n(default: Charge)")), ToolInput(tag="in_source", input_type=File(optional=True), prefix="--source", doc=InputDocumentation(doc="The column indicating the raw file the scan is\ncontained in. (default: Raw file)")), ToolInput(tag="in_msn_id", input_type=Int(optional=True), prefix="--msn-id", doc=InputDocumentation(doc="The ms level to search for the ion in. Default: 2\n(ms2) (default: 2)")), ToolInput(tag="in_msn_quant_from", input_type=Int(optional=True), prefix="--msn-quant-from", doc=InputDocumentation(doc="The ms level to quantify values from. i.e. if we are\nidentifying an ion in ms2, we can quantify it in ms1\n(or ms2). Default: msn value-1 (default: None)")), ToolInput(tag="in_msn_ion", input_type=Array(t=String(), optional=True), prefix="--msn-ion", doc=InputDocumentation(doc="M/Z values to search for in the scans. To search for\nmultiple m/z values for a given ion, separate m/z\nvalues with a comma. (default: None)")), ToolInput(tag="in_msn_ion_rt", input_type=Array(t=String(), optional=True), prefix="--msn-ion-rt", doc=InputDocumentation(doc="RT values each ion is expected at. (default: None)")), ToolInput(tag="in_msn_peak_list", input_type=File(optional=True), prefix="--msn-peaklist", doc=InputDocumentation(doc="A file containing peaks to search for in the scans.\n(default: None)")), ToolInput(tag="in_msn_ppm", input_type=Int(optional=True), prefix="--msn-ppm", doc=InputDocumentation(doc="The error tolerance for identifying the ion(s).\n(default: 200)")), ToolInput(tag="in_msn_rt_window", input_type=Array(t=String(), optional=True), prefix="--msn-rt-window", doc=InputDocumentation(doc="The range of retention times for identifying the\nion(s). (ex: 7.54-9.43) (default: None)")), ToolInput(tag="in_msn_all_scans", input_type=Boolean(optional=True), prefix="--msn-all-scans", doc=InputDocumentation(doc="Search for the ion across all scans (ie if you have 3\nions, you will have 3 results with one long XIC)\n(default: False)")), ToolInput(tag="in_require_all_ions", input_type=Boolean(optional=True), prefix="--require-all-ions", doc=InputDocumentation(doc="If multiple ions are set (in the style of\n93.15,105.15), all ions must be found in a scan.\n(default: False)")), ToolInput(tag="in_quant_method", input_type=String(optional=True), prefix="--quant-method", doc=InputDocumentation(doc="The process to use for quantification. Default:\nIntegrate for ms1, sum for ms2+. (default: None)")), ToolInput(tag="in_reporter_ion", input_type=Boolean(optional=True), prefix="--reporter-ion", doc=InputDocumentation(doc="Indicates that reporter ions are being used. As such,\nwe only analyze a single scan. (default: False)")), ToolInput(tag="in_iso_topo_logue_limit", input_type=Int(optional=True), prefix="--isotopologue-limit", doc=InputDocumentation(doc="How many isotopologues to quantify (default: -1)")), ToolInput(tag="in_overlapping_labels", input_type=Boolean(optional=True), prefix="--overlapping-labels", doc=InputDocumentation(doc="This declares the mz values of labels will overlap. It\nis useful for data such as neucode, but not needed for\nonly SILAC labeling. (default: False)")), ToolInput(tag="in_labels_needed", input_type=Int(optional=True), prefix="--labels-needed", doc=InputDocumentation(doc="How many labels need to be detected to quantify a scan\n(ie if you have a 2 state experiment and set this to\n2, it will only quantify scans where both occur.\n(default: 1)")), ToolInput(tag="in_merge_labels", input_type=Boolean(optional=True), prefix="--merge-labels", doc=InputDocumentation(doc="Merge labels together to a single XIC. (default:\nFalse)")), ToolInput(tag="in_min_scans", input_type=Int(optional=True), prefix="--min-scans", doc=InputDocumentation(doc="How many quantification scans are needed to quantify a\nscan. (default: 1)")), ToolInput(tag="in_min_resolution", input_type=Int(optional=True), prefix="--min-resolution", doc=InputDocumentation(doc="The minimal resolving power of a scan to consider for\nquantification. Useful for skipping low-res scans\n(default: 0)")), ToolInput(tag="in_no_mass_accuracy_correction", input_type=Boolean(optional=True), prefix="--no-mass-accuracy-correction", doc=InputDocumentation(doc="Disables the mass accuracy correction. (default:\nFalse)")), ToolInput(tag="in_no_contaminant_detection", input_type=Boolean(optional=True), prefix="--no-contaminant-detection", doc=InputDocumentation(doc="Disables routine to check if an ion is a contaminant\nof a nearby peptide (checks if its a likely\nisotopologue). (default: False)")), ToolInput(tag="in_peak_find_method", input_type=String(optional=True), prefix="--peak-find-method", doc=InputDocumentation(doc="The method to use to identify peaks within data. For\nLC-MS, relative-max is usually best. For smooth data,\nderivative is better. (default: relative-max)")), ToolInput(tag="in_peak_find_mode", input_type=String(optional=True), prefix="--peak-find-mode", doc=InputDocumentation(doc="This picks some predefined parameters for various use\ncases. Fast is good for robust data with few peaks,\nslow is good for complex data with overlapping peaks\nof very different size. (default: average)")), ToolInput(tag="in_gap_interpolation", input_type=Int(optional=True), prefix="--gap-interpolation", doc=InputDocumentation(doc="This interpolates missing data in scans. The parameter\nshould be a number that is the maximal gap size to\nfill (ie 2 means a gap of 2 scans). Can be useful for\nlow intensity LC-MS data. (default: 0)")), ToolInput(tag="in_fit_baseline", input_type=Boolean(optional=True), prefix="--fit-baseline", doc=InputDocumentation(doc="Fit a separate line for the baseline of each peak.\n(default: False)")), ToolInput(tag="in_peak_cut_off", input_type=Float(optional=True), prefix="--peak-cutoff", doc=InputDocumentation(doc="The threshold from the initial retention time a peak\ncan fall by before being discarded (default: 0.05)")), ToolInput(tag="in_max_peaks", input_type=Int(optional=True), prefix="--max-peaks", doc=InputDocumentation(doc="The maximal number of peaks to detect per scan. A\nlower value can help with very noisy data. (default:\n-1)")), ToolInput(tag="in_peaks_n", input_type=Int(optional=True), prefix="--peaks-n", doc=InputDocumentation(doc="The number of peaks to report per scan. Useful for\nions with multiple elution times. (default: 1)")), ToolInput(tag="in_no_rt_guide", input_type=Boolean(optional=True), prefix="--no-rt-guide", doc=InputDocumentation(doc="Do not use the retention time to bias for peaks\ncontaining the MS trigger time. (default: False)")), ToolInput(tag="in_snr_filter", input_type=Int(optional=True), prefix="--snr-filter", doc=InputDocumentation(doc="Filter peaks below a given SNR. (default: 0)")), ToolInput(tag="in_zscore_filter", input_type=Int(optional=True), prefix="--zscore-filter", doc=InputDocumentation(doc="Peaks below a given z-score are excluded. (default: 0)")), ToolInput(tag="in_filter_width", input_type=Int(optional=True), prefix="--filter-width", doc=InputDocumentation(doc="The window size for snr/zscore filtering. Default:\nentire scan (default: 0)")), ToolInput(tag="in_r_two_cut_off", input_type=Int(optional=True), prefix="--r2-cutoff", doc=InputDocumentation(doc="The minimal R^2 for a peak to be kept. Should be a\nvalue between 0 and 1 (default: None)")), ToolInput(tag="in_intensity_filter", input_type=Int(optional=True), prefix="--intensity-filter", doc=InputDocumentation(doc="Filter peaks whose peak are below a given intensity.\n(default: 0)")), ToolInput(tag="in_percentile_filter", input_type=Int(optional=True), prefix="--percentile-filter", doc=InputDocumentation(doc="Filter peaks whose peak are below a given percentile\nof the data. (default: 0)")), ToolInput(tag="in_min_peak_separation", input_type=Int(optional=True), prefix="--min-peak-separation", doc=InputDocumentation(doc="Peaks separated by less than this distance will be\ncombined. For very crisp data, set this to a lower\nnumber. (minimal value is 1) (default: 5)")), ToolInput(tag="in_disable_peak_filtering", input_type=Boolean(optional=True), prefix="--disable-peak-filtering", doc=InputDocumentation(doc="This will disable smoothing of data prior to peak\nfinding. If you have very good LC, this may be used to\nidentify small peaks. (default: False)")), ToolInput(tag="in_merge_isotopes", input_type=Boolean(optional=True), prefix="--merge-isotopes", doc=InputDocumentation(doc="Merge Isotopologues together prior to fitting.\n(default: False)")), ToolInput(tag="in_peak_resolution_mode", input_type=String(optional=True), prefix="--peak-resolution-mode", doc=InputDocumentation(doc="The method to use to resolve peaks across multiple\nXICs (default: common-peak)")), ToolInput(tag="in_xic_snr", input_type=Float(optional=True), prefix="--xic-snr", doc=InputDocumentation(doc="When the SNR of the XIC falls below this, stop\nsearching for more data. Useful for escaping from\nnoisy shoulders and contaminants. (default: 1.0)")), ToolInput(tag="in_xic_missing_ion_count", input_type=Int(optional=True), prefix="--xic-missing-ion-count", doc=InputDocumentation(doc="This specifies how many consequtive scans an ion can\nbe missing for until it is no longer considered.\n(default: 1)")), ToolInput(tag="in_xic_window_size", input_type=Int(optional=True), prefix="--xic-window-size", doc=InputDocumentation(doc="When the number of scans in a given direction from the\ninitial datapoint of an XIC passes this, stop. Default\nis -1 (disabled). Useful for removing contaminants\n(default: -1)")), ToolInput(tag="in_xic_smooth", input_type=Boolean(optional=True), prefix="--xic-smooth", doc=InputDocumentation(doc="Prior to fitting, smooth data with a Gaussian filter.\n(default: False)")), ToolInput(tag="in_export_msn", input_type=Boolean(optional=True), prefix="--export-msn", doc=InputDocumentation(doc="This will export spectra of a given MSN that were used\nto provide the quantification. (default: True)")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="This will output debug information. (default: False)")), ToolInput(tag="in_html", input_type=Boolean(optional=True), prefix="--html", doc=InputDocumentation(doc="Output a HTML table summary. (default: False)")), ToolInput(tag="in_resume", input_type=Boolean(optional=True), prefix="--resume", doc=InputDocumentation(doc="Will resume from the last run. Only works if not\ndirecting output to stdout. (default: False)")), ToolInput(tag="in_sample", input_type=Float(optional=True), prefix="--sample", doc=InputDocumentation(doc="How much of the data to sample. Enter as a decimal (ie\n1.0 for everything, 0.1 for 10%) (default: 1.0)")), ToolInput(tag="in_disable_stats", input_type=Boolean(optional=True), prefix="--disable-stats", doc=InputDocumentation(doc="Disable confidence statistics on data. (default:\nFalse)")), ToolInput(tag="in_no_ratios", input_type=Boolean(optional=True), prefix="--no-ratios", doc=InputDocumentation(doc="Disable reporting of ratios in output. (default:\nFalse)")), ToolInput(tag="in_prefix_file_none", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="[OUT], --out [OUT]\nThe prefix for the file output (default: None)")), ToolInput(tag="in_export_mzm_l", input_type=Boolean(optional=True), prefix="--export-mzml", doc=InputDocumentation(doc="Create an mzml file of spectra contained within each\npeak. (default: False)")), ToolInput(tag="in_export_mode", input_type=File(optional=True), prefix="--export-mode", doc=InputDocumentation(doc="How to export the scans. per-peak: A mzML per peak\nidentified. per-id: A mzML per ion identified (each\nrow of the output gets an mzML). per-file: All scans\nmatched per raw file. (default: per-peak)")), ToolInput(tag="in_neu_code", input_type=Boolean(optional=True), prefix="--neucode", doc=InputDocumentation(doc="This will select parameters specific for neucode.\nNote: You still must define a labeling scheme.\n(default: False)")), ToolInput(tag="in_isobaric_tags", input_type=Boolean(optional=True), prefix="--isobaric-tags", doc=InputDocumentation(doc="This will select parameters specific for isobaric tag\nbased labeling (TMT/iTRAQ). (default: False)")), ToolInput(tag="in_ms_three", input_type=Boolean(optional=True), prefix="--ms3", doc=InputDocumentation(doc="This will select parameters specific for ms3 based\nquantification. (default: False)")), ToolInput(tag="in_max_quant", input_type=Boolean(optional=True), prefix="--maxquant", doc=InputDocumentation(doc="This will select parameters specific for a MaxQuant\nevidence file. (default: False)")), ToolInput(tag="in_gcms", input_type=Boolean(optional=True), prefix="--gcms", doc=InputDocumentation(doc="This will select parameters specific for ion\nidentification and quantification in GCMS experiments.\n(default: False)\n")), ToolInput(tag="in_v_zero_dot_two_dot_four", input_type=Float(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_var_82", input_type=String(optional=True), position=1, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_search_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_search_file", type_hint=File()), doc=OutputDocumentation(doc="A search output or Proteome Discoverer msf file\n(default: None)")), ToolOutput(tag="out_prefix_file_none", output_type=File(optional=True), selector=InputSelector(input_to_select="in_prefix_file_none", type_hint=File()), doc=OutputDocumentation(doc="[OUT], --out [OUT]\nThe prefix for the file output (default: None)")), ToolOutput(tag="out_export_mode", output_type=File(optional=True), selector=InputSelector(input_to_select="in_export_mode", type_hint=File()), doc=OutputDocumentation(doc="How to export the scans. per-peak: A mzML per peak\nidentified. per-id: A mzML per ion identified (each\nrow of the output gets an mzML). per-file: All scans\nmatched per raw file. (default: per-peak)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Pyquant_V0_1_0().translate("wdl", allow_empty_container=True)

