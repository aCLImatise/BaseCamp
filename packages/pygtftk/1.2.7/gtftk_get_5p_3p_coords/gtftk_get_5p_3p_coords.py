from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Int

Gtftk_Get_5P_3P_Coords_V0_1_0 = CommandToolBuilder(tool="gtftk_get_5p_3p_coords", base_command=["gtftk", "get_5p_3p_coords"], inputs=[ToolInput(tag="in_input_file", input_type=Boolean(optional=True), prefix="--inputfile", doc=InputDocumentation(doc="Path to the GTF file. Default to STDIN (default: <stdin>)")), ToolInput(tag="in_output_file", input_type=File(optional=True), prefix="--outputfile", doc=InputDocumentation(doc="Output file (BED). (default: <stdout>)")), ToolInput(tag="in_ft_type", input_type=Boolean(optional=True), prefix="--ft-type", doc=InputDocumentation(doc="The target feature (as found in the 3rd column of the GTF). (default: transcript)")), ToolInput(tag="in_invert", input_type=Boolean(optional=True), prefix="--invert", doc=InputDocumentation(doc="Get 3' coordinate. (default: False)")), ToolInput(tag="in_transpose", input_type=Boolean(optional=True), prefix="--transpose", doc=InputDocumentation(doc="Transpose coordinate in 5' (use negative value) or in 3' (use positive values). (default: 0)")), ToolInput(tag="in_names", input_type=Boolean(optional=True), prefix="--names", doc=InputDocumentation(doc="The key(s) that should be used as name. (default: gene_id,transcript_id)")), ToolInput(tag="in_more_names", input_type=Boolean(optional=True), prefix="--more-names", doc=InputDocumentation(doc="A comma-separated list of information to be added to the 'name' column of the bed file. (default: None)")), ToolInput(tag="in_separator", input_type=Boolean(optional=True), prefix="--separator", doc=InputDocumentation(doc="The separator to be used for separating name elements (see -n). (default: |)")), ToolInput(tag="in_explicit", input_type=Boolean(optional=True), prefix="--explicit", doc=InputDocumentation(doc="Write explicitly the name of the keys in the header. (default: False)")), ToolInput(tag="in_verbosity", input_type=Boolean(optional=True), prefix="--verbosity", doc=InputDocumentation(doc="Set output verbosity ([0-3]). (default: 0)")), ToolInput(tag="in_no_date", input_type=File(optional=True), prefix="--no-date", doc=InputDocumentation(doc="Do not add date to output file names. (default: False)")), ToolInput(tag="in_add_chr", input_type=Boolean(optional=True), prefix="--add-chr", doc=InputDocumentation(doc="Add 'chr' to chromosome names before printing output. (default: False)")), ToolInput(tag="in_tmp_dir", input_type=Boolean(optional=True), prefix="--tmp-dir", doc=InputDocumentation(doc="Keep all temporary files into this folder. (default: None)")), ToolInput(tag="in_keep_all", input_type=Boolean(optional=True), prefix="--keep-all", doc=InputDocumentation(doc="Try to keep all temporary files even if process does not terminate normally. (default: False)")), ToolInput(tag="in_logger_file", input_type=Boolean(optional=True), prefix="--logger-file", doc=InputDocumentation(doc="Stores the arguments passed to the command into a file. (default: None)")), ToolInput(tag="in_write_message_to_file", input_type=Boolean(optional=True), prefix="--write-message-to-file", doc=InputDocumentation(doc="Store all message into a file. (default: None)")), ToolInput(tag="in_arguments", input_type=Int(), position=0, doc=InputDocumentation(doc="Arguments:"))], outputs=[ToolOutput(tag="out_output_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_file", type_hint=File()), doc=OutputDocumentation(doc="Output file (BED). (default: <stdout>)")), ToolOutput(tag="out_no_date", output_type=File(optional=True), selector=InputSelector(input_to_select="in_no_date", type_hint=File()), doc=OutputDocumentation(doc="Do not add date to output file names. (default: False)"))], container="quay.io/biocontainers/pygtftk:1.2.7--py36h4edd4cd_1", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Gtftk_Get_5P_3P_Coords_V0_1_0().translate("wdl")

