from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Int

Gtftk_Closest_Genes_V0_1_0 = CommandToolBuilder(tool="gtftk_closest_genes", base_command=["gtftk", "closest_genes"], inputs=[ToolInput(tag="in_input_file", input_type=Boolean(optional=True), prefix="--inputfile", doc=InputDocumentation(doc="Path to the GTF file. Default to STDIN (default: <stdin>)")), ToolInput(tag="in_output_file", input_type=File(optional=True), prefix="--outputfile", doc=InputDocumentation(doc="Output file. (default: <stdout>)")), ToolInput(tag="in_from_region_type", input_type=Boolean(optional=True), prefix="--from-region-type", doc=InputDocumentation(doc="What is region to consider for each gene. (default: tss)")), ToolInput(tag="in_nb_neighbors", input_type=Boolean(optional=True), prefix="--nb-neighbors", doc=InputDocumentation(doc="The size of the neighborhood. (default: 1)")), ToolInput(tag="in_to_region_type", input_type=Boolean(optional=True), prefix="--to-region-type", doc=InputDocumentation(doc="What is region to consider for each closest gene. (default: tss)")), ToolInput(tag="in_same_stranded_ness", input_type=Boolean(optional=True), prefix="--same-strandedness", doc=InputDocumentation(doc="Require same strandedness (default: False)")), ToolInput(tag="in_diff_stranded_ness", input_type=Boolean(optional=True), prefix="--diff-strandedness", doc=InputDocumentation(doc="Require different strandedness (default: False)")), ToolInput(tag="in_text_format", input_type=Boolean(optional=True), prefix="--text-format", doc=InputDocumentation(doc="Return a text format. (default: False)")), ToolInput(tag="in_no_header", input_type=Boolean(optional=True), prefix="--no-header", doc=InputDocumentation(doc="Don't print the header line. (default: False)")), ToolInput(tag="in_collapse", input_type=Boolean(optional=True), prefix="--collapse", doc=InputDocumentation(doc="Unwrap. Don't use comma. Print closest genes line by line. (default: False)")), ToolInput(tag="in_identifier", input_type=Boolean(optional=True), prefix="--identifier", doc=InputDocumentation(doc="The key used as gene identifier. (default: gene_id)")), ToolInput(tag="in_verbosity", input_type=Boolean(optional=True), prefix="--verbosity", doc=InputDocumentation(doc="Set output verbosity ([0-3]). (default: 0)")), ToolInput(tag="in_no_date", input_type=File(optional=True), prefix="--no-date", doc=InputDocumentation(doc="Do not add date to output file names. (default: False)")), ToolInput(tag="in_add_chr", input_type=Boolean(optional=True), prefix="--add-chr", doc=InputDocumentation(doc="Add 'chr' to chromosome names before printing output. (default: False)")), ToolInput(tag="in_tmp_dir", input_type=Boolean(optional=True), prefix="--tmp-dir", doc=InputDocumentation(doc="Keep all temporary files into this folder. (default: None)")), ToolInput(tag="in_keep_all", input_type=Boolean(optional=True), prefix="--keep-all", doc=InputDocumentation(doc="Try to keep all temporary files even if process does not terminate normally. (default: False)")), ToolInput(tag="in_logger_file", input_type=Boolean(optional=True), prefix="--logger-file", doc=InputDocumentation(doc="Stores the arguments passed to the command into a file. (default: None)")), ToolInput(tag="in_write_message_to_file", input_type=Boolean(optional=True), prefix="--write-message-to-file", doc=InputDocumentation(doc="Store all message into a file. (default: None)")), ToolInput(tag="in_optional_arguments", input_type=Int(), position=0, doc=InputDocumentation(doc="optional arguments:"))], outputs=[ToolOutput(tag="out_output_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_file", type_hint=File()), doc=OutputDocumentation(doc="Output file. (default: <stdout>)")), ToolOutput(tag="out_no_date", output_type=File(optional=True), selector=InputSelector(input_to_select="in_no_date", type_hint=File()), doc=OutputDocumentation(doc="Do not add date to output file names. (default: False)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Gtftk_Closest_Genes_V0_1_0().translate("wdl", allow_empty_container=True)

