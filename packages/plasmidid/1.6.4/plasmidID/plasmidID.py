from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Directory, Int

Plasmidid_V0_1_0 = CommandToolBuilder(tool="plasmidID", base_command=["plasmidID"], inputs=[ToolInput(tag="in_r_one", input_type=Boolean(optional=True), prefix="--R1", doc=InputDocumentation(doc="<filename>      reads corresponding to paired-end R1 (mandatory)")), ToolInput(tag="in_r_two", input_type=Boolean(optional=True), prefix="--R2", doc=InputDocumentation(doc="<filename>      reads corresponding to paired-end R2 (mandatory)")), ToolInput(tag="in_database", input_type=File(optional=True), prefix="--database", doc=InputDocumentation(doc="database to map and reconstruct (mandatory)")), ToolInput(tag="in_sample", input_type=Boolean(optional=True), prefix="--sample", doc=InputDocumentation(doc="<string>        sample name (mandatory), less than 37 characters")), ToolInput(tag="in_group", input_type=Boolean(optional=True), prefix="--group", doc=InputDocumentation(doc="<string>        group name (optional). If unset, samples will be gathered in NO_GROUP group")), ToolInput(tag="in_contigs", input_type=Boolean(optional=True), prefix="--contigs", doc=InputDocumentation(doc="<filename>      file with contigs. If supplied, plasmidID will not assembly reads")), ToolInput(tag="in_annotate", input_type=File(optional=True), prefix="--annotate", doc=InputDocumentation(doc="file with configuration file for specific annotation")), ToolInput(tag="in_outputdir_output_directory", input_type=Directory(optional=True), prefix="-o", doc=InputDocumentation(doc="<output_dir>    output directory, by default is the current directory")), ToolInput(tag="in_explore", input_type=Boolean(optional=True), prefix="--explore", doc=InputDocumentation(doc="Relaxes default parameters to find less reliable relationships within data supplied and database")), ToolInput(tag="in_only_reconstruct", input_type=Boolean(optional=True), prefix="--only-reconstruct", doc=InputDocumentation(doc="Database supplied will not be filtered and all sequences will be used as scaffold\nThis option does not require R1 and R2, instead a contig file can be supplied")), ToolInput(tag="in_undo_winner_takes", input_type=Boolean(optional=True), prefix="-w", doc=InputDocumentation(doc="Undo winner takes it all algorithm when clustering by kmer - QUICKER MODE")), ToolInput(tag="in_trim_mo_matic_directory", input_type=Directory(optional=True), prefix="--trimmomatic-directory", doc=InputDocumentation(doc="directory holding trimmomatic .jar executable")), ToolInput(tag="in_no_trim", input_type=Boolean(optional=True), prefix="--no-trim", doc=InputDocumentation(doc="Reads supplied will not be quality trimmed")), ToolInput(tag="in_coverage_cut_off", input_type=Boolean(optional=True), prefix="--coverage-cutoff", doc=InputDocumentation(doc="<int>   minimun coverage percentage to select a plasmid as scafold (0-100), default 80")), ToolInput(tag="in_coverage_summary", input_type=Int(optional=True), prefix="--coverage-summary", doc=InputDocumentation(doc="minimun coverage percentage to include plasmids in summary image (0-100), default 90")), ToolInput(tag="in_cluster", input_type=Boolean(optional=True), prefix="--cluster", doc=InputDocumentation(doc="<int>   kmer identity to cluster plasmids into the same representative sequence (0 means identical) (0-1), default 0.5")), ToolInput(tag="in_km_er", input_type=Boolean(optional=True), prefix="--kmer", doc=InputDocumentation(doc="<int>   identity to filter plasmids from the database with kmer approach (0-1), default 0.95")), ToolInput(tag="in_alignment_identity", input_type=Int(optional=True), prefix="--alignment-identity", doc=InputDocumentation(doc="minimun identity percentage aligned for a contig to annotate, default 90")), ToolInput(tag="in_alignment_percentage", input_type=Int(optional=True), prefix="--alignment-percentage", doc=InputDocumentation(doc="minimun length percentage aligned for a contig to annotate, default 20")), ToolInput(tag="in_length_total", input_type=Boolean(optional=True), prefix="--length-total", doc=InputDocumentation(doc="<int>   minimun alignment length to filter blast analysis")), ToolInput(tag="in_extend_annotation", input_type=Int(optional=True), prefix="--extend-annotation", doc=InputDocumentation(doc="look for annotation over regions with no homology found (base pairs), default 500bp")), ToolInput(tag="in_config_directory", input_type=Directory(optional=True), prefix="--config-directory", doc=InputDocumentation(doc="directory holding config files, default config_files/")), ToolInput(tag="in_config_file_individual", input_type=File(optional=True), prefix="--config-file-individual", doc=InputDocumentation(doc="file name of the individual file used to reconstruct")), ToolInput(tag="in_memory", input_type=Boolean(optional=True), prefix="--memory", doc=InputDocumentation(doc="<int>   max memory allowed to use")), ToolInput(tag="in_threads", input_type=Boolean(optional=True), prefix="--threads", doc=InputDocumentation(doc="<int>   number of threads"))], outputs=[ToolOutput(tag="out_outputdir_output_directory", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_outputdir_output_directory", type_hint=File()), doc=OutputDocumentation(doc="<output_dir>    output directory, by default is the current directory"))], container="quay.io/biocontainers/plasmidid:1.6.4--1", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Plasmidid_V0_1_0().translate("wdl")

