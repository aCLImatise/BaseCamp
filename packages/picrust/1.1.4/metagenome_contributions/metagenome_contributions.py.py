from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, Int, File

Metagenome_Contributions_Py_V0_1_0 = CommandToolBuilder(tool="metagenome_contributions.py", base_command=["metagenome_contributions.py"], inputs=[ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Print information during execution -- useful for\ndebugging [default: False]")), ToolInput(tag="in_type_of_prediction", input_type=String(optional=True), prefix="--type_of_prediction", doc=InputDocumentation(doc="Type of functional predictions. Valid choices are: ko,\ncog, rfam [default: ko]")), ToolInput(tag="in_gg_version", input_type=Int(optional=True), prefix="--gg_version", doc=InputDocumentation(doc="Version of GreenGenes that was used for OTU picking.\nValid choices are: 13_5, 18may2012 [default: 13_5]")), ToolInput(tag="in_input_count_table", input_type=String(optional=True), prefix="--input_count_table", doc=InputDocumentation(doc="Precalculated function predictions on per otu basis in\nbiom format (can be gzipped). Note: using this option\noverrides --type_of_prediction and --gg_version.\n[default: none]")), ToolInput(tag="in_suppress_subset_loading", input_type=Boolean(optional=True), prefix="--suppress_subset_loading", doc=InputDocumentation(doc="Normally, only counts for OTUs present in the sample\nare loaded.  If this flag is passed, the full biom\ntable is loaded.  This makes no difference for the\nanalysis, but may result in faster load times (at the\ncost of more memory usage)")), ToolInput(tag="in_load_pre_calc_file_in_biom", input_type=Boolean(optional=True), prefix="--load_precalc_file_in_biom", doc=InputDocumentation(doc="Instead of loading the precalculated file in tab-\ndelimited format (with otu ids as row ids and traits\nas columns) load the data in biom format (with otu as\nSampleIds and traits as ObservationIds) [default:\nFalse]")), ToolInput(tag="in_limit_to_functional_categories", input_type=String(optional=True), prefix="--limit_to_functional_categories", doc=InputDocumentation(doc="If provided only output prediction for functions that\nmatch the specified functional category. Multiple\ncategories can be passed as a list separated by |\n[default: False]")), ToolInput(tag="in_limit_to_function", input_type=String(optional=True), prefix="--limit_to_function", doc=InputDocumentation(doc="If provided, only output predictions for the specified\nfunction ids.  Multiple function ids can be passed\nusing comma delimiters.")), ToolInput(tag="in_input_otu_table", input_type=String(optional=True), prefix="--input_otu_table", doc=InputDocumentation(doc="the input otu table in biom format [REQUIRED]")), ToolInput(tag="in_output_fp", input_type=File(optional=True), prefix="--output_fp", doc=InputDocumentation(doc="the output file for the metagenome contributions\n[REQUIRED]\n"))], outputs=[ToolOutput(tag="out_output_fp", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_fp", type_hint=File()), doc=OutputDocumentation(doc="the output file for the metagenome contributions\n[REQUIRED]\n"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Metagenome_Contributions_Py_V0_1_0().translate("wdl", allow_empty_container=True)

