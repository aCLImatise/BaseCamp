from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Gc_Assembler_V0_1_0 = CommandToolBuilder(tool="gc_assembler", base_command=["gc-assembler"], inputs=[ToolInput(tag="in_input", input_type=Boolean(optional=True), prefix="--input", doc=InputDocumentation(doc="[string]                 Input DAA or RMA6 file. Mandatory option.")), ToolInput(tag="in_output", input_type=Boolean(optional=True), prefix="--output", doc=InputDocumentation(doc="[string]                Output filename template, use %d or %s to represent class id or name, respectively. Default value: input-%d.fasta")), ToolInput(tag="in_ids", input_type=Boolean(optional=True), prefix="--ids", doc=InputDocumentation(doc="[string(s)]               Names or ids of classes to assemble, or keyword ALL for all. Mandatory option.")), ToolInput(tag="in_minlength", input_type=Boolean(optional=True), prefix="--minLength", doc=InputDocumentation(doc="[number]           Minimum contig length. Default value: 200.")), ToolInput(tag="in_min_reads", input_type=Boolean(optional=True), prefix="--minReads", doc=InputDocumentation(doc="[number]          Minimum number of reads. Default value: 2.")), ToolInput(tag="in_min_av_coverage", input_type=Boolean(optional=True), prefix="--minAvCoverage", doc=InputDocumentation(doc="[number]       Minimum average coverage. Default value: 1.")), ToolInput(tag="in_overlap_contigs", input_type=Boolean(optional=True), prefix="--overlapContigs", doc=InputDocumentation(doc="Attempt to overlap contigs. Default value: true.")), ToolInput(tag="in_min_overlap_contigs", input_type=Boolean(optional=True), prefix="--minOverlapContigs", doc=InputDocumentation(doc="[number]   Minimum overlap for two contigs. Default value: 20.")), ToolInput(tag="in_min_percent_identity_contigs", input_type=Boolean(optional=True), prefix="--minPercentIdentityContigs", doc=InputDocumentation(doc="[number]   Mininum percent identity to merge contigs. Default value: 98.0.")), ToolInput(tag="in_threads", input_type=Boolean(optional=True), prefix="--threads", doc=InputDocumentation(doc="[number]               Number of worker threads. Default value: 4.")), ToolInput(tag="in_very_verbose", input_type=Boolean(optional=True), prefix="--veryVerbose", doc=InputDocumentation(doc="Report program is very verbose detail. Default value: false.")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Echo commandline options and be verbose. Default value: false.")), ToolInput(tag="in_classification", input_type=String(), position=0, doc=InputDocumentation(doc="-fun, --function [string]            Name of functional classification (choices: EC, EGGNOG, GTDB, INTERPRO2GO, KEGG, SEED, none). Mandatory option.")), ToolInput(tag="in_options", input_type=String(), position=1, doc=InputDocumentation(doc="-mor, --minOverlapReads [number]     Minimum overlap for two reads. Default value: 20."))], outputs=[], container="quay.io/biocontainers/megan:6.21.2--h9ee0642_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Gc_Assembler_V0_1_0().translate("wdl")

