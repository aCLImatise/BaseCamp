from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Int, String

Migmap_V0_1_0 = CommandToolBuilder(tool="migmap", base_command=["migmap"], inputs=[ToolInput(tag="in_all_alleles", input_type=Boolean(optional=True), prefix="--all-alleles", doc=InputDocumentation(doc="Will use all alleles during\nalignment (this is going to be\nslower). [default = use only major\n(*01) alleles]")), ToolInput(tag="in_allow_incomplete", input_type=Boolean(optional=True), prefix="--allow-incomplete", doc=InputDocumentation(doc="Report clonotypes with partial\nCDR3 mapping.")), ToolInput(tag="in_allow_no_cdr_three", input_type=Boolean(optional=True), prefix="--allow-no-cdr3", doc=InputDocumentation(doc="Report clonotypes with no CDR3")), ToolInput(tag="in_allow_noncoding", input_type=Boolean(optional=True), prefix="--allow-noncoding", doc=InputDocumentation(doc="Report clonotypes that have either\nstop codon or frameshift in their\nreceptor sequence.")), ToolInput(tag="in_blast_dir", input_type=File(optional=True), prefix="--blast-dir", doc=InputDocumentation(doc="Path to folder that contains\n'igblastn' and 'makeblastdb'\nbinaries. [default = assume they\nare added to $PATH and execute\nthem directly]")), ToolInput(tag="in_by_read", input_type=Boolean(optional=True), prefix="--by-read", doc=InputDocumentation(doc="Will output mapping details for\neach read. [default = assemble\nclonotypes and output clonotype\nabundance table]")), ToolInput(tag="in_custom_database", input_type=File(optional=True), prefix="--custom-database", doc=InputDocumentation(doc="Path to a custom segments\ndatabase. [default = use built-in\ndatabase]")), ToolInput(tag="in_data_dir", input_type=File(optional=True), prefix="--data-dir", doc=InputDocumentation(doc="Path to folder that contains data\nbundle (internal_data/ and\noptional_file/ directories).\n[default = $install_dir/data/]")), ToolInput(tag="in_details", input_type=Boolean(optional=True), prefix="--details", doc=InputDocumentation(doc="<field1,field2,.../all>   Additional fields to provide for\noutput, allowed values:\nfr1nt,cdr1nt,fr2nt,cdr2nt,fr3nt,fr\n4nt,contignt,fr1aa,cdr1aa,fr2aa,cd\nr2aa,fr3aa,fr4aa,contigaa.")), ToolInput(tag="in_number_reads_take", input_type=Int(optional=True), prefix="-n", doc=InputDocumentation(doc="Number of reads to take. [default\n= all]")), ToolInput(tag="in_number_available_processors", input_type=Int(optional=True), prefix="-p", doc=InputDocumentation(doc="Number of cores to use. [default =\nall available processors]")), ToolInput(tag="in_threshold_average_quality", input_type=Int(optional=True), prefix="-q", doc=InputDocumentation(doc="Threshold for average quality of\nmutations and N-regions of CDR3\n[default = 25]")), ToolInput(tag="in_chain_receptor_gene", input_type=Boolean(optional=True), prefix="-R", doc=InputDocumentation(doc="<chain1,...>                        Receptor gene and chain. Several\nchains can be specified, separated\nwith commas. Allowed values: [TRA,\nTRB, TRG, TRD, IGH, IGL, IGK].\n[required]")), ToolInput(tag="in_report", input_type=File(optional=True), prefix="--report", doc=InputDocumentation(doc="File to store MIGMAP report. Will\nappend report line if file exists.")), ToolInput(tag="in_species_allowed_humanmouse", input_type=String(optional=True), prefix="-S", doc=InputDocumentation(doc="Species. Allowed values: [human,\nmouse, rat, rabbit,\nrhesus_monkey]. [required]")), ToolInput(tag="in_unmapped", input_type=Boolean(optional=True), prefix="--unmapped", doc=InputDocumentation(doc="<fastq[.gz]>             Output unmapped reads in specified")), ToolInput(tag="in_mapping_dot", input_type=String(), position=0, doc=InputDocumentation(doc="--allow-noncanonical                Report clonotypes that have")), ToolInput(tag="in_file_dot", input_type=File(), position=0, doc=InputDocumentation(doc="--use-kabat                         Will use KABAT nomenclature for"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Migmap_V0_1_0().translate("wdl", allow_empty_container=True)

