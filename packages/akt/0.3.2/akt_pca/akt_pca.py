from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean

Akt_Pca_V0_1_0 = CommandToolBuilder(tool="akt_pca", base_command=["akt", "pca"], inputs=[ToolInput(tag="in_output", input_type=Boolean(optional=True), prefix="--output", doc=InputDocumentation(doc=":                   output vcf")), ToolInput(tag="in_output_fmt", input_type=Boolean(optional=True), prefix="--outputfmt", doc=InputDocumentation(doc=":                output vcf format")), ToolInput(tag="in_regions_file", input_type=Boolean(optional=True), prefix="--regions-file", doc=InputDocumentation(doc=":             restrict to regions listed in a file")), ToolInput(tag="in_regions", input_type=Boolean(optional=True), prefix="--regions", doc=InputDocumentation(doc=":                  chromosome region")), ToolInput(tag="in_targets_file", input_type=Boolean(optional=True), prefix="--targets-file", doc=InputDocumentation(doc=":             similar to -R but streams rather than index-jumps")), ToolInput(tag="in_targets", input_type=Boolean(optional=True), prefix="--targets", doc=InputDocumentation(doc=":                  similar to -r but streams rather than index-jumps")), ToolInput(tag="in_force", input_type=Boolean(optional=True), prefix="--force", doc=InputDocumentation(doc=":                    run pca without -R/-T/-F")), ToolInput(tag="in_samples_file", input_type=Boolean(optional=True), prefix="--samples-file", doc=InputDocumentation(doc=":             list of samples, file")), ToolInput(tag="in_samples", input_type=Boolean(optional=True), prefix="--samples", doc=InputDocumentation(doc=":                  list of samples")), ToolInput(tag="in_weight", input_type=Boolean(optional=True), prefix="--weight", doc=InputDocumentation(doc=":                   VCF with weights for PCA")), ToolInput(tag="in_npca", input_type=Boolean(optional=True), prefix="--npca", doc=InputDocumentation(doc=":                     first N principle components")), ToolInput(tag="in_alg", input_type=Boolean(optional=True), prefix="--alg", doc=InputDocumentation(doc=":                      exact SVD (slow)")), ToolInput(tag="in_cov_def", input_type=Boolean(optional=True), prefix="--covdef", doc=InputDocumentation(doc=":                   definition of SVD matrix: 0=(G-mu) 1=(G-mu)/sqrt(p(1-p)) 2=diag-G(2-G) default(1)")), ToolInput(tag="in_extra", input_type=Boolean(optional=True), prefix="--extra", doc=InputDocumentation(doc=":                    extra vectors for Red SVD")), ToolInput(tag="in_iterations", input_type=Boolean(optional=True), prefix="--iterations", doc=InputDocumentation(doc="number of power iterations (default 10 is sufficient)")), ToolInput(tag="in_sv_file", input_type=Boolean(optional=True), prefix="--svfile", doc=InputDocumentation(doc=":                   File containing singular values")), ToolInput(tag="in_assume_hom_ref", input_type=Boolean(optional=True), prefix="--assume-homref", doc=InputDocumentation(doc=":            Assume missing genotypes/sites are homozygous reference (useful for projecting a single sample)"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Akt_Pca_V0_1_0().translate("wdl", allow_empty_container=True)

