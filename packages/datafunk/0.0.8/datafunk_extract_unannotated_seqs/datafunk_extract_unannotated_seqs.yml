!Command
command:
- datafunk
- extract_unannotated_seqs
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - --input-fasta
  description: fasta file to extract sequences from
  args: !SimpleFlagArg
    name: input.fasta
- !Flag
  optional: true
  synonyms:
  - --input-metadata
  description: metadata whose columns and rows will be checked
  args: !SimpleFlagArg
    name: input.csv
- !Flag
  optional: true
  synonyms:
  - --null-column
  description: metadata column which will be checked as empty
  args: !SimpleFlagArg
    name: NULL_COLUMN
- !Flag
  optional: true
  synonyms:
  - --index-column
  description: metadata column to match to fasta file
  args: !SimpleFlagArg
    name: INDEX_COLUMN
- !Flag
  optional: true
  synonyms:
  - --output-fasta
  description: "fasta file to write\n"
  args: !SimpleFlagArg
    name: output.fasta
- !Flag
  optional: true
  synonyms:
  - --output-metadata
  description: ''
  args: !SimpleFlagArg
    name: file.csv
- !Flag
  optional: true
  synonyms:
  - --output-tree
  description: ''
  args: !SimpleFlagArg
    name: file.tree
- !Flag
  optional: true
  synonyms:
  - --input-tree
  description: ''
  args: !SimpleFlagArg
    name: file.tree
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "usage: datafunk extract_unannotated_seqs --input-tree <file.tree> --input-metadata\
  \ <file.csv> --output-tree <file.tree> --output-metadata <file.csv>\n\nextract sequences\
  \ with an empty cell in a specified cell in a metadata table\n\nrequired arguments:\n\
  \  --input-fasta input.fasta\n                        fasta file to extract sequences\
  \ from\n  --input-metadata input.csv\n                        metadata whose columns\
  \ and rows will be checked\n  --null-column NULL_COLUMN\n                      \
  \  metadata column which will be checked as empty\n  --index-column INDEX_COLUMN\n\
  \                        metadata column to match to fasta file\n  --output-fasta\
  \ output.fasta\n                        fasta file to write\n"
generated_using:
- --help
docker_image: quay.io/biocontainers/datafunk:0.0.8--pyh3252c3a_0
