from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, Float, File, String

Gustaf_V0_1_0 = CommandToolBuilder(tool="gustaf", base_command=["gustaf"], inputs=[ToolInput(tag="in_version_check", input_type=Boolean(optional=True), prefix="--version-check", doc=InputDocumentation(doc="Turn this option off to disable version update notifications of the\napplication. One of 1, ON, TRUE, T, YES, 0, OFF, FALSE, F, and NO.\nDefault: 1.")), ToolInput(tag="in_trans_pen", input_type=Int(optional=True), prefix="--transPen", doc=InputDocumentation(doc="Interchromosomal translocation penalty Default: 5.")), ToolInput(tag="in_in_v_pen", input_type=Int(optional=True), prefix="--invPen", doc=InputDocumentation(doc="Inversion penalty Default: 5.")), ToolInput(tag="in_order_pen", input_type=Int(optional=True), prefix="--orderPen", doc=InputDocumentation(doc="Intrachromosomal order change penalty Default: 0.")), ToolInput(tag="in_overlap_thresh", input_type=Float(optional=True), prefix="--overlapThresh", doc=InputDocumentation(doc="Allowed overlap between matches Default: 0.5.")), ToolInput(tag="in_gap_thresh", input_type=Int(optional=True), prefix="--gapThresh", doc=InputDocumentation(doc="Allowed gap length between matches, default value corresponse to\nexpected size of microindels (5 bp) Default: 5.")), ToolInput(tag="in_in_it_gap_thresh", input_type=Int(optional=True), prefix="--initGapThresh", doc=InputDocumentation(doc="Allowed initial or ending gap length at begin and end of read with\nno breakpoint (e.g. due to sequencing errors at the end) Default:\n15.")), ToolInput(tag="in_break_end_thresh", input_type=Int(optional=True), prefix="--breakendThresh", doc=InputDocumentation(doc="Allowed initial or ending gap length at begin and end of read that\ncreates a breakend/breakpoint (e.g. for reads extending into\ninsertions) Default: 30.")), ToolInput(tag="in_tandem_thresh", input_type=Int(optional=True), prefix="--tandemThresh", doc=InputDocumentation(doc="Minimal length of (small) insertion/duplication with double overlap\nto be considered tandem repeat Default: 50.")), ToolInput(tag="in_breakpoint_pos_range", input_type=Int(optional=True), prefix="--breakpoint-pos-range", doc=InputDocumentation(doc="Allowed difference in breakpoint position Default: 5.")), ToolInput(tag="in_complex_breakpoints", input_type=Boolean(optional=True), prefix="--complex-breakpoints", doc=InputDocumentation(doc="Disable inferring complex SVs")), ToolInput(tag="in_support", input_type=Int(optional=True), prefix="--support", doc=InputDocumentation(doc="Number of supporting reads Default: 2.")), ToolInput(tag="in_mate_support", input_type=Int(optional=True), prefix="--mate-support", doc=InputDocumentation(doc="Number of supporting concordant mates Default: 2.")), ToolInput(tag="in_library_size", input_type=Int(optional=True), prefix="--library-size", doc=InputDocumentation(doc="Library size of paired-end reads")), ToolInput(tag="in_library_error", input_type=Int(optional=True), prefix="--library-error", doc=InputDocumentation(doc="Library error (sd) of paired-end reads")), ToolInput(tag="in_rev_compl", input_type=Boolean(optional=True), prefix="--revcompl", doc=InputDocumentation(doc="Disable reverse complementing second mate pair input file.")), ToolInput(tag="in_match_file", input_type=File(optional=True), prefix="--matchfile", doc=InputDocumentation(doc="File of (stellar) matches Valid filetypes are: .gff and .GFF.")), ToolInput(tag="in_gff_out", input_type=File(optional=True), prefix="--gffOut", doc=InputDocumentation(doc="Name of gff breakpoint output file. Valid filetypes are: .txt and\n.gff. Default: breakpoints.gff.")), ToolInput(tag="in_vcf_out", input_type=File(optional=True), prefix="--vcfOut", doc=InputDocumentation(doc="Name of vcf breakpoint output file. Valid filetypes are: .vcf and\n.txt. Default: breakpoints.vcf.")), ToolInput(tag="in_job_name", input_type=String(optional=True), prefix="--jobName", doc=InputDocumentation(doc="Job/Queue name Default: .")), ToolInput(tag="in_dots", input_type=Boolean(optional=True), prefix="--dots", doc=InputDocumentation(doc="Enable graph output in dot format")), ToolInput(tag="in_num_threads", input_type=Int(optional=True), prefix="--numThreads", doc=InputDocumentation(doc="Number of threads for parallelization of I/O. Default: 1.")), ToolInput(tag="in_epsilon", input_type=Int(optional=True), prefix="--epsilon", doc=InputDocumentation(doc="Maximal error rate (max 0.25). In range [0.0000001..0.25]. Default:\n0.05.")), ToolInput(tag="in_minlength", input_type=Int(optional=True), prefix="--minLength", doc=InputDocumentation(doc="Minimal length of epsilon-matches. In range [0..inf]. Default: 100.")), ToolInput(tag="in_forward", input_type=Boolean(optional=True), prefix="--forward", doc=InputDocumentation(doc="Search only in forward strand of database.")), ToolInput(tag="in_reverse", input_type=Boolean(optional=True), prefix="--reverse", doc=InputDocumentation(doc="Search only in reverse complement of database.")), ToolInput(tag="in_alphabet", input_type=Int(optional=True), prefix="--alphabet", doc=InputDocumentation(doc="Alphabet type of input sequences (dna, rna, dna5, rna5, protein,\nchar). One of dna, dna5, rna, rna5, protein, and char.")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Set verbosity mode.")), ToolInput(tag="in_km_er", input_type=Int(optional=True), prefix="--kmer", doc=InputDocumentation(doc="Length of the q-grams (max 32). In range [1..32].")), ToolInput(tag="in_repeat_period", input_type=Int(optional=True), prefix="--repeatPeriod", doc=InputDocumentation(doc="Maximal period of low complexity repeats to be filtered. Default: 1.")), ToolInput(tag="in_repeat_length", input_type=Int(optional=True), prefix="--repeatLength", doc=InputDocumentation(doc="Minimal length of low complexity repeats to be filtered. Default:\n1000.")), ToolInput(tag="in_abundance_cut", input_type=Float(optional=True), prefix="--abundanceCut", doc=InputDocumentation(doc="k-mer overabundance cut ratio. In range [0..1]. Default: 1.")), ToolInput(tag="in_x_drop", input_type=Int(optional=True), prefix="--xDrop", doc=InputDocumentation(doc="Maximal x-drop for extension. Default: 5.")), ToolInput(tag="in_verification", input_type=String(optional=True), prefix="--verification", doc=InputDocumentation(doc="Verification strategy: exact or bestLocal or bandedGlobal One of\nexact, bestLocal, and bandedGlobal. Default: exact.")), ToolInput(tag="in_disable_thresh", input_type=Int(optional=True), prefix="--disableThresh", doc=InputDocumentation(doc="Maximal number of verified matches before disabling verification for\none query sequence (default infinity). In range [0..inf].")), ToolInput(tag="in_num_matches", input_type=Int(optional=True), prefix="--numMatches", doc=InputDocumentation(doc="Maximal number of kept matches per query and database. If STELLAR\nfinds more matches, only the longest ones are kept. Default: 50.")), ToolInput(tag="in_sort_thresh", input_type=Int(optional=True), prefix="--sortThresh", doc=InputDocumentation(doc="Number of matches triggering removal of duplicates. Choose a smaller\nvalue for saving space. Default: 500."))], outputs=[ToolOutput(tag="out_gff_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_gff_out", type_hint=File()), doc=OutputDocumentation(doc="Name of gff breakpoint output file. Valid filetypes are: .txt and\n.gff. Default: breakpoints.gff.")), ToolOutput(tag="out_vcf_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_vcf_out", type_hint=File()), doc=OutputDocumentation(doc="Name of vcf breakpoint output file. Valid filetypes are: .vcf and\n.txt. Default: breakpoints.vcf."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Gustaf_V0_1_0().translate("wdl", allow_empty_container=True)

