from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, File, String, Float

Shapeit_V0_1_0 = CommandToolBuilder(tool="shapeit", base_command=["shapeit"], inputs=[ToolInput(tag="in_produce_help_message", input_type=Boolean(optional=True), prefix="-H", doc=InputDocumentation(doc="[ --help ]                         Produce help message.")), ToolInput(tag="in_licence", input_type=Boolean(optional=True), prefix="--licence", doc=InputDocumentation(doc="Produce licence description.")), ToolInput(tag="in_source", input_type=Boolean(optional=True), prefix="--source", doc=InputDocumentation(doc="Produce source file version details.")), ToolInput(tag="in_seed", input_type=Int(optional=True), prefix="--seed", doc=InputDocumentation(doc="(=1599704773)              Seed of the random number generator.")), ToolInput(tag="in_aligned", input_type=Boolean(optional=True), prefix="--aligned", doc=InputDocumentation(doc="Ref allele is aligned on the reference")), ToolInput(tag="in_arg_shapeitdatetimeuuidloglog_file", input_type=File(optional=True), prefix="-L", doc=InputDocumentation(doc="[ --output-log ] arg (=shapeit_date_time_UUID.log)\nLog file containing a copy of the\nscreen output.")), ToolInput(tag="in_exclude_snp", input_type=String(optional=True), prefix="--exclude-snp", doc=InputDocumentation(doc="List of positions to exclude in\ninput/output files.")), ToolInput(tag="in_include_snp", input_type=String(optional=True), prefix="--include-snp", doc=InputDocumentation(doc="List of positions to include in\ninput/output files.")), ToolInput(tag="in_exclude_ind", input_type=String(optional=True), prefix="--exclude-ind", doc=InputDocumentation(doc="List of samples to exclude in\ninput/output files.")), ToolInput(tag="in_include_ind", input_type=String(optional=True), prefix="--include-ind", doc=InputDocumentation(doc="List of samples to include in\ninput/output files.")), ToolInput(tag="in_exclude_grp", input_type=String(optional=True), prefix="--exclude-grp", doc=InputDocumentation(doc="List of populations to exclude in input\nfiles. Works only on the reference\npanel of haplotypes.")), ToolInput(tag="in_include_grp", input_type=String(optional=True), prefix="--include-grp", doc=InputDocumentation(doc="List of populations to include in input\nfiles. Works only on the reference\npanel of haplotypes.")), ToolInput(tag="in_input_from", input_type=Int(optional=True), prefix="--input-from", doc=InputDocumentation(doc="(=0)                 First physical position to consider in\ninput files.")), ToolInput(tag="in_input_to", input_type=File(optional=True), prefix="--input-to", doc=InputDocumentation(doc="(=1000000000)          Last physical position to consider in\ninput file.")), ToolInput(tag="in_output_from", input_type=Int(optional=True), prefix="--output-from", doc=InputDocumentation(doc="(=0)                First physical position to output.")), ToolInput(tag="in_output_to", input_type=Int(optional=True), prefix="--output-to", doc=InputDocumentation(doc="(=1000000000)         Last physical position to output.")), ToolInput(tag="in_arg_unphased_pedmap", input_type=Boolean(optional=True), prefix="-P", doc=InputDocumentation(doc="[ --input-ped ] arg                Unphased genotypes in PED/MAP format.")), ToolInput(tag="in_missing_code", input_type=Int(optional=True), prefix="--missing-code", doc=InputDocumentation(doc="(=0)               Missing data character in PED/MAP")), ToolInput(tag="in_arg_unphased_vcf", input_type=Boolean(optional=True), prefix="-V", doc=InputDocumentation(doc="[ --input-vcf ] arg                Unphased genotypes in VCF format.")), ToolInput(tag="in_arg_genetic_map", input_type=Boolean(optional=True), prefix="-M", doc=InputDocumentation(doc="[ --input-map ] arg                Genetic map in HapMap format.")), ToolInput(tag="in_arg_reference_set", input_type=Boolean(optional=True), prefix="-R", doc=InputDocumentation(doc="[ --input-ref ] arg                Reference set of haplotypes in\nHAPS/SAMPLE format.")), ToolInput(tag="in_input_in_it", input_type=String(optional=True), prefix="--input-init", doc=InputDocumentation(doc="Phased haplotypes in HAPS/SAMPLE format\nused for initialisation.")), ToolInput(tag="in_missing_maf", input_type=Boolean(optional=True), prefix="--missing-maf", doc=InputDocumentation(doc="MAF based initialisation of missing\ngenotypes prior to phasing")), ToolInput(tag="in_unphased_genotypes_chromosomex", input_type=Boolean(optional=True), prefix="-X", doc=InputDocumentation(doc="[ --chrX ]                         Unphased genotypes are from chromosome\nX non autosomal region.")), ToolInput(tag="in_burn", input_type=Int(optional=True), prefix="--burn", doc=InputDocumentation(doc="(=7)                       Number of burn-in MCMC iterations.")), ToolInput(tag="in_prune", input_type=Int(optional=True), prefix="--prune", doc=InputDocumentation(doc="(=8)                      Number of pruning MCMC iterations.")), ToolInput(tag="in_main", input_type=Int(optional=True), prefix="--main", doc=InputDocumentation(doc="(=20)                      Number of main MCMC iterations.")), ToolInput(tag="in_run", input_type=Int(optional=True), prefix="--run", doc=InputDocumentation(doc="(=1)                        Number of pruning stages")), ToolInput(tag="in_no_mcmc", input_type=Boolean(optional=True), prefix="--no-mcmc", doc=InputDocumentation(doc="No MCMC iteration (just phase given the\nreference panel haplotypes).")), ToolInput(tag="in_arg_number_hidden", input_type=Boolean(optional=True), prefix="-S", doc=InputDocumentation(doc="[ --states ] arg (=100)            Number of hidden states used for\nphasing (selected using Hamming\ndistance minimisation).")), ToolInput(tag="in_states_random", input_type=Int(optional=True), prefix="--states-random", doc=InputDocumentation(doc="(=0)              Number of hidden states used for\nphasing (selected at random).")), ToolInput(tag="in_states_p_match", input_type=Int(optional=True), prefix="--states-pmatch", doc=InputDocumentation(doc="(=0)              Number of hidden states used for\nphasing (selected using perfect match\nmaximisation).")), ToolInput(tag="in_states_cov", input_type=Int(optional=True), prefix="--states-cov", doc=InputDocumentation(doc="(=0)                 Number of hidden states used for\nphasing (selected using perfect match\nthat maximise coverage of the region).")), ToolInput(tag="in_arg_mean_size", input_type=Boolean(optional=True), prefix="-W", doc=InputDocumentation(doc="[ --window ] arg (=2)              Mean size of the windows in which\nconditioning haplotypes are defined.")), ToolInput(tag="in_model_version_one", input_type=Boolean(optional=True), prefix="--model-version1", doc=InputDocumentation(doc="Use the graphical model to represent\nthe conditioning haplotypes (as in\nSHAPEIT v1).")), ToolInput(tag="in_effective_size", input_type=Int(optional=True), prefix="--effective-size", doc=InputDocumentation(doc="(=15000)         Effective size of the population.")), ToolInput(tag="in_rho", input_type=Float(optional=True), prefix="--rho", doc=InputDocumentation(doc="(=0.0004)                   Constant recombination rate.")), ToolInput(tag="in_input_copy_states", input_type=String(optional=True), prefix="--input-copy-states", doc=InputDocumentation(doc="To specify who to copy from")), ToolInput(tag="in_arg_phased_haplotypes", input_type=Boolean(optional=True), prefix="-O", doc=InputDocumentation(doc="[ --output-max ] arg               Phased haplotypes in HAPS/SAMPLE")), ToolInput(tag="in_v_two_do_tr_eight_three_seven", input_type=Int(), position=0, doc=InputDocumentation(doc="[33mBasic options[0m:")), ToolInput(tag="in_genome", input_type=String(), position=1, doc=InputDocumentation(doc="-T [ --thread ] arg (=1)              Number of thread used for phasing.")), ToolInput(tag="in_account_dot", input_type=String(), position=2, doc=InputDocumentation(doc="--duohmm                              Phase pedigrees using the duoHMM ")), ToolInput(tag="in_algorithm_dot", input_type=String(), position=3, doc=InputDocumentation(doc="-G [ --input-gen ] arg                Unphased genotypes in GEN/SAMPLE "))], outputs=[ToolOutput(tag="out_arg_shapeitdatetimeuuidloglog_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_arg_shapeitdatetimeuuidloglog_file", type_hint=File()), doc=OutputDocumentation(doc="[ --output-log ] arg (=shapeit_date_time_UUID.log)\nLog file containing a copy of the\nscreen output."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Shapeit_V0_1_0().translate("wdl", allow_empty_container=True)

