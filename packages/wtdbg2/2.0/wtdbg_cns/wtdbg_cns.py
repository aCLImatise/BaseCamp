from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, File, String, Boolean

Wtdbg_Cns_V0_1_0 = CommandToolBuilder(tool="wtdbg_cns", base_command=["wtdbg-cns"], inputs=[ToolInput(tag="in_number_of_threads", input_type=Int(optional=True), prefix="-t", doc=InputDocumentation(doc="Number of threads, [1]")), ToolInput(tag="in_input_files_wtdbg", input_type=File(optional=True), prefix="-i", doc=InputDocumentation(doc="Input file(s) *.utg.cns from wtdbg, +, [STDIN]")), ToolInput(tag="in_output_files", input_type=String(optional=True), prefix="-o", doc=InputDocumentation(doc="Output files, [STDOUT]")), ToolInput(tag="in_force_overwrite", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc="Force overwrite")), ToolInput(tag="in_expected_length_say", input_type=Int(optional=True), prefix="-j", doc=InputDocumentation(doc="Expected length of node, or say the overlap length of two adject units in layout file, [1000] bp")), ToolInput(tag="in_kmer_size_long", input_type=Int(optional=True), prefix="-k", doc=InputDocumentation(doc="Kmer size for long reads, [15]")), ToolInput(tag="in_zcutoff_drop_score", input_type=Int(optional=True), prefix="-Z", doc=InputDocumentation(doc="Z-cutoff, drop the lower  (score / <-X>), [4]")), ToolInput(tag="in_drop_lagger_position", input_type=Int(optional=True), prefix="-W", doc=InputDocumentation(doc="W-cutoff, drop the lagger (position), [48]\nIn DAG correction, -W set the bandwidth of alignment")), ToolInput(tag="in_high_coverage_bonus", input_type=Int(optional=True), prefix="-H", doc=InputDocumentation(doc="High coverage bonus, [1]")), ToolInput(tag="in_high_coverage_cutoff", input_type=Int(optional=True), prefix="-L", doc=InputDocumentation(doc="High coverage cutoff = avg_cov / <-L> [10]")), ToolInput(tag="in_candidate_strategy_bestkmers", input_type=Int(optional=True), prefix="-c", doc=InputDocumentation(doc="Candidate strategy, 0: best-kmers, 1: median length, 2: first (include), 3: first (exclude), 4: longest, 5, shortest, [0]\nIn DAG correction, force to use strategy 2")), ToolInput(tag="in_match_score", input_type=Int(optional=True), prefix="-M", doc=InputDocumentation(doc="Match score, [2]")), ToolInput(tag="in_mismatch_score", input_type=Int(optional=True), prefix="-X", doc=InputDocumentation(doc="Mismatch score, [-7]")), ToolInput(tag="in_insertion_score", input_type=Int(optional=True), prefix="-I", doc=InputDocumentation(doc="Insertion score, [-3]")), ToolInput(tag="in_deletion_score", input_type=Int(optional=True), prefix="-D", doc=InputDocumentation(doc="Deletion score, [-4]")), ToolInput(tag="in_gap_extension_score", input_type=Int(optional=True), prefix="-E", doc=InputDocumentation(doc="Gap extension score, [-2]")), ToolInput(tag="in_dbg_correction_correction", input_type=Int(optional=True), prefix="-m", doc=InputDocumentation(doc="1: DBG correction; 2: DAG correction, [1]")), ToolInput(tag="in_correct_structure_error", input_type=Int(optional=True), prefix="-S", doc=InputDocumentation(doc="whether to correct structure before error correction, [1]")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="Verbose"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Wtdbg_Cns_V0_1_0().translate("wdl", allow_empty_container=True)

