from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean, Directory, Int

Mut_Annotate_V0_1_0 = CommandToolBuilder(tool="mut_annotate", base_command=["mut_annotate"], inputs=[ToolInput(tag="in_log_level", input_type=File(optional=True), prefix="--log-level", doc=InputDocumentation(doc="Write a log file (--log-level=DEBUG for debug mode,\n--log-level=INFO for info mode)")), ToolInput(tag="in_log", input_type=File(optional=True), prefix="--log", doc=InputDocumentation(doc="Path to log file. (accepts 'stdout')")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Flag for more verbose log output")), ToolInput(tag="in_input", input_type=File(optional=True), prefix="--input", doc=InputDocumentation(doc="gene FASTA file from extract_gene_seq script")), ToolInput(tag="in_mutations", input_type=File(optional=True), prefix="--mutations", doc=InputDocumentation(doc="DNA mutations file (MAF file)")), ToolInput(tag="in_bed", input_type=File(optional=True), prefix="--bed", doc=InputDocumentation(doc="BED file annotation of genes")), ToolInput(tag="in_score_dir", input_type=Directory(optional=True), prefix="--score-dir", doc=InputDocumentation(doc="Directory containing pre-compute score information in\nfor VEST and evolutionary conservation in pickle\nformat (Default: None).")), ToolInput(tag="in_processes", input_type=Int(optional=True), prefix="--processes", doc=InputDocumentation(doc="Number of processes to use. 0 indicates using a single\nprocess without using a multiprocessing pool (more\nmeans Faster, default: 0).")), ToolInput(tag="in_num_iterations", input_type=Int(optional=True), prefix="--num-iterations", doc=InputDocumentation(doc="Number of iterations for null model simulations. If\nzero is specified then output represents a result from\nactually observed mutations (provided by -m\nparameter), otherwise results will be from simulated\nmutations. (Default: 0).")), ToolInput(tag="in_context", input_type=Int(optional=True), prefix="--context", doc=InputDocumentation(doc="Number of DNA bases to use as context. 0 indicates no\ncontext. 1 indicates only use the mutated base. 1.5\nindicates using the base context used in CHASM (http:/\n/wiki.chasmsoftware.org/index.php/CHASM_Overview). 2\nindicates using the mutated base and the upstream\nbase. 3 indicates using the mutated base and both the\nupstream and downstream bases. (Default: 1.5)")), ToolInput(tag="in_summary", input_type=Boolean(optional=True), prefix="--summary", doc=InputDocumentation(doc="Flag for saving results as summarized features used\n(Default: True).")), ToolInput(tag="in_maf", input_type=Boolean(optional=True), prefix="--maf", doc=InputDocumentation(doc="Flag for saving results in MAF format (Default:\nFalse).")), ToolInput(tag="in_use_unmapped", input_type=Boolean(optional=True), prefix="--use-unmapped", doc=InputDocumentation(doc="Use mutations that are not mapped to the the single\nreference transcript for a gene specified in the bed\nfile indicated by the -b option.")), ToolInput(tag="in_genome", input_type=File(optional=True), prefix="--genome", doc=InputDocumentation(doc="Path to the genome fasta file. Required if --use-\nunmapped flag is used. (Default: None)")), ToolInput(tag="in_recurrent", input_type=Int(optional=True), prefix="--recurrent", doc=InputDocumentation(doc="Minimum number of mutations at a position for it to be\nconsidered a recurrently mutated position (Default:\n3).")), ToolInput(tag="in_fraction", input_type=Int(optional=True), prefix="--fraction", doc=InputDocumentation(doc="Fraction of total mutations in a gene. This define the\nminimumm number of mutations for a position to be\ndefined as recurrently mutated (Default: .02).")), ToolInput(tag="in_unique", input_type=Boolean(optional=True), prefix="--unique", doc=InputDocumentation(doc="Only keep unique mutations for each tumor\nsample.Mutations reproted from heterogeneous sources\nmay contain duplicates, e.g. a tumor sample was\nsequenced twice.")), ToolInput(tag="in_drop_silent", input_type=Boolean(optional=True), prefix="--drop-silent", doc=InputDocumentation(doc="Drop silent mutations in simulations. Useful if\nprovided mutations don't include silent mutations")), ToolInput(tag="in_restrict_genes", input_type=Boolean(optional=True), prefix="--restrict-genes", doc=InputDocumentation(doc="Important option for gene panels. Restrict simulated\nindels to only occur within the same set of genes as\nprovied in the mutation file.")), ToolInput(tag="in_seed", input_type=Int(optional=True), prefix="--seed", doc=InputDocumentation(doc="Specify the seed for the pseudo random number\ngenerator. By default, the seed is randomly chosen\nbased. The seed will be used for the monte carlo\nsimulations (Default: 101).")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="Output text file of results\n"))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="Output text file of results\n"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Mut_Annotate_V0_1_0().translate("wdl", allow_empty_container=True)

