from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Directory, Int, String, Boolean, Float

Rtg_Vcfeval_V0_1_0 = CommandToolBuilder(tool="rtg_vcfeval", base_command=["rtg", "vcfeval"], inputs=[ToolInput(tag="in_baseline", input_type=File(optional=True), prefix="--baseline", doc=InputDocumentation(doc="VCF file containing baseline variants")), ToolInput(tag="in_bed_regions", input_type=File(optional=True), prefix="--bed-regions", doc=InputDocumentation(doc="if set, only read VCF records that overlap the\nranges contained in the specified BED file")), ToolInput(tag="in_calls", input_type=File(optional=True), prefix="--calls", doc=InputDocumentation(doc="VCF file containing called variants")), ToolInput(tag="in_evaluation_regions", input_type=File(optional=True), prefix="--evaluation-regions", doc=InputDocumentation(doc="if set, evaluate within regions contained in\nthe supplied BED file, allowing transborder\nmatches. To be used for truth-set\nhigh-confidence regions or other regions of\ninterest where region boundary effects should\nbe minimized")), ToolInput(tag="in_output", input_type=Directory(optional=True), prefix="--output", doc=InputDocumentation(doc="directory for output")), ToolInput(tag="in_region", input_type=Int(optional=True), prefix="--region", doc=InputDocumentation(doc="if set, only read VCF records within the\nspecified range. The format is one of\n<sequence_name>, <sequence_name>:<start>-<end>,\n<sequence_name>:<pos>+<length> or\n<sequence_name>:<pos>~<padding>")), ToolInput(tag="in_template", input_type=String(optional=True), prefix="--template", doc=InputDocumentation(doc="SDF of the reference genome the variants are\ncalled against")), ToolInput(tag="in_all_records", input_type=Boolean(optional=True), prefix="--all-records", doc=InputDocumentation(doc="use all records regardless of FILTER status\n(Default is to only process records where\nFILTER is '.' or 'PASS')")), ToolInput(tag="in_decompose", input_type=Boolean(optional=True), prefix="--decompose", doc=InputDocumentation(doc="decompose complex variants into smaller\nconstituents to allow partial credit")), ToolInput(tag="in_ref_overlap", input_type=Boolean(optional=True), prefix="--ref-overlap", doc=InputDocumentation(doc="allow alleles to overlap where bases of either\nallele are same-as-ref (Default is to only\nallow VCF anchor base overlap)")), ToolInput(tag="in_sample", input_type=String(optional=True), prefix="--sample", doc=InputDocumentation(doc="the name of the sample to select. Use\n<baseline_sample>,<calls_sample> to select\ndifferent sample names for baseline and calls.\n(Required when using multi-sample VCF files)")), ToolInput(tag="in_sample_ploidy", input_type=Int(optional=True), prefix="--sample-ploidy", doc=InputDocumentation(doc="expected ploidy of samples (Default is 2)")), ToolInput(tag="in_squash_ploidy", input_type=Boolean(optional=True), prefix="--squash-ploidy", doc=InputDocumentation(doc="treat heterozygous genotypes as homozygous ALT\nin both baseline and calls, to allow matches\nthat ignore zygosity differences")), ToolInput(tag="in_at_precision", input_type=Float(optional=True), prefix="--at-precision", doc=InputDocumentation(doc="output summary statistics where precision >=\nsupplied value (Default is to summarize at\nmaximum F-measure)")), ToolInput(tag="in_at_sensitivity", input_type=Float(optional=True), prefix="--at-sensitivity", doc=InputDocumentation(doc="output summary statistics where sensitivity >=\nsupplied value (Default is to summarize at\nmaximum F-measure)")), ToolInput(tag="in_no_roc", input_type=Boolean(optional=True), prefix="--no-roc", doc=InputDocumentation(doc="do not produce ROCs")), ToolInput(tag="in_output_mode", input_type=Int(optional=True), prefix="--output-mode", doc=InputDocumentation(doc="output reporting mode. Allowed values are\n[split, annotate, combine, ga4gh, roc-only]\n(Default is split)")), ToolInput(tag="in_roc_expr", input_type=File(optional=True), prefix="--roc-expr", doc=InputDocumentation(doc="output ROC file for variants matching custom\nJavaScript expression. Use the form\n<LABEL>=<EXPRESSION>. May be specified 0 or\nmore times")), ToolInput(tag="in_roc_regions", input_type=File(optional=True), prefix="--roc-regions", doc=InputDocumentation(doc="output ROC file for variants overlapping custom\nregions supplied in BED file. Use the form\n<LABEL>=<FILENAME>. May be specified 0 or more\ntimes")), ToolInput(tag="in_roc_subset", input_type=File(optional=True), prefix="--roc-subset", doc=InputDocumentation(doc="output ROC file for preset variant subset.\nAllowed values are [hom, het, snp, non-snp,\nmnp, indel]. May be specified 0 or more times,\nor as a comma separated list")), ToolInput(tag="in_sort_order", input_type=String(optional=True), prefix="--sort-order", doc=InputDocumentation(doc="the order in which to sort the ROC scores so\nthat 'good' scores come before 'bad' scores.\nAllowed values are [ascending, descending]\n(Default is descending)")), ToolInput(tag="in_vcf_score_field", input_type=String(optional=True), prefix="--vcf-score-field", doc=InputDocumentation(doc="the name of the VCF FORMAT field to use as the\nROC score. Also valid are 'QUAL', 'INFO.<name>'\nor 'FORMAT.<name>' to select the named VCF\nFORMAT or INFO field (Default is GQ)")), ToolInput(tag="in_no_gzip", input_type=Boolean(optional=True), prefix="--no-gzip", doc=InputDocumentation(doc="do not gzip the output")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="number of threads (Default is the number of\navailable cores)\n"))], outputs=[ToolOutput(tag="out_output", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="directory for output")), ToolOutput(tag="out_roc_expr", output_type=File(optional=True), selector=InputSelector(input_to_select="in_roc_expr", type_hint=File()), doc=OutputDocumentation(doc="output ROC file for variants matching custom\nJavaScript expression. Use the form\n<LABEL>=<EXPRESSION>. May be specified 0 or\nmore times")), ToolOutput(tag="out_roc_regions", output_type=File(optional=True), selector=InputSelector(input_to_select="in_roc_regions", type_hint=File()), doc=OutputDocumentation(doc="output ROC file for variants overlapping custom\nregions supplied in BED file. Use the form\n<LABEL>=<FILENAME>. May be specified 0 or more\ntimes")), ToolOutput(tag="out_roc_subset", output_type=File(optional=True), selector=InputSelector(input_to_select="in_roc_subset", type_hint=File()), doc=OutputDocumentation(doc="output ROC file for preset variant subset.\nAllowed values are [hom, het, snp, non-snp,\nmnp, indel]. May be specified 0 or more times,\nor as a comma separated list"))], container="quay.io/biocontainers/rtg-tools:3.12--0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Rtg_Vcfeval_V0_1_0().translate("wdl")

