from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, Boolean, String

Rtg_Vcfsubset_V0_1_0 = CommandToolBuilder(tool="rtg_vcfsubset", base_command=["rtg", "vcfsubset"], inputs=[ToolInput(tag="in_bed_regions", input_type=File(optional=True), prefix="--bed-regions", doc=InputDocumentation(doc="if set, only read VCF records that overlap\nthe ranges contained in the specified BED\nfile")), ToolInput(tag="in_input", input_type=File(optional=True), prefix="--input", doc=InputDocumentation(doc="VCF file containing variants to manipulate.\nUse '-' to read from standard input")), ToolInput(tag="in_output_vcf_file", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="output VCF file. Use '-' to write to standard")), ToolInput(tag="in_keep_filter", input_type=Int(optional=True), prefix="--keep-filter", doc=InputDocumentation(doc="keep the specified FILTER tag. May be\nspecified 0 or more times, or as a comma\nseparated list")), ToolInput(tag="in_keep_format", input_type=Int(optional=True), prefix="--keep-format", doc=InputDocumentation(doc="keep the specified FORMAT field. May be\nspecified 0 or more times, or as a comma\nseparated list")), ToolInput(tag="in_keep_info", input_type=Int(optional=True), prefix="--keep-info", doc=InputDocumentation(doc="keep the specified INFO tag. May be specified\n0 or more times, or as a comma separated list")), ToolInput(tag="in_keep_sample", input_type=File(optional=True), prefix="--keep-sample", doc=InputDocumentation(doc="|FILE   file containing sample IDs to keep, or a\nliteral sample name. May be specified 0 or\nmore times, or as a comma separated list")), ToolInput(tag="in_remove_filter", input_type=Int(optional=True), prefix="--remove-filter", doc=InputDocumentation(doc="remove the specified FILTER tag. May be\nspecified 0 or more times, or as a comma\nseparated list")), ToolInput(tag="in_remove_filters", input_type=Boolean(optional=True), prefix="--remove-filters", doc=InputDocumentation(doc="remove all FILTER tags")), ToolInput(tag="in_remove_format", input_type=Int(optional=True), prefix="--remove-format", doc=InputDocumentation(doc="remove the specified FORMAT field. May be\nspecified 0 or more times, or as a comma\nseparated list")), ToolInput(tag="in_remove_ids", input_type=Boolean(optional=True), prefix="--remove-ids", doc=InputDocumentation(doc="remove the contents of the ID field")), ToolInput(tag="in_remove_info", input_type=Int(optional=True), prefix="--remove-info", doc=InputDocumentation(doc="remove the specified INFO tag. May be\nspecified 0 or more times, or as a comma\nseparated list")), ToolInput(tag="in_remove_infos", input_type=Boolean(optional=True), prefix="--remove-infos", doc=InputDocumentation(doc="remove all INFO tags")), ToolInput(tag="in_remove_qual", input_type=Boolean(optional=True), prefix="--remove-qual", doc=InputDocumentation(doc="remove the QUAL field")), ToolInput(tag="in_remove_sample", input_type=File(optional=True), prefix="--remove-sample", doc=InputDocumentation(doc="|FILE file containing sample IDs to remove, or a\nliteral sample name. May be specified 0 or\nmore times, or as a comma separated list")), ToolInput(tag="in_remove_samples", input_type=Boolean(optional=True), prefix="--remove-samples", doc=InputDocumentation(doc="remove all samples")), ToolInput(tag="in_no_gzip", input_type=Boolean(optional=True), prefix="--no-gzip", doc=InputDocumentation(doc="do not gzip the output")), ToolInput(tag="in_no_header", input_type=Boolean(optional=True), prefix="--no-header", doc=InputDocumentation(doc="prevent VCF header from being written")), ToolInput(tag="in__regionregion_only", input_type=String(), position=0, doc=InputDocumentation(doc="--region=REGION             if set, only read VCF records within the"))], outputs=[ToolOutput(tag="out_output_vcf_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_vcf_file", type_hint=File()), doc=OutputDocumentation(doc="output VCF file. Use '-' to write to standard"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Rtg_Vcfsubset_V0_1_0().translate("wdl", allow_empty_container=True)

