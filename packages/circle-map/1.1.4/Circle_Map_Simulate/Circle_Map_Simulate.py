from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String, Int

Circle_Map_Simulate_V0_1_0 = CommandToolBuilder(tool="Circle_Map_Simulate", base_command=["Circle-Map", "Simulate"], inputs=[ToolInput(tag="in_genome_fasta_file", input_type=Boolean(optional=True), prefix="-g", doc=InputDocumentation(doc="Genome fasta file (Needs to be indexed with samtools\nfaidx)")), ToolInput(tag="in_read_number", input_type=Boolean(optional=True), prefix="--read-number", doc=InputDocumentation(doc="Number of reads to simulate")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="Output file name")), ToolInput(tag="in_directory", input_type=Boolean(optional=True), prefix="--directory", doc=InputDocumentation(doc="Working directory, default is the working directory")), ToolInput(tag="in_base_name", input_type=Boolean(optional=True), prefix="--base-name", doc=InputDocumentation(doc="Fastq output basename")), ToolInput(tag="in_skip_region", input_type=Boolean(optional=True), prefix="--skip-region", doc=InputDocumentation(doc="Regions of the genome to skip the simulation. The\ninput needs to be in bed format")), ToolInput(tag="in_read_length", input_type=Boolean(optional=True), prefix="--read-length", doc=InputDocumentation(doc="Read length to simulate")), ToolInput(tag="in_mean_insert", input_type=Boolean(optional=True), prefix="--mean-insert", doc=InputDocumentation(doc="Mean of the insert size distribution")), ToolInput(tag="in_mean_coverage", input_type=Boolean(optional=True), prefix="--mean-coverage", doc=InputDocumentation(doc="Mean sequencing coverage within the eccDNA coordinates")), ToolInput(tag="in_processes", input_type=Boolean(optional=True), prefix="--processes", doc=InputDocumentation(doc="Number of parallel processes to use")), ToolInput(tag="in_variants", input_type=Boolean(optional=True), prefix="--variants", doc=InputDocumentation(doc="If set to true, introduce mutations in the reference\ngenome prior to simulatingreads.")), ToolInput(tag="in_substitution", input_type=Boolean(optional=True), prefix="--substitution", doc=InputDocumentation(doc="Fraction of base substitutions to introduce on the\ngenome. Default: 0.0001")), ToolInput(tag="in_indels", input_type=Boolean(optional=True), prefix="--Indels", doc=InputDocumentation(doc="Fraction of indels to introduce on the genome.\nDefault: 0.001")), ToolInput(tag="in_java_memory", input_type=Boolean(optional=True), prefix="--java_memory", doc=InputDocumentation(doc="Java memory allocation, required for mutating the\ngenome. Default: -Xmx16g")), ToolInput(tag="in_error", input_type=Boolean(optional=True), prefix="--error", doc=InputDocumentation(doc="Introduce sequencing errors ( Uses ART on the\nbackground)")), ToolInput(tag="in_instrument", input_type=Boolean(optional=True), prefix="--instrument", doc=InputDocumentation(doc="Illumina sequecing instrument to simulate reads from\n(Default HiSeq 2500)")), ToolInput(tag="in_ins_rate", input_type=Boolean(optional=True), prefix="--insRate", doc=InputDocumentation(doc="the first-read insertion rate (default: 0.00009).\nRequires -e")), ToolInput(tag="in_ins_rate_two", input_type=Boolean(optional=True), prefix="--insRate2", doc=InputDocumentation(doc="the second-read insertion rate (default: 0.00015).\nRequires -e")), ToolInput(tag="in_del_rate", input_type=Boolean(optional=True), prefix="--delRate", doc=InputDocumentation(doc="the first-read deletion rate (default: 0.00011).\nRequires -e")), ToolInput(tag="in_del_rate_two", input_type=Boolean(optional=True), prefix="--delRate2", doc=InputDocumentation(doc="the second-read deletion rate (default: 0.00023).\nRequires -e\n")), ToolInput(tag="in_circle_map", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_bam_two_bam", input_type=Int(), position=1, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="Output file name"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Circle_Map_Simulate_V0_1_0().translate("wdl", allow_empty_container=True)

