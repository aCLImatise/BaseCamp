from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Directory, Int, String, Float, Boolean

Dkfzbiasfilter_Py_V0_1_0 = CommandToolBuilder(tool="dkfzbiasfilter.py", base_command=["dkfzbiasfilter.py"], inputs=[ToolInput(tag="in_temp_folder", input_type=Directory(optional=True), prefix="--tempFolder", doc=InputDocumentation(doc="Path to the folder where temporary files are stored\n[default: /tmp]")), ToolInput(tag="in_mapq", input_type=Int(optional=True), prefix="--mapq", doc=InputDocumentation(doc="Minimal mapping quality of a read to be considered for\nerror count calculation [default: 30]")), ToolInput(tag="in_base_q", input_type=Int(optional=True), prefix="--baseq", doc=InputDocumentation(doc="Minimal base quality to be considered for error count\ncalculation [default: 13]")), ToolInput(tag="in_quality_scheme", input_type=String(optional=True), prefix="--qualityScheme", doc=InputDocumentation(doc="Scheme of quality score used in sequencing (illumina\nor phred) [default: phred]")), ToolInput(tag="in_pval_th_res", input_type=Float(optional=True), prefix="--pValThres", doc=InputDocumentation(doc="P-value threshold of binomial test for read bias\n[default: 0.01]")), ToolInput(tag="in_bias_ratio_min", input_type=Int(optional=True), prefix="--biasRatioMin", doc=InputDocumentation(doc="Minimal bias ratio for a variant to be considered as\nweakly biased [default: 0.53]")), ToolInput(tag="in_bias_ratio_max", input_type=Int(optional=True), prefix="--biasRatioMax", doc=InputDocumentation(doc="Minimal bias ratio for a variant to be considered as\nstrongly biased [default: 0.63]")), ToolInput(tag="in_n_reads_min", input_type=Int(optional=True), prefix="--nReadsMin", doc=InputDocumentation(doc="Minimal number of reads observed for a certain variant\nto be considered for weak bias calculation [default:\n20]")), ToolInput(tag="in_nm_utm_in", input_type=Int(optional=True), prefix="--nMutMin", doc=InputDocumentation(doc="Minimal number of mutations observed for a certain\nvariant to be considered for bias calculation\n[default: 4]")), ToolInput(tag="in_max_op_reads_pcr_weak", input_type=Int(optional=True), prefix="--maxOpReadsPcrWeak", doc=InputDocumentation(doc="Maximal number of reads observed on the opposite\nstrand to flag a variant as being weakly pcr biased\n[default: 0]")), ToolInput(tag="in_max_op_reads_pcr_strong", input_type=Int(optional=True), prefix="--maxOpReadsPcrStrong", doc=InputDocumentation(doc="Maximal number of reads observed on the opposite\nstrand to flag a variant as being strongly pcr biased\n[default: 1]")), ToolInput(tag="in_max_op_reads_seq_weak", input_type=Int(optional=True), prefix="--maxOpReadsSeqWeak", doc=InputDocumentation(doc="Maximal number of reads observed on the opposite\nstrand to flag a variant as being weakly sequencing\nbiased [default: 0]")), ToolInput(tag="in_max_op_reads_seq_strong", input_type=Int(optional=True), prefix="--maxOpReadsSeqStrong", doc=InputDocumentation(doc="Maximal number of reads observed on the opposite\nstrand to flag a variant as being strongly sequencing\nbiased [default: 1]")), ToolInput(tag="in_max_op_ratio_pcr", input_type=Int(optional=True), prefix="--maxOpRatioPcr", doc=InputDocumentation(doc="Maximal ratio of reads from opposite strand to flag a\nvariant as pcr biased [default: 0.1]")), ToolInput(tag="in_max_op_ratio_seq", input_type=Int(optional=True), prefix="--maxOpRatioSeq", doc=InputDocumentation(doc="Maximal ratio of reads from opposite strand to flag a\nvariant as pcr biased [default: 0.1]")), ToolInput(tag="in_filter_cycles", input_type=Int(optional=True), prefix="--filterCycles", doc=InputDocumentation(doc="Number of filtering cycles. If number of cycles is 0,\nthen the vcf file is only annotated with\nACGTNacgtn<PLUS | MINUS> entries in the INFO field,\nand bias plots are created before filtering [default:\n2]")), ToolInput(tag="in_write_qc", input_type=Boolean(optional=True), prefix="--writeQC", doc=InputDocumentation(doc="Write quality control? If true, then a folder is\ncreated within the same folder as the filtered vcf\nfile storing bias plots and qc files")), ToolInput(tag="in_pass_only", input_type=Boolean(optional=True), prefix="--passOnly", doc=InputDocumentation(doc="Only apply filters to currently passing variants.")), ToolInput(tag="in_vcf_file", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_bam_file", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_reference_sequence_file", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_filtered_vcf_file", input_type=String(), position=3, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Dkfzbiasfilter_Py_V0_1_0().translate("wdl", allow_empty_container=True)

