from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, Boolean

Sc3_Sc3_R_V0_1_0 = CommandToolBuilder(tool="sc3_sc3.R", base_command=["sc3-sc3.R"], inputs=[ToolInput(tag="in_input_object_file", input_type=File(optional=True), prefix="--input-object-file", doc=InputDocumentation(doc="File name in which a serialized R SingleCellExperiment object where object matrix found")), ToolInput(tag="in_ks", input_type=Int(optional=True), prefix="--ks", doc=InputDocumentation(doc="A comma-separated string or single value representing the number of clusters k to be used for SC3 clustering.")), ToolInput(tag="in_gene_filter", input_type=Boolean(optional=True), prefix="--gene-filter", doc=InputDocumentation(doc="A boolean variable which defines whether to perform gene filtering before SC3 clustering.")), ToolInput(tag="in_pct_dropout_min", input_type=Int(optional=True), prefix="--pct-dropout-min", doc=InputDocumentation(doc="If gene_filter = TRUE, then genes with percent of dropouts smaller than pct_dropout_min are filtered out before clustering.")), ToolInput(tag="in_pct_dropout_max", input_type=Int(optional=True), prefix="--pct-dropout-max", doc=InputDocumentation(doc="If gene_filter = TRUE, then genes with percent of dropouts larger than pct_dropout_max are filtered out before clustering.")), ToolInput(tag="in_d_region_min", input_type=Int(optional=True), prefix="--d-region-min", doc=InputDocumentation(doc="Defines the minimum number of eigenvectors used for kmeans clustering as a fraction of the total number of cells. Default is 0.04. See SC3 paper for more details.")), ToolInput(tag="in_d_region_max", input_type=Int(optional=True), prefix="--d-region-max", doc=InputDocumentation(doc="Defines the maximum number of eigenvectors used for kmeans clustering as a fraction of the total number of cells. Default is 0.07. See SC3 paper for more details.")), ToolInput(tag="in_svm_num_cells", input_type=Int(optional=True), prefix="--svm-num-cells", doc=InputDocumentation(doc="Number of randomly selected training cells to be used for SVM prediction. Default is NULL.")), ToolInput(tag="in_svm_train_inds", input_type=Int(optional=True), prefix="--svm-train-inds", doc=InputDocumentation(doc="Text file with one integer per line. Will be used to create a numeric vector defining indices of training cells that should be used for SVM training. The default is NULL.")), ToolInput(tag="in_svm_max", input_type=Int(optional=True), prefix="--svm-max", doc=InputDocumentation(doc="Define the maximum number of cells below which SVM are not run.")), ToolInput(tag="in_n_cores", input_type=Int(optional=True), prefix="--n-cores", doc=InputDocumentation(doc="Number of threads/cores to be used in the user's machine.")), ToolInput(tag="in_k_means_n_start", input_type=Int(optional=True), prefix="--kmeans-nstart", doc=InputDocumentation(doc="nstart parameter passed to kmeans function. Default is 1000 for up to 2000 cells and 50 for more than 2000 cells.")), ToolInput(tag="in_k_means_iter_max", input_type=Int(optional=True), prefix="--kmeans-iter-max", doc=InputDocumentation(doc="iter.max parameter passed to kmeans function. Default is 1e+09.")), ToolInput(tag="in_k_estimator", input_type=Boolean(optional=True), prefix="--k_estimator", doc=InputDocumentation(doc="A boolean variable which defines whether to estimate an optimal number of clusters. If user has already defined the ks parameter the estimation does not affect the user's paramater.")), ToolInput(tag="in_biology", input_type=Boolean(optional=True), prefix="--biology", doc=InputDocumentation(doc="A boolean variable which defines whether to compute differentially expressed genes, marker genes and cell outliers.")), ToolInput(tag="in_rand_seed", input_type=Int(optional=True), prefix="--rand-seed", doc=InputDocumentation(doc="sets the seed of the random number generator. SC3 is a stochastic method, so setting the rand_seed to a fixed values can be used for reproducibility purposes.")), ToolInput(tag="in_output_object_file", input_type=File(optional=True), prefix="--output-object-file", doc=InputDocumentation(doc="File name in which to store serialized R object of type 'SingleCellExperiment'."))], outputs=[ToolOutput(tag="out_output_object_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_object_file", type_hint=File()), doc=OutputDocumentation(doc="File name in which to store serialized R object of type 'SingleCellExperiment'."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Sc3_Sc3_R_V0_1_0().translate("wdl", allow_empty_container=True)

