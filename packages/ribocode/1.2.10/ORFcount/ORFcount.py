from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Int, File

Orfcount_V0_1_0 = CommandToolBuilder(tool="ORFcount", base_command=["ORFcount"], inputs=[ToolInput(tag="in_stranded", input_type=String(optional=True), prefix="--stranded", doc=InputDocumentation(doc="whether the data is strand-specific, reverse means\nreversed strand interpretation. (default: yes)")), ToolInput(tag="in_mina_qual", input_type=Int(optional=True), prefix="--minaqual", doc=InputDocumentation(doc="skip all reads with alignment quality lower than the\ngiven minimum value (default:10)")), ToolInput(tag="in_count_mode", input_type=String(optional=True), prefix="--count_mode", doc=InputDocumentation(doc="mode to handle reads overlapping more than one ORF\n(choices: union,intersection-strict;default:\nintersection-strict)")), ToolInput(tag="in_gtf", input_type=File(optional=True), prefix="--gtf", doc=InputDocumentation(doc="ORF gtf file generated by RiboCode,\ndefault:final_result")), ToolInput(tag="in_rpf_mapping_file", input_type=File(optional=True), prefix="--rpf_mapping_file", doc=InputDocumentation(doc="ribo-seq BAM/SAM file aligned to the genome, multiple\nfiles should be separated with ','")), ToolInput(tag="in_first_exclude_codons", input_type=Int(optional=True), prefix="--first_exclude_codons", doc=InputDocumentation(doc="excluding the reads aligned to the first few codons of\nthe ORF, default:15")), ToolInput(tag="in_last_exclude_codons", input_type=Int(optional=True), prefix="--last_exclude_codons", doc=InputDocumentation(doc="excluding the reads aligned to the last few codons of\nthe ORF, default:5")), ToolInput(tag="in_exclude_min_orf", input_type=Int(optional=True), prefix="--exclude_min_ORF", doc=InputDocumentation(doc="the minimal length(nt) of ORF for excluding the reads\naligned to first and last few codons, default:100")), ToolInput(tag="in_min_read", input_type=Int(optional=True), prefix="--min_read", doc=InputDocumentation(doc="minimal read length for the counting of RPF,default:26")), ToolInput(tag="in_max_read", input_type=Int(optional=True), prefix="--max_read", doc=InputDocumentation(doc="maximal read length for the counting of RPF,default:34")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="write out all ORF counts into a file, default is to\nwrite to standard output"))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="write out all ORF counts into a file, default is to\nwrite to standard output"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Orfcount_V0_1_0().translate("wdl", allow_empty_container=True)

