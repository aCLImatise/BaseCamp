from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, File, Int, Float

Bolt_V0_1_0 = CommandToolBuilder(tool="bolt", base_command=["bolt"], inputs=[ToolInput(tag="in_helpfull", input_type=Boolean(optional=True), prefix="--helpFull", doc=InputDocumentation(doc="print help message with full option list")), ToolInput(tag="in_b_file", input_type=String(optional=True), prefix="--bfile", doc=InputDocumentation(doc="prefix of PLINK .fam, .bim, .bed files")), ToolInput(tag="in_b_file_gz", input_type=String(optional=True), prefix="--bfilegz", doc=InputDocumentation(doc="prefix of PLINK .fam.gz, .bim.gz, .bed.gz")), ToolInput(tag="in_bed", input_type=File(optional=True), prefix="--bed", doc=InputDocumentation(doc="PLINK .bed file(s); for >1, use multiple")), ToolInput(tag="in_bim", input_type=String(optional=True), prefix="--bim", doc=InputDocumentation(doc="/or {i:j} expansion")), ToolInput(tag="in_genetic_map_file", input_type=File(optional=True), prefix="--geneticMapFile", doc=InputDocumentation(doc="Oxford-format file for interpolating genetic\ndistances: tables/genetic_map_hg##.txt.gz")), ToolInput(tag="in_remove", input_type=File(optional=True), prefix="--remove", doc=InputDocumentation(doc="file(s) listing individuals to ignore (no\nheader; FID IID must be first two columns)")), ToolInput(tag="in_exclude", input_type=File(optional=True), prefix="--exclude", doc=InputDocumentation(doc="file(s) listing SNPs to ignore (no header;\nSNP ID must be first column)")), ToolInput(tag="in_max_missing_per_snp", input_type=Int(optional=True), prefix="--maxMissingPerSnp", doc=InputDocumentation(doc="(=0.1)   QC filter: max missing rate per SNP")), ToolInput(tag="in_max_missing_per_indiv", input_type=Int(optional=True), prefix="--maxMissingPerIndiv", doc=InputDocumentation(doc="(=0.1) QC filter: max missing rate per person")), ToolInput(tag="in_pheno_file", input_type=File(optional=True), prefix="--phenoFile", doc=InputDocumentation(doc="phenotype file (header required; FID IID must\nbe first two columns)")), ToolInput(tag="in_pheno_col", input_type=String(optional=True), prefix="--phenoCol", doc=InputDocumentation(doc="phenotype column header")), ToolInput(tag="in_pheno_use_fam", input_type=Boolean(optional=True), prefix="--phenoUseFam", doc=InputDocumentation(doc="use last (6th) column of .fam file as")), ToolInput(tag="in_co_var_col", input_type=Int(optional=True), prefix="--covarCol", doc=InputDocumentation(doc="categorical covariate column(s); for >1, use\nmultiple --covarCol and/or {i:j} expansion")), ToolInput(tag="in_q_co_var_col", input_type=Int(optional=True), prefix="--qCovarCol", doc=InputDocumentation(doc="quantitative covariate column(s); for >1, use\nmultiple --qCovarCol and/or {i:j} expansion")), ToolInput(tag="in_co_var_use_missing_indic", input_type=Boolean(optional=True), prefix="--covarUseMissingIndic", doc=InputDocumentation(doc="include samples with missing covariates in\nanalysis via missing indicator method\n(default: ignore such samples)")), ToolInput(tag="in_reml", input_type=Boolean(optional=True), prefix="--reml", doc=InputDocumentation(doc="run variance components analysis to precisely\nestimate heritability (but not compute assoc\nstats)")), ToolInput(tag="in_lmm", input_type=Boolean(optional=True), prefix="--lmm", doc=InputDocumentation(doc="compute assoc stats under the inf model and\nwith Bayesian non-inf prior (VB approx), if\npower gain expected")), ToolInput(tag="in_lmm_inf_only", input_type=Boolean(optional=True), prefix="--lmmInfOnly", doc=InputDocumentation(doc="compute mixed model assoc stats under the\ninfinitesimal model")), ToolInput(tag="in_lmm_force_non_inf", input_type=Boolean(optional=True), prefix="--lmmForceNonInf", doc=InputDocumentation(doc="compute non-inf assoc stats even if BOLT-LMM\nexpects no power gain")), ToolInput(tag="in_models_nps", input_type=File(optional=True), prefix="--modelSnps", doc=InputDocumentation(doc="file(s) listing SNPs to use in model (i.e.,\nGRM) (default: use all non-excluded SNPs)")), ToolInput(tag="in_ld_scores_file", input_type=Float(optional=True), prefix="--LDscoresFile", doc=InputDocumentation(doc="LD Scores for calibration of Bayesian assoc\nstats: tables/LDSCORE.1000G_EUR.tab.gz")), ToolInput(tag="in_num_threads", input_type=Int(optional=True), prefix="--numThreads", doc=InputDocumentation(doc="(=1)           number of computational threads")), ToolInput(tag="in_stats_file", input_type=File(optional=True), prefix="--statsFile", doc=InputDocumentation(doc="output file for assoc stats at PLINK")), ToolInput(tag="in_dosage_fidi_id_file", input_type=File(optional=True), prefix="--dosageFidIidFile", doc=InputDocumentation(doc="file listing FIDs and IIDs of samples in\ndosageFile(s), one line per sample")), ToolInput(tag="in_stats_file_dosage_snps", input_type=File(optional=True), prefix="--statsFileDosageSnps", doc=InputDocumentation(doc="output file for assoc stats at dosage format")), ToolInput(tag="in_impute_two_fidi_id_file", input_type=Int(optional=True), prefix="--impute2FidIidFile", doc=InputDocumentation(doc="file listing FIDs and IIDs of samples in\nIMPUTE2 files, one line per sample")), ToolInput(tag="in_impute_two_min_maf", input_type=Int(optional=True), prefix="--impute2MinMAF", doc=InputDocumentation(doc="(=0)        MAF threshold on IMPUTE2 genotypes; lower-MAF\nSNPs will be ignored")), ToolInput(tag="in_b_gen_file", input_type=File(optional=True), prefix="--bgenFile", doc=InputDocumentation(doc="file(s) containing Oxford BGEN-format\ngenotypes to test for association")), ToolInput(tag="in_sample_file", input_type=File(optional=True), prefix="--sampleFile", doc=InputDocumentation(doc="file containing Oxford sample file\ncorresponding to BGEN file(s)")), ToolInput(tag="in_b_gen_sample_file_list", input_type=File(optional=True), prefix="--bgenSampleFileList", doc=InputDocumentation(doc="list of [bgen sample] file pairs containing\nBGEN imputed variants to test for association")), ToolInput(tag="in_b_gen_min_maf", input_type=Int(optional=True), prefix="--bgenMinMAF", doc=InputDocumentation(doc="(=0)           MAF threshold on Oxford BGEN-format\ngenotypes; lower-MAF SNPs will be ignored")), ToolInput(tag="in_b_gen_min_info", input_type=Int(optional=True), prefix="--bgenMinINFO", doc=InputDocumentation(doc="(=0)          INFO threshold on Oxford BGEN-format\ngenotypes; lower-INFO SNPs will be ignored")), ToolInput(tag="in_stats_file_b_gen_snps", input_type=File(optional=True), prefix="--statsFileBgenSnps", doc=InputDocumentation(doc="output file for assoc stats at BGEN-format")), ToolInput(tag="in_stats_file_dosage_two_snps", input_type=File(optional=True), prefix="--statsFileDosage2Snps", doc=InputDocumentation(doc="output file for assoc stats at 2-dosage\nformat genotypes\n")), ToolInput(tag="in_files", input_type=String(), position=0, doc=InputDocumentation(doc="--fam arg                       PLINK .fam file (note: file names ending in ")), ToolInput(tag="in_phenotype", input_type=String(), position=0, doc=InputDocumentation(doc="--covarFile arg                 covariate file (header required; FID IID must"))], outputs=[ToolOutput(tag="out_stats_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_stats_file", type_hint=File()), doc=OutputDocumentation(doc="output file for assoc stats at PLINK")), ToolOutput(tag="out_stats_file_dosage_snps", output_type=File(optional=True), selector=InputSelector(input_to_select="in_stats_file_dosage_snps", type_hint=File()), doc=OutputDocumentation(doc="output file for assoc stats at dosage format")), ToolOutput(tag="out_stats_file_b_gen_snps", output_type=File(optional=True), selector=InputSelector(input_to_select="in_stats_file_b_gen_snps", type_hint=File()), doc=OutputDocumentation(doc="output file for assoc stats at BGEN-format")), ToolOutput(tag="out_stats_file_dosage_two_snps", output_type=File(optional=True), selector=InputSelector(input_to_select="in_stats_file_dosage_two_snps", type_hint=File()), doc=OutputDocumentation(doc="output file for assoc stats at 2-dosage\nformat genotypes\n"))], container="quay.io/biocontainers/bolt-lmm:2.3.4--hbe668fe_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bolt_V0_1_0().translate("wdl")

