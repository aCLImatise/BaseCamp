from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, File, Float, Int

Intervene_Upset_V0_1_0 = CommandToolBuilder(tool="intervene_upset", base_command=["intervene", "upset"], inputs=[ToolInput(tag="in_input_genomic_regions", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="[INPUT [INPUT ...]], --input [INPUT [INPUT ...]]\nInput genomic regions in (BED/GTF/GFF) format or lists of genes/SNPs IDs.\nFor files in a directory use *.<extension>. e.g. *.bed")), ToolInput(tag="in_type", input_type=String(optional=True), prefix="--type", doc=InputDocumentation(doc="Type of input sets. Genomic regions or lists of genes/SNPs sets. Default is 'genomic'.")), ToolInput(tag="in_names", input_type=File(optional=True), prefix="--names", doc=InputDocumentation(doc="Comma-separated list of names as labels for input files.\nIf it is not set file names will be used as labels.\nFor example: --names=A,B,C,D,E,F")), ToolInput(tag="in_filenames", input_type=Boolean(optional=True), prefix="--filenames", doc=InputDocumentation(doc="Use file names as labels instead. Default is 'False'.")), ToolInput(tag="in_bed_tools_options", input_type=Float(optional=True), prefix="--bedtools-options", doc=InputDocumentation(doc="List any of the arguments available for bedtools intersect command.\nType bedtools intersect --help to view all the options.\nFor example: --bedtools-options f=0.8,r,etc")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="Output folder path where results will be stored. Default is current working directory.")), ToolInput(tag="in_save_overlaps", input_type=Boolean(optional=True), prefix="--save-overlaps", doc=InputDocumentation(doc="Save overlapping regions/names for all the combinations as bed/txt.Default is 'False'.")), ToolInput(tag="in_overlap_thresh", input_type=Int(optional=True), prefix="--overlap-thresh", doc=InputDocumentation(doc="Minimum threshold to save the overlapping regions/names as bed/txt. Default is: '1'")), ToolInput(tag="in_project", input_type=String(optional=True), prefix="--project", doc=InputDocumentation(doc="Project name for the output. Default is: 'Intervene'")), ToolInput(tag="in_order", input_type=String(optional=True), prefix="--order", doc=InputDocumentation(doc="The order of intersections of sets. e.g. --order degree. Default is 'freq'.")), ToolInput(tag="in_n_inter", input_type=Int(optional=True), prefix="--ninter", doc=InputDocumentation(doc="Number of top intersections to show in plot. Default is '30'.")), ToolInput(tag="in_show_zero", input_type=Boolean(optional=True), prefix="--showzero", doc=InputDocumentation(doc="Show empty intersection combinations. Default is 'False'.")), ToolInput(tag="in_show_size", input_type=Boolean(optional=True), prefix="--showsize", doc=InputDocumentation(doc="Show intersection sizes above bars. Default is 'True'.")), ToolInput(tag="in_mb_color", input_type=Int(optional=True), prefix="--mbcolor", doc=InputDocumentation(doc="Color of the main bar plot. Default is: '#ea5d4e'.")), ToolInput(tag="in_sb_color", input_type=Int(optional=True), prefix="--sbcolor", doc=InputDocumentation(doc="Color of set size bar plot. Default is: '#317eab'.")), ToolInput(tag="in_mb_label", input_type=Int(optional=True), prefix="--mblabel", doc=InputDocumentation(doc="The y-axis label of the intersection size bars. Default is: 'No. of Intersections'.")), ToolInput(tag="in_sx_label", input_type=Int(optional=True), prefix="--sxlabel", doc=InputDocumentation(doc="The x-axis label of the set size bars. Default is: 'Set size'.")), ToolInput(tag="in_fig_type", input_type=String(optional=True), prefix="--figtype", doc=InputDocumentation(doc="Figure type for the plot. e.g. --figtype svg. Default is 'pdf'")), ToolInput(tag="in_fig_size", input_type=Int(optional=True), prefix="--figsize", doc=InputDocumentation(doc="FIGSIZE\nFigure size for the output plot (width,height). e.g.  --figsize 14 8")), ToolInput(tag="in_dpi", input_type=Int(optional=True), prefix="--dpi", doc=InputDocumentation(doc="Dots-per-inch (DPI) for the output. Default is: '300'.")), ToolInput(tag="in_script_only", input_type=Boolean(optional=True), prefix="--scriptonly", doc=InputDocumentation(doc="Set to generate Rscript only, if R/UpSetR package is not installed. Default is 'False'.")), ToolInput(tag="in_show_shiny", input_type=Boolean(optional=True), prefix="--showshiny", doc=InputDocumentation(doc="Print the combinations of intersections to input to Shiny App. Default is 'False'.")), ToolInput(tag="in_test", input_type=Boolean(optional=True), prefix="--test", doc=InputDocumentation(doc="This will run the program on test data."))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="Output folder path where results will be stored. Default is current working directory."))], container="quay.io/biocontainers/intervene:0.6.5--pyh3252c3a_1", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Intervene_Upset_V0_1_0().translate("wdl")

