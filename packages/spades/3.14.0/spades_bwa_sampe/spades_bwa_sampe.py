from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, Float, File, String, Boolean

Spades_Bwa_Sampe_V0_1_0 = CommandToolBuilder(tool="spades_bwa_sampe", base_command=["spades-bwa", "sampe"], inputs=[ToolInput(tag="in_maximum_insert_size", input_type=Int(optional=True), prefix="-a", doc=InputDocumentation(doc="maximum insert size [500]")), ToolInput(tag="in_maximum_occurrences_one", input_type=Int(optional=True), prefix="-o", doc=InputDocumentation(doc="maximum occurrences for one end [100000]")), ToolInput(tag="in_maximum_hits_output_paired", input_type=Int(optional=True), prefix="-n", doc=InputDocumentation(doc="maximum hits to output for paired reads [3]")), ToolInput(tag="in_maximum_hits_output_discordant", input_type=Int(optional=True), prefix="-N", doc=InputDocumentation(doc="maximum hits to output for discordant pairs [10]")), ToolInput(tag="in_prior_chimeric_rate", input_type=Float(optional=True), prefix="-c", doc=InputDocumentation(doc="prior of chimeric rate (lower bound) [1.0e-05]")), ToolInput(tag="in_sam_file_output", input_type=File(optional=True), prefix="-f", doc=InputDocumentation(doc="sam file to output results to [stdout]")), ToolInput(tag="in_read_group_line", input_type=String(optional=True), prefix="-r", doc=InputDocumentation(doc="read group header line such as `@RG\tID:foo\tSM:bar' [null]")), ToolInput(tag="in_preload_index_memory", input_type=Boolean(optional=True), prefix="-P", doc=InputDocumentation(doc="preload index into memory (for base-space reads only)")), ToolInput(tag="in_disable_smithwaterman_unmapped", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="disable Smith-Waterman for the unmapped mate")), ToolInput(tag="in_disable_insert_size", input_type=Boolean(optional=True), prefix="-A", doc=InputDocumentation(doc="disable insert size estimate (force -s)")), ToolInput(tag="in_bwa", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_sampe", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_prefix", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_in_one_do_tsai", input_type=Int(), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_in_two_do_tsai", input_type=Int(), position=4, doc=InputDocumentation(doc="")), ToolInput(tag="in_in_one_dot_fq", input_type=Int(), position=5, doc=InputDocumentation(doc="")), ToolInput(tag="in_in_two_dot_fq", input_type=Int(), position=6, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_sam_file_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_sam_file_output", type_hint=File()), doc=OutputDocumentation(doc="sam file to output results to [stdout]"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Spades_Bwa_Sampe_V0_1_0().translate("wdl", allow_empty_container=True)

