from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Directory, Boolean, String, Int

Kegg_Charter_Py_V0_1_0 = CommandToolBuilder(tool="kegg_charter.py", base_command=["kegg_charter.py"], inputs=[ToolInput(tag="in_f", input_type=File(optional=True), prefix="-f", doc=InputDocumentation(doc="[--show-available-maps]")), ToolInput(tag="in_output", input_type=Directory(optional=True), prefix="--output", doc=InputDocumentation(doc="Output directory")), ToolInput(tag="in_tsv", input_type=Boolean(optional=True), prefix="--tsv", doc=InputDocumentation(doc="Results will be outputed in TSV format (and not\nEXCEL).")), ToolInput(tag="in_resources_directory", input_type=Directory(optional=True), prefix="--resources-directory", doc=InputDocumentation(doc="Directory for storing KGML and CSV files.")), ToolInput(tag="in_metabolic_maps", input_type=String(optional=True), prefix="--metabolic-maps", doc=InputDocumentation(doc="IDs of metabolic maps to output")), ToolInput(tag="in_genomic_columns", input_type=String(optional=True), prefix="--genomic-columns", doc=InputDocumentation(doc="Names of columns with genomic identification")), ToolInput(tag="in_transcript_omic_columns", input_type=String(optional=True), prefix="--transcriptomic-columns", doc=InputDocumentation(doc="Names of columns with transcriptomics quantification")), ToolInput(tag="in_tax_a_list", input_type=String(optional=True), prefix="--taxa-list", doc=InputDocumentation(doc="List of taxa to represent in genomic potential charts\n(comma separated)")), ToolInput(tag="in_number_of_tax_a", input_type=Int(optional=True), prefix="--number-of-taxa", doc=InputDocumentation(doc="Number of taxa to represent in genomic potential\ncharts (comma separated)")), ToolInput(tag="in_kegg_column", input_type=String(optional=True), prefix="--kegg-column", doc=InputDocumentation(doc="Column with KEGG IDs.")), ToolInput(tag="in_ko_column", input_type=String(optional=True), prefix="--ko-column", doc=InputDocumentation(doc="Column with KOs.")), ToolInput(tag="in_ec_column", input_type=String(optional=True), prefix="--ec-column", doc=InputDocumentation(doc="Column with EC numbers.")), ToolInput(tag="in_input_quantification", input_type=Boolean(optional=True), prefix="--input-quantification", doc=InputDocumentation(doc="If input table has no quantification, will create a\nmock quantification column")), ToolInput(tag="in_input_taxonomy", input_type=String(optional=True), prefix="--input-taxonomy", doc=InputDocumentation(doc="If no taxonomy column exists and there is only one\ntaxon in question.")), ToolInput(tag="in_tax_a_column", input_type=String(optional=True), prefix="--taxa-column", doc=InputDocumentation(doc="Column with the taxa designations to represent with\nKEGGChart")), ToolInput(tag="in_resume", input_type=Boolean(optional=True), prefix="--resume", doc=InputDocumentation(doc="Data inputed has already been analyzed by KEGGCharter.")), ToolInput(tag="in_file", input_type=File(optional=True), prefix="--file", doc=InputDocumentation(doc="TSV or EXCEL table with information to chart")), ToolInput(tag="in_show_available_maps", input_type=Boolean(optional=True), prefix="--show-available-maps", doc=InputDocumentation(doc="Outputs KEGG maps IDs and descriptions to the console\n(so you may pick the ones you want!)"))], outputs=[ToolOutput(tag="out_output", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="Output directory"))], container="quay.io/biocontainers/keggcharter:0.2.3--0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Kegg_Charter_Py_V0_1_0().translate("wdl")

