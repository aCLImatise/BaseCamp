from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Directory, File, Boolean

Closegaps_Perl_V0_1_0 = CommandToolBuilder(tool="closeGaps.perl", base_command=["closeGaps.perl"], inputs=[ToolInput(tag="in_celera_terminator_directory", input_type=Directory(optional=True), prefix="--Celera-terminator-directory", doc=InputDocumentation(doc=": specify the Celera terminator directory\nwhere the assembly whose gaps must be closed exists")), ToolInput(tag="in_reads_file", input_type=File(optional=True), prefix="--reads-file", doc=InputDocumentation(doc=": specify a read file to use (multiple files allowed,\nso long as the flag is repeated)")), ToolInput(tag="in_output_directory", input_type=Directory(optional=True), prefix="--output-directory", doc=InputDocumentation(doc=": specify the output directory")), ToolInput(tag="in_jellyfish_hash_size", input_type=Boolean(optional=True), prefix="--jellyfish-hash-size", doc=InputDocumentation(doc="# : specify the jellyfish hash size")), ToolInput(tag="in_min_km_er_len", input_type=Boolean(optional=True), prefix="--min-kmer-len", doc=InputDocumentation(doc="# : specify the min kmer len used (default: 17)")), ToolInput(tag="in_max_km_er_len", input_type=Boolean(optional=True), prefix="--max-kmer-len", doc=InputDocumentation(doc="# : specify the max kmer len used (default: 31)")), ToolInput(tag="in_num_threads", input_type=Boolean(optional=True), prefix="--num-threads", doc=InputDocumentation(doc="# : specify the number of threads (default: 1)")), ToolInput(tag="in_same__numthreads", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="# : same as --num-threads #")), ToolInput(tag="in_contig_length_for_joining", input_type=Boolean(optional=True), prefix="--contig-length-for-joining", doc=InputDocumentation(doc="# : The length of sequence at the ends of the contigs\nwhich create the faux mate pairs which are joined (default: 100)")), ToolInput(tag="in_use_all_k_unit_igs", input_type=Boolean(optional=True), prefix="--use-all-kunitigs", doc=InputDocumentation(doc=": Use k-unitigs which are the k-mer length as well as all those longer than\nthe k-mer length. (The default is not to use k-unis of the k-mer length)")), ToolInput(tag="in_max_nodes", input_type=Boolean(optional=True), prefix="--maxnodes", doc=InputDocumentation(doc="# : The maximum number of nodes allowed when trying to join the\nfaux reads (default: 2000)")), ToolInput(tag="in_kuni_tig_continuation_number", input_type=Boolean(optional=True), prefix="--kunitig-continuation-number", doc=InputDocumentation(doc="# : specify the number to continue when running\ncreate_k_unitigs (the -m and -M options to that program)\n(currently 'invalidated') (default: 2)")), ToolInput(tag="in_dir_for_k_unit_igs", input_type=Directory(optional=True), prefix="--dir-for-kunitigs", doc=InputDocumentation(doc=": specifies the directory to get k-unitigs from\nif we have them")), ToolInput(tag="in_reduce_read_set", input_type=Boolean(optional=True), prefix="--reduce-read-set", doc=InputDocumentation(doc="# : Start by reducing the read set to only those that\nmatch a k-unitig from the genomic sequences surrounding\na gap. The number specifies the k-mer size used to\nfind these matches. (Don't make it too small.)")), ToolInput(tag="in_contig_length_for_fishing", input_type=Boolean(optional=True), prefix="--contig-length-for-fishing", doc=InputDocumentation(doc="# : The length of sequence at the ends of the contigs\nto be used to find reads which might fit in the gaps (default: 100)")), ToolInput(tag="in_no_clean", input_type=Boolean(optional=True), prefix="--noclean", doc=InputDocumentation(doc=": Don't clean up after the run"))], outputs=[ToolOutput(tag="out_output_directory", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output_directory", type_hint=File()), doc=OutputDocumentation(doc=": specify the output directory"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Closegaps_Perl_V0_1_0().translate("wdl", allow_empty_container=True)

