from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, Array, String, Directory

Snaptools_Align_Paired_End_V0_1_0 = CommandToolBuilder(tool="snaptools_align_paired_end", base_command=["snaptools", "align-paired-end"], inputs=[ToolInput(tag="in_input_reference", input_type=File(optional=True), prefix="--input-reference", doc=InputDocumentation(doc="reference genome file contains the reference genome\nthat reads are mapped against, the genome index must\nbe under the same folder (default: None)")), ToolInput(tag="in_input_fast_q_one", input_type=Int(optional=True), prefix="--input-fastq1", doc=InputDocumentation(doc="fastq file contains R1 reads, currently supports\nfastq, gz, bz2 file (default: None)")), ToolInput(tag="in_input_fast_q_two", input_type=Int(optional=True), prefix="--input-fastq2", doc=InputDocumentation(doc="fastq file contains R2 reads, currently supports\nfastq, gz, bz2 file (default: None)")), ToolInput(tag="in_output_bam", input_type=File(optional=True), prefix="--output-bam", doc=InputDocumentation(doc="output bam file contains unfiltered alignments\n(default: None)")), ToolInput(tag="in_aligner", input_type=Int(optional=True), prefix="--aligner", doc=InputDocumentation(doc="aligner to use. Currently, snaptools supports bwa,\nbowtie, bowtie2 and minimap2. (default: bwa)")), ToolInput(tag="in_path_to_aligner", input_type=File(optional=True), prefix="--path-to-aligner", doc=InputDocumentation(doc="path to fold that contains bwa (default: None)")), ToolInput(tag="in_aligner_options", input_type=Array(t=String(), optional=True), prefix="--aligner-options", doc=InputDocumentation(doc="list of strings indicating options you would like\npassed to alignerstrongly do not recommand to change\nunless you know what you are doing. the default is to\nalign reads without filteration. (default: None)")), ToolInput(tag="in_read_fast_q_command", input_type=File(optional=True), prefix="--read-fastq-command", doc=InputDocumentation(doc="command line to execute for each of the input file.\nThis command should generate FASTQ text and send it to\nstdout. For example, --read-fastq-command should be\nzcat, bzcat and cat for .gz, .bz2 and plain fastq file\nrespectively (default: None)")), ToolInput(tag="in_min_cov", input_type=Int(optional=True), prefix="--min-cov", doc=InputDocumentation(doc="min number of fragments per barcode. barcodes of total\nfragments less than --min-cov will be filreted before\nalingment. Note: though this feature is included, we\nfound it barely benefit anything, recommand to set it\n0. (default: 0)")), ToolInput(tag="in_num_threads", input_type=Int(optional=True), prefix="--num-threads", doc=InputDocumentation(doc="number of alignment threads, also number of threads\nfor sorting a bam file. (default: 1)")), ToolInput(tag="in_if_sort", input_type=File(optional=True), prefix="--if-sort", doc=InputDocumentation(doc="weather to sort the bam file based on the read name\n(default: True)")), ToolInput(tag="in_tmp_folder", input_type=Directory(optional=True), prefix="--tmp-folder", doc=InputDocumentation(doc="directory to store temporary files. If not given,\nsnaptools will automaticallygenerate a temporary\nlocation to store temporary files (default: None)")), ToolInput(tag="in_overwrite", input_type=File(optional=True), prefix="--overwrite", doc=InputDocumentation(doc="whether to overwrite the output file if it already\nexists (default: False)")), ToolInput(tag="in_verbose", input_type=String(optional=True), prefix="--verbose", doc=InputDocumentation(doc="a boolen tag indicates output the progress. (default:\nTrue)\n"))], outputs=[ToolOutput(tag="out_output_bam", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_bam", type_hint=File()), doc=OutputDocumentation(doc="output bam file contains unfiltered alignments\n(default: None)")), ToolOutput(tag="out_overwrite", output_type=File(optional=True), selector=InputSelector(input_to_select="in_overwrite", type_hint=File()), doc=OutputDocumentation(doc="whether to overwrite the output file if it already\nexists (default: False)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Snaptools_Align_Paired_End_V0_1_0().translate("wdl", allow_empty_container=True)

