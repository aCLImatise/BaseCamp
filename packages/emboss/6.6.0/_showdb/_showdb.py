from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String

_Showdb_V0_1_0 = CommandToolBuilder(tool="_showdb", base_command=["_showdb"], inputs=[ToolInput(tag="in_database", input_type=Boolean(optional=True), prefix="-database", doc=InputDocumentation(doc="string     Name of a single database to give\ninformation on (Any string)")), ToolInput(tag="in_html", input_type=Boolean(optional=True), prefix="-html", doc=InputDocumentation(doc="boolean    [N] Format output as an HTML table")), ToolInput(tag="in_access", input_type=Boolean(optional=True), prefix="-access", doc=InputDocumentation(doc="boolean    [$(full)] This displays the levels of access\nthat can be used on this database")), ToolInput(tag="in_methods", input_type=Boolean(optional=True), prefix="-methods", doc=InputDocumentation(doc="boolean    [$(full)] This displays the access methods\nthat can be used on this database, for all,\nquery or ID access")), ToolInput(tag="in_tax_scope", input_type=Boolean(optional=True), prefix="-taxscope", doc=InputDocumentation(doc="boolean    [$(full)] This displays the taxons covered\nby this database")), ToolInput(tag="in_fields", input_type=Boolean(optional=True), prefix="-fields", doc=InputDocumentation(doc="boolean    [$(full)] This displays the search fields\nthat can be used on this database, including\nthe standard 'id' or 'acc' fields")), ToolInput(tag="in_num_fields", input_type=Boolean(optional=True), prefix="-numfields", doc=InputDocumentation(doc="boolean    [$(full)] This displays the number of search\nfields that can be used on this database,\nincluding the standard 'id' or 'acc' fields")), ToolInput(tag="in_aliases", input_type=Boolean(optional=True), prefix="-aliases", doc=InputDocumentation(doc="boolean    [$(full)] This displays the alias names that\ncan be used for this database")), ToolInput(tag="in_num_aliases", input_type=Boolean(optional=True), prefix="-numaliases", doc=InputDocumentation(doc="boolean    [$(full)] This displays the number of alias\nnames that can be used for this database")), ToolInput(tag="in_examples", input_type=Boolean(optional=True), prefix="-examples", doc=InputDocumentation(doc="boolean    [$(full)] This displays the example queries\nthat can be used to test this database")), ToolInput(tag="in_num_examples", input_type=Boolean(optional=True), prefix="-numexamples", doc=InputDocumentation(doc="boolean    [$(full)] This displays the number of\nexample queries that can be used to test\nthis database")), ToolInput(tag="in_defined", input_type=Boolean(optional=True), prefix="-defined", doc=InputDocumentation(doc="boolean    [$(full)] This displays a short name for the\nfile containing the database definition")), ToolInput(tag="in_release", input_type=Boolean(optional=True), prefix="-release", doc=InputDocumentation(doc="boolean    [$(full)] Display 'release' column")), ToolInput(tag="in_outfile", input_type=File(optional=True), prefix="-outfile", doc=InputDocumentation(doc="outfile    [stdout] Output file name")), ToolInput(tag="in_only", input_type=Boolean(optional=True), prefix="-only", doc=InputDocumentation(doc="toggle     [N] This is a way of shortening the command\nline if you only want a few standard columns\nto be displayed. Instead of specifying:\n'-nohead -notype -noid -noquery -noall'\nto get only the comment output, you can\nspecify\n'-only -comment'")), ToolInput(tag="in_heading", input_type=Boolean(optional=True), prefix="-heading", doc=InputDocumentation(doc="boolean    [@(!$(only))] Display column headings")), ToolInput(tag="in_type", input_type=Boolean(optional=True), prefix="-type", doc=InputDocumentation(doc="boolean    [@(!$(only))] Display 'type' column")), ToolInput(tag="in_id", input_type=Boolean(optional=True), prefix="-id", doc=InputDocumentation(doc="boolean    [@(!$(only))] Display 'id' access column")), ToolInput(tag="in_query", input_type=Boolean(optional=True), prefix="-query", doc=InputDocumentation(doc="boolean    [@(!$(only))] Display 'qry' access column")), ToolInput(tag="in_all", input_type=Boolean(optional=True), prefix="-all", doc=InputDocumentation(doc="boolean    [@(!$(only))] Display 'all' access column")), ToolInput(tag="in_comment", input_type=Boolean(optional=True), prefix="-comment", doc=InputDocumentation(doc="boolean    [@(!$(only))] Display 'comment' column")), ToolInput(tag="in_files", input_type=String(), position=0, doc=InputDocumentation(doc="-full               boolean    [N] Display all columns"))], outputs=[ToolOutput(tag="out_outfile", output_type=File(optional=True), selector=InputSelector(input_to_select="in_outfile", type_hint=File()), doc=OutputDocumentation(doc="outfile    [stdout] Output file name"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    _Showdb_V0_1_0().translate("wdl", allow_empty_container=True)

