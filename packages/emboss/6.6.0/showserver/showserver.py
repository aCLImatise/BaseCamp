from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File

Showserver_V0_1_0 = CommandToolBuilder(tool="showserver", base_command=["showserver"], inputs=[ToolInput(tag="in_servername", input_type=Boolean(optional=True), prefix="-servername", doc=InputDocumentation(doc="string     Name of a single server to give information\non (Any string)")), ToolInput(tag="in_show_types", input_type=Boolean(optional=True), prefix="-showtypes", doc=InputDocumentation(doc="menu       [*] Show type(s) (Values: Protein (Protein\nsequences); Nucleic (Nucleotide sequences);\nSequence (Any sequence data); Protfeatures\n(Protein features); Nucfeatures (Nucleotide\nfeatures); Features (Any feature table\ndata); Obo (OBO ontology data); Resource\n(Data resource); Taxonomy (Taxonomy data);\nAssembly (Assembled short read data); Text\n(text data); Html (HTML text data); Xml (XML\ntext data); Unknown (Unspecified datatype\nto be defined for each database))")), ToolInput(tag="in_html", input_type=Boolean(optional=True), prefix="-html", doc=InputDocumentation(doc="boolean    [N] Format output as an HTML table")), ToolInput(tag="in_full", input_type=Boolean(optional=True), prefix="-full", doc=InputDocumentation(doc="boolean    [N] Display all columns")), ToolInput(tag="in_methods", input_type=Boolean(optional=True), prefix="-methods", doc=InputDocumentation(doc="boolean    [$(full)] This displays the access methods\nthat can be used on this server, for all,\nquery or ID access")), ToolInput(tag="in_fields", input_type=Boolean(optional=True), prefix="-fields", doc=InputDocumentation(doc="boolean    [$(full)] This displays the search fields\nthat can be used on this server, other than\nthe standard 'id' or 'acc' fields.")), ToolInput(tag="in_defined", input_type=Boolean(optional=True), prefix="-defined", doc=InputDocumentation(doc="boolean    [$(full)] This displays a short name for the\nfile containing the server definition")), ToolInput(tag="in_server_version", input_type=Boolean(optional=True), prefix="-serverversion", doc=InputDocumentation(doc="boolean    [$(full)] Display 'version' column")), ToolInput(tag="in_sort_by", input_type=Boolean(optional=True), prefix="-sortby", doc=InputDocumentation(doc="menu       [type] Sort by (Values: defined (Definition\nfile short name); type (Datatype))")), ToolInput(tag="in_outfile", input_type=File(optional=True), prefix="-outfile", doc=InputDocumentation(doc="outfile    [stdout] Output file name")), ToolInput(tag="in_only", input_type=Boolean(optional=True), prefix="-only", doc=InputDocumentation(doc="toggle     [N] This is a way of shortening the command\nline if you only want a few standard columns\nto be displayed. Instead of specifying:\n'-nohead -notype -noid -noquery -noall'\nto get only the comment output, you can\nspecify\n'-only -comment'")), ToolInput(tag="in_heading", input_type=Boolean(optional=True), prefix="-heading", doc=InputDocumentation(doc="boolean    [@(!$(only))] Display column headings")), ToolInput(tag="in_scope", input_type=Boolean(optional=True), prefix="-scope", doc=InputDocumentation(doc="boolean    [@(!$(only))] Display 'scope' column")), ToolInput(tag="in_type", input_type=Boolean(optional=True), prefix="-type", doc=InputDocumentation(doc="boolean    [@(!$(only))] Display 'type' column")), ToolInput(tag="in_id", input_type=Boolean(optional=True), prefix="-id", doc=InputDocumentation(doc="boolean    [@(!$(only))] Display 'id' column")), ToolInput(tag="in_query", input_type=Boolean(optional=True), prefix="-query", doc=InputDocumentation(doc="boolean    [@(!$(only))] Display 'qry' column")), ToolInput(tag="in_all", input_type=Boolean(optional=True), prefix="-all", doc=InputDocumentation(doc="boolean    [@(!$(only))] Display 'all' column")), ToolInput(tag="in_comment", input_type=Boolean(optional=True), prefix="-comment", doc=InputDocumentation(doc="boolean    [@(!$(only))] Display 'comment' column"))], outputs=[ToolOutput(tag="out_outfile", output_type=File(optional=True), selector=InputSelector(input_to_select="in_outfile", type_hint=File()), doc=OutputDocumentation(doc="outfile    [stdout] Output file name"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Showserver_V0_1_0().translate("wdl", allow_empty_container=True)

