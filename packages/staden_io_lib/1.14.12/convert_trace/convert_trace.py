from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Boolean, Int

Convert_Trace_V0_1_0 = CommandToolBuilder(tool="convert_trace", base_command=["convert_trace"], inputs=[ToolInput(tag="in_format_input_defaults", input_type=String(optional=True), prefix="-in_format", doc=InputDocumentation(doc="Format for input (defaults to any")), ToolInput(tag="in_format_output_default", input_type=String(optional=True), prefix="-out_format", doc=InputDocumentation(doc="Format for output (default ztr)")), ToolInput(tag="in_fof_n", input_type=File(optional=True), prefix="-fofn", doc=InputDocumentation(doc="Get 'Input Output' names from a fofn")), ToolInput(tag="in_passed", input_type=String(optional=True), prefix="-passed", doc=InputDocumentation(doc="Output fofn of passed names")), ToolInput(tag="in_error", input_type=File(optional=True), prefix="-error", doc=InputDocumentation(doc="Redirect stderr to file 'errs'")), ToolInput(tag="in_failed", input_type=String(optional=True), prefix="-failed", doc=InputDocumentation(doc="Output fofn of failed names")), ToolInput(tag="in_name", input_type=File(optional=True), prefix="-name", doc=InputDocumentation(doc="ID line for experiment file output")), ToolInput(tag="in_subtract_background", input_type=Boolean(optional=True), prefix="-subtract_background", doc=InputDocumentation(doc="Auto-subtracts the trace background")), ToolInput(tag="in_subtract", input_type=String(optional=True), prefix="-subtract", doc=InputDocumentation(doc="Subtracts a specified background amount")), ToolInput(tag="in_normalise", input_type=Boolean(optional=True), prefix="-normalise", doc=InputDocumentation(doc="Normalises peak heights")), ToolInput(tag="in_min_normalise", input_type=Boolean(optional=True), prefix="-min_normalise", doc=InputDocumentation(doc="Minimum trace amp for normalising")), ToolInput(tag="in_scale", input_type=Int(optional=True), prefix="-scale", doc=InputDocumentation(doc="Downscales peaks to 0-range")), ToolInput(tag="in_compress", input_type=File(optional=True), prefix="-compress", doc=InputDocumentation(doc="Compress file output (not if stdout)")), ToolInput(tag="in_abi_data", input_type=Int(optional=True), prefix="-abi_data", doc=InputDocumentation(doc="ABI DATA lanes to copy: eg 9,10,11,12")), ToolInput(tag="in_signed", input_type=Boolean(optional=True), prefix="-signed", doc=InputDocumentation(doc="Apply global shift to avoid negative values")), ToolInput(tag="in_none_g", input_type=Boolean(optional=True), prefix="-noneg", doc=InputDocumentation(doc="Shift each channel independently to avoid -ve")), ToolInput(tag="in_var_16", input_type=String(optional=True), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_var_17", input_type=String(optional=True), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_in", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_out", input_type=String(), position=3, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_name", output_type=File(optional=True), selector=InputSelector(input_to_select="in_name", type_hint=File()), doc=OutputDocumentation(doc="ID line for experiment file output")), ToolOutput(tag="out_compress", output_type=File(optional=True), selector=InputSelector(input_to_select="in_compress", type_hint=File()), doc=OutputDocumentation(doc="Compress file output (not if stdout)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Convert_Trace_V0_1_0().translate("wdl", allow_empty_container=True)

