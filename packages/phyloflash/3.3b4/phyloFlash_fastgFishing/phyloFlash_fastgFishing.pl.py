from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Boolean, Int

Phyloflash_Fastgfishing_Pl_V0_1_0 = CommandToolBuilder(tool="phyloFlash_fastgFishing.pl", base_command=["phyloFlash_fastgFishing.pl"], inputs=[ToolInput(tag="in_fast_g", input_type=File(optional=True), prefix="--fastg", doc=InputDocumentation(doc="Input Fastg file from Megahit or Spades. NB: The de facto Fastg\nformat used by these programs differs from the Fastg standard,\nas described in the Bandage documentation.")), ToolInput(tag="in_fast_a", input_type=File(optional=True), prefix="--fasta", doc=InputDocumentation(doc="Input Fasta file, to convert Fastg sequence identifiers to\ncorresponding Fasta sequence IDs.\nIf using MEGAHIT, this is the *.contigs.fa file. For SPAdes this\nis either the scaffolds or contigs file (after repeat\nresolution).")), ToolInput(tag="in_paths", input_type=File(optional=True), prefix="--paths", doc=InputDocumentation(doc="Input Paths file, to convert EDGE to NODE identifiers, if using\nSPAdes assembler.")), ToolInput(tag="in_assembler", input_type=String(optional=True), prefix="--assembler", doc=InputDocumentation(doc="Assembler used. Either 'megahit' or 'spades'.\nDefault: 'megahit'")), ToolInput(tag="in_compare_ssu", input_type=File(optional=True), prefix="--compare-ssu", doc=InputDocumentation(doc="If a targeted assembly of SSU rRNA has already been performed\nfor this library, compare the sequences to those extracted from\nthe metagenome assembly by barrnap.\nThe sequences can be supplied either as a Fasta flie (option\n--compare-ssu) or as a phyloFlash tar.gz archive (option\n--compare-zip).\nDefault: None.")), ToolInput(tag="in_out", input_type=File(optional=True), prefix="--out", doc=InputDocumentation(doc="Output file name prefix\nDefault: 'test'")), ToolInput(tag="in_cluster_only", input_type=Boolean(optional=True), prefix="--clusteronly", doc=InputDocumentation(doc="Do not search for SSU rRNA sequences, instead only report all\nconnected contig clusters above length threshold, regardless of\nwhether they have SSU rRNA or not\nDefault: Off")), ToolInput(tag="in_cut_off", input_type=Int(optional=True), prefix="--cutoff", doc=InputDocumentation(doc="Minimum total sequence length of contig cluster to be reported\n(Default: 100000)")), ToolInput(tag="in_min_ssu_frac", input_type=Int(optional=True), prefix="--min-SSU-frac", doc=InputDocumentation(doc="Minimum fraction of SSU sequence to report (parameter passed to\nthe '--reject' option in Barrnap)\nDefault: 0.2")), ToolInput(tag="in_out_fast_a", input_type=Boolean(optional=True), prefix="--outfasta", doc=InputDocumentation(doc="Logical: Output Fasta files for clusters with total length above\ncutoff?\nDefault: No")), ToolInput(tag="in_cpus", input_type=Int(optional=True), prefix="--CPUs", doc=InputDocumentation(doc="Number of CPUs to use for Barrnap rRNA prediction\nDefault: 8")), ToolInput(tag="in_bar_nap_path", input_type=File(optional=True), prefix="--barnap-path", doc=InputDocumentation(doc="Path to barrnap executable\nDefault: Use version bundled with phyloFlash")), ToolInput(tag="in_man", input_type=Boolean(optional=True), prefix="--man", doc=InputDocumentation(doc="Manual page"))], outputs=[ToolOutput(tag="out_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out", type_hint=File()), doc=OutputDocumentation(doc="Output file name prefix\nDefault: 'test'"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Phyloflash_Fastgfishing_Pl_V0_1_0().translate("wdl", allow_empty_container=True)

