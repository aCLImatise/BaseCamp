from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, String, File

Phyloflash_Heatmap_R_V0_1_0 = CommandToolBuilder(tool="phyloFlash_heatmap.R", base_command=["phyloFlash_heatmap.R"], inputs=[ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Be more talkative")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="Be less talkative")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="Show debug messages")), ToolInput(tag="in_min_ntu_count", input_type=Int(optional=True), prefix="--min-ntu-count", doc=InputDocumentation(doc="Sum NTUs with less counts in pseudo NTU 'Other'. Default 50.")), ToolInput(tag="in_no_split", input_type=Boolean(optional=True), prefix="--no-split", doc=InputDocumentation(doc="Do not split heatmap")), ToolInput(tag="in_split_regex", input_type=String(optional=True), prefix="--split-regex", doc=InputDocumentation(doc="Split heatmap using this regex on taxa. Multiple regex can be\nspecified comma separated. Default 'Eukaryota'")), ToolInput(tag="in_long_tax_names", input_type=Boolean(optional=True), prefix="--long-taxnames", doc=InputDocumentation(doc="Do not shorten taxa names to last two groups")), ToolInput(tag="in_absolute", input_type=Boolean(optional=True), prefix="--absolute", doc=InputDocumentation(doc="Do not scale columns to percentages")), ToolInput(tag="in_cluster_samples", input_type=String(optional=True), prefix="--cluster-samples", doc=InputDocumentation(doc="Use this method for clustering/sorting samples. Can be:\nalpha, ward.D, single, complete, average, mcquitty, median, centroid, or custom.\nDefault is ward.D.")), ToolInput(tag="in_cluster_tax_a", input_type=String(optional=True), prefix="--cluster-taxa", doc=InputDocumentation(doc="Use this method for clustering/sorting taxa. Can be:\nalpha, ward.D, single, complete, average, mcquitty, median or centroid.\nDefault is ward.D")), ToolInput(tag="in_rows", input_type=String(optional=True), prefix="--rows", doc=InputDocumentation(doc="Component rows, in order, to render (separated by commas).\nValid terms are: tree, map, chao and labels.\nDefault is tree,map,chao,labels.")), ToolInput(tag="in_cols", input_type=String(optional=True), prefix="--cols", doc=InputDocumentation(doc="Component columns, in order, to render (separated by commas).\nValid terms are: labels, map and tree.\nDefault is labels,map,tree.")), ToolInput(tag="in_colors", input_type=String(optional=True), prefix="--colors", doc=InputDocumentation(doc="Colors for heatmaps. Default is steelblue,indianred,green,orange.")), ToolInput(tag="in_out", input_type=File(optional=True), prefix="--out", doc=InputDocumentation(doc="Name of output file. Must end in .png or .pdf. Default is out.png.")), ToolInput(tag="in_aa", input_type=String(optional=True), prefix="--aa", doc=InputDocumentation(doc="Type of anti-aliasing to use for PNG output. Can be one of default,\nnone, gray, or subpixel. Default is gray.")), ToolInput(tag="in_out_size", input_type=Int(optional=True), prefix="--out-size", doc=InputDocumentation(doc="Size of output graphic in pixels (e.g. 100x100). Assumes 72 DPI for\nPDF. Using 'auto' for a dimension will attempt to guess at suitable\nsize. Default autoXauto")), ToolInput(tag="in_library_name_from_file", input_type=Boolean(optional=True), prefix="--library-name-from-file", doc=InputDocumentation(doc="Use thee filename to derive library name instead of parsing ...report.csv")), ToolInput(tag="in_custom_distance_matrix_sample", input_type=String(optional=True), prefix="--custom-distance-matrix-sample", doc=InputDocumentation(doc="Import custom distance matrix for samples instead of calculating\nfrom abundance matrix"))], outputs=[ToolOutput(tag="out_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out", type_hint=File()), doc=OutputDocumentation(doc="Name of output file. Must end in .png or .pdf. Default is out.png."))], container="quay.io/biocontainers/phyloflash:3.4--0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Phyloflash_Heatmap_R_V0_1_0().translate("wdl")

