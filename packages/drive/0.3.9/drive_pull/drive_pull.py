from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, Int, Directory

Drive_Pull_V0_1_0 = CommandToolBuilder(tool="drive_pull", base_command=["drive", "pull"], inputs=[ToolInput(tag="in_all", input_type=Boolean(optional=True), prefix="-all", doc=InputDocumentation(doc="all the starred files")), ToolInput(tag="in_decryption_password", input_type=String(optional=True), prefix="-decryption-password", doc=InputDocumentation(doc="decryption password")), ToolInput(tag="in_depth", input_type=Int(optional=True), prefix="-depth", doc=InputDocumentation(doc="max traversal depth (default -1)")), ToolInput(tag="in_desktop_links", input_type=Boolean(optional=True), prefix="-desktop-links", doc=InputDocumentation(doc="allows docs + sheets to be pulled as .desktop files or URL linked files (default true)")), ToolInput(tag="in_directories", input_type=Boolean(optional=True), prefix="-directories", doc=InputDocumentation(doc="pull only directories")), ToolInput(tag="in_exclude_ops", input_type=String(optional=True), prefix="-exclude-ops", doc=InputDocumentation(doc="exclude operations")), ToolInput(tag="in_explicitly_export", input_type=Boolean(optional=True), prefix="-explicitly-export", doc=InputDocumentation(doc="explicitly pull exports")), ToolInput(tag="in_export", input_type=String(optional=True), prefix="-export", doc=InputDocumentation(doc="comma separated list of formats to export your docs + sheets files")), ToolInput(tag="in_exports_dir", input_type=Directory(optional=True), prefix="-exports-dir", doc=InputDocumentation(doc="directory to place exports")), ToolInput(tag="in_files", input_type=Boolean(optional=True), prefix="-files", doc=InputDocumentation(doc="pull only files")), ToolInput(tag="in_fix_clashes", input_type=Boolean(optional=True), prefix="-fix-clashes", doc=InputDocumentation(doc="fix clashes by renaming or trashing files")), ToolInput(tag="in_force", input_type=Boolean(optional=True), prefix="-force", doc=InputDocumentation(doc="forces a pull even if no changes present")), ToolInput(tag="in_id", input_type=Boolean(optional=True), prefix="-id", doc=InputDocumentation(doc="pull by id instead of path")), ToolInput(tag="in_ignore_checksum", input_type=Boolean(optional=True), prefix="-ignore-checksum", doc=InputDocumentation(doc="avoids computation of checksums as a final check.")), ToolInput(tag="in_ignore_conflict", input_type=Boolean(optional=True), prefix="-ignore-conflict", doc=InputDocumentation(doc="turns off the conflict resolution safety")), ToolInput(tag="in_ignore_name_clashes", input_type=Boolean(optional=True), prefix="-ignore-name-clashes", doc=InputDocumentation(doc="ignore name clashes")), ToolInput(tag="in_matches", input_type=Boolean(optional=True), prefix="-matches", doc=InputDocumentation(doc="search by prefix")), ToolInput(tag="in_no_clobber", input_type=Boolean(optional=True), prefix="-no-clobber", doc=InputDocumentation(doc="prevents overwriting of old content")), ToolInput(tag="in_no_prompt", input_type=Boolean(optional=True), prefix="-no-prompt", doc=InputDocumentation(doc="shows no prompt before applying the pull action")), ToolInput(tag="in_piped", input_type=Boolean(optional=True), prefix="-piped", doc=InputDocumentation(doc="get content in from standard input (stdin)")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="-quiet", doc=InputDocumentation(doc="if set, do not log anything but errors")), ToolInput(tag="in_recursive", input_type=Boolean(optional=True), prefix="-recursive", doc=InputDocumentation(doc="performs the pull action recursively (default true)")), ToolInput(tag="in_retry_count", input_type=Int(optional=True), prefix="-retry-count", doc=InputDocumentation(doc="max number of retries for exponential backoff (default 20)")), ToolInput(tag="in_same_exports_dir", input_type=Boolean(optional=True), prefix="-same-exports-dir", doc=InputDocumentation(doc="exports are put in the same directory")), ToolInput(tag="in_skip_mime", input_type=String(optional=True), prefix="-skip-mime", doc=InputDocumentation(doc="skip elements with mimeTypes derived from these extensions")), ToolInput(tag="in_starred", input_type=Boolean(optional=True), prefix="-starred", doc=InputDocumentation(doc="operate only on starred files")), ToolInput(tag="in_trashed", input_type=Boolean(optional=True), prefix="-trashed", doc=InputDocumentation(doc="pull content in the trash")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="-verbose", doc=InputDocumentation(doc="show step by step information verbosely\n"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Drive_Pull_V0_1_0().translate("wdl", allow_empty_container=True)

