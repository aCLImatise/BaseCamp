from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Boolean

Mkbundle_V0_1_0 = CommandToolBuilder(tool="mkbundle", base_command=["mkbundle"], inputs=[ToolInput(tag="in_config", input_type=File(optional=True), prefix="--config", doc=InputDocumentation(doc="Bundle system config file `F'")), ToolInput(tag="in_config_dir", input_type=String(optional=True), prefix="--config-dir", doc=InputDocumentation(doc="Set MONO_CFG_DIR to `D'")), ToolInput(tag="in_deps", input_type=Boolean(optional=True), prefix="--deps", doc=InputDocumentation(doc="Turns on automatic dependency embedding (default on simple)")), ToolInput(tag="in_adds_path_search", input_type=File(optional=True), prefix="-L", doc=InputDocumentation(doc="Adds `path' to the search path for assemblies")), ToolInput(tag="in_machine_config", input_type=File(optional=True), prefix="--machine-config", doc=InputDocumentation(doc="Use the given file as the machine.config for the application.")), ToolInput(tag="in_specifies_output_filename", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="Specifies output filename")), ToolInput(tag="in_nodeps", input_type=Boolean(optional=True), prefix="--nodeps", doc=InputDocumentation(doc="Turns off automatic dependency embedding (default on custom)")), ToolInput(tag="in_skip_scan", input_type=Boolean(optional=True), prefix="--skip-scan", doc=InputDocumentation(doc="Skip scanning assemblies that could not be loaded (but still embed them).")), ToolInput(tag="in_simple", input_type=Boolean(optional=True), prefix="--simple", doc=InputDocumentation(doc="Simple mode does not require a C toolchain and can cross compile\n--cross TARGET      Generates a binary for the given TARGET\n--local-targets     Lists locally available targets\n--list-targets      Lists available targets on the remote server\n--options OPTIONS   Embed the specified Mono command line options on target\n--runtime RUNTIME   Manually specifies the Mono runtime to use\n--target-server URL Specified a server to download targets from, default is https://download.mono-project.com/runtimes/raw/")), ToolInput(tag="in_custom", input_type=File(optional=True), prefix="--custom", doc=InputDocumentation(doc="Builds a custom launcher, options for --custom\n-c                  Produce stub only, do not compile\n-oo obj             Specifies output filename for helper object file\n--dos2unix[=true|false]\nWhen no value provided, or when `true` specified\n`dos2unix` will be invoked to convert paths on Windows.\nWhen `--dos2unix=false` used, dos2unix is NEVER used.\n--keeptemp          Keeps the temporary files\n--static            Statically link to mono libs\n--nomain            Don't include a main() function, for libraries\n--custom-main C     Link the specified compilation unit (.c or .obj) with entry point/init code\n-z                  Compress the assemblies before embedding.\n--static-ctor ctor  Add a constructor call to the supplied function.\nYou need zlib development headers and libraries.\n"))], outputs=[ToolOutput(tag="out_specifies_output_filename", output_type=File(optional=True), selector=InputSelector(input_to_select="in_specifies_output_filename", type_hint=File()), doc=OutputDocumentation(doc="Specifies output filename")), ToolOutput(tag="out_custom", output_type=File(optional=True), selector=InputSelector(input_to_select="in_custom", type_hint=File()), doc=OutputDocumentation(doc="Builds a custom launcher, options for --custom\n-c                  Produce stub only, do not compile\n-oo obj             Specifies output filename for helper object file\n--dos2unix[=true|false]\nWhen no value provided, or when `true` specified\n`dos2unix` will be invoked to convert paths on Windows.\nWhen `--dos2unix=false` used, dos2unix is NEVER used.\n--keeptemp          Keeps the temporary files\n--static            Statically link to mono libs\n--nomain            Don't include a main() function, for libraries\n--custom-main C     Link the specified compilation unit (.c or .obj) with entry point/init code\n-z                  Compress the assemblies before embedding.\n--static-ctor ctor  Add a constructor call to the supplied function.\nYou need zlib development headers and libraries.\n"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Mkbundle_V0_1_0().translate("wdl", allow_empty_container=True)

