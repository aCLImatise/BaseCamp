from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Wsdl2_V0_1_0 = CommandToolBuilder(tool="wsdl2", base_command=["wsdl2"], inputs=[ToolInput(tag="in_domain", input_type=Boolean(optional=True), prefix="-domain", doc=InputDocumentation(doc=":domain           Domain of username for server authentication.")), ToolInput(tag="in_language", input_type=Boolean(optional=True), prefix="-language", doc=InputDocumentation(doc=":language       Language of generated code. Allowed CS (default)\nand VB. You can also specify the fully qualified\nname of a class that implements the\nSystem.CodeDom.Compiler.CodeDomProvider Class.")), ToolInput(tag="in_namespace", input_type=Boolean(optional=True), prefix="-namespace", doc=InputDocumentation(doc=":ns            The namespace of the generated code, default\nnamespace if none.")), ToolInput(tag="in_nologo", input_type=Boolean(optional=True), prefix="-nologo", doc=InputDocumentation(doc="Surpress the startup logo.")), ToolInput(tag="in_out", input_type=Boolean(optional=True), prefix="-out", doc=InputDocumentation(doc=":filename            The target file for generated code.")), ToolInput(tag="in_password", input_type=Boolean(optional=True), prefix="-password", doc=InputDocumentation(doc=":pwd            Password used to contact the server.")), ToolInput(tag="in_protocol", input_type=Boolean(optional=True), prefix="-protocol", doc=InputDocumentation(doc=":protocol           Protocol to implement. Allowed: Soap (default),\nHttpGet or HttpPost.")), ToolInput(tag="in_fields", input_type=Boolean(optional=True), prefix="-fields", doc=InputDocumentation(doc="Generate fields instead of properties in data")), ToolInput(tag="in_username", input_type=Boolean(optional=True), prefix="-username", doc=InputDocumentation(doc=":username       Username used to contact the server.")), ToolInput(tag="in_proxy", input_type=Boolean(optional=True), prefix="-proxy", doc=InputDocumentation(doc=":url                   Address of the proxy.")), ToolInput(tag="in_proxy_username", input_type=Boolean(optional=True), prefix="-proxyusername", doc=InputDocumentation(doc=":username Username used to contact the proxy.")), ToolInput(tag="in_proxy_password", input_type=Boolean(optional=True), prefix="-proxypassword", doc=InputDocumentation(doc=":pwd      Password used to contact the proxy.")), ToolInput(tag="in_proxy_domain", input_type=Boolean(optional=True), prefix="-proxydomain", doc=InputDocumentation(doc=":domain     Domain of username for proxy authentication.")), ToolInput(tag="in_app_setting_url_key", input_type=Boolean(optional=True), prefix="-appsettingurlkey", doc=InputDocumentation(doc=":key Configuration key that contains the default\nurl for the generated WS proxy.")), ToolInput(tag="in_app_setting_baseurl", input_type=Boolean(optional=True), prefix="-appsettingbaseurl", doc=InputDocumentation(doc=":url Base url to use when constructing the\nservice url.")), ToolInput(tag="in_sample", input_type=Boolean(optional=True), prefix="-sample", doc=InputDocumentation(doc=":[binding/]operation  Display a sample SOAP request and response.")), ToolInput(tag="in_classes_dot", input_type=String(), position=0, doc=InputDocumentation(doc="-server                      Generate server instead of client proxy code."))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Wsdl2_V0_1_0().translate("wdl", allow_empty_container=True)

