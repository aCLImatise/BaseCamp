from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Directory

Monolinker_V0_1_0 = CommandToolBuilder(tool="monolinker", base_command=["monolinker"], inputs=[ToolInput(tag="in_about", input_type=Boolean(optional=True), prefix="--about", doc=InputDocumentation(doc="About the Mono CIL Linker")), ToolInput(tag="in_out", input_type=Directory(optional=True), prefix="-out", doc=InputDocumentation(doc="Specify the output directory, default to `output'")), ToolInput(tag="in_action_core_assemblies", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="Action on the core assemblies, skip, copy or link, default to skip")), ToolInput(tag="in_action_per_assembly", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="Action per assembly")), ToolInput(tag="in_add_new_step", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="Add a new step to the pipeline.")), ToolInput(tag="in_add_directory_look", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc="Add a directory where the linker will look for assemblies")), ToolInput(tag="in_generate_debug_symbols", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc="Generate debug symbols for each linked module (true or false)")), ToolInput(tag="in_generate_new_guid", input_type=Boolean(optional=True), prefix="-g", doc=InputDocumentation(doc="Generate a new unique guid for each linked module (true or false)")), ToolInput(tag="in_list_assemblies_copy", input_type=Directory(optional=True), prefix="-l", doc=InputDocumentation(doc="List of i18n assemblies to copy to the output directory\nseparated with a comma: none,all,cjk,mideast,other,rare,west\ndefault is all")), ToolInput(tag="in_link_xml_descriptor", input_type=Boolean(optional=True), prefix="-x", doc=InputDocumentation(doc="Link from an XML descriptor")), ToolInput(tag="in_link_list_assemblies", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="Link from a list of assemblies")), ToolInput(tag="in_link_monoapiinfo_descriptor", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="Link from an mono-api-info descriptor"))], outputs=[ToolOutput(tag="out_out", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_out", type_hint=File()), doc=OutputDocumentation(doc="Specify the output directory, default to `output'")), ToolOutput(tag="out_list_assemblies_copy", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_list_assemblies_copy", type_hint=File()), doc=OutputDocumentation(doc="List of i18n assemblies to copy to the output directory\nseparated with a comma: none,all,cjk,mideast,other,rare,west\ndefault is all"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Monolinker_V0_1_0().translate("wdl", allow_empty_container=True)

