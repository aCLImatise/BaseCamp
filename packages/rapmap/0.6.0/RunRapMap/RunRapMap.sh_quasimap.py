from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, Boolean

Runrapmap_Sh_Quasimap_V0_1_0 = CommandToolBuilder(tool="RunRapMap.sh_quasimap", base_command=["RunRapMap.sh", "quasimap"], inputs=[ToolInput(tag="in_index", input_type=File(optional=True), prefix="--index", doc=InputDocumentation(doc="(required)  The location of the quasiindex")), ToolInput(tag="in_left_mates", input_type=File(optional=True), prefix="--leftMates", doc=InputDocumentation(doc="The location of the left paired-end reads")), ToolInput(tag="in_right_mates", input_type=File(optional=True), prefix="--rightMates", doc=InputDocumentation(doc="The location of the right paired-end reads")), ToolInput(tag="in_un_mated_reads", input_type=File(optional=True), prefix="--unmatedReads", doc=InputDocumentation(doc="The location of single-end reads")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="The output file (default: stdout)")), ToolInput(tag="in_compressed", input_type=File(optional=True), prefix="--compressed", doc=InputDocumentation(doc="Compress the output SAM file using zlib")), ToolInput(tag="in_num_threads", input_type=Int(optional=True), prefix="--numThreads", doc=InputDocumentation(doc="Number of threads to use")), ToolInput(tag="in_sela_ln", input_type=Boolean(optional=True), prefix="--selAln", doc=InputDocumentation(doc="Perform selective alignment to validate mapping hits")), ToolInput(tag="in_mimic_bt_two", input_type=Boolean(optional=True), prefix="--mimicBT2", doc=InputDocumentation(doc="[only with selAln]: mimic Bowtie2-like default params but with\n--no-mixed and --no-discordant")), ToolInput(tag="in_mimic_strict_bt_two", input_type=Boolean(optional=True), prefix="--mimicStrictBT2", doc=InputDocumentation(doc="[only with selAln]: mimic strict Bowtie2-like default params (e.g.\nlike those recommended for running RSEM)")), ToolInput(tag="in_min_score_frac", input_type=Boolean(optional=True), prefix="--minScoreFrac", doc=InputDocumentation(doc="<ratio in (0,1]>\n[only with selAln]: minimum score fraction for a valid alignment")), ToolInput(tag="in_max_mmp_extension", input_type=Int(optional=True), prefix="--maxMMPExtension", doc=InputDocumentation(doc="1>\n[only with selAln or with chaining]: maximum allowable MMP extension")), ToolInput(tag="in_consensus_slack", input_type=Boolean(optional=True), prefix="--consensusSlack", doc=InputDocumentation(doc="<ratio in (0,1]>\n[only with selAln]: consensus slack to apply during mapping")), ToolInput(tag="in_ma", input_type=Int(optional=True), prefix="--ma", doc=InputDocumentation(doc="[only with selAln]: match score")), ToolInput(tag="in_mm", input_type=Int(optional=True), prefix="--mm", doc=InputDocumentation(doc="[only with selAln]: mismatch penalty")), ToolInput(tag="in_go", input_type=Int(optional=True), prefix="--go", doc=InputDocumentation(doc="[only with selAln]: gap open penalty")), ToolInput(tag="in_ge", input_type=Int(optional=True), prefix="--ge", doc=InputDocumentation(doc="[only with selAln]: gap extend penalty")), ToolInput(tag="in_dp_bandwidth", input_type=Int(optional=True), prefix="--dpBandwidth", doc=InputDocumentation(doc="[only with selAln]: bandwidth to use in extension alignment")), ToolInput(tag="in_no_orphans", input_type=Boolean(optional=True), prefix="--noOrphans", doc=InputDocumentation(doc="discard orphaned mappings")), ToolInput(tag="in_no_dovetail", input_type=Boolean(optional=True), prefix="--noDovetail", doc=InputDocumentation(doc="discard dovetailing mappings")), ToolInput(tag="in_recover_orphans", input_type=Boolean(optional=True), prefix="--recoverOrphans", doc=InputDocumentation(doc="perform orphan recovery to try and recover endpoints of orphaned reads")), ToolInput(tag="in_hard_filter", input_type=Boolean(optional=True), prefix="--hardFilter", doc=InputDocumentation(doc="[only with selAln]: apply hard filter to only return best alignments\nfor each read")), ToolInput(tag="in_write_unmapped", input_type=Boolean(optional=True), prefix="--writeUnmapped", doc=InputDocumentation(doc="include unmapped reads in the output SAM records")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="Disable all console output apart from warnings and errors")), ToolInput(tag="in_chaining", input_type=Boolean(optional=True), prefix="--chaining", doc=InputDocumentation(doc="Score the hits to find the best chain")), ToolInput(tag="in_fuzzy_intersection", input_type=Boolean(optional=True), prefix="--fuzzyIntersection", doc=InputDocumentation(doc="Find paired-end mapping locations using fuzzy intersection")), ToolInput(tag="in_no_strict_check", input_type=Boolean(optional=True), prefix="--noStrictCheck", doc=InputDocumentation(doc="Don't perform extra checks to try and assure that only equally 'best'\nmappings for a read are reported")), ToolInput(tag="in_no_sensitive", input_type=Boolean(optional=True), prefix="--noSensitive", doc=InputDocumentation(doc="Perform a less sensitive quasi-mapping by enabling NIP skipping")), ToolInput(tag="in_double_fraction_covered", input_type=Boolean(optional=True), prefix="-z", doc=InputDocumentation(doc="<double in [0,1]>,  --quasiCoverage <double in [0,1]>\nRequire that this fraction of a read is covered by MMPs before it is\nconsidered mappable.")), ToolInput(tag="in_max_num_hits", input_type=Int(optional=True), prefix="--maxNumHits", doc=InputDocumentation(doc="Reads mapping to more than this many loci are discarded")), ToolInput(tag="in_no_output", input_type=Boolean(optional=True), prefix="--noOutput", doc=InputDocumentation(doc="Don't write out any alignments (for speed testing purposes)"))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="The output file (default: stdout)")), ToolOutput(tag="out_compressed", output_type=File(optional=True), selector=InputSelector(input_to_select="in_compressed", type_hint=File()), doc=OutputDocumentation(doc="Compress the output SAM file using zlib"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Runrapmap_Sh_Quasimap_V0_1_0().translate("wdl", allow_empty_container=True)

