class: CommandLineTool
id: fasfilter.cwl
inputs:
- id: in_description
  doc: "Filter sequence records by their descriptions. If used in\ncombination with\
    \ the -x, --regex option, filters records by\nvalues of a regex capture applied\
    \ to their descriptions."
  type: boolean?
  inputBinding:
    prefix: --description
- id: in_filter_sequece_records
  doc: "[int], --field=[int]\nFilter sequece records by a specific field in their\n\
    descriptions. With this option, the description is split into\nfields using strings\
    \ of white space as field delimiters (the\ndefault Perl behavior for splitting\
    \ lines of data into fields).\nThis option takes a mandatory integer option argument\
    \ giving the\nindex for which field to filter on. One-based indexing is used,\n\
    so the first field after the identifier has index 1. As standard\nin Perl, negative\
    \ indices count backwards from the last field in\nthe description; field \"-1\"\
    \ is the last field, \"-2\" is the\nsecond-to-last etc.\nIn fasta files, the identifier\
    \ occurs between the record\nseparator (\">\") and the first whitespace on the\
    \ identifier line,\nand the description is everything after the first string of\n\
    white space on the identifier line. Therefore the identifier is\ncounted as the\
    \ 0th field, which is what fasfilter tests by\ndefault."
  type: boolean?
  inputBinding:
    prefix: -f
- id: in_use_regex_regex
  doc: "[regex], --split-on-regex=[regex]\nUse regex <regex> to split the description\
    \ for the -f option\ninstead of the perl default (which splits on one or more\n\
    whitespace characters). Special characters must be quoted to\nprotect them from\
    \ the shell. The regex is often helpfully\nenclosed by single-quote (') or double-quote\
    \ (\") brackets but\nnever by forward slashes (/)."
  type: boolean?
  inputBinding:
    prefix: -S
- id: in_filter_sequence_named
  doc: "[string], --tag=[string]\nFilter sequence records by values of a named tag\
    \ in the\ndescription. Name-value pairs in the description are expected to\nhave\
    \ the format \"name:value\" as generated by FAST tools (such as\nfaslen) or \"\
    name=value\" as common in General Feature Format. The\n\"name\" must contain only\
    \ characters from the set [a-zA-Z0-9_-].\nThe \"value\" is any string of non-whitespace\
    \ characters. Sequence\nrecords for which the specified tag does not exist will\
    \ not be\nwritten to output. Currently only the first (left-most)\nocccurence\
    \ of a tag is compared."
  type: boolean?
  inputBinding:
    prefix: -t
- id: in_filter_sequence_regex
  doc: "[regex], --regex=[regex]\nFilter sequence records by values of a regex capture\
    \ applied to\nidentifers (by default) or descriptions (in combination with the\n\
    -d option). The format of the regex is a perl regular expression\nthat must contain\
    \ exactly one \"capture buffer\" specified by a\npair or parentheses. The value\
    \ captured in this buffer is\ntested. Sequence records that do not match the regex\
    \ will will\nnot be written to output. Currently only the first (left-most)\n\
    match is tested. Special characters must be quoted to protect\nthem from the shell.\
    \ The regex is often helpfully enclosed by\nsingle-quote (') or double-quote (\"\
    ) brackets but never by\nforward slashes (/)."
  type: boolean?
  inputBinding:
    prefix: -x
- id: in_negate
  doc: "Output sequences that do not meet the specified numerical\ncriteria."
  type: boolean?
  inputBinding:
    prefix: --negate
- id: in_man
  doc: Print the manual page and exit.
  type: boolean?
  inputBinding:
    prefix: --man
- id: in_log
  doc: "Creates, or appends to, a generic FAST logfile in the current\nworking directory.\
    \ The logfile records date/time of execution,\nfull command with options and arguments,\
    \ and an optional\ncomment."
  type: boolean?
  inputBinding:
    prefix: --log
- id: in_use_name_default
  doc: "[string], --logname=[string]\nUse [string] as the name of the logfile. Default\
    \ is\n\"FAST.log.txt\"."
  type: boolean?
  inputBinding:
    prefix: -L
- id: in_include_comment_logfile
  doc: "[string], --comment=[string]\nInclude comment [string] in logfile. No comment\
    \ is saved by\ndefault."
  type: boolean?
  inputBinding:
    prefix: -C
- id: in_format
  doc: "=[format]\nUse alternative format for input. See man page for \"fasconvert\"\
    \nfor allowed formats. This is for convenience; the FAST tools are\ndesigned to\
    \ exchange data in Fasta format, and \"fasta\" is the\ndefault format for this\
    \ tool."
  type: boolean?
  inputBinding:
    prefix: --format
- id: in_specify_type_sequence
  doc: "[dna|rna|protein], --moltype=[dna|rna|protein]\nSpecify the type of sequence\
    \ on input (should not be needed in\nmost cases, but sometimes Bioperl cannot\
    \ guess and complains\nwhen processing data)."
  type: boolean?
  inputBinding:
    prefix: -m
- id: in_fast_q
  doc: fastq format as input and output.
  type: string?
  inputBinding:
    prefix: --fastq
outputs:
- id: out_stdout
  doc: Standard output stream
  type: stdout
hints:
- class: DockerRequirement
  dockerPull: quay.io/biocontainers/perl-fast:1.06--pl526_0
cwlVersion: v1.1
baseCommand:
- fasfilter
