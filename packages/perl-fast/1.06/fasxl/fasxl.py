from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, Int

Fasxl_V0_1_0 = CommandToolBuilder(tool="fasxl", base_command=["fasxl"], inputs=[ToolInput(tag="in_annotate", input_type=Boolean(optional=True), prefix="--annotate", doc=InputDocumentation(doc="This option outputs translations as tagged values in\ndescriptions. By default translations are outputted in the\nsequence.")), ToolInput(tag="in_join", input_type=String(optional=True), prefix="--join", doc=InputDocumentation(doc="Use a <string> to join data in the description. Default is a\nspace character. Use '\t' to indicate a tab-character.")), ToolInput(tag="in_gapped", input_type=Boolean(optional=True), prefix="--gapped", doc=InputDocumentation(doc="This option enables translation of gapped sequences.")), ToolInput(tag="in_keep", input_type=Boolean(optional=True), prefix="--keep", doc=InputDocumentation(doc="Keep inputted sequences in the output. This option also enables\nthe translation of gapped sequences.")), ToolInput(tag="in_codon_two_aa", input_type=Boolean(optional=True), prefix="--codon2aa", doc=InputDocumentation(doc="turn codon alignment into a protein alignment (best used for\ncodon-based alignments, where gaps are mod 3 length and seqs are\nto be translated in frame 0)")), ToolInput(tag="in_cds", input_type=Boolean(optional=True), prefix="--cds", doc=InputDocumentation(doc="This option is deprecated. Treat as CDS (for bacterial code, for\nexample, treat init codons as M).")), ToolInput(tag="in_frame", input_type=Int(optional=True), prefix="--frame", doc=InputDocumentation(doc="Specify the frame for translation [0,1,2]. By default frame 0 is\nused.")), ToolInput(tag="in_tables", input_type=Boolean(optional=True), prefix="--tables", doc=InputDocumentation(doc="Output a list of NCBI genetic code tableIDs and exit.")), ToolInput(tag="in_translate_sequence_three", input_type=Boolean(optional=True), prefix="-3", doc=InputDocumentation(doc="Translate each sequence in all three forward frames.")), ToolInput(tag="in_translate_sequence_six", input_type=Boolean(optional=True), prefix="-6", doc=InputDocumentation(doc="Translate each sequence in all six frames.")), ToolInput(tag="in_stop", input_type=String(optional=True), prefix="--stop", doc=InputDocumentation(doc="Specify a string to representing stop codons. By default '*' is\nused.")), ToolInput(tag="in_unknown", input_type=String(optional=True), prefix="--unknown", doc=InputDocumentation(doc="Specify a string representing unknown amino acids. By default\n'X' is used.")), ToolInput(tag="in_man", input_type=Boolean(optional=True), prefix="--man", doc=InputDocumentation(doc="Print the manual page and exit.")), ToolInput(tag="in_log", input_type=Boolean(optional=True), prefix="--log", doc=InputDocumentation(doc="Creates, or appends to, a generic FAST logfile in the current\nworking directory. The logfile records date/time of execution,\nfull command with options and arguments, and an optional\ncomment.")), ToolInput(tag="in_use_name_default", input_type=Boolean(optional=True), prefix="-L", doc=InputDocumentation(doc="[string], --logname=[string]\nUse [string] as the name of the logfile. Default is\n'FAST.log.txt'.")), ToolInput(tag="in_include_comment_logfile", input_type=Boolean(optional=True), prefix="-C", doc=InputDocumentation(doc="[string], --comment=[string]\nInclude comment [string] in logfile. No comment is saved by\ndefault.")), ToolInput(tag="in_format", input_type=Boolean(optional=True), prefix="--format", doc=InputDocumentation(doc="=[format]\nUse alternative format for input. See man page for 'fasconvert'\nfor allowed formats. This is for convenience; the FAST tools are\ndesigned to exchange data in Fasta format, and 'fasta' is the\ndefault format for this tool.")), ToolInput(tag="in_fast_q", input_type=Boolean(optional=True), prefix="--fastq", doc=InputDocumentation(doc="Use fastq format as input and output.\n"))], outputs=[], container="quay.io/biocontainers/perl-fast:1.06--pl526_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Fasxl_V0_1_0().translate("wdl")

