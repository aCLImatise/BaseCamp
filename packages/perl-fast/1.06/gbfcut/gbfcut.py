from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Boolean, Int

Gbfcut_V0_1_0 = CommandToolBuilder(tool="gbfcut", base_command=["gbfcut"], inputs=[ToolInput(tag="in_perlregexfilter_only_features", input_type=String(optional=True), prefix="-q", doc=InputDocumentation(doc="[=^]<perl-regex>, --qualifier=<qualifier>[=^]<perl-regex>\nFilter only features that have a specified qualifier and for\neach qualifier, at least one value that either matches (=) or no\nvalue that matches (^) their corresponding perl-regexes.\nExamples of qualifiers: 'product', 'note', 'gene', 'db_xref'.\nMultiple qualifier option instances are allowed for the same\ncommand; features will be printed for which all qualifier\nexpressions are true.")), ToolInput(tag="in_case_insensitive", input_type=Boolean(optional=True), prefix="--case-insensitive", doc=InputDocumentation(doc="Enable case-insensitive matching of qualifiers.")), ToolInput(tag="in_key", input_type=String(optional=True), prefix="--key", doc=InputDocumentation(doc="Filter only features with keys that match perl-regex <string>.\nMatching is done case-insensitively. Examples of key-matching\nregexes (called 'primary-tags' in BioPerl): 'CDS', 'RNA',\n'CDS|RNA' 'UTR' This regex is always matched case-insensitively.")), ToolInput(tag="in_context", input_type=Int(optional=True), prefix="--context", doc=InputDocumentation(doc="Include <int> positions of sequence context for each sequence\nrecord extracted.")), ToolInput(tag="in_join", input_type=String(optional=True), prefix="--join", doc=InputDocumentation(doc="Use <string> as delimiter to concatenate annotation data in\noutput sequence record descriptions.")), ToolInput(tag="in_man", input_type=Boolean(optional=True), prefix="--man", doc=InputDocumentation(doc="Print the manual page and exit.")), ToolInput(tag="in_log", input_type=Boolean(optional=True), prefix="--log", doc=InputDocumentation(doc="Creates, or appends to, a generic FAST logfile in the current\nworking directory. The logfile records date/time of execution,\nfull command with options and arguments, and an optional\ncomment.")), ToolInput(tag="in_use_name_default", input_type=Boolean(optional=True), prefix="-L", doc=InputDocumentation(doc="[string], --logname=[string]\nUse [string] as the name of the logfile. Default is\n'FAST.log.txt'.")), ToolInput(tag="in_include_comment_logfile", input_type=Boolean(optional=True), prefix="-C", doc=InputDocumentation(doc="[string], --comment=[string]\nInclude comment [string] in logfile. No comment is saved by\ndefault.")), ToolInput(tag="in_format", input_type=Boolean(optional=True), prefix="--format", doc=InputDocumentation(doc="=[format]\nUse alternative format for input. See man page for 'fasconvert'\nfor allowed formats. This is for convenience; the FAST tools are\ndesigned to exchange data in Fasta format, and 'fasta' is the\ndefault format for this tool.")), ToolInput(tag="in_specify_type_sequence", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="[dna|rna|protein], --moltype=[dna|rna|protein]\nSpecify the type of sequence on input (should not be needed in\nmost cases, but sometimes Bioperl cannot guess and complains\nwhen processing data).\n"))], outputs=[], container="quay.io/biocontainers/perl-fast:1.06--pl526_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Gbfcut_V0_1_0().translate("wdl")

