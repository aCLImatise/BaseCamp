from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, Boolean, Float, File

Plass_Nuclassemble_V0_1_0 = CommandToolBuilder(tool="plass_nuclassemble", base_command=["plass", "nuclassemble"], inputs=[ToolInput(tag="in_alph_size", input_type=Int(optional=True), prefix="--alph-size", doc=InputDocumentation(doc="alphabet size (range 2-21) [5]")), ToolInput(tag="in_mask", input_type=Int(optional=True), prefix="--mask", doc=InputDocumentation(doc="mask sequences in k-mer stage 0: w/o low complexity masking, 1: with low complexity masking [0]")), ToolInput(tag="in_mask_lower_case", input_type=Int(optional=True), prefix="--mask-lower-case", doc=InputDocumentation(doc="lowercase letters will be excluded from k-mer search 0: include region, 1: exclude region [0]")), ToolInput(tag="in_kmer_size_set", input_type=Int(optional=True), prefix="-k", doc=InputDocumentation(doc="k-mer size in the range (0: set automatically to optimum) [22]")), ToolInput(tag="in_split_memory_limit", input_type=Int(optional=True), prefix="--split-memory-limit", doc=InputDocumentation(doc="Set max memory per split. E.g. 800B, 5K, 10M, 1G. Defaults (0) to all available system memory. [0]")), ToolInput(tag="in_add_self_matches", input_type=Boolean(optional=True), prefix="--add-self-matches", doc=InputDocumentation(doc="artificially add entries of queries with themselves (for clustering)")), ToolInput(tag="in_min_seq_id", input_type=Float(optional=True), prefix="--min-seq-id", doc=InputDocumentation(doc="Overlap sequence identity threshold [0.0, 1.0] [0.970]")), ToolInput(tag="in_cov_mode", input_type=Int(optional=True), prefix="--cov-mode", doc=InputDocumentation(doc="0: coverage of query and target, 1: coverage of target, 2: coverage of query 3: target seq. length needs to be at least x% of query length, 4: query seq. length needs to be at least x% of target length 5: short seq. needs to be at least x% of the other seq. length [0]")), ToolInput(tag="in_list_matches_fraction", input_type=Float(optional=True), prefix="-c", doc=InputDocumentation(doc="list matches above this fraction of aligned (covered) residues (see --cov-mode) [0.000]")), ToolInput(tag="in_extend_sequences_is", input_type=Float(optional=True), prefix="-e", doc=InputDocumentation(doc="Extend sequences if the E-value is below [0.0, inf] [0.000]")), ToolInput(tag="in_add_string_convert", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="add backtrace string (convert to alignments with mmseqs convertalis utility)")), ToolInput(tag="in_min_aln_len", input_type=Int(optional=True), prefix="--min-aln-len", doc=InputDocumentation(doc="minimum alignment length (range 0-INT_MAX) [0]")), ToolInput(tag="in_seq_id_mode", input_type=Int(optional=True), prefix="--seq-id-mode", doc=InputDocumentation(doc="0: alignment length 1: shorter, 2: longer sequence [0]")), ToolInput(tag="in_km_er_per_seq", input_type=Int(optional=True), prefix="--kmer-per-seq", doc=InputDocumentation(doc="kmer per sequence [60]")), ToolInput(tag="in_adjust_km_er_len", input_type=Boolean(optional=True), prefix="--adjust-kmer-len", doc=InputDocumentation(doc="adjust k-mer length based on specificity (only for nucleotides)")), ToolInput(tag="in_hash_shift", input_type=Int(optional=True), prefix="--hash-shift", doc=InputDocumentation(doc="Shift k-mer hash [5]")), ToolInput(tag="in_include_only_extendable", input_type=Int(optional=True), prefix="--include-only-extendable", doc=InputDocumentation(doc="Include only extendable [1, set to 0 to disable]")), ToolInput(tag="in_ignore_multi_km_er", input_type=Int(optional=True), prefix="--ignore-multi-kmer", doc=InputDocumentation(doc="Skip kmers occuring multiple times (>=2) [1, set to 0 to disable]")), ToolInput(tag="in_num_iterations", input_type=Int(optional=True), prefix="--num-iterations", doc=InputDocumentation(doc="Number of assembly iterations [1, inf] [12]")), ToolInput(tag="in_cycle_check", input_type=Int(optional=True), prefix="--cycle-check", doc=InputDocumentation(doc="Check for circular sequences (avoid infinite extension of circular or long repeated regions)  [1, set to 0 to disable]")), ToolInput(tag="in_min_contig_len", input_type=Int(optional=True), prefix="--min-contig-len", doc=InputDocumentation(doc="Minimum length of assembled contig to output [1000]")), ToolInput(tag="in_clust_thr", input_type=Float(optional=True), prefix="--clust-thr", doc=InputDocumentation(doc="Threshold to reduce redundancy in assembly by applying the linclust algorithm (clustering threshold) (range 0.0-1.0) [0.970]")), ToolInput(tag="in_remove_tmp_files", input_type=Boolean(optional=True), prefix="--remove-tmp-files", doc=InputDocumentation(doc="Delete temporary files")), ToolInput(tag="in_delete_tmp_inc", input_type=Int(optional=True), prefix="--delete-tmp-inc", doc=InputDocumentation(doc="delete temporary files incremental [0,1] [1]")), ToolInput(tag="in_re_score_mode", input_type=Int(optional=True), prefix="--rescore-mode", doc=InputDocumentation(doc="Rescore diagonal with: 0: Hamming distance, 1: local alignment (score only), 2: local alignment, 3: global alignment or 4: longest alignment fullfilling window quality criterion [3]")), ToolInput(tag="in_wrapped_scoring", input_type=Boolean(optional=True), prefix="--wrapped-scoring", doc=InputDocumentation(doc="Double the (nucleotide) query sequence during the scoring process to allow wrapped diagonal scoring around end and start")), ToolInput(tag="in_chop_cycle", input_type=Int(optional=True), prefix="--chop-cycle", doc=InputDocumentation(doc="Remove superfluous part of circular fragments [1, set to 0 to disable]")), ToolInput(tag="in_mpi_runner", input_type=Int(optional=True), prefix="--mpi-runner", doc=InputDocumentation(doc="Use MPI on compute grid with this MPI command (e.g. 'mpirun -np 42') []")), ToolInput(tag="in_sub_mat", input_type=File(optional=True), prefix="--sub-mat", doc=InputDocumentation(doc="amino acid substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]")), ToolInput(tag="in_max_seq_len", input_type=Int(optional=True), prefix="--max-seq-len", doc=InputDocumentation(doc="maximum sequence length (range 1-32768]) [65535]")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="number of cores used for the computation (uses all cores by default) [8]")), ToolInput(tag="in_compressed", input_type=Int(optional=True), prefix="--compressed", doc=InputDocumentation(doc="write results in compressed format [0]")), ToolInput(tag="in_verbosity_level_nothing", input_type=Int(optional=True), prefix="-v", doc=InputDocumentation(doc="verbosity level: 0=nothing, 1: +errors, 2: +warnings, 3: +info [3]")), ToolInput(tag="in_db_load_mode", input_type=Int(optional=True), prefix="--db-load-mode", doc=InputDocumentation(doc="Database preload mode 0: auto, 1: fread, 2: mmap, 3: mmap+touch [0]")), ToolInput(tag="in_km_er_per_seq_scale", input_type=Float(optional=True), prefix="--kmer-per-seq-scale", doc=InputDocumentation(doc="scale kmer per sequence based on sequence length as kmer-per-seq val + scale x seqlen [0.100]")), ToolInput(tag="in_filter_hits", input_type=Boolean(optional=True), prefix="--filter-hits", doc=InputDocumentation(doc="filter hits by seq.id. and coverage")), ToolInput(tag="in_sort_results", input_type=Int(optional=True), prefix="--sort-results", doc=InputDocumentation(doc="Sort results: 0: no sorting, 1: sort by evalue (Alignment) or seq.id. (Hamming) [0]"))], outputs=[ToolOutput(tag="out_sub_mat", output_type=File(optional=True), selector=InputSelector(input_to_select="in_sub_mat", type_hint=File()), doc=OutputDocumentation(doc="amino acid substitution matrix file [nucl:nucleotide.out,aa:blosum62.out]"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Plass_Nuclassemble_V0_1_0().translate("wdl", allow_empty_container=True)

