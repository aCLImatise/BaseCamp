from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Int

Schicclusterminhashhyperopt_V0_1_0 = CommandToolBuilder(tool="scHicClusterMinHashHyperopt", base_command=["scHicClusterMinHashHyperopt"], inputs=[ToolInput(tag="in_matrix", input_type=String(optional=True), prefix="--matrix", doc=InputDocumentation(doc="The matrix to compute the loops on.")), ToolInput(tag="in_cell_color", input_type=File(optional=True), prefix="--cellColor", doc=InputDocumentation(doc="The file with the associated cell types or cell cycle\nstages.")), ToolInput(tag="in_output_file_name", input_type=File(optional=True), prefix="--outputFileName", doc=InputDocumentation(doc="File names for the result of the optimization\n(Default: hyperoptMinHash_result.txt).")), ToolInput(tag="in_method", input_type=String(optional=True), prefix="--method", doc=InputDocumentation(doc="Method to optimize by hyperopt: random tree, tpe,\nadaptive tpe")), ToolInput(tag="in_runs", input_type=Int(optional=True), prefix="--runs", doc=InputDocumentation(doc="Number of runs of hyperopt.")), ToolInput(tag="in_nearest_neighbors", input_type=Int(optional=True), prefix="--nearestNeighbors", doc=InputDocumentation(doc="Number of runs of hyperopt.")), ToolInput(tag="in_number_of_hash_functions", input_type=Int(optional=True), prefix="--numberOfHashfunctions", doc=InputDocumentation(doc="NUMBEROFHASHFUNCTIONS NUMBEROFHASHFUNCTIONS, -noh NUMBEROFHASHFUNCTIONS NUMBEROFHASHFUNCTIONS NUMBEROFHASHFUNCTIONS\nNumber of hash functions range: start, stop, stepsize\n(Default: (1000, 20000, 1000)).")), ToolInput(tag="in_number_of_clusters", input_type=Int(optional=True), prefix="--numberOfClusters", doc=InputDocumentation(doc="NUMBEROFCLUSTERS, -noc NUMBEROFCLUSTERS NUMBEROFCLUSTERS\nNumber of cluster range (Default: (6, 15)).")), ToolInput(tag="in_number_pc_a_dimensions", input_type=Int(optional=True), prefix="--numberPCADimensions", doc=InputDocumentation(doc="NUMBERPCADIMENSIONS NUMBERPCADIMENSIONS, -nop NUMBERPCADIMENSIONS NUMBERPCADIMENSIONS NUMBERPCADIMENSIONS\nNumber of PCA range: start, stop, stepsize (Default:\n(30, 60, 1)).")), ToolInput(tag="in_u_map_number_of_neighbors", input_type=Int(optional=True), prefix="--umap_numberOfNeighbors", doc=InputDocumentation(doc="UMAP_NUMBEROFNEIGHBORS UMAP_NUMBEROFNEIGHBORS, -unon UMAP_NUMBEROFNEIGHBORS UMAP_NUMBEROFNEIGHBORS UMAP_NUMBEROFNEIGHBORS\nNumber of umap neighbors range: start, stop, stepsize\n(Default: (30, 60, 1)).")), ToolInput(tag="in_u_map_n_components", input_type=Int(optional=True), prefix="--umap_n_components", doc=InputDocumentation(doc="UMAP_N_COMPONENTS UMAP_N_COMPONENTS, -unoc UMAP_N_COMPONENTS UMAP_N_COMPONENTS UMAP_N_COMPONENTS\nNumber of umap n_components range: start, stop,\nstepsize (Default: (2, 10, 1)).")), ToolInput(tag="in_u_map_min_dist", input_type=Int(optional=True), prefix="--umap_min_dist", doc=InputDocumentation(doc="UMAP_MIN_DIST, -umin UMAP_MIN_DIST UMAP_MIN_DIST\nNumber of umap neighbors range: start, stop (Default:\n(0.0, 0.5)).")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of threads (uses the python multiprocessing\nmodule) (Default: 16)."))], outputs=[ToolOutput(tag="out_output_file_name", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_file_name", type_hint=File()), doc=OutputDocumentation(doc="File names for the result of the optimization\n(Default: hyperoptMinHash_result.txt)."))], container="quay.io/biocontainers/schicexplorer:7--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Schicclusterminhashhyperopt_V0_1_0().translate("wdl")

