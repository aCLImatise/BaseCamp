from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Int, File, Boolean, Float, Array

Schicclusterminhash_V0_1_0 = CommandToolBuilder(tool="scHicClusterMinHash", base_command=["scHicClusterMinHash"], inputs=[ToolInput(tag="in_schic_matrix_m", input_type=String(optional=True), prefix="--matrix", doc=InputDocumentation(doc="scHi-C matrix, -m scool scHi-C matrix\nThe single cell Hi-C interaction matrices to cluster.\nNeeds to be in scool format (default: None)")), ToolInput(tag="in_number_of_clusters", input_type=Int(optional=True), prefix="--numberOfClusters", doc=InputDocumentation(doc="Number of to be computed clusters (default: 12)")), ToolInput(tag="in_cluster_method", input_type=String(optional=True), prefix="--clusterMethod", doc=InputDocumentation(doc="Algorithm to cluster the Hi-C matrices (default:\nspectral)")), ToolInput(tag="in_out_filename", input_type=File(optional=True), prefix="--outFileName", doc=InputDocumentation(doc="File name to save the resulting clusters (default:\nclusters.txt)")), ToolInput(tag="in_euclidean_modem_in_hash", input_type=Boolean(optional=True), prefix="--euclideanModeMinHash", doc=InputDocumentation(doc="This option uses the number of hash collisions is only\nfor a candidate set selection and computes on them the\neuclidean distance. (default: True)")), ToolInput(tag="in_intra_chromosomal_contacts_only", input_type=Boolean(optional=True), prefix="--intraChromosomalContactsOnly", doc=InputDocumentation(doc="This option loads only the intra-chromosomal contacts.\nCan improve the cluster result if data is very noisy.\n(default: False)")), ToolInput(tag="in_save_intermediate_raw_matrix", input_type=String(optional=True), prefix="--saveIntermediateRawMatrix", doc=InputDocumentation(doc="This option activates the save of the intermediate raw\nscHi-C matrix. (default: None)")), ToolInput(tag="in_create_scatterplot", input_type=String(optional=True), prefix="--createScatterPlot", doc=InputDocumentation(doc="Create a scatter plot for the clustering, the x and y\nare the first and second principal component of the\ncomputed k-nn graph. (default: scatterPlot.eps)")), ToolInput(tag="in_dpi", input_type=Int(optional=True), prefix="--dpi", doc=InputDocumentation(doc="The dpi of the scatter plot. (default: 300)")), ToolInput(tag="in_number_of_hash_functions", input_type=Int(optional=True), prefix="--numberOfHashFunctions", doc=InputDocumentation(doc="Number of to be used hash functions for minHash\n(default: 4000)")), ToolInput(tag="in_number_of_nearest_neighbors", input_type=Int(optional=True), prefix="--numberOfNearestNeighbors", doc=InputDocumentation(doc="Number of to be used computed nearest neighbors for\nthe knn graph. (default: None)")), ToolInput(tag="in_share_of_matrix_to_be_transferred", input_type=Float(optional=True), prefix="--shareOfMatrixToBeTransferred", doc=InputDocumentation(doc="Which share of rows shall be transferred from Python\nto C++ at once. If `--saveMemory` is active, value is\ninterpreted as the share to loaded at once to memory.\nValues between 0 and 1, the more are transferred at\nonce, the larger the memory usage is. The less rows\nare transferred, the slower the computation is.\n(default: 0.25)")), ToolInput(tag="in_save_memory", input_type=Boolean(optional=True), prefix="--saveMemory", doc=InputDocumentation(doc="Load data only with one core, this method saves memory\nbut is significantly slower. (default: False)")), ToolInput(tag="in_cell_coloring_type", input_type=File(optional=True), prefix="--cell_coloring_type", doc=InputDocumentation(doc="A two column list, first colum the cell names as\nstored in the scool file, second column the associated\ncoloring for the scatter plot (default: None)")), ToolInput(tag="in_cell_coloring_batch", input_type=File(optional=True), prefix="--cell_coloring_batch", doc=InputDocumentation(doc="A two column list, first colum the cell names as\nstored in the scool file, second column the associated\ncoloring for the scatter plot (default: None)")), ToolInput(tag="in_no_pc_a", input_type=Boolean(optional=True), prefix="--noPCA", doc=InputDocumentation(doc="Do not computes PCA on top of a k-nn. (default: False)")), ToolInput(tag="in_nou_map", input_type=Boolean(optional=True), prefix="--noUMAP", doc=InputDocumentation(doc="Do not computes UMP on top of a k-nn/PCA. (default:\nFalse)")), ToolInput(tag="in_dimensions_pc_a", input_type=Int(optional=True), prefix="--dimensionsPCA", doc=InputDocumentation(doc="The number of dimensions from the PCA matrix that\nshould be considered for clustering. Can improve the\ncluster result. (default: 100)")), ToolInput(tag="in_colormap", input_type=String(optional=True), prefix="--colorMap", doc=InputDocumentation(doc="Color map to use for the heatmap, supported are the\ncategorical colormaps from holoviews:\nhttp://holoviews.org/user_guide/Colormaps.html\n(default: glasbey_dark)")), ToolInput(tag="in_font_size", input_type=Int(optional=True), prefix="--fontsize", doc=InputDocumentation(doc="Fontsize in the plot for x and y axis. (default: 15)")), ToolInput(tag="in_distance", input_type=String(optional=True), prefix="--distance", doc=InputDocumentation(doc="Contact distance to consider (default: None)")), ToolInput(tag="in_figure_size", input_type=Int(optional=True), prefix="--figuresize", doc=InputDocumentation(doc="y-size\nFontsize in the plot for x and y axis. (default: (15,\n6))")), ToolInput(tag="in_chromosomes", input_type=Array(t=String(), optional=True), prefix="--chromosomes", doc=InputDocumentation(doc="List of to be computed chromosomes (default: None)")), ToolInput(tag="in_absolute_values", input_type=Int(optional=True), prefix="--absoluteValues", doc=InputDocumentation(doc="Return the number of hash collisions as measure\ninstead of 0 - 1 normalized values. (default: None)")), ToolInput(tag="in_latex_table", input_type=String(optional=True), prefix="--latexTable", doc=InputDocumentation(doc="Return the overlap statistics if --cell_coloring_type\nis given as a latex table. (default: None)")), ToolInput(tag="in_run_in_hyper_opt_mode", input_type=Boolean(optional=True), prefix="--runInHyperoptMode", doc=InputDocumentation(doc="Compute the correct associated average of the given\nclusters to (default: False)")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of threads. Using the python multiprocessing\nmodule. (default: 8)")), ToolInput(tag="in_u_map_n_neighbors", input_type=Int(optional=True), prefix="--umap_n_neighbors", doc=InputDocumentation(doc="Number of neighbors (default: 30)")), ToolInput(tag="in_u_map_n_components", input_type=Int(optional=True), prefix="--umap_n_components", doc=InputDocumentation(doc="Number of components (default: 2)")), ToolInput(tag="in_u_map_metric", input_type=String(optional=True), prefix="--umap_metric", doc=InputDocumentation(doc="Metric of umap. (default: canberra)")), ToolInput(tag="in_u_map_n_epochs", input_type=Int(optional=True), prefix="--umap_n_epochs", doc=InputDocumentation(doc="Number of epochs (default: None)")), ToolInput(tag="in_u_map_learning_rate", input_type=Float(optional=True), prefix="--umap_learning_rate", doc=InputDocumentation(doc="Learning rate (default: 1.0)")), ToolInput(tag="in_u_map_in_it", input_type=String(optional=True), prefix="--umap_init", doc=InputDocumentation(doc="Initialization method (default: spectral)")), ToolInput(tag="in_u_map_min_dist", input_type=Float(optional=True), prefix="--umap_min_dist", doc=InputDocumentation(doc="Minimum distance of two neighbors (default: 0.3)")), ToolInput(tag="in_u_map_spread", input_type=Float(optional=True), prefix="--umap_spread", doc=InputDocumentation(doc="Spread (default: 1.0)")), ToolInput(tag="in_u_map_set_op_mix_ratio", input_type=Float(optional=True), prefix="--umap_set_op_mix_ratio", doc=InputDocumentation(doc="set_op_mix_ratio (default: 1.0)")), ToolInput(tag="in_u_map_local_connectivity", input_type=Float(optional=True), prefix="--umap_local_connectivity", doc=InputDocumentation(doc="local connectivity (default: 1.0)")), ToolInput(tag="in_u_map_repulsion_strength", input_type=Float(optional=True), prefix="--umap_repulsion_strength", doc=InputDocumentation(doc="repulsion strength (default: 1.0)")), ToolInput(tag="in_u_map_negative_sample_rate", input_type=Int(optional=True), prefix="--umap_negative_sample_rate", doc=InputDocumentation(doc="negative sample rate (default: 5)")), ToolInput(tag="in_u_map_transform_queue_size", input_type=Int(optional=True), prefix="--umap_transform_queue_size", doc=InputDocumentation(doc="transform queue size (default: 4.0)")), ToolInput(tag="in_u_map_a", input_type=String(optional=True), prefix="--umap_a", doc=InputDocumentation(doc="a (default: None)")), ToolInput(tag="in_u_map_b", input_type=String(optional=True), prefix="--umap_b", doc=InputDocumentation(doc="b (default: None)")), ToolInput(tag="in_u_map_angular_rp_forest", input_type=Boolean(optional=True), prefix="--umap_angular_rp_forest", doc=InputDocumentation(doc="angular rp forest (default: False)")), ToolInput(tag="in_u_map_target_n_neighbors", input_type=Int(optional=True), prefix="--umap_target_n_neighbors", doc=InputDocumentation(doc="target number of neighbors (default: -1)")), ToolInput(tag="in_u_map_target_metric", input_type=String(optional=True), prefix="--umap_target_metric", doc=InputDocumentation(doc="target metric (default: categorical)")), ToolInput(tag="in_u_map_target_weight", input_type=Float(optional=True), prefix="--umap_target_weight", doc=InputDocumentation(doc="target weight (default: 0.5)")), ToolInput(tag="in_u_map_force_approximation_algorithm", input_type=Boolean(optional=True), prefix="--umap_force_approximation_algorithm", doc=InputDocumentation(doc="force approximation algorithm (default: False)")), ToolInput(tag="in_u_map_verbose", input_type=Boolean(optional=True), prefix="--umap_verbose", doc=InputDocumentation(doc="verbose (default: False)")), ToolInput(tag="in_u_map_unique", input_type=Boolean(optional=True), prefix="--umap_unique", doc=InputDocumentation(doc="Contact distance to consider (default: False)")), ToolInput(tag="in_sch_i_c", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_var_50", input_type=String(), position=1, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_out_filename", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_filename", type_hint=File()), doc=OutputDocumentation(doc="File name to save the resulting clusters (default:\nclusters.txt)"))], container="quay.io/biocontainers/schicexplorer:7--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Schicclusterminhash_V0_1_0().translate("wdl")

