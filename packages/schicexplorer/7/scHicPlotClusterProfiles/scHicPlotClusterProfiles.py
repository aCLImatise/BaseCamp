from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, File, Array, Int

Schicplotclusterprofiles_V0_1_0 = CommandToolBuilder(tool="scHicPlotClusterProfiles", base_command=["scHicPlotClusterProfiles"], inputs=[ToolInput(tag="in_ticks", input_type=Boolean(optional=True), prefix="--ticks", doc=InputDocumentation(doc="Plot the cluster names as ticks. Use legend if they\noverlap. (default: False)")), ToolInput(tag="in_legend", input_type=Boolean(optional=True), prefix="--legend", doc=InputDocumentation(doc="Plot the cluster names as legend. Might be helpful if\nthe ticks overlap. (default: False)")), ToolInput(tag="in_schic_matrix_scool", input_type=String(optional=True), prefix="--matrix", doc=InputDocumentation(doc="scHi-C matrix, -m scool scHi-C matrix\nThe single cell Hi-C interaction matrices to\ninvestigate for QC. Needs to be in scool format\n(default: None)")), ToolInput(tag="in_clusters", input_type=File(optional=True), prefix="--clusters", doc=InputDocumentation(doc="file, -c cluster file\nText file which contains per matrix the associated\ncluster. (default: None)")), ToolInput(tag="in_chromosomes", input_type=Array(t=String(), optional=True), prefix="--chromosomes", doc=InputDocumentation(doc="List of to be plotted chromosomes (default: None)")), ToolInput(tag="in_maximal_distance", input_type=Int(optional=True), prefix="--maximalDistance", doc=InputDocumentation(doc="Maximal distance in bases to consider for ratio\ncomputation. (default: 50000000)")), ToolInput(tag="in_distance_short_range", input_type=Int(optional=True), prefix="--distanceShortRange", doc=InputDocumentation(doc="Distance which should be considered as lower distance\nfor svl ordering. Values from distances smaller this\nvalue are not considered. Default 2MB. (default:\n2000000)")), ToolInput(tag="in_distance_long_range", input_type=Int(optional=True), prefix="--distanceLongRange", doc=InputDocumentation(doc="Distance which should be considered as upper distance\nfor svl ordering. Values from distances greater this\nvalue are not considered. Default 12MB. (default:\n12000000)")), ToolInput(tag="in_order_by", input_type=String(optional=True), prefix="--orderBy", doc=InputDocumentation(doc="Algorithm to cluster the Hi-C matrices (default: svl)")), ToolInput(tag="in_font_size", input_type=Int(optional=True), prefix="--fontsize", doc=InputDocumentation(doc="Fontsize in the plot for x and y axis. (default: 10)")), ToolInput(tag="in_rotation_x", input_type=Int(optional=True), prefix="--rotationX", doc=InputDocumentation(doc="Rotation in degrees for the labels of x axis.\n(default: 0)")), ToolInput(tag="in_out_filename", input_type=File(optional=True), prefix="--outFileName", doc=InputDocumentation(doc="File name to save the resulting cluster profile.\n(default: clusters_profile.png)")), ToolInput(tag="in_dpi", input_type=Int(optional=True), prefix="--dpi", doc=InputDocumentation(doc="The dpi of the plot. (default: 300)")), ToolInput(tag="in_colormap", input_type=String(optional=True), prefix="--colorMap", doc=InputDocumentation(doc="Color map to use for the heatmap. Available values can\nbe seen here: http://matplotlib.org/examples/color/col\normaps_reference.html (default: RdYlBu_r)")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of threads. Using the python multiprocessing\nmodule. (default: 4)")), ToolInput(tag="in_sch_i_c", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_var_16", input_type=String(), position=1, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_out_filename", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_filename", type_hint=File()), doc=OutputDocumentation(doc="File name to save the resulting cluster profile.\n(default: clusters_profile.png)"))], container="quay.io/biocontainers/schicexplorer:7--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Schicplotclusterprofiles_V0_1_0().translate("wdl")

