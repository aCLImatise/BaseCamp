from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File

Clonalframeml_V0_1_0 = CommandToolBuilder(tool="ClonalFrameML", base_command=["ClonalFrameML"], inputs=[ToolInput(tag="in_em", input_type=Boolean(optional=True), prefix="-em", doc=InputDocumentation(doc="true (default) or false   Estimate parameters by a Baum-Welch expectation maximization algorithm.")), ToolInput(tag="in_em_branch", input_type=Boolean(optional=True), prefix="-embranch", doc=InputDocumentation(doc="true or false (default)   Estimate parameters for each branch using the EM algorithm.")), ToolInput(tag="in_rescale_no_recombination", input_type=Boolean(optional=True), prefix="-rescale_no_recombination", doc=InputDocumentation(doc="true or false (default)   Rescale branch lengths for given sites with no recombination model.")), ToolInput(tag="in_imputation_only", input_type=Boolean(optional=True), prefix="-imputation_only", doc=InputDocumentation(doc="true or false (default)   Perform only ancestral state reconstruction and imputation.")), ToolInput(tag="in_kappa", input_type=Boolean(optional=True), prefix="-kappa", doc=InputDocumentation(doc="value > 0 (default 2.0)   Relative rate of transitions vs transversions in substitution model")), ToolInput(tag="in_fast_a_file_list", input_type=Boolean(optional=True), prefix="-fasta_file_list", doc=InputDocumentation(doc="true or false (default)   Take fasta_file to be a white-space separated file list.")), ToolInput(tag="in_x_mfa_file", input_type=Boolean(optional=True), prefix="-xmfa_file", doc=InputDocumentation(doc="true or false (default)   Take fasta_file to be an XMFA file.")), ToolInput(tag="in_ignore_user_sites", input_type=Boolean(optional=True), prefix="-ignore_user_sites", doc=InputDocumentation(doc="sites_file                Ignore sites listed in whitespace-separated sites_file.")), ToolInput(tag="in_ignore_incomplete_sites", input_type=Boolean(optional=True), prefix="-ignore_incomplete_sites", doc=InputDocumentation(doc="true or false (default)   Ignore sites with any ambiguous bases.")), ToolInput(tag="in_use_incompatible_sites", input_type=Boolean(optional=True), prefix="-use_incompatible_sites", doc=InputDocumentation(doc="true (default) or false   Use homoplasious and multiallelic sites to correct branch lengths.")), ToolInput(tag="in_show_progress", input_type=Boolean(optional=True), prefix="-show_progress", doc=InputDocumentation(doc="true or false (default)   Output the progress of the maximum likelihood routines.")), ToolInput(tag="in_chromosome_name", input_type=File(optional=True), prefix="-chromosome_name", doc=InputDocumentation(doc="name, eg 'chr'            Output importation status file in BED format using given chromosome name.")), ToolInput(tag="in_min_branch_length", input_type=Boolean(optional=True), prefix="-min_branch_length", doc=InputDocumentation(doc="value > 0 (default 1e-7)  Minimum branch length.")), ToolInput(tag="in_reconstruct_invariant_sites", input_type=Boolean(optional=True), prefix="-reconstruct_invariant_sites", doc=InputDocumentation(doc="true or false (default)   Reconstruct the ancestral states at invariant sites.")), ToolInput(tag="in_label_uncorrected_tree", input_type=Boolean(optional=True), prefix="-label_uncorrected_tree", doc=InputDocumentation(doc="true or false (default)   Regurgitate the uncorrected Newick tree with internal nodes labelled.")), ToolInput(tag="in_prior_mean", input_type=Boolean(optional=True), prefix="-prior_mean", doc=InputDocumentation(doc="df '0.1 0.001 0.1 0.0001' Prior mean for R/theta, 1/delta, nu and M.")), ToolInput(tag="in_prior_sd", input_type=Boolean(optional=True), prefix="-prior_sd", doc=InputDocumentation(doc="df '0.1 0.001 0.1 0.0001' Prior standard deviation for R/theta, 1/delta, nu and M.")), ToolInput(tag="in_initial_values", input_type=Boolean(optional=True), prefix="-initial_values", doc=InputDocumentation(doc="default '0.1 0.001 0.05'  Initial values for R/theta, 1/delta and nu.")), ToolInput(tag="in_guess_initial_m", input_type=Boolean(optional=True), prefix="-guess_initial_m", doc=InputDocumentation(doc="true (default) or false   Initialize M and nu jointly in the EM algorithms.")), ToolInput(tag="in_em_sim", input_type=Boolean(optional=True), prefix="-emsim", doc=InputDocumentation(doc="value >= 0  (default 0)   Number of simulations to estimate uncertainty in the EM results.")), ToolInput(tag="in_em_branch_dispersion", input_type=Boolean(optional=True), prefix="-embranch_dispersion", doc=InputDocumentation(doc="value > 0 (default .01)   Dispersion in parameters among branches in the -embranch model.")), ToolInput(tag="in_output_filtered", input_type=Boolean(optional=True), prefix="-output_filtered", doc=InputDocumentation(doc="true of false (default)   Output a filtered alignment including only non-recombinant sites.")), ToolInput(tag="in_brent_tolerance", input_type=Boolean(optional=True), prefix="-brent_tolerance", doc=InputDocumentation(doc="tolerance (default .001)  Set the tolerance of the Brent routine for -rescale_no_recombination.")), ToolInput(tag="in_powell_tolerance", input_type=Boolean(optional=True), prefix="-powell_tolerance", doc=InputDocumentation(doc="tolerance (default .001)  Set the tolerance of the Powell routine for -rescale_no_recombination."))], outputs=[ToolOutput(tag="out_chromosome_name", output_type=File(optional=True), selector=InputSelector(input_to_select="in_chromosome_name", type_hint=File()), doc=OutputDocumentation(doc="name, eg 'chr'            Output importation status file in BED format using given chromosome name."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Clonalframeml_V0_1_0().translate("wdl", allow_empty_container=True)

