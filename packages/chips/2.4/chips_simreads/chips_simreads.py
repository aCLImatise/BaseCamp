from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Int, Boolean, Float

Chips_Simreads_V0_1_0 = CommandToolBuilder(tool="chips_simreads", base_command=["chips", "simreads"], inputs=[ToolInput(tag="in_bed_file_peak", input_type=File(optional=True), prefix="-p", doc=InputDocumentation(doc=": BED file with peak regions")), ToolInput(tag="in_file_format_your", input_type=File(optional=True), prefix="-t", doc=InputDocumentation(doc=": The file format of your input peak file. Only `homer` or `bed` are supported. You can use -t wce with no BED file to simulate whole cell extract control data.")), ToolInput(tag="in_fasta_file_reference", input_type=File(optional=True), prefix="-f", doc=InputDocumentation(doc=": FASTA file with reference genome")), ToolInput(tag="in_prefix_output_files", input_type=String(optional=True), prefix="-o", doc=InputDocumentation(doc=": Prefix for output files")), ToolInput(tag="in_num_copies", input_type=Int(optional=True), prefix="--numcopies", doc=InputDocumentation(doc=": Number of copies of the genome to simulate\nDefault: 100")), ToolInput(tag="in_num_reads", input_type=Int(optional=True), prefix="--numreads", doc=InputDocumentation(doc=": Number of reads (or read pairs) to simulate\nDefault: 1000000")), ToolInput(tag="in_read_len", input_type=Int(optional=True), prefix="--readlen", doc=InputDocumentation(doc=": Read length to generate\nDefault: 36")), ToolInput(tag="in_paired", input_type=Boolean(optional=True), prefix="--paired", doc=InputDocumentation(doc=": Simulate paired-end reads\nDefault: false")), ToolInput(tag="in_model", input_type=File(optional=True), prefix="--model", doc=InputDocumentation(doc=": JSON file with model parameters (e.g. from running learn\nSetting parameters below overrides anything in the JSON file")), ToolInput(tag="in_gamma_frag", input_type=Float(optional=True), prefix="--gamma-frag", doc=InputDocumentation(doc=",<float>: Parameters for fragment length distribution (alpha, beta).\nDefault: 15.67,15.49")), ToolInput(tag="in_spot", input_type=Float(optional=True), prefix="--spot", doc=InputDocumentation(doc=": SPOT score (fraction of reads in peaks)\nDefault: 0.17594")), ToolInput(tag="in_frac", input_type=Float(optional=True), prefix="--frac", doc=InputDocumentation(doc=": Fraction of the genome that is bound\nDefault: 0.03713")), ToolInput(tag="in_recompute_f", input_type=Boolean(optional=True), prefix="--recomputeF", doc=InputDocumentation(doc=": Recompute --frac param based on input peaks.")), ToolInput(tag="in_pcr_rate", input_type=Float(optional=True), prefix="--pcr_rate", doc=InputDocumentation(doc=": The rate of geometric distribution for PCR simulation\nDefault: 1")), ToolInput(tag="in_read_bam_file", input_type=File(optional=True), prefix="-b", doc=InputDocumentation(doc=": Read BAM file used to score each peak\n: Default: None (use the scores from the peak file)")), ToolInput(tag="in_index_bed_file", input_type=Int(optional=True), prefix="-c", doc=InputDocumentation(doc=": The index of the BED file column used to score each peak (index starting from 1). Required if -b not used.\n: Default: -1")), ToolInput(tag="in_no_scale", input_type=Boolean(optional=True), prefix="--noscale", doc=InputDocumentation(doc=": Don't scale peak scores by the max score.")), ToolInput(tag="in_scale_outliers", input_type=Boolean(optional=True), prefix="--scale-outliers", doc=InputDocumentation(doc=": Set all peaks with scores >2*median score to have binding prob 1. Recommended with real peak files")), ToolInput(tag="in_seed", input_type=Int(optional=True), prefix="--seed", doc=InputDocumentation(doc=": the seed for initiating randomization opertions\nDefault or 0: current time")), ToolInput(tag="in_region", input_type=String(optional=True), prefix="--region", doc=InputDocumentation(doc=": Only simulate reads from this region chrom:start-end\nDefault: genome-wide")), ToolInput(tag="in_binsize", input_type=Int(optional=True), prefix="--binsize", doc=InputDocumentation(doc=": Consider bins of this size when simulating\n: Default: 100000")), ToolInput(tag="in_thread", input_type=Int(optional=True), prefix="--thread", doc=InputDocumentation(doc=": Number of threads used for computing\n: Default: 1")), ToolInput(tag="in_sequencer", input_type=String(optional=True), prefix="--sequencer", doc=InputDocumentation(doc=": Sequencing error values\n: Default: None (no sequencing errors)")), ToolInput(tag="in_sub", input_type=Float(optional=True), prefix="--sub", doc=InputDocumentation(doc=": Customized substitution value in sequecing")), ToolInput(tag="in_ins", input_type=Float(optional=True), prefix="--ins", doc=InputDocumentation(doc=": Customized insertion value in sequecing")), ToolInput(tag="in_del", input_type=Float(optional=True), prefix="--del", doc=InputDocumentation(doc=": Customized deletion value in sequecing"))], outputs=[], container="quay.io/biocontainers/chips:2.4--h5ef6573_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Chips_Simreads_V0_1_0().translate("wdl")

