from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Int, Boolean

Qfilt_V0_1_0 = CommandToolBuilder(tool="qfilt", base_command=["qfilt"], inputs=[ToolInput(tag="in_qual_fasta_qual", input_type=String(optional=True), prefix="-F", doc=InputDocumentation(doc="QUAL            FASTA and QUAL files")), ToolInput(tag="in_fastq_file", input_type=File(optional=True), prefix="-Q", doc=InputDocumentation(doc="FASTQ file")), ToolInput(tag="in_direct_retained_fragments", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="direct retained fragments to a file named OUTPUT (default=stdout)")), ToolInput(tag="in_minimum_perbase_quality", input_type=Int(optional=True), prefix="-q", doc=InputDocumentation(doc="minimum per-base quality score below which a read will be split\nor truncated (default=20)")), ToolInput(tag="in_minimum_retained_fragment", input_type=Int(optional=True), prefix="-l", doc=InputDocumentation(doc="minimum retained fragment LENGTH (default=50)")), ToolInput(tag="in_mode_bitmask_integer", input_type=Int(optional=True), prefix="-m", doc=InputDocumentation(doc="MODE is a 3-bitmask (an integer in [0-7], default=0):\nif the lowest bit is set, it is like passing -s;\nif the middle bit is set, it is like passing -p;\nand if the highest bit is set, it is like passing -a")), ToolInput(tag="in_when_encountering_split", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="when encountering a low q-score, split instead of truncate")), ToolInput(tag="in_tolerate_low_qscore", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="tolerate low q-score homopolymeric regions")), ToolInput(tag="in_tolerate_low_nucleotides", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="tolerate low q-score ambiguous nucleotides")), ToolInput(tag="in_rather_splitting_truncating_replace", input_type=String(optional=True), prefix="-P", doc=InputDocumentation(doc="rather than splitting or truncating, replace low quality bases with CHAR\nthis option OVERRIDES all -m mode options")), ToolInput(tag="in_rather_splitting_truncating_remove", input_type=String(optional=True), prefix="-R", doc=InputDocumentation(doc="rather than splitting or truncating, remove reads which\ncontain more than COUNT low quality bases\nthis option only works in COMBINATION with the -P (punch) option")), ToolInput(tag="in_supplied_only_reads", input_type=String(optional=True), prefix="-T", doc=InputDocumentation(doc="if supplied, only reads with this PREFIX are retained,\nand the PREFIX is stripped from each contributing read")), ToolInput(tag="in_prefix_supplied_tolerates", input_type=Int(optional=True), prefix="-t", doc=InputDocumentation(doc="if PREFIX is supplied, prefix matching tolerates at most\nMISMATCH mismatches (default=0)")), ToolInput(tag="in_output_fasta_fastq", input_type=String(optional=True), prefix="-f", doc=InputDocumentation(doc="output in FASTA or FASTQ format (default=FASTA)")), ToolInput(tag="in_output_run_diagnostics", input_type=Boolean(optional=True), prefix="-j", doc=InputDocumentation(doc="output run diagnostics to stderr as JSON (default is to write ASCII text)")), ToolInput(tag="in_v", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_direct_retained_fragments", output_type=File(optional=True), selector=InputSelector(input_to_select="in_direct_retained_fragments", type_hint=File()), doc=OutputDocumentation(doc="direct retained fragments to a file named OUTPUT (default=stdout)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Qfilt_V0_1_0().translate("wdl", allow_empty_container=True)

