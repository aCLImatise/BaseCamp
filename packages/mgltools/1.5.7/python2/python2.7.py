from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Python2_7_V0_1_0 = CommandToolBuilder(tool="python2.7", base_command=["python2.7"], inputs=[ToolInput(tag="in_write_files_also", input_type=Boolean(optional=True), prefix="-B", doc=InputDocumentation(doc=": don't write .py[co] files on import; also PYTHONDONTWRITEBYTECODE=x")), ToolInput(tag="in_program_passed_string", input_type=String(optional=True), prefix="-c", doc=InputDocumentation(doc=": program passed in as string (terminates option list)")), ToolInput(tag="in_debug_output_also", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc=": debug output from parser; also PYTHONDEBUG=x")), ToolInput(tag="in_ignore_python_variables", input_type=Boolean(optional=True), prefix="-E", doc=InputDocumentation(doc=": ignore PYTHON* environment variables (such as PYTHONPATH)")), ToolInput(tag="in_inspect_interactively_evenif", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc=": inspect interactively after running script; forces a prompt even\nif stdin does not appear to be a terminal; also PYTHONINSPECT=x")), ToolInput(tag="in_run_library_module", input_type=String(optional=True), prefix="-m", doc=InputDocumentation(doc=": run library module as a script (terminates option list)")), ToolInput(tag="in_optimize_generated_bytecode", input_type=Boolean(optional=True), prefix="-O", doc=InputDocumentation(doc=": optimize generated bytecode slightly; also PYTHONOPTIMIZE=x")), ToolInput(tag="in_oo", input_type=Boolean(optional=True), prefix="-OO", doc=InputDocumentation(doc=": remove doc-strings in addition to the -O optimizations")), ToolInput(tag="in_use_pseudorandom_salt", input_type=Boolean(optional=True), prefix="-R", doc=InputDocumentation(doc=": use a pseudo-random salt to make hash() values of various types be\nunpredictable between separate invocations of the interpreter, as\na defense against denial-of-service attacks")), ToolInput(tag="in_division_options_qold", input_type=String(optional=True), prefix="-Q", doc=InputDocumentation(doc=": division options: -Qold (default), -Qwarn, -Qwarnall, -Qnew")), ToolInput(tag="in_add_site_directory", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc=": don't add user site directory to sys.path; also PYTHONNOUSERSITE")), ToolInput(tag="in__don_initialization", input_type=Boolean(optional=True), prefix="-S", doc=InputDocumentation(doc=": don't imply 'import site' on initialization")), ToolInput(tag="in_issue_warnings_inconsistent", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc=": issue warnings about inconsistent tab usage (-tt: issue errors)")), ToolInput(tag="in_unbuffered_binary_stdout", input_type=Boolean(optional=True), prefix="-u", doc=InputDocumentation(doc=": unbuffered binary stdout and stderr; also PYTHONUNBUFFERED=x\nsee man page for details on internal buffering relating to '-u'")), ToolInput(tag="in_verbose_trace_import", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc=": verbose (trace import statements); also PYTHONVERBOSE=x\ncan be supplied multiple times to increase verbosity")), ToolInput(tag="in_print_python_number", input_type=Boolean(optional=True), prefix="-V", doc=InputDocumentation(doc=": print the Python version number and exit (also --version)")), ToolInput(tag="in_warning_control_arg", input_type=String(optional=True), prefix="-W", doc=InputDocumentation(doc=": warning control; arg is action:message:category:module:lineno\nalso PYTHONWARNINGS=arg")), ToolInput(tag="in_skip_first_line", input_type=Boolean(optional=True), prefix="-x", doc=InputDocumentation(doc=": skip first line of source, allowing use of non-Unix forms of #!cmd")), ToolInput(tag="in_warn_python_incompatibilities", input_type=Boolean(optional=True), prefix="-3", doc=InputDocumentation(doc=": warn about Python 3.x incompatibilities that 2to3 cannot trivially fix"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Python2_7_V0_1_0().translate("wdl", allow_empty_container=True)

