!Command
command:
- tester
positional: []
named:
- !Flag
  description: quiet
  synonyms:
  - -q
  - --quiet
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: verbose, default behavior
  synonyms:
  - -v
  - --verbose
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: noisy
  synonyms:
  - -V
  - --noisy
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "option to get tests from package recursively\n(default=false)"
  synonyms:
  - -r
  - --recursive
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "option to specify the name of the directory containing\nthe tests\
    \ (default='Tests')"
  synonyms:
  - -t
  - --testdir
  args: !SimpleFlagArg
    name: TESTDIR
  optional: true
- !Flag
  description: "option to specify the prefix a method or a function\nneeds, to be\
    \ included in the list of tests.\n(default='test_')"
  synonyms:
  - -f
  - --funcPrefix
  args: !SimpleFlagArg
    name: FUNCPREFIX
  optional: true
- !Flag
  description: "option to specify the prefix a test module needs, to\nbe included\
    \ in the list of tests. (default= no prefix)"
  synonyms:
  - -m
  - --modPrefix
  args: !SimpleFlagArg
    name: MODPREFIX
  optional: true
- !Flag
  description: name of an output file
  synonyms:
  - -o
  - --output
  args: !SimpleFlagArg
    name: OUTPUT
  optional: true
- !Flag
  description: "option to specify whether or not to run each test\nmodule in a subprocess\
    \ (default=False)"
  synonyms:
  - -s
  - --subprocess
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "option to specify whether or not a report file will be\ncreated. When\
    \ the option is given no report will be\ncreated otherwise a report will be created\
    \ in a\nTESTREPORT subdirectory. (default=a report will be\ncreated)"
  synonyms:
  - --noreport
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "option to specify whether or not the tester should\nexit after the\
    \ first failed test. (default=False)\n"
  synonyms:
  - -e
  - --exitOnFail
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "running Python: /usr/local/bin/python\nUsage: tester [options]\n\nOptions:\n\
  \  -h, --help            show this help message and exit\n  -q, --quiet        \
  \   quiet\n  -v, --verbose         verbose, default behavior\n  -V, --noisy    \
  \       noisy\n  -r, --recursive       option to get tests from package recursively\n\
  \                        (default=false)\n  -t TESTDIR, --testdir=TESTDIR\n    \
  \                    option to specify the name of the directory containing\n  \
  \                      the tests (default='Tests')\n  -f FUNCPREFIX, --funcPrefix=FUNCPREFIX\n\
  \                        option to specify the prefix a method or a function\n \
  \                       needs, to be included in the list of tests.\n          \
  \              (default='test_')\n  -m MODPREFIX, --modPrefix=MODPREFIX\n      \
  \                  option to specify the prefix a test module needs, to\n      \
  \                  be included in the list of tests. (default= no prefix)\n  -o\
  \ OUTPUT, --output=OUTPUT\n                        name of an output file\n  -s,\
  \ --subprocess      option to specify whether or not to run each test\n        \
  \                module in a subprocess (default=False)\n  --noreport          \
  \  option to specify whether or not a report file will be\n                    \
  \    created. When the option is given no report will be\n                     \
  \   created otherwise a report will be created in a\n                        TESTREPORT\
  \ subdirectory. (default=a report will be\n                        created)\n  -e,\
  \ --exitOnFail      option to specify whether or not the tester should\n       \
  \                 exit after the first failed test. (default=False)\n"
generated_using:
- --help
