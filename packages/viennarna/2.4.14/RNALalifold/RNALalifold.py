from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Int, Float, String

Rnalalifold_V0_1_0 = CommandToolBuilder(tool="RNALalifold", base_command=["RNALalifold"], inputs=[ToolInput(tag="in_detailed_help", input_type=Boolean(optional=True), prefix="--detailed-help", doc=InputDocumentation(doc="Print help, including all details and hidden\noptions, and exit")), ToolInput(tag="in_full_help", input_type=Boolean(optional=True), prefix="--full-help", doc=InputDocumentation(doc="Print help, including hidden options, and exit")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Be verbose.\n(default=off)")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="Be quiet.\n(default=off)")), ToolInput(tag="in_noconv", input_type=Boolean(optional=True), prefix="--noconv", doc=InputDocumentation(doc="Do not automatically substitute nucleotide\n'T' with 'U'\n(default=off)")), ToolInput(tag="in_input_format", input_type=File(optional=True), prefix="--input-format", doc=InputDocumentation(doc="|S|F|M    File format of the input multiple sequence\nalignment (MSA).")), ToolInput(tag="in_csv", input_type=Boolean(optional=True), prefix="--csv", doc=InputDocumentation(doc="Create comma separated output (csv)\n(default=off)")), ToolInput(tag="in_aln", input_type=Boolean(optional=True), prefix="--aln", doc=InputDocumentation(doc="[=prefix]            Produce output alignments and secondary\nstructure plots for each hit found.")), ToolInput(tag="in_aln_eps", input_type=Boolean(optional=True), prefix="--aln-EPS", doc=InputDocumentation(doc="[=prefix]        Produce colored and structure annotated\nsubalignment for each hit")), ToolInput(tag="in_aln_eps_ss", input_type=Boolean(optional=True), prefix="--aln-EPS-ss", doc=InputDocumentation(doc="[=prefix]     Produce colored consensus secondary structure\nplots in PostScript format")), ToolInput(tag="in_aln_stk", input_type=Boolean(optional=True), prefix="--aln-stk", doc=InputDocumentation(doc="[=prefix]        Add hits to a multi-Stockholm formatted output")), ToolInput(tag="in_auto_id", input_type=Boolean(optional=True), prefix="--auto-id", doc=InputDocumentation(doc="Automatically generate an ID for each")), ToolInput(tag="in_id_prefix", input_type=File(optional=True), prefix="--id-prefix", doc=InputDocumentation(doc="Prefix for automatically generated IDs (as used\nin output file names)\n(default=`alignment')")), ToolInput(tag="in_split_contributions", input_type=Boolean(optional=True), prefix="--split-contributions", doc=InputDocumentation(doc="Split the free energy contributions into\nseparate parts\n(default=off)")), ToolInput(tag="in_shape", input_type=File(optional=True), prefix="--shape", doc=InputDocumentation(doc=",file2       Use SHAPE reactivity data to guide structure")), ToolInput(tag="in_max_bp_span", input_type=Int(optional=True), prefix="--maxBPspan", doc=InputDocumentation(doc="Set the maximum allowed separation of a base\npair to span. I.e. no pairs (i,j) with\nj-i>span will be allowed.\n(default=`70')")), ToolInput(tag="in_threshold", input_type=Float(optional=True), prefix="--threshold", doc=InputDocumentation(doc="Energy threshold in kcal/mol per nucleotide\nabove which secondary structure hits are\nomitted in the output.\n(default=`-0.1')")), ToolInput(tag="in_mis", input_type=Boolean(optional=True), prefix="--mis", doc=InputDocumentation(doc="Output 'most informative sequence' instead of\nsimple consensus: For each column of the\nalignment output the set of nucleotides with\nfrequency greater than average in IUPAC\nnotation.\n(default=off)")), ToolInput(tag="in_g_quad", input_type=Boolean(optional=True), prefix="--gquad", doc=InputDocumentation(doc="Incoorporate G-Quadruplex formation into the\nstructure prediction algorithm\n(default=off)")), ToolInput(tag="in_temp", input_type=Int(optional=True), prefix="--temp", doc=InputDocumentation(doc="Rescale energy parameters to a temperature of\ntemp C. Default is 37C.")), ToolInput(tag="in_no_tetra", input_type=Boolean(optional=True), prefix="--noTetra", doc=InputDocumentation(doc="Do not include special tabulated stabilizing\nenergies for tri-, tetra- and hexaloop\nhairpins. Mostly for testing.\n(default=off)")), ToolInput(tag="in_dangles", input_type=Int(optional=True), prefix="--dangles", doc=InputDocumentation(doc="How to treat 'dangling end' energies for\nbases adjacent to helices in free ends and\nmulti-loops\n(default=`2')")), ToolInput(tag="in_no_lp", input_type=Boolean(optional=True), prefix="--noLP", doc=InputDocumentation(doc="Produce structures without lonely pairs\n(helices of length 1).\n(default=off)")), ToolInput(tag="in_no_gu", input_type=Boolean(optional=True), prefix="--noGU", doc=InputDocumentation(doc="Do not allow GU pairs\n(default=off)")), ToolInput(tag="in_no_closing_gu", input_type=Boolean(optional=True), prefix="--noClosingGU", doc=InputDocumentation(doc="Do not allow GU pairs at the end of helices\n(default=off)")), ToolInput(tag="in_param_file", input_type=File(optional=True), prefix="--paramFile", doc=InputDocumentation(doc="Read energy parameters from paramfile, instead\nof using the default parameter set.")), ToolInput(tag="in_c_factor", input_type=Float(optional=True), prefix="--cfactor", doc=InputDocumentation(doc="Set the weight of the covariance term in the\nenergy function\n(default=`1.0')")), ToolInput(tag="in_n_factor", input_type=Float(optional=True), prefix="--nfactor", doc=InputDocumentation(doc="Set the penalty for non-compatible sequences in\nthe covariance term of the energy function\n(default=`1.0')")), ToolInput(tag="in_ribo_sum_file", input_type=File(optional=True), prefix="--ribosum_file", doc=InputDocumentation(doc="use specified Ribosum Matrix instead of normal\nenergy model. Matrixes to use should be 6x6\nmatrices, the order of the terms is AU, CG,\nGC, GU, UA, UG.")), ToolInput(tag="in_ribo_sum_scoring", input_type=Boolean(optional=True), prefix="--ribosum_scoring", doc=InputDocumentation(doc="use ribosum scoring matrix. The matrix is\nchosen according to the minimal and maximal\npairwise identities of the sequences in the\nfile.\n(default=off)")), ToolInput(tag="in_structures_dot", input_type=String(), position=0, doc=InputDocumentation(doc="-h, --help                    Print help and exit")), ToolInput(tag="in_file_dot", input_type=File(), position=0, doc=InputDocumentation(doc="(default=`RNALalifold_results')")), ToolInput(tag="in_alignment_dot", input_type=String(), position=1, doc=InputDocumentation(doc="(default=off)")), ToolInput(tag="in_predictions", input_type=String(), position=0, doc=InputDocumentation(doc="--shapeMethod=D[mX][bY]   Specify the method how to convert SHAPE")), ToolInput(tag="in_contributions", input_type=String(), position=0, doc=InputDocumentation(doc="(default=`D')"))], outputs=[ToolOutput(tag="out_id_prefix", output_type=File(optional=True), selector=InputSelector(input_to_select="in_id_prefix", type_hint=File()), doc=OutputDocumentation(doc="Prefix for automatically generated IDs (as used\nin output file names)\n(default=`alignment')"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Rnalalifold_V0_1_0().translate("wdl", allow_empty_container=True)

