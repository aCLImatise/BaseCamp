from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Directory, Boolean, File, String, Int

Bwa_Aln_Pl_V0_1_0 = CommandToolBuilder(tool="bwa_aln.pl", base_command=["bwa_aln.pl"], inputs=[ToolInput(tag="in_outdir", input_type=Directory(optional=True), prefix="-outdir", doc=InputDocumentation(doc="Folder to output result to.")), ToolInput(tag="in_path_reference_file", input_type=Boolean(optional=True), prefix="-reference", doc=InputDocumentation(doc="Path to reference genome file *.fa[.gz]")), ToolInput(tag="in_sample_name_applied", input_type=File(optional=True), prefix="-sample", doc=InputDocumentation(doc="Sample name to be applied to output file.")), ToolInput(tag="in_number_threads_use", input_type=Boolean(optional=True), prefix="-threads", doc=InputDocumentation(doc="Number of threads to use. [1]")), ToolInput(tag="in_only_process_step", input_type=Boolean(optional=True), prefix="-process", doc=InputDocumentation(doc="Only process this step then exit, optionally set -index\nbam2fq - only applicable if input is bam\naln - Run 'bwa aln'\nsampe - Run 'bwa sampe' and sorting to BAM\nmark - Run duplicate marking (-index N/A)")), ToolInput(tag="in_index", input_type=Boolean(optional=True), prefix="-index", doc=InputDocumentation(doc="Optionally restrict '-p' to single job\nbam2fq - 1..<lane_count>\naln - 1..<lane_count*2>\nsampe - 1..<lane_count>")), ToolInput(tag="in_man", input_type=Boolean(optional=True), prefix="-man", doc=InputDocumentation(doc="Full documentation.")), ToolInput(tag="in_var_7", input_type=Boolean(optional=True), prefix="-help", doc=InputDocumentation(doc="")), ToolInput(tag="in_brief", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_var_9", input_type=File(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_folder", input_type=Directory(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_var_11", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_number", input_type=Int(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_only", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_optionally", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_other", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_path", input_type=File(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_required", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_run", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_var_19", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_targeted", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_aln", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_bam_two_fq", input_type=Int(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_mark", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_sampe", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_var_25", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_list", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_name", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_of", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_parameters", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_var_30", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_processing", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_restrict", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_to", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_with", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_can", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_output", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_var_37", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_this", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_var_39", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_be", input_type=String(), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_genome", input_type=String(), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_result", input_type=String(), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_step", input_type=String(), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_applied", input_type=String(), position=4, doc=InputDocumentation(doc="")), ToolInput(tag="in_var_45", input_type=File(), position=4, doc=InputDocumentation(doc="")), ToolInput(tag="in_var_46", input_type=String(), position=4, doc=InputDocumentation(doc="")), ToolInput(tag="in_then", input_type=String(), position=4, doc=InputDocumentation(doc="")), ToolInput(tag="in_use_dot", input_type=String(), position=4, doc=InputDocumentation(doc="")), ToolInput(tag="in_exit", input_type=String(), position=5, doc=InputDocumentation(doc="")), ToolInput(tag="in_names", input_type=String(), position=6, doc=InputDocumentation(doc="")), ToolInput(tag="in_or", input_type=String(), position=7, doc=InputDocumentation(doc="")), ToolInput(tag="in_wildcard", input_type=String(), position=8, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_outdir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_outdir", type_hint=File()), doc=OutputDocumentation(doc="Folder to output result to.")), ToolOutput(tag="out_sample_name_applied", output_type=File(optional=True), selector=InputSelector(input_to_select="in_sample_name_applied", type_hint=File()), doc=OutputDocumentation(doc="Sample name to be applied to output file."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bwa_Aln_Pl_V0_1_0().translate("wdl", allow_empty_container=True)

