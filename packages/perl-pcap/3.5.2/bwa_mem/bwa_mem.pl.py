from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Directory, Boolean, File, String, Int

Bwa_Mem_Pl_V0_1_0 = CommandToolBuilder(tool="bwa_mem.pl", base_command=["bwa_mem.pl"], inputs=[ToolInput(tag="in_outdir", input_type=Directory(optional=True), prefix="-outdir", doc=InputDocumentation(doc="Folder to output result to.")), ToolInput(tag="in_path_reference_file", input_type=Boolean(optional=True), prefix="-reference", doc=InputDocumentation(doc="Path to reference genome file *.fa[.gz]")), ToolInput(tag="in_sample_name_applied", input_type=File(optional=True), prefix="-sample", doc=InputDocumentation(doc="Sample name to be applied to output file.")), ToolInput(tag="in_number_threads_use", input_type=Boolean(optional=True), prefix="-threads", doc=InputDocumentation(doc="Number of threads to use. [1]")), ToolInput(tag="in_fragment", input_type=Boolean(optional=True), prefix="-fragment", doc=InputDocumentation(doc="Split input into fragements of X million repairs [10]")), ToolInput(tag="in_no_mark_dup", input_type=Boolean(optional=True), prefix="-nomarkdup", doc=InputDocumentation(doc="Don't mark duplicates")), ToolInput(tag="in_output_cram_see", input_type=Boolean(optional=True), prefix="-cram", doc=InputDocumentation(doc="Output cram, see '-sc'")), ToolInput(tag="in_single_quoted_string_pass_used", input_type=Boolean(optional=True), prefix="-scramble", doc=InputDocumentation(doc="Single quoted string of parameters to pass to Scramble when '-c' used\n- '-I,-O' are used internally and should not be provided")), ToolInput(tag="in_bwa", input_type=Boolean(optional=True), prefix="-bwa", doc=InputDocumentation(doc="Single quoted string of additional parameters to pass to BWA\n- '-t,-p,-R' are used internally and should not be provided")), ToolInput(tag="in_map_threads", input_type=Boolean(optional=True), prefix="-map_threads", doc=InputDocumentation(doc="Number of cores applied to each parallel BWA job when '-t' exceeds this value and '-i' is not in use[6]")), ToolInput(tag="in_process", input_type=Boolean(optional=True), prefix="-process", doc=InputDocumentation(doc="Only process this step then exit, optionally set -index\nbwamem - only applicable if input is bam\nmark - Run duplicate marking (-index N/A)\nstats - Generates the *.bas file for the final BAM.")), ToolInput(tag="in_index", input_type=Boolean(optional=True), prefix="-index", doc=InputDocumentation(doc="Optionally restrict '-p' to single job\nbwamem - 1..<lane_count>")), ToolInput(tag="in_bwa_pl", input_type=Boolean(optional=True), prefix="-bwa_pl", doc=InputDocumentation(doc="BWA runs ~8% quicker when using the tcmalloc library from\nhttps://github.com/gperftools/ (assuming number of cores not exceeded)\nIf available specify the path to 'gperftools/lib/libtcmalloc_minimal.so'.")), ToolInput(tag="in_jobs", input_type=Boolean(optional=True), prefix="-jobs", doc=InputDocumentation(doc="For a parallel step report the number of jobs required")), ToolInput(tag="in_man", input_type=Boolean(optional=True), prefix="-man", doc=InputDocumentation(doc="Full documentation.")), ToolInput(tag="in_don", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_folder", input_type=Directory(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_number", input_type=Int(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_optional", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_var_19", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_path", input_type=File(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_required", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_var_22", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_single", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_split", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_var_25", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_input", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_name", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_of", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_parameters", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_quoted", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_to", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_into", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_var_33", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_var_34", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_string", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_var_36", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_be", input_type=String(), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_frage_ments", input_type=String(), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_genome", input_type=String(), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_result", input_type=String(), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_applied", input_type=String(), position=4, doc=InputDocumentation(doc="")), ToolInput(tag="in_file", input_type=File(), position=4, doc=InputDocumentation(doc="")), ToolInput(tag="in_use_dot", input_type=String(), position=4, doc=InputDocumentation(doc="")), ToolInput(tag="in_x", input_type=String(), position=5, doc=InputDocumentation(doc="")), ToolInput(tag="in_million", input_type=String(), position=6, doc=InputDocumentation(doc="")), ToolInput(tag="in_pass", input_type=String(), position=6, doc=InputDocumentation(doc="")), ToolInput(tag="in_repairs", input_type=String(), position=7, doc=InputDocumentation(doc="")), ToolInput(tag="in_var_48", input_type=String(), position=8, doc=InputDocumentation(doc="")), ToolInput(tag="in_when", input_type=String(), position=9, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_outdir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_outdir", type_hint=File()), doc=OutputDocumentation(doc="Folder to output result to.")), ToolOutput(tag="out_sample_name_applied", output_type=File(optional=True), selector=InputSelector(input_to_select="in_sample_name_applied", type_hint=File()), doc=OutputDocumentation(doc="Sample name to be applied to output file."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bwa_Mem_Pl_V0_1_0().translate("wdl", allow_empty_container=True)

