from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Int, Boolean

Chakin_Feature_Load_Fasta_V0_1_0 = CommandToolBuilder(tool="chakin_feature_load_fasta", base_command=["chakin", "feature", "load_fasta"], inputs=[ToolInput(tag="in_sequence_type", input_type=String(optional=True), prefix="--sequence_type", doc=InputDocumentation(doc="Sequence type  [default: contig]")), ToolInput(tag="in_analysis_id", input_type=Int(optional=True), prefix="--analysis_id", doc=InputDocumentation(doc="Analysis ID")), ToolInput(tag="in_re_name", input_type=String(optional=True), prefix="--re_name", doc=InputDocumentation(doc="Regular expression to extract the feature name from\nthe fasta sequence id (first capturing group will be\nused).")), ToolInput(tag="in_re_unique_name", input_type=String(optional=True), prefix="--re_uniquename", doc=InputDocumentation(doc="Regular expression to extract the feature name from\nthe fasta sequence id (first capturing group will be\nused).")), ToolInput(tag="in_match_on_name", input_type=Boolean(optional=True), prefix="--match_on_name", doc=InputDocumentation(doc="Match existing features using their name instead of\ntheir uniquename")), ToolInput(tag="in_update", input_type=Boolean(optional=True), prefix="--update", doc=InputDocumentation(doc="Update existing feature with new sequence instead of\nthrowing an error")), ToolInput(tag="in_db", input_type=Int(optional=True), prefix="--db", doc=InputDocumentation(doc="External database to cross reference to.")), ToolInput(tag="in_re_db_accession", input_type=String(optional=True), prefix="--re_db_accession", doc=InputDocumentation(doc="Regular expression to extract an external database\naccession from the fasta sequence id (first\ncapturing group will be used).")), ToolInput(tag="in_rel_type", input_type=String(optional=True), prefix="--rel_type", doc=InputDocumentation(doc="Relation type to parent feature ('part_of' or\n'derives_from').")), ToolInput(tag="in_re_parent", input_type=String(optional=True), prefix="--re_parent", doc=InputDocumentation(doc="Regular expression to extract parent uniquename from\nthe fasta sequence id (first capturing group will be\nused).")), ToolInput(tag="in_parent_type", input_type=String(optional=True), prefix="--parent_type", doc=InputDocumentation(doc="Sequence type of the parent feature")), ToolInput(tag="in_fast_a", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_organism_id", input_type=String(), position=1, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Chakin_Feature_Load_Fasta_V0_1_0().translate("wdl", allow_empty_container=True)

