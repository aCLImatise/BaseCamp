from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, String, Boolean, File, Array, Directory

Deepac_Live_Receiver_V0_1_0 = CommandToolBuilder(tool="deepac_live_receiver", base_command=["deepac-live", "receiver"], inputs=[ToolInput(tag="in_read_length", input_type=Int(optional=True), prefix="--read-length", doc=InputDocumentation(doc="Expected read length")), ToolInput(tag="in_seq_cycles", input_type=String(optional=True), prefix="--seq-cycles", doc=InputDocumentation(doc="Comma-separated list of sequencing cycles to analyze.")), ToolInput(tag="in_format", input_type=String(optional=True), prefix="--format", doc=InputDocumentation(doc="Format of temp files. bam or fasta.")), ToolInput(tag="in_barcodes", input_type=String(optional=True), prefix="--barcodes", doc=InputDocumentation(doc="Comma-separated list of barcodes of samples to\nanalyze. Default: 'undetermined'")), ToolInput(tag="in_command", input_type=String(optional=True), prefix="--command", doc=InputDocumentation(doc="DeePaC command to use (switches builtin models).")), ToolInput(tag="in_custom", input_type=Boolean(optional=True), prefix="--custom", doc=InputDocumentation(doc="Use a custom model.")), ToolInput(tag="in_model", input_type=File(optional=True), prefix="--model", doc=InputDocumentation(doc="Model to use. 'rapid', 'sensitive' or custom .h5 file.")), ToolInput(tag="in_n_cpus_rec", input_type=Int(optional=True), prefix="--n-cpus-rec", doc=InputDocumentation(doc="Number of cores used by the receiver. Default: all")), ToolInput(tag="in_gpus", input_type=Array(t=String(), optional=True), prefix="--gpus", doc=InputDocumentation(doc="GPU devices to use (comma-separated). Default: all")), ToolInput(tag="in_threshold", input_type=String(optional=True), prefix="--threshold", doc=InputDocumentation(doc="Classification threshold.")), ToolInput(tag="in_receiver_input", input_type=Directory(optional=True), prefix="--receiver-input", doc=InputDocumentation(doc="Receiver input directory.")), ToolInput(tag="in_receiver_output", input_type=Directory(optional=True), prefix="--receiver-output", doc=InputDocumentation(doc="Receiver output directory.")), ToolInput(tag="in_discard_neg", input_type=Boolean(optional=True), prefix="--discard-neg", doc=InputDocumentation(doc="Don't save predictions for nonpathogenic reads."))], outputs=[ToolOutput(tag="out_receiver_output", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_receiver_output", type_hint=File()), doc=OutputDocumentation(doc="Receiver output directory."))], container="quay.io/biocontainers/deepaclive:0.3.2--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Deepac_Live_Receiver_V0_1_0().translate("wdl")

