from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, String

Genotyper_V0_1_0 = CommandToolBuilder(tool="genotyper", base_command=["genotyper"], inputs=[ToolInput(tag="in_arg_maximum_allowed_distance", input_type=Boolean(optional=True), prefix="-O", doc=InputDocumentation(doc="[ --max_offset_split ] arg (=10)   Maximum allowed distance between two\nsplit read calls.")), ToolInput(tag="in_arg_maximum_allowed_differencebetween", input_type=Boolean(optional=True), prefix="-Z", doc=InputDocumentation(doc="[ --max_length_diff_split ] arg (=5)\nMaximum allowed length difference\nbetween two split read calls.")), ToolInput(tag="in_arg_minimum_distance", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc="[ --split_border_distance ] arg (=12)\nMinimum distance of variant breakpoint\nto start/end of alignment in order to\nuse read.")), ToolInput(tag="in_arg_number_look", input_type=Boolean(optional=True), prefix="-w", doc=InputDocumentation(doc="[ --bam_window ] arg (=1000)       Number of nucleotides to look to the\nright/to the left of deletions in BAM\nfiles to find relevant alignments.")), ToolInput(tag="in_arg_calls_mode", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc="[ --denovo_threshold ] arg (=1.0000000000000001e-05)\nThreshold for de novo calls (in\ntrio/quartet mode)")), ToolInput(tag="in_arg_mapq_alignments", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="[ --mapq ] arg (=0)                Minimum MAPQ. Alignments with lower\nMAPQ are ignored.")), ToolInput(tag="in_arg_prior_believe", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="[ --variant_prior ] arg (=0.5)     Prior believe in a variant (given that\nthe locus is under investigation).")), ToolInput(tag="in_genotyping_based_alignments", input_type=Boolean(optional=True), prefix="-I", doc=InputDocumentation(doc="[ --gt_only_insert ]               Do genotyping only based on\ninternal-segment-type alignments.")), ToolInput(tag="in_genotyping_only_based", input_type=Boolean(optional=True), prefix="-S", doc=InputDocumentation(doc="[ --gt_only_split ]                Do genotyping only based on split-type")), ToolInput(tag="in_min_phys_cov", input_type=Int(optional=True), prefix="--min_phys_cov", doc=InputDocumentation(doc="(=5)               Minimum physical coverage to determine\ngenotype if less, then './.' is output\nfor this deletion/individual\n(default=5).")), ToolInput(tag="in_gq_present", input_type=Int(optional=True), prefix="--gq-present", doc=InputDocumentation(doc="(=20)                In case genotype cannot be called (due\nto bad GQ or due to insufficient\nphysical coverage), then report\ngenotype '1/.' (i.e. 'present') if\nphred score of genotype '0/0' is above\nthis threshold.")), ToolInput(tag="in_omit_absent", input_type=Boolean(optional=True), prefix="--omit-absent", doc=InputDocumentation(doc="Omit lines where variant is absent in\nall samples.")), ToolInput(tag="in_dont_prioritize", input_type=Boolean(optional=True), prefix="--dont-prioritize", doc=InputDocumentation(doc="By default indels with most split read\nsupport genotyped first, giving them\nprecedence over indels with less\nsupport. This option disables this and\ngenotypes indels as they appear in the\ninput.")), ToolInput(tag="in_max_output_length", input_type=Int(optional=True), prefix="--max-output-length", doc=InputDocumentation(doc="(=9999)       Maximum length of deletion for which\nthe REF allele is output to the VCF.\nAbove that, the <DEL> notation is used\n(defaul: 9999).\n")), ToolInput(tag="in_alignments_dot", input_type=String(), position=0, doc=InputDocumentation(doc="--min_gq arg (=20)                    Minimum genotype quality (GQ). If GQ is"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Genotyper_V0_1_0().translate("wdl", allow_empty_container=True)

