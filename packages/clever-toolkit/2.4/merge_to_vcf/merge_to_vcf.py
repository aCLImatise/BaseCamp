from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, String

Merge_To_Vcf_V0_1_0 = CommandToolBuilder(tool="merge_to_vcf", base_command=["merge-to-vcf"], inputs=[ToolInput(tag="in_arg_maximum_allowed_distance_splitread", input_type=Boolean(optional=True), prefix="-o", doc=InputDocumentation(doc="[ --max_offset ] arg (=100)        Maximum allowed distance between split\nread and CLEVER call.")), ToolInput(tag="in_arg_maximum_allowed_read", input_type=Boolean(optional=True), prefix="-z", doc=InputDocumentation(doc="[ --max_length_diff ] arg (=20)    Maximum allowed length difference\nbetween split read and CLEVER call.")), ToolInput(tag="in_arg_maximum_allowed_distance_read", input_type=Boolean(optional=True), prefix="-O", doc=InputDocumentation(doc="[ --max_offset_split ] arg (=20)   Maximum allowed distance between two\nsplit read calls.")), ToolInput(tag="in_arg_maximum_allowed_differencebetween", input_type=Boolean(optional=True), prefix="-Z", doc=InputDocumentation(doc="[ --max_length_diff_split ] arg (=5)\nMaximum allowed length difference\nbetween two split read calls.")), ToolInput(tag="in_arg_minimum_length", input_type=Boolean(optional=True), prefix="-l", doc=InputDocumentation(doc="[ --min_length ] arg (=10)         Minimum length of variations to be")), ToolInput(tag="in_i_size_stddev", input_type=Int(optional=True), prefix="--isize_stddev", doc=InputDocumentation(doc="(=-1)              Standard deviation of internal")), ToolInput(tag="in__perform_genotyping", input_type=Boolean(optional=True), prefix="-G", doc=InputDocumentation(doc="[ --genotype ]                     Perform genotyping.")), ToolInput(tag="in_perform_trioaware_genotyping", input_type=Boolean(optional=True), prefix="-T", doc=InputDocumentation(doc="[ --trio_aware ]                   Perform trio-aware genotyping.")), ToolInput(tag="in_arg_calls_triomode", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc="[ --denovo_threshold ] arg (=1.0000000000000001e-05)\nThreshold for de novo calls (in trio\nmode)")), ToolInput(tag="in_read_split_read", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc="[ --split_reads_from_bam ]         Read split read evidence from BAM file.")), ToolInput(tag="in_arg_mapq_alignments", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="[ --mapq ] arg (=0)                Minimum MAPQ. Alignments with lower\nMAPQ are ignored.")), ToolInput(tag="in_arg_prior_believe", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="[ --variant_prior ] arg (=0.5)     Prior believe in a variant (given that\nthe locus is under investigation).")), ToolInput(tag="in_genotyping_based_alignments", input_type=Boolean(optional=True), prefix="-I", doc=InputDocumentation(doc="[ --gt_only_insert ]               Do genotyping only based on\ninternal-segment-type alignments.")), ToolInput(tag="in_genotyping_only_based", input_type=Boolean(optional=True), prefix="-S", doc=InputDocumentation(doc="[ --gt_only_split ]                Do genotyping only based on split-type\nalignments.\n")), ToolInput(tag="in_written_dot", input_type=String(), position=0, doc=InputDocumentation(doc="--isize_mean arg (=-1)                Mean length of internal segments. If ")), ToolInput(tag="in_segments_dot", input_type=String(), position=0, doc=InputDocumentation(doc="-w [ --bam_window ] arg (=1000)       Number of nucleotides to look to the "))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Merge_To_Vcf_V0_1_0().translate("wdl", allow_empty_container=True)

