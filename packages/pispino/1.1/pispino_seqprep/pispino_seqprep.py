from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Directory, File, Int, Boolean, String

Pispino_Seqprep_V0_1_0 = CommandToolBuilder(tool="pispino_seqprep", base_command=["pispino_seqprep"], inputs=[ToolInput(tag="in_directory_raw_sequences", input_type=Directory(optional=True), prefix="-i", doc=InputDocumentation(doc="[REQUIRED] Directory with raw sequences in gzipped")), ToolInput(tag="in_tap_separated_file", input_type=File(optional=True), prefix="-l", doc=InputDocumentation(doc="Tap separated file with three columns for sample ids,\nforward-read filename and reverse-read filename. Only\nthe files listed in this file will be processed.")), ToolInput(tag="in_fast_x_q", input_type=Int(optional=True), prefix="--FASTX-q", doc=InputDocumentation(doc="FASTX FASTQ_QUALITY_FILTER - Minimum quality score to\nkeep [default: 30]")), ToolInput(tag="in_fast_x_p", input_type=Int(optional=True), prefix="--FASTX-p", doc=InputDocumentation(doc="FASTX FASTQ_QUALITY_FILTER - Minimum percent of bases\nthat must have q quality [default: 80]")), ToolInput(tag="in_fast_x_n", input_type=Boolean(optional=True), prefix="--FASTX-n", doc=InputDocumentation(doc="FASTX FASTQ_TO_FASTA - remove sequences with unknown\n(N) nucleotides [default: false]")), ToolInput(tag="in_base_phred_score", input_type=Int(optional=True), prefix="-b", doc=InputDocumentation(doc="Base PHRED quality score [default: 33]")), ToolInput(tag="in_joiner_method", input_type=String(optional=True), prefix="--joiner_method", doc=InputDocumentation(doc="Joiner method: 'PEAR' and 'FASTQJOIN' [default:\nVSEARCH]")), ToolInput(tag="in_pear_options", input_type=Boolean(optional=True), prefix="--PEAR_options", doc=InputDocumentation(doc="= <STR>\nUser customisable parameter: You can add/change PEAR\nparameters. Please use '--PEAR_options=' followed by\ncustom parameters wrapped around them. E.g.\n--PEAR_options='-v 8 -t 2'. Note that if you put two\nsame parameters such as '-v 8 -v 15', PEAR will use\nthe later.")), ToolInput(tag="in_retain_intermediate_files", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="Retain intermediate files (Beware intermediate files\nuse excessive disk space!)")), ToolInput(tag="in_verbose_mode", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="Verbose mode")), ToolInput(tag="in_number_of_threads", input_type=Int(optional=True), prefix="-t", doc=InputDocumentation(doc="Number of Threads [default: 1]")), ToolInput(tag="in_forward_reads_only", input_type=Boolean(optional=True), prefix="--forwardreadsonly", doc=InputDocumentation(doc="Do NOT join paired-end sequences, but just use the\nforward reads.\n")), ToolInput(tag="in_o", input_type=String(optional=True), prefix="-o", doc=InputDocumentation(doc="")), ToolInput(tag="in_fast_q", input_type=String(), position=0, doc=InputDocumentation(doc="-o <DIR>              [REQUIRED] Directory to output results"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Pispino_Seqprep_V0_1_0().translate("wdl", allow_empty_container=True)

