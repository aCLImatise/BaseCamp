from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Directory, Array, Boolean, Int

Hca_Dss_Download_V0_1_0 = CommandToolBuilder(tool="hca_dss_download", base_command=["hca", "dss", "download"], inputs=[ToolInput(tag="in_no_data", input_type=String(optional=True), prefix="--no-data", doc=InputDocumentation(doc="if using the CLI or pass the no_data=True argument if calling the download() API method.")), ToolInput(tag="in_bundle_uuid", input_type=String(optional=True), prefix="--bundle-uuid", doc=InputDocumentation(doc="The uuid of the bundle to download")), ToolInput(tag="in_replica", input_type=String(optional=True), prefix="--replica", doc=InputDocumentation(doc="the replica to download from. The supported replicas are: aws for Amazon Web Services, and\ngcp for Google Cloud Platform. [aws, gcp]")), ToolInput(tag="in_download_dir", input_type=Directory(optional=True), prefix="--download-dir", doc=InputDocumentation(doc="The directory into which to download")), ToolInput(tag="in_metadata_filter", input_type=Array(t=String(), optional=True), prefix="--metadata-filter", doc=InputDocumentation(doc="One or more shell patterns against which all metadata files in the bundle will\nbe matched case-sensitively. A file is considered a metadata file if the\nindexed property in the manifest is set. If and only if a metadata file\nmatches any of the patterns in metadata_files will it be downloaded.")), ToolInput(tag="in_data_filter", input_type=Array(t=String(), optional=True), prefix="--data-filter", doc=InputDocumentation(doc="One or more shell patterns against which all data files in the bundle will be\nmatched case-sensitively. A file is considered a data file if the indexed property\nin the manifest is not set. The file will be downloaded only if a data file matches\nany of the patterns in data_files will it be downloaded.")), ToolInput(tag="in_no_metadata", input_type=Boolean(optional=True), prefix="--no-metadata", doc=InputDocumentation(doc="Exclude metadata files. Cannot be set when --metadata-filter is also set.")), ToolInput(tag="in_num_retries", input_type=Int(optional=True), prefix="--num-retries", doc=InputDocumentation(doc="The initial quota of download failures to accept before exiting due to failures.\nThe number of retries increase and decrease as file chucks succeed and fail.")), ToolInput(tag="in_min_delay_seconds", input_type=Int(optional=True), prefix="--min-delay-seconds", doc=InputDocumentation(doc="The minimum number of seconds to wait in between retries.\n"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Hca_Dss_Download_V0_1_0().translate("wdl", allow_empty_container=True)

