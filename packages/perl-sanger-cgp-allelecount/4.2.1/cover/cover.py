from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, Directory, File

Cover_V0_1_0 = CommandToolBuilder(tool="cover", base_command=["cover"], inputs=[ToolInput(tag="in_info", input_type=Boolean(optional=True), prefix="-info", doc=InputDocumentation(doc="- show documentation")), ToolInput(tag="in_version", input_type=Boolean(optional=True), prefix="-version", doc=InputDocumentation(doc="- show version")), ToolInput(tag="in_silent", input_type=Boolean(optional=True), prefix="-silent", doc=InputDocumentation(doc="- don't print informational messages (default off)")), ToolInput(tag="in_summary", input_type=Boolean(optional=True), prefix="-summary", doc=InputDocumentation(doc="- give summary report                (default on)")), ToolInput(tag="in_report", input_type=String(optional=True), prefix="-report", doc=InputDocumentation(doc="- report format                      (default html)")), ToolInput(tag="in_output_dir", input_type=Directory(optional=True), prefix="-outputdir", doc=InputDocumentation(doc="- directory for output               (default given db)")), ToolInput(tag="in_launch", input_type=Boolean(optional=True), prefix="-launch", doc=InputDocumentation(doc="- launch report in viewer (if avail) (default off)")), ToolInput(tag="in_select", input_type=File(optional=True), prefix="-select", doc=InputDocumentation(doc="- only report on the file            (default all)")), ToolInput(tag="in_ignore", input_type=File(optional=True), prefix="-ignore", doc=InputDocumentation(doc="- don't report on the file           (default none)")), ToolInput(tag="in_select_re", input_type=String(optional=True), prefix="-select_re", doc=InputDocumentation(doc="- append to REs of files to select   (default none)")), ToolInput(tag="in_ignore_re", input_type=String(optional=True), prefix="-ignore_re", doc=InputDocumentation(doc="- append to REs of files to ignore   (default none)")), ToolInput(tag="in_write", input_type=Boolean(optional=True), prefix="-write", doc=InputDocumentation(doc="[db]           - write the merged database          (default off)")), ToolInput(tag="in_delete", input_type=Boolean(optional=True), prefix="-delete", doc=InputDocumentation(doc="- drop database(s)                   (default off)")), ToolInput(tag="in_dump_db", input_type=Boolean(optional=True), prefix="-dump_db", doc=InputDocumentation(doc="- dump database(s) (for debugging)   (default off)")), ToolInput(tag="in_coverage", input_type=String(optional=True), prefix="-coverage", doc=InputDocumentation(doc="- report on criterion  (default all available)")), ToolInput(tag="in_test", input_type=Boolean(optional=True), prefix="-test", doc=InputDocumentation(doc="- drop database(s) and run make test (default off)")), ToolInput(tag="in_gcov", input_type=Boolean(optional=True), prefix="-gcov", doc=InputDocumentation(doc="- run gcov to cover XS code     (default on if using gcc)")), ToolInput(tag="in_make", input_type=String(optional=True), prefix="-make", doc=InputDocumentation(doc="- use the given 'make' program for 'make test'")), ToolInput(tag="in_prefer_lib", input_type=Boolean(optional=True), prefix="-prefer_lib", doc=InputDocumentation(doc="- prefer files in lib                (default off)")), ToolInput(tag="in_add_uncover_able_point", input_type=Boolean(optional=True), prefix="-add_uncoverable_point", doc=InputDocumentation(doc="string")), ToolInput(tag="in_delete_uncover_able_point", input_type=File(optional=True), prefix="-delete_uncoverable_point", doc=InputDocumentation(doc="file"))], outputs=[ToolOutput(tag="out_output_dir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output_dir", type_hint=File()), doc=OutputDocumentation(doc="- directory for output               (default given db)"))], container="quay.io/biocontainers/perl-sanger-cgp-allelecount:4.2.1--pl526h516909a_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Cover_V0_1_0().translate("wdl")

