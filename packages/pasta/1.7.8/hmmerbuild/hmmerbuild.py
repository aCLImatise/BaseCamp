from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Boolean, Float, Int

Hmmerbuild_V0_1_0 = CommandToolBuilder(tool="hmmerbuild", base_command=["hmmerbuild"], inputs=[ToolInput(tag="in__name_hmm", input_type=String(optional=True), prefix="-n", doc=InputDocumentation(doc=": name the HMM <s>")), ToolInput(tag="in_direct_summary_output", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc=": direct summary output to file <f>, not stdout")), ToolInput(tag="in_annotated_possibly_modified", input_type=File(optional=True), prefix="-O", doc=InputDocumentation(doc=": resave annotated, possibly modified MSA to file <f>")), ToolInput(tag="in_amino", input_type=Boolean(optional=True), prefix="--amino", doc=InputDocumentation(doc=": input alignment is protein sequence data")), ToolInput(tag="in_dna", input_type=Boolean(optional=True), prefix="--dna", doc=InputDocumentation(doc=": input alignment is DNA sequence data")), ToolInput(tag="in_rna", input_type=Boolean(optional=True), prefix="--rna", doc=InputDocumentation(doc=": input alignment is RNA sequence data")), ToolInput(tag="in_fast", input_type=Boolean(optional=True), prefix="--fast", doc=InputDocumentation(doc=": assign cols w/ >= symfrac residues as consensus  [default]")), ToolInput(tag="in_hand", input_type=Boolean(optional=True), prefix="--hand", doc=InputDocumentation(doc=": manual construction (requires reference annotation)")), ToolInput(tag="in_sym_frac", input_type=Float(optional=True), prefix="--symfrac", doc=InputDocumentation(doc=": sets sym fraction controlling --fast construction  [0.5]")), ToolInput(tag="in_frag_thresh", input_type=Float(optional=True), prefix="--fragthresh", doc=InputDocumentation(doc=": if L <= x*alen, tag sequence as a fragment  [0.5]")), ToolInput(tag="in_wpb", input_type=Boolean(optional=True), prefix="--wpb", doc=InputDocumentation(doc=": Henikoff position-based weights  [default]")), ToolInput(tag="in_wgs_c", input_type=Boolean(optional=True), prefix="--wgsc", doc=InputDocumentation(doc=": Gerstein/Sonnhammer/Chothia tree weights")), ToolInput(tag="in_w_blosum", input_type=Boolean(optional=True), prefix="--wblosum", doc=InputDocumentation(doc=": Henikoff simple filter weights")), ToolInput(tag="in_w_none", input_type=Boolean(optional=True), prefix="--wnone", doc=InputDocumentation(doc=": don't do any relative weighting; set all to 1")), ToolInput(tag="in_w_given", input_type=Boolean(optional=True), prefix="--wgiven", doc=InputDocumentation(doc=": use weights as given in MSA file")), ToolInput(tag="in_wid", input_type=Float(optional=True), prefix="--wid", doc=InputDocumentation(doc=": for --wblosum: set identity cutoff  [0.62]  (0<=x<=1)")), ToolInput(tag="in_e_ent", input_type=Boolean(optional=True), prefix="--eent", doc=InputDocumentation(doc=": adjust eff seq # to achieve relative entropy target  [default]")), ToolInput(tag="in_ec_lust", input_type=Boolean(optional=True), prefix="--eclust", doc=InputDocumentation(doc=": eff seq # is # of single linkage clusters")), ToolInput(tag="in_en_one", input_type=Boolean(optional=True), prefix="--enone", doc=InputDocumentation(doc=": no effective seq # weighting: just use nseq")), ToolInput(tag="in_e_set", input_type=String(optional=True), prefix="--eset", doc=InputDocumentation(doc=": set eff seq # for all models to <x>")), ToolInput(tag="in_ere", input_type=String(optional=True), prefix="--ere", doc=InputDocumentation(doc=": for --eent: set minimum rel entropy/position to <x>")), ToolInput(tag="in_e_sigma", input_type=Float(optional=True), prefix="--esigma", doc=InputDocumentation(doc=": for --eent: set sigma param to <x>  [45.0]")), ToolInput(tag="in_eid", input_type=Float(optional=True), prefix="--eid", doc=InputDocumentation(doc=": for --eclust: set fractional identity cutoff to <x>  [0.62]")), ToolInput(tag="in_p_none", input_type=Boolean(optional=True), prefix="--pnone", doc=InputDocumentation(doc=": don't use any prior; parameters are frequencies")), ToolInput(tag="in_pla_place", input_type=Boolean(optional=True), prefix="--plaplace", doc=InputDocumentation(doc=": use a Laplace +1 prior")), ToolInput(tag="in_single_mx", input_type=Boolean(optional=True), prefix="--singlemx", doc=InputDocumentation(doc=": use substitution score matrix for single-sequence inputs")), ToolInput(tag="in_popen", input_type=String(optional=True), prefix="--popen", doc=InputDocumentation(doc=": gap open probability (with --singlemx)")), ToolInput(tag="in_p_extend", input_type=String(optional=True), prefix="--pextend", doc=InputDocumentation(doc=": gap extend probability (with --singlemx)")), ToolInput(tag="in_mx", input_type=String(optional=True), prefix="--mx", doc=InputDocumentation(doc=": substitution score matrix (built-in matrices, with --singlemx)")), ToolInput(tag="in_mx_file", input_type=File(optional=True), prefix="--mxfile", doc=InputDocumentation(doc=": read substitution score matrix from file <f> (with --singlemx)")), ToolInput(tag="in_eml", input_type=Int(optional=True), prefix="--EmL", doc=InputDocumentation(doc=": length of sequences for MSV Gumbel mu fit  [200]  (n>0)")), ToolInput(tag="in_emn", input_type=Int(optional=True), prefix="--EmN", doc=InputDocumentation(doc=": number of sequences for MSV Gumbel mu fit  [200]  (n>0)")), ToolInput(tag="in_evl", input_type=Int(optional=True), prefix="--EvL", doc=InputDocumentation(doc=": length of sequences for Viterbi Gumbel mu fit  [200]  (n>0)")), ToolInput(tag="in_evn", input_type=Int(optional=True), prefix="--EvN", doc=InputDocumentation(doc=": number of sequences for Viterbi Gumbel mu fit  [200]  (n>0)")), ToolInput(tag="in_efl", input_type=Int(optional=True), prefix="--EfL", doc=InputDocumentation(doc=": length of sequences for Forward exp tail tau fit  [100]  (n>0)")), ToolInput(tag="in_efn", input_type=Int(optional=True), prefix="--EfN", doc=InputDocumentation(doc=": number of sequences for Forward exp tail tau fit  [200]  (n>0)")), ToolInput(tag="in_eft", input_type=Float(optional=True), prefix="--Eft", doc=InputDocumentation(doc=": tail mass for Forward exponential tail tau fit  [0.04]  (0<x<1)")), ToolInput(tag="in_cpu", input_type=Int(optional=True), prefix="--cpu", doc=InputDocumentation(doc=": number of parallel CPU workers for multithreads")), ToolInput(tag="in_stall", input_type=Boolean(optional=True), prefix="--stall", doc=InputDocumentation(doc=": arrest after start: for attaching debugger to process")), ToolInput(tag="in_in_format", input_type=String(optional=True), prefix="--informat", doc=InputDocumentation(doc=": assert input alifile is in format <s> (no autodetect)")), ToolInput(tag="in_seed", input_type=Int(optional=True), prefix="--seed", doc=InputDocumentation(doc=": set RNG seed to <n> (if 0: one-time arbitrary seed)  [42]")), ToolInput(tag="in_w_beta", input_type=Int(optional=True), prefix="--w_beta", doc=InputDocumentation(doc=": tail mass at which window length is determined")), ToolInput(tag="in_w_length", input_type=Int(optional=True), prefix="--w_length", doc=InputDocumentation(doc=": window length")), ToolInput(tag="in_max_insert_len", input_type=Int(optional=True), prefix="--maxinsertlen", doc=InputDocumentation(doc=": pretend all inserts are length <= <n>")), ToolInput(tag="in_options", input_type=Boolean(optional=True), prefix="-options", doc=InputDocumentation(doc="")), ToolInput(tag="in_hmm_file_out", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_msa_file", input_type=String(), position=1, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_direct_summary_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_direct_summary_output", type_hint=File()), doc=OutputDocumentation(doc=": direct summary output to file <f>, not stdout"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Hmmerbuild_V0_1_0().translate("wdl", allow_empty_container=True)

