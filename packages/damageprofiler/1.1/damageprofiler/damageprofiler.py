from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Directory, Int, String, Boolean

Damageprofiler_V0_1_0 = CommandToolBuilder(tool="damageprofiler", base_command=["damageprofiler"], inputs=[ToolInput(tag="in_required_sambamcram_file", input_type=File(optional=True), prefix="-i", doc=InputDocumentation(doc="REQUIRED. The input sam/bam/cram file.")), ToolInput(tag="in_required_output_folder", input_type=Directory(optional=True), prefix="-o", doc=InputDocumentation(doc="REQUIRED. The output folder.")), ToolInput(tag="in_reference_file_fasta", input_type=File(optional=True), prefix="-r", doc=InputDocumentation(doc="The reference file (fasta format).")), ToolInput(tag="in_damageplot_number_bases", input_type=Int(optional=True), prefix="-t", doc=InputDocumentation(doc="DamagePlot: Number of bases which are considered for plotting nucleotide misincorporations.\nDefault: 25")), ToolInput(tag="in_reference_sequence_name", input_type=String(optional=True), prefix="-s", doc=InputDocumentation(doc="Reference sequence name (Reference NAME flag of SAM record). For more details see")), ToolInput(tag="in_title", input_type=File(optional=True), prefix="-title", doc=InputDocumentation(doc="Title used for all plots. Default: input filename.")), ToolInput(tag="in_yaxis_dp_max", input_type=String(optional=True), prefix="-yaxis_dp_max", doc=InputDocumentation(doc="DamagePlot: Maximal y-axis value.")), ToolInput(tag="in_color_c_t", input_type=String(optional=True), prefix="-color_c_t", doc=InputDocumentation(doc="DamagePlot: Color (HEX code) for C to T misincoporation frequency.")), ToolInput(tag="in_color_g_a", input_type=String(optional=True), prefix="-color_g_a", doc=InputDocumentation(doc="DamagePlot: Color (HEX code) for G to A misincoporation frequency.")), ToolInput(tag="in_color_insertions", input_type=String(optional=True), prefix="-color_insertions", doc=InputDocumentation(doc="DamagePlot: Color (HEX code) for base insertions.")), ToolInput(tag="in_color_deletions", input_type=String(optional=True), prefix="-color_deletions", doc=InputDocumentation(doc="DamagePlot: Color (HEX code) for base deletions.")), ToolInput(tag="in_color_other", input_type=String(optional=True), prefix="-color_other", doc=InputDocumentation(doc="DamagePlot: Color (HEX code) for other bases different to reference.")), ToolInput(tag="in_only_merged", input_type=Boolean(optional=True), prefix="-only_merged", doc=InputDocumentation(doc="Use only mapped and merged (in case of paired-end sequencing) reads to calculate the damage\nplot instead of using all mapped reads. The SAM/BAM entry must start with 'M_', otherwise it\nwill be skipped. Default: false")), ToolInput(tag="in_ss_lib", input_type=Boolean(optional=True), prefix="-sslib", doc=InputDocumentation(doc="Single-stranded library protocol was used. Default: false")), ToolInput(tag="in_sf", input_type=File(optional=True), prefix="-sf", doc=InputDocumentation(doc="")), ToolInput(tag="in_v", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_required_output_folder", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_required_output_folder", type_hint=File()), doc=OutputDocumentation(doc="REQUIRED. The output folder."))], container="quay.io/biocontainers/damageprofiler:1.1--0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Damageprofiler_V0_1_0().translate("wdl")

