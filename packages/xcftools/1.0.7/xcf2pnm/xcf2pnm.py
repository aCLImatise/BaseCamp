from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, File, Int

Xcf2Pnm_V0_1_0 = CommandToolBuilder(tool="xcf2pnm", base_command=["xcf2pnm"], inputs=[ToolInput(tag="in_show_version_", input_type=Boolean(optional=True), prefix="-V", doc=InputDocumentation(doc="show version (--version)")), ToolInput(tag="in_show_progress_messages", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="show progress messages (--verbose)")), ToolInput(tag="in_input_bzip_compressed", input_type=Boolean(optional=True), prefix="-j", doc=InputDocumentation(doc="input is bzip2 compressed (--bzip)")), ToolInput(tag="in_input_gzip_compressed", input_type=Boolean(optional=True), prefix="-z", doc=InputDocumentation(doc="input is gzip compressed (--gzip)")), ToolInput(tag="in_use_decompress_input", input_type=String(optional=True), prefix="-Z", doc=InputDocumentation(doc="use 'command' to decompress input (--unpack)")), ToolInput(tag="in_name_output_file", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="name output file (--output)")), ToolInput(tag="in_write_transparency_map", input_type=File(optional=True), prefix="-a", doc=InputDocumentation(doc="write transparency map (--alpha)")), ToolInput(tag="in_select_background_color", input_type=String(optional=True), prefix="-b", doc=InputDocumentation(doc="select background color (--background)")), ToolInput(tag="in_force_alpha_channel", input_type=Boolean(optional=True), prefix="-A", doc=InputDocumentation(doc="force alpha channel in output (--force-alpha)")), ToolInput(tag="in_select_color_output", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="select color output (--color)")), ToolInput(tag="in_select_grayscale_output", input_type=Boolean(optional=True), prefix="-g", doc=InputDocumentation(doc="select grayscale output (--gray)")), ToolInput(tag="in_select_monochrome_output", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="select monochrome output (--mono)")), ToolInput(tag="in_select_cgm_", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="select -c/-g/-m by image contents (--pnm)")), ToolInput(tag="in_treat_indexed_images", input_type=Boolean(optional=True), prefix="-T", doc=InputDocumentation(doc="treat indexed images as RGB for flattening (--truecolor)")), ToolInput(tag="in_disallow_partial_transparency", input_type=Boolean(optional=True), prefix="-G", doc=InputDocumentation(doc="disallow partial transparency (--for-gif)")), ToolInput(tag="in_dissolve_partial_transparency", input_type=Boolean(optional=True), prefix="-D", doc=InputDocumentation(doc="dissolve partial transparency (--dissolve)")), ToolInput(tag="in_flatten_then_", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc="flatten to memory; then analyse (--full-image)")), ToolInput(tag="in_crop_image_converting", input_type=Int(optional=True), prefix="-S", doc=InputDocumentation(doc="crop image while converting (--size)")), ToolInput(tag="in_y_translate_converted", input_type=String(optional=True), prefix="-O", doc=InputDocumentation(doc=",y      translate converted part of image (--offset)")), ToolInput(tag="in_autocrop__autocrop", input_type=Boolean(optional=True), prefix="-C", doc=InputDocumentation(doc="autocrop to visible layer boundaries (--autocrop)")), ToolInput(tag="in_mode", input_type=String(optional=True), prefix="--mode", doc=InputDocumentation(doc="set layer mode")), ToolInput(tag="in_percent", input_type=String(optional=True), prefix="--percent", doc=InputDocumentation(doc="set opacity in percent")), ToolInput(tag="in_opacity", input_type=Int(optional=True), prefix="--opacity", doc=InputDocumentation(doc="set opacity in 1/255 units")), ToolInput(tag="in_mask", input_type=Boolean(optional=True), prefix="--mask", doc=InputDocumentation(doc="enable layer mask")), ToolInput(tag="in_no_mask", input_type=Boolean(optional=True), prefix="--nomask", doc=InputDocumentation(doc="disable layer mask")), ToolInput(tag="in_use_utf_", input_type=Boolean(optional=True), prefix="-u", doc=InputDocumentation(doc="use UTF-8 for layer names (--utf8)")), ToolInput(tag="in_filename_dot_xcf", input_type=File(), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_name_output_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_name_output_file", type_hint=File()), doc=OutputDocumentation(doc="name output file (--output)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Xcf2Pnm_V0_1_0().translate("wdl", allow_empty_container=True)

