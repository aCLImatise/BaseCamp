from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Fingerprintscan_V0_1_0 = CommandToolBuilder(tool="fingerPRINTScan", base_command=["fingerPRINTScan"], inputs=[ToolInput(tag="in_calculate_consensus_sequences", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="Calculate consensus sequences for the Alignment view (Table 4) [EXPERIMENTAL]")), ToolInput(tag="in_set_database_format", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="Set database format to .profile format (Default)")), ToolInput(tag="in_output_profile_format", input_type=Boolean(optional=True), prefix="-C", doc=InputDocumentation(doc="Output the .profile format of the database\nThe syntax of this command is different to all other commands.\nbeing:  fingerPRINTScan -C prints.dat > prints.pval\nor:     fingerPRINTScan -Cb blocks.dat > blocks.pval")), ToolInput(tag="in_percentage_allowed_deviation", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc="# Percentage allowed distance deviation between motifs.\n(where # is a number in the range 0 .. 100)\n(0 is a special case which turns off distance checking)")), ToolInput(tag="in_evalue_thresholdwhere_floating", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc="# E-value threshold.\n(where # is a floating point number)")), ToolInput(tag="in_evalue_calculation_parameterswhere", input_type=Boolean(optional=True), prefix="-E", doc=InputDocumentation(doc="#1 #2  E-value calculation parameters.\n(where #1 is the number of sequences in the primary database (default 80000))\n(where #2 is the number of resides   in the primary database (default 2.96103e+07))\n( the default values are based on SWISS-PROT 38)")), ToolInput(tag="in_explicitly_in_fasta", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc="Explicitly state the format of the provided sequence is in the fasta format\n(Currently default)")), ToolInput(tag="in_explicitly_state_the", input_type=Boolean(optional=True), prefix="-F", doc=InputDocumentation(doc="Explicitly state the format of the provided sequence is the PRINTS in house format\n(Now defunct)")), ToolInput(tag="in_set_options_produce", input_type=Boolean(optional=True), prefix="-G", doc=InputDocumentation(doc="Set options to produce output compatable with the GRAPHScan program")), ToolInput(tag="in_set_scoring_matrix", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="Set the scoring matrix (62 (default), 45 or 80)\n(This only makes any difference when creating the .pval database)")), ToolInput(tag="in_use_epd_method", input_type=Boolean(optional=True), prefix="-M", doc=InputDocumentation(doc="Use E=p.D calculation method")), ToolInput(tag="in_use_conventional_format", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="Use the conventional database format (Slow when computing pvals)")), ToolInput(tag="in_where_decimal_number", input_type=Boolean(optional=True), prefix="-o", doc=InputDocumentation(doc="#\n(where # = a decimal number corresponding to the type of output\nrequired, this number corresponds to the number of bits turned on\nin the following matrix)\nTableNo  4 3 2 1\nBitValue 1 2 4 8\nEg.      0 0 1 1 = 4+8 = 12, which will switch on\ntables 1 and 2 in the output\nTable 1 = shortest description of the results, only the\ntop scoring hits\nTable 2 = medium description of the results, the ten\ntop scoring hits detailed by fingerprint\nTable 3 = most detailed description of the results,\nthe ten top scoring hits, detailed by\nindividual motif\nTable 4 = EXPERIMENTAL alignment of the sequence and the\nconsensus sequence of the motif.\n(-a flag needs to be on too)")), ToolInput(tag="in_restrict_results_tables", input_type=Boolean(optional=True), prefix="-R", doc=InputDocumentation(doc="Restrict all results in all tables to those which score below the Evalue")), ToolInput(tag="in_specify_profile_threshold", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="# Specify the Profile score threshold (where # is a positive integer (default= 15))")), ToolInput(tag="in_output_gnu_licence", input_type=Boolean(optional=True), prefix="-w", doc=InputDocumentation(doc="Output the GNU licence")), ToolInput(tag="in_specify_pvalue_score", input_type=Boolean(optional=True), prefix="-x", doc=InputDocumentation(doc="# Specify the P-value score threshold\n(where # is a positive integer representing the negative power to which 10 is raised)")), ToolInput(tag="in_threshold_dot", input_type=String(), position=0, doc=InputDocumentation(doc="-s   select the random ShuffleFlag option (which ShuffleFlags all sequences)"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Fingerprintscan_V0_1_0().translate("wdl", allow_empty_container=True)

