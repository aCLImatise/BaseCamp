from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Directory, Boolean, Float

Haystack_Tf_Activity_Plane_V0_1_0 = CommandToolBuilder(tool="haystack_tf_activity_plane", base_command=["haystack_tf_activity_plane"], inputs=[ToolInput(tag="in_tfs", input_type=String(optional=True), prefix="-TFs", doc=InputDocumentation(doc="on Gene Expression-")), ToolInput(tag="in_motif_mapping_filename", input_type=File(optional=True), prefix="--motif_mapping_filename", doc=InputDocumentation(doc="Custom motif to gene mapping file (the default is for\nJASPAR CORE 2016 database)")), ToolInput(tag="in_output_directory", input_type=Directory(optional=True), prefix="--output_directory", doc=InputDocumentation(doc="Output directory (default: current directory)")), ToolInput(tag="in_name", input_type=File(optional=True), prefix="--name", doc=InputDocumentation(doc="Define a custom output filename for the report")), ToolInput(tag="in_plot_all", input_type=Boolean(optional=True), prefix="--plot_all", doc=InputDocumentation(doc="Disable the filter on the TF activity and correlation\n(default z-score TF>0 and rho>0.3)")), ToolInput(tag="in_rho_cut_off", input_type=Float(optional=True), prefix="--rho_cutoff", doc=InputDocumentation(doc="The cutoff absolute correlation value (0.0 to 1) for\nwhich activity plots are generated (default: 0.3)")), ToolInput(tag="in_tf_value_cut_to_ff", input_type=Float(optional=True), prefix="--tf_value_cuttoff", doc=InputDocumentation(doc="The cutoff z-score tf_value for which activity plots\nare generated (default: 0.0)")), ToolInput(tag="in_var_7", input_type=String(), position=0, doc=InputDocumentation(doc="gene_expression_samples_filename")), ToolInput(tag="in_target_cell_type", input_type=String(), position=1, doc=InputDocumentation(doc="HAYSTACK Parameters")), ToolInput(tag="in_path_folder_created", input_type=String(), position=0, doc=InputDocumentation(doc="A path to a folder created by the haystack_motifs")), ToolInput(tag="in_utility", input_type=String(), position=1, doc=InputDocumentation(doc="gene_expression_samples_filename")), ToolInput(tag="in_locations", input_type=String(), position=0, doc=InputDocumentation(doc="target_cell_type      The sample name to use as a target for the analysis"))], outputs=[ToolOutput(tag="out_output_directory", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output_directory", type_hint=File()), doc=OutputDocumentation(doc="Output directory (default: current directory)")), ToolOutput(tag="out_name", output_type=File(optional=True), selector=InputSelector(input_to_select="in_name", type_hint=File()), doc=OutputDocumentation(doc="Define a custom output filename for the report"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Haystack_Tf_Activity_Plane_V0_1_0().translate("wdl", allow_empty_container=True)

