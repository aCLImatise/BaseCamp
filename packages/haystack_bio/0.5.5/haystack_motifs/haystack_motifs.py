from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Float, Boolean, Int, Directory

Haystack_Motifs_V0_1_0 = CommandToolBuilder(tool="haystack_motifs", base_command=["haystack_motifs"], inputs=[ToolInput(tag="in_motif", input_type=String(optional=True), prefix="-MOTIF", doc=InputDocumentation(doc="ANALYSIS- [Luca Pinello - lpinello@jimmy.harvard.edu]")), ToolInput(tag="in_bed_bg_filename", input_type=File(optional=True), prefix="--bed_bg_filename", doc=InputDocumentation(doc="A bed file containing the backround coordinates on the\ngenome of reference (default random sampled regions\nfrom the genome)")), ToolInput(tag="in_meme_motifs_filename", input_type=File(optional=True), prefix="--meme_motifs_filename", doc=InputDocumentation(doc="Motifs database in MEME format (default JASPAR CORE\n2016)")), ToolInput(tag="in_nucleotide_bg_filename", input_type=File(optional=True), prefix="--nucleotide_bg_filename", doc=InputDocumentation(doc="Nucleotide probability for the background in MEME\nformat (default precomupted on the Genome)")), ToolInput(tag="in_p_value", input_type=Float(optional=True), prefix="--p_value", doc=InputDocumentation(doc="FIMO p-value for calling a motif hit significant\n(deafult: 1e-4)")), ToolInput(tag="in_no_c_g_correction", input_type=Boolean(optional=True), prefix="--no_c_g_correction", doc=InputDocumentation(doc="Disable the matching of the C+G density of the")), ToolInput(tag="in_mask_repetitive", input_type=Boolean(optional=True), prefix="--mask_repetitive", doc=InputDocumentation(doc="Mask repetitive sequences")), ToolInput(tag="in_n_target_coordinates", input_type=Int(optional=True), prefix="--n_target_coordinates", doc=InputDocumentation(doc="Number of target coordinates to use (default: all)")), ToolInput(tag="in_use_entire_bg", input_type=Boolean(optional=True), prefix="--use_entire_bg", doc=InputDocumentation(doc="Use the entire background file (use only when the cg\ncorrection is disabled)")), ToolInput(tag="in_bed_score_column", input_type=Int(optional=True), prefix="--bed_score_column", doc=InputDocumentation(doc="Column in the bedfile that represents the score\n(default: 5)")), ToolInput(tag="in_bg_target_ratio", input_type=Int(optional=True), prefix="--bg_target_ratio", doc=InputDocumentation(doc="Background size/Target size ratio (default: 1.0)")), ToolInput(tag="in_bootstrap", input_type=Boolean(optional=True), prefix="--bootstrap", doc=InputDocumentation(doc="Enable the bootstrap if the target set or the\nbackground set are too small, choices: True, False\n(default: False)")), ToolInput(tag="in_temp_directory", input_type=Directory(optional=True), prefix="--temp_directory", doc=InputDocumentation(doc="Directory to store temporary files (default: /tmp)")), ToolInput(tag="in_no_random_sampling_target", input_type=Boolean(optional=True), prefix="--no_random_sampling_target", doc=InputDocumentation(doc="Select the best --n_target_coordinates using the score\ncolumn from the target file instead of randomly select\nthem")), ToolInput(tag="in_name", input_type=File(optional=True), prefix="--name", doc=InputDocumentation(doc="Define a custom output filename for the report")), ToolInput(tag="in_internal_window_length", input_type=Int(optional=True), prefix="--internal_window_length", doc=InputDocumentation(doc="Window length in bp for the enrichment (default:\naverage lenght of the target sequences)")), ToolInput(tag="in_window_length", input_type=Int(optional=True), prefix="--window_length", doc=InputDocumentation(doc="Window length in bp for the profiler\n(default:internal_window_length*5)")), ToolInput(tag="in_min_central_enrichment", input_type=Int(optional=True), prefix="--min_central_enrichment", doc=InputDocumentation(doc="Minimum central enrichment to report a motif\n(default:>1.0)")), ToolInput(tag="in_disable_ratio", input_type=Boolean(optional=True), prefix="--disable_ratio", doc=InputDocumentation(doc="Disable target/bg ratio filter")), ToolInput(tag="in_dump", input_type=Boolean(optional=True), prefix="--dump", doc=InputDocumentation(doc="Dump all the intermediate data, choices: True, False\n(default: False)")), ToolInput(tag="in_output_directory", input_type=Directory(optional=True), prefix="--output_directory", doc=InputDocumentation(doc="Output directory (default: current directory)")), ToolInput(tag="in_smooth_size", input_type=Int(optional=True), prefix="--smooth_size", doc=InputDocumentation(doc="Size in bp for the smoothing window (default:\ninternal_window_length/4)")), ToolInput(tag="in_gene_annotations_filename", input_type=File(optional=True), prefix="--gene_annotations_filename", doc=InputDocumentation(doc="Optional gene annotations file from the UCSC Genome\nBrowser in bed format to map each region to its closes\ngene")), ToolInput(tag="in_gene_ids_to_names_filename", input_type=File(optional=True), prefix="--gene_ids_to_names_filename", doc=InputDocumentation(doc="Optional mapping file between gene ids to gene names\n(relevant only if --gene_annotation_filename is used)")), ToolInput(tag="in_n_processes", input_type=Int(optional=True), prefix="--n_processes", doc=InputDocumentation(doc="Specify the number of processes to use. The default is\n#cores available.")), ToolInput(tag="in_bed_target_filename", input_type=String(), position=0, doc=InputDocumentation(doc="A bed file containing the target coordinates on the\ngenome of reference")), ToolInput(tag="in_genome_name", input_type=String(), position=1, doc=InputDocumentation(doc="Genome assembly to use from UCSC (for example hg19,\nmm9, etc.)")), ToolInput(tag="in_background", input_type=String(), position=0, doc=InputDocumentation(doc="--c_g_bins C_G_BINS   Number of bins for the C+G density correction"))], outputs=[ToolOutput(tag="out_name", output_type=File(optional=True), selector=InputSelector(input_to_select="in_name", type_hint=File()), doc=OutputDocumentation(doc="Define a custom output filename for the report")), ToolOutput(tag="out_output_directory", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output_directory", type_hint=File()), doc=OutputDocumentation(doc="Output directory (default: current directory)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Haystack_Motifs_V0_1_0().translate("wdl", allow_empty_container=True)

