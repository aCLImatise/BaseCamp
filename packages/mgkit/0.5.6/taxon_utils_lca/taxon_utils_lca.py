from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean, Float, String, Int

Taxon_Utils_Lca_V0_1_0 = CommandToolBuilder(tool="taxon_utils_lca", base_command=["taxon-utils", "lca"], inputs=[ToolInput(tag="in_taxonomy", input_type=File(optional=True), prefix="--taxonomy", doc=InputDocumentation(doc="Taxonomy file  [required]")), ToolInput(tag="in_no_lca", input_type=File(optional=True), prefix="--no-lca", doc=InputDocumentation(doc="File to which write records with no LCA")), ToolInput(tag="in_only_ranked", input_type=Boolean(optional=True), prefix="--only-ranked", doc=InputDocumentation(doc="If set, only taxa that have a rank will be\nused in the lineageself. This is not advised\nfor lineages such as Viruses, where the top\nlevels have no rank")), ToolInput(tag="in_bit_score", input_type=Float(optional=True), prefix="--bitscore", doc=InputDocumentation(doc="Minimum bitscore accepted  [default: 0]")), ToolInput(tag="in_rename", input_type=Boolean(optional=True), prefix="--rename", doc=InputDocumentation(doc="Emulates BLAST behaviour for headers (keep\nleft of first space)")), ToolInput(tag="in_sorted", input_type=Boolean(optional=True), prefix="--sorted", doc=InputDocumentation(doc="If the GFF file is sorted (all of a sequence\nannotations are contiguos) can use less\nmemory, `sort -s -k 1,1` can be used")), ToolInput(tag="in_feat_type", input_type=String(optional=True), prefix="--feat-type", doc=InputDocumentation(doc="Feature type used if the output is a GFF\n(default is *LCA*)  [default: LCA]")), ToolInput(tag="in_reference", input_type=File(optional=True), prefix="--reference", doc=InputDocumentation(doc="Required reference file for the GFF, if\nkrona is the format, contig lengths are\nadded")), ToolInput(tag="in_simple_table", input_type=Boolean(optional=True), prefix="--simple-table", doc=InputDocumentation(doc="Uses a 2 column table format (seq_id\ntaxon_id) TAB separated")), ToolInput(tag="in_krona_total", input_type=Int(optional=True), prefix="--krona-total", doc=InputDocumentation(doc="Total number of raw sequences (used to\noutput correct percentages in Krona")), ToolInput(tag="in_out_format", input_type=File(optional=True), prefix="--out-format", doc=InputDocumentation(doc="[krona|json|tab|gff]\nFormat of output file  [default: tab]")), ToolInput(tag="in_progress", input_type=Boolean(optional=True), prefix="--progress", doc=InputDocumentation(doc="Shows Progress Bar")), ToolInput(tag="in_gff_file", input_type=String(optional=True), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_output_file", input_type=String(optional=True), position=1, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_out_format", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_format", type_hint=File()), doc=OutputDocumentation(doc="[krona|json|tab|gff]\nFormat of output file  [default: tab]"))], container="quay.io/biocontainers/mgkit:0.5.6--py37hf01694f_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Taxon_Utils_Lca_V0_1_0().translate("wdl")

