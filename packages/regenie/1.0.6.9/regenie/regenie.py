from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, String, File, Float

Regenie_V0_1_0 = CommandToolBuilder(tool="regenie", base_command=["regenie"], inputs=[ToolInput(tag="in_helpfull", input_type=Boolean(optional=True), prefix="--helpFull", doc=InputDocumentation(doc="print list of all available options")), ToolInput(tag="in_step", input_type=Int(optional=True), prefix="--step", doc=InputDocumentation(doc="specify if fitting null model (=1) or\nassociation testing (=2)")), ToolInput(tag="in_bed", input_type=String(optional=True), prefix="--bed", doc=InputDocumentation(doc="prefix to PLINK .bed/.bim/.fam files")), ToolInput(tag="in_pgen", input_type=Int(optional=True), prefix="--pgen", doc=InputDocumentation(doc="prefix to PLINK2 .pgen/.pvar/.psam files")), ToolInput(tag="in_b_gen", input_type=File(optional=True), prefix="--bgen", doc=InputDocumentation(doc="BGEN file")), ToolInput(tag="in_sample", input_type=File(optional=True), prefix="--sample", doc=InputDocumentation(doc="sample file corresponding to BGEN file")), ToolInput(tag="in_ref_first", input_type=Boolean(optional=True), prefix="--ref-first", doc=InputDocumentation(doc="use the first allele as the reference for\nBGEN or PLINK bed/bim/fam input format [default\nassumes reference is last]")), ToolInput(tag="in_keep", input_type=File(optional=True), prefix="--keep", doc=InputDocumentation(doc="file listing samples to retain in the\nanalysis (no header; starts with FID IID)")), ToolInput(tag="in_remove", input_type=File(optional=True), prefix="--remove", doc=InputDocumentation(doc="file listing samples to remove from the\nanalysis (no header; starts with FID IID)")), ToolInput(tag="in_extract", input_type=File(optional=True), prefix="--extract", doc=InputDocumentation(doc="file with IDs of variants to retain in the")), ToolInput(tag="in_pheno_col", input_type=String(optional=True), prefix="--phenoCol", doc=InputDocumentation(doc="phenotype name in header (use for each\nphenotype to keep)")), ToolInput(tag="in_pheno_col_list", input_type=String(optional=True), prefix="--phenoColList", doc=InputDocumentation(doc=",..,STRING\ncomma separated list of phenotype names to\nkeep")), ToolInput(tag="in_co_var_file", input_type=File(optional=True), prefix="--covarFile", doc=InputDocumentation(doc="covariate file (header required starting with\nFID IID)")), ToolInput(tag="in_co_var_col", input_type=String(optional=True), prefix="--covarCol", doc=InputDocumentation(doc="covariate name in header (use for each\ncovariate to keep)")), ToolInput(tag="in_co_var_col_list", input_type=String(optional=True), prefix="--covarColList", doc=InputDocumentation(doc=",..,STRING\ncomma separated list of covariate names to\nkeep")), ToolInput(tag="in_bt", input_type=Boolean(optional=True), prefix="--bt", doc=InputDocumentation(doc="analyze phenotypes as binary")), ToolInput(tag="in_cc_one_two", input_type=Boolean(optional=True), prefix="--cc12", doc=InputDocumentation(doc="use control=1,case=2,missing=NA encoding for\nbinary traits")), ToolInput(tag="in_b_size", input_type=Int(optional=True), prefix="--bsize", doc=InputDocumentation(doc="size of genotype blocks")), ToolInput(tag="in_cv", input_type=Int(optional=True), prefix="--cv", doc=InputDocumentation(doc="(=5)              number of cross validation (CV) folds")), ToolInput(tag="in_loo_cv", input_type=Boolean(optional=True), prefix="--loocv", doc=InputDocumentation(doc="use leave-one out cross validation (LOOCV)")), ToolInput(tag="in_l_zero", input_type=Int(optional=True), prefix="--l0", doc=InputDocumentation(doc="(=5)              number of ridge parameters to use when\nfitting models within blocks [evenly spaced in\n(0,1)]")), ToolInput(tag="in_lone", input_type=Int(optional=True), prefix="--l1", doc=InputDocumentation(doc="(=5)              number of ridge parameters to use when\nfitting model across blocks [evenly spaced in (0,1)]")), ToolInput(tag="in_lowmem", input_type=Boolean(optional=True), prefix="--lowmem", doc=InputDocumentation(doc="reduce memory usage by writing level 0\npredictions to temporary files")), ToolInput(tag="in_lowmem_prefix", input_type=Int(optional=True), prefix="--lowmem-prefix", doc=InputDocumentation(doc="prefix where to write the temporary files in\nstep 1 (default is to use prefix from --out)")), ToolInput(tag="in_strict", input_type=Boolean(optional=True), prefix="--strict", doc=InputDocumentation(doc="remove all samples with missingness at any of\nthe traits")), ToolInput(tag="in_print_prs", input_type=Boolean(optional=True), prefix="--print-prs", doc=InputDocumentation(doc="also output polygenic predictions without\nusing LOCO (=whole genome PRS)")), ToolInput(tag="in_out", input_type=String(optional=True), prefix="--out", doc=InputDocumentation(doc="prefix for output files")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="number of threads")), ToolInput(tag="in_pred", input_type=File(optional=True), prefix="--pred", doc=InputDocumentation(doc="file containing the list of predictions files\nfrom step 1")), ToolInput(tag="in_ignore_pred", input_type=Boolean(optional=True), prefix="--ignore-pred", doc=InputDocumentation(doc="skip reading predictions from step 1\n(equivalent to linear/logistic regression with only\ncovariates)")), ToolInput(tag="in_use_prs", input_type=Boolean(optional=True), prefix="--use-prs", doc=InputDocumentation(doc="when using whole genome PRS step 1 output in\n'--pred'")), ToolInput(tag="in_force_impute", input_type=Boolean(optional=True), prefix="--force-impute", doc=InputDocumentation(doc="keep and impute missing observations when in\nstep 2 (default is to drop missing for each\ntrait)")), ToolInput(tag="in_write_samples", input_type=Boolean(optional=True), prefix="--write-samples", doc=InputDocumentation(doc="write IDs of samples included for each trait\n(only in step 2)")), ToolInput(tag="in_min_mac", input_type=Int(optional=True), prefix="--minMAC", doc=InputDocumentation(doc="(=5)          minimum minor allele count (MAC) for tested")), ToolInput(tag="in_split", input_type=Boolean(optional=True), prefix="--split", doc=InputDocumentation(doc="split asssociation results into separate\nfiles for each trait")), ToolInput(tag="in_firth", input_type=Boolean(optional=True), prefix="--firth", doc=InputDocumentation(doc="use Firth correction for p-values less than")), ToolInput(tag="in_spa", input_type=Boolean(optional=True), prefix="--spa", doc=InputDocumentation(doc="use Saddlepoint approximation (SPA) for\np-values less than threshold")), ToolInput(tag="in_p_thresh", input_type=Float(optional=True), prefix="--pThresh", doc=InputDocumentation(doc="(=0.05)    P-value threshold below which to apply\nFirth/SPA correction")), ToolInput(tag="in_chr", input_type=Int(optional=True), prefix="--chr", doc=InputDocumentation(doc="specify chromosome to test in step 2 (use for\neach chromosome)")), ToolInput(tag="in_chr_list", input_type=String(optional=True), prefix="--chrList", doc=InputDocumentation(doc=",..,STRING\nComma separated list of chromosomes to test\nin step 2")), ToolInput(tag="in_range", input_type=Int(optional=True), prefix="--range", doc=InputDocumentation(doc=":MINPOS-MAXPOS\nto specify a physical position window for\nvariants to test in step 2")), ToolInput(tag="in_test", input_type=String(optional=True), prefix="--test", doc=InputDocumentation(doc="'dominant' or 'recessive' (default is\nadditive test)")), ToolInput(tag="in_gz", input_type=Boolean(optional=True), prefix="--gz", doc=InputDocumentation(doc="compress output files (gzip format)")), ToolInput(tag="in_p", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="")), ToolInput(tag="in_exclude", input_type=File(optional=True), prefix="--exclude", doc=InputDocumentation(doc="")), ToolInput(tag="in_variants", input_type=String(), position=0, doc=InputDocumentation(doc="--minINFO DOUBLE(=0)      minimum imputation info score (Impute/Mach")), ToolInput(tag="in_threshold", input_type=String(), position=0, doc=InputDocumentation(doc="--approx                  use approximation to Firth correction for"))], outputs=[], container="quay.io/biocontainers/regenie:1.0.6.9--h485b6fc_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Regenie_V0_1_0().translate("wdl")

