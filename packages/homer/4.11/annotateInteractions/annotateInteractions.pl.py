from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Int, Directory, String

Annotateinteractions_Pl_V0_1_0 = CommandToolBuilder(tool="annotateInteractions.pl", base_command=["annotateInteractions.pl"], inputs=[ToolInput(tag="in_res", input_type=Boolean(optional=True), prefix="-res", doc=InputDocumentation(doc="<#> (Resolution of analysis, default: auto detect)")), ToolInput(tag="in_hub_count", input_type=Boolean(optional=True), prefix="-hubCount", doc=InputDocumentation(doc="<#> (Minimum number of interactions to define a hub, default: 5)")), ToolInput(tag="in_skip_ann", input_type=Boolean(optional=True), prefix="-skipann", doc=InputDocumentation(doc="(skip all endpoint annotations)")), ToolInput(tag="in_no_ann", input_type=Boolean(optional=True), prefix="-noann", doc=InputDocumentation(doc="(skip detailed annotation of endpoints)")), ToolInput(tag="in_washu", input_type=Boolean(optional=True), prefix="-washu", doc=InputDocumentation(doc="(create Wash U Epigenome Browser output files: outDirName.bed.gz and tbi)")), ToolInput(tag="in_cpu", input_type=Boolean(optional=True), prefix="-cpu", doc=InputDocumentation(doc="# (number of cores to use)")), ToolInput(tag="in_mind_ist", input_type=Boolean(optional=True), prefix="-minDist", doc=InputDocumentation(doc="<#> (filter out interactions spaced less than # bp - set high for only interchr)")), ToolInput(tag="in_max_dist", input_type=Boolean(optional=True), prefix="-maxDist", doc=InputDocumentation(doc="<#> (filter out interactions spaced more than # bp, will remove interchr)")), ToolInput(tag="in_p_value", input_type=Boolean(optional=True), prefix="-pvalue", doc=InputDocumentation(doc="<#> (filter out interactions with p-value greater than #)")), ToolInput(tag="in_dp_value", input_type=Boolean(optional=True), prefix="-dpvalue", doc=InputDocumentation(doc="<#> (filter out interactions with p-value (vs bg) greater than #)")), ToolInput(tag="in_zscore", input_type=Boolean(optional=True), prefix="-zscore", doc=InputDocumentation(doc="<#> (filter out interactions with zscore less than #)")), ToolInput(tag="in_dz_score", input_type=Boolean(optional=True), prefix="-dzscore", doc=InputDocumentation(doc="<#> (filter out interactions with zscore (vs bg) less than #)")), ToolInput(tag="in_filter", input_type=File(optional=True), prefix="-filter", doc=InputDocumentation(doc="(only look at interactions with endpoints in peakfile)")), ToolInput(tag="in_filter_two", input_type=Int(optional=True), prefix="-filter2", doc=InputDocumentation(doc="(only look at interactions connecting -filter and -filter2 peak files)")), ToolInput(tag="in_ctcf", input_type=File(optional=True), prefix="-ctcf", doc=InputDocumentation(doc="<CTCF motif> (calculated directionality stats)")), ToolInput(tag="in_check_overlap_peak", input_type=Int(optional=True), prefix="-p", doc=InputDocumentation(doc="[peak file 2] ... (Check overlap with peak files)")), ToolInput(tag="in_d", input_type=Directory(optional=True), prefix="-d", doc=InputDocumentation(doc="[2nd Hi-C TagDirectory] ...")), ToolInput(tag="in_circo_s", input_type=Boolean(optional=True), prefix="-circos", doc=InputDocumentation(doc="(Convert interactions to circos interactions format - stdout)")), ToolInput(tag="in_compare_st_file", input_type=File(optional=True), prefix="-i", doc=InputDocumentation(doc="[interaction file3] ... (Compare 1st file interactions to these)")), ToolInput(tag="in_connect", input_type=Int(optional=True), prefix="-connect", doc=InputDocumentation(doc="<peakFile2> (returns association table between sets of peaks)")), ToolInput(tag="in_pout", input_type=Boolean(optional=True), prefix="-pout", doc=InputDocumentation(doc="(Convert interactions to a non-redundant peak file, sent to stdout)")), ToolInput(tag="in_g_size", input_type=Boolean(optional=True), prefix="-gsize", doc=InputDocumentation(doc="<#> (size of genome, default: 2e9)")), ToolInput(tag="in_pos", input_type=String(optional=True), prefix="-pos", doc=InputDocumentation(doc=":XXX-YYY (specific, continuous region)")), ToolInput(tag="in_bgp", input_type=File(optional=True), prefix="-bgp", doc=InputDocumentation(doc="(peak file)")), ToolInput(tag="in_interaction_file", input_type=File(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_genome_version", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_output_directory", input_type=Directory(), position=2, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output_directory", output_type=Directory(), selector=InputSelector(input_to_select="in_output_directory", type_hint=File()), doc=OutputDocumentation(doc=""))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Annotateinteractions_Pl_V0_1_0().translate("wdl", allow_empty_container=True)

