from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, String, Directory

Pash_3_0Lx_V0_1_0 = CommandToolBuilder(tool="pash_3.0lx", base_command=["pash-3.0lx"], inputs=[ToolInput(tag="in_vertical_input", input_type=File(optional=True), prefix="--verticalInput", doc=InputDocumentation(doc="Vertical sequence as a fasta input file with full path; if file ends\nin '.fof', it is assumed the named file contains a list of Fasta files")), ToolInput(tag="in_horizontal_input", input_type=File(optional=True), prefix="--horizontalInput", doc=InputDocumentation(doc="Horizontal sequence: as a fasta input file with full path; if file ends\nin '.fof', it is assumed the named file contains a list of Fasta files")), ToolInput(tag="in_pattern_weight", input_type=Int(optional=True), prefix="--patternWeight", doc=InputDocumentation(doc="Number of sampled positions in the sampling pattern")), ToolInput(tag="in_pattern_length", input_type=Int(optional=True), prefix="--patternLength", doc=InputDocumentation(doc="length of sampling pattern, including unsampled positions")), ToolInput(tag="in_sampling_pattern", input_type=Int(optional=True), prefix="--samplingPattern", doc=InputDocumentation(doc="pattern (e.g. 11011 would sample the two positions, skip\none position, then sample the next two")), ToolInput(tag="in_vertical_word_offset", input_type=String(optional=True), prefix="--verticalWordOffset", doc=InputDocumentation(doc="request gzip-ed output (default is text)")), ToolInput(tag="in_scratch", input_type=Directory(optional=True), prefix="--scratch", doc=InputDocumentation(doc="directory location")), ToolInput(tag="in_index_memory", input_type=Int(optional=True), prefix="--indexMemory", doc=InputDocumentation(doc="of the vertical sequence hash in MB(default 1024)")), ToolInput(tag="in_ignore_list", input_type=File(optional=True), prefix="--ignoreList", doc=InputDocumentation(doc="the kmers present in the ignore list file")), ToolInput(tag="in_max_mappings", input_type=Int(optional=True), prefix="--maxMappings", doc=InputDocumentation(doc="number of mappings per read")), ToolInput(tag="in_top_percent", input_type=Int(optional=True), prefix="--topPercent", doc=InputDocumentation(doc="percent from the best alignment score to be reported for each read; use numbers in the interval 0-100; default 1")), ToolInput(tag="in_bisulfite_seq", input_type=String(optional=True), prefix="--bisulfiteSeq", doc=InputDocumentation(doc="mapping of bisulfite sequencing reads")), ToolInput(tag="in_high_sensitivity", input_type=String(optional=True), prefix="--highSensitivity", doc=InputDocumentation(doc="pash in high-sensitivity mode")), ToolInput(tag="in_medium_sensitivity", input_type=String(optional=True), prefix="--mediumSensitivity", doc=InputDocumentation(doc="pash in medium-sensitivity mode (default setting)")), ToolInput(tag="in_low_sensitivity", input_type=String(optional=True), prefix="--lowSensitivity", doc=InputDocumentation(doc="pash in low-sensitivity mode")), ToolInput(tag="in_fast_mode", input_type=String(optional=True), prefix="--fastMode", doc=InputDocumentation(doc="pash in fast mode")), ToolInput(tag="in_keep_hashed_km_ers_percent", input_type=Int(optional=True), prefix="--keepHashedKmersPercent", doc=InputDocumentation(doc="amount of hashed kmers to keep; this value should be between 90 and 100; default is 99")), ToolInput(tag="in_pash_dot_exe", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Pash_3_0Lx_V0_1_0().translate("wdl", allow_empty_container=True)

