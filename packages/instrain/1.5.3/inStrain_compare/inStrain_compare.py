from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, Int, Float, File

Instrain_Compare_V0_1_0 = CommandToolBuilder(tool="inStrain_compare", base_command=["inStrain", "compare"], inputs=[ToolInput(tag="in_list_instrain_none", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="[INPUT [INPUT ...]], --input [INPUT [INPUT ...]]\nA list of inStrain objects, all mapped to the same\n.fasta file (default: None)")), ToolInput(tag="in_output", input_type=String(optional=True), prefix="--output", doc=InputDocumentation(doc="Output prefix (default: instrainComparer)")), ToolInput(tag="in_processes", input_type=Int(optional=True), prefix="--processes", doc=InputDocumentation(doc="Number of processes to use (default: 6)")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="Make extra debugging output (default: False)")), ToolInput(tag="in_scaffold_bin_be", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="[STB [STB ...]], --stb [STB [STB ...]]\nScaffold to bin. This can be a file with each line\nlisting a scaffold and a bin name, tab-seperated. This\ncan also be a space-seperated list of .fasta files,\nwith one genome per .fasta file. If nothing is\nprovided, all scaffolds will be treated as belonging\nto the same genome (default: [])")), ToolInput(tag="in_min_cov", input_type=Int(optional=True), prefix="--min_cov", doc=InputDocumentation(doc="Minimum coverage to call an variant (default: 5)")), ToolInput(tag="in_min_freq", input_type=Int(optional=True), prefix="--min_freq", doc=InputDocumentation(doc="Minimum SNP frequency to confirm a SNV (both this AND\nthe FDR snp count cutoff must be true to call a SNP).\n(default: 0.05)")), ToolInput(tag="in_fdr", input_type=Float(optional=True), prefix="--fdr", doc=InputDocumentation(doc="SNP false discovery rate- based on simulation data\nwith a 0.1 percent error rate (Q30) (default: 1e-06)")), ToolInput(tag="in_database_mode", input_type=Boolean(optional=True), prefix="--database_mode", doc=InputDocumentation(doc="Using the parameters below, automatically determine\nwhich genomes are present in each Profile and only\ncompare scaffolds from those genomes. All profiles\nmust have run Profile with the same .stb (default:\nFalse)")), ToolInput(tag="in_breadth", input_type=Float(optional=True), prefix="--breadth", doc=InputDocumentation(doc="Minimum breadth_minCov required to count a genome\npresent (default: 0.5)")), ToolInput(tag="in_scaffolds", input_type=File(optional=True), prefix="--scaffolds", doc=InputDocumentation(doc="Location to a list of scaffolds to compare. You can\nalso make this a .fasta file and it will load the\nscaffold names (default: None)")), ToolInput(tag="in_genome", input_type=File(optional=True), prefix="--genome", doc=InputDocumentation(doc="Run scaffolds belonging to this single genome only.\nMust provide an .stb file (default: None)")), ToolInput(tag="in_store_coverage_overlap", input_type=Boolean(optional=True), prefix="--store_coverage_overlap", doc=InputDocumentation(doc="Also store coverage overlap on an mm level (default:\nFalse)")), ToolInput(tag="in_store_mismatch_locations", input_type=Boolean(optional=True), prefix="--store_mismatch_locations", doc=InputDocumentation(doc="Store the locations of SNPs (default: False)")), ToolInput(tag="in_include_self_comparisons", input_type=Boolean(optional=True), prefix="--include_self_comparisons", doc=InputDocumentation(doc="Also compare IS profiles against themself (default:\nFalse)")), ToolInput(tag="in_skip_plot_generation", input_type=Boolean(optional=True), prefix="--skip_plot_generation", doc=InputDocumentation(doc="Dont create plots at the end of the run. (default:\nFalse)")), ToolInput(tag="in_group_length", input_type=Int(optional=True), prefix="--group_length", doc=InputDocumentation(doc="How many bp to compare simultaneously (higher will use\nmore RAM and run more quickly) (default: 10000000)")), ToolInput(tag="in_force_compress", input_type=Boolean(optional=True), prefix="--force_compress", doc=InputDocumentation(doc="Force compression of all output files (default: False)")), ToolInput(tag="in_ani_threshold", input_type=File(optional=True), prefix="--ani_threshold", doc=InputDocumentation(doc="popANI threshold to cluster genomes at. Must provide\n.stb file to do so (default: 0.99999)")), ToolInput(tag="in_coverage_treshold", input_type=Float(optional=True), prefix="--coverage_treshold", doc=InputDocumentation(doc="Minimum percent_genome_compared for a genome\ncomparison to count; if below the popANI will be set\nto 0. (default: 0.1)")), ToolInput(tag="in_cluster_alg", input_type=String(optional=True), prefix="--clusterAlg", doc=InputDocumentation(doc="Algorithm used to cluster genomes (passed to\nscipy.cluster.hierarchy.linkage) (default: average)\n")), ToolInput(tag="in_input", input_type=String(optional=True), position=0, doc=InputDocumentation(doc=""))], outputs=[], container="quay.io/biocontainers/instrain:1.5.3--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Instrain_Compare_V0_1_0().translate("wdl")

