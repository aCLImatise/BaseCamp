from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String, Int, Float

Sina_V0_1_0 = CommandToolBuilder(tool="sina", base_command=["sina"], inputs=[ToolInput(tag="in_show_full_help", input_type=Boolean(optional=True), prefix="-H", doc=InputDocumentation(doc="[ --help-all ]        show full help (long)")), ToolInput(tag="in_arg_input_file", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="[ --in ] arg (='-')   input file (arb or fasta)")), ToolInput(tag="in_arg_output_file", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="[ --out ] arg         output file (arb, fasta or csv; may be specified\nmultiple times)")), ToolInput(tag="in_add_relatives", input_type=String(optional=True), prefix="--add-relatives", doc=InputDocumentation(doc="add the ARG nearest relatives for each sequence to")), ToolInput(tag="in_skip_alignment_stage", input_type=Boolean(optional=True), prefix="-P", doc=InputDocumentation(doc="[ --prealigned ]      skip alignment stage")), ToolInput(tag="in_arg_limit_number", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="[ --threads ] arg     limit number of threads (automatic)")), ToolInput(tag="in_num_pts", input_type=Int(optional=True), prefix="--num-pts", doc=InputDocumentation(doc="(=8)       number of PT servers to start")), ToolInput(tag="in__show_version", input_type=Boolean(optional=True), prefix="-V", doc=InputDocumentation(doc="[ --version ]         show version")), ToolInput(tag="in__increase_verbosity", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="[ --verbose ]         increase verbosity")), ToolInput(tag="in__decrease_verbosity", input_type=Boolean(optional=True), prefix="-q", doc=InputDocumentation(doc="[ --quiet ]           decrease verbosity")), ToolInput(tag="in_log_file", input_type=File(optional=True), prefix="--log-file", doc=InputDocumentation(doc="file to write log to")), ToolInput(tag="in_meta_fmt", input_type=String(optional=True), prefix="--meta-fmt", doc=InputDocumentation(doc="meta data in (*none*|header|comment|csv)")), ToolInput(tag="in_arg_reference_database", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="[ --db ] arg          reference database")), ToolInput(tag="in_arg_check_strand", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="[ --turn ] arg        check other strand as well\n'all' checks all four frames")), ToolInput(tag="in_fs_engine", input_type=String(optional=True), prefix="--fs-engine", doc=InputDocumentation(doc="search engine to use for reference selection\n[*pt-server*|internal]")), ToolInput(tag="in_fs_km_er_len", input_type=Int(optional=True), prefix="--fs-kmer-len", doc=InputDocumentation(doc="length of k-mers (10)")), ToolInput(tag="in_fs_req", input_type=Int(optional=True), prefix="--fs-req", doc=InputDocumentation(doc="required number of reference sequences (1)\nqueries with less matches will be dropped")), ToolInput(tag="in_fs_min", input_type=Int(optional=True), prefix="--fs-min", doc=InputDocumentation(doc="number of references used regardless of shared\nfraction (40)")), ToolInput(tag="in_fs_max", input_type=Int(optional=True), prefix="--fs-max", doc=InputDocumentation(doc="number of references used at most (40)")), ToolInput(tag="in_fs_msc", input_type=Float(optional=True), prefix="--fs-msc", doc=InputDocumentation(doc="required fractional identity of references (0.7)")), ToolInput(tag="in_fs_req_full", input_type=Int(optional=True), prefix="--fs-req-full", doc=InputDocumentation(doc="required number of full length references (1)")), ToolInput(tag="in_fs_full_len", input_type=Int(optional=True), prefix="--fs-full-len", doc=InputDocumentation(doc="minimum length of full length reference (1400)")), ToolInput(tag="in_fs_req_gaps", input_type=Int(optional=True), prefix="--fs-req-gaps", doc=InputDocumentation(doc="ignore references with less internal gaps (10)")), ToolInput(tag="in_fs_min_len", input_type=Int(optional=True), prefix="--fs-min-len", doc=InputDocumentation(doc="minimal reference length (150)")), ToolInput(tag="in_search_db", input_type=String(optional=True), prefix="--search-db", doc=InputDocumentation(doc="reference db if different from -r/--db")), ToolInput(tag="in_search_engine", input_type=String(optional=True), prefix="--search-engine", doc=InputDocumentation(doc="engine if different from --fs-engine")), ToolInput(tag="in_search_min_sim", input_type=Int(optional=True), prefix="--search-min-sim", doc=InputDocumentation(doc="required sequence similarity (0.7)")), ToolInput(tag="in_search_max_result", input_type=Int(optional=True), prefix="--search-max-result", doc=InputDocumentation(doc="desired number of search results (10)")), ToolInput(tag="in_lca_fields", input_type=String(optional=True), prefix="--lca-fields", doc=InputDocumentation(doc="names of fields containing source taxonomy (colon\nseparated list)")), ToolInput(tag="in_lca_quorum", input_type=Float(optional=True), prefix="--lca-quorum", doc=InputDocumentation(doc="fraction of search result that must share resulting\nclassification (0.7)\n")), ToolInput(tag="in_output", input_type=String(), position=0, doc=InputDocumentation(doc="-S [ --search ]          enable search stage"))], outputs=[ToolOutput(tag="out_arg_output_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_arg_output_file", type_hint=File()), doc=OutputDocumentation(doc="[ --out ] arg         output file (arb, fasta or csv; may be specified\nmultiple times)"))], container="quay.io/biocontainers/sina:1.7.2--h9aa86b4_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Sina_V0_1_0().translate("wdl")

