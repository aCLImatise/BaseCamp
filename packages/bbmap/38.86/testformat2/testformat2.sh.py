from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File

Testformat2_Sh_V0_1_0 = CommandToolBuilder(tool="testformat2.sh", base_command=["testformat2.sh"], inputs=[ToolInput(tag="in_junk_reads", input_type=Boolean(optional=True), prefix="-JunkReads", doc=InputDocumentation(doc="Reads with invalid bases or other problems.")), ToolInput(tag="in_chastity_fail", input_type=Boolean(optional=True), prefix="-ChastityFail", doc=InputDocumentation(doc="Reads failing Illumina's chastity filter.")), ToolInput(tag="in_bad_pair_names", input_type=Boolean(optional=True), prefix="-BadPairNames", doc=InputDocumentation(doc="Read pairs whose names don't match.")), ToolInput(tag="in_lowercase", input_type=Boolean(optional=True), prefix="-Lowercase", doc=InputDocumentation(doc="Lowercase bases.")), ToolInput(tag="in_uppercase", input_type=Boolean(optional=True), prefix="-Uppercase", doc=InputDocumentation(doc="Uppercase bases.")), ToolInput(tag="in_non_letter", input_type=Boolean(optional=True), prefix="-Non-Letter", doc=InputDocumentation(doc="Non-letter symbols in bases.")), ToolInput(tag="in_fully_defined", input_type=Boolean(optional=True), prefix="-FullyDefined", doc=InputDocumentation(doc="A, C, G, T, or U bases.")), ToolInput(tag="in_no_call", input_type=Boolean(optional=True), prefix="-No-call", doc=InputDocumentation(doc="N bases.")), ToolInput(tag="in_degenerate", input_type=Boolean(optional=True), prefix="-Degenerate", doc=InputDocumentation(doc="Non-ACGTUN valid IUPAC symbols.")), ToolInput(tag="in_gap", input_type=Boolean(optional=True), prefix="-Gap", doc=InputDocumentation(doc="- symbol.")), ToolInput(tag="in_invalid", input_type=Boolean(optional=True), prefix="-Invalid", doc=InputDocumentation(doc="Symbols that are not valid characters for sequence.")), ToolInput(tag="in_insert_mean", input_type=Boolean(optional=True), prefix="-InsertMean", doc=InputDocumentation(doc="Average insert size, from merging.")), ToolInput(tag="in_insert_mode", input_type=Boolean(optional=True), prefix="-InsertMode", doc=InputDocumentation(doc="Insert size mode from, merging.")), ToolInput(tag="in_adapter_reads", input_type=Boolean(optional=True), prefix="-AdapterReads", doc=InputDocumentation(doc="Fraction of reads with adapter sequence, from merging.")), ToolInput(tag="in_adapter_bases", input_type=Boolean(optional=True), prefix="-AdapterBases", doc=InputDocumentation(doc="Fraction of bases that are adapter sequence, from merging.")), ToolInput(tag="in_q_avg_log", input_type=Boolean(optional=True), prefix="-QAvgLog", doc=InputDocumentation(doc="Logarithmic average quality score.")), ToolInput(tag="in_q_avg_linear", input_type=Boolean(optional=True), prefix="-QAvgLinear", doc=InputDocumentation(doc="Linear average quality score.")), ToolInput(tag="in_trimmed_at_q_five", input_type=Boolean(optional=True), prefix="-TrimmedAtQ5", doc=InputDocumentation(doc="Fraction of bases trimmed at Q5.")), ToolInput(tag="in_trimmed_at_q_one_zero", input_type=Boolean(optional=True), prefix="-TrimmedAtQ10", doc=InputDocumentation(doc="Fraction of bases trimmed at Q10.")), ToolInput(tag="in_trimmed_at_q_one_five", input_type=Boolean(optional=True), prefix="-TrimmedAtQ15", doc=InputDocumentation(doc="Fraction of bases trimmed at Q15.")), ToolInput(tag="in_trimmed_at_q_two_zero", input_type=Boolean(optional=True), prefix="-TrimmedAtQ20", doc=InputDocumentation(doc="Fraction of bases trimmed at Q20.")), ToolInput(tag="in_file", input_type=File(), position=0, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Testformat2_Sh_V0_1_0().translate("wdl", allow_empty_container=True)

