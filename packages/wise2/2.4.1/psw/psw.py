from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, String, Boolean, File

Psw_V0_1_0 = CommandToolBuilder(tool="psw", base_command=["psw"], inputs=[ToolInput(tag="in_penatly_default", input_type=Int(optional=True), prefix="-e", doc=InputDocumentation(doc="penatly (default 2)")), ToolInput(tag="in_matrix_default_blosumbla", input_type=Int(optional=True), prefix="-m", doc=InputDocumentation(doc="matrix (default BLOSUM62.bla)")), ToolInput(tag="in_abc", input_type=String(optional=True), prefix="-abc", doc=InputDocumentation(doc="the abc model")), ToolInput(tag="in_a_penalty_above_default", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="a penalty for above (default 120)")), ToolInput(tag="in_b_penalty_above_default", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc="b penalty for above (default 10)")), ToolInput(tag="in_c_penalty_above_default", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="c penalty for above (default 3)")), ToolInput(tag="in_raw_output", input_type=String(optional=True), prefix="-r", doc=InputDocumentation(doc="raw output")), ToolInput(tag="in_label_output", input_type=String(optional=True), prefix="-l", doc=InputDocumentation(doc="label output")), ToolInput(tag="in_fancy_output", input_type=String(optional=True), prefix="-f", doc=InputDocumentation(doc="fancy output")), ToolInput(tag="in_psw_use_sequences", input_type=String(optional=True), prefix="-F", doc=InputDocumentation(doc="psw to use sequences that seem to be DNA")), ToolInput(tag="in_dp_env", input_type=File(optional=True), prefix="-dpenv", doc=InputDocumentation(doc="envelope file...\n(default, -f, all outputs can be shown together)")), ToolInput(tag="in_dy_mem", input_type=Boolean(optional=True), prefix="-dymem", doc=InputDocumentation(doc="memory style [default/linear/explicit]")), ToolInput(tag="in_kbyte", input_type=Boolean(optional=True), prefix="-kbyte", doc=InputDocumentation(doc="memory amount to use [4000]")), ToolInput(tag="in_dy_debug", input_type=Boolean(optional=True), prefix="-dydebug", doc=InputDocumentation(doc="drop into dynamite dp matrix debugger")), ToolInput(tag="in_pal_debug", input_type=Boolean(optional=True), prefix="-paldebug", doc=InputDocumentation(doc="print PackAln after debugger run if used")), ToolInput(tag="in_version", input_type=Boolean(optional=True), prefix="-version", doc=InputDocumentation(doc="show version and compile info")), ToolInput(tag="in_silent", input_type=Boolean(optional=True), prefix="-silent", doc=InputDocumentation(doc="No messages    on stderr")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="-quiet", doc=InputDocumentation(doc="No report/info on stderr")), ToolInput(tag="in_error_off_std", input_type=String(optional=True), prefix="-erroroffstd", doc=InputDocumentation(doc="warning messages to stderr")), ToolInput(tag="in_error_log", input_type=Boolean(optional=True), prefix="-errorlog", doc=InputDocumentation(doc="[file] Log warning messages to file")), ToolInput(tag="in_error_style", input_type=Boolean(optional=True), prefix="-errorstyle", doc=InputDocumentation(doc="[server/program] style of error reporting (default program)")), ToolInput(tag="in_options", input_type=String(), position=0, doc=InputDocumentation(doc="-g gap penalty (default 12)"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Psw_V0_1_0().translate("wdl", allow_empty_container=True)

