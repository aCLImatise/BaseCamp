from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean, Int, String

Fusion_Report_Run_V0_1_0 = CommandToolBuilder(tool="fusion_report_run", base_command=["fusion_report", "run"], inputs=[ToolInput(tag="in_eric_script", input_type=File(optional=True), prefix="--ericscript", doc=InputDocumentation(doc="EricScript output file")), ToolInput(tag="in_eric_script_weight", input_type=File(optional=True), prefix="--ericscript_weight", doc=InputDocumentation(doc="EricScript output file")), ToolInput(tag="in_fusion_catcher", input_type=File(optional=True), prefix="--fusioncatcher", doc=InputDocumentation(doc="Fusioncatcher output file")), ToolInput(tag="in_fusion_catcher_weight", input_type=File(optional=True), prefix="--fusioncatcher_weight", doc=InputDocumentation(doc="Fusioncatcher output file")), ToolInput(tag="in_star_fusion", input_type=File(optional=True), prefix="--starfusion", doc=InputDocumentation(doc="STAR-Fusion output file")), ToolInput(tag="in_star_fusion_weight", input_type=File(optional=True), prefix="--starfusion_weight", doc=InputDocumentation(doc="STAR-Fusion output file")), ToolInput(tag="in_pizz_ly", input_type=File(optional=True), prefix="--pizzly", doc=InputDocumentation(doc="Pizzly output file")), ToolInput(tag="in_pizz_ly_weight", input_type=File(optional=True), prefix="--pizzly_weight", doc=InputDocumentation(doc="Pizzly output file")), ToolInput(tag="in_squid", input_type=File(optional=True), prefix="--squid", doc=InputDocumentation(doc="Squid output file")), ToolInput(tag="in_squid_weight", input_type=File(optional=True), prefix="--squid_weight", doc=InputDocumentation(doc="Squid output file")), ToolInput(tag="in_drag_en", input_type=File(optional=True), prefix="--dragen", doc=InputDocumentation(doc="Illumina Dragen Bio-IT Platform output file")), ToolInput(tag="in_drag_en_weight", input_type=File(optional=True), prefix="--dragen_weight", doc=InputDocumentation(doc="Illumina Dragen Bio-IT Platform output file")), ToolInput(tag="in_arriba", input_type=File(optional=True), prefix="--arriba", doc=InputDocumentation(doc="Arriba output file")), ToolInput(tag="in_arriba_weight", input_type=File(optional=True), prefix="--arriba_weight", doc=InputDocumentation(doc="Arriba output file")), ToolInput(tag="in_allow_multiple_gene_symbols", input_type=Boolean(optional=True), prefix="--allow-multiple-gene-symbols", doc=InputDocumentation(doc="Case when fusion gene symbol can't be determined and\nmultiple fusion options are provided. By default\nprovide the fist proposed fusion.")), ToolInput(tag="in_config", input_type=File(optional=True), prefix="--config", doc=InputDocumentation(doc="Input config file")), ToolInput(tag="in_tool_cut_off", input_type=Int(optional=True), prefix="--tool-cutoff", doc=InputDocumentation(doc="Number of tools required to detect a fusion")), ToolInput(tag="in_export", input_type=String(optional=True), prefix="--export", doc=InputDocumentation(doc="Export fusions in different formats. Currently\nsupported: json, csv.\n")), ToolInput(tag="in_sample", input_type=String(), position=0, doc=InputDocumentation(doc="Sample name")), ToolInput(tag="in_output", input_type=String(), position=1, doc=InputDocumentation(doc="Output directory")), ToolInput(tag="in_db_path", input_type=String(), position=2, doc=InputDocumentation(doc="Path to folder where all databases are stored."))], outputs=[ToolOutput(tag="out_eric_script", output_type=File(optional=True), selector=InputSelector(input_to_select="in_eric_script", type_hint=File()), doc=OutputDocumentation(doc="EricScript output file")), ToolOutput(tag="out_eric_script_weight", output_type=File(optional=True), selector=InputSelector(input_to_select="in_eric_script_weight", type_hint=File()), doc=OutputDocumentation(doc="EricScript output file")), ToolOutput(tag="out_fusion_catcher", output_type=File(optional=True), selector=InputSelector(input_to_select="in_fusion_catcher", type_hint=File()), doc=OutputDocumentation(doc="Fusioncatcher output file")), ToolOutput(tag="out_fusion_catcher_weight", output_type=File(optional=True), selector=InputSelector(input_to_select="in_fusion_catcher_weight", type_hint=File()), doc=OutputDocumentation(doc="Fusioncatcher output file")), ToolOutput(tag="out_star_fusion", output_type=File(optional=True), selector=InputSelector(input_to_select="in_star_fusion", type_hint=File()), doc=OutputDocumentation(doc="STAR-Fusion output file")), ToolOutput(tag="out_star_fusion_weight", output_type=File(optional=True), selector=InputSelector(input_to_select="in_star_fusion_weight", type_hint=File()), doc=OutputDocumentation(doc="STAR-Fusion output file")), ToolOutput(tag="out_pizz_ly", output_type=File(optional=True), selector=InputSelector(input_to_select="in_pizz_ly", type_hint=File()), doc=OutputDocumentation(doc="Pizzly output file")), ToolOutput(tag="out_pizz_ly_weight", output_type=File(optional=True), selector=InputSelector(input_to_select="in_pizz_ly_weight", type_hint=File()), doc=OutputDocumentation(doc="Pizzly output file")), ToolOutput(tag="out_squid", output_type=File(optional=True), selector=InputSelector(input_to_select="in_squid", type_hint=File()), doc=OutputDocumentation(doc="Squid output file")), ToolOutput(tag="out_squid_weight", output_type=File(optional=True), selector=InputSelector(input_to_select="in_squid_weight", type_hint=File()), doc=OutputDocumentation(doc="Squid output file")), ToolOutput(tag="out_drag_en", output_type=File(optional=True), selector=InputSelector(input_to_select="in_drag_en", type_hint=File()), doc=OutputDocumentation(doc="Illumina Dragen Bio-IT Platform output file")), ToolOutput(tag="out_drag_en_weight", output_type=File(optional=True), selector=InputSelector(input_to_select="in_drag_en_weight", type_hint=File()), doc=OutputDocumentation(doc="Illumina Dragen Bio-IT Platform output file")), ToolOutput(tag="out_arriba", output_type=File(optional=True), selector=InputSelector(input_to_select="in_arriba", type_hint=File()), doc=OutputDocumentation(doc="Arriba output file")), ToolOutput(tag="out_arriba_weight", output_type=File(optional=True), selector=InputSelector(input_to_select="in_arriba_weight", type_hint=File()), doc=OutputDocumentation(doc="Arriba output file"))], container="quay.io/biocontainers/fusion-report:2.1.4--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Fusion_Report_Run_V0_1_0().translate("wdl")

