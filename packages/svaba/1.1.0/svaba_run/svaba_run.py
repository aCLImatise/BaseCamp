from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File

Svaba_Run_V0_1_0 = CommandToolBuilder(tool="svaba_run", base_command=["svaba", "run"], inputs=[ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Select verbosity level (0-4). Default: 0")), ToolInput(tag="in_threads", input_type=Boolean(optional=True), prefix="--threads", doc=InputDocumentation(doc="Use NUM threads to run svaba. Default: 1")), ToolInput(tag="in_id_string", input_type=Boolean(optional=True), prefix="--id-string", doc=InputDocumentation(doc="String specifying the analysis ID to be used as part of ID common.")), ToolInput(tag="in_reference_genome", input_type=Boolean(optional=True), prefix="--reference-genome", doc=InputDocumentation(doc="Path to indexed reference genome to be used by BWA-MEM.")), ToolInput(tag="in_case_bam", input_type=Boolean(optional=True), prefix="--case-bam", doc=InputDocumentation(doc="Case BAM/CRAM/SAM file (eg tumor). Can input multiple.")), ToolInput(tag="in_control_bam", input_type=Boolean(optional=True), prefix="--control-bam", doc=InputDocumentation(doc="(optional) Control BAM/CRAM/SAM file (eg normal). Can input multiple.")), ToolInput(tag="in_region", input_type=Boolean(optional=True), prefix="--region", doc=InputDocumentation(doc="Run on targeted intervals. Accepts BED file or Samtools-style string")), ToolInput(tag="in_germline", input_type=Boolean(optional=True), prefix="--germline", doc=InputDocumentation(doc="Sets recommended settings for case-only analysis (eg germline). (-I, -L5, assembles NM >= 3 reads)")), ToolInput(tag="in_lod", input_type=Boolean(optional=True), prefix="--lod", doc=InputDocumentation(doc="LOD cutoff to classify indel as non-REF (tests AF=0 vs AF=MaxLikelihood(AF)) [8]")), ToolInput(tag="in_lod_dbsnp", input_type=Boolean(optional=True), prefix="--lod-dbsnp", doc=InputDocumentation(doc="LOD cutoff to classify indel as non-REF (tests AF=0 vs AF=MaxLikelihood(AF)) at DBSnp indel site [5]")), ToolInput(tag="in_lod_somatic", input_type=Boolean(optional=True), prefix="--lod-somatic", doc=InputDocumentation(doc="LOD cutoff to classify indel as somatic (tests AF=0 in normal vs AF=ML(0.5)) [2.5]")), ToolInput(tag="in_lod_somatic_dbsnp", input_type=Boolean(optional=True), prefix="--lod-somatic-dbsnp", doc=InputDocumentation(doc="LOD cutoff to classify indel as somatic (tests AF=0 in normal vs AF=ML(0.5)) at DBSnp indel site [4]")), ToolInput(tag="in_scale_errors", input_type=Boolean(optional=True), prefix="--scale-errors", doc=InputDocumentation(doc="Scale the priors that a site is artifact at given repeat count. 0 means assume low (const) error rate [1]")), ToolInput(tag="in_mate_lookup_min", input_type=Boolean(optional=True), prefix="--mate-lookup-min", doc=InputDocumentation(doc="Minimum number of somatic reads required to attempt mate-region lookup [3]")), ToolInput(tag="in_disc_sd_cut_off", input_type=Boolean(optional=True), prefix="--disc-sd-cutoff", doc=InputDocumentation(doc="Number of standard deviations of calculated insert-size distribution to consider discordant. [3.92]")), ToolInput(tag="in_chunk_size", input_type=Boolean(optional=True), prefix="--chunk-size", doc=InputDocumentation(doc="Size of a local assembly window (in bp). Set 0 for whole-BAM in one assembly. [25000]")), ToolInput(tag="in_max_reads", input_type=Boolean(optional=True), prefix="--max-reads", doc=InputDocumentation(doc="Max total read count to read in from assembly region. Set 0 to turn off. [50000]")), ToolInput(tag="in_max_reads_mate_region", input_type=Boolean(optional=True), prefix="--max-reads-mate-region", doc=InputDocumentation(doc="Max weird reads to include from a mate lookup region. [400]")), ToolInput(tag="in_max_coverage", input_type=Boolean(optional=True), prefix="--max-coverage", doc=InputDocumentation(doc="Max read coverage to send to assembler (per BAM). Subsample reads if exceeded. [500]")), ToolInput(tag="in_no_inter_chrom_lookup", input_type=Boolean(optional=True), prefix="--no-interchrom-lookup", doc=InputDocumentation(doc="Skip mate lookup for inter-chr candidate events. Reduces power for translocations but less I/O.")), ToolInput(tag="in_discordant_only", input_type=Boolean(optional=True), prefix="--discordant-only", doc=InputDocumentation(doc="Only run the discordant read clustering module, skip assembly.")), ToolInput(tag="in_num_assembly_rounds", input_type=Boolean(optional=True), prefix="--num-assembly-rounds", doc=InputDocumentation(doc="Run assembler multiple times. > 1 will bootstrap the assembly. [2]")), ToolInput(tag="in_num_to_sample", input_type=Boolean(optional=True), prefix="--num-to-sample", doc=InputDocumentation(doc="When learning about inputs, number of reads to sample. [2,000,000]")), ToolInput(tag="in_hp", input_type=Boolean(optional=True), prefix="--hp", doc=InputDocumentation(doc="Highly parallel. Don't write output until completely done. More memory, but avoids all thread-locks.")), ToolInput(tag="in_override_reference_check", input_type=Boolean(optional=True), prefix="--override-reference-check", doc=InputDocumentation(doc="With much caution, allows user to run svaba with different reference genomes for BAMs and -G")), ToolInput(tag="in_g_zip", input_type=Boolean(optional=True), prefix="--g-zip", doc=InputDocumentation(doc="Gzip and tabix the output VCF files. [off]")), ToolInput(tag="in_all_contigs", input_type=Boolean(optional=True), prefix="--all-contigs", doc=InputDocumentation(doc="Output all contigs that were assembled, regardless of mapping or length. [off]")), ToolInput(tag="in_read_tracking", input_type=Boolean(optional=True), prefix="--read-tracking", doc=InputDocumentation(doc="Track supporting reads by qname. Increases file sizes. [off]")), ToolInput(tag="in_write_extracted_reads", input_type=Boolean(optional=True), prefix="--write-extracted-reads", doc=InputDocumentation(doc="For the case BAM, write reads sent to assembly to a BAM file. [off]")), ToolInput(tag="in_dbsnp_vcf", input_type=Boolean(optional=True), prefix="--dbsnp-vcf", doc=InputDocumentation(doc="DBsnp database (VCF) to compare indels against")), ToolInput(tag="in_blacklist", input_type=Boolean(optional=True), prefix="--blacklist", doc=InputDocumentation(doc="BED-file with blacklisted regions to not extract any reads from.")), ToolInput(tag="in_microbial_genome", input_type=Boolean(optional=True), prefix="--microbial-genome", doc=InputDocumentation(doc="Path to indexed reference genome of microbial sequences to be used by BWA-MEM to filter reads.")), ToolInput(tag="in_germline_sv_database", input_type=Boolean(optional=True), prefix="--germline-sv-database", doc=InputDocumentation(doc="BED file containing sites of known germline SVs. Used as additional filter for somatic SV detection")), ToolInput(tag="in_simple_seq_database", input_type=Boolean(optional=True), prefix="--simple-seq-database", doc=InputDocumentation(doc="BED file containing sites of simple DNA that can confuse the contig re-alignment.")), ToolInput(tag="in_min_overlap", input_type=Boolean(optional=True), prefix="--min-overlap", doc=InputDocumentation(doc="Minimum read overlap, an SGA parameter. Default: 0.4* readlength")), ToolInput(tag="in_error_rate", input_type=Boolean(optional=True), prefix="--error-rate", doc=InputDocumentation(doc="Fractional difference two reads can have to overlap. See SGA. 0 is fast, but requires error correcting. [0]")), ToolInput(tag="in_ec_correct_type", input_type=Boolean(optional=True), prefix="--ec-correct-type", doc=InputDocumentation(doc="(f) Fermi-kit BFC correction, (s) Kmer-correction from SGA, (0) no correction (then suggest non-zero -e) [f]")), ToolInput(tag="in_ec_subsample", input_type=Boolean(optional=True), prefix="--ec-subsample", doc=InputDocumentation(doc="Learn from fraction of non-weird reads during error-correction. Lower number = faster compute [0.5]")), ToolInput(tag="in_write_as_qg", input_type=File(optional=True), prefix="--write-asqg", doc=InputDocumentation(doc="Output an ASQG graph file for each assembly window.")), ToolInput(tag="in_bwa_match_score", input_type=Boolean(optional=True), prefix="--bwa-match-score", doc=InputDocumentation(doc="Set the BWA-MEM match score. BWA-MEM -A [2]")), ToolInput(tag="in_gap_open_penalty", input_type=Boolean(optional=True), prefix="--gap-open-penalty", doc=InputDocumentation(doc="Set the BWA-MEM gap open penalty for contig to genome alignments. BWA-MEM -O [32]")), ToolInput(tag="in_gap_extension_penalty", input_type=Boolean(optional=True), prefix="--gap-extension-penalty", doc=InputDocumentation(doc="Set the BWA-MEM gap extension penalty for contig to genome alignments. BWA-MEM -E [1]")), ToolInput(tag="in_mismatch_penalty", input_type=Boolean(optional=True), prefix="--mismatch-penalty", doc=InputDocumentation(doc="Set the BWA-MEM mismatch penalty for contig to genome alignments. BWA-MEM -b [18]")), ToolInput(tag="in_bandwidth", input_type=Boolean(optional=True), prefix="--bandwidth", doc=InputDocumentation(doc="Set the BWA-MEM SW alignment bandwidth for contig to genome alignments. BWA-MEM -w [1000]")), ToolInput(tag="in_z_drop_off", input_type=Boolean(optional=True), prefix="--z-dropoff", doc=InputDocumentation(doc="Set the BWA-MEM SW alignment Z-dropoff for contig to genome alignments. BWA-MEM -d [100]")), ToolInput(tag="in_reseed_trigger", input_type=Boolean(optional=True), prefix="--reseed-trigger", doc=InputDocumentation(doc="Set the BWA-MEM reseed trigger for reseeding mems for contig to genome alignments. BWA-MEM -r [1.5]")), ToolInput(tag="in_penalty_clip_three", input_type=Boolean(optional=True), prefix="--penalty-clip-3", doc=InputDocumentation(doc="Set the BWA-MEM penalty for 3' clipping. [5]")), ToolInput(tag="in_penalty_clip_five", input_type=Boolean(optional=True), prefix="--penalty-clip-5", doc=InputDocumentation(doc="Set the BWA-MEM penalty for 5' clipping. [5]"))], outputs=[ToolOutput(tag="out_write_as_qg", output_type=File(optional=True), selector=InputSelector(input_to_select="in_write_as_qg", type_hint=File()), doc=OutputDocumentation(doc="Output an ASQG graph file for each assembly window."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Svaba_Run_V0_1_0().translate("wdl", allow_empty_container=True)

