from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Svaba_Refilter_V0_1_0 = CommandToolBuilder(tool="svaba_refilter", base_command=["svaba", "refilter"], inputs=[ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Select verbosity level (0-4). Default: 1")), ToolInput(tag="in_reference_genome", input_type=Boolean(optional=True), prefix="--reference-genome", doc=InputDocumentation(doc="Path to indexed reference genome to be used by BWA-MEM. Default is Broad hg19 (/seq/reference/...)")), ToolInput(tag="in_opt_bam", input_type=Boolean(optional=True), prefix="--opt-bam", doc=InputDocumentation(doc="Input BAM file to get header from")), ToolInput(tag="in_id_string", input_type=Boolean(optional=True), prefix="--id-string", doc=InputDocumentation(doc="String specifying the analysis ID to be used as part of ID common.")), ToolInput(tag="in_input_bps", input_type=Boolean(optional=True), prefix="--input-bps", doc=InputDocumentation(doc="Original bps.txt.gz file")), ToolInput(tag="in_bam", input_type=Boolean(optional=True), prefix="--bam", doc=InputDocumentation(doc="BAM file used to grab header from")), ToolInput(tag="in_dbsnp_vcf", input_type=Boolean(optional=True), prefix="--dbsnp-vcf", doc=InputDocumentation(doc="DBsnp database (VCF) to compare indels against")), ToolInput(tag="in_blacklist", input_type=Boolean(optional=True), prefix="--blacklist", doc=InputDocumentation(doc="BED-file with blacklisted regions to not extract any reads from.")), ToolInput(tag="in_microbial_genome", input_type=Boolean(optional=True), prefix="--microbial-genome", doc=InputDocumentation(doc="Path to indexed reference genome of microbial sequences to be used by BWA-MEM to filter reads.")), ToolInput(tag="in_germline_sv_database", input_type=Boolean(optional=True), prefix="--germline-sv-database", doc=InputDocumentation(doc="BED file containing sites of known germline SVs. Used as additional filter for somatic SV detection")), ToolInput(tag="in_simple_seq_database", input_type=Boolean(optional=True), prefix="--simple-seq-database", doc=InputDocumentation(doc="BED file containing sites of simple DNA that can confuse the contig re-alignment.")), ToolInput(tag="in_lod", input_type=Boolean(optional=True), prefix="--lod", doc=InputDocumentation(doc="LOD cutoff to classify indel as non-REF (tests AF=0 vs AF=MaxLikelihood(AF)) [8]")), ToolInput(tag="in_lod_dbsnp", input_type=Boolean(optional=True), prefix="--lod-dbsnp", doc=InputDocumentation(doc="LOD cutoff to classify indel as non-REF (tests AF=0 vs AF=MaxLikelihood(AF)) at DBSnp indel site [5]")), ToolInput(tag="in_lod_somatic", input_type=Boolean(optional=True), prefix="--lod-somatic", doc=InputDocumentation(doc="LOD cutoff to classify indel as somatic (tests AF=0 in normal vs AF=ML(0.5)) [2.5]")), ToolInput(tag="in_lod_somatic_dbsnp", input_type=Boolean(optional=True), prefix="--lod-somatic-dbsnp", doc=InputDocumentation(doc="LOD cutoff to classify indel as somatic (tests AF=0 in normal vs AF=ML(0.5)) at DBSnp indel site [4]")), ToolInput(tag="in_scale_errors", input_type=Boolean(optional=True), prefix="--scale-errors", doc=InputDocumentation(doc="Scale the priors that a site is artifact at given repeat count. 0 means assume low (const) error rate [1]")), ToolInput(tag="in_read_tracking", input_type=Boolean(optional=True), prefix="--read-tracking", doc=InputDocumentation(doc="Track supporting reads by qname. Increases file sizes. [off]")), ToolInput(tag="in_o", input_type=String(optional=True), prefix="-o", doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Svaba_Refilter_V0_1_0().translate("wdl", allow_empty_container=True)

