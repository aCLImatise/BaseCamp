from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File

Leap_Gen_Top_V0_1_0 = CommandToolBuilder(tool="leap_gen_top", base_command=["leap_gen_top"], inputs=[ToolInput(tag="in_config", input_type=File(optional=True), prefix="--config", doc=InputDocumentation(doc="Configuration file")), ToolInput(tag="in_input_pdb_path", input_type=File(optional=True), prefix="--input_pdb_path", doc=InputDocumentation(doc="Input 3D structure PDB file. Accepted formats: pdb.")), ToolInput(tag="in_input_lib_path", input_type=File(optional=True), prefix="--input_lib_path", doc=InputDocumentation(doc="Input ligand library parameters file. Accepted formats: lib, zip.")), ToolInput(tag="in_input_frc_mod_path", input_type=File(optional=True), prefix="--input_frcmod_path", doc=InputDocumentation(doc="Input ligand frcmod parameters file. Accepted formats: frcmod, zip.")), ToolInput(tag="in_input_params_path", input_type=File(optional=True), prefix="--input_params_path", doc=InputDocumentation(doc="Additional leap parameter files to load with loadAmberParams Leap command. Accepted formats: leapin, in, txt, zip.")), ToolInput(tag="in_input_source_path", input_type=File(optional=True), prefix="--input_source_path", doc=InputDocumentation(doc="Additional leap command files to load with source Leap command. Accepted formats: leapin, in, txt, zip.")), ToolInput(tag="in_output_pdb_path", input_type=File(optional=True), prefix="--output_pdb_path", doc=InputDocumentation(doc="Output 3D structure PDB file matching the topology file. Accepted formats: pdb.")), ToolInput(tag="in_output_top_path", input_type=File(optional=True), prefix="--output_top_path", doc=InputDocumentation(doc="Output topology file (AMBER ParmTop). Accepted formats: top.")), ToolInput(tag="in_output_crd_path", input_type=File(optional=True), prefix="--output_crd_path", doc=InputDocumentation(doc="Output coordinates file (AMBER crd). Accepted formats: crd.\n"))], outputs=[ToolOutput(tag="out_output_pdb_path", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_pdb_path", type_hint=File()), doc=OutputDocumentation(doc="Output 3D structure PDB file matching the topology file. Accepted formats: pdb.")), ToolOutput(tag="out_output_top_path", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_top_path", type_hint=File()), doc=OutputDocumentation(doc="Output topology file (AMBER ParmTop). Accepted formats: top.")), ToolOutput(tag="out_output_crd_path", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_crd_path", type_hint=File()), doc=OutputDocumentation(doc="Output coordinates file (AMBER crd). Accepted formats: crd.\n"))], container="quay.io/biocontainers/biobb_amber:3.5.0--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Leap_Gen_Top_V0_1_0().translate("wdl")

