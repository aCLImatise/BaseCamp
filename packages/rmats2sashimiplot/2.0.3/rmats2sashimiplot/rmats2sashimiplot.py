from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Int, Directory

Rmats2Sashimiplot_V0_1_0 = CommandToolBuilder(tool="rmats2sashimiplot", base_command=["rmats2sashimiplot"], inputs=[ToolInput(tag="in_type_event_rmats", input_type=String(optional=True), prefix="-t", doc=InputDocumentation(doc="Type of event from rMATS result used in the\nanalysis.eventType is 'SE', 'A5SS', 'A3SS', 'MXE' or\n'RI'.'SE' is for skipped exon events,'A5SS' is for\nalternative 5' splice site events,'A3SS' is for\nalternative 3' splice site events,'MXE' is for\nmutually exclusive exons events and 'RI' is for\nretained intron events (Only if using rMATS format\nresult as event file).")), ToolInput(tag="in_rmats_output_event", input_type=File(optional=True), prefix="-e", doc=InputDocumentation(doc="The rMATS output event file (Only if using rMATS\nformat result as event file).")), ToolInput(tag="in_coordinate_annotation_ofgenes", input_type=File(optional=True), prefix="-c", doc=InputDocumentation(doc="The coordinate of genome region and an annotation of\ngenes and transcripts in GFF3 format. Coordinateand\nannotation file must be colon separated(Only if using\ncoordinate and annotation file).")), ToolInput(tag="in_lone", input_type=Int(optional=True), prefix="--l1", doc=InputDocumentation(doc="The label for first sample.")), ToolInput(tag="in_l_two", input_type=Int(optional=True), prefix="--l2", doc=InputDocumentation(doc="The label for second sample.")), ToolInput(tag="in_the_output_directory", input_type=Directory(optional=True), prefix="-o", doc=InputDocumentation(doc="The output directory.")), ToolInput(tag="in_s_one", input_type=Int(optional=True), prefix="--s1", doc=InputDocumentation(doc="sample_1 in sam format (s1_rep1.sam[,s1_rep2.sam])")), ToolInput(tag="in_s_two", input_type=Int(optional=True), prefix="--s2", doc=InputDocumentation(doc="sample_2 in sam format (s2_rep1.sam[,s2_rep2.sam])")), ToolInput(tag="in_bone", input_type=Int(optional=True), prefix="--b1", doc=InputDocumentation(doc="sample_1 in bam format(s1_rep1.bam[,s1_rep2.bam])")), ToolInput(tag="in_b_two", input_type=Int(optional=True), prefix="--b2", doc=InputDocumentation(doc="sample_2 in bam format(s2_rep1.bam[,s2_rep2.bam])")), ToolInput(tag="in_exon_s", input_type=Int(optional=True), prefix="--exon_s", doc=InputDocumentation(doc="The size of scale down exons. The default is 1.")), ToolInput(tag="in_intron_s", input_type=Int(optional=True), prefix="--intron_s", doc=InputDocumentation(doc="The size of scale down introns. For example,if")), ToolInput(tag="in_group_info", input_type=File(optional=True), prefix="--group-info", doc=InputDocumentation(doc="If the user wants to divide the bam files manually,\nyou can provide a '*.gf' file.")), ToolInput(tag="in_min_counts", input_type=Int(optional=True), prefix="--min-counts", doc=InputDocumentation(doc="If the junction count is smaller than this number,\nthis single junction's count would be omitted in the\nplot.")), ToolInput(tag="in_color", input_type=Int(optional=True), prefix="--color", doc=InputDocumentation(doc="Set the color in format('#CC0011'[,'#CC0011']). The\nnumber of the colors equal to the total number of bam\nfiles in different samples.")), ToolInput(tag="in_font_size", input_type=Int(optional=True), prefix="--font-size", doc=InputDocumentation(doc="Set the font size.")), ToolInput(tag="in_usage", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_rmats_output_event", output_type=File(optional=True), selector=InputSelector(input_to_select="in_rmats_output_event", type_hint=File()), doc=OutputDocumentation(doc="The rMATS output event file (Only if using rMATS\nformat result as event file).")), ToolOutput(tag="out_the_output_directory", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_the_output_directory", type_hint=File()), doc=OutputDocumentation(doc="The output directory."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Rmats2Sashimiplot_V0_1_0().translate("wdl", allow_empty_container=True)

