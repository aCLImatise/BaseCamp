version 1.0

task Moss {
  input {
    String? bam
    String? realigned
    File? ref
    File? output_vcf_file
    String? normal
    String? vcf
    String? loci
    Int? tau
    Float? mu
    Int? min_base_qual
    Int? min_mapping_qual
    Int? max_dep
    Int? grid_size
    Boolean? dry
    Boolean? filter_total
    Boolean? filter_vaf
    Boolean? ignore_zero
    Boolean? pile_up
  }
  command <<<
    moss \
      ~{if defined(bam) then ("--bam " +  '"' + bam + '"') else ""} \
      ~{if defined(realigned) then ("--realigned " +  '"' + realigned + '"') else ""} \
      ~{if defined(ref) then ("--ref " +  '"' + ref + '"') else ""} \
      ~{if defined(output_vcf_file) then ("--output " +  '"' + output_vcf_file + '"') else ""} \
      ~{if defined(normal) then ("--normal " +  '"' + normal + '"') else ""} \
      ~{if defined(vcf) then ("--vcf " +  '"' + vcf + '"') else ""} \
      ~{if defined(loci) then ("--loci " +  '"' + loci + '"') else ""} \
      ~{if defined(tau) then ("--tau " +  '"' + tau + '"') else ""} \
      ~{if defined(mu) then ("--mu " +  '"' + mu + '"') else ""} \
      ~{if defined(min_base_qual) then ("--min-base-qual " +  '"' + min_base_qual + '"') else ""} \
      ~{if defined(min_mapping_qual) then ("--min-mapping-qual " +  '"' + min_mapping_qual + '"') else ""} \
      ~{if defined(max_dep) then ("--max_dep " +  '"' + max_dep + '"') else ""} \
      ~{if defined(grid_size) then ("--grid-size " +  '"' + grid_size + '"') else ""} \
      ~{if (dry) then "--dry" else ""} \
      ~{if (filter_total) then "--filter-total" else ""} \
      ~{if (filter_vaf) then "--filter-vaf" else ""} \
      ~{if (ignore_zero) then "--ignore0" else ""} \
      ~{if (pile_up) then "--pileup" else ""}
  >>>
  runtime {
    docker: "quay.io/biocontainers/moss:0.1.1--h179b981_0"
  }
  parameter_meta {
    bam: "original BAM files for one sample,\\ncan be addressed multiple times"
    realigned: "realigned BAM files for one sample,\\ncan be addressed multiple times"
    ref: "reference FASTA file"
    output_vcf_file: "output VCF file"
    normal: "normal sample's germline VCF result"
    vcf: "tumor samples' somatic VCF result"
    loci: "candidate loci VCF files generated by python script"
    tau: "optional threshold for somatic score, default is 0"
    mu: "set somatic mutation prior, 1-5x10^(-m), default is 1-5e-4"
    min_base_qual: "minimum threshold for base quality, default is 13"
    min_mapping_qual: "minimum threshold for mapping quality, default is 30"
    max_dep: "max depth of the dataset, default is 500"
    grid_size: "number of grid points in [0, 1] for approximate integration,\\ndefault is 20, must be non-negative"
    dry: "set to dry run"
    filter_total: "set to filter variants with total tumor depth < 150"
    filter_vaf: "set to filter variants with VAF in any samples < 0.1"
    ignore_zero: "ignore samples with all reads same as the normal allele"
    pile_up: "output pileup, only effective in dry-run mode"
  }
  output {
    File out_stdout = stdout()
    File out_output_vcf_file = "${in_output_vcf_file}"
  }
}