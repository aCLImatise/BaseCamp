!Command
command:
- mapGL.py
positional:
- !Positional
  optional: false
  position: 0
  name: input
  description: "Input regions to process. Should be in standard bed\nformat. Only\
    \ the first four bed fields will be used."
- !Positional
  optional: false
  position: 1
  name: tree
  description: "Tree, in standard Newick format, with or without\nbranch lengths,\
    \ describing relationships of query and\ntarget species to outgroups. May be given\
    \ as a string\nor file."
- !Positional
  optional: false
  position: 2
  name: qname
  description: "Name of the query species. Regions from this species\nwill be mapped\
    \ to target species coordinates."
- !Positional
  optional: false
  position: 3
  name: tname
  description: "Name of the target species. Regions from the query\nspecies will be\
    \ mapped to coordinates from this\nspecies."
- !Positional
  optional: false
  position: 4
  name: alignments
  description: "Alignment files (.chain or .pkl): One for the target\nspecies and\
    \ one per outgroup species. Files should be\nnamed according to the convention:\n\
    qname.tname[...].chain.gz, where qname is the query\nspecies name and tname is\
    \ the name of the\ntarget/outgroup species. Names used for qname and\ntname must\
    \ match names used in the newick tree."
named:
- !Flag
  optional: true
  synonyms:
  - -o
  - --output
  description: 'Output file. Default stdout. (default: stdout)'
  args: !SimpleFlagArg
    name: FILE
- !Flag
  optional: true
  synonyms:
  - -t
  - --threshold
  description: "Mapping threshold i.e., |elem| * threshold <=\n|mapped_elem|. Default\
    \ = 0.0 -- equivalent to\naccepting a single-base overlap. On the other end of\n\
    the spectrum, setting this value to 1 is equivalent to\nonly accepting full-length\
    \ overlaps. (default: 0.0)"
  args: !SimpleFlagArg
    name: FLOAT
- !Flag
  optional: true
  synonyms:
  - -g
  - --gap
  description: "Ignore elements with an insertion/deletion of this or\nbigger size.\
    \ Using the default value (-1) will allow\ngaps of any size. (default: -1)"
  args: !SimpleFlagArg
    name: GAP
- !Flag
  optional: true
  synonyms:
  - -v
  - --verbose
  description: 'Verbosity level (default: info)'
  args: !ChoiceFlagArg
    choices: !!set
      silent:
      debug:
      info:
- !Flag
  optional: true
  synonyms:
  - -d
  - --drop_split
  description: "If elements span multiple chains, report them as non-\nmapping. These\
    \ will then be reported as gains or\nlosses, according to the maximum-parsimony\n\
    predictions. This is the default mapping behavior for\nbnMapper. By default, mapGL.pys\
    \ will follow the\nmapping convention used by liftOver, whereas the\nlongest mapped\
    \ alignment is reported for split\nelements. (default: False)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -i
  - --in_format
  description: 'Input file format. (Default: BED) (default: BED)'
  args: !ChoiceFlagArg
    choices: !!set
      narrowPeak:
      BED:
- !Flag
  optional: true
  synonyms:
  - -f
  - --full_labels
  description: "Attempt to predict gain/loss events on all branches of\nthe tree,\
    \ not just query/target branches. Output will\ninclude a comma-delimited list\
    \ of gain/loss events\nfrom any/all affected branches. (default: False)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -n
  - --no_prune
  description: "Do not attempt to disambiguate the root state to\nresolve ambiguous\
    \ gain/loss predictions. Instead,\nlabel affected features as 'ambiguous'. (default:\n\
    False)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -p
  - --priority
  description: "When resolving ambiguous trees, prioritize sequence\ngain or sequence\
    \ loss. This can be thought of as\nassigning a lower cost to sequence insertions\
    \ relative\nto deletions, or vice-versa. When priority='gain',\nambiguity is resolved\
    \ by assigning 0 state to the root\nnode, such that sequence presence on a descendant\n\
    branch will be interpreted as a gain. When\npriority='loss', ambiguity is resolved\
    \ by asssigning\nstate 1 to the root node, such that sequence absence\nin a descendant\
    \ node is interpreted as a sequence\nloss. Default=gain (default: gain)"
  args: !ChoiceFlagArg
    choices: !!set
      gain:
      loss:
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "usage: mapGL.py [-h] [-o FILE] [-t FLOAT] [-g GAP] [-v {info,debug,silent}]\n\
  \                [-d] [-i {BED,narrowPeak}] [-f] [-n] [-p {gain,loss}]\n       \
  \         input tree qname tname alignments [alignments ...]\n\nLabel input regions\
  \ as orthologous, gained in the query species, or lost in\nthe target species. Chain\
  \ alignment files are used to map features from query\nto target and one or more\
  \ outgroup species. Features that map directly from\nquery to target are labeled\
  \ as orthologs, and ortholgous coordinates in the\ntarget species are given in the\
  \ output. Non-mapping features are assigned as\ngains or losses based on a maximum-parsimony\
  \ algorithm predicting\npresence/absence in the most-recent common ancestor. Based\
  \ on bnMapper.py, by\nOgert Denas (James Taylor lab) (https://github.com/bxlab/bx-\n\
  python/blob/master/scripts/bnMapper.py)\n\npositional arguments:\n  input      \
  \           Input regions to process. Should be in standard bed\n              \
  \          format. Only the first four bed fields will be used.\n  tree        \
  \          Tree, in standard Newick format, with or without\n                  \
  \      branch lengths, describing relationships of query and\n                 \
  \       target species to outgroups. May be given as a string\n                \
  \        or file.\n  qname                 Name of the query species. Regions from\
  \ this species\n                        will be mapped to target species coordinates.\n\
  \  tname                 Name of the target species. Regions from the query\n  \
  \                      species will be mapped to coordinates from this\n       \
  \                 species.\n  alignments            Alignment files (.chain or .pkl):\
  \ One for the target\n                        species and one per outgroup species.\
  \ Files should be\n                        named according to the convention:\n\
  \                        qname.tname[...].chain.gz, where qname is the query\n \
  \                       species name and tname is the name of the\n            \
  \            target/outgroup species. Names used for qname and\n               \
  \         tname must match names used in the newick tree.\n\noptional arguments:\n\
  \  -h, --help            show this help message and exit\n  -o FILE, --output FILE\n\
  \                        Output file. Default stdout. (default: stdout)\n  -t FLOAT,\
  \ --threshold FLOAT\n                        Mapping threshold i.e., |elem| * threshold\
  \ <=\n                        |mapped_elem|. Default = 0.0 -- equivalent to\n  \
  \                      accepting a single-base overlap. On the other end of\n  \
  \                      the spectrum, setting this value to 1 is equivalent to\n\
  \                        only accepting full-length overlaps. (default: 0.0)\n \
  \ -g GAP, --gap GAP     Ignore elements with an insertion/deletion of this or\n\
  \                        bigger size. Using the default value (-1) will allow\n\
  \                        gaps of any size. (default: -1)\n  -v {info,debug,silent},\
  \ --verbose {info,debug,silent}\n                        Verbosity level (default:\
  \ info)\n  -d, --drop_split      If elements span multiple chains, report them as\
  \ non-\n                        mapping. These will then be reported as gains or\n\
  \                        losses, according to the maximum-parsimony\n          \
  \              predictions. This is the default mapping behavior for\n         \
  \               bnMapper. By default, mapGL.pys will follow the\n              \
  \          mapping convention used by liftOver, whereas the\n                  \
  \      longest mapped alignment is reported for split\n                        elements.\
  \ (default: False)\n  -i {BED,narrowPeak}, --in_format {BED,narrowPeak}\n      \
  \                  Input file format. (Default: BED) (default: BED)\n  -f, --full_labels\
  \     Attempt to predict gain/loss events on all branches of\n                 \
  \       the tree, not just query/target branches. Output will\n                \
  \        include a comma-delimited list of gain/loss events\n                  \
  \      from any/all affected branches. (default: False)\n  -n, --no_prune      \
  \  Do not attempt to disambiguate the root state to\n                        resolve\
  \ ambiguous gain/loss predictions. Instead,\n                        label affected\
  \ features as 'ambiguous'. (default:\n                        False)\n  -p {gain,loss},\
  \ --priority {gain,loss}\n                        When resolving ambiguous trees,\
  \ prioritize sequence\n                        gain or sequence loss. This can be\
  \ thought of as\n                        assigning a lower cost to sequence insertions\
  \ relative\n                        to deletions, or vice-versa. When priority='gain',\n\
  \                        ambiguity is resolved by assigning 0 state to the root\n\
  \                        node, such that sequence presence on a descendant\n   \
  \                     branch will be interpreted as a gain. When\n             \
  \           priority='loss', ambiguity is resolved by asssigning\n             \
  \           state 1 to the root node, such that sequence absence\n             \
  \           in a descendant node is interpreted as a sequence\n                \
  \        loss. Default=gain (default: gain)\n\nAdam Diehl (Boyle Lab)\n"
generated_using:
- --help
docker_image: quay.io/biocontainers/mapgl:1.3.1--pyh5ca1d4c_0
