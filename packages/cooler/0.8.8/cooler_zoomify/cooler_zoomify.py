from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, Boolean, String, File

Cooler_Zoomify_V0_1_0 = CommandToolBuilder(tool="cooler_zoomify", base_command=["cooler", "zoomify"], inputs=[ToolInput(tag="in_nproc", input_type=Int(optional=True), prefix="--nproc", doc=InputDocumentation(doc="Number of processes to use for batch processing\nchunks of pixels [default: 1, i.e. no process pool]")), ToolInput(tag="in_chunksize", input_type=Int(optional=True), prefix="--chunksize", doc=InputDocumentation(doc="Number of pixels allocated to each process\n[default: 10000000]")), ToolInput(tag="in_resolutions", input_type=Int(optional=True), prefix="--resolutions", doc=InputDocumentation(doc="Comma-separated list of target resolutions. Use\nsuffixes B or N to specify a progression: B for\nbinary (geometric steps of factor 2), N for nice\n(geometric steps of factor 10 interleaved with\nsteps of 2 and 5). Examples:\n1000B=1000,2000,4000,8000,...\n1000N=1000,2000,5000,10000,...\n5000N=5000,10000,25000,50000,... 4DN is an alias\nfor 1000,2000,5000N [default: B]")), ToolInput(tag="in_balance", input_type=Boolean(optional=True), prefix="--balance", doc=InputDocumentation(doc="Apply balancing to each zoom level. Off by default.")), ToolInput(tag="in_balance_args", input_type=String(optional=True), prefix="--balance-args", doc=InputDocumentation(doc="Additional arguments to pass to cooler balance")), ToolInput(tag="in_base_uri", input_type=String(optional=True), prefix="--base-uri", doc=InputDocumentation(doc="One or more additional base coolers to aggregate\nfrom, if needed.")), ToolInput(tag="in_out", input_type=File(optional=True), prefix="--out", doc=InputDocumentation(doc="Output file or URI")), ToolInput(tag="in_field", input_type=String(optional=True), prefix="--field", doc=InputDocumentation(doc="Specify the names of value columns to merge as\n'<name>'. Repeat the `--field` option for each one.\nUse '<name>:dtype=<dtype>' to specify the dtype.\nInclude ',agg=<agg>' to specify an aggregation\nfunction different from 'sum'.")), ToolInput(tag="in_legacy", input_type=Boolean(optional=True), prefix="--legacy", doc=InputDocumentation(doc="Use the legacy layout of integer-labeled zoom")), ToolInput(tag="in_levels_dot", input_type=String(), position=0, doc=InputDocumentation(doc="-h, --help               Show this message and exit."))], outputs=[ToolOutput(tag="out_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out", type_hint=File()), doc=OutputDocumentation(doc="Output file or URI"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Cooler_Zoomify_V0_1_0().translate("wdl", allow_empty_container=True)

