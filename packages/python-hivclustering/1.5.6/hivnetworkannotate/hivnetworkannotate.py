from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean, String, Int

Hivnetworkannotate_V0_1_0 = CommandToolBuilder(tool="hivnetworkannotate", base_command=["hivnetworkannotate"], inputs=[ToolInput(tag="in_output_annotated_file", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="[OUTPUT], --output [OUTPUT]\nOutput the annotated JSON network file to")), ToolInput(tag="in_input_network_file", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="[NETWORK], --network [NETWORK]\nThe input network file to process")), ToolInput(tag="in_missing_missing_missingif", input_type=String(optional=True), prefix="-x", doc=InputDocumentation(doc="MISSING, --missing MISSING MISSING\nIf desired, provide a value to inject for nodes that\ndo not have an attribute value specified")), ToolInput(tag="in_clear", input_type=Boolean(optional=True), prefix="--clear", doc=InputDocumentation(doc="Flush existing attributes")), ToolInput(tag="in_index", input_type=String(optional=True), prefix="--index", doc=InputDocumentation(doc="The name of the column that indexes records (patient\nID); default is to index on the first column")), ToolInput(tag="in_in_place", input_type=Boolean(optional=True), prefix="--inplace", doc=InputDocumentation(doc="Write attributes to the input file (cannot be stdin)")), ToolInput(tag="in_attributes", input_type=File(optional=True), prefix="--attributes", doc=InputDocumentation(doc="The JSON file with node attributes")), ToolInput(tag="in_tab", input_type=File(optional=True), prefix="--tab", doc=InputDocumentation(doc="A TSV file with node attributes")), ToolInput(tag="in_csv", input_type=File(optional=True), prefix="--csv", doc=InputDocumentation(doc="A CSV file with node attributes")), ToolInput(tag="in_field_field_field", input_type=Int(optional=True), prefix="-f", doc=InputDocumentation(doc="FIELD FIELD FIELD, --field FIELD FIELD FIELD FIELD\nDescribe an argument to be added to invididual nodes\nas 'name' 'label' 'type' 'transform'; currently\nsupported types are 'String', 'enum', 'Date',\n'Number'; transform must be specified as a lambda, an\nempty string to use an identity map, or a python style\ndict to specify an enum; 'fulldate' is a predefined\noption to reformat the date using the default\nhivtrace-viz format\n")), ToolInput(tag="in_output", input_type=String(optional=True), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_network", input_type=String(optional=True), position=1, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output_annotated_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_annotated_file", type_hint=File()), doc=OutputDocumentation(doc="[OUTPUT], --output [OUTPUT]\nOutput the annotated JSON network file to"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Hivnetworkannotate_V0_1_0().translate("wdl", allow_empty_container=True)

