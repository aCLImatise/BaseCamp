from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Boolean, Int

Phylocsf_Linux_X86_64_V0_1_0 = CommandToolBuilder(tool="PhyloCSF.Linux.x86_64", base_command=["PhyloCSF.Linux.x86_64"], inputs=[ToolInput(tag="in_strategy", input_type=String(optional=True), prefix="--strategy", doc=InputDocumentation(doc="|fixed|omega\nevaluation strategy (default mle)")), ToolInput(tag="in_files", input_type=Boolean(optional=True), prefix="--files", doc=InputDocumentation(doc="input list(s) of alignment filenames instead of\nindividual alignment(s)")), ToolInput(tag="in_remove_ref_gaps", input_type=Boolean(optional=True), prefix="--removeRefGaps", doc=InputDocumentation(doc="automatically remove any alignment columns that are\ngapped in the reference sequence (nucleotide columns\nare removed individually; be careful about reading\nframe). By default, it is an error for the reference\nsequence to contain gaps")), ToolInput(tag="in_species", input_type=Int(optional=True), prefix="--species", doc=InputDocumentation(doc=",Species2,...\nhint that only this subset of species will be used in\nany of the alignments; this does not change the\ncalculation mathematically, but can speed it up")), ToolInput(tag="in_fone", input_type=Boolean(optional=True), prefix="-f1", doc=InputDocumentation(doc="|3|6, --frames=1|3|6\nhow many reading frames to search (default 1)")), ToolInput(tag="in_orf", input_type=Int(optional=True), prefix="--orf", doc=InputDocumentation(doc="|ATGStop|StopStop|StopStop3|ToFirstStop|FromLastStop|ToOrFromStop\nsearch for ORFs (default AsIs)")), ToolInput(tag="in_min_codons", input_type=Int(optional=True), prefix="--minCodons", doc=InputDocumentation(doc="minimum ORF length for searching over ORFs (default 25\ncodons)")), ToolInput(tag="in_all_scores", input_type=Boolean(optional=True), prefix="--allScores", doc=InputDocumentation(doc="report scores of all regions evaluated, not just the")), ToolInput(tag="in_bls", input_type=Boolean(optional=True), prefix="--bls", doc=InputDocumentation(doc="include alignment branch length score (BLS) for the\nreported region in output")), ToolInput(tag="in_anc_comp", input_type=Boolean(optional=True), prefix="--ancComp", doc=InputDocumentation(doc="include ancestral sequence composition score in output")), ToolInput(tag="in_dna", input_type=Boolean(optional=True), prefix="--dna", doc=InputDocumentation(doc="include DNA sequence in output, the part of the\nreference (first) sequence whose score is reported")), ToolInput(tag="in_aa", input_type=Boolean(optional=True), prefix="--aa", doc=InputDocumentation(doc="include amino acid translation in output")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="print extra information about parameters and errors")), ToolInput(tag="in_max", input_type=Int(), position=0, doc=InputDocumentation(doc="-pINT               search frames/ORFs using up to p parallel subprocesses"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Phylocsf_Linux_X86_64_V0_1_0().translate("wdl", allow_empty_container=True)

