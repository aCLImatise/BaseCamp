from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, File, Float, Boolean, String

Extract_Coverage_Intervals_V0_1_0 = CommandToolBuilder(tool="extract_coverage_intervals", base_command=["extract_coverage_intervals"], inputs=[ToolInput(tag="in_region_interested_bed", input_type=Int(optional=True), prefix="-r", doc=InputDocumentation(doc="Region of interested in BED format, e.g.\nHXB2:2253-3869. Loci are interpreted using 0-based\nindexing, and a half-open interval is used, i.e,\n[start:end) (default: None)")), ToolInput(tag="in_cf", input_type=File(optional=True), prefix="-cf", doc=InputDocumentation(doc="File containing coverage per locus per sample. Samples\nare expected as columns and loci as rows. This option\nis not compatible with the read-window overlap\nthresholding (default: None)")), ToolInput(tag="in_minimum_read_depth", input_type=Int(optional=True), prefix="-c", doc=InputDocumentation(doc="Minimum read depth per window (default: 100)")), ToolInput(tag="in_threshold_overlap_read", input_type=Float(optional=True), prefix="-f", doc=InputDocumentation(doc="Threshold on the overlap between each read and the\nwindow (default: 0.85)")), ToolInput(tag="in_len_window_length", input_type=Int(optional=True), prefix="-w", doc=InputDocumentation(doc=",len2,...      Window length used by ShoRAH (default: 201)")), ToolInput(tag="in_shift_window_shifts", input_type=Int(optional=True), prefix="-s", doc=InputDocumentation(doc=", shift2, ...\nWindow shifts used by ShoRAH (default: 67)")), ToolInput(tag="in_name_patientsample_identifiers", input_type=Int(optional=True), prefix="-N", doc=InputDocumentation(doc=",name2,...    Patient/sample identifiers as comma separated strings\n(default: None)")), ToolInput(tag="in_indicate_apply_onintervals", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc="Indicate whether to apply a more liberal shift on\nintervals' right-endpoint (default: False)")), ToolInput(tag="in_no_shor_ah", input_type=Boolean(optional=True), prefix="--no-shorah", doc=InputDocumentation(doc="Inidcate whether to report regions with sufficient\ncoverage rather than windows for SNV calling using\nShoRAH (default: False)")), ToolInput(tag="in_number_threads_default", input_type=Int(optional=True), prefix="-t", doc=InputDocumentation(doc="Number of threads (default: 1)")), ToolInput(tag="in_output_file_name", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="Output file name (default: coverage_intervals.tsv)")), ToolInput(tag="in_bam", input_type=String(), position=0, doc=InputDocumentation(doc="Input BAM file(s)"))], outputs=[ToolOutput(tag="out_output_file_name", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_file_name", type_hint=File()), doc=OutputDocumentation(doc="Output file name (default: coverage_intervals.tsv)"))], container="quay.io/biocontainers/smallgenomeutilities:0.3.2--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Extract_Coverage_Intervals_V0_1_0().translate("wdl")

