from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Directory, String

Funannotate_Compare_V0_1_0 = CommandToolBuilder(tool="funannotate_compare", base_command=["funannotate", "compare"], inputs=[ToolInput(tag="in_input", input_type=Boolean(optional=True), prefix="--input", doc=InputDocumentation(doc="List of funannotate genome folders or GBK files")), ToolInput(tag="in_out", input_type=Directory(optional=True), prefix="--out", doc=InputDocumentation(doc="Output folder name. Default: funannotate_compare")), ToolInput(tag="in_database", input_type=Boolean(optional=True), prefix="--database", doc=InputDocumentation(doc="Path to funannotate database. Default: $FUNANNOTATE_DB")), ToolInput(tag="in_cpus", input_type=Boolean(optional=True), prefix="--cpus", doc=InputDocumentation(doc="Number of CPUs to use. Default: 2")), ToolInput(tag="in_run_dnds", input_type=Boolean(optional=True), prefix="--run_dnds", doc=InputDocumentation(doc="Calculate dN/dS ratio on all orthologs. [estimate,full]")), ToolInput(tag="in_go_fdr", input_type=Boolean(optional=True), prefix="--go_fdr", doc=InputDocumentation(doc="P-value for FDR GO-enrichment. Default: 0.05")), ToolInput(tag="in_heat_map_stdev", input_type=Boolean(optional=True), prefix="--heatmap_stdev", doc=InputDocumentation(doc="Cut-off for heatmap. Default: 1.0")), ToolInput(tag="in_num_or_thos", input_type=Boolean(optional=True), prefix="--num_orthos", doc=InputDocumentation(doc="Number of Single-copy orthologs to use for ML. Default: 500")), ToolInput(tag="in_bootstrap", input_type=Boolean(optional=True), prefix="--bootstrap", doc=InputDocumentation(doc="Number of boostrap replicates to run with RAxML. Default: 100")), ToolInput(tag="in_out_group", input_type=Boolean(optional=True), prefix="--outgroup", doc=InputDocumentation(doc="Name of species to use for ML outgroup. Default: no outgroup")), ToolInput(tag="in_protein_ortho", input_type=Boolean(optional=True), prefix="--proteinortho", doc=InputDocumentation(doc="Proteinortho POFF results. in TSV format.")), ToolInput(tag="in_ml_method", input_type=Boolean(optional=True), prefix="--ml_method", doc=InputDocumentation(doc="Maxmimum Liklihood method: Default: iqtree [raxml,iqtree]")), ToolInput(tag="in_no_progress", input_type=Boolean(optional=True), prefix="--no-progress", doc=InputDocumentation(doc="Do not print progress to stdout for long sub jobs")), ToolInput(tag="in_arguments", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_out", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_out", type_hint=File()), doc=OutputDocumentation(doc="Output folder name. Default: funannotate_compare"))], container="quay.io/biocontainers/funannotate:1.8.5--pyh3252c3a_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Funannotate_Compare_V0_1_0().translate("wdl")

