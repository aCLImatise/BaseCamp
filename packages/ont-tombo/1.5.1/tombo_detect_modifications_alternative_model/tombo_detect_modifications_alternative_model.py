from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Array, Int, File, String, Boolean

Tombo_Detect_Modifications_Alternative_Model_V0_1_0 = CommandToolBuilder(tool="tombo_detect_modifications_alternative_model", base_command=["tombo", "detect_modifications", "alternative_model"], inputs=[ToolInput(tag="in_fast_five_based_irs", input_type=Array(t=Int(), optional=True), prefix="--fast5-basedirs", doc=InputDocumentation(doc="Directories containing fast5 files.")), ToolInput(tag="in_statistics_file_basename", input_type=File(optional=True), prefix="--statistics-file-basename", doc=InputDocumentation(doc="File base name to save base by base statistics from\ntesting. Filenames will be [--statistics-file-\nbasename].[--alternate-bases]?.tombo.stats")), ToolInput(tag="in_alternate_bases", input_type=String(optional=True), prefix="--alternate-bases", doc=InputDocumentation(doc="[{dcm,5mC,6mA,dam,CpG} ...]\nDefault non-standard base model for testing (not\nrequired if user created --alternate-model-filenames\nis provided).")), ToolInput(tag="in_print_available_models", input_type=Boolean(optional=True), prefix="--print-available-models", doc=InputDocumentation(doc="Print available alternative models and exit.")), ToolInput(tag="in_dna", input_type=Boolean(optional=True), prefix="--dna", doc=InputDocumentation(doc="Explicitly select canonical DNA model. Default:\nAutomatically determine from FAST5s")), ToolInput(tag="in_rna", input_type=Boolean(optional=True), prefix="--rna", doc=InputDocumentation(doc="Explicitly select canonical RNA model. Default:\nAutomatically determine from FAST5s")), ToolInput(tag="in_minimum_test_reads", input_type=Int(optional=True), prefix="--minimum-test-reads", doc=InputDocumentation(doc="Number of reads required at a position to perform\nsignificance testing or contribute to model\nestimation. Default: 1")), ToolInput(tag="in_single_read_threshold", input_type=Array(t=String(), optional=True), prefix="--single-read-threshold", doc=InputDocumentation(doc="Log likelihood ratio threshold when computing fraction\nof significant reads at each genomic position. If two\nvalues are provided, statistics between these values\nare not considered. Default thresholds: DNA:-1.5-2.5 ,\nRNA:-2.5-2.5")), ToolInput(tag="in_standard_log_likelihood_ratio", input_type=Boolean(optional=True), prefix="--standard-log-likelihood-ratio", doc=InputDocumentation(doc="Use a standard log likelihood ratio (LLR) statistic.\nDefault is to use an outlier-robust LLR-like\nstatistic. Detail in full online documentation.")), ToolInput(tag="in_coverage_dampen_counts", input_type=Int(optional=True), prefix="--coverage-dampen-counts", doc=InputDocumentation(doc="COVERAGE_DAMPEN_COUNTS\nDampen fraction modified estimates for low coverage\nsites. Two parameters are unmodified and modified\npseudo read counts. This is equivalent to a beta prior\non the fraction estimate. Set to '0 0' to disable\ndampened fraction estimation. Default: [2, 0]")), ToolInput(tag="in_per_read_statistics_basename", input_type=String(optional=True), prefix="--per-read-statistics-basename", doc=InputDocumentation(doc="Base for binary files containing per-read statistics\nfrom statistical testing. Filenames will be [--per-\nread-statistics-basename].[--alternate-\nbases]?.tombo.per_read_stats")), ToolInput(tag="in_num_most_significant_stored", input_type=Int(optional=True), prefix="--num-most-significant-stored", doc=InputDocumentation(doc="Number of the most significant sites to store for\nfaster access. If a longer list of most significant\nsites is required the list must be re-computed from\nall batches. Very large values can increase RAM usage.\nDefault: 100000")), ToolInput(tag="in_multiprocess_region_size", input_type=Int(optional=True), prefix="--multiprocess-region-size", doc=InputDocumentation(doc="Size of regions over which to multiprocesses statistic\ncomputation. For very deep samples a smaller value is\nrecommmended in order to control memory consumption.\nDefault: 10000")), ToolInput(tag="in_processes", input_type=Int(optional=True), prefix="--processes", doc=InputDocumentation(doc="Number of processes. Default: 1")), ToolInput(tag="in_corrected_group", input_type=Int(optional=True), prefix="--corrected-group", doc=InputDocumentation(doc="FAST5 group created by resquiggle command. Default:\nRawGenomeCorrected_000")), ToolInput(tag="in_base_call_subgroups", input_type=Array(t=String(), optional=True), prefix="--basecall-subgroups", doc=InputDocumentation(doc="FAST5 subgroup(s) (under /Analyses/[--basecall-\ngroup]/) containing basecalls and created within\n[--corrected-group] containing re-squiggle results.\nDefault: ['BaseCalled_template']")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="Don't print status information."))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Tombo_Detect_Modifications_Alternative_Model_V0_1_0().translate("wdl", allow_empty_container=True)

