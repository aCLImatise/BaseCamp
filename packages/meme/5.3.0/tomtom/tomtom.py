from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Directory, Boolean, File, Float, String, Int

Tomtom_V0_1_0 = CommandToolBuilder(tool="tomtom", base_command=["tomtom"], inputs=[ToolInput(tag="in_name_directory_not", input_type=Directory(optional=True), prefix="-o", doc=InputDocumentation(doc="Name of directory for output files;\nwill not replace existing directory")), ToolInput(tag="in_oc", input_type=Directory(optional=True), prefix="-oc", doc=InputDocumentation(doc="Name of directory for output files;\nwill replace existing directory")), ToolInput(tag="in_x_alph", input_type=Boolean(optional=True), prefix="-xalph", doc=InputDocumentation(doc="Convert the alphabet of the target motif databases\nto the alphabet of the query motif database\nassuming the core symbols of the target motif\nalphabet are a subset; default: reject differences")), ToolInput(tag="in_b_file", input_type=File(optional=True), prefix="-bfile", doc=InputDocumentation(doc="Name of background file;\ndefault: use the background from the query\nmotif database")), ToolInput(tag="in_motif_pseudo", input_type=Float(optional=True), prefix="-motif-pseudo", doc=InputDocumentation(doc="Apply the pseudocount to the query and target motifs;\ndefault: apply a pseudocount of 0.1")), ToolInput(tag="in_use_motifs_specified", input_type=String(optional=True), prefix="-m", doc=InputDocumentation(doc="Use only query motifs with a specified id;\nmay be repeated")), ToolInput(tag="in_mi", input_type=String(optional=True), prefix="-mi", doc=InputDocumentation(doc="Use only query motifs with a specifed index;\nmay be repeated")), ToolInput(tag="in_thresh", input_type=Float(optional=True), prefix="-thresh", doc=InputDocumentation(doc="Significance threshold; default: 0.5")), ToolInput(tag="in_evalue", input_type=Boolean(optional=True), prefix="-evalue", doc=InputDocumentation(doc="Use E-value threshold; default: q-value")), ToolInput(tag="in_dist", input_type=Int(optional=True), prefix="-dist", doc=InputDocumentation(doc="|ed|kullback|pearson|sandelin|blic1|blic5|llr1|llr5\nDistance metric for scoring alignments;\ndefault: ed")), ToolInput(tag="in_internal", input_type=Boolean(optional=True), prefix="-internal", doc=InputDocumentation(doc="Only allow internal alignments;\ndefault: allow overhangs")), ToolInput(tag="in_min_overlap", input_type=Int(optional=True), prefix="-min-overlap", doc=InputDocumentation(doc="Minimum overlap between query and target;\ndefault: 1")), ToolInput(tag="in_norc", input_type=Boolean(optional=True), prefix="-norc", doc=InputDocumentation(doc="Do not score the reverse complements of targets")), ToolInput(tag="in_incomplete_scores", input_type=Boolean(optional=True), prefix="-incomplete-scores", doc=InputDocumentation(doc="Ignore unaligned columns in computing scores\ndefault: use complete set of columns")), ToolInput(tag="in_text", input_type=Boolean(optional=True), prefix="-text", doc=InputDocumentation(doc="Output in text (TSV) format to stdout;\noverrides -o and -oc;\ndefault: output all formats to files in <output dir>")), ToolInput(tag="in_png", input_type=Boolean(optional=True), prefix="-png", doc=InputDocumentation(doc="Create PNG logos; default: don't create PNG logos")), ToolInput(tag="in_eps", input_type=Boolean(optional=True), prefix="-eps", doc=InputDocumentation(doc="Create EPS logos; default: don't create EPS logos")), ToolInput(tag="in_no_ssc", input_type=Boolean(optional=True), prefix="-no-ssc", doc=InputDocumentation(doc="Don't apply small-sample correction to logos;\ndefault: use small-sample correction")), ToolInput(tag="in_time", input_type=Int(optional=True), prefix="-time", doc=InputDocumentation(doc="quit before <time> CPU seconds consumed\n<time> must be > 0. The Default is unlimited CPU time")), ToolInput(tag="in_verbosity", input_type=Boolean(optional=True), prefix="-verbosity", doc=InputDocumentation(doc="[1|2|3|4]\nSet the verbosity of the program; default: 2 (normal)")), ToolInput(tag="in_version", input_type=Boolean(optional=True), prefix="-version", doc=InputDocumentation(doc="Print the version and exit")), ToolInput(tag="in_query_file", input_type=File(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_target_file", input_type=File(), position=1, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_name_directory_not", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_name_directory_not", type_hint=File()), doc=OutputDocumentation(doc="Name of directory for output files;\nwill not replace existing directory")), ToolOutput(tag="out_oc", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_oc", type_hint=File()), doc=OutputDocumentation(doc="Name of directory for output files;\nwill replace existing directory"))], container="quay.io/biocontainers/meme:5.3.0--py38pl526hc1f1133_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Tomtom_V0_1_0().translate("wdl")

