from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, Boolean, File, String

Psp_Gen_V0_1_0 = CommandToolBuilder(tool="psp_gen", base_command=["psp-gen"], inputs=[ToolInput(tag="in_min_w", input_type=Int(optional=True), prefix="-minw", doc=InputDocumentation(doc="minimum width of motif to consider\ndefault: 4")), ToolInput(tag="in_max_w", input_type=Int(optional=True), prefix="-maxw", doc=InputDocumentation(doc="maximum width of motif to consider\ndefault: 20")), ToolInput(tag="in_dna", input_type=Boolean(optional=True), prefix="-dna", doc=InputDocumentation(doc="use DNA alphabet; this is the default")), ToolInput(tag="in_protein", input_type=Boolean(optional=True), prefix="-protein", doc=InputDocumentation(doc="use protein alphabet")), ToolInput(tag="in_rna", input_type=Boolean(optional=True), prefix="-rna", doc=InputDocumentation(doc="use RNA alphabet")), ToolInput(tag="in_alph", input_type=File(optional=True), prefix="-alph", doc=InputDocumentation(doc="use the alphabet defined in the file")), ToolInput(tag="in_triples", input_type=Boolean(optional=True), prefix="-triples", doc=InputDocumentation(doc="use spaced triples for matches\ndefault: do exact matches of w-mers")), ToolInput(tag="in_fixed_start", input_type=Boolean(optional=True), prefix="-fixedstart", doc=InputDocumentation(doc="for triples, anchor the start when scoring\ntriples of width < w\ndefault: allow start to move")), ToolInput(tag="in_equiv", input_type=String(optional=True), prefix="-equiv", doc=InputDocumentation(doc="specifiy sets of symbols that should be considered\nequalivent; sets should be separated with a '-',\nunless the alphabet contains a dash in which case\nthe option may be specified multiple times;\neg. for protein -equiv 'IVL-HKR' means treat all\noccurrences of I, V or L (or any of their aliases\nin the alphabet) as the same and all occurrences of\nH, K, R as the same")), ToolInput(tag="in_rev_comp", input_type=Boolean(optional=True), prefix="-revcomp", doc=InputDocumentation(doc="count reverse complements in computing scores\ndefault: only count forward matches")), ToolInput(tag="in_scale_min", input_type=Int(optional=True), prefix="-scalemin", doc=InputDocumentation(doc="scale scores to mimumum <number>\ndefault: 0.1 or 1-scalemax if set")), ToolInput(tag="in_scale_max", input_type=Int(optional=True), prefix="-scalemax", doc=InputDocumentation(doc="scale scores to maximum of <number>\ndefault: 0.9 or 1-scalemin if set")), ToolInput(tag="in_max_range", input_type=Boolean(optional=True), prefix="-maxrange", doc=InputDocumentation(doc="instead of choosing W with maximum score choose W with\nmaximum difference between maximum and minimum scores")), ToolInput(tag="in_raw", input_type=Boolean(optional=True), prefix="-raw", doc=InputDocumentation(doc="output scores instead of priors")), ToolInput(tag="in_report_scores", input_type=Boolean(optional=True), prefix="-reportscores", doc=InputDocumentation(doc="report pos and neg file names, min and max scores,\nmin and max w : tab-separated to STDERR")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="-verbose", doc=InputDocumentation(doc="send stats to stderr reporting frequency of each")), ToolInput(tag="in_pos", input_type=File(optional=True), prefix="-pos", doc=InputDocumentation(doc="sequences likely to contain binding sites")), ToolInput(tag="in_neg", input_type=File(optional=True), prefix="-neg", doc=InputDocumentation(doc="sequences unlikely to contain binding sites")), ToolInput(tag="in_score", input_type=String(), position=0, doc=InputDocumentation(doc="default: do not report statistics")), ToolInput(tag="in_copyright", input_type=String(), position=0, doc=InputDocumentation(doc="(2009) The University of Queensland"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Psp_Gen_V0_1_0().translate("wdl", allow_empty_container=True)

