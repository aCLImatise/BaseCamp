version 1.0

task SimuG {
  input {
    String? man
    String? version
    String? refseq
    Boolean? snp_vcf
    Boolean? snp_count
    Boolean? snp_model
    Boolean? tit_v_ratio
    Boolean? coding_partition_for_snp_simulation
    Boolean? in_del_vcf
    Boolean? in_del_count
    Boolean? in_del_model
    Boolean? ins_del_ratio
    Boolean? in_del_size_power_law_alpha
    Boolean? in_del_size_power_law_constant
    Boolean? cnv_vcf
    Boolean? cnv_count
    Boolean? cnv_gain_loss_ratio
    Boolean? cnv_max_copy_number
    Boolean? cnv_min_size
    Boolean? cnv_max_size
    Boolean? duplication_tandem_dispersed_ratio
    Boolean? inversion_vcf
    Boolean? inversion_count
    Boolean? inversion_min_size
    Boolean? inversion_max_size
    Boolean? inversion_breakpoint_gff
    Boolean? translocation_vcf
    Boolean? translocation_count
    Boolean? translocation_breakpoint_gff
    Boolean? centromere_gff
    Boolean? gene_gff
    Boolean? excluded_chr_list
    Int? seed
    String? prefix
  }
  command <<<
    simuG \
      ~{if defined(man) then ("-man " +  '"' + man + '"') else ""} \
      ~{if defined(version) then ("-version " +  '"' + version + '"') else ""} \
      ~{if defined(refseq) then ("-refseq " +  '"' + refseq + '"') else ""} \
      ~{if (snp_vcf) then "-snp_vcf" else ""} \
      ~{if (snp_count) then "-snp_count" else ""} \
      ~{if (snp_model) then "-snp_model" else ""} \
      ~{if (tit_v_ratio) then "-titv_ratio" else ""} \
      ~{if (coding_partition_for_snp_simulation) then "-coding_partition_for_snp_simulation" else ""} \
      ~{if (in_del_vcf) then "-indel_vcf" else ""} \
      ~{if (in_del_count) then "-indel_count" else ""} \
      ~{if (in_del_model) then "-indel_model" else ""} \
      ~{if (ins_del_ratio) then "-ins_del_ratio" else ""} \
      ~{if (in_del_size_power_law_alpha) then "-indel_size_powerlaw_alpha" else ""} \
      ~{if (in_del_size_power_law_constant) then "-indel_size_powerlaw_constant" else ""} \
      ~{if (cnv_vcf) then "-cnv_vcf" else ""} \
      ~{if (cnv_count) then "-cnv_count" else ""} \
      ~{if (cnv_gain_loss_ratio) then "-cnv_gain_loss_ratio" else ""} \
      ~{if (cnv_max_copy_number) then "-cnv_max_copy_number" else ""} \
      ~{if (cnv_min_size) then "-cnv_min_size" else ""} \
      ~{if (cnv_max_size) then "-cnv_max_size" else ""} \
      ~{if (duplication_tandem_dispersed_ratio) then "-duplication_tandem_dispersed_ratio" else ""} \
      ~{if (inversion_vcf) then "-inversion_vcf" else ""} \
      ~{if (inversion_count) then "-inversion_count" else ""} \
      ~{if (inversion_min_size) then "-inversion_min_size" else ""} \
      ~{if (inversion_max_size) then "-inversion_max_size" else ""} \
      ~{if (inversion_breakpoint_gff) then "-inversion_breakpoint_gff" else ""} \
      ~{if (translocation_vcf) then "-translocation_vcf" else ""} \
      ~{if (translocation_count) then "-translocation_count" else ""} \
      ~{if (translocation_breakpoint_gff) then "-translocation_breakpoint_gff" else ""} \
      ~{if (centromere_gff) then "-centromere_gff" else ""} \
      ~{if (gene_gff) then "-gene_gff" else ""} \
      ~{if (excluded_chr_list) then "-excluded_chr_list" else ""} \
      ~{if defined(seed) then ("-seed " +  '"' + seed + '"') else ""} \
      ~{if defined(prefix) then ("-prefix " +  '"' + prefix + '"') else ""}
  >>>
  runtime {
    docker: "quay.io/biocontainers/simug:1.0.0--hdfd78af_1"
  }
  parameter_meta {
    man: "Print more detailed help message. Example: -m."
    version: "Print version information. Example: -v."
    refseq: "Specify the reference genome to be used as the template (in\\nfasta or fasta.gz format). This option is mandatory. Default =\\n\\\"\\\". Example: -refseq ref.genome.fa(.gz)."
    snp_vcf: "Specify the list of exact SNP variants to be introduced (in vcf\\nor vcf.gz format). When specified, the options '-snp_count',\\n'-snp_model', and '-titv_ratio' will be ignored. If there are\\nalso INDEL variants in the vcf file, they will be automatically\\nignored. Default = \\\"\\\". Example: -snp_vcf snp.vcf(.gz)."
    snp_count: "Specify the number of SNP variants to be introduced. Default =\\n\\\"\\\". Example: -snp_count 5000."
    snp_model: "Specify the SNP model file generated by the ancillary script\\nvcf2model.pl. When specified, the option '-titv_ratio' will be\\nignored. Default = \\\"\\\". Example: -snp_model snp_model.txt."
    tit_v_ratio: "Specify the Ti/Tv ratio (transition/transversion ratio) used for\\nsimulate SNP variants. Default = 0.5. Example: -titv_ratio 2.0.\\nFor transition only, set '-titv_ratio Inf'. For transversion\\nonly, set '-titv_ratio 0'."
    coding_partition_for_snp_simulation: "Specify the coding partition (e.g. 'noncoding', 'coding', '2d'\\nor '4d') used for constraining simulate SNP variants within the\\nspecified sites. This option needs to be used together with the\\noption '-gene_gff'. Default = \\\"\\\". Example:\\n-coding_partition_for_snp_simulation 4d for simulating SNP only\\nin 4-fold degenerate (4d) sites."
    in_del_vcf: "Specify the list of exact INDEL variants to be introduced (in\\nvcf or vcf.gz format). When specified, the options\\n'-indel_count', '-indel_model', '-ins_del_ratio',\\n'-indel_size_powerlaw_alpha', and\\n'-indel_size_powerlaw_constant' will be ignored. If there are\\nalso SNP variants in the vcf file, they will be automatically\\nignored. Default = \\\"\\\". Example: -indel_vcf indel.vcf(.gz)."
    in_del_count: "Specify the number of INDEL variants to be introduced. Default =\\n\\\"\\\". Example: -indel_count 500."
    in_del_model: "Specify the INDEL model file generated by the ancillary script\\nvcf2model.pl. When specified, the options '-ins_del_ratio',\\n'-indel_size_powerlaw_alpha', and\\n'-indel_size_powerlaw_constant' will be ignored. Default = \\\"\\\".\\nExample: -indel_model indel_model.txt."
    ins_del_ratio: "Specify the Insertion/Deletion ratio used for simulate INDEL\\nvariants. Default = 1.0. Example: -ins_del_ratio 1.0. For\\ninsertion only, set '-ins_del_ratio Inf'. For deletion only, set\\n'-ins_del_ratio 0'."
    in_del_size_power_law_alpha: "Specify the exponent factor alpha for power-law-fitted indel\\nsize distribution: p = C * (size) ** (alpha) for size >= 1 &\\nsize <= 50. Default = 2.0. Example: -indel_size_powerlaw_alpha\\n2.0."
    in_del_size_power_law_constant: "Specify the exponent factor alpha for power-law-fitted indel\\nsize distribution: p = C * (size) ** (alpha) for size >= 1 &\\nsize <= 50. Default = 0.5. Example:\\n-indel_size_powerlaw_constant 0.5."
    cnv_vcf: "Specify the list of exact CNV variants to be introduced (in vcf\\nor vcf.gz format). When specified, the options '-cnv_count',\\n'-cnv_gain_loss_ratio', '-cnv_max_copy_number', '-cnv_min_size',\\nand '-cnv_max_size' will be ignored. Default = \\\"\\\". Example:\\n-cnv_vcf cnv.vcf."
    cnv_count: "Specify the number of CNV variants to be introduced. Default =\\n\\\"\\\". Example: -cnv_count 50."
    cnv_gain_loss_ratio: "Specify the relative ratio of DNA again over DNA loss. Default =\\n1.0. Example: -cnv_gain_loss_ratio 1.0. For copy number gain\\nonly, set '-cnv_gain_loss Inf'. For copy number loss only, set\\n'-cnv_gain_loss_ratio 0'."
    cnv_max_copy_number: "Specify the maximal copy number for CNV. Default = 10. Example:\\n-cnv_max_copy_number 10."
    cnv_min_size: "Specify the minimal size (in basepair) for CNV variants. Default\\n= 100. Example: -cnv_min_size 100."
    cnv_max_size: "Specify the maximal size (in basepair) for CNV variants. Default\\n= 100000. Example: -cnv_max_size 100."
    duplication_tandem_dispersed_ratio: "Specify the expect frequency ratio between tandem duplication\\nand dispersed duplication for CNV variants. Default = 1.\\nExample: -duplication_tandem_dispersed_ratio 1. For simulating\\ntandem duplication only, set\\n'-duplication_tandem_dispersed_ratio Inf'. For simulating\\ndispersed duplication only, set\\n'-duplication_tandem_dispersed_ratio 0'."
    inversion_vcf: "Specify the list of exact inversions to be introduced (in vcf or\\nvcf.gz format). When specified, the options '-inversion_count',\\n'-inversion_min_size', '-inversion_max_size', and\\n'-inversion_breakpoint_gff' will be ignored. Default = \\\"\\\".\\nExample: -inversion_vcf inversion.vcf(.gz)."
    inversion_count: "Specify the number of inversions to be introduced. Default = \\\"\\\".\\nExample: -inversion_count 5."
    inversion_min_size: "Specify the minimal size (in basepair) for inversion. Default =\\n1000. Example: -inversion_min_size 1000."
    inversion_max_size: "Specify the maximal size (in basepair) for inversion. Default =\\n100000. Example: -inversion_max_size 100000."
    inversion_breakpoint_gff: "Specify the list of potential breakpoints for triggering\\ninversions (in gff3 or gff3.gz format). Default = \\\"\\\". Example:\\n-inversion_breakpoint_gff inversion_breakpoint.gff(.gz)."
    translocation_vcf: "Specify the list of exact translocations to be introduced (in\\nvcf or vcf.gz format). When specified, the options\\n'-translocation_count' and '-sv_breakpoint_gff' will be ignored.\\nDefault = \\\"\\\". Example: -translocation_vcf\\ntransloaction.vcf(.gz)."
    translocation_count: "Specify the number of translocations to be introduced. Default =\\n\\\"\\\". Example: -translocation_count 1."
    translocation_breakpoint_gff: "Specify the list of potential breakpoints for triggering\\ntranslocations (in gff3 or gff3.gz format). Default = \\\"\\\".\\nExample: -translocation_breakpoint_gff\\ntranslocation_breakpoint.gff(.gz)."
    centromere_gff: "Specify centromeres for constraining the random CNV, inversion,\\nand translocation simulation (in gff3 or gff3.gz format). When\\nthis option applied, those potential CNVs that will induce\\ncentromere deletion/duplication as well as the potential\\ninversions and translocations with breakpoints overlapped with\\ndefined centromeres will be disalled. Also, potential\\ntranslocation that will induce dicentric rearranged chromosomes\\nwill be disalled as well. Default = \\\"\\\". Example: -centromere_gff\\ncentromere.gff(.gz)."
    gene_gff: "Specify genes for constraining the random SNP, CNV, inversion,\\nand translocation simulation (in gff3 or gff3.gz format). For\\nrandom SNP simulation, this option needs to be used together\\nwith the option '-coding_partition_for_snp_simulation' to\\nconstrain SNPs simulations only in noncoding regions, coding\\nregions, 2-fold degenerate (2d) sites or 4-fold degenerate (4d)\\nsites. For random CNV, inversion, and translocation simulation,\\napplied this option will disallow simulated breakpoints falling\\non the defined genes. Default = \\\"\\\". Example: -gene_gff\\ngene.gff(.gz)."
    excluded_chr_list: "Specify the name of chromosome(s) to be excluded for introducing\\ngenomic variants (a single-column list file in txt format).\\nDefault = \\\"\\\". Example: -excluded_chr_list excluded_chr_list.txt."
    seed: "Specify an integer as the random seed for the simulation. It is\\nrecommended to set a very big integer for ideal randomness.\\nDefault = \\\"\\\". Example: -seed 201812201903."
    prefix: "Specify the prefix for output files. Default = \\\"output_prefix\\\".\\nExample: -prefix sim.\\n"
  }
  output {
    File out_stdout = stdout()
  }
}