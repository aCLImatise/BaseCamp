from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Boolean, Float, Int

Rsat_Matrix_Scan_V0_1_0 = CommandToolBuilder(tool="rsat_matrix_scan", base_command=["rsat", "matrix-scan"], inputs=[ToolInput(tag="in_last_seq", input_type=String(optional=True), prefix="-last_seq", doc=InputDocumentation(doc="order to select a subset of sequences for quick")), ToolInput(tag="in_two_str", input_type=Boolean(optional=True), prefix="-2str", doc=InputDocumentation(doc="). The maximum size for a CRER is defined by the")), ToolInput(tag="in_return", input_type=Float(optional=True), prefix="-return", doc=InputDocumentation(doc="0.0001 -lth crer_size 20 -uth crer_size 200")), ToolInput(tag="in_matrix_scan", input_type=String(), position=0, doc=InputDocumentation(doc="[1mDESCRIPTION[0m")), ToolInput(tag="in_sequences", input_type=String(), position=0, doc=InputDocumentation(doc="pattern matching")), ToolInput(tag="in_pssm", input_type=String(), position=1, doc=InputDocumentation(doc="[1mUSAGE[0m")), ToolInput(tag="in_where", input_type=String(), position=0, doc=InputDocumentation(doc="[33mproba_M = P(S|M)[0m:")), ToolInput(tag="in_pseudo_counts", input_type=String(), position=0, doc=InputDocumentation(doc="Relative frequencies can be corrected by a pseudo-count (b) to reduce\nthe bias due to the small number of observations.\nThe pseudo-count can be shared either in an equiprobable way,\nS<F''ij=(Nij + b/A)/[SUMi(Nij)+b]>\nor according to residue prior frequencies.\nS<F''ij=(Nij + b*Pi)/[SUMi(Nij)+b]>\nwhere\nPi  is the prior frequency for residue i\nA   is the size of the alphabet (A=4 for DNA).\nb   is the pseudo-count, which is 'shared' between residues according to\ntheir prior frequencies.")), ToolInput(tag="in_papers_dot", input_type=String(), position=0, doc=InputDocumentation(doc="Aerts, S., Thijs, G., Coessens, B., Staes, M., Moreau, Y. & De Moor, B.")), ToolInput(tag="in_eight_one_nine_two_dot", input_type=Int(), position=0, doc=InputDocumentation(doc="Hertz, G.Z. and G.D. Stormo (1999).")), ToolInput(tag="in_distributed_dot", input_type=String(), position=0, doc=InputDocumentation(doc="[1m-m matrixfile[0m")), ToolInput(tag="in_ma_zero_two_two_one_dot_one", input_type=Float(), position=0, doc=InputDocumentation(doc="[1m-matrix_name matrix_name1[,matrix_name2,...][0m")), ToolInput(tag="in_m_zero_zero_two_seven_one", input_type=Int(), position=0, doc=InputDocumentation(doc="[1m-first_seq N[0m")), ToolInput(tag="in_default_dot", input_type=String(), position=0, doc=InputDocumentation(doc="[1m-bg_pseudo #[0m")), ToolInput(tag="in_tss_dot", input_type=String(), position=0, doc=InputDocumentation(doc="Note: in previous versions, -origin was used to specify both")), ToolInput(tag="in_occ", input_type=String(), position=0, doc=InputDocumentation(doc="occ_sum inv_cum exp_occ occ_pval occ_eval occ_sig")), ToolInput(tag="in_occ_sig_rank", input_type=String(), position=1, doc=InputDocumentation(doc="In -window mode, if a threshold is set on pval (e.g. -uth")), ToolInput(tag="in_efficiency_dot", input_type=String(), position=0, doc=InputDocumentation(doc="[1mlimits:[0m limits (start, end) of the input sequences.")), ToolInput(tag="in_sequence", input_type=String(), position=0, doc=InputDocumentation(doc="For each matrix and each score value, calculate the\nstatistical significance of the number of matches. This\nallows to select the score associated with te maximal\nsignificance, on the basis of the matrix-specific\ndistribution, rather than by selecting some a priori\nthreshold.\nFor each motif (M) and each score value (s), the program\nestimates the significance of the observed number of\nmatches (x), given the prior probability (p) to find an\ninstance of this motif with at least this score at a\ngiven position of the sequence. The P-value is\ncalculated using the binomial distribution (Aerts et\nal., 2003).\nThis option requires to specify a background score\ndistribution (option -bg_distrib) to estimate the prior\nprobabilities of motif instances.")), ToolInput(tag="in_options", input_type=String(), position=0, doc=InputDocumentation(doc="matrix-scan -v 1 -return distrib -m matrix.tab -i\nbg_sequences.fta [...]")), ToolInput(tag="in_matrix_dot", input_type=String(), position=0, doc=InputDocumentation(doc="[1mcheck_thresholds[0m"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Rsat_Matrix_Scan_V0_1_0().translate("wdl", allow_empty_container=True)

