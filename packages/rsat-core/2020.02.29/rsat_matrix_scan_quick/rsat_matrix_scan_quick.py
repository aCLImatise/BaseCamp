from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String, Int

Rsat_Matrix_Scan_Quick_V0_1_0 = CommandToolBuilder(tool="rsat_matrix_scan_quick", base_command=["rsat", "matrix-scan-quick"], inputs=[ToolInput(tag="in_read_sequence_specified", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="#                  read sequence from filename # (FASTA format).\nif not specified, the standard input is used.")), ToolInput(tag="in_print_output_filename", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="#                  print the output to filename #.\nif not specified, the standard output is used.")), ToolInput(tag="in_read_matrix_be", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="#                  read the matrix # or first matrix in # (must be in tab format).")), ToolInput(tag="in_bg_file", input_type=Boolean(optional=True), prefix="-bgfile", doc=InputDocumentation(doc="#             use # as background model (must be in INCLUSive format).\nby default an equiprobable model is used.")), ToolInput(tag="in_two_str", input_type=Boolean(optional=True), prefix="-2str", doc=InputDocumentation(doc="scan both DNA strands.")), ToolInput(tag="in_one_str", input_type=Boolean(optional=True), prefix="-1str", doc=InputDocumentation(doc="scan only one DNA strand.")), ToolInput(tag="in_capture_sites_sites", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="#                  capture sites with a score >= #.\ncapture sites with a P-value <= # if -distrib is used.")), ToolInput(tag="in_name", input_type=Boolean(optional=True), prefix="-name", doc=InputDocumentation(doc="#               set the matrix name to #.")), ToolInput(tag="in_distrib", input_type=Boolean(optional=True), prefix="-distrib", doc=InputDocumentation(doc="#            read score distrib file # (generated by matrix-distrib).")), ToolInput(tag="in_decimals", input_type=Boolean(optional=True), prefix="-decimals", doc=InputDocumentation(doc="#           precision parameter for the -return distrib option.")), ToolInput(tag="in_pseudo", input_type=Boolean(optional=True), prefix="-pseudo", doc=InputDocumentation(doc="#             pseudo-count for the matrix (1.0 by default).")), ToolInput(tag="in_first_hit_per_seq", input_type=Boolean(optional=True), prefix="-first_hit_per_seq", doc=InputDocumentation(doc="only report the first hit per sequence.")), ToolInput(tag="in_origin", input_type=Boolean(optional=True), prefix="-origin", doc=InputDocumentation(doc="[start|end|center]\nspecify the origin for the calculation of positions\n(see matrix-scan manual for details).")), ToolInput(tag="in_offset", input_type=Boolean(optional=True), prefix="-offset", doc=InputDocumentation(doc="#             add an offset to the origin (0 by default)")), ToolInput(tag="in_matrix_scan_quick", input_type=String(), position=0, doc=InputDocumentation(doc="VERSION")), ToolInput(tag="in_author", input_type=Int(), position=1, doc=InputDocumentation(doc="AUTHOR")), ToolInput(tag="in_sequences", input_type=String(), position=0, doc=InputDocumentation(doc="pattern matching")), ToolInput(tag="in_pssm", input_type=String(), position=1, doc=InputDocumentation(doc="USAGE        "))], outputs=[ToolOutput(tag="out_print_output_filename", output_type=File(optional=True), selector=InputSelector(input_to_select="in_print_output_filename", type_hint=File()), doc=OutputDocumentation(doc="#                  print the output to filename #.\nif not specified, the standard output is used."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Rsat_Matrix_Scan_Quick_V0_1_0().translate("wdl", allow_empty_container=True)

