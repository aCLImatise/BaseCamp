from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, String, Boolean

Rsat_Footprint_Discovery_V0_1_0 = CommandToolBuilder(tool="rsat_footprint_discovery", base_command=["rsat", "footprint-discovery"], inputs=[ToolInput(tag="in_lth", input_type=Int(optional=True), prefix="-lth", doc=InputDocumentation(doc="1 -lth occ_sig 0 -uth rank 50 \")), ToolInput(tag="in_return", input_type=String(optional=True), prefix="-return", doc=InputDocumentation(doc=",proba,rank -filter  \")), ToolInput(tag="in_bg_model", input_type=String(optional=True), prefix="-bg_model", doc=InputDocumentation(doc="\")), ToolInput(tag="in_bg_file", input_type=Boolean(optional=True), prefix="-bgfile", doc=InputDocumentation(doc=", see below)")), ToolInput(tag="in_unique_species", input_type=Boolean(optional=True), prefix="-unique_species", doc=InputDocumentation(doc=", but at the level of the genus. At this level we")), ToolInput(tag="in_mversionm", input_type=String(), position=0, doc=InputDocumentation(doc="[1mVERSION[0m")), ToolInput(tag="in_sequences", input_type=String(), position=0, doc=InputDocumentation(doc="Motif discovery")), ToolInput(tag="in_org_escherichiacoligcfasmv_taxon", input_type=String(), position=0, doc=InputDocumentation(doc="-v 1 -org Escherichia_coli_GCF_000005845.2_ASM584v2 -taxon Enterobacteriaceae \")), ToolInput(tag="in_moutput_formatm", input_type=String(), position=0, doc=InputDocumentation(doc="[1mOUTPUT FORMAT[0m")), ToolInput(tag="in_feature_map", input_type=String(), position=0, doc=InputDocumentation(doc="NOTE : 'ortho' is replaced by 'leaders' in the filename prefix with")), ToolInput(tag="in_get_orthologs", input_type=String(), position=0, doc=InputDocumentation(doc="dyad-analysis")), ToolInput(tag="in_footprint_scan", input_type=String(), position=1, doc=InputDocumentation(doc="[1mWISH LIST[0m")), ToolInput(tag="in_soon_dot", input_type=String(), position=0, doc=InputDocumentation(doc="[1m-taxa[0m\nSpecify a file containing a list of taxa, each of which will be\nanalyzed separately. The results are stored in a separate folder for\neach taxon. The folder name is defined automatically.")), ToolInput(tag="in_entered_calling_argument", input_type=String(), position=0, doc=InputDocumentation(doc="Multiple-fields can be entered either by calling this argument")), ToolInput(tag="in_fields_dot", input_type=String(), position=0, doc=InputDocumentation(doc="[1m-bg_model taxfreq|org_list|monads|file[0m")), ToolInput(tag="in_organisms_dot", input_type=String(), position=0, doc=InputDocumentation(doc="The file format is one organisms per line, the comment char is ';'")), ToolInput(tag="in_program_dot", input_type=String(), position=0, doc=InputDocumentation(doc="File format: Tab delimited file with three columns.\nID of the query gene (in the query organism)\nID of the reference gene\nID of the reference organism")), ToolInput(tag="in_incomplete_dot", input_type=String(), position=0, doc=InputDocumentation(doc="[1m-sep_genes[0m")), ToolInput(tag="in_distance_dot", input_type=String(), position=0, doc=InputDocumentation(doc="[1m-dist_thr value[0m"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Rsat_Footprint_Discovery_V0_1_0().translate("wdl", allow_empty_container=True)

