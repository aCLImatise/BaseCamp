from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, Int

Rsat_Info_Gibbs_V0_1_0 = CommandToolBuilder(tool="rsat_info_gibbs", base_command=["rsat", "info-gibbs"], inputs=[ToolInput(tag="in_verbosity_set_verbosity", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="#, --verbosity=#   set verbosity to level #\n0 no verbosity\n1 low verbosity\n2 high verbosity\n3 maximal verbosity + debug + trace")), ToolInput(tag="in__input_read", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="#, --input=#       read sequence from # (must be in FASTA format)\nif not specified, the standard input is used")), ToolInput(tag="in__width_set", input_type=Boolean(optional=True), prefix="-w", doc=InputDocumentation(doc="#, --width=#       set the motif width to #\nwhen the option dyad is used # represents the length monad1 + monad2\nEXAMPLE: --length=7")), ToolInput(tag="in_max_spacing", input_type=Boolean(optional=True), prefix="--maxspacing", doc=InputDocumentation(doc="=#        set maximal spacing between motif monad to # (only for dyadic motif).\nin this case the parameter -l corresponds to length of monad1 + monad2 (without spacing)")), ToolInput(tag="in_min_spacing", input_type=Boolean(optional=True), prefix="--minspacing", doc=InputDocumentation(doc="=#        set minimal spacing between motif monad to # (only for dyadic motif).\nin this case the parameter -l corresponds to length of monad1 + monad2 (without spacing)")), ToolInput(tag="in__strand_search", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="#, --strand=#      search in foward strand + or in both strands +-\nEXAMPLE: --strand=+")), ToolInput(tag="in__iter_number", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="#, --iter=#        maximum number of Gibbs sampling iterations")), ToolInput(tag="in_sites", input_type=Boolean(optional=True), prefix="--sites", doc=InputDocumentation(doc="=#             number of motif occurrences that are expected to\nbe found (incompatible with -e)")), ToolInput(tag="in__meansps_mean", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc="#, --mean_sps=#    mean number of motif occurrences (sites) expected per sequence\nthat are expected to be found (incompatible with --sites)\nDEFAULT: 1")), ToolInput(tag="in_z_oops", input_type=Boolean(optional=True), prefix="--zoops", doc=InputDocumentation(doc="try to find 0 or 1 site per sequence")), ToolInput(tag="in_motifs_number_extract", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="#, --motifs=#      number of motifs to extract (one by default)")), ToolInput(tag="in_bgfile_use_background", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc="#, --bgfile=#      use # predefined INCLUSive background model\n[http://homes.esat.kuleuven.be/~thijs/help/help_motifsampler.html#background]\nEXAMPLE --bgfile=mybgfile")), ToolInput(tag="in__dmin_distance", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc="#, --dmin=#        set minimal distance between 2 motif occurrences to #")), ToolInput(tag="in_set_temperature_be", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="#                  set the temperature (should be in range [0.6 1.4])\nDEFAULT: 1.0")), ToolInput(tag="in__nrun_try", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="#  --nrun=#        try to run the Gibbs sampling seach # times")), ToolInput(tag="in_collect", input_type=Boolean(optional=True), prefix="--collect", doc=InputDocumentation(doc="try to collect the N best sites using their weight scores\n(during the collection --dmin and --zoops are not taken into account)")), ToolInput(tag="in_seed_matrix", input_type=Boolean(optional=True), prefix="--seedmatrix", doc=InputDocumentation(doc="=#        start sampling form sites collected by scanning the sequences with matrix #")), ToolInput(tag="in_seed_matrix_sites", input_type=Boolean(optional=True), prefix="--seedmatrix_sites", doc=InputDocumentation(doc="=#  when using seed matrix specify the number of sites for each matrix (n1,n2,n3)")), ToolInput(tag="in_flanks", input_type=Boolean(optional=True), prefix="--flanks", doc=InputDocumentation(doc="=#            when using --seedmatrix add extra # positions around the matrix")), ToolInput(tag="in_r_seed", input_type=Boolean(optional=True), prefix="--rseed", doc=InputDocumentation(doc="=#             set random seed to #")), ToolInput(tag="in_title", input_type=Boolean(optional=True), prefix="--title", doc=InputDocumentation(doc="=#             add title # to output")), ToolInput(tag="in_info_gibbs", input_type=String(), position=0, doc=InputDocumentation(doc="VERSION")), ToolInput(tag="in_author", input_type=Int(), position=1, doc=InputDocumentation(doc="AUTHOR")), ToolInput(tag="in_sequences", input_type=String(), position=0, doc=InputDocumentation(doc="motif discovery"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Rsat_Info_Gibbs_V0_1_0().translate("wdl", allow_empty_container=True)

