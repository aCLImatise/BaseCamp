from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Boolean, Directory, File, Int

Tpage_V0_1_0 = CommandToolBuilder(tool="tpage", base_command=["tpage"], inputs=[ToolInput(tag="in_define", input_type=String(optional=True), prefix="--define", doc=InputDocumentation(doc="=value       Define template variable")), ToolInput(tag="in_interpolate", input_type=Boolean(optional=True), prefix="--interpolate", doc=InputDocumentation(doc="Interpolate '$var' references in text")), ToolInput(tag="in_any_case", input_type=Boolean(optional=True), prefix="--anycase", doc=InputDocumentation(doc="Accept directive keywords in any case.")), ToolInput(tag="in_pre_chomp", input_type=Boolean(optional=True), prefix="--pre_chomp", doc=InputDocumentation(doc="Chomp leading whitespace")), ToolInput(tag="in_post_chomp", input_type=Boolean(optional=True), prefix="--post_chomp", doc=InputDocumentation(doc="Chomp trailing whitespace")), ToolInput(tag="in_trim", input_type=Boolean(optional=True), prefix="--trim", doc=InputDocumentation(doc="Trim blank lines around template blocks")), ToolInput(tag="in_eval_perl", input_type=Boolean(optional=True), prefix="--eval_perl", doc=InputDocumentation(doc="Evaluate [% PERL %] ... [% END %] code blocks")), ToolInput(tag="in_load_perl", input_type=Boolean(optional=True), prefix="--load_perl", doc=InputDocumentation(doc="Load regular Perl modules via USE directive")), ToolInput(tag="in_absolute", input_type=Boolean(optional=True), prefix="--absolute", doc=InputDocumentation(doc="Allow ABSOLUTE directories (enabled by default)")), ToolInput(tag="in_relative", input_type=Boolean(optional=True), prefix="--relative", doc=InputDocumentation(doc="Allow RELATIVE directories (enabled by default)")), ToolInput(tag="in_include_path", input_type=Directory(optional=True), prefix="--include_path", doc=InputDocumentation(doc="Add directory to INCLUDE_PATH")), ToolInput(tag="in_pre_process", input_type=String(optional=True), prefix="--pre_process", doc=InputDocumentation(doc="Process TEMPLATE before each main template")), ToolInput(tag="in_post_process", input_type=String(optional=True), prefix="--post_process", doc=InputDocumentation(doc="Process TEMPLATE after each main template")), ToolInput(tag="in_process", input_type=String(optional=True), prefix="--process", doc=InputDocumentation(doc="Process TEMPLATE instead of main template")), ToolInput(tag="in_wrapper", input_type=String(optional=True), prefix="--wrapper", doc=InputDocumentation(doc="Process TEMPLATE wrapper around main template")), ToolInput(tag="in_default", input_type=String(optional=True), prefix="--default", doc=InputDocumentation(doc="Use TEMPLATE as default")), ToolInput(tag="in_error", input_type=String(optional=True), prefix="--error", doc=InputDocumentation(doc="Use TEMPLATE to handle errors")), ToolInput(tag="in_debug", input_type=String(optional=True), prefix="--debug", doc=InputDocumentation(doc="Set TT DEBUG option to STRING")), ToolInput(tag="in_start_tag", input_type=String(optional=True), prefix="--start_tag", doc=InputDocumentation(doc="STRING defines start of directive tag")), ToolInput(tag="in_end_tag", input_type=String(optional=True), prefix="--end_tag", doc=InputDocumentation(doc="STRING defined end of directive tag")), ToolInput(tag="in_tag_style", input_type=String(optional=True), prefix="--tag_style", doc=InputDocumentation(doc="Use pre-defined tag STYLE")), ToolInput(tag="in_plugin_base", input_type=String(optional=True), prefix="--plugin_base", doc=InputDocumentation(doc="Base PACKAGE for plugins")), ToolInput(tag="in_compile_ext", input_type=File(optional=True), prefix="--compile_ext", doc=InputDocumentation(doc="File extension for compiled template files")), ToolInput(tag="in_compile_dir", input_type=Directory(optional=True), prefix="--compile_dir", doc=InputDocumentation(doc="Directory for compiled template files")), ToolInput(tag="in_perl_five_lib", input_type=Int(optional=True), prefix="--perl5lib", doc=InputDocumentation(doc="Specify additional Perl library directories")), ToolInput(tag="in_template_module", input_type=String(optional=True), prefix="--template_module", doc=InputDocumentation(doc="Specify alternate Template module")), ToolInput(tag="in_while_max", input_type=Int(optional=True), prefix="--while_max", doc=InputDocumentation(doc="Change '$Template::Directive::WHILE_MAX' default")), ToolInput(tag="in_files", input_type=String(optional=True), position=0, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Tpage_V0_1_0().translate("wdl", allow_empty_container=True)

