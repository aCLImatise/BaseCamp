from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Directory, String, File, Int

Ttree_V0_1_0 = CommandToolBuilder(tool="ttree", base_command=["ttree"], inputs=[ToolInput(tag="in__process_files", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="(--all)          Process all files, regardless of modification")), ToolInput(tag="in__recurse_recurse", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="(--recurse)      Recurse into sub-directories")), ToolInput(tag="in__preserve_ownership", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="(--preserve)     Preserve file ownership and permission")), ToolInput(tag="in__nothing_do", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="(--nothing)      Do nothing, just print summary (enables -v)")), ToolInput(tag="in__verbose_verbose", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="(--verbose)      Verbose mode. Use twice for more verbosity: -v -v")), ToolInput(tag="in__srcdir_source", input_type=Directory(optional=True), prefix="-s", doc=InputDocumentation(doc="(--src=DIR)      Source directory")), ToolInput(tag="in_destdir_destination_directory", input_type=Directory(optional=True), prefix="-d", doc=InputDocumentation(doc="(--dest=DIR)     Destination directory")), ToolInput(tag="in__cfgdir_location", input_type=String(optional=True), prefix="-c", doc=InputDocumentation(doc="(--cfg=DIR)      Location of configuration files")), ToolInput(tag="in__libdir_library", input_type=Directory(optional=True), prefix="-l", doc=InputDocumentation(doc="(--lib=DIR)      Library directory (INCLUDE_PATH)  (multiple)")), ToolInput(tag="in__filefile_read", input_type=File(optional=True), prefix="-f", doc=InputDocumentation(doc="(--file=FILE)    Read named configuration file     (multiple)")), ToolInput(tag="in_colour", input_type=Boolean(optional=True), prefix="--colour", doc=InputDocumentation(doc="Enable colo(u)rful verbose output.")), ToolInput(tag="in_summary", input_type=Boolean(optional=True), prefix="--summary", doc=InputDocumentation(doc="Show processing summary.")), ToolInput(tag="in_ignore", input_type=String(optional=True), prefix="--ignore", doc=InputDocumentation(doc="Ignore files matching REGEX")), ToolInput(tag="in_copy", input_type=String(optional=True), prefix="--copy", doc=InputDocumentation(doc="Copy files matching REGEX")), ToolInput(tag="in_link", input_type=String(optional=True), prefix="--link", doc=InputDocumentation(doc="Link files matching REGEX")), ToolInput(tag="in_accept", input_type=String(optional=True), prefix="--accept", doc=InputDocumentation(doc="Process only files matching REGEX")), ToolInput(tag="in_depend", input_type=String(optional=True), prefix="--depend", doc=InputDocumentation(doc="=bar,baz     Specify that 'foo' depends on 'bar' and 'baz'.")), ToolInput(tag="in_depend_file", input_type=File(optional=True), prefix="--depend_file", doc=InputDocumentation(doc="Read file dependancies from FILE.")), ToolInput(tag="in_depend_debug", input_type=Boolean(optional=True), prefix="--depend_debug", doc=InputDocumentation(doc="Enable debugging for dependencies")), ToolInput(tag="in_suffix", input_type=String(optional=True), prefix="--suffix", doc=InputDocumentation(doc="=new         Change any '.old' suffix to '.new'")), ToolInput(tag="in_binmode", input_type=String(optional=True), prefix="--binmode", doc=InputDocumentation(doc="Set binary mode of output files")), ToolInput(tag="in_encoding", input_type=String(optional=True), prefix="--encoding", doc=InputDocumentation(doc="Set encoding of input files")), ToolInput(tag="in_define", input_type=String(optional=True), prefix="--define", doc=InputDocumentation(doc="=value       Define template variable")), ToolInput(tag="in_interpolate", input_type=Boolean(optional=True), prefix="--interpolate", doc=InputDocumentation(doc="Interpolate '$var' references in text")), ToolInput(tag="in_any_case", input_type=Boolean(optional=True), prefix="--anycase", doc=InputDocumentation(doc="Accept directive keywords in any case.")), ToolInput(tag="in_pre_chomp", input_type=Boolean(optional=True), prefix="--pre_chomp", doc=InputDocumentation(doc="Chomp leading whitespace")), ToolInput(tag="in_post_chomp", input_type=Boolean(optional=True), prefix="--post_chomp", doc=InputDocumentation(doc="Chomp trailing whitespace")), ToolInput(tag="in_trim", input_type=Boolean(optional=True), prefix="--trim", doc=InputDocumentation(doc="Trim blank lines around template blocks")), ToolInput(tag="in_eval_perl", input_type=Boolean(optional=True), prefix="--eval_perl", doc=InputDocumentation(doc="Evaluate [% PERL %] ... [% END %] code blocks")), ToolInput(tag="in_load_perl", input_type=Boolean(optional=True), prefix="--load_perl", doc=InputDocumentation(doc="Load regular Perl modules via USE directive")), ToolInput(tag="in_absolute", input_type=Boolean(optional=True), prefix="--absolute", doc=InputDocumentation(doc="Enable the ABSOLUTE option")), ToolInput(tag="in_relative", input_type=Boolean(optional=True), prefix="--relative", doc=InputDocumentation(doc="Enable the RELATIVE option")), ToolInput(tag="in_pre_process", input_type=String(optional=True), prefix="--pre_process", doc=InputDocumentation(doc="Process TEMPLATE before each main template")), ToolInput(tag="in_post_process", input_type=String(optional=True), prefix="--post_process", doc=InputDocumentation(doc="Process TEMPLATE after each main template")), ToolInput(tag="in_process", input_type=String(optional=True), prefix="--process", doc=InputDocumentation(doc="Process TEMPLATE instead of main template")), ToolInput(tag="in_wrapper", input_type=String(optional=True), prefix="--wrapper", doc=InputDocumentation(doc="Process TEMPLATE wrapper around main template")), ToolInput(tag="in_default", input_type=String(optional=True), prefix="--default", doc=InputDocumentation(doc="Use TEMPLATE as default")), ToolInput(tag="in_error", input_type=String(optional=True), prefix="--error", doc=InputDocumentation(doc="Use TEMPLATE to handle errors")), ToolInput(tag="in_debug", input_type=String(optional=True), prefix="--debug", doc=InputDocumentation(doc="Set TT DEBUG option to STRING")), ToolInput(tag="in_start_tag", input_type=String(optional=True), prefix="--start_tag", doc=InputDocumentation(doc="STRING defines start of directive tag")), ToolInput(tag="in_end_tag", input_type=String(optional=True), prefix="--end_tag", doc=InputDocumentation(doc="STRING defined end of directive tag")), ToolInput(tag="in_tag_style", input_type=String(optional=True), prefix="--tag_style", doc=InputDocumentation(doc="Use pre-defined tag STYLE")), ToolInput(tag="in_plugin_base", input_type=String(optional=True), prefix="--plugin_base", doc=InputDocumentation(doc="Base PACKAGE for plugins")), ToolInput(tag="in_compile_ext", input_type=File(optional=True), prefix="--compile_ext", doc=InputDocumentation(doc="File extension for compiled template files")), ToolInput(tag="in_compile_dir", input_type=Directory(optional=True), prefix="--compile_dir", doc=InputDocumentation(doc="Directory for compiled template files")), ToolInput(tag="in_perl_five_lib", input_type=Int(optional=True), prefix="--perl5lib", doc=InputDocumentation(doc="Specify additional Perl library directories")), ToolInput(tag="in_template_module", input_type=String(optional=True), prefix="--template_module", doc=InputDocumentation(doc="Specify alternate Template module")), ToolInput(tag="in_files", input_type=String(optional=True), position=0, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Ttree_V0_1_0().translate("wdl", allow_empty_container=True)

