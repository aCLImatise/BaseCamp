from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Array, String, Boolean, Float, Int, File

Clinker_V0_1_0 = CommandToolBuilder(tool="clinker", base_command=["clinker"], inputs=[ToolInput(tag="in_ranges", input_type=Array(t=String(), optional=True), prefix="--ranges", doc=InputDocumentation(doc="Scaffold extraction ranges. If a range is specified,\nonly features within the range will be extracted from\nthe scaffold. Ranges should be formatted like:\nscaffold:start-end (e.g. scaffold_1:15000-40000)")), ToolInput(tag="in_no_align", input_type=Boolean(optional=True), prefix="--no_align", doc=InputDocumentation(doc="Do not align clusters")), ToolInput(tag="in_identity", input_type=Float(optional=True), prefix="--identity", doc=InputDocumentation(doc="Minimum alignment sequence identity [default: 0.3]")), ToolInput(tag="in_jobs", input_type=Int(optional=True), prefix="--jobs", doc=InputDocumentation(doc="Number of alignments to run in parallel (0 to use the\nnumber of CPUs) [default: 0]")), ToolInput(tag="in_session", input_type=File(optional=True), prefix="--session", doc=InputDocumentation(doc="Path to clinker session")), ToolInput(tag="in_json_indent", input_type=Int(optional=True), prefix="--json_indent", doc=InputDocumentation(doc="Number of spaces to indent JSON [default: none]")), ToolInput(tag="in_force", input_type=File(optional=True), prefix="--force", doc=InputDocumentation(doc="Overwrite previous output file")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="Save alignments to file")), ToolInput(tag="in_plot_cluster_alignments", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="[PLOT], --plot [PLOT]\nPlot cluster alignments using clustermap.js. If a path\nis given, clinker will generate a portable HTML file\nat that path. Otherwise, the plot will be served\ndynamically using Python's HTTP server.")), ToolInput(tag="in_delimiter", input_type=String(optional=True), prefix="--delimiter", doc=InputDocumentation(doc="Character to delimit output by [default: human\nreadable]")), ToolInput(tag="in_decimals", input_type=Float(optional=True), prefix="--decimals", doc=InputDocumentation(doc="Number of decimal places in output [default: 2]")), ToolInput(tag="in_hide_link_headers", input_type=Boolean(optional=True), prefix="--hide_link_headers", doc=InputDocumentation(doc="Hide alignment column headers")), ToolInput(tag="in_hide_aln_headers", input_type=Boolean(optional=True), prefix="--hide_aln_headers", doc=InputDocumentation(doc="Hide alignment cluster name headers")), ToolInput(tag="in_use_file_order", input_type=Boolean(optional=True), prefix="--use_file_order", doc=InputDocumentation(doc="Display clusters in order of input files")), ToolInput(tag="in_files", input_type=String(), position=0, doc=InputDocumentation(doc="Gene cluster GenBank files"))], outputs=[ToolOutput(tag="out_force", output_type=File(optional=True), selector=InputSelector(input_to_select="in_force", type_hint=File()), doc=OutputDocumentation(doc="Overwrite previous output file"))], container="quay.io/biocontainers/clinker-py:0.0.20--pyh3252c3a_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Clinker_V0_1_0().translate("wdl")

