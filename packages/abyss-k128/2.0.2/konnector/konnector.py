from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, File, Boolean, String

Konnector_V0_1_0 = CommandToolBuilder(tool="konnector", base_command=["konnector"], inputs=[ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="use N parallel threads [1]")), ToolInput(tag="in_km_er", input_type=Int(optional=True), prefix="--kmer", doc=InputDocumentation(doc="the size of a k-mer")), ToolInput(tag="in_bloom_size", input_type=Int(optional=True), prefix="--bloom-size", doc=InputDocumentation(doc="size of bloom filter [500M]")), ToolInput(tag="in_min_coverage", input_type=Int(optional=True), prefix="--min-coverage", doc=InputDocumentation(doc="kmer coverage threshold for error correction [2].\nThis option specifies the number of levels in the\ncascading Bloom filter; it has no effect if the Bloom\nfilter is loaded from an external file.")), ToolInput(tag="in_max_branches", input_type=Int(optional=True), prefix="--max-branches", doc=InputDocumentation(doc="max branches in de Bruijn graph traversal;\nuse 'nolimit' for no limit [350]")), ToolInput(tag="in_dot_file", input_type=File(optional=True), prefix="--dot-file", doc=InputDocumentation(doc="write graph traversals to a DOT file")), ToolInput(tag="in_dup_bloom_size", input_type=Int(optional=True), prefix="--dup-bloom-size", doc=InputDocumentation(doc="use an additional Bloom filter to avoid\nassembling the same region of the genome\nmultiple times. This option is highly\nrecommended when the -E (--extend) option\nand has no effect otherwise. As a rule of\nthumb, the Bloom filter size should be\nabout twice the target genome size [disabled]")), ToolInput(tag="in_fix_errors", input_type=Boolean(optional=True), prefix="--fix-errors", doc=InputDocumentation(doc="find and fix single-base errors when reads\nhave no kmers in bloom filter [disabled]")), ToolInput(tag="in_extend", input_type=Boolean(optional=True), prefix="--extend", doc=InputDocumentation(doc="in addition to finding a connecting path,\nextend the reads outwards to the next\ndead end or branching point in the de Brujin\ngraph. If the reads were not successfully\nconnected, extend them inwards as well.")), ToolInput(tag="in_fast_q", input_type=Boolean(optional=True), prefix="--fastq", doc=InputDocumentation(doc="output merged reads in FASTQ format\n(default is FASTA)")), ToolInput(tag="in_min_frag", input_type=Int(optional=True), prefix="--min-frag", doc=InputDocumentation(doc="min fragment size in base pairs [0]")), ToolInput(tag="in_max_frag", input_type=Int(optional=True), prefix="--max-frag", doc=InputDocumentation(doc="max fragment size in base pairs [1000]")), ToolInput(tag="in_input_bloom", input_type=File(optional=True), prefix="--input-bloom", doc=InputDocumentation(doc="load bloom filter from FILE")), ToolInput(tag="in_interleaved", input_type=Boolean(optional=True), prefix="--interleaved", doc=InputDocumentation(doc="input reads files are interleaved")), ToolInput(tag="in_mask", input_type=Boolean(optional=True), prefix="--mask", doc=InputDocumentation(doc="mask new and changed bases as lower case")), ToolInput(tag="in_no_mask", input_type=Boolean(optional=True), prefix="--no-mask", doc=InputDocumentation(doc="do not mask bases [default]")), ToolInput(tag="in_chastity", input_type=Boolean(optional=True), prefix="--chastity", doc=InputDocumentation(doc="discard unchaste reads [default]")), ToolInput(tag="in_no_chastity", input_type=Boolean(optional=True), prefix="--no-chastity", doc=InputDocumentation(doc="do not discard unchaste reads")), ToolInput(tag="in_trim_masked", input_type=Boolean(optional=True), prefix="--trim-masked", doc=InputDocumentation(doc="trim masked bases from the ends of reads")), ToolInput(tag="in_no_trim_masked", input_type=Boolean(optional=True), prefix="--no-trim-masked", doc=InputDocumentation(doc="do not trim masked bases from the ends\nof reads [default]")), ToolInput(tag="in_read_mismatches", input_type=Int(optional=True), prefix="--read-mismatches", doc=InputDocumentation(doc="max mismatches between paths and reads; use\n'nolimit' for no limit [nolimit]")), ToolInput(tag="in_max_mismatches", input_type=Int(optional=True), prefix="--max-mismatches", doc=InputDocumentation(doc="max mismatches between all alternate paths;\nuse 'nolimit' for no limit [2]")), ToolInput(tag="in_no_limits", input_type=Boolean(optional=True), prefix="--no-limits", doc=InputDocumentation(doc="disable all limits; equivalent to\n'-B nolimit -m nolimit -M nolimit -P nolimit'")), ToolInput(tag="in_output_prefix", input_type=File(optional=True), prefix="--output-prefix", doc=InputDocumentation(doc="prefix of output FASTA files [required]")), ToolInput(tag="in_preserve_reads", input_type=Boolean(optional=True), prefix="--preserve-reads", doc=InputDocumentation(doc="don't correct any bases within the reads [disabled]")), ToolInput(tag="in_alt_paths_mode", input_type=File(optional=True), prefix="--alt-paths-mode", doc=InputDocumentation(doc="output a separate pseudoread for each alternate\npath connecting a read pair (default is to create\na consensus sequence of all connecting paths)")), ToolInput(tag="in_max_paths", input_type=Int(optional=True), prefix="--max-paths", doc=InputDocumentation(doc="merge at most N alternate paths; use 'nolimit'\nfor no limit [2]")), ToolInput(tag="in_trim_quality", input_type=String(optional=True), prefix="--trim-quality", doc=InputDocumentation(doc="trim bases from the ends of reads whose\nquality is less than the threshold")), ToolInput(tag="in_standard_quality", input_type=Boolean(optional=True), prefix="--standard-quality", doc=InputDocumentation(doc="zero quality is `!' (33), typically\nfor FASTQ and SAM files [default]")), ToolInput(tag="in_illumina_quality", input_type=Boolean(optional=True), prefix="--illumina-quality", doc=InputDocumentation(doc="zero quality is `@' (64), typically\nfor qseq and export files")), ToolInput(tag="in_corrected_qual", input_type=Boolean(optional=True), prefix="--corrected-qual", doc=InputDocumentation(doc="quality score for bases corrected or inserted\nby konnector; only relevant when --fastq is\nin effect [40]")), ToolInput(tag="in_read_name", input_type=String(optional=True), prefix="--read-name", doc=InputDocumentation(doc="only process reads with names that contain STR")), ToolInput(tag="in_search_mem", input_type=Int(optional=True), prefix="--search-mem", doc=InputDocumentation(doc="mem limit for graph searches; multiply by the\nnumber of threads (-j) to get the total mem used\nfor graph traversal [500M]")), ToolInput(tag="in_trace_file", input_type=File(optional=True), prefix="--trace-file", doc=InputDocumentation(doc="write graph search stats to FILE")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="display verbose output")), ToolInput(tag="in_read_identity", input_type=Int(optional=True), prefix="--read-identity", doc=InputDocumentation(doc="min percent seq identity between consensus seq\nand reads [0]")), ToolInput(tag="in_path_identity", input_type=File(optional=True), prefix="--path-identity", doc=InputDocumentation(doc="min percent seq identity across alternate\nconnecting paths [0]"))], outputs=[ToolOutput(tag="out_alt_paths_mode", output_type=File(optional=True), selector=InputSelector(input_to_select="in_alt_paths_mode", type_hint=File()), doc=OutputDocumentation(doc="output a separate pseudoread for each alternate\npath connecting a read pair (default is to create\na consensus sequence of all connecting paths)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Konnector_V0_1_0().translate("wdl", allow_empty_container=True)

