from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, Boolean, File, String

Abyss_Bloom_Dbg_V0_1_0 = CommandToolBuilder(tool="abyss_bloom_dbg", base_command=["abyss-bloom-dbg"], inputs=[ToolInput(tag="in___assemblyfasta", input_type=Int(optional=True), prefix="-G", doc=InputDocumentation(doc="[options] <FASTQ> [FASTQ]... > assembly.fasta")), ToolInput(tag="in_bloom_size", input_type=Int(optional=True), prefix="--bloom-size", doc=InputDocumentation(doc="overall memory budget for the assembly in bytes.\nUnit suffixes 'k' (kilobytes), 'M' (megabytes),\nor 'G' (gigabytes) may be used. [required]")), ToolInput(tag="in_chastity", input_type=Boolean(optional=True), prefix="--chastity", doc=InputDocumentation(doc="discard unchaste reads [default]")), ToolInput(tag="in_no_chastity", input_type=Boolean(optional=True), prefix="--no-chastity", doc=InputDocumentation(doc="do not discard unchaste reads")), ToolInput(tag="in_graph", input_type=File(optional=True), prefix="--graph", doc=InputDocumentation(doc="write de Bruijn graph to FILE (GraphViz)")), ToolInput(tag="in_num_hashes", input_type=Int(optional=True), prefix="--num-hashes", doc=InputDocumentation(doc="number of Bloom filter hash functions [1]")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="use N parallel threads [1]")), ToolInput(tag="in_trim_masked", input_type=Boolean(optional=True), prefix="--trim-masked", doc=InputDocumentation(doc="trim masked bases from the ends of reads")), ToolInput(tag="in_no_trim_masked", input_type=Boolean(optional=True), prefix="--no-trim-masked", doc=InputDocumentation(doc="do not trim masked bases from the ends\nof reads [default]")), ToolInput(tag="in_km_er", input_type=Int(optional=True), prefix="--kmer", doc=InputDocumentation(doc="the size of a k-mer [required]")), ToolInput(tag="in_kc", input_type=Int(optional=True), prefix="--kc", doc=InputDocumentation(doc="use a cascading Bloom filter with N levels,\ninstead of a counting Bloom filter [2]")), ToolInput(tag="in_out", input_type=File(optional=True), prefix="--out", doc=InputDocumentation(doc="write the contigs to FILE [STDOUT]")), ToolInput(tag="in_trim_quality", input_type=String(optional=True), prefix="--trim-quality", doc=InputDocumentation(doc="trim bases from the ends of reads whose\nquality is less than the threshold")), ToolInput(tag="in_mask_quality", input_type=String(optional=True), prefix="--mask-quality", doc=InputDocumentation(doc="mask all low quality bases as `N'")), ToolInput(tag="in_standard_quality", input_type=Boolean(optional=True), prefix="--standard-quality", doc=InputDocumentation(doc="zero quality is `!' (33), typically\nfor FASTQ and SAM files [default]")), ToolInput(tag="in_illumina_quality", input_type=Boolean(optional=True), prefix="--illumina-quality", doc=InputDocumentation(doc="zero quality is `@' (64), typically\nfor qseq and export files")), ToolInput(tag="in_trim_length", input_type=Boolean(optional=True), prefix="--trim-length", doc=InputDocumentation(doc="max branch length to trim, in k-mers [k]")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="display verbose output")), ToolInput(tag="in_single_km_er", input_type=Int(optional=True), prefix="--single-kmer", doc=InputDocumentation(doc="use a spaced seed that consists of two k-mers\nseparated by a gap. K must be chosen such that\nK <= k/2")), ToolInput(tag="in_qr_seed", input_type=Int(optional=True), prefix="--qr-seed", doc=InputDocumentation(doc="use a spaced seed than consists of two mirrored\nQR seeds separated by a gap.  The following must\nhold: (a) N must be prime, (b) N >= 11,\n(c) N <= k/2")), ToolInput(tag="in_spaced_seed", input_type=String(optional=True), prefix="--spaced-seed", doc=InputDocumentation(doc="bitmask indicating k-mer positions to be\nignored during hashing. The pattern must be\nsymmetric")), ToolInput(tag="in_cov_track", input_type=File(optional=True), prefix="--cov-track", doc=InputDocumentation(doc="WIG track with 0/1 indicating k-mers with\ncoverage above the -c threshold. A reference\nmust also be specified with -R.")), ToolInput(tag="in_trace_file", input_type=File(optional=True), prefix="--trace-file", doc=InputDocumentation(doc="write debugging info about extension of\neach read to FILE")), ToolInput(tag="in_ref", input_type=File(optional=True), prefix="--ref", doc=InputDocumentation(doc="specify a reference genome. FILE may be\nFASTA, FASTQ, SAM, or BAM and may be gzipped."))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Abyss_Bloom_Dbg_V0_1_0().translate("wdl", allow_empty_container=True)

