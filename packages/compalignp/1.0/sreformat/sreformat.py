from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String

Sreformat_V0_1_0 = CommandToolBuilder(tool="sreformat", base_command=["sreformat"], inputs=[ToolInput(tag="in_force_dna_alphabet", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc=": force DNA alphabet for nucleic acid sequence")), ToolInput(tag="in_force_rna_alphabet", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc=": force RNA alphabet for nucleic acid sequence")), ToolInput(tag="in_force_lower_case", input_type=Boolean(optional=True), prefix="-l", doc=InputDocumentation(doc=": force lower case")), ToolInput(tag="in_force_upper_case", input_type=Boolean(optional=True), prefix="-u", doc=InputDocumentation(doc=": force upper case")), ToolInput(tag="in_convert_noniupac_chars", input_type=Boolean(optional=True), prefix="-x", doc=InputDocumentation(doc=": convert non-IUPAC chars in DNA to N's for IUPAC/BLAST compatibility")), ToolInput(tag="in_in_format", input_type=File(optional=True), prefix="--informat", doc=InputDocumentation(doc=": input sequence file is in format <s>")), ToolInput(tag="in_min_gap", input_type=Boolean(optional=True), prefix="--mingap", doc=InputDocumentation(doc=": remove columns containing all gaps (seqfile=alignment)")), ToolInput(tag="in_no_gap", input_type=Boolean(optional=True), prefix="--nogap", doc=InputDocumentation(doc=": remove columns containing any gaps (seqfile=alignment)")), ToolInput(tag="in_pfam", input_type=Boolean(optional=True), prefix="--pfam", doc=InputDocumentation(doc=": modify Stockholm format output to be in PFAM style (1 line/seq)")), ToolInput(tag="in_sam", input_type=Boolean(optional=True), prefix="--sam", doc=InputDocumentation(doc=": try to convert gaps to SAM style (seqfile=alignment)")), ToolInput(tag="in_sam_frac", input_type=String(optional=True), prefix="--samfrac", doc=InputDocumentation(doc=": convert to SAM convention; cols w/ gapfrac > x are inserts")), ToolInput(tag="in_gap_sym", input_type=String(optional=True), prefix="--gapsym", doc=InputDocumentation(doc=": convert all gaps to character '<c>'")), ToolInput(tag="in_options", input_type=Boolean(optional=True), prefix="-options", doc=InputDocumentation(doc="")), ToolInput(tag="in_fast_a", input_type=String(), position=0, doc=InputDocumentation(doc="stockholm")), ToolInput(tag="in_embl", input_type=String(), position=1, doc=InputDocumentation(doc="msf")), ToolInput(tag="in_genbank", input_type=String(), position=2, doc=InputDocumentation(doc="a2m")), ToolInput(tag="in_gcg", input_type=String(), position=3, doc=InputDocumentation(doc="phylip")), ToolInput(tag="in_gcg_data", input_type=String(), position=4, doc=InputDocumentation(doc="clustal")), ToolInput(tag="in_pir", input_type=String(), position=5, doc=InputDocumentation(doc="selex")), ToolInput(tag="in_raw", input_type=String(), position=6, doc=InputDocumentation(doc="eps"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Sreformat_V0_1_0().translate("wdl", allow_empty_container=True)

