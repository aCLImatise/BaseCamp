from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, String, Boolean

Mcxmap_V0_1_0 = CommandToolBuilder(tool="mcxmap", base_command=["mcxmap"], inputs=[ToolInput(tag="in_imx", input_type=File(optional=True), prefix="-imx", doc=InputDocumentation(doc="use matrix from file <fname>")), ToolInput(tag="in_tab", input_type=File(optional=True), prefix="-tab", doc=InputDocumentation(doc="use tab file from <fname>")), ToolInput(tag="in_write_output_file", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="write output to file <fname>")), ToolInput(tag="in_mul", input_type=Int(optional=True), prefix="-mul", doc=InputDocumentation(doc="multiply domain indices by <num>")), ToolInput(tag="in_c_mul", input_type=Int(optional=True), prefix="-cmul", doc=InputDocumentation(doc="multiply column indices by <num>")), ToolInput(tag="in_r_mul", input_type=Int(optional=True), prefix="-rmul", doc=InputDocumentation(doc="multiply row indices by <num>")), ToolInput(tag="in_shift", input_type=Int(optional=True), prefix="-shift", doc=InputDocumentation(doc="shift domain indices by <num>")), ToolInput(tag="in_c_shift", input_type=Int(optional=True), prefix="-cshift", doc=InputDocumentation(doc="shift column indices by <num>")), ToolInput(tag="in_r_shift", input_type=Int(optional=True), prefix="-rshift", doc=InputDocumentation(doc="shift row indices by <num>")), ToolInput(tag="in_map", input_type=String(optional=True), prefix="-map", doc=InputDocumentation(doc="map domain indices")), ToolInput(tag="in_cmap", input_type=String(optional=True), prefix="-cmap", doc=InputDocumentation(doc="map column indices")), ToolInput(tag="in_r_map", input_type=String(optional=True), prefix="-rmap", doc=InputDocumentation(doc="map row indices")), ToolInput(tag="in_map_i", input_type=String(optional=True), prefix="-mapi", doc=InputDocumentation(doc="map domain indices with inverse")), ToolInput(tag="in_cmap_i", input_type=String(optional=True), prefix="-cmapi", doc=InputDocumentation(doc="map column indices with inverse")), ToolInput(tag="in_r_map_i", input_type=String(optional=True), prefix="-rmapi", doc=InputDocumentation(doc="map row indices with inverse")), ToolInput(tag="in_make_map", input_type=File(optional=True), prefix="-make-map", doc=InputDocumentation(doc="canonify domain indices, write map file")), ToolInput(tag="in_make_map_c", input_type=File(optional=True), prefix="-make-mapc", doc=InputDocumentation(doc="canonify column indices, write map file")), ToolInput(tag="in_make_map_r", input_type=File(optional=True), prefix="-make-mapr", doc=InputDocumentation(doc="canonify row indices, write map file")), ToolInput(tag="in_help", input_type=Boolean(optional=True), prefix="--help", doc=InputDocumentation(doc="print this help"))], outputs=[ToolOutput(tag="out_write_output_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_write_output_file", type_hint=File()), doc=OutputDocumentation(doc="write output to file <fname>"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Mcxmap_V0_1_0().translate("wdl", allow_empty_container=True)

