from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Boolean, Int

Mcxsubs_V0_1_0 = CommandToolBuilder(tool="mcxsubs", base_command=["mcxsubs"], inputs=[ToolInput(tag="in_imx", input_type=File(optional=True), prefix="-imx", doc=InputDocumentation(doc="matrix/graph file name")), ToolInput(tag="in_dom", input_type=String(optional=True), prefix="-dom", doc=InputDocumentation(doc="domain matrix (target for 'd' specs)")), ToolInput(tag="in_tab", input_type=File(optional=True), prefix="-tab", doc=InputDocumentation(doc="tab file name")), ToolInput(tag="in_tf", input_type=String(optional=True), prefix="-tf", doc=InputDocumentation(doc="first apply tf-spec to matrix")), ToolInput(tag="in_block", input_type=Boolean(optional=True), prefix="--block", doc=InputDocumentation(doc="use the block matrix induced by dom")), ToolInput(tag="in_block_c", input_type=Boolean(optional=True), prefix="--blockc", doc=InputDocumentation(doc="use the complement of block matrix")), ToolInput(tag="in_from_disk", input_type=Boolean(optional=True), prefix="--from-disk", doc=InputDocumentation(doc="read submatrix directly from disk")), ToolInput(tag="in_skin_read", input_type=Boolean(optional=True), prefix="--skin-read", doc=InputDocumentation(doc="only read skeleton matrix (domains, no entries)")), ToolInput(tag="in_extend", input_type=Boolean(optional=True), prefix="--extend", doc=InputDocumentation(doc="read extended submatrices")), ToolInput(tag="in_out", input_type=File(optional=True), prefix="-out", doc=InputDocumentation(doc="special purpose output file name")), ToolInput(tag="in_e_fac", input_type=Int(optional=True), prefix="-efac", doc=InputDocumentation(doc="random selection edge factor")), ToolInput(tag="in_d_fac", input_type=Int(optional=True), prefix="-dfac", doc=InputDocumentation(doc="random selection domain factor")), ToolInput(tag="in_r_fac", input_type=Int(optional=True), prefix="-rfac", doc=InputDocumentation(doc="random selection row factor")), ToolInput(tag="in_cfac", input_type=Int(optional=True), prefix="-cfac", doc=InputDocumentation(doc="random selection column factor")), ToolInput(tag="in_rand_discard", input_type=Boolean(optional=True), prefix="--rand-discard", doc=InputDocumentation(doc="discard random selection")), ToolInput(tag="in_rand_exclusive", input_type=Boolean(optional=True), prefix="--rand-exclusive", doc=InputDocumentation(doc="discard regular selection")), ToolInput(tag="in_rand_intersect", input_type=Boolean(optional=True), prefix="--rand-intersect", doc=InputDocumentation(doc="intersect random and regular selection")), ToolInput(tag="in_rand_merge", input_type=Boolean(optional=True), prefix="--rand-merge", doc=InputDocumentation(doc="join random and regular selection")), ToolInput(tag="in_tag", input_type=Boolean(optional=True), prefix="--tag", doc=InputDocumentation(doc="output tagged matrices")), ToolInput(tag="in_tag_digits", input_type=Int(optional=True), prefix="-tag-digits", doc=InputDocumentation(doc="digits to print for tagged write")), ToolInput(tag="in_help", input_type=Boolean(optional=True), prefix="--help", doc=InputDocumentation(doc="print this help")), ToolInput(tag="in_options", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_sub_spec", input_type=String(), position=1, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out", type_hint=File()), doc=OutputDocumentation(doc="special purpose output file name"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Mcxsubs_V0_1_0().translate("wdl", allow_empty_container=True)

