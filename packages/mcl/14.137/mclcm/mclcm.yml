!Command
command:
- mclcm
positional: []
named:
- !Flag
  description: shared mcl options
  synonyms:
  - -a
  args: !SimpleFlagArg
    name: opts
  optional: true
- !Flag
  description: <func(arg)[, func(arg)]*> apply unary transformations to matrix values
  synonyms:
  - -tf
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: show default shared options
  synonyms:
  - -z
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: dedicated parameters to construct base transformed matrix
  synonyms:
  - -b1
  args: !SimpleFlagArg
    name: opts
  optional: true
- !Flag
  description: dedicated parameters to construct base expanded matrix
  synonyms:
  - -b2
  args: !SimpleFlagArg
    name: opts
  optional: true
- !Flag
  description: describes the experiment, useful when command-line is propagated
  synonyms:
  - -annot
  args: !SimpleFlagArg
    name: tag/description
  optional: true
- !Flag
  description: use as start clustering
  synonyms:
  - -c
  args: !SimpleFlagArg
    name: fname
  optional: true
- !Flag
  description: use contraction approach (default)
  synonyms:
  - --contract
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: use subclustering approach
  synonyms:
  - --subcluster
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: construct hierarchy from cluster (file) arguments
  synonyms:
  - --integrate
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: construct hierarchy from multiple mcl runs
  synonyms:
  - --dispatch
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'iterate at most <num> times (default: until root clustering)'
  synonyms:
  - -n
  args: !SimpleFlagArg
    name: num
  optional: true
- !Flag
  description: make sure universe clustering is at the top
  synonyms:
  - -root
  args: !SimpleFlagArg
    name: y/n
  optional: true
- !Flag
  description: file to write nested cluster stack to
  synonyms:
  - -cone
  args: !SimpleFlagArg
    name: fname
  optional: true
- !Flag
  description: file to write expanded cluster stack to
  synonyms:
  - -stack
  args: !SimpleFlagArg
    name: fname
  optional: true
- !Flag
  description: file to write coarsened graphs to
  synonyms:
  - -coarse
  args: !SimpleFlagArg
    name: fname
  optional: true
- !Flag
  description: file to write base graph to
  synonyms:
  - -write-base
  args: !SimpleFlagArg
    name: fname
  optional: true
- !Flag
  description: <tags> may contain 'stack', 'cone', 'coarse', 'steps'
  synonyms:
  - -write
  args: !SimpleFlagArg
    name: tags
  optional: true
- !Flag
  description: file prefix for cone, stack, and coarse
  synonyms:
  - -stem
  args: !SimpleFlagArg
    name: str
  optional: true
- !Flag
  description: additionally write clusterings to separate files
  synonyms:
  - --mplex
  args: !SimpleFlagArg
    name: y/n
  optional: true
- !Flag
  description: quiet level of logging
  synonyms:
  - -q
  args: !SimpleFlagArg
    name: log-spec
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: this info
  synonyms:
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: output version information, exit
  synonyms:
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "Usage: mclcm <mx-name> [mclcm options] [-- \"<mcl-opts>\"*]\n\n-a <opts>\
  \                     shared mcl options\n-tf <func(arg)[, func(arg)]*> apply unary\
  \ transformations to matrix values\n-z                            show default shared\
  \ options\n\n-b1 <opts>                    dedicated parameters to construct base\
  \ transformed matrix\n-b2 <opts>                    dedicated parameters to construct\
  \ base expanded matrix\n\n-annot <tag/description>      describes the experiment,\
  \ useful when command-line is propagated\n-c <fname>                    use as start\
  \ clustering\n--contract                    use contraction approach (default)\n\
  --subcluster                  use subclustering approach\n--integrate          \
  \         construct hierarchy from cluster (file) arguments\n--dispatch        \
  \            construct hierarchy from multiple mcl runs\n-n <num>              \
  \        iterate at most <num> times (default: until root clustering)\n-root y/n\
  \                     make sure universe clustering is at the top\n-cone <fname>\
  \                 file to write nested cluster stack to\n-stack <fname>        \
  \        file to write expanded cluster stack to\n-coarse <fname>              \
  \ file to write coarsened graphs to\n-write-base <fname>           file to write\
  \ base graph to\n-write <tags>                 <tags> may contain 'stack', 'cone',\
  \ 'coarse', 'steps'\n-stem <str>                   file prefix for cone, stack,\
  \ and coarse\n--mplex y/n                   additionally write clusterings to separate\
  \ files\n-h                            this info (currently)\n-q <log-spec>    \
  \             quiet level of logging\n--help                        this info\n\
  --version                     output version information, exit\n\nDefault options:\
  \ -I 4 -overlap split\nThese can be overridden using -a \"<opts>\" or with the optional\
  \ trailing argument specifications\n\nThe following is an example of using label\
  \ input:\nmclcm <foo> -a \"-I 4\" -- \"--expect-abc --write-tab=<foo>.tab\"\n"
generated_using:
- --help
