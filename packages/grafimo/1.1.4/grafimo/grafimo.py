from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Directory, File, Array, Int, String

Grafimo_V0_1_0 = CommandToolBuilder(tool="grafimo", base_command=["grafimo"], inputs=[ToolInput(tag="in_number_cpu_cores", input_type=Boolean(optional=True), prefix="-j", doc=InputDocumentation(doc="[NCORES], --cores [NCORES]\nNumber of CPU cores to use. Use 0 to auto-detect.\nDefault: 0. To search motifs in a whole genome\nvariation graph the default is 1 (avoid memory\nissues).")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Print additional information about GRAFIMO run.")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="Enable error traceback.")), ToolInput(tag="in_output_directory", input_type=Directory(optional=True), prefix="-o", doc=InputDocumentation(doc="[OUTDIR], --out [OUTDIR]\nOutput directory. [optional]")), ToolInput(tag="in_path_reference_file", input_type=Boolean(optional=True), prefix="-l", doc=InputDocumentation(doc="[REFERENCE-FASTA], --linear-genome [REFERENCE-FASTA]\nPath to reference genome FASTA file.")), ToolInput(tag="in_path_vcf_becompressed", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="[VCF], --vcf [VCF]\nPath to VCF file. Note that the VCF should be\ncompressed (e.g. myvcf.vcf.gz).")), ToolInput(tag="in_chrom_s_build", input_type=Boolean(optional=True), prefix="--chroms-build", doc=InputDocumentation(doc="[1 [X ...]]\nChromosomes for which construct the VG. By default\nGRAFIMO constructs the VG for all chromsomes.")), ToolInput(tag="in_chrom_s_prefix_build", input_type=Boolean(optional=True), prefix="--chroms-prefix-build", doc=InputDocumentation(doc="[CHRPREFIX]\nPrefix to append in front of chromosome numbers. To\nname chromosome VGs with only their number (e.g.\n1.xg), use '--chroms-prefix-build '' '. Default: .")), ToolInput(tag="in_chrom_s_name_map_build", input_type=Boolean(optional=True), prefix="--chroms-namemap-build", doc=InputDocumentation(doc="[NAME-MAP-FILE]\nSpace or tab-separated file, containing original\nchromosome names in the first columns and the names to\nuse when storing corresponding VGs. By default the VGs\nare named after the encoded chromosome (e.g. chr1.xg).")), ToolInput(tag="in_re_index", input_type=Boolean(optional=True), prefix="--reindex", doc=InputDocumentation(doc="Reindex the VCF file with Tabix, even if a TBI index\nos already available.")), ToolInput(tag="in_path_vg_pangenome", input_type=Boolean(optional=True), prefix="-g", doc=InputDocumentation(doc="[GENOME-GRAPH], --genome-graph [GENOME-GRAPH]\nPath to VG pangenome variation graph (VG or XG\nformat).")), ToolInput(tag="in_path_directory_containing", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc="[GENOME-GRAPHS-DIR], --genome-graph-dir [GENOME-GRAPHS-DIR]\nPath to the directory containing the pangenome\nvariation graphs to scan (VG or XG format)")), ToolInput(tag="in_bed_file", input_type=File(optional=True), prefix="--bedfile", doc=InputDocumentation(doc="BED file containing the genomic regions to scan for\noccurrences of the input motif(s).")), ToolInput(tag="in_motif", input_type=Array(t=Int(), optional=True), prefix="--motif", doc=InputDocumentation(doc="Motif Position Weight Matrix (MEME or JASPAR format).")), ToolInput(tag="in_background_distribution_file", input_type=Boolean(optional=True), prefix="-k", doc=InputDocumentation(doc="[BACKGROUND], --bgfile [BACKGROUND]\nBackground distribution file.")), ToolInput(tag="in_pseudocount_used_processing", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="[PSEUDOCOUNT], --pseudo [PSEUDOCOUNT]\nPseudocount used during motif PWM processing.")), ToolInput(tag="in_statistical_significance_threshold", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="[THRESHOLD], --threshold [THRESHOLD]\nStatistical significance threshold value. By default\nthe threshold is applied on P-values. To apply the\nthreshold on q-values use the '--qvalueT' options.\nDefault:0.0001.")), ToolInput(tag="in_no_q_value", input_type=Boolean(optional=True), prefix="--no-qvalue", doc=InputDocumentation(doc="If used, GRAFIMO skips q-value computation.")), ToolInput(tag="in_no_reverse", input_type=Boolean(optional=True), prefix="--no-reverse", doc=InputDocumentation(doc="If used, GRAFIMO scans only the forward strand.")), ToolInput(tag="in_text_only", input_type=Boolean(optional=True), prefix="--text-only", doc=InputDocumentation(doc="Print results to stdout.")), ToolInput(tag="in_chrom_s_find", input_type=Boolean(optional=True), prefix="--chroms-find", doc=InputDocumentation(doc="[1 [X ...]]\nScan only the specified chromosomes.")), ToolInput(tag="in_chrom_s_prefix_find", input_type=Boolean(optional=True), prefix="--chroms-prefix-find", doc=InputDocumentation(doc="[CHRPREFIX]\nPrefix shared by all chromosomes. The prefix should be\nfollowed by the chromosome number. If chromosome VGs\nare stored only with their chromosome number (e.g.\n1.xg) use '--chroms-prefix-fin '' '. Default: .")), ToolInput(tag="in_chrom_s_name_map_find", input_type=Boolean(optional=True), prefix="--chroms-namemap-find", doc=InputDocumentation(doc="[NAME-MAP-FILE]\nSpace or tab-separated file, containing original\nchromosome names in the first columns and the names\nused to store the corresponding VGs. By default\nGRAFIMO assumes that VGs are named after the encoded\nchromosome (e.g. chr1.xg).")), ToolInput(tag="in_recomb", input_type=Boolean(optional=True), prefix="--recomb", doc=InputDocumentation(doc="Consider all the possible recombinants sequences which\ncould be obtained from the genetic variants encoded in\nthe VG. With this option the haplotypes encoded in the\nVG are ignored.")), ToolInput(tag="in_q_value_t", input_type=Boolean(optional=True), prefix="--qvalueT", doc=InputDocumentation(doc="Apply motif occurrence score statistical significance\nthreshold on q-values rather than on P-values.")), ToolInput(tag="in_top_graphs", input_type=Boolean(optional=True), prefix="--top-graphs", doc=InputDocumentation(doc="[GRAPHS-NUM]\nStore the PNG image of the top 'GRAPHS-NUM' regions of\nthe VG (motif occurrences sorted by increasing\nP-value).\n")), ToolInput(tag="in_workflow", input_type=String(), position=0, doc=InputDocumentation(doc="Mandatory argument placed immediately after 'grafimo'.\nOnly two values are accepted: 'buildvg' and\n'findmotif'. When called 'grafimo buildvg', the\nsoftware will compute the genome variation graph from\ninput data (see 'buildvg options' section below for\nmore arguments). When called 'grafimo findmotif', the\nsoftware will scan the input VG(s) for potential\noccurrences of the input motif(s) (see 'findmotif\noption' section below for more arguments)."))], outputs=[ToolOutput(tag="out_output_directory", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output_directory", type_hint=File()), doc=OutputDocumentation(doc="[OUTDIR], --out [OUTDIR]\nOutput directory. [optional]"))], container="quay.io/biocontainers/grafimo:1.1.4--py38h0dcb9f6_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Grafimo_V0_1_0().translate("wdl")

