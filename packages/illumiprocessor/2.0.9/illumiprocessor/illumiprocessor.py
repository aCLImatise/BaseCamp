from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Directory, File, Int, Boolean, String

Illumiprocessor_V0_1_0 = CommandToolBuilder(tool="illumiprocessor", base_command=["illumiprocessor"], inputs=[ToolInput(tag="in_input", input_type=Directory(optional=True), prefix="--input", doc=InputDocumentation(doc="The input directory of raw reads to trim. (default:\nNone)")), ToolInput(tag="in_output", input_type=Directory(optional=True), prefix="--output", doc=InputDocumentation(doc="The output directory of clean reads to create.\n(default: None)")), ToolInput(tag="in_config", input_type=File(optional=True), prefix="--config", doc=InputDocumentation(doc="A configuration file containing the tag:sample mapping\nand renaming options. (default: None)")), ToolInput(tag="in_trim_mo_matic", input_type=File(optional=True), prefix="--trimmomatic", doc=InputDocumentation(doc="The path to the trimmomatic-0.XX.jar file. (default:\n/usr/local/bin/trimmomatic)")), ToolInput(tag="in_min_len", input_type=Int(optional=True), prefix="--min-len", doc=InputDocumentation(doc="The minimum length of reads to keep. (default: 40)")), ToolInput(tag="in_no_merge", input_type=Boolean(optional=True), prefix="--no-merge", doc=InputDocumentation(doc="When trimming PE reads, do not merge singleton files.\n(default: False)")), ToolInput(tag="in_cores", input_type=Int(optional=True), prefix="--cores", doc=InputDocumentation(doc="Number of compute cores to use. (default: 1)")), ToolInput(tag="in_r_one_pattern", input_type=Int(optional=True), prefix="--r1-pattern", doc=InputDocumentation(doc="An optional regex pattern to find R1 reads. (default:\nNone)")), ToolInput(tag="in_r_two_pattern", input_type=Int(optional=True), prefix="--r2-pattern", doc=InputDocumentation(doc="An optional regex pattern to find R2 reads. (default:\nNone)")), ToolInput(tag="in_se", input_type=Boolean(optional=True), prefix="--se", doc=InputDocumentation(doc="Single-end reads. (default: False)")), ToolInput(tag="in_phred", input_type=String(optional=True), prefix="--phred", doc=InputDocumentation(doc="The type of fastq encoding used. (default: phred33)")), ToolInput(tag="in_log_path", input_type=File(optional=True), prefix="--log-path", doc=InputDocumentation(doc="The path to a directory to hold logs. (default: None)")), ToolInput(tag="in_verbosity", input_type=String(optional=True), prefix="--verbosity", doc=InputDocumentation(doc="The logging level to use. (default: INFO)\n"))], outputs=[ToolOutput(tag="out_output", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="The output directory of clean reads to create.\n(default: None)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Illumiprocessor_V0_1_0().translate("wdl", allow_empty_container=True)

