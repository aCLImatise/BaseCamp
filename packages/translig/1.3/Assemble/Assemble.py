from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, Boolean, Float, Directory

Assemble_V0_1_0 = CommandToolBuilder(tool="Assemble", base_command=["Assemble"], inputs=[ToolInput(tag="in_reads", input_type=File(optional=True), prefix="--reads", doc=InputDocumentation(doc=": the name of the file containing reads")), ToolInput(tag="in_km_er_length", input_type=Int(optional=True), prefix="--kmer_length", doc=InputDocumentation(doc=": length of kmer, default: 25.")), ToolInput(tag="in_double_stranded_mode", input_type=Boolean(optional=True), prefix="--double_stranded_mode", doc=InputDocumentation(doc=": set it true if double stranded mode.")), ToolInput(tag="in_fr_strand", input_type=Boolean(optional=True), prefix="--fr_strand", doc=InputDocumentation(doc="<int>              : strand specific protocol, default: 1\n( 1 : fr-firststrand, e.g. dUTP, NSR, NNSR\n2 : fr-secondstrand, e.g. Strandard SOLID )")), ToolInput(tag="in_paired_end", input_type=Boolean(optional=True), prefix="--paired_end", doc=InputDocumentation(doc=": set it true if paired reads.")), ToolInput(tag="in_min_seed_coverage", input_type=Int(optional=True), prefix="--min_seed_coverage", doc=InputDocumentation(doc=": minimum coverage of seed kmer, default: 2.")), ToolInput(tag="in_min_seed_entropy", input_type=Float(optional=True), prefix="--min_seed_entropy", doc=InputDocumentation(doc=": minimum entropy of seed kmer, default: 1.5")), ToolInput(tag="in_min_km_er_coverage", input_type=Int(optional=True), prefix="--min_kmer_coverage", doc=InputDocumentation(doc=": minimum coverage of kmer used to extend, default: 1.")), ToolInput(tag="in_min_km_er_entropy", input_type=Float(optional=True), prefix="--min_kmer_entropy", doc=InputDocumentation(doc=": minimum entroy of kmer used to extend, default: 0.0")), ToolInput(tag="in_min_junction_coverage", input_type=Int(optional=True), prefix="--min_junction_coverage", doc=InputDocumentation(doc=": minimum of the coverage of a junction, default: 2.")), ToolInput(tag="in_min_ratio_non_error", input_type=Float(optional=True), prefix="--min_ratio_non_error", doc=InputDocumentation(doc=": min ratio for low/high alternative extension that is\nnot an error, default: 0.05.")), ToolInput(tag="in_pair_gap_length", input_type=Boolean(optional=True), prefix="--pair_gap_length", doc=InputDocumentation(doc=": gap length of paired reads, default: 200.")), ToolInput(tag="in_out_dir", input_type=Directory(optional=True), prefix="--out_dir", doc=InputDocumentation(doc=": name of directory for output, default : ./RawGraphs"))], outputs=[ToolOutput(tag="out_out_dir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_out_dir", type_hint=File()), doc=OutputDocumentation(doc=": name of directory for output, default : ./RawGraphs"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Assemble_V0_1_0().translate("wdl", allow_empty_container=True)

