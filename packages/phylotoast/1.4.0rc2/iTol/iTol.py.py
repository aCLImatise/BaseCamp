from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Boolean

Itol_Py_V0_1_0 = CommandToolBuilder(tool="iTol.py", base_command=["iTol.py"], inputs=[ToolInput(tag="in_otu_table", input_type=File(optional=True), prefix="--otu_table", doc=InputDocumentation(doc="The biom-format file with OTU-Sample abundance data.")), ToolInput(tag="in_mapping", input_type=File(optional=True), prefix="--mapping", doc=InputDocumentation(doc="The mapping file specifying group information for each\nsample.")), ToolInput(tag="in_input_tree", input_type=String(optional=True), prefix="--input_tree", doc=InputDocumentation(doc="A phylogenetic tree in Newick format to be modified by\nexchanging the OTU ID node names for taxonomic names.")), ToolInput(tag="in_output_tre", input_type=File(optional=True), prefix="--output_tre", doc=InputDocumentation(doc="The output .tre file")), ToolInput(tag="in_output_it_ol_table", input_type=File(optional=True), prefix="--output_itol_table", doc=InputDocumentation(doc="Other than a phylogenetic tree, the main input to iTol\nis a dataset file containing some representation of\nthe abundance of every OTU across the specified data\ngroups. This program provides multiple calculation\nmethods. See the --analysis_metric option for details.")), ToolInput(tag="in_map_categories", input_type=String(optional=True), prefix="--map_categories", doc=InputDocumentation(doc="Any mapping categories, such as treatment type, that\nwill be used to group the data in the output iTol\ntable. For example, one category with three types will\nresult in three data columns in the final output. Two\ncategories with three types each will result in six\ndata columns. Default is no categories and all the\ndata will be treated as a single group.")), ToolInput(tag="in_analysis_metric", input_type=String(optional=True), prefix="--analysis_metric", doc=InputDocumentation(doc="Specifies which metric is calculated on the abundance\ndata in the OTU table. Available options: MRE - mean\nrelative abundance (Abundance data is normalized by\ntotal sample abundance, then averaged across OTU),\nNMRE - normalized mean relative abundance (MRE\nnormalized by the total MRE across the groups as\nspecified in --map_categories), raw (outputs the\nactual sequence abundance data for each OTU).")), ToolInput(tag="in_stabilize_variance", input_type=Boolean(optional=True), prefix="--stabilize_variance", doc=InputDocumentation(doc="Apply the variance-stabilizing arcsine square root\ntransformation to the OTU proportion data.")), ToolInput(tag="in_keep_ot_uids", input_type=Boolean(optional=True), prefix="--keep_otuids", doc=InputDocumentation(doc="Keep OTU IDs in the output files instead of.replacing\nthem with shortened taxonomic names.\n"))], outputs=[ToolOutput(tag="out_output_tre", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_tre", type_hint=File()), doc=OutputDocumentation(doc="The output .tre file"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Itol_Py_V0_1_0().translate("wdl", allow_empty_container=True)

