from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Array, String, Int, Boolean, Float, File

Epic2_V0_1_0 = CommandToolBuilder(tool="epic2", base_command=["epic2"], inputs=[ToolInput(tag="in_treatment", input_type=Array(t=String(), optional=True), prefix="--treatment", doc=InputDocumentation(doc="Treatment (pull-down) file(s) in one of these formats:\nbed, bedpe, bed.gz, bedpe.gz or (single-end) bam, sam.\nMixing file formats is allowed.")), ToolInput(tag="in_control", input_type=Array(t=String(), optional=True), prefix="--control", doc=InputDocumentation(doc="Control (input) file(s) in one of these formats: bed,\nbedpe, bed.gz, bedpe.gz or (single-end) bam, sam.\nMixing file formats is allowed.")), ToolInput(tag="in_genome", input_type=Int(optional=True), prefix="--genome", doc=InputDocumentation(doc="Which genome to analyze. Default: hg19. If\n--chromsizes and --egf flag is given, --genome is not\nrequired.")), ToolInput(tag="in_keep_duplicates", input_type=Boolean(optional=True), prefix="--keep-duplicates", doc=InputDocumentation(doc="Keep reads mapping to the same position on the same\nstrand within a library. Default: False.")), ToolInput(tag="in_original_algorithm", input_type=Boolean(optional=True), prefix="--original-algorithm", doc=InputDocumentation(doc="Use the original SICER algorithm, without the epic2\nfix. This will use all reads in your files to compute\nthe p-values, including those falling outside the\ngenome boundaries.")), ToolInput(tag="in_bin_size", input_type=Int(optional=True), prefix="--bin-size", doc=InputDocumentation(doc="Size of the windows to scan the genome. BIN-SIZE is\nthe smallest possible island. Default 200.")), ToolInput(tag="in_gaps_allowed", input_type=Int(optional=True), prefix="--gaps-allowed", doc=InputDocumentation(doc="This number is multiplied by the window size to\ndetermine the number of gaps (ineligible windows)\nallowed between two eligible windows. Must be an\ninteger. Default: 3.")), ToolInput(tag="in_fragment_size", input_type=Int(optional=True), prefix="--fragment-size", doc=InputDocumentation(doc="(Single end reads only) Size of the sequenced\nfragment. Each read is extended half the fragment size\nfrom the 5' end. Default 150 (i.e. extend by 75).")), ToolInput(tag="in_false_discovery_rate_cut_off", input_type=Float(optional=True), prefix="--false-discovery-rate-cutoff", doc=InputDocumentation(doc="Remove all islands with an FDR above cutoff. Default\n0.05.")), ToolInput(tag="in_effective_genome_fraction", input_type=Int(optional=True), prefix="--effective-genome-fraction", doc=InputDocumentation(doc="Use a different effective genome fraction than the one\nincluded in epic2. The default value depends on the\ngenome and readlength, but is a number between 0 and\n1.")), ToolInput(tag="in_chrom_sizes", input_type=File(optional=True), prefix="--chromsizes", doc=InputDocumentation(doc="Set the chromosome lengths yourself in a file with two\ncolumns: chromosome names and sizes. Useful to analyze\ncustom genomes, assemblies or simulated data. Only\nchromosomes included in the file will be analyzed.")), ToolInput(tag="in_e_value", input_type=Int(optional=True), prefix="--e-value", doc=InputDocumentation(doc="The E-value controls the genome-wide error rate of\nidentified islands under the random background\nassumption. Should be used when not using a control\nlibrary. Default: 1000.")), ToolInput(tag="in_required_flag", input_type=Int(optional=True), prefix="--required-flag", doc=InputDocumentation(doc="(bam only.) Keep reads with these bits set in flag.\nSame as `samtools view -f`. Default 0")), ToolInput(tag="in_filter_flag", input_type=Int(optional=True), prefix="--filter-flag", doc=InputDocumentation(doc="(bam only.) Discard reads with these bits set in flag.\nSame as `samtools view -F`. Default 1540 (hex: 0x604).\nSee https://broadinstitute.github.io/picard/explain-\nflags.html for more info.")), ToolInput(tag="in_mapq", input_type=Int(optional=True), prefix="--mapq", doc=InputDocumentation(doc="(bam only.) Discard reads with mapping quality lower\nthan this. Default 5.")), ToolInput(tag="in_autodetect_chrom_s", input_type=Boolean(optional=True), prefix="--autodetect-chroms", doc=InputDocumentation(doc="(bam only.) Autodetect chromosomes from bam file. Use\nwith --discard-chromosomes flag to avoid non-canonical\nchromosomes.")), ToolInput(tag="in_discard_chromosomes_pattern", input_type=String(optional=True), prefix="--discard-chromosomes-pattern", doc=InputDocumentation(doc="(bam only.) Discard reads from chromosomes matching\nthis pattern. Default '_'. Note that if you are not\ninterested in the results from non-canonical\nchromosomes, you should ensure they are removed with\nthis flag, otherwise they will make the statistical\nanalysis too stringent.")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="File to write results to. Default: stdout.")), ToolInput(tag="in_original_statistics", input_type=Boolean(optional=True), prefix="--original-statistics", doc=InputDocumentation(doc="Use the original SICER way of computing the\nstatistics. Like SICER itself, this method raises an\nerror on large datasets. Only included for debugging-\npurposes.")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="Do not write output messages to stderr.")), ToolInput(tag="in_example", input_type=Boolean(optional=True), prefix="--example", doc=InputDocumentation(doc="Show the paths of the example data and an example")), ToolInput(tag="in_command_dot", input_type=String(), position=0, doc=InputDocumentation(doc="--version, -v         show program's version number and exit"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Epic2_V0_1_0().translate("wdl", allow_empty_container=True)

