from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, File, Directory, Array, Int

Make_Hub_Py_V0_1_0 = CommandToolBuilder(tool="make_hub.py", base_command=["make_hub.py"], inputs=[ToolInput(tag="in_print_usage_examples", input_type=Boolean(optional=True), prefix="--printUsageExamples", doc=InputDocumentation(doc="Print usage examples for make_hub.py")), ToolInput(tag="in_email", input_type=String(optional=True), prefix="--email", doc=InputDocumentation(doc="Contact e-mail adress for assembly hub")), ToolInput(tag="in_genome", input_type=File(optional=True), prefix="--genome", doc=InputDocumentation(doc="Genome fasta file (possibly softmasked)")), ToolInput(tag="in_long_label", input_type=String(optional=True), prefix="--long_label", doc=InputDocumentation(doc="Long label for hub, e.g. species name in english and\nlatin, pass in single quotation marks, e.g.\n--long_label 'Dorosphila melanogster (fruit fly)'")), ToolInput(tag="in_short_label", input_type=Directory(optional=True), prefix="--short_label", doc=InputDocumentation(doc="Short label for hub, will also be used as directory\nname for hub, should not contain spaces or special\ncharacters, e.g. --short_label fly")), ToolInput(tag="in_bam", input_type=Array(t=String(), optional=True), prefix="--bam", doc=InputDocumentation(doc="BAM file(s) - space separated - with RNA-Seq\ninformation, by default will be displayed as bigWig")), ToolInput(tag="in_cores", input_type=Int(optional=True), prefix="--cores", doc=InputDocumentation(doc="Number of cores for samtools sort processes")), ToolInput(tag="in_display_bam_as_bam", input_type=Boolean(optional=True), prefix="--display_bam_as_bam", doc=InputDocumentation(doc="Display BAM file(s) as bam tracks")), ToolInput(tag="in_gem_oma_filtered_predictions", input_type=File(optional=True), prefix="--gemoma_filtered_predictions", doc=InputDocumentation(doc="GFF3 output file of Gemoma")), ToolInput(tag="in_braker_out_dir", input_type=Directory(optional=True), prefix="--braker_out_dir", doc=InputDocumentation(doc="BRAKER output directory with GTF files")), ToolInput(tag="in_maker_gff", input_type=File(optional=True), prefix="--maker_gff", doc=InputDocumentation(doc="MAKER2 output file in GFF3 format")), ToolInput(tag="in_glimmer_gff", input_type=File(optional=True), prefix="--glimmer_gff", doc=InputDocumentation(doc="GFF3 output file of GlimmerHMM")), ToolInput(tag="in_snap_gff", input_type=File(optional=True), prefix="--snap_gff", doc=InputDocumentation(doc="SNAP output file in GFF3 format")), ToolInput(tag="in_an_not", input_type=File(optional=True), prefix="--annot", doc=InputDocumentation(doc="GTF file with reference annotation")), ToolInput(tag="in_gene_track", input_type=Array(t=String(), optional=True), prefix="--gene_track", doc=InputDocumentation(doc="Gene track with user specified label, argument must be\nformatted as follows: --gene_track file.gtf tracklabel")), ToolInput(tag="in_add_track", input_type=Boolean(optional=True), prefix="--add_track", doc=InputDocumentation(doc="Add track(s) to existing hub")), ToolInput(tag="in_outdir", input_type=Directory(optional=True), prefix="--outdir", doc=InputDocumentation(doc="output directory to write hub to")), ToolInput(tag="in_no_repeats", input_type=Boolean(optional=True), prefix="--no_repeats", doc=InputDocumentation(doc="Disable repeat track generation from softmasked genome\nsequence (saves time)")), ToolInput(tag="in_sam_tools_path", input_type=File(optional=True), prefix="--SAMTOOLS_PATH", doc=InputDocumentation(doc="Path to samtools executable")), ToolInput(tag="in_bam_two_wig_path", input_type=Int(optional=True), prefix="--BAM2WIG_PATH", doc=InputDocumentation(doc="Path to bam2wig executable")), ToolInput(tag="in_hints", input_type=File(optional=True), prefix="--hints", doc=InputDocumentation(doc="GFF file with AUGUSTUS hints")), ToolInput(tag="in_train_genes", input_type=File(optional=True), prefix="--traingenes", doc=InputDocumentation(doc="GTF file with training genes")), ToolInput(tag="in_genemark", input_type=File(optional=True), prefix="--genemark", doc=InputDocumentation(doc="GTF file with GeneMark predictions")), ToolInput(tag="in_aug_ab_initio", input_type=File(optional=True), prefix="--aug_ab_initio", doc=InputDocumentation(doc="GTF file with ab initio AUGUSTUS predictions")), ToolInput(tag="in_aug_hints", input_type=File(optional=True), prefix="--aug_hints", doc=InputDocumentation(doc="GTF file with AUGUSTUS predictions with hints")), ToolInput(tag="in_aug_ab_initio_utr", input_type=File(optional=True), prefix="--aug_ab_initio_utr", doc=InputDocumentation(doc="GTF file with ab initio AUGUSTUS predictions with UTRs")), ToolInput(tag="in_aug_hints_utr", input_type=File(optional=True), prefix="--aug_hints_utr", doc=InputDocumentation(doc="GTF file with AUGUSTUS predictions with hints with\nUTRs")), ToolInput(tag="in_latin_name", input_type=String(optional=True), prefix="--latin_name", doc=InputDocumentation(doc="Latin species name, e.g. 'Drosophila melanogaster'.\nThis argument must be provided if the hub is supposed\nto be added to the public UCSC list.")), ToolInput(tag="in_assembly_version", input_type=Int(optional=True), prefix="--assembly_version", doc=InputDocumentation(doc="Assembly version, e.g. 'BDGP R4/dm3'. This argument\nmust be provided if the hub is supposed to be added to\nthe public UCSC list.")), ToolInput(tag="in_no_tmp_rm", input_type=Boolean(optional=True), prefix="--no_tmp_rm", doc=InputDocumentation(doc="Do not delete temporary files")), ToolInput(tag="in_no_gene_pred_to_big_gene_pred", input_type=Boolean(optional=True), prefix="--no_genePredToBigGenePred", doc=InputDocumentation(doc="Option for the special case in which the precompiled\nUCSC binaries are not working on your system, and you\ninstalled kentutils from the older ENCODE github\nrepository; if activated, gene prediction tracks will\nbe output to bigBed instead of bigGenePred format and\namino acid display will not be possible in gene\ntracks.")), ToolInput(tag="in_verbosity", input_type=Int(optional=True), prefix="--verbosity", doc=InputDocumentation(doc="If INT>0 verbose output log is produced\n"))], outputs=[ToolOutput(tag="out_gem_oma_filtered_predictions", output_type=File(optional=True), selector=InputSelector(input_to_select="in_gem_oma_filtered_predictions", type_hint=File()), doc=OutputDocumentation(doc="GFF3 output file of Gemoma")), ToolOutput(tag="out_braker_out_dir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_braker_out_dir", type_hint=File()), doc=OutputDocumentation(doc="BRAKER output directory with GTF files")), ToolOutput(tag="out_maker_gff", output_type=File(optional=True), selector=InputSelector(input_to_select="in_maker_gff", type_hint=File()), doc=OutputDocumentation(doc="MAKER2 output file in GFF3 format")), ToolOutput(tag="out_glimmer_gff", output_type=File(optional=True), selector=InputSelector(input_to_select="in_glimmer_gff", type_hint=File()), doc=OutputDocumentation(doc="GFF3 output file of GlimmerHMM")), ToolOutput(tag="out_snap_gff", output_type=File(optional=True), selector=InputSelector(input_to_select="in_snap_gff", type_hint=File()), doc=OutputDocumentation(doc="SNAP output file in GFF3 format")), ToolOutput(tag="out_outdir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_outdir", type_hint=File()), doc=OutputDocumentation(doc="output directory to write hub to"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Make_Hub_Py_V0_1_0().translate("wdl", allow_empty_container=True)

