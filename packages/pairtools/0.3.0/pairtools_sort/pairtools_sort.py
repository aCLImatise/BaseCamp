from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, Directory, String

Pairtools_Sort_V0_1_0 = CommandToolBuilder(tool="pairtools_sort", base_command=["pairtools", "sort"], inputs=[ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="output pairs file. If the path ends with .gz or\n.lz4, the output is compressed by pbgzip or lz4,\ncorrespondingly. By default, the output is printed\ninto stdout.")), ToolInput(tag="in_nproc", input_type=Int(optional=True), prefix="--nproc", doc=InputDocumentation(doc="Number of processes to split the sorting work")), ToolInput(tag="in_tmpdir", input_type=Directory(optional=True), prefix="--tmpdir", doc=InputDocumentation(doc="Custom temporary folder for sorting intermediates.")), ToolInput(tag="in_memory", input_type=Int(optional=True), prefix="--memory", doc=InputDocumentation(doc="The amount of memory used by default.  [default:\n2G]")), ToolInput(tag="in_compress_program", input_type=Int(optional=True), prefix="--compress-program", doc=InputDocumentation(doc="A binary to compress temporary sorted chunks. Must\ndecompress input when the flag -d is provided.\nSuggested alternatives: gzip, lzop, lz4c, snzip. If\n'auto', then use lz4c if available, and gzip\notherwise.  [default: auto]")), ToolInput(tag="in_nproc_in", input_type=Int(optional=True), prefix="--nproc-in", doc=InputDocumentation(doc="Number of processes used by the auto-guessed input\ndecompressing command.  [default: 3]")), ToolInput(tag="in_nproc_out", input_type=Int(optional=True), prefix="--nproc-out", doc=InputDocumentation(doc="Number of processes used by the auto-guessed output\ncompressing command.  [default: 8]")), ToolInput(tag="in_cmd_in", input_type=File(optional=True), prefix="--cmd-in", doc=InputDocumentation(doc="A command to decompress the input file. If\nprovided, fully overrides the auto-guessed command.\nDoes not work with stdin. Must read input from\nstdin and print output into stdout. EXAMPLE: pbgzip\n-dc -n 3")), ToolInput(tag="in_cmd_out", input_type=File(optional=True), prefix="--cmd-out", doc=InputDocumentation(doc="A command to compress the output file. If provided,\nfully overrides the auto-guessed command. Does not\nwork with stdout. Must read input from stdin and\nprint output into stdout. EXAMPLE: pbgzip -c -n 8")), ToolInput(tag="in_pair_type_dot", input_type=String(), position=0, doc=InputDocumentation(doc="PAIRS_PATH : input .pairs/.pairsam file. If the path ends with .gz or"))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="output pairs file. If the path ends with .gz or\n.lz4, the output is compressed by pbgzip or lz4,\ncorrespondingly. By default, the output is printed\ninto stdout."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Pairtools_Sort_V0_1_0().translate("wdl", allow_empty_container=True)

