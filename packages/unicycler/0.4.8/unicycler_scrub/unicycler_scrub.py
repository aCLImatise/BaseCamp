from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Int, Boolean

Unicycler_Scrub_V0_1_0 = CommandToolBuilder(tool="unicycler_scrub", base_command=["unicycler_scrub"], inputs=[ToolInput(tag="in_input", input_type=String(optional=True), prefix="--input", doc=InputDocumentation(doc="These are the reads or assembly to be scrubbed (can\nbe FASTA or FASTQ format")), ToolInput(tag="in_out", input_type=File(optional=True), prefix="--out", doc=InputDocumentation(doc="The scrubbed reads or assembly will be saved to this\nfile (will have the same format as the --input file\nformat) or use 'none' to not produce an output file")), ToolInput(tag="in_reads", input_type=File(optional=True), prefix="--reads", doc=InputDocumentation(doc="These are the reads used to scrub --input (can be\nFASTA or FASTQ format) (default: same file as\n--input)")), ToolInput(tag="in_trim", input_type=Int(optional=True), prefix="--trim", doc=InputDocumentation(doc="The aggressiveness with which the input will be\ntrimmed (0 to 100, where 0 is no trimming and 100 is\nvery aggressive trimming) (default: 50)")), ToolInput(tag="in_split", input_type=Int(optional=True), prefix="--split", doc=InputDocumentation(doc="The aggressiveness with which the input will be\nsplit (0 to 100, where 0 is no splitting and 100 is\nvery aggressive splitting) (default: 50)")), ToolInput(tag="in_min_split_size", input_type=Int(optional=True), prefix="--min_split_size", doc=InputDocumentation(doc="Parts of split sequences will only be outputted if\nthey are at least this big (default: 1000)")), ToolInput(tag="in_discard_chimeras", input_type=Boolean(optional=True), prefix="--discard_chimeras", doc=InputDocumentation(doc="If used, chimeric sequences will be discarded\ninstead of split (default: False)")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of threads used (default: 8)")), ToolInput(tag="in_keep_paf", input_type=Boolean(optional=True), prefix="--keep_paf", doc=InputDocumentation(doc="Save the alignments to file (makes repeated runs\nfaster because alignments can be loaded from file)\n(default: False)")), ToolInput(tag="in_parameters", input_type=String(optional=True), prefix="--parameters", doc=InputDocumentation(doc="Low-level parameters (for debugging use only)\n(default: )")), ToolInput(tag="in_verbosity", input_type=Int(optional=True), prefix="--verbosity", doc=InputDocumentation(doc="Level of stdout information (default: 1)\n0 = no stdout, 1 = basic progress indicators,\n2 = extra info, 3 = debugging info\n"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Unicycler_Scrub_V0_1_0().translate("wdl", allow_empty_container=True)

