from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Srax_V0_1_0 = CommandToolBuilder(tool="sraX", base_command=["sraX"], inputs=[ToolInput(tag="in_input_input_directory", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="|input      Input directory [/path/to/input_dir] containing the input file(s), which\nmust be in FASTA format and consisting of individual assembled genome sequences.")), ToolInput(tag="in_output_directory_store", input_type=Boolean(optional=True), prefix="-o", doc=InputDocumentation(doc="|output     Directory to store obtained results [/path/to/output_dir]. While not\nprovided, the following default name will be taken:\n'input_directory'_'sraX'_'id'_'aln_cov'_'seqal'\nExample:\n--------\nInput directory: 'Test'\nOptions: -id 85; -c 95; -p dblastx\nOutput directory: 'Test_sraX_85_95_dblastx'")), ToolInput(tag="in_seqal_preferred_algorithm", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="|seqal      The preferred algorithm for aligning the assembled genome(s) to a locally\ncompiled AMR DB. The possible choices are: 'dblastx' (DIAMOND blastx) or 'blastx'\n(NCBI blastx). In any case, the process is parallelized (up to 100 genome files are\nrun simultaneously) for reducing computing times. [string] Default: dblastx")), ToolInput(tag="in_msa_preferred_algorithm", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="|msa        The preferred algorithm for producing the alignment of clustered homologous\nsequences (multiple-sequence files). The possible choices are: 'muscle', 'clustalo'\nor 'mafft'. [string] Default: muscle\nNote: The accuracy and computing times are both dependent on the selected algorithm.")), ToolInput(tag="in_eval_minimum_evalue", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc="|eval       Minimum evalue cut-off to filter false positives. [number] Default: 1e-05")), ToolInput(tag="in_id", input_type=Boolean(optional=True), prefix="-id", doc=InputDocumentation(doc="Minimum identity cut-off to filter false positives. [number] Default: 85")), ToolInput(tag="in_alncov_minimum_length", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="|aln_cov    Minimum length of the query which must align to the reference sequence.\n[number] Default: 60")), ToolInput(tag="in_db", input_type=Boolean(optional=True), prefix="-db", doc=InputDocumentation(doc="|dbsearch  The level of the ARG search, on account of the number and type of employed AMR DB.\nThe possible choices are: 'basic' or 'ext'. The 'basic' option only applies 'CARD',\nwhile the 'ext' option utilizes as well the 'ARGminer' (compilation of multiple AMR\nDBs) and 'BACMET' (biocides and metal resistance) repositories. [string] Default:\nbasic\nNote: In operational terms, the extensive search ('ext' option) takes much longer\ncomputing times.")), ToolInput(tag="in_usersq_customary_amr", input_type=Boolean(optional=True), prefix="-u", doc=InputDocumentation(doc="|user_sq    Customary AMR DB provided by the user. The sequences must be in FASTA format.")), ToolInput(tag="in_threads_number_running", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="|threads    Number of threads when running sraX. [number] Default: 6")), ToolInput(tag="in_version_displays_version", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="|version    Displays version information and exits.")), ToolInput(tag="in_debug_verbose_output", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc="|debug      Verbose output (for debugging).\n'sraX' was last modified: 05th February 2020\n")), ToolInput(tag="in_synopsis", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_accomplished", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_enclosing", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_is", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_presence", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_repositories", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_by", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_designed", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_of", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_the", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_antimicrobial", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_running", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_selected", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_to", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_var_26", input_type=String(), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_genome", input_type=String(), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_read", input_type=String(), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_resistance", input_type=String(), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_assembled", input_type=String(), position=4, doc=InputDocumentation(doc="")), ToolInput(tag="in_genes", input_type=String(), position=4, doc=InputDocumentation(doc="")), ToolInput(tag="in_single", input_type=String(), position=4, doc=InputDocumentation(doc="")), ToolInput(tag="in_command_dot", input_type=String(), position=5, doc=InputDocumentation(doc="")), ToolInput(tag="in_sequence", input_type=String(), position=5, doc=InputDocumentation(doc="")), ToolInput(tag="in_under", input_type=String(), position=6, doc=InputDocumentation(doc="")), ToolInput(tag="in_files", input_type=String(), position=6, doc=InputDocumentation(doc="")), ToolInput(tag="in_default", input_type=String(), position=7, doc=InputDocumentation(doc="")), ToolInput(tag="in_var_38", input_type=String(), position=7, doc=InputDocumentation(doc="")), ToolInput(tag="in_required_dot", input_type=String(), position=7, doc=InputDocumentation(doc="")), ToolInput(tag="in_fast_a", input_type=String(), position=8, doc=InputDocumentation(doc="")), ToolInput(tag="in_var_41", input_type=String(), position=8, doc=InputDocumentation(doc="")), ToolInput(tag="in_parameters", input_type=String(), position=8, doc=InputDocumentation(doc="")), ToolInput(tag="in_addition", input_type=String(), position=9, doc=InputDocumentation(doc="")), ToolInput(tag="in_format", input_type=String(), position=9, doc=InputDocumentation(doc="")), ToolInput(tag="in_and", input_type=String(), position=10, doc=InputDocumentation(doc="")), ToolInput(tag="in_systematically", input_type=String(), position=11, doc=InputDocumentation(doc="")), ToolInput(tag="in_detect", input_type=String(), position=12, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Srax_V0_1_0().translate("wdl", allow_empty_container=True)

