from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, File, String, Float

Fits2Bitmap_V0_1_0 = CommandToolBuilder(tool="fits2bitmap", base_command=["fits2bitmap"], inputs=[ToolInput(tag="in_ext", input_type=Int(optional=True), prefix="--ext", doc=InputDocumentation(doc="Specify the HDU extension number or name (Default is\n0).")), ToolInput(tag="in_filename_output_image", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="Filename for the output image (Default is a PNG file\nwith the same name as the FITS file).")), ToolInput(tag="in_stretch", input_type=String(optional=True), prefix="--stretch", doc=InputDocumentation(doc="Type of image stretching ('linear', 'sqrt', 'power',\n'log', or 'asinh') (Default is 'linear').")), ToolInput(tag="in_power", input_type=Float(optional=True), prefix="--power", doc=InputDocumentation(doc="Power index for 'power' stretching (Default is 1.0).")), ToolInput(tag="in_asinh_a", input_type=Float(optional=True), prefix="--asinh_a", doc=InputDocumentation(doc="The value in normalized image where the asinh curve\ntransitions from linear to logarithmic behavior (used\nonly for 'asinh' stretch) (Default is 0.1).")), ToolInput(tag="in_min_cut", input_type=Int(optional=True), prefix="--min_cut", doc=InputDocumentation(doc="The pixel value of the minimum cut level (Default is\nthe image minimum).")), ToolInput(tag="in_max_cut", input_type=Int(optional=True), prefix="--max_cut", doc=InputDocumentation(doc="The pixel value of the maximum cut level (Default is\nthe image maximum).")), ToolInput(tag="in_min_percent", input_type=Int(optional=True), prefix="--min_percent", doc=InputDocumentation(doc="The percentile value used to determine the minimum cut\nlevel (Default is 0).")), ToolInput(tag="in_max_percent", input_type=Int(optional=True), prefix="--max_percent", doc=InputDocumentation(doc="The percentile value used to determine the maximum cut\nlevel (Default is 100).")), ToolInput(tag="in_percent", input_type=Int(optional=True), prefix="--percent", doc=InputDocumentation(doc="The percentage of the image values used to determine\nthe pixel values of the minimum and maximum cut levels\n(Default is 100).")), ToolInput(tag="in_cmap", input_type=String(optional=True), prefix="--cmap", doc=InputDocumentation(doc="matplotlib color map name (Default is 'Greys_r').")), ToolInput(tag="in_filename", input_type=File(), position=0, doc=InputDocumentation(doc="Path to one or more FITS files to convert"))], outputs=[ToolOutput(tag="out_filename_output_image", output_type=File(optional=True), selector=InputSelector(input_to_select="in_filename_output_image", type_hint=File()), doc=OutputDocumentation(doc="Filename for the output image (Default is a PNG file\nwith the same name as the FITS file)."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Fits2Bitmap_V0_1_0().translate("wdl", allow_empty_container=True)

