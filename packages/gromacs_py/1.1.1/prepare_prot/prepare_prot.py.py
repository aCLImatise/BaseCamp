from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Directory, Boolean, Float, Int, String

Prepare_Prot_Py_V0_1_0 = CommandToolBuilder(tool="prepare_prot.py", base_command=["prepare_prot.py"], inputs=[ToolInput(tag="in_input_pdb_file", input_type=File(optional=True), prefix="-f", doc=InputDocumentation(doc="Input PDB file")), ToolInput(tag="in_output_directory", input_type=Directory(optional=True), prefix="-o", doc=InputDocumentation(doc="Output Directory")), ToolInput(tag="in_output_file_name", input_type=File(optional=True), prefix="-n", doc=InputDocumentation(doc="Output file name")), ToolInput(tag="in_no_v_site", input_type=Boolean(optional=True), prefix="-no_vsite", doc=InputDocumentation(doc="Use virtual site for hydrogens")), ToolInput(tag="in_ion_concentration_mm", input_type=Float(optional=True), prefix="-C", doc=InputDocumentation(doc="Ion concentration (mM), default = 0.15 (150mM)")), ToolInput(tag="in_m_steps", input_type=Int(optional=True), prefix="-m_steps", doc=InputDocumentation(doc="Minimisation nsteps, default=10000")), ToolInput(tag="in_ha_time", input_type=Float(optional=True), prefix="-HA_time", doc=InputDocumentation(doc="Equilibration with HA constraint time(ns), default =\n2.5 ns")), ToolInput(tag="in_ca_time", input_type=Int(optional=True), prefix="-CA_time", doc=InputDocumentation(doc="Equilibration with HA constraint time(ns), default = 5")), ToolInput(tag="in_dt_ha", input_type=Float(optional=True), prefix="-dt_HA", doc=InputDocumentation(doc="Equi HA dt, default=0.002 (2 fs)")), ToolInput(tag="in_dt", input_type=Float(optional=True), prefix="-dt", doc=InputDocumentation(doc="Equi CA, CA_LOW, dt, default=0.005 (5 fs)")), ToolInput(tag="in_max_warn", input_type=Int(optional=True), prefix="-maxwarn", doc=InputDocumentation(doc="Total number of warnings allowed for the\nequilibration, default=0")), ToolInput(tag="in_nt", input_type=Int(optional=True), prefix="-nt", doc=InputDocumentation(doc="Total number of threads to start, default=0")), ToolInput(tag="in_nt_mpi", input_type=Int(optional=True), prefix="-ntmpi", doc=InputDocumentation(doc="Number of thread-MPI threads to start, default=0")), ToolInput(tag="in_gpu_id", input_type=String(optional=True), prefix="-gpu_id", doc=InputDocumentation(doc="List of GPU device id-s to use, default=''")), ToolInput(tag="in_ns", input_type=String(), position=0, doc=InputDocumentation(doc="-CA_LOW_time CA_LOW_TIME"))], outputs=[ToolOutput(tag="out_output_directory", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output_directory", type_hint=File()), doc=OutputDocumentation(doc="Output Directory")), ToolOutput(tag="out_output_file_name", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_file_name", type_hint=File()), doc=OutputDocumentation(doc="Output file name"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Prepare_Prot_Py_V0_1_0().translate("wdl", allow_empty_container=True)

