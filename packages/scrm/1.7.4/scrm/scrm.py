from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, String, Boolean, File

Scrm_V0_1_0 = CommandToolBuilder(tool="scrm", base_command=["scrm"], inputs=[ToolInput(tag="in_l_set_recombination", input_type=Int(optional=True), prefix="-r", doc=InputDocumentation(doc="<L>       Set recombination rate to R and locus length to L.")), ToolInput(tag="in_sr", input_type=String(optional=True), prefix="-sr", doc=InputDocumentation(doc="<R>      Change the recombination rate R at sequence position p.")), ToolInput(tag="in_set_window_length", input_type=Int(optional=True), prefix="-l", doc=InputDocumentation(doc="Set the approximation window length to l.")), ToolInput(tag="in_s_sn_use", input_type=Int(optional=True), prefix="-I", doc=InputDocumentation(doc="<s1> ... <sn> [<M>]   Use an island model with npop populations,\nwhere s1 to sn individuals are sampled each population.\nOptionally assume a symmetric migration rate of M.")), ToolInput(tag="in_ei", input_type=Int(optional=True), prefix="-eI", doc=InputDocumentation(doc="<s1> ... <sn> [<M>]     Sample s1 to sn indiviuals from their\ncorresponding populations at time t.")), ToolInput(tag="in_assume_symmetric_rate", input_type=Int(optional=True), prefix="-M", doc=InputDocumentation(doc="Assume a symmetric migration rate of M/(npop-1).")), ToolInput(tag="in_m_change_rate", input_type=Int(optional=True), prefix="-eM", doc=InputDocumentation(doc="<M>      Change the symmetric migration rate to M/(npop-1) at time t.")), ToolInput(tag="in_m_set_rate", input_type=String(optional=True), prefix="-m", doc=InputDocumentation(doc="<j> <M>   Set the migration rate from population j to population i to M")), ToolInput(tag="in_i_j_m", input_type=String(optional=True), prefix="-em", doc=InputDocumentation(doc="<i> <j> <M>   Set the migration rate from population j to\npopulation i to M at time t.")), ToolInput(tag="in_ma", input_type=Int(optional=True), prefix="-ma", doc=InputDocumentation(doc="<M21> ...   Sets the (backwards) migration matrix.")), ToolInput(tag="in_ema", input_type=Int(optional=True), prefix="-ema", doc=InputDocumentation(doc="<M11> <M21> ...    Changes the migration matrix at time t")), ToolInput(tag="in_es", input_type=Int(optional=True), prefix="-es", doc=InputDocumentation(doc="<i> <p>  Population admixture. Replaces a fraction of 1-p of\npopulation i with individuals a from population npop + 1\nwhich is ignored afterwards (forward in time).")), ToolInput(tag="in_eps", input_type=Int(optional=True), prefix="-eps", doc=InputDocumentation(doc="<i> <j> <p>  Partial Population admixture. Replaces a fraction of 1-p of\npopulation i with individuals a from population j.")), ToolInput(tag="in_ej", input_type=String(optional=True), prefix="-ej", doc=InputDocumentation(doc="<i> <j>  Speciation event at time t. Creates population j\nfrom individuals of population i.")), ToolInput(tag="in_set_present_day_size_population", input_type=Int(optional=True), prefix="-n", doc=InputDocumentation(doc="<n>       Set the present day size of population i to n*N0.")), ToolInput(tag="in_i_change_size", input_type=Int(optional=True), prefix="-en", doc=InputDocumentation(doc="<i> <n>  Change the size of population i to n*N0 at time t.")), ToolInput(tag="in_set_present_day_size_populations", input_type=Int(optional=True), prefix="-eN", doc=InputDocumentation(doc="<n>      Set the present day size of all populations to n*N0.")), ToolInput(tag="in_set_exponential_growth_rate_population", input_type=String(optional=True), prefix="-g", doc=InputDocumentation(doc="<a>       Set the exponential growth rate of population i to a.")), ToolInput(tag="in_i_change_rate", input_type=String(optional=True), prefix="-eg", doc=InputDocumentation(doc="<i> <a>  Change the exponential growth rate of population i to a\nat time t.")), ToolInput(tag="in_set_exponential_growth_rate_populations", input_type=String(optional=True), prefix="-G", doc=InputDocumentation(doc="Set the exponential growth rate of all populations to a.")), ToolInput(tag="in_change_exponential_rate", input_type=String(optional=True), prefix="-eG", doc=InputDocumentation(doc="<a>      Change the exponential growth rate of all populations to a\nat time t.")), ToolInput(tag="in_set_mutation_rate", input_type=Int(optional=True), prefix="-t", doc=InputDocumentation(doc="Set the mutation rate to theta = 4N0*mu, where mu is the\nneutral mutation rate per locus.")), ToolInput(tag="in_print_genealogies_newick", input_type=Boolean(optional=True), prefix="-T", doc=InputDocumentation(doc="Print the simulated local genealogies in Newick format.")), ToolInput(tag="in_print_genealogies_oriented", input_type=Boolean(optional=True), prefix="-O", doc=InputDocumentation(doc="Print the simulated local genealogies in Oriented Forest format.")), ToolInput(tag="in_print_tmrca_length", input_type=Boolean(optional=True), prefix="-L", doc=InputDocumentation(doc="Print the TMRCA and the local tree length for each segment.")), ToolInput(tag="in_os_fs", input_type=Boolean(optional=True), prefix="-oSFS", doc=InputDocumentation(doc="Print the Site Frequency Spectrum for each locus.")), ToolInput(tag="in_sc", input_type=Boolean(optional=True), prefix="-SC", doc=InputDocumentation(doc="[ms|rel|abs] Scaling of sequence positions. Either\nrelative (rel) to the locus length between 0 and 1,\nabsolute (abs) in base pairs or as in ms (default).")), ToolInput(tag="in_in_it", input_type=File(optional=True), prefix="-init", doc=InputDocumentation(doc="Read genealogies at the beginning of the sequence.")), ToolInput(tag="in_seed", input_type=Int(optional=True), prefix="-seed", doc=InputDocumentation(doc="[<SEED2> <SEED3>]   The random seed to use. Takes up to three\ninteger numbers.")), ToolInput(tag="in_specify_number_significant", input_type=Int(optional=True), prefix="-p", doc=InputDocumentation(doc="Specify the number of significant digits used in the output.\nDefaults to 6.")), ToolInput(tag="in_print_model", input_type=Boolean(optional=True), prefix="--print-model", doc=InputDocumentation(doc="Prints information about the demographic model."))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Scrm_V0_1_0().translate("wdl", allow_empty_container=True)

