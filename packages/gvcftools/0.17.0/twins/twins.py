from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Int, File, Boolean

Twins_V0_1_0 = CommandToolBuilder(tool="twins", base_command=["twins"], inputs=[ToolInput(tag="in_ref", input_type=String(optional=True), prefix="--ref", doc=InputDocumentation(doc="samtools reference sequence (required)")), ToolInput(tag="in_region", input_type=String(optional=True), prefix="--region", doc=InputDocumentation(doc="samtools reference region (optional)")), ToolInput(tag="in_exclude", input_type=String(optional=True), prefix="--exclude", doc=InputDocumentation(doc="name of chromosome to skip over (argument may be\nspecified multiple times). Exclusions will be ignored\nif a region argument is provided")), ToolInput(tag="in_twin_one", input_type=Int(optional=True), prefix="--twin1", doc=InputDocumentation(doc="twin/replicate 1 gvcf file")), ToolInput(tag="in_twin_two", input_type=Int(optional=True), prefix="--twin2", doc=InputDocumentation(doc="twin/replicate 2 gvcf file")), ToolInput(tag="in_conflict_file", input_type=File(optional=True), prefix="--conflict-file", doc=InputDocumentation(doc="Write all conflict positions to the specified file")), ToolInput(tag="in_no_variable_metadata", input_type=Boolean(optional=True), prefix="--no-variable-metadata", doc=InputDocumentation(doc="Remove timestamp and any other metadata from output\nduring validation testing")), ToolInput(tag="in_murdock", input_type=Boolean(optional=True), prefix="--murdock", doc=InputDocumentation(doc="If true, don't stop because of any out-of-order\nposition conflicts. Any out of order positions are\nignored. In case of an overlap the first observation\nis used and subsequent repeats are ignored.")), ToolInput(tag="in_min_gq_x", input_type=Int(optional=True), prefix="--min-gqx", doc=InputDocumentation(doc="If GQX value for a record is below this value, then\ndon't use the locus. Note that if the filter field\nalready contains a GQX filter, this will not 'rescue'\nfiltered variants when min-gqx is set very low -- this\nfilter can only lower callability on a file. Any\nrecords missing the GQX field will not be filtered\nout. (default: 0)")), ToolInput(tag="in_min_pos_rank_sum", input_type=Int(optional=True), prefix="--min-pos-rank-sum", doc=InputDocumentation(doc="Filter site if the INFO field contains the key\nBaseQRankSum and the value is less than the minimum.\n(default: no-filter)")), ToolInput(tag="in_min_qd", input_type=Int(optional=True), prefix="--min-qd", doc=InputDocumentation(doc="Filter site if the INFO field contains the key QD and\nthe value is less than the minimum. (default:\nno-filter)")), ToolInput(tag="in_min_info_field", input_type=Int(optional=True), prefix="--min-info-field", doc=InputDocumentation(doc="Filter records which contain an INFO key equal to\nargument1, and a corresponding value less than\nargument2")), ToolInput(tag="in_max_info_field", input_type=Int(optional=True), prefix="--max-info-field", doc=InputDocumentation(doc="Filter records which contain an INFO key equal to\nargument1, and a corresponding value greater than\nargument2"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Twins_V0_1_0().translate("wdl", allow_empty_container=True)

