from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean, Int, String, Array

Falconsense_V0_1_0 = CommandToolBuilder(tool="falconsense", base_command=["falconsense"], inputs=[ToolInput(tag="in_mandatory_path_seqstore", input_type=File(optional=True), prefix="-S", doc=InputDocumentation(doc="mandatory path to seqStore")), ToolInput(tag="in_mandatory_path_corstore", input_type=File(optional=True), prefix="-C", doc=InputDocumentation(doc="mandatory path to corStore")), ToolInput(tag="in_output_filename_prefix", input_type=File(optional=True), prefix="-p", doc=InputDocumentation(doc="output filename prefix")), ToolInput(tag="in_cns", input_type=Boolean(optional=True), prefix="-cns", doc=InputDocumentation(doc="enable primary output (to 'prefix.cns')")), ToolInput(tag="in_fast_q", input_type=Boolean(optional=True), prefix="-fastq", doc=InputDocumentation(doc="enable fastq output (to 'prefix.fastq')")), ToolInput(tag="in_log", input_type=Boolean(optional=True), prefix="-log", doc=InputDocumentation(doc="enable (debug) logging output (to 'prefix.log')")), ToolInput(tag="in_number_use_default", input_type=Int(optional=True), prefix="-t", doc=InputDocumentation(doc="number of compute threads to use (default: all)")), ToolInput(tag="in_align_evidence_full", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc="align evidence to the full read, ignore overlap position")), ToolInput(tag="in_only_process_reads_listed", input_type=File(optional=True), prefix="-R", doc=InputDocumentation(doc="only process reads listed in file 'readsToCorrect'")), ToolInput(tag="in_only_process_reads_inclusive", input_type=String(optional=True), prefix="-r", doc=InputDocumentation(doc="[-end]       only process reads from ID 'bgn' to 'end' (inclusive)")), ToolInput(tag="in_cc", input_type=String(optional=True), prefix="-cc", doc=InputDocumentation(doc="output:   minimum consensus coverage needed call a corrected base")), ToolInput(tag="in_cl", input_type=Int(optional=True), prefix="-cl", doc=InputDocumentation(doc="output:   minimum length of corrected region to output as a corrected read")), ToolInput(tag="in_oi", input_type=String(optional=True), prefix="-oi", doc=InputDocumentation(doc="evidence: minimum identity of an aligned evidence read overlap")), ToolInput(tag="in_ol", input_type=Int(optional=True), prefix="-ol", doc=InputDocumentation(doc="evidence: minimum length   of an aligned evidence read overlap")), ToolInput(tag="in_partition", input_type=String(optional=True), prefix="-partition", doc=InputDocumentation(doc="m R   configure jobs to fit in M GB memory with not more than R reads per batch,\nallowing m GB memory for processing.  write output to 'prefix.batches'.")), ToolInput(tag="in_export", input_type=File(optional=True), prefix="-export", doc=InputDocumentation(doc="write the data used for the computation to file 'name'")), ToolInput(tag="in_import", input_type=File(optional=True), prefix="-import", doc=InputDocumentation(doc="compute using the data in file 'name'")), ToolInput(tag="in_o", input_type=Array(t=String(), optional=True), prefix="-O", doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output_filename_prefix", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_filename_prefix", type_hint=File()), doc=OutputDocumentation(doc="output filename prefix"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Falconsense_V0_1_0().translate("wdl", allow_empty_container=True)

