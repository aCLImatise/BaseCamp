from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, Boolean, File, String

Sqstoredumpfastq_V0_1_0 = CommandToolBuilder(tool="sqStoreDumpFASTQ", base_command=["sqStoreDumpFASTQ"], inputs=[ToolInput(tag="in_write_files_sequences", input_type=Int(optional=True), prefix="-S", doc=InputDocumentation(doc="write files out-prefix.(libname).fastq, ...\nif out-prefix is '-', all sequences output to stdout\nif out-prefix ends in .gz, .bz2 or .xz, output is compressed")), ToolInput(tag="in_fast_q", input_type=Boolean(optional=True), prefix="-fastq", doc=InputDocumentation(doc="output is FASTQ format (with extension .fastq, default)\n(note that QVs are not stored, and are invalid)")), ToolInput(tag="in_fast_a", input_type=Boolean(optional=True), prefix="-fasta", doc=InputDocumentation(doc="output is FASTA format (with extension .fasta)")), ToolInput(tag="in_no_libname", input_type=File(optional=True), prefix="-nolibname", doc=InputDocumentation(doc="don't include the library name in the output file name")), ToolInput(tag="in_no_read_name", input_type=Boolean(optional=True), prefix="-noreadname", doc=InputDocumentation(doc="don't include the read name in the sequence header.  header will be:\n'>original-name id=<seqID> clr=<bgn>,<end>   with names\n'>read<seqID> clr=<bgn>,<end>                without names")), ToolInput(tag="in_reverse", input_type=Boolean(optional=True), prefix="-reverse", doc=InputDocumentation(doc="Dump the reverse-complement of the read.")), ToolInput(tag="in_output_only_read_number", input_type=Int(optional=True), prefix="-l", doc=InputDocumentation(doc="output only read in library number 'id'")), ToolInput(tag="in_output_only_single_read", input_type=String(optional=True), prefix="-r", doc=InputDocumentation(doc="[-id]          output only the single read 'id', or the specified range of ids")), ToolInput(tag="in_raw", input_type=Boolean(optional=True), prefix="-raw", doc=InputDocumentation(doc="Dump raw reads.")), ToolInput(tag="in_corrected", input_type=Boolean(optional=True), prefix="-corrected", doc=InputDocumentation(doc="Dump corrected reads.")), ToolInput(tag="in_trimmed", input_type=Boolean(optional=True), prefix="-trimmed", doc=InputDocumentation(doc="Dump the trimmed version of the raw/corrected read.")), ToolInput(tag="in_compressed", input_type=Boolean(optional=True), prefix="-compressed", doc=InputDocumentation(doc="Dump the compressed version of the raw/corrected read.")), ToolInput(tag="in_normal", input_type=Boolean(optional=True), prefix="-normal", doc=InputDocumentation(doc="Dump the uncompressed version of the raw/corrected read.\n(for stores that are by default compressing homopolymers)"))], outputs=[ToolOutput(tag="out_no_libname", output_type=File(optional=True), selector=InputSelector(input_to_select="in_no_libname", type_hint=File()), doc=OutputDocumentation(doc="don't include the library name in the output file name"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Sqstoredumpfastq_V0_1_0().translate("wdl", allow_empty_container=True)

