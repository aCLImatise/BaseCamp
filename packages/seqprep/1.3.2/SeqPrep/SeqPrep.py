from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Int, Boolean

Seqprep_V0_1_0 = CommandToolBuilder(tool="SeqPrep", base_command=["SeqPrep"], inputs=[ToolInput(tag="in_the_spinner", input_type=String(optional=True), prefix="-S", doc=InputDocumentation(doc="the spinner?")), ToolInput(tag="in_help_message_exit", input_type=File(optional=True), prefix="-3", doc=InputDocumentation(doc="this help message and exit (also works with no args)")), ToolInput(tag="in_sequence_phred_format", input_type=Int(optional=True), prefix="-6", doc=InputDocumentation(doc="sequence is in phred+64 rather than phred+33 format, the output will still be phred+33")), ToolInput(tag="in_quality_score_cutoff", input_type=Boolean(optional=True), prefix="-q", doc=InputDocumentation(doc="<Quality score cutoff for mismatches to be counted in overlap; default = 13>")), ToolInput(tag="in_minimum_length_trimmed", input_type=Boolean(optional=True), prefix="-L", doc=InputDocumentation(doc="<Minimum length of a trimmed or merged read to print it; default = 30>")), ToolInput(tag="in_forward_read_sequence", input_type=Boolean(optional=True), prefix="-A", doc=InputDocumentation(doc="<forward read primer/adapter sequence to trim as it would appear at the end of a read (recommend about 20bp of this)\n(should validate by grepping a file); default (genomic non-multiplexed adapter1) = AGATCGGAAGAGCACACGTC>")), ToolInput(tag="in_reverse_read_sequence", input_type=Boolean(optional=True), prefix="-B", doc=InputDocumentation(doc="<reverse read primer/adapter sequence to trim as it would appear at the end of a read (recommend about 20bp of this)\n(should validate by grepping a file); default (genomic non-multiplexed adapter2) = AGATCGGAAGAGCGTCGTGT>")), ToolInput(tag="in_minimum_overall_base_pair_overlap_trim", input_type=Boolean(optional=True), prefix="-O", doc=InputDocumentation(doc="<minimum overall base pair overlap with adapter sequence to trim; default = 10>")), ToolInput(tag="in_maximum_fraction_for", input_type=Boolean(optional=True), prefix="-M", doc=InputDocumentation(doc="<maximum fraction of good quality mismatching bases for primer/adapter overlap; default = 0.020000>")), ToolInput(tag="in_minimum_fraction_matching", input_type=Boolean(optional=True), prefix="-N", doc=InputDocumentation(doc="<minimum fraction of matching bases for primer/adapter overlap; default = 0.870000>")), ToolInput(tag="in_adapter_alignment_bandwidth_default", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc="<adapter alignment band-width; default = 50>")), ToolInput(tag="in_adapter_alignment_gapopen", input_type=Boolean(optional=True), prefix="-Q", doc=InputDocumentation(doc="<adapter alignment gap-open; default = 8>")), ToolInput(tag="in_adapter_alignment_gapextension", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="<adapter alignment gap-extension; default = 2>")), ToolInput(tag="in_adapter_alignment_gapend_default", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc="<adapter alignment gap-end; default = 2>")), ToolInput(tag="in_adapter_alignment_minimum", input_type=Boolean(optional=True), prefix="-Z", doc=InputDocumentation(doc="<adapter alignment minimum local alignment score cutoff [roughly (2*num_hits) - (num_gaps*gap_open) - (num_gaps*gap_close) - (gap_len*gap_extend) - (2*num_mismatches)]; default = 26>")), ToolInput(tag="in_read_alignment_bandwidth_default", input_type=Boolean(optional=True), prefix="-w", doc=InputDocumentation(doc="<read alignment band-width; default = 50>")), ToolInput(tag="in_read_alignment_gapopen", input_type=Boolean(optional=True), prefix="-W", doc=InputDocumentation(doc="<read alignment gap-open; default = 26>")), ToolInput(tag="in_read_alignment_gapextension_default", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="<read alignment gap-extension; default = 9>")), ToolInput(tag="in_read_alignment_gapend", input_type=Boolean(optional=True), prefix="-P", doc=InputDocumentation(doc="<read alignment gap-end; default = 5>")), ToolInput(tag="in_read_alignment_maximum", input_type=Boolean(optional=True), prefix="-X", doc=InputDocumentation(doc="<read alignment maximum fraction gap cutoff; default = 0.125000>")), ToolInput(tag="in_use_mask_n", input_type=Boolean(optional=True), prefix="-z", doc=InputDocumentation(doc="<use mask; N will replace adapters>")), ToolInput(tag="in_maximum_quality_score", input_type=Boolean(optional=True), prefix="-y", doc=InputDocumentation(doc="<maximum quality score in output ((phred 33) default = ']' )>")), ToolInput(tag="in_print_overhang_are", input_type=Boolean(optional=True), prefix="-g", doc=InputDocumentation(doc="<print overhang when adapters are present and stripped (use this if reads are different length)>")), ToolInput(tag="in_max_number_write", input_type=File(optional=True), prefix="-s", doc=InputDocumentation(doc="<max number of pretty alignments to write (if -E provided); default = 10000>")), ToolInput(tag="in_minimum_overall_base_pair_overlap_merge", input_type=Boolean(optional=True), prefix="-o", doc=InputDocumentation(doc="<minimum overall base pair overlap to merge two reads; default = 15>")), ToolInput(tag="in_maximum_fraction_to", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="<maximum fraction of good quality mismatching bases to overlap reads; default = 0.020000>")), ToolInput(tag="in_minimum_fraction_overlap", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="<minimum fraction of matching bases to overlap reads; default = 0.900000>")), ToolInput(tag="in_required", input_type=String(optional=True), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_args", input_type=String(optional=True), position=1, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_max_number_write", output_type=File(optional=True), selector=InputSelector(input_to_select="in_max_number_write", type_hint=File()), doc=OutputDocumentation(doc="<max number of pretty alignments to write (if -E provided); default = 10000>"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Seqprep_V0_1_0().translate("wdl", allow_empty_container=True)

