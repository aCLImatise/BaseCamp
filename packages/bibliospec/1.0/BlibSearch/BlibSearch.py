from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, File, String

Blibsearch_V0_1_0 = CommandToolBuilder(tool="BlibSearch", base_command=["BlibSearch"], inputs=[ToolInput(tag="in_arg_remove_peaks", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="[ --clear-precursor ] arg (=1)  Remove the peaks in a X m/z window around\nthe precursor from the query and library\nspectrum.")), ToolInput(tag="in_top_peaks_for_search", input_type=Int(optional=True), prefix="--topPeaksForSearch", doc=InputDocumentation(doc="(=100)     Use ARG of the highest intensity peaks.")), ToolInput(tag="in_arg_compare_query", input_type=Boolean(optional=True), prefix="-w", doc=InputDocumentation(doc="[ --mz-window ] arg (=3)        Compare query to library spectra with\nprecursor m/z +/- ARG.")), ToolInput(tag="in_n", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="[ --min-peaks ] arg (=20)       Search only spectra with charge no less\nthan ARG.")), ToolInput(tag="in_l", input_type=Boolean(optional=True), prefix="-L", doc=InputDocumentation(doc="[ --low-charge ] arg (=1)       Search only spectra with charge no less\nthan ARG.")), ToolInput(tag="in_arg_search_only_spectra_higherthan", input_type=Boolean(optional=True), prefix="-H", doc=InputDocumentation(doc="[ --high-charge ] arg (=5)      Search only spectra with charge no higher\nthan ARG.")), ToolInput(tag="in_arg_return_arg", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="[ --report-matches ] arg (=5)   Return ARG of the best matches for each")), ToolInput(tag="in_psm_result_file", input_type=File(optional=True), prefix="--psm-result-file", doc=InputDocumentation(doc="Return results in a .psm file named ARG.")), ToolInput(tag="in_arg_return_results", input_type=Boolean(optional=True), prefix="-R", doc=InputDocumentation(doc="[ --report-file ] arg           Return results in report file named ARG.\nDefault is <spectrum file name>.report.")), ToolInput(tag="in_preserve_order", input_type=Boolean(optional=True), prefix="--preserve-order", doc=InputDocumentation(doc="Search spectra in the order they appear in\nthe file.  Default to search as sorted by\nprecursor m/z.")), ToolInput(tag="in_arg_file_containing", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="[ --parameter-file ] arg        File containing search parameters.\nCommand line values override file values.")), ToolInput(tag="in_arg_status_control", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="[ --verbosity ] arg (=status)   Control the level of output to stderr.\n(silent, error, status, warn, debug,\ndetail, all)  Default status.")), ToolInput(tag="in_query_dot", input_type=String(), position=0, doc=InputDocumentation(doc="Use -1 to report all."))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Blibsearch_V0_1_0().translate("wdl", allow_empty_container=True)

