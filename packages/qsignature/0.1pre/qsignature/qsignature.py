from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String

Qsignature_V0_1_0 = CommandToolBuilder(tool="qsignature", base_command=["qsignature"], inputs=[ToolInput(tag="in_d_three_two", input_type=Boolean(optional=True), prefix="-d32", doc=InputDocumentation(doc="use a 32-bit data model if available")), ToolInput(tag="in_d_six_four", input_type=Boolean(optional=True), prefix="-d64", doc=InputDocumentation(doc="use a 64-bit data model if available")), ToolInput(tag="in_server", input_type=Boolean(optional=True), prefix="-server", doc=InputDocumentation(doc="to select the 'server' VM\nThe default VM is server,\nbecause you are running on a server-class machine.")), ToolInput(tag="in_classpath", input_type=File(optional=True), prefix="-classpath", doc=InputDocumentation(doc="A : separated list of directories, JAR archives,\nand ZIP archives to search for class files.")), ToolInput(tag="in_namevalueset_system_property", input_type=Boolean(optional=True), prefix="-D", doc=InputDocumentation(doc="<name>=<value>\nset a system property")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="-verbose", doc=InputDocumentation(doc=":[class|gc|jni]\nenable verbose output")), ToolInput(tag="in_show_version", input_type=Boolean(optional=True), prefix="-showversion", doc=InputDocumentation(doc="print product version and continue")), ToolInput(tag="in_no_jre_restrict_search", input_type=Boolean(optional=True), prefix="-no-jre-restrict-search", doc=InputDocumentation(doc="Warning: this feature is deprecated and will be removed\nin a future release.\ninclude/exclude user private JREs in the version search")), ToolInput(tag="in_print_help_nonstandard", input_type=Boolean(optional=True), prefix="-X", doc=InputDocumentation(doc="print help on non-standard options")), ToolInput(tag="in_ea", input_type=Boolean(optional=True), prefix="-ea", doc=InputDocumentation(doc="[:<packagename>...|:<classname>]")), ToolInput(tag="in_enable_assertions", input_type=Boolean(optional=True), prefix="-enableassertions", doc=InputDocumentation(doc="[:<packagename>...|:<classname>]\nenable assertions with specified granularity")), ToolInput(tag="in_da", input_type=Boolean(optional=True), prefix="-da", doc=InputDocumentation(doc="[:<packagename>...|:<classname>]")), ToolInput(tag="in_disable_assertions", input_type=Boolean(optional=True), prefix="-disableassertions", doc=InputDocumentation(doc="[:<packagename>...|:<classname>]\ndisable assertions with specified granularity")), ToolInput(tag="in_enable_system_assertions", input_type=Boolean(optional=True), prefix="-enablesystemassertions", doc=InputDocumentation(doc="enable system assertions")), ToolInput(tag="in_disable_system_assertions", input_type=Boolean(optional=True), prefix="-disablesystemassertions", doc=InputDocumentation(doc="disable system assertions")), ToolInput(tag="in_agent_lib", input_type=Boolean(optional=True), prefix="-agentlib", doc=InputDocumentation(doc=":<libname>[=<options>]\nload native agent library <libname>, e.g. -agentlib:hprof\nsee also, -agentlib:jdwp=help and -agentlib:hprof=help")), ToolInput(tag="in_agent_path", input_type=Boolean(optional=True), prefix="-agentpath", doc=InputDocumentation(doc=":<pathname>[=<options>]\nload native agent library by full pathname")), ToolInput(tag="in_java_agent", input_type=Boolean(optional=True), prefix="-javaagent", doc=InputDocumentation(doc=":<jarpath>[=<options>]\nload Java programming language agent, see java.lang.instrument")), ToolInput(tag="in_splash", input_type=Boolean(optional=True), prefix="-splash", doc=InputDocumentation(doc=":<imagepath>\nshow splash screen with specified image")), ToolInput(tag="in_options", input_type=Boolean(optional=True), prefix="-options", doc=InputDocumentation(doc="")), ToolInput(tag="in_or", input_type=String(), position=0, doc=InputDocumentation(doc="java [-options] -jar jarfile [args...]\n(to execute a jar file)"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Qsignature_V0_1_0().translate("wdl", allow_empty_container=True)

