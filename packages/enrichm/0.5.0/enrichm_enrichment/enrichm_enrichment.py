from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, Directory, Boolean, String, Float

Enrichm_Enrichment_V0_1_0 = CommandToolBuilder(tool="enrichm_enrichment", base_command=["enrichm", "enrichment"], inputs=[ToolInput(tag="in_log", input_type=File(optional=True), prefix="--log", doc=InputDocumentation(doc="Output logging information to this file.")), ToolInput(tag="in_verbosity", input_type=Int(optional=True), prefix="--verbosity", doc=InputDocumentation(doc="Level of verbosity (1 - 5 - default = 4) 5 = Very verbose, 1 = Silent")), ToolInput(tag="in_output", input_type=Directory(optional=True), prefix="--output", doc=InputDocumentation(doc="Output directory")), ToolInput(tag="in_force", input_type=Boolean(optional=True), prefix="--force", doc=InputDocumentation(doc="Overwrite previous run")), ToolInput(tag="in_annotate_output", input_type=Directory(optional=True), prefix="--annotate_output", doc=InputDocumentation(doc="Output directory provided by enrichm annotate")), ToolInput(tag="in_metadata", input_type=File(optional=True), prefix="--metadata", doc=InputDocumentation(doc="Metadata file with two columns, the first with the genome name, the second with the groupings to compare.")), ToolInput(tag="in_annotation_matrix", input_type=String(optional=True), prefix="--annotation_matrix", doc=InputDocumentation(doc="Annotation matrix to compare.")), ToolInput(tag="in_abundance", input_type=String(optional=True), prefix="--abundance", doc=InputDocumentation(doc="Genome abundance matrix.")), ToolInput(tag="in_abundance_metadata", input_type=String(optional=True), prefix="--abundance_metadata", doc=InputDocumentation(doc="Metadata grouping abundance samples.")), ToolInput(tag="in_transcriptome", input_type=String(optional=True), prefix="--transcriptome", doc=InputDocumentation(doc="Genome abundance matrix.")), ToolInput(tag="in_transcriptome_metadata", input_type=String(optional=True), prefix="--transcriptome_metadata", doc=InputDocumentation(doc="Metadata grouping abundance samples.")), ToolInput(tag="in_batch_file", input_type=File(optional=True), prefix="--batchfile", doc=InputDocumentation(doc="metadata file to compare with.")), ToolInput(tag="in_pval_cut_off", input_type=Float(optional=True), prefix="--pval_cutoff", doc=InputDocumentation(doc="Only output results with a p-value below a this cutoff (default=0.05).")), ToolInput(tag="in_proportions_cut_off", input_type=String(optional=True), prefix="--proportions_cutoff", doc=InputDocumentation(doc="Proportion enrichment cutoff.")), ToolInput(tag="in_threshold", input_type=String(optional=True), prefix="--threshold", doc=InputDocumentation(doc="The threshold to control for in false discovery rate of familywise error rate.")), ToolInput(tag="in_multi_test_correction", input_type=Int(optional=True), prefix="--multi_test_correction", doc=InputDocumentation(doc="The form of mutiple test correction to use. Uses the statsmodel module and consequently has all of its options.\nDefault: Benjamini-Hochberg FDR (fdr_bh)\nOptions: Bonferroni (b)\nSidak (s)\nHolm (h)\nHolm-Sidak (hs)\nSimes-Hochberg (sh)\nHommel (ho)\nFDR Benjamini-Yekutieli (fdr_by)\nFDR 2-stage Benjamini-Hochberg (fdr_tsbh)\nFDR 2-stage Benjamini-Krieger-Yekutieli (fdr_tsbky)\nFDR adaptive Gavrilov-Benjamini-Sarkar (fdr_gbs))")), ToolInput(tag="in_processes", input_type=Int(optional=True), prefix="--processes", doc=InputDocumentation(doc="Number of processes to use for enrichment.")), ToolInput(tag="in_allow_negative_values", input_type=Boolean(optional=True), prefix="--allow_negative_values", doc=InputDocumentation(doc="Allow negative values in input matrix.")), ToolInput(tag="in_ko", input_type=Boolean(optional=True), prefix="--ko", doc=InputDocumentation(doc="Compare KO ids (annotated with DIAMOND)")), ToolInput(tag="in_ko_hmm", input_type=Boolean(optional=True), prefix="--ko_hmm", doc=InputDocumentation(doc="Compare KO ids (annotated with HMMs)")), ToolInput(tag="in_pfam", input_type=Boolean(optional=True), prefix="--pfam", doc=InputDocumentation(doc="Compare Pfam ids")), ToolInput(tag="in_tigr_fam", input_type=Boolean(optional=True), prefix="--tigrfam", doc=InputDocumentation(doc="Compare TIGRFAM ids")), ToolInput(tag="in_cluster", input_type=Boolean(optional=True), prefix="--cluster", doc=InputDocumentation(doc="Compare cluster ids")), ToolInput(tag="in_ortholog", input_type=Boolean(optional=True), prefix="--ortholog", doc=InputDocumentation(doc="Compare ortholog ids")), ToolInput(tag="in_ca_zy", input_type=Boolean(optional=True), prefix="--cazy", doc=InputDocumentation(doc="Compare dbCAN ids")), ToolInput(tag="in_ec", input_type=Boolean(optional=True), prefix="--ec", doc=InputDocumentation(doc="Compare EC ids"))], outputs=[ToolOutput(tag="out_log", output_type=File(optional=True), selector=InputSelector(input_to_select="in_log", type_hint=File()), doc=OutputDocumentation(doc="Output logging information to this file.")), ToolOutput(tag="out_output", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="Output directory")), ToolOutput(tag="out_annotate_output", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_annotate_output", type_hint=File()), doc=OutputDocumentation(doc="Output directory provided by enrichm annotate"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Enrichm_Enrichment_V0_1_0().translate("wdl", allow_empty_container=True)

