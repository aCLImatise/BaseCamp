!Command
command:
- gcloud
- kms
- decrypt
positional: []
named:
- !Flag
  description: "[--additional-authenticated-data-file=ADDITIONAL_AUTHENTICATED_DATA_FILE]\n\
    [--key=KEY] [--keyring=KEYRING] [--location=LOCATION]\n[GCLOUD_WIDE_FLAG ...]"
  synonyms:
  - --plaintext-file
  args: !SimpleFlagArg
    name: PLAINTEXT_FILE
  optional: true
- !Flag
  description: Path to the ciphertext file to decrypt.
  synonyms:
  - --ciphertext-file
  args: !SimpleFlagArg
    name: CIPHERTEXT_FILE
  optional: true
- !Flag
  description: Path to the optional file containing the additional authenticated data.
  synonyms:
  - --additional-authenticated-data-file
  args: !SimpleFlagArg
    name: ADDITIONAL_AUTHENTICATED_DATA_FILE
  optional: true
- !Flag
  description: The key to use for decryption.
  synonyms:
  - --key
  args: !SimpleFlagArg
    name: KEY
  optional: true
- !Flag
  description: The containing keyring.
  synonyms:
  - --keyring
  args: !SimpleFlagArg
    name: KEYRING
  optional: true
- !Flag
  description: The location of the requested resource.
  synonyms:
  - --location
  args: !SimpleFlagArg
    name: LOCATION
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: $ gcloud help for details.
  synonyms:
  - --flatten
  - --format
  - --help
  - --log-http
  - --project
  - --quiet
  - --trace-token
  - --user-output-enabled
  - --verbosity.
  args: !SimpleFlagArg
    name: Run
  optional: true
usage_flag:
version_flag:
help_text: "NAME\n    gcloud kms decrypt - decrypt a ciphertext file using a key\n\
  \nSYNOPSIS\n    gcloud kms decrypt --ciphertext-file=CIPHERTEXT_FILE\n        --plaintext-file=PLAINTEXT_FILE\n\
  \        [--additional-authenticated-data-file=ADDITIONAL_AUTHENTICATED_DATA_FILE]\n\
  \        [--key=KEY] [--keyring=KEYRING] [--location=LOCATION]\n        [GCLOUD_WIDE_FLAG\
  \ ...]\n\nDESCRIPTION\n    Decrypts the given ciphertext file using the given CryptoKey\
  \ and writes the\n    result to the named plaintext file.\n\n    If an additional\
  \ authenticated data file is provided, its contents must\n    match the additional\
  \ authenticated data provided during encryption. The\n    file must not be larger\
  \ than 64KiB.\n\n    If --ciphertext-file or --additional-authenticated-data-file\
  \ is set to '-',\n    that file is read from stdin. Similarly, if --plaintext-file\
  \ is set to '-',\n    the decrypted plaintext is written to stdout.\n\nREQUIRED\
  \ FLAGS\n     --ciphertext-file=CIPHERTEXT_FILE\n        Path to the ciphertext\
  \ file to decrypt.\n\n     --plaintext-file=PLAINTEXT_FILE\n        Path to the\
  \ plaintext file to output.\n\nOPTIONAL FLAGS\n     --additional-authenticated-data-file=ADDITIONAL_AUTHENTICATED_DATA_FILE\n\
  \        Path to the optional file containing the additional authenticated data.\n\
  \n     --key=KEY\n        The key to use for decryption.\n\n     --keyring=KEYRING\n\
  \        The containing keyring.\n\n     --location=LOCATION\n        The location\
  \ of the requested resource.\n\nGCLOUD WIDE FLAGS\n    These flags are available\
  \ to all commands: --account, --configuration,\n    --flatten, --format, --help,\
  \ --log-http, --project, --quiet, --trace-token,\n    --user-output-enabled, --verbosity.\
  \ Run $ gcloud help for details.\n\nEXAMPLES\n    The following command will read\
  \ the file 'path/to/ciphertext', decrypt it\n    using the CryptoKey frodo with\
  \ the KeyRing fellowship and Location global,\n    and write the plaintext to 'path/to/plaintext'.\n\
  \n        $ gcloud kms decrypt frodo \\\n            --keyring fellowship \\\n \
  \           --location global \\\n            --ciphertext-file path/to/input/ciphertext\
  \ \\\n            --plaintext-file path/to/output/plaintext\n"
generated_using:
- --help
