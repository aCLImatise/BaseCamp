!Command
command:
- gsutil
- web
positional:
- !Positional
  description: For example, suppose your company's Domain name is example.com. You
    could set
  position: 0
  name: page.
  optional: false
named:
- !Flag
  description: "Specifies the object name to serve when a bucket\nlisting is requested\
    \ via the CNAME alias to\nc.storage.googleapis.com."
  synonyms:
  - -m
  args: !SimpleFlagArg
    name: index.html
  optional: true
- !Flag
  description: "Specifies the error page to serve when a request is made\nfor a non-existent\
    \ object via the CNAME alias to\nc.storage.googleapis.com."
  synonyms:
  - -e
  args: !SimpleFlagArg
    name: 404.html
  optional: true
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "NAME\n  web - Set a main page and/or error page for one or more buckets\n\
  \n\nSYNOPSIS\n  gsutil web set [-m main_page_suffix] [-e error_page] bucket_url...\n\
  \  gsutil web get bucket_url\n\nDESCRIPTION\n  The Website Configuration feature\
  \ enables you to configure a Google Cloud\n  Storage bucket to behave like a static\
  \ website. This means requests made via a\n  domain-named bucket aliased using a\
  \ Domain Name System \"CNAME\" to\n  c.storage.googleapis.com will work like any\
  \ other website, i.e., a GET to the\n  bucket will serve the configured \"main\"\
  \ page instead of the usual bucket\n  listing and a GET for a non-existent object\
  \ will serve the configured error\n  page.\n\n  For example, suppose your company's\
  \ Domain name is example.com. You could set\n  up a website bucket as follows:\n\
  \n  1. Create a bucket called example.com (see the \"DOMAIN NAMED BUCKETS\"\n  \
  \   section of \"gsutil help naming\" for details about creating such buckets).\n\
  \n  2. Create index.html and 404.html files and upload them to the bucket.\n\n \
  \ 3. Configure the bucket to have website behavior using the command:\n\n      \
  \ gsutil web set -m index.html -e 404.html gs://www.example.com\n\n  4. Add a DNS\
  \ CNAME record for example.com pointing to c.storage.googleapis.com\n     (ask your\
  \ DNS administrator for help with this).\n\n  Now if you open a browser and navigate\
  \ to http://www.example.com, it will\n  display the main page instead of the default\
  \ bucket listing. Note: It can\n  take time for DNS updates to propagate because\
  \ of caching used by the DNS,\n  so it may take up to a day for the domain-named\
  \ bucket website to work after\n  you create the CNAME DNS record.\n\n  Additional\
  \ notes:\n\n  1. Because the main page is only served when a bucket listing request\
  \ is made\n     via the CNAME alias, you can continue to use \"gsutil ls\" to list\
  \ the bucket\n     and get the normal bucket listing (rather than the main page).\n\
  \n  2. The main_page_suffix applies to each subdirectory of the bucket. For\n  \
  \   example, with the main_page_suffix configured to be index.html, a GET\n    \
  \ request for http://www.example.com would retrieve\n     http://www.example.com/index.html,\
  \ and a GET request for\n     http://www.example.com/photos would retrieve\n   \
  \  http://www.example.com/photos/index.html.\n\n  3. There is just one 404.html\
  \ page: For example, a GET request for\n     http://www.example.com/photos/missing\
  \ would retrieve\n     http://www.example.com/404.html, not\n     http://www.example.com/photos/404.html.\n\
  \n  4. For additional details see\n     https://cloud.google.com/storage/docs/website-configuration.\n\
  \n  The web command has two sub-commands:\n\nSET\n  The \"gsutil web set\" command\
  \ will allow you to configure or disable\n  Website Configuration on your bucket(s).\
  \ The \"set\" sub-command has the\n  following options (leave both options blank\
  \ to disable):\n\nSET OPTIONS\n  -m <index.html>      Specifies the object name\
  \ to serve when a bucket\n                       listing is requested via the CNAME\
  \ alias to\n                       c.storage.googleapis.com.\n\n  -e <404.html>\
  \        Specifies the error page to serve when a request is made\n            \
  \           for a non-existent object via the CNAME alias to\n                 \
  \      c.storage.googleapis.com.\n\n\nGET\n  The \"gsutil web get\" command will\
  \ gets the web semantics configuration for\n  a bucket and displays a JSON representation\
  \ of the configuration.\n\n  In Google Cloud Storage, this would look like:\n\n\
  \    {\n      \"notFoundPage\": \"404.html\",\n      \"mainPageSuffix\": \"index.html\"\
  \n    }\n"
generated_using:
- --help
