from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean, Directory, String, Int

Haphpipe_Multiple_Align_V0_1_0 = CommandToolBuilder(tool="haphpipe_multiple_align", base_command=["haphpipe", "multiple_align"], inputs=[ToolInput(tag="in_seqs", input_type=File(optional=True), prefix="--seqs", doc=InputDocumentation(doc="FASTA file with sequences to be aligned")), ToolInput(tag="in_dir_list", input_type=File(optional=True), prefix="--dir_list", doc=InputDocumentation(doc="List of directories which include either a final.fna\nor ph_haplotypes.fna file, one on each line")), ToolInput(tag="in_ref_gtf", input_type=File(optional=True), prefix="--ref_gtf", doc=InputDocumentation(doc="Reference GTF file")), ToolInput(tag="in_out_align", input_type=File(optional=True), prefix="--out_align", doc=InputDocumentation(doc="Name for alignment file")), ToolInput(tag="in_nuc", input_type=Boolean(optional=True), prefix="--nuc", doc=InputDocumentation(doc="Assume nucleotide (default: False)")), ToolInput(tag="in_amino", input_type=Boolean(optional=True), prefix="--amino", doc=InputDocumentation(doc="Assume amino (default: False)")), ToolInput(tag="in_clustal_out", input_type=Boolean(optional=True), prefix="--clustalout", doc=InputDocumentation(doc="Clustal output format (default: False)")), ToolInput(tag="in_phylip_out", input_type=Boolean(optional=True), prefix="--phylipout", doc=InputDocumentation(doc="PHYLIP output format (default: False)")), ToolInput(tag="in_input_order", input_type=Boolean(optional=True), prefix="--inputorder", doc=InputDocumentation(doc="Output order same as input (default: False)")), ToolInput(tag="in_reorder", input_type=Boolean(optional=True), prefix="--reorder", doc=InputDocumentation(doc="Output order aligned (default: False)")), ToolInput(tag="in_tree_out", input_type=Boolean(optional=True), prefix="--treeout", doc=InputDocumentation(doc="Guide tree is output to the input.tree file (default:\nFalse)")), ToolInput(tag="in_quiet_maff_t", input_type=Boolean(optional=True), prefix="--quiet_mafft", doc=InputDocumentation(doc="Do not report progress (default: False)")), ToolInput(tag="in_outdir", input_type=Directory(optional=True), prefix="--outdir", doc=InputDocumentation(doc="Output directory")), ToolInput(tag="in_algo", input_type=String(optional=True), prefix="--algo", doc=InputDocumentation(doc="Use different algorithm in command: linsi, ginsi,\neinsi, fftnsi, fftns, nwns, nwnsi")), ToolInput(tag="in_auto", input_type=Boolean(optional=True), prefix="--auto", doc=InputDocumentation(doc="Automatically select algorithm (default: False)")), ToolInput(tag="in_six_mer_pair", input_type=Boolean(optional=True), prefix="--sixmerpair", doc=InputDocumentation(doc="Calculate distance based on shared 6mers, on by\ndefault (default: False)")), ToolInput(tag="in_global_pair", input_type=Boolean(optional=True), prefix="--globalpair", doc=InputDocumentation(doc="Use Needleman-Wunsch algorithm (default: False)")), ToolInput(tag="in_local_pair", input_type=Boolean(optional=True), prefix="--localpair", doc=InputDocumentation(doc="Use Smith-Waterman algorithm (default: False)")), ToolInput(tag="in_gen_afp_air", input_type=Boolean(optional=True), prefix="--genafpair", doc=InputDocumentation(doc="Use local algorithm with generalized affine gap cost\n(default: False)")), ToolInput(tag="in_fast_a_pair", input_type=Boolean(optional=True), prefix="--fastapair", doc=InputDocumentation(doc="Use FASTA for pairwise alignment (default: False)")), ToolInput(tag="in_weight_i", input_type=String(optional=True), prefix="--weighti", doc=InputDocumentation(doc="Weighting factor for consistency term")), ToolInput(tag="in_re_tree", input_type=Int(optional=True), prefix="--retree", doc=InputDocumentation(doc="Number of times to build guide tree")), ToolInput(tag="in_max_iterate", input_type=Int(optional=True), prefix="--maxiterate", doc=InputDocumentation(doc="Number of cycles for iterative refinement")), ToolInput(tag="in_no_score", input_type=Boolean(optional=True), prefix="--noscore", doc=InputDocumentation(doc="Do not check alignment score in iterative alignment\n(default: False)")), ToolInput(tag="in_mem_save", input_type=Boolean(optional=True), prefix="--memsave", doc=InputDocumentation(doc="Use Myers-Miller algorithm (default: False)")), ToolInput(tag="in_part_tree", input_type=Boolean(optional=True), prefix="--parttree", doc=InputDocumentation(doc="Use fast tree-building method with 6mer distance\n(default: False)")), ToolInput(tag="in_dp_part_tree", input_type=Boolean(optional=True), prefix="--dpparttree", doc=InputDocumentation(doc="Use PartTree algorithm with distances based on DP\n(default: False)")), ToolInput(tag="in_fast_apart_tree", input_type=Boolean(optional=True), prefix="--fastaparttree", doc=InputDocumentation(doc="Use PartTree algorithm with distances based on FASTA\n(default: False)")), ToolInput(tag="in_part_size", input_type=Int(optional=True), prefix="--partsize", doc=InputDocumentation(doc="Number of partitions for PartTree")), ToolInput(tag="in_group_size", input_type=Int(optional=True), prefix="--groupsize", doc=InputDocumentation(doc="Max number of sequences for PartTree")), ToolInput(tag="in_gap_opening_penalty", input_type=String(optional=True), prefix="--lop", doc=InputDocumentation(doc="Gap opening penalty")), ToolInput(tag="in_lep", input_type=String(optional=True), prefix="--lep", doc=InputDocumentation(doc="Offset value")), ToolInput(tag="in_gap_extension_penalty", input_type=String(optional=True), prefix="--lexp", doc=InputDocumentation(doc="Gap extension penalty")), ToolInput(tag="in_gap_opening_penalty_skip", input_type=String(optional=True), prefix="--LOP", doc=InputDocumentation(doc="Gap opening penalty to skip alignment")), ToolInput(tag="in_gap_extension_penalty_skip", input_type=String(optional=True), prefix="--LEXP", doc=InputDocumentation(doc="Gap extension penalty to skip alignment")), ToolInput(tag="in_bl", input_type=Int(optional=True), prefix="--bl", doc=InputDocumentation(doc="BLOSUM matrix: 30, 45, 62, or 80")), ToolInput(tag="in_jtt", input_type=Int(optional=True), prefix="--jtt", doc=InputDocumentation(doc="JTT PAM number >0")), ToolInput(tag="in_tm", input_type=Int(optional=True), prefix="--tm", doc=InputDocumentation(doc="Transmembrane PAM number >0")), ToolInput(tag="in_aa_matrix", input_type=File(optional=True), prefix="--aamatrix", doc=InputDocumentation(doc="Path to user-defined AA scoring matrix")), ToolInput(tag="in_f_model", input_type=Boolean(optional=True), prefix="--fmodel", doc=InputDocumentation(doc="Incorporate AA/nuc composition info into scoring\nmatrix (default: False)")), ToolInput(tag="in_n_cpu", input_type=Int(optional=True), prefix="--ncpu", doc=InputDocumentation(doc="Number of CPU to use (default: 1)")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="Do not write output to console (silence stdout and\nstderr) (default: False)")), ToolInput(tag="in_log_file", input_type=File(optional=True), prefix="--logfile", doc=InputDocumentation(doc="Name for log file (output)")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="Print commands but do not run (default: False)")), ToolInput(tag="in_fast_a_only", input_type=Boolean(optional=True), prefix="--fastaonly", doc=InputDocumentation(doc="Output fasta files separated by region but do not\nalign (default: False)")), ToolInput(tag="in_align_all", input_type=Boolean(optional=True), prefix="--alignall", doc=InputDocumentation(doc="Do not separate files by region, align entire file\n(default: False)\n"))], outputs=[ToolOutput(tag="out_outdir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_outdir", type_hint=File()), doc=OutputDocumentation(doc="Output directory")), ToolOutput(tag="out_log_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_log_file", type_hint=File()), doc=OutputDocumentation(doc="Name for log file (output)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Haphpipe_Multiple_Align_V0_1_0().translate("wdl", allow_empty_container=True)

