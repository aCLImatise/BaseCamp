version 1.0

task Tpp {
  input {
    Boolean? protocol
    String? primer
    Int? mismatches
    Boolean? flags
    Boolean? bwa_alg
    Int? primer_start_window
    Int? window_size
    File? bar_seq_catalog_out
    String python
    File path
  }
  command <<<
    tpp \
      ~{python} \
      ~{path} \
      ~{if (protocol) then "-protocol" else ""} \
      ~{if defined(primer) then ("-primer " +  '"' + primer + '"') else ""} \
      ~{if defined(mismatches) then ("-mismatches " +  '"' + mismatches + '"') else ""} \
      ~{if (flags) then "-flags" else ""} \
      ~{if (bwa_alg) then "-bwa-alg" else ""} \
      ~{if defined(primer_start_window) then ("-primer-start-window " +  '"' + primer_start_window + '"') else ""} \
      ~{if defined(window_size) then ("-window-size " +  '"' + window_size + '"') else ""} \
      ~{if defined(bar_seq_catalog_out) then ("-barseq_catalog_out " +  '"' + bar_seq_catalog_out + '"') else ""}
  >>>
  runtime {
    docker: "quay.io/biocontainers/transit:3.2.1--py_0"
  }
  parameter_meta {
    protocol: "[Sassetti|Tn5|Mme1] # which sample prep protocol was used?; sassetti protocol is the default; this sets the default transposon and primer sequence"
    primer: "# prefix of reads corresponding to end of transposon at junction with genomic sequence; can override default seq"
    mismatches: "# when searching for constant regions in reads 1 and 2; default is 1"
    flags: "\\\"<STRING>\\\"  # args to pass to BWA"
    bwa_alg: "[aln|mem]  # Default: mem. Algorithm to use for mapping reads with bwa"
    primer_start_window: ",INT # position in read to search for start of primer; default is [0,20]"
    window_size: "# automatic method to set window"
    bar_seq_catalog_out: "# if multiple replicons/genomes/contigs/sequences were provided in -ref, give them names.\\n# Enter 'auto' for autogenerated ids.\\n"
    python: ""
    path: ""
  }
  output {
    File out_stdout = stdout()
  }
}