from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean

Update_Blastdb_Pl_Bak_V0_1_0 = CommandToolBuilder(tool="update_blastdb.pl.bak", base_command=["update_blastdb.pl.bak"], inputs=[ToolInput(tag="in_source", input_type=Boolean(optional=True), prefix="--source", doc=InputDocumentation(doc="Location to download BLAST databases from (default: auto-detect\nclosest location). Supported values: ncbi, aws, or gcp.")), ToolInput(tag="in_decompress", input_type=Boolean(optional=True), prefix="--decompress", doc=InputDocumentation(doc="Downloads, decompresses the archives in the current working directory,\nand deletes the downloaded archive to save disk space, while\npreserving the archive checksum files (default: false).")), ToolInput(tag="in_show_all", input_type=Boolean(optional=True), prefix="--showall", doc=InputDocumentation(doc="Show all available pre-formatted BLAST databases (default: false). The\noutput of this option lists the database names which should be used\nwhen requesting downloads or updates using this script.\nIt accepts the optional arguments: 'tsv' and 'pretty' to produce\ntab-separated values and a human-readable format respectively. These\nparameters elicit the display of additional metadata if this is\navailable to the program. This metadata is displayed in columnar\nformat; the columns represent:\nname, description, size in gigabytes, date of last update (YYYY-MM-DD\nformat).")), ToolInput(tag="in_blast_db_version", input_type=Boolean(optional=True), prefix="--blastdb_version", doc=InputDocumentation(doc="Specify which BLAST database version to download (default: 5).\nSupported values: 4, 5")), ToolInput(tag="in_passive", input_type=Boolean(optional=True), prefix="--passive", doc=InputDocumentation(doc="Use passive FTP, useful when behind a firewall or working in the cloud\n(default: true). To disable passive FTP, configure this option as\nfollows: --passive no")), ToolInput(tag="in_timeout", input_type=Boolean(optional=True), prefix="--timeout", doc=InputDocumentation(doc="Timeout on connection to NCBI (default: 120 seconds).")), ToolInput(tag="in_force", input_type=Boolean(optional=True), prefix="--force", doc=InputDocumentation(doc="Force download even if there is a archive already on local directory\n(default: false).")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Increment verbosity level (default: 1). Repeat this option multiple\ntimes to increase the verbosity level (maximum 2).")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="Produce no output (default: false). Overrides the --verbose option.")), ToolInput(tag="in_num_threads", input_type=Boolean(optional=True), prefix="--num_threads", doc=InputDocumentation(doc="Sets the number of threads to utilize to perform downloads in parallel\nwhen data comes from the cloud. Defaults to use all available CPUs on\nthe machine (Linux and macos only).")), ToolInput(tag="in_legacy_exit_code", input_type=Boolean(optional=True), prefix="--legacy_exit_code", doc=InputDocumentation(doc="Enables exit codes from prior to version 581818, BLAST+ 2.10.0\nrelease, for downloads from NCBI only. This option is meant to be used\nby legacy applications that rely on this exit codes: 0 for successful\noperations that result in no downloads, 1 for successful downloads,\nand 2 for errors."))], outputs=[], container="quay.io/biocontainers/blast:2.11.0--pl526he19e7b1_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Update_Blastdb_Pl_Bak_V0_1_0().translate("wdl")

