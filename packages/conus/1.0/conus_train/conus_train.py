from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Boolean, Int

Conus_Train_V0_1_0 = CommandToolBuilder(tool="conus_train", base_command=["conus_train"], inputs=[ToolInput(tag="in_use_string_defaults", input_type=String(optional=True), prefix="-g", doc=InputDocumentation(doc=": Use grammar <string>, defaults to NUS")), ToolInput(tag="in_load_prior_specified", input_type=File(optional=True), prefix="-l", doc=InputDocumentation(doc=": Load prior specified in <file>")), ToolInput(tag="in_turn_standard_one", input_type=Boolean(optional=True), prefix="-1", doc=InputDocumentation(doc=": Turn off the standard plus one prior")), ToolInput(tag="in_save_model_file", input_type=File(optional=True), prefix="-s", doc=InputDocumentation(doc=": save model file to <file>; defaults to conus.mod")), ToolInput(tag="in_print_parameters_model", input_type=Boolean(optional=True), prefix="-x", doc=InputDocumentation(doc=": print out parameters of model")), ToolInput(tag="in__print_traceback", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc=": print traceback")), ToolInput(tag="in__debugging_output", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc=": debugging output")), ToolInput(tag="in__verbose_output", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc=": verbose output")), ToolInput(tag="in_options", input_type=Boolean(optional=True), prefix="-options", doc=InputDocumentation(doc="")), ToolInput(tag="in_code", input_type=String(), position=0, doc=InputDocumentation(doc="Grammar:")), ToolInput(tag="in_nus", input_type=String(), position=0, doc=InputDocumentation(doc="Ambiguous Simple Grammar (G1) ")), ToolInput(tag="in_una", input_type=String(), position=1, doc=InputDocumentation(doc="Another Unambiguous (G3) ")), ToolInput(tag="in_run", input_type=String(), position=2, doc=InputDocumentation(doc="Little Unambiguous (G4) ")), ToolInput(tag="in_ivo", input_type=String(), position=3, doc=InputDocumentation(doc="Simplest Unambiguous (G5) ")), ToolInput(tag="in_bjk", input_type=String(), position=4, doc=InputDocumentation(doc="Pfold grammar (G6) ")), ToolInput(tag="in_yr_n", input_type=String(), position=5, doc=InputDocumentation(doc="Stacking grammar (G2) ")), ToolInput(tag="in_u_yn", input_type=String(), position=6, doc=InputDocumentation(doc="Stacking analog of UNA (G7)")), ToolInput(tag="in_ry_three", input_type=Int(), position=7, doc=InputDocumentation(doc="Stacking analog of RUN (G8)")), ToolInput(tag="in_bk_two", input_type=Int(), position=8, doc=InputDocumentation(doc="Stacking parameterization of BJK (G6S)"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Conus_Train_V0_1_0().translate("wdl", allow_empty_container=True)

