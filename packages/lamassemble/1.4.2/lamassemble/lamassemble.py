from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, String, Float

Lamassemble_V0_1_0 = CommandToolBuilder(tool="lamassemble", base_command=["lamassemble"], inputs=[ToolInput(tag="in_alignment", input_type=Boolean(optional=True), prefix="--alignment", doc=InputDocumentation(doc="print an alignment, not a consensus")), ToolInput(tag="in_consensus", input_type=Boolean(optional=True), prefix="--consensus", doc=InputDocumentation(doc="just make a consensus, of already-aligned sequences")), ToolInput(tag="in_gap_max", input_type=Int(optional=True), prefix="--gap-max", doc=InputDocumentation(doc="use alignment columns with <= G% gaps (default=50)")), ToolInput(tag="in_end", input_type=Boolean(optional=True), prefix="--end", doc=InputDocumentation(doc="... including gaps past the ends of the sequences")), ToolInput(tag="in_seq_min", input_type=Int(optional=True), prefix="--seq-min", doc=InputDocumentation(doc="omit consensus flanks with < S sequences (default=1)")), ToolInput(tag="in_name", input_type=String(optional=True), prefix="--name", doc=InputDocumentation(doc="name of the consensus sequence (default=lamassembled)")), ToolInput(tag="in_out", input_type=String(optional=True), prefix="--out", doc=InputDocumentation(doc="just write MAFFT input files, named BASE.xxx")), ToolInput(tag="in_prob", input_type=Float(optional=True), prefix="--prob", doc=InputDocumentation(doc="use pairwise restrictions with error probability <= P\n(default=0.002)")), ToolInput(tag="in_diagonal_max", input_type=Int(optional=True), prefix="--diagonal-max", doc=InputDocumentation(doc="max change in alignment diagonal between pairwise\nalignments (default=1000)")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="show progress messages")), ToolInput(tag="in_all", input_type=Boolean(optional=True), prefix="--all", doc=InputDocumentation(doc="use all of each sequence, not just aligning part")), ToolInput(tag="in_maff_t", input_type=String(optional=True), prefix="--mafft", doc=InputDocumentation(doc="additional arguments for MAFFT")), ToolInput(tag="in_number_parallel_threads", input_type=Int(optional=True), prefix="-P", doc=InputDocumentation(doc="number of parallel threads (default=1)")), ToolInput(tag="in_use_minimum_positions", input_type=Int(optional=True), prefix="-W", doc=InputDocumentation(doc="use minimum positions in length-W windows (default=19)")), ToolInput(tag="in_max_initial_matches", input_type=Int(optional=True), prefix="-m", doc=InputDocumentation(doc="max initial matches per query position (default=5)")), ToolInput(tag="in_max_gap_length", input_type=Int(optional=True), prefix="-z", doc=InputDocumentation(doc="max gap length (default=30)")), ToolInput(tag="in_last_train_dot_out", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_sequences_dot_fx", input_type=String(), position=1, doc=InputDocumentation(doc=""))], outputs=[], container="quay.io/biocontainers/lamassemble:1.4.2--pyh3252c3a_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Lamassemble_V0_1_0().translate("wdl")

