from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Directory, Boolean, String, File, Int, Float

Moff_All_Py_V0_1_0 = CommandToolBuilder(tool="moff_all.py", base_command=["moff_all.py"], inputs=[ToolInput(tag="in_loc_in", input_type=Directory(optional=True), prefix="--loc_in", doc=InputDocumentation(doc="specify the folder of the input MS2 peptide list files")), ToolInput(tag="in_tsv_list", input_type=Boolean(optional=True), prefix="--tsv_list", doc=InputDocumentation(doc="[TSV_LIST [TSV_LIST ...]]\nspecify the mzid file as a list")), ToolInput(tag="in_raw_list", input_type=Boolean(optional=True), prefix="--raw_list", doc=InputDocumentation(doc="[RAW_LIST [RAW_LIST ...]]\nspecify the raw file as a list")), ToolInput(tag="in_sample", input_type=String(optional=True), prefix="--sample", doc=InputDocumentation(doc="specify witch replicated to use for mbr reg_exp are")), ToolInput(tag="in_log_label", input_type=File(optional=True), prefix="--log_label", doc=InputDocumentation(doc="a label name to use for the log file. Default value:\nmoFF")), ToolInput(tag="in_w_filt", input_type=Int(optional=True), prefix="--w_filt", doc=InputDocumentation(doc="width value of the filter k * mean(Dist_Malahobis).\nDefault value: 2")), ToolInput(tag="in_out_flag", input_type=Boolean(optional=True), prefix="--out_flag", doc=InputDocumentation(doc="if set, outliers for rt time allignment are filtered.\nDefault value: True")), ToolInput(tag="in_w_comb", input_type=Boolean(optional=True), prefix="--w_comb", doc=InputDocumentation(doc="if set, RT model combination is weighted using traing\nmodel errors: Default value: False")), ToolInput(tag="in_to_l", input_type=Int(optional=True), prefix="--tol", doc=InputDocumentation(doc="specify the tollerance parameter in ppm. Default\nvalue: 10")), ToolInput(tag="in_xic_length", input_type=Int(optional=True), prefix="--xic_length", doc=InputDocumentation(doc="specify rt window for xic (minutes). Default value: 3")), ToolInput(tag="in_rt_peak_win", input_type=Int(optional=True), prefix="--rt_peak_win", doc=InputDocumentation(doc="specify the time windows for the peak (minutes).\nDefault value: 1")), ToolInput(tag="in_rt_peak_win_match", input_type=Float(optional=True), prefix="--rt_peak_win_match", doc=InputDocumentation(doc="specify the time windows for the matched peptide peak\n(minutes). Default value: 1.2")), ToolInput(tag="in_raw_repo", input_type=File(optional=True), prefix="--raw_repo", doc=InputDocumentation(doc="specify the raw file repository")), ToolInput(tag="in_loc_out", input_type=Directory(optional=True), prefix="--loc_out", doc=InputDocumentation(doc="specify the folder output")), ToolInput(tag="in_rt_feat_file", input_type=File(optional=True), prefix="--rt_feat_file", doc=InputDocumentation(doc="specify the file that contains the features to use in\nthe match-between-run RT prediction")), ToolInput(tag="in_peptide_summary", input_type=Boolean(optional=True), prefix="--peptide_summary", doc=InputDocumentation(doc="if set, export a peptide intesity summary tab-delited\nfile. Default value: False")), ToolInput(tag="in_tag_pep_sum", input_type=File(optional=True), prefix="--tag_pepsum", doc=InputDocumentation(doc="a tag text used for peptide summary file name\n(peptide_summary_intensity_ + tag + .tab ). Default\nvalue: moFF_run")), ToolInput(tag="in_match_filter", input_type=Boolean(optional=True), prefix="--match_filter", doc=InputDocumentation(doc="If set, filtering on the matched peak is activated.\nDefault value: False")), ToolInput(tag="in_ptm_file", input_type=File(optional=True), prefix="--ptm_file", doc=InputDocumentation(doc="name of json ptm file. default file ptm_setting.json")), ToolInput(tag="in_quantile_thr_filtering", input_type=Float(optional=True), prefix="--quantile_thr_filtering", doc=InputDocumentation(doc="quantile value used to compute the filtering threshold\nfor the matched peak .Default value: 0.75")), ToolInput(tag="in_sample_size", input_type=Int(optional=True), prefix="--sample_size", doc=InputDocumentation(doc="percentage of MS2 peptide used to estimated the\nthreshold. Default value: 0.20")), ToolInput(tag="in_mbr", input_type=String(optional=True), prefix="--mbr", doc=InputDocumentation(doc="select the moFF workflow: on to run mbr + apex , off\nto run only apex, only to run obnly mbr. Default\nvalue: on")), ToolInput(tag="in_cpu", input_type=Int(optional=True), prefix="--cpu", doc=InputDocumentation(doc="number of cpu. as default value it will detect\nautomaticaly the CPU number in your machine.\n")), ToolInput(tag="in_valid", input_type=String(), position=0, doc=InputDocumentation(doc="--ext EXT             specify the file extentention of the input like."))], outputs=[ToolOutput(tag="out_loc_out", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_loc_out", type_hint=File()), doc=OutputDocumentation(doc="specify the folder output"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Moff_All_Py_V0_1_0().translate("wdl", allow_empty_container=True)

