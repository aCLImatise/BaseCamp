from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Int, File

Copomus_Py_V0_1_0 = CommandToolBuilder(tool="CopomuS.py", base_command=["CopomuS.py"], inputs=[ToolInput(tag="in_query", input_type=String(optional=True), prefix="--query", doc=InputDocumentation(doc="The query sequence.")), ToolInput(tag="in_target", input_type=String(optional=True), prefix="--target", doc=InputDocumentation(doc="The target sequence.")), ToolInput(tag="in_qid_xpos_zero", input_type=Int(optional=True), prefix="--qIdxPos0", doc=InputDocumentation(doc="The starting index for the query. (Default: 1)")), ToolInput(tag="in_tid_xpos_zero", input_type=Int(optional=True), prefix="--tIdxPos0", doc=InputDocumentation(doc="The starting index for the target. (Default: 1)")), ToolInput(tag="in_measure", input_type=String(optional=True), prefix="--measure", doc=InputDocumentation(doc="Which measure to add to the output, can be used\nmultiple times. Output will be sorted in order of\nmeasures specified. (Default: ['mfeCover', 'E',\n'minDeltaE'])")), ToolInput(tag="in_candidate_selection", input_type=String(optional=True), prefix="--candidateSelection", doc=InputDocumentation(doc="Defines the method used to select candidate base\npairs. (Default: mfe)")), ToolInput(tag="in_candidate_filter", input_type=String(optional=True), prefix="--candidateFilter", doc=InputDocumentation(doc="Filters candidate base pairs, can be used multiple\ntimes. (Default: [])")), ToolInput(tag="in_generator", input_type=String(optional=True), prefix="--generator", doc=InputDocumentation(doc="Defines the method used for generating mutated\nsequences. (Default: flip)")), ToolInput(tag="in_mutation_encoding", input_type=String(optional=True), prefix="--mutationEncoding", doc=InputDocumentation(doc="Allows direct candidate selection by specifying a\nmutation encoding. Overwrites options -s, -f, and -g")), ToolInput(tag="in_file_output_written", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="[OUTPUT], --output [OUTPUT]\nWhich file the output should be written to. (Default:\nSTDOUT)")), ToolInput(tag="in_delimiter", input_type=String(optional=True), prefix="--delimiter", doc=InputDocumentation(doc="Defines the delimiter used to separate columns in the\noutput, default tab. (Default: \t)")), ToolInput(tag="in_parameter_file", input_type=File(optional=True), prefix="--parameterFile", doc=InputDocumentation(doc="Optional parameter file for IntaRNA to provide further\nparameters and prediction constraints.")), ToolInput(tag="in_threads", input_type=String(optional=True), prefix="--threads", doc=InputDocumentation(doc="Threads used for IntaRNA call"))], outputs=[ToolOutput(tag="out_file_output_written", output_type=File(optional=True), selector=InputSelector(input_to_select="in_file_output_written", type_hint=File()), doc=OutputDocumentation(doc="[OUTPUT], --output [OUTPUT]\nWhich file the output should be written to. (Default:\nSTDOUT)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Copomus_Py_V0_1_0().translate("wdl", allow_empty_container=True)

