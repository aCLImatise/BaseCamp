from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String

Falconc_M4Filt_Falconrunner_V0_1_0 = CommandToolBuilder(tool="falconc_m4filt_falconRunner", base_command=["falconc", "m4filt-falconRunner"], inputs=[ToolInput(tag="in_db_string_required", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc="=, --db=               string  REQUIRED         set db")), ToolInput(tag="in_lasjsonfn_string_required", input_type=Boolean(optional=True), prefix="-l", doc=InputDocumentation(doc="=, --las-json-fn=      string  REQUIRED         List of las files\nfrom falcon, e.g\n../1-preads_ovl/las-merge-combine/las_fofn.json")), ToolInput(tag="in__idtstage_float", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="=, --idt-stage1=       float   90.0             Stage one percent identity\nfilter, formatted as\npercentage, overlaps < %idt\nare skipped")), ToolInput(tag="in_idt_stage_two", input_type=Boolean(optional=True), prefix="--idt-stage2", doc=InputDocumentation(doc="=            float   90.0             Stage two percent identify")), ToolInput(tag="in_max_cov", input_type=Boolean(optional=True), prefix="--max-cov", doc=InputDocumentation(doc="=               int     200              Maximum number of overlaps\non either side of a read")), ToolInput(tag="in_max_diff", input_type=Boolean(optional=True), prefix="--max-diff", doc=InputDocumentation(doc="=              int     100              Reads are skipped is\nabs(5p-3p) overlap counts >\nmaxDiff")), ToolInput(tag="in__bestn_int", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc="=, --bestn=            int     10               Keep N best overlaps at\n5prime AND 3prime of a read")), ToolInput(tag="in_min_depth", input_type=Boolean(optional=True), prefix="--min-depth", doc=InputDocumentation(doc="=             int     2                Depths lower than minDepth\nare considered gaps")), ToolInput(tag="in_min_overhang", input_type=Boolean(optional=True), prefix="--minOverhang", doc=InputDocumentation(doc="=           int     0                set minOverhang")), ToolInput(tag="in_gap_filt", input_type=Boolean(optional=True), prefix="--gap-filt", doc=InputDocumentation(doc="bool    false            Run depth filter, takes a\nlittle more time")), ToolInput(tag="in_keep_intermediates", input_type=Boolean(optional=True), prefix="--keepIntermediates", doc=InputDocumentation(doc="bool    false            set keepIntermediates")), ToolInput(tag="in__nproc_int", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc="=, --n-proc=           int     24               Number of processes to run")), ToolInput(tag="in_debug_log_fn", input_type=Boolean(optional=True), prefix="--debug-log-fn", doc=InputDocumentation(doc="=          string  'LA4Falcon.log'  Write stderr to this file")), ToolInput(tag="in__outfn_string", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="=, --out-fn=           string  REQUIRED         Final m4 overlap file")), ToolInput(tag="in_help", input_type=String(), position=0, doc=InputDocumentation(doc="--help-syntax                                     advanced: prepend,plurals,..")), ToolInput(tag="in_filter", input_type=String(), position=1, doc=InputDocumentation(doc="-m=, --min-len=          int     6000             Minimum read length, reads")), ToolInput(tag="in_discarded", input_type=String(), position=0, doc=InputDocumentation(doc="--min-cov=               int     2                Minimum number of overlaps")), ToolInput(tag="in_locally", input_type=String(), position=0, doc=InputDocumentation(doc="-f=, --filter-log-fn=    string  REQUIRED         Write read filter stats to"))], outputs=[ToolOutput(tag="out__outfn_string", output_type=File(optional=True), selector=InputSelector(input_to_select="in__outfn_string", type_hint=File()), doc=OutputDocumentation(doc="=, --out-fn=           string  REQUIRED         Final m4 overlap file"))], container="quay.io/biocontainers/pb-falconc:1.10.3--he513fc3_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Falconc_M4Filt_Falconrunner_V0_1_0().translate("wdl")

