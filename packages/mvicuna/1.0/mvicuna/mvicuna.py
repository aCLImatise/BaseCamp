from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File

Mvicuna_V0_1_0 = CommandToolBuilder(tool="mvicuna", base_command=["mvicuna"], inputs=[ToolInput(tag="in_i_pfq", input_type=Boolean(optional=True), prefix="-ipfq", doc=InputDocumentation(doc=": comma separated input paired fastq files; the ith and (i+1)th files form a pair (i is an odd number)")), ToolInput(tag="in_is_fq", input_type=Boolean(optional=True), prefix="-isfq", doc=InputDocumentation(doc=": comma separated input single end fastq files")), ToolInput(tag="in_fa", input_type=Boolean(optional=True), prefix="-fa", doc=InputDocumentation(doc=": comma separated input single end fasta files")), ToolInput(tag="in_op_fq", input_type=Boolean(optional=True), prefix="-opfq", doc=InputDocumentation(doc=": comma separated final 2 output fastq paired files")), ToolInput(tag="in_osf_q", input_type=File(optional=True), prefix="-osfq", doc=InputDocumentation(doc=": final output singleton fastq file")), ToolInput(tag="in_batch", input_type=Boolean(optional=True), prefix="-batch", doc=InputDocumentation(doc=": default 500000; number of sequence (pairs) to be loaded in the memory (>=10000)-pthreads: default 8; number of cores to use")), ToolInput(tag="in_w_two", input_type=Boolean(optional=True), prefix="-w2", doc=InputDocumentation(doc=": default 17, 5; sketching window sizes")), ToolInput(tag="in_lc_mono", input_type=Boolean(optional=True), prefix="-lc_mono", doc=InputDocumentation(doc=": default 30, 50, 80; defining low complexity sequence\nmax percentage of ambiguous bases, mono nucleotides, and dinucleotides")), ToolInput(tag="in_tasks", input_type=Boolean(optional=True), prefix="-tasks", doc=InputDocumentation(doc=": default DupRm,Trim,PairedReadMerge,SFrqEst;\na list of comma separated tasks {DupRm, Trim, PairedReadMerge, SFrqEst}")), ToolInput(tag="in_silent", input_type=Boolean(optional=True), prefix="-silent", doc=InputDocumentation(doc=": default false; no screen print-out")), ToolInput(tag="in_no_clean", input_type=Boolean(optional=True), prefix="-noclean", doc=InputDocumentation(doc=": default false; do not remove intermediate files")), ToolInput(tag="in_drm_op", input_type=Boolean(optional=True), prefix="-drm_op", doc=InputDocumentation(doc=": comma separated output paired fq files post dup rm")), ToolInput(tag="in_drm_perc_sim", input_type=Boolean(optional=True), prefix="-drm_perc_sim", doc=InputDocumentation(doc=": default 98; percent similarity")), ToolInput(tag="in_drm_max_mismatch", input_type=Boolean(optional=True), prefix="-drm_max_mismatch", doc=InputDocumentation(doc=": default 5; max mismatches allowed")), ToolInput(tag="in_prm_op", input_type=Boolean(optional=True), prefix="-prm_op", doc=InputDocumentation(doc=": 2 comma separated output unmerged fq files")), ToolInput(tag="in_prm_os", input_type=Boolean(optional=True), prefix="-prm_os", doc=InputDocumentation(doc=": merged single-end fq file")), ToolInput(tag="in_trm_ve_cfa", input_type=Boolean(optional=True), prefix="-trm_vecfa", doc=InputDocumentation(doc=": input fasta file storing vectors/primers")), ToolInput(tag="in_trm_op", input_type=Boolean(optional=True), prefix="-trm_op", doc=InputDocumentation(doc=": comma separated output fq paired files")), ToolInput(tag="in_trm_os", input_type=Boolean(optional=True), prefix="-trm_os", doc=InputDocumentation(doc=": merged single-end fq files")), ToolInput(tag="in_trm_min_match", input_type=Boolean(optional=True), prefix="-trm_min_match", doc=InputDocumentation(doc=": default 13; min match b/t vector and a read to be trimmed")), ToolInput(tag="in_trm_min_rlen", input_type=Boolean(optional=True), prefix="-trm_min_rlen", doc=InputDocumentation(doc=": default 70; min read length post-trimming")), ToolInput(tag="in_trm_q", input_type=Boolean(optional=True), prefix="-trm_q", doc=InputDocumentation(doc=": default 2 (ASCII 35 #); min phred score (ASCII >= 33)")), ToolInput(tag="in_fe_k", input_type=Boolean(optional=True), prefix="-fe_k", doc=InputDocumentation(doc=": default 14 (<= 16); substring length to calibrate"))], outputs=[ToolOutput(tag="out_osf_q", output_type=File(optional=True), selector=InputSelector(input_to_select="in_osf_q", type_hint=File()), doc=OutputDocumentation(doc=": final output singleton fastq file"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Mvicuna_V0_1_0().translate("wdl", allow_empty_container=True)

