from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean

Piranha_V0_1_0 = CommandToolBuilder(tool="Piranha", base_command=["Piranha"], inputs=[ToolInput(tag="in_output", input_type=File(optional=True), prefix="-output", doc=InputDocumentation(doc="Name of output file, STDOUT if omitted")), ToolInput(tag="in_sort", input_type=Boolean(optional=True), prefix="-sort", doc=InputDocumentation(doc="indicates that input is unsorted and Piranha should\nsort it for you")), ToolInput(tag="in_p_threshold", input_type=Boolean(optional=True), prefix="-p_threshold", doc=InputDocumentation(doc="significance threshold for sites")), ToolInput(tag="in_no_pval_correct", input_type=Boolean(optional=True), prefix="-no_pval_correct", doc=InputDocumentation(doc="don't correct p-values for multiple hypothesis\ntesting. We correct by default using B&H.")), ToolInput(tag="in_background_thresh", input_type=Boolean(optional=True), prefix="-background_thresh", doc=InputDocumentation(doc="indicates that this proportion of the lowest scores\nshould be considered the background. Default is 0.99")), ToolInput(tag="in_bin_size_reponse", input_type=Boolean(optional=True), prefix="-bin_size_reponse", doc=InputDocumentation(doc="indicates that the response (first input file) is raw\nreads and should be binned into bins of this size")), ToolInput(tag="in_bin_size_co_vars", input_type=Boolean(optional=True), prefix="-bin_size_covars", doc=InputDocumentation(doc="indicates that the covariates (all except first\nfile) are raw reads and should be binned into bins of\nthis size")), ToolInput(tag="in_bin_size_both", input_type=Boolean(optional=True), prefix="-bin_size_both", doc=InputDocumentation(doc="synonymous with -b x -i x for any x")), ToolInput(tag="in_cluster_dist", input_type=Boolean(optional=True), prefix="-cluster_dist", doc=InputDocumentation(doc="merge significant bins within this distance.\nSetting to 0 disables merging, default is 1 (merge\nadjacent)")), ToolInput(tag="in_suppress_co_vars", input_type=Boolean(optional=True), prefix="-suppress_covars", doc=InputDocumentation(doc="don't print covariate values in output")), ToolInput(tag="in_fit", input_type=File(optional=True), prefix="-fit", doc=InputDocumentation(doc="Fit only, output model to file")), ToolInput(tag="in_dist", input_type=Boolean(optional=True), prefix="-dist", doc=InputDocumentation(doc="Distribution type. Currently supports Poisson,\nNegativeBinomial, ZeroTruncatedPoisson,\nZeroTruncatedNegativeBinomial (default with no\ncovariates), PoissonRegression,\nNegativeBinomialRegression,\nZeroTruncatedPoissonRegression,\nZeroTruncatedNegativeBinomialRegression\n(default with covariates)")), ToolInput(tag="in_fit_method", input_type=Boolean(optional=True), prefix="-fitMethod", doc=InputDocumentation(doc="component fitting method")), ToolInput(tag="in_model", input_type=Boolean(optional=True), prefix="-model", doc=InputDocumentation(doc="Use the specified model file instead of fitting to\ninput data")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="-VERBOSE", doc=InputDocumentation(doc="output additional messages about run to stderr if set")), ToolInput(tag="in_un_stranded", input_type=Boolean(optional=True), prefix="-UNSTRANDED", doc=InputDocumentation(doc="Don't preserve strand (puts all the peaks in positive\nstrand)")), ToolInput(tag="in_no_normalisation", input_type=Boolean(optional=True), prefix="-no_normalisation", doc=InputDocumentation(doc="don't normalise covariates")), ToolInput(tag="in_log_co_vars", input_type=Boolean(optional=True), prefix="-log_covars", doc=InputDocumentation(doc="convert covariates to log scale")), ToolInput(tag="in_about", input_type=Boolean(optional=True), prefix="-about", doc=InputDocumentation(doc="print about message"))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="Name of output file, STDOUT if omitted")), ToolOutput(tag="out_fit", output_type=File(optional=True), selector=InputSelector(input_to_select="in_fit", type_hint=File()), doc=OutputDocumentation(doc="Fit only, output model to file"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Piranha_V0_1_0().translate("wdl", allow_empty_container=True)

