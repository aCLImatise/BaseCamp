from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, File, Int

Bptr_V0_1_0 = CommandToolBuilder(tool="bPTR", base_command=["bPTR"], inputs=[ToolInput(tag="in__fastas", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc="[F [F ...]]  fasta(s)")), ToolInput(tag="in_sorted_sam_files", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="[S [S ...]]  sorted sam file(s) for each sample (e.g.: bowtie2 --reorder)")), ToolInput(tag="in_method_detecting_oriter", input_type=String(optional=True), prefix="-m", doc=InputDocumentation(doc="method for detecting Ori/Ter of replication: gc_skew or")), ToolInput(tag="in_filename_output_table", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="filename for output table")), ToolInput(tag="in_pickle", input_type=File(optional=True), prefix="-pickle", doc=InputDocumentation(doc="filename for output pickle file (optional)")), ToolInput(tag="in_plot", input_type=File(optional=True), prefix="-plot", doc=InputDocumentation(doc="filename for coverage profile plots (default: no plots)")), ToolInput(tag="in_mm", input_type=Int(optional=True), prefix="-mm", doc=InputDocumentation(doc="maximum number of mapping mismatches allowed (default: no\nlimit)")), ToolInput(tag="in_number_perform_default", input_type=Int(optional=True), prefix="-p", doc=InputDocumentation(doc="number of permutations to perform (default: None)")), ToolInput(tag="in_sort", input_type=Boolean(optional=True), prefix="--sort", doc=InputDocumentation(doc="sort the sam file")), ToolInput(tag="in_max_memory_gb", input_type=Int(optional=True), prefix="-b", doc=InputDocumentation(doc="max memory (GB) for sorting sam (default: 100)")), ToolInput(tag="in_ff", input_type=Boolean(optional=True), prefix="-ff", doc=InputDocumentation(doc="overwrite files")), ToolInput(tag="in_threads_default", input_type=Int(optional=True), prefix="-t", doc=InputDocumentation(doc="threads (default: 6)")), ToolInput(tag="in_c", input_type=String(optional=True), prefix="-c", doc=InputDocumentation(doc="")), ToolInput(tag="in_coverage", input_type=String(), position=0, doc=InputDocumentation(doc="-c C            pre-computed data from growth_ptr.py (optional: pickle file)"))], outputs=[ToolOutput(tag="out_filename_output_table", output_type=File(optional=True), selector=InputSelector(input_to_select="in_filename_output_table", type_hint=File()), doc=OutputDocumentation(doc="filename for output table")), ToolOutput(tag="out_pickle", output_type=File(optional=True), selector=InputSelector(input_to_select="in_pickle", type_hint=File()), doc=OutputDocumentation(doc="filename for output pickle file (optional)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bptr_V0_1_0().translate("wdl", allow_empty_container=True)

