from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean, String

Preseq_Gc_Extrap_V0_1_0 = CommandToolBuilder(tool="preseq_gc_extrap", base_command=["preseq", "gc_extrap"], inputs=[ToolInput(tag="in_output", input_type=File(optional=True), prefix="-output", doc=InputDocumentation(doc="coverage yield output file (default: stdout)")), ToolInput(tag="in_max_width", input_type=Boolean(optional=True), prefix="-max_width", doc=InputDocumentation(doc="max fragment length, set equal to read length for\nsingle end reads [10000]")), ToolInput(tag="in_bin_size", input_type=Boolean(optional=True), prefix="-bin_size", doc=InputDocumentation(doc="bin size [10]")), ToolInput(tag="in_extra_p", input_type=Boolean(optional=True), prefix="-extrap", doc=InputDocumentation(doc="maximum extrapolation in base pairs\n[1000000000000.000000]")), ToolInput(tag="in_step", input_type=Boolean(optional=True), prefix="-step", doc=InputDocumentation(doc="step size in bases between extrapolations\n[100000000.000000]")), ToolInput(tag="in_bootstraps", input_type=Boolean(optional=True), prefix="-bootstraps", doc=InputDocumentation(doc="number of bootstraps [100]")), ToolInput(tag="in_cval", input_type=Boolean(optional=True), prefix="-cval", doc=InputDocumentation(doc="level for confidence intervals [0.950000]")), ToolInput(tag="in_terms", input_type=Boolean(optional=True), prefix="-terms", doc=InputDocumentation(doc="maximum number of terms [100]")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="-verbose", doc=InputDocumentation(doc="print more information")), ToolInput(tag="in_bed", input_type=Boolean(optional=True), prefix="-bed", doc=InputDocumentation(doc="input is in bed format without sequence information")), ToolInput(tag="in_quick", input_type=Boolean(optional=True), prefix="-quick", doc=InputDocumentation(doc="quick mode: run gc_extrap without bootstrapping for\nconfidence intervals")), ToolInput(tag="in_defects_mode_extrapolate", input_type=Boolean(optional=True), prefix="-defects", doc=InputDocumentation(doc="defects mode to extrapolate without testing for")), ToolInput(tag="in_about", input_type=Boolean(optional=True), prefix="-about", doc=InputDocumentation(doc="print about message")), ToolInput(tag="in_seed_seed_random", input_type=String(), position=0, doc=InputDocumentation(doc="-r, -seed        seed for random number generator [408] "))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="coverage yield output file (default: stdout)"))], container="quay.io/biocontainers/preseq:3.1.2--hfb6f838_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Preseq_Gc_Extrap_V0_1_0().translate("wdl")

