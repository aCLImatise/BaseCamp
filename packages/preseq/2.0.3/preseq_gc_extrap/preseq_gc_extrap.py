from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean, String

Preseq_Gc_Extrap_V0_1_0 = CommandToolBuilder(tool="preseq_gc_extrap", base_command=["preseq", "gc_extrap"], inputs=[ToolInput(tag="in_output", input_type=File(optional=True), prefix="-output", doc=InputDocumentation(doc="coverage yield output file (default: stdout)")), ToolInput(tag="in_max_width", input_type=Boolean(optional=True), prefix="-max_width", doc=InputDocumentation(doc="max fragment length, set equal to read length for single end")), ToolInput(tag="in_extra_p", input_type=Boolean(optional=True), prefix="-extrap", doc=InputDocumentation(doc="maximum extrapolation in base pairs(default: 1e+12)")), ToolInput(tag="in_step", input_type=Boolean(optional=True), prefix="-step", doc=InputDocumentation(doc="step size in bases between extrapolations (default: 1e+08)")), ToolInput(tag="in_bootstraps", input_type=Boolean(optional=True), prefix="-bootstraps", doc=InputDocumentation(doc="number of bootstraps (default: 100),")), ToolInput(tag="in_cval", input_type=Boolean(optional=True), prefix="-cval", doc=InputDocumentation(doc="level for confidence intervals (default: 0.95)")), ToolInput(tag="in_terms", input_type=Boolean(optional=True), prefix="-terms", doc=InputDocumentation(doc="maximum number of terms")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="-verbose", doc=InputDocumentation(doc="print more information")), ToolInput(tag="in_bed", input_type=Boolean(optional=True), prefix="-bed", doc=InputDocumentation(doc="input is in bed format without sequence information")), ToolInput(tag="in_quick", input_type=Boolean(optional=True), prefix="-quick", doc=InputDocumentation(doc="quick mode: run gc_extrap without bootstrapping for\nconfidence intervals")), ToolInput(tag="in_defects", input_type=Boolean(optional=True), prefix="-defects", doc=InputDocumentation(doc="defects mode to extrapolate without testing for defects")), ToolInput(tag="in_seed", input_type=Boolean(optional=True), prefix="-seed", doc=InputDocumentation(doc="seed for random number generator")), ToolInput(tag="in_about", input_type=Boolean(optional=True), prefix="-about", doc=InputDocumentation(doc="print about message")), ToolInput(tag="in_reads", input_type=String(), position=0, doc=InputDocumentation(doc="-b, -bin_size    bin size (default: 10) "))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="coverage yield output file (default: stdout)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Preseq_Gc_Extrap_V0_1_0().translate("wdl", allow_empty_container=True)

