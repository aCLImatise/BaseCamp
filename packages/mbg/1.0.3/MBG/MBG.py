from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Int, Boolean

Mbg_V0_1_0 = CommandToolBuilder(tool="MBG", base_command=["MBG"], inputs=[ToolInput(tag="in_in", input_type=String(optional=True), prefix="--in", doc=InputDocumentation(doc="Input reads. Multiple files can be input with")), ToolInput(tag="in_out", input_type=String(optional=True), prefix="--out", doc=InputDocumentation(doc="Output graph (required)")), ToolInput(tag="in_number_threads_default", input_type=Int(optional=True), prefix="-t", doc=InputDocumentation(doc="Number of threads (default: 1)")), ToolInput(tag="in_kmer_size_be", input_type=Int(optional=True), prefix="-k", doc=InputDocumentation(doc="K-mer size. Must be odd and >=31 (required)")), ToolInput(tag="in_window_size_be", input_type=Int(optional=True), prefix="-w", doc=InputDocumentation(doc="Window size. Must be 1 <= w <= k-30 (required)")), ToolInput(tag="in_km_er_abundance", input_type=Int(optional=True), prefix="--kmer-abundance", doc=InputDocumentation(doc="Minimum k-mer abundance (default: 1)")), ToolInput(tag="in_unit_ig_abundance", input_type=Int(optional=True), prefix="--unitig-abundance", doc=InputDocumentation(doc="Minimum average unitig abundace and edge\nabundance (default: 2)")), ToolInput(tag="in_no_hpc", input_type=Boolean(optional=True), prefix="--no-hpc", doc=InputDocumentation(doc="Don't use homopolymer compression")), ToolInput(tag="in_collapse_hpc", input_type=Boolean(optional=True), prefix="--collapse-hpc", doc=InputDocumentation(doc="Collapse homopolymer runs to one character\ninstead of taking consensus")), ToolInput(tag="in_blunt", input_type=Boolean(optional=True), prefix="--blunt", doc=InputDocumentation(doc="Output a bluntified graph without edge overlaps")), ToolInput(tag="in_v", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="")), ToolInput(tag="in_k_mer", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_number", input_type=Int(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_window", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_of", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_size_dot", input_type=Int(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_must", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_threads", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_be", input_type=String(), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_one", input_type=Int(), position=4, doc=InputDocumentation(doc="")), ToolInput(tag="in_odd", input_type=String(), position=4, doc=InputDocumentation(doc="")), ToolInput(tag="in_and", input_type=String(), position=5, doc=InputDocumentation(doc=""))], outputs=[], container="quay.io/biocontainers/mbg:1.0.3--he513fc3_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Mbg_V0_1_0().translate("wdl")

