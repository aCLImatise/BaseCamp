from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Array

Cromwell_Tools_Submit_V0_1_0 = CommandToolBuilder(tool="cromwell_tools_submit", base_command=["cromwell-tools", "submit"], inputs=[ToolInput(tag="in_url", input_type=String(optional=True), prefix="--url", doc=InputDocumentation(doc="The URL to the Cromwell server. e.g.\n'https://cromwell.server.org/'")), ToolInput(tag="in_username", input_type=String(optional=True), prefix="--username", doc=InputDocumentation(doc="Cromwell username for HTTPBasicAuth.")), ToolInput(tag="in_password", input_type=String(optional=True), prefix="--password", doc=InputDocumentation(doc="Cromwell password for HTTPBasicAuth.")), ToolInput(tag="in_secrets_file", input_type=File(optional=True), prefix="--secrets-file", doc=InputDocumentation(doc="Path to the JSON file containing username, password,\nand url fields.")), ToolInput(tag="in_service_account_key", input_type=File(optional=True), prefix="--service-account-key", doc=InputDocumentation(doc="Path to the JSON key file for authenticating with\nCaaS.")), ToolInput(tag="in_wdl_file", input_type=File(optional=True), prefix="--wdl-file", doc=InputDocumentation(doc="Path to the workflow source file to submit for\nexecution.")), ToolInput(tag="in_inputs_files", input_type=Array(t=String(), optional=True), prefix="--inputs-files", doc=InputDocumentation(doc="Path(s) to the input file(s) containing input data in\nJSON format, separated by space.")), ToolInput(tag="in_deps_file", input_type=Array(t=String(), optional=True), prefix="--deps-file", doc=InputDocumentation(doc="Path to the Zip file containing dependencies, or a\nlist of raw dependency files to be zipped together\nseparated by space.")), ToolInput(tag="in_options_file", input_type=File(optional=True), prefix="--options-file", doc=InputDocumentation(doc="Path to the Cromwell configs JSON file.")), ToolInput(tag="in_label_file", input_type=File(optional=True), prefix="--label-file", doc=InputDocumentation(doc="Path to the JSON file containing a collection of\nkey/value pairs for workflow labels.")), ToolInput(tag="in_collection_name", input_type=String(optional=True), prefix="--collection-name", doc=InputDocumentation(doc="Collection in SAM that the workflow should belong to,\nif use CaaS.")), ToolInput(tag="in_on_hold", input_type=String(optional=True), prefix="--on-hold", doc=InputDocumentation(doc="Whether to submit the workflow in 'On Hold' status.")), ToolInput(tag="in_validate_labels", input_type=String(optional=True), prefix="--validate-labels", doc=InputDocumentation(doc="Whether to validate cromwell labels.\n"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Cromwell_Tools_Submit_V0_1_0().translate("wdl", allow_empty_container=True)

