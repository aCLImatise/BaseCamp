from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, String, File, Boolean

Methyldackel_Perread_V0_1_0 = CommandToolBuilder(tool="MethylDackel_perRead", base_command=["MethylDackel", "perRead"], inputs=[ToolInput(tag="in_minimum_mapq_threshold", input_type=Int(optional=True), prefix="-q", doc=InputDocumentation(doc="Minimum MAPQ threshold to include an alignment (default 10)")), ToolInput(tag="in_minimum_phred_threshold", input_type=Int(optional=True), prefix="-p", doc=InputDocumentation(doc="Minimum Phred threshold to include a base (default 5). This must             be >0.")), ToolInput(tag="in_region_string_extract", input_type=String(optional=True), prefix="-r", doc=InputDocumentation(doc="Region string in which to extract methylation")), ToolInput(tag="in_bed_file_listing", input_type=File(optional=True), prefix="-l", doc=InputDocumentation(doc="A BED file listing regions for inclusion.")), ToolInput(tag="in_keep_strand", input_type=File(optional=True), prefix="--keepStrand", doc=InputDocumentation(doc="If a BED file is specified, then this option will cause the\nstrand column (column 6) to be utilized, if present. Thus, if\na region has a '+' in this column, then only metrics from the\ntop strand will be output. Note that the -r option can be used\nto limit the regions of -l.")), ToolInput(tag="in_output_file_name", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="Output file name [stdout]")), ToolInput(tag="in_ignore_flags", input_type=Boolean(optional=True), prefix="--ignoreFlags", doc=InputDocumentation(doc="By default, all reads are output. If you would like to\nignore certain classes of reads then simply give a value for their\nflags here. Note that an alignment will be logically anded with this\nflag, so a single bit overlap will lead to exclusion. The default\nfor this is 0.")), ToolInput(tag="in_require_flags", input_type=Boolean(optional=True), prefix="--requireFlags", doc=InputDocumentation(doc="Require each alignment to have all bits in this value\npresent, or else the alignment is ignored. This is equivalent to the\n-f option in samtools. The default is 0, which includes all\nalignments.")), ToolInput(tag="in_at", input_type=Int(optional=True), prefix="-@", doc=InputDocumentation(doc="The number of threads to use, the default 1")), ToolInput(tag="in_chunksize", input_type=Int(optional=True), prefix="--chunkSize", doc=InputDocumentation(doc="The size of the genome processed by a single thread at a time.\nThe default is 1000000 bases. This value MUST be at least 1.")), ToolInput(tag="in_ref_dot_fa", input_type=String(), position=0, doc=InputDocumentation(doc="Reference genome in fasta format. This must be indexed with\nsamtools faidx")), ToolInput(tag="in_input", input_type=String(), position=1, doc=InputDocumentation(doc="An input BAM or CRAM file. This MUST be sorted and should be indexed."))], outputs=[ToolOutput(tag="out_keep_strand", output_type=File(optional=True), selector=InputSelector(input_to_select="in_keep_strand", type_hint=File()), doc=OutputDocumentation(doc="If a BED file is specified, then this option will cause the\nstrand column (column 6) to be utilized, if present. Thus, if\na region has a '+' in this column, then only metrics from the\ntop strand will be output. Note that the -r option can be used\nto limit the regions of -l.")), ToolOutput(tag="out_output_file_name", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_file_name", type_hint=File()), doc=OutputDocumentation(doc="Output file name [stdout]"))], container="quay.io/biocontainers/methyldackel:0.5.2--h7435645_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Methyldackel_Perread_V0_1_0().translate("wdl")

