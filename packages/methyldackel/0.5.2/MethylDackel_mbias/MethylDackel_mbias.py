from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, String, File, Boolean

Methyldackel_Mbias_V0_1_0 = CommandToolBuilder(tool="MethylDackel_mbias", base_command=["MethylDackel", "mbias"], inputs=[ToolInput(tag="in_minimum_mapq_threshold", input_type=Int(optional=True), prefix="-q", doc=InputDocumentation(doc="Minimum MAPQ threshold to include an alignment (default 10)")), ToolInput(tag="in_minimum_phred_threshold", input_type=Int(optional=True), prefix="-p", doc=InputDocumentation(doc="Minimum Phred threshold to include a base (default 5). This\nmust be >0.")), ToolInput(tag="in_maximum_perbase_depth", input_type=Int(optional=True), prefix="-D", doc=InputDocumentation(doc="Maximum per-base depth (default 2000)")), ToolInput(tag="in_region_string_extract", input_type=String(optional=True), prefix="-r", doc=InputDocumentation(doc="Region string in which to extract methylation")), ToolInput(tag="in_bed_file_listing", input_type=File(optional=True), prefix="-l", doc=InputDocumentation(doc="A BED file listing regions for inclusion.")), ToolInput(tag="in_keep_strand", input_type=File(optional=True), prefix="--keepStrand", doc=InputDocumentation(doc="If a BED file is specified, then this option will cause the\nstrand column (column 6) to be utilized, if present. Thus, if\na region has a '+' in this column, then only metrics from the\ntop strand will be output. Note that the -r option can be used\nto limit the regions of -l.")), ToolInput(tag="in_at", input_type=Int(optional=True), prefix="-@", doc=InputDocumentation(doc="The number of threads to use, the default 1")), ToolInput(tag="in_chunksize", input_type=Int(optional=True), prefix="--chunkSize", doc=InputDocumentation(doc="The size of the genome processed by a single thread at a time.\nThe default is 1000000 bases. This value MUST be at least 1.")), ToolInput(tag="in_keep_dupes", input_type=Boolean(optional=True), prefix="--keepDupes", doc=InputDocumentation(doc="By default, any alignment marked as a duplicate is ignored.\nThis option causes them to be incorporated.")), ToolInput(tag="in_keep_singleton", input_type=Boolean(optional=True), prefix="--keepSingleton", doc=InputDocumentation(doc="By default, if only one read in a pair aligns (a singleton)\nthen it's ignored.")), ToolInput(tag="in_keep_discordant", input_type=String(optional=True), prefix="--keepDiscordant", doc=InputDocumentation(doc="default, paired-end alignments with the properly-paired bit\nunset in the FLAG field are ignored. Note that the definition\nof concordant and discordant is based on your aligner\nsettings.")), ToolInput(tag="in_ignore_flags", input_type=Boolean(optional=True), prefix="--ignoreFlags", doc=InputDocumentation(doc="By deault, any alignment marked as secondary (bit 0x100),\nfailing QC (bit 0x200), a PCR/optical duplicate (0x400) or\nsupplemental (0x800) is ignored. This equates to a value of\n0xF00 or 3840 in decimal. If you would like to change that,\nyou can specify a new value here.\nignored. Specifying this causes them to be included.")), ToolInput(tag="in_require_flags", input_type=Boolean(optional=True), prefix="--requireFlags", doc=InputDocumentation(doc="Require each alignment to have all bits in this value\npresent, or else the alignment is ignored. This is equivalent\nto the -f option in samtools. The default is 0, which\nincludes all alignments.")), ToolInput(tag="in_txt", input_type=Boolean(optional=True), prefix="--txt", doc=InputDocumentation(doc="Output tab separated metrics to the screen. These can be\nimported into R or another program for manual plotting and\nanalysis. Note that coordinates are 1-based.")), ToolInput(tag="in_no_svg", input_type=Boolean(optional=True), prefix="--noSVG", doc=InputDocumentation(doc="Don't produce the SVG files. This option implies --txt. Note\nthat an output prefix is no longer required with this option.")), ToolInput(tag="in_no_cpg", input_type=Boolean(optional=True), prefix="--noCpG", doc=InputDocumentation(doc="Do not output CpG methylation metrics")), ToolInput(tag="in_chg", input_type=Boolean(optional=True), prefix="--CHG", doc=InputDocumentation(doc="Output CHG methylation metrics")), ToolInput(tag="in_chh", input_type=Boolean(optional=True), prefix="--CHH", doc=InputDocumentation(doc="Output CHH methylation metrics")), ToolInput(tag="in_not", input_type=Int(optional=True), prefix="--nOT", doc=InputDocumentation(doc=",INT,INT,INT Inclusion bound for methylation calls from reads/pairs\noriginating from the original top strand. Each integer\nrepresents a 1-based position from the end of a read. For\nexample '--nOT A,B,C,D' translates to, 'Include calls from\nposition A through the Bth read from the end on read #1 and\nCth through the Dth from the end base on read #2'. In other\nwords '--nOT 5,10,0,0' for a 100 base long read would result\nin bases 5 through 90 being used. If a 0 is used in any\nposition then that is translated to mean start/end of the\nalignment, as appropriate. For example, --nOT 5,0,0,0 would\ninclude all but the first 4 bases on read #1.")), ToolInput(tag="in_nob", input_type=Int(optional=True), prefix="--nOB", doc=InputDocumentation(doc=",INT,INT,INT")), ToolInput(tag="in_nc_tot", input_type=Int(optional=True), prefix="--nCTOT", doc=InputDocumentation(doc=",INT,INT,INT")), ToolInput(tag="in_nc_tob", input_type=Int(optional=True), prefix="--nCTOB", doc=InputDocumentation(doc=",INT,INT,INT As with --nOT, but for the original bottom, complementary\nto the original top, and complementary to the original bottom\nstrands, respectively.")), ToolInput(tag="in_ref_dot_fa", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_sorted_alignments_dot_bam", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_output_dot_prefix", input_type=String(), position=2, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_keep_strand", output_type=File(optional=True), selector=InputSelector(input_to_select="in_keep_strand", type_hint=File()), doc=OutputDocumentation(doc="If a BED file is specified, then this option will cause the\nstrand column (column 6) to be utilized, if present. Thus, if\na region has a '+' in this column, then only metrics from the\ntop strand will be output. Note that the -r option can be used\nto limit the regions of -l."))], container="quay.io/biocontainers/methyldackel:0.5.2--h7435645_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Methyldackel_Mbias_V0_1_0().translate("wdl")

