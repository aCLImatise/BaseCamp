from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String

Gcpp_V0_1_0 = CommandToolBuilder(tool="gcpp", base_command=["gcpp"], inputs=[ToolInput(tag="in_reference", input_type=Boolean(optional=True), prefix="--reference", doc=InputDocumentation(doc="FILE   The filename of the reference FASTA file.")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="STR    The output filename(s), as a comma-separated list. Valid output formats are\n.fa/.fasta, .fq/.fastq, .gff, .vcf")), ToolInput(tag="in_min_confidence", input_type=Boolean(optional=True), prefix="--min-confidence", doc=InputDocumentation(doc="INT    The minimum confidence for a variant call to be output to variants.{gff,vcf} [40]")), ToolInput(tag="in_min_coverage", input_type=Boolean(optional=True), prefix="--min-coverage", doc=InputDocumentation(doc="INT    The minimum site coverage that must be achieved for variant calls and consensus\nto be calculated for a site. [5]")), ToolInput(tag="in_no_evidence_call", input_type=Boolean(optional=True), prefix="--no-evidence-call", doc=InputDocumentation(doc="STR    The consensus base that will be output for sites with no effective coverage.\nValid choices: (nocall, reference, lowercasereference). [lowercasereference]")), ToolInput(tag="in_coverage", input_type=Boolean(optional=True), prefix="--coverage", doc=InputDocumentation(doc="INT    A designation of the maximum coverage level to be used for analysis. Exact\ninterpretation is algorithm-specific. The meaningful range of this argument is\n[1, 250]. [100]")), ToolInput(tag="in_min_accuracy", input_type=Boolean(optional=True), prefix="--min-accuracy", doc=InputDocumentation(doc="FLOAT  The minimum acceptable window-global alignment accuracy for reads that will be\nused for the analysis (arrow-only). [0.82]")), ToolInput(tag="in_min_map_qv", input_type=Boolean(optional=True), prefix="--min-map-qv", doc=InputDocumentation(doc="INT    The minimum MapQV for reads that will be used for analysis. [10]")), ToolInput(tag="in_min_read_score", input_type=Boolean(optional=True), prefix="--min-read-score", doc=InputDocumentation(doc="FLOAT  The minimum ReadScore for reads that will be used for analysis (arrow-only).\n[0.65]")), ToolInput(tag="in_min_snr", input_type=Boolean(optional=True), prefix="--min-snr", doc=InputDocumentation(doc="FLOAT  The minimum acceptable signal-to-noise over all channels for reads that will be\nused for analysis (arrow-only). [2.5]")), ToolInput(tag="in_windows", input_type=Boolean(optional=True), prefix="--windows", doc=InputDocumentation(doc="STR    The window (or multiple comma-delimited windows) of the reference to be\nprocessed, in the format refGroup:refStart-refEnd (default: entire reference).")), ToolInput(tag="in_algorithm", input_type=Boolean(optional=True), prefix="--algorithm", doc=InputDocumentation(doc="STR    The consensus algorithm used. Valid choices: (arrow, plurality, poa). [arrow]")), ToolInput(tag="in_mask_radius", input_type=Boolean(optional=True), prefix="--mask-radius", doc=InputDocumentation(doc="INT    Radius of window to use when excluding local regions for exceeding\nmaskMinErrorRate, where 0 disables any filtering (arrow-only). [3]")), ToolInput(tag="in_mask_error_rate", input_type=Boolean(optional=True), prefix="--mask-error-rate", doc=InputDocumentation(doc="FLOAT  Maximum local error rate before the local region defined bymaskRadius is excluded\nfrom polishing (arrow-only). [0.7]")), ToolInput(tag="in_parameters_file", input_type=Boolean(optional=True), prefix="--parameters-file", doc=InputDocumentation(doc="STR    Path to a model file or directory containing model files.")), ToolInput(tag="in_parameters_spec", input_type=Boolean(optional=True), prefix="--parameters-spec", doc=InputDocumentation(doc="STR    Name of chemistry or model to use, overriding default selection.")), ToolInput(tag="in_max_iterations", input_type=Boolean(optional=True), prefix="--max-iterations", doc=InputDocumentation(doc="INT    Maximum number of iterations to polish the template. [40]")), ToolInput(tag="in_max_poa_coverage", input_type=Boolean(optional=True), prefix="--max-poa-coverage", doc=InputDocumentation(doc="INT    Maximum number of sequences to use for consensus calling. [11]")), ToolInput(tag="in_mutation_separation", input_type=Boolean(optional=True), prefix="--mutation-separation", doc=InputDocumentation(doc="INT    Find the best mutations within a separation window for iterative polishing. [10]")), ToolInput(tag="in_mutation_neighborhood", input_type=Boolean(optional=True), prefix="--mutation-neighborhood", doc=InputDocumentation(doc="INT    Find nearby mutations within neighborhood for iterative polishing. [20]")), ToolInput(tag="in_read_stump_iness_threshold", input_type=Boolean(optional=True), prefix="--read-stumpiness-threshold", doc=InputDocumentation(doc="FLOAT  Filter out reads whose aligned length along a subread is lower than a percentage\nof its corresponding reference length. [0.1]")), ToolInput(tag="in_reference_chunk_size", input_type=Boolean(optional=True), prefix="--reference-chunk-size", doc=InputDocumentation(doc="INT    Size of reference chunks. [500]")), ToolInput(tag="in_reference_chunk_overlap", input_type=Boolean(optional=True), prefix="--reference-chunk-overlap", doc=InputDocumentation(doc="INT    Size of reference chunk overlaps. [5]")), ToolInput(tag="in_simple_chunking", input_type=Boolean(optional=True), prefix="--simple-chunking", doc=InputDocumentation(doc="Disable adaptive reference chunking.")), ToolInput(tag="in_sort_strategy", input_type=Boolean(optional=True), prefix="--sort-strategy", doc=InputDocumentation(doc="STR    Read sorting strategy. Valid choices: (longest_and_strand_balanced, longest,\nspanning, file_order). [longest_and_strand_balanced]")), ToolInput(tag="in_min_poa_coverage", input_type=Boolean(optional=True), prefix="--min-poa-coverage", doc=InputDocumentation(doc="INT    Minimum number of reads required within a window to call consensus and variants\nusing arrow or poa. [3]")), ToolInput(tag="in_num_threads", input_type=Boolean(optional=True), prefix="--num-threads", doc=InputDocumentation(doc="INT    Number of threads to use, 0 means autodetection. [0]")), ToolInput(tag="in_log_level", input_type=Boolean(optional=True), prefix="--log-level", doc=InputDocumentation(doc="STR    Set log level. Valid choices: (TRACE, DEBUG, INFO, WARN, FATAL). [WARN]")), ToolInput(tag="in_log_file", input_type=Boolean(optional=True), prefix="--log-file", doc=InputDocumentation(doc="FILE   Log to a file, instead of stderr.")), ToolInput(tag="in_input_dot_bam", input_type=String(), position=0, doc=InputDocumentation(doc="STR    The input BAM file."))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="STR    The output filename(s), as a comma-separated list. Valid output formats are\n.fa/.fasta, .fq/.fastq, .gff, .vcf"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Gcpp_V0_1_0().translate("wdl", allow_empty_container=True)

