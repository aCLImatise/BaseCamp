from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean, Array, Int, String

Tadbit_Describe_V0_1_0 = CommandToolBuilder(tool="tadbit_describe", base_command=["tadbit", "describe"], inputs=[ToolInput(tag="in_workdir", input_type=File(optional=True), prefix="--workdir", doc=InputDocumentation(doc="path to working directory (generated with the tool tadbit map)")), ToolInput(tag="in_nox", input_type=Boolean(optional=True), prefix="--noX", doc=InputDocumentation(doc="no display server (X screen)")), ToolInput(tag="in_what_tables_show_write_sequence", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="[ ...], --tables  [ ...]\n[['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12',\n'13']] what tables to show, write either the sequence of names or\nindexes, according to this list: 1: paths, 2: jobs, 3:\nmapped_outputs, 4: mapped_inputs, 5: parsed_outputs, 6:\nintersection_outputs, 7: filter_outputs, 8: normalize_outputs, 9:\nmerge_stats, 10: merge_outputs, 11: segment_outputs, 12: models, 13:\nmodeled_regions")), ToolInput(tag="in_what_tables_show_write_orindexes", input_type=Boolean(optional=True), prefix="-T", doc=InputDocumentation(doc="[ ...], --skip_tables  [ ...]\n[[]] what tables NOT to show, write either the sequence of names or\nindexes, according to this list: 1: paths, 2: jobs, 3:\nmapped_outputs, 4: mapped_inputs, 5: parsed_outputs, 6:\nintersection_outputs, 7: filter_outputs, 8: normalize_outputs, 9:\nmerge_stats, 10: merge_outputs, 11: segment_outputs, 12: models, 13:\nmodeled_regions")), ToolInput(tag="in_job_ids", input_type=Array(t=Int(), optional=True), prefix="--jobids", doc=InputDocumentation(doc="Display only items matching these jobids.")), ToolInput(tag="in_where", input_type=Array(t=String(), optional=True), prefix="--where", doc=InputDocumentation(doc="Select rows. List pairs of keywords (column header) and values to\nfilter results. For example to get only results where '18' appears\nin the column 'Chromosome', the option should be set as: `-W\nChromosome,18`")), ToolInput(tag="in_select", input_type=Array(t=String(), optional=True), prefix="--select", doc=InputDocumentation(doc="Select columns. List the keyword (column headers) to be displayed.\nE.g. to show only the colmns JobIds: `-s Jobids`")), ToolInput(tag="in_tmp_db", input_type=File(optional=True), prefix="--tmpdb", doc=InputDocumentation(doc="if provided uses this directory to manipulate the database")), ToolInput(tag="in_tsv", input_type=Boolean(optional=True), prefix="--tsv", doc=InputDocumentation(doc="Print output in tab separated format")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="Writes output in specified file.\n"))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="Writes output in specified file.\n"))], container="quay.io/biocontainers/tadbit:1.0.1--py38h6ed170a_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Tadbit_Describe_V0_1_0().translate("wdl")

