from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File

Bp_Genbank2Gff3_Pl_V0_1_0 = CommandToolBuilder(tool="bp_genbank2gff3.pl", base_command=["bp_genbank2gff3.pl"], inputs=[ToolInput(tag="in_no_infer", input_type=Boolean(optional=True), prefix="--noinfer", doc=InputDocumentation(doc="don't infer exon/mRNA subfeatures")), ToolInput(tag="in_conf", input_type=Boolean(optional=True), prefix="--conf", doc=InputDocumentation(doc="path to the curation configuration file that contains user preferences\nfor Genbank entries (must be YAML format)\n(if --manual is passed without --ini, user will be prompted to\ncreate the file if any manual input is saved)")), ToolInput(tag="in_so_file", input_type=Boolean(optional=True), prefix="--sofile", doc=InputDocumentation(doc="path to to the so.obo file to use for feature type mapping\n(--sofile live will download the latest online revision)")), ToolInput(tag="in_manual", input_type=Boolean(optional=True), prefix="--manual", doc=InputDocumentation(doc="when trying to guess the proper SO term, if more than\none option matches the primary tag, the converter will\nwait for user input to choose the correct one\n(only works with --sofile)")), ToolInput(tag="in_dir", input_type=Boolean(optional=True), prefix="--dir", doc=InputDocumentation(doc="path to a list of genbank flatfiles")), ToolInput(tag="in_outdir", input_type=Boolean(optional=True), prefix="--outdir", doc=InputDocumentation(doc="location to write GFF files (can be 'stdout' or '-' for pipe)")), ToolInput(tag="in_zip", input_type=Boolean(optional=True), prefix="--zip", doc=InputDocumentation(doc="compress GFF3 output files with gzip")), ToolInput(tag="in_summary", input_type=Boolean(optional=True), prefix="--summary", doc=InputDocumentation(doc="print a summary of the features in each contig")), ToolInput(tag="in_filter", input_type=Boolean(optional=True), prefix="--filter", doc=InputDocumentation(doc="genbank feature type(s) to ignore")), ToolInput(tag="in_split", input_type=Boolean(optional=True), prefix="--split", doc=InputDocumentation(doc="split output to separate GFF and fasta files for\neach genbank record")), ToolInput(tag="in_no_lump", input_type=Boolean(optional=True), prefix="--nolump", doc=InputDocumentation(doc="separate file for each reference sequence\n(default is to lump all records together into one\noutput file for each input file)")), ToolInput(tag="in_e_thresh", input_type=Boolean(optional=True), prefix="--ethresh", doc=InputDocumentation(doc="error threshold for unflattener\nset this high (>2) to ignore all unflattener errors")), ToolInput(tag="in_format", input_type=Boolean(optional=True), prefix="--format", doc=InputDocumentation(doc="Input format (SeqIO types): GenBank, Swiss or Uniprot, EMBL work\n(GenBank is default)")), ToolInput(tag="in_gff_version", input_type=Boolean(optional=True), prefix="--GFF_VERSION", doc=InputDocumentation(doc="3 is default, 2 and 2.5 and other Bio::Tools::GFF versions available")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="don't talk about what is being processed")), ToolInput(tag="in_type_source", input_type=Boolean(optional=True), prefix="--typesource", doc=InputDocumentation(doc="SO sequence type for source (e.g. chromosome; region; contig)")), ToolInput(tag="in_filename", input_type=File(), position=0, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bp_Genbank2Gff3_Pl_V0_1_0().translate("wdl", allow_empty_container=True)

