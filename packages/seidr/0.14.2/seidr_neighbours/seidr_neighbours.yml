!Command
command:
- seidr
- neighbours
positional:
- !Positional
  optional: false
  position: 0
  name: return
  description: -g [ --genes ] arg                Gene names to search
- !Positional
  optional: false
  position: 0
  name: sorting
  description: 'Common Options:'
named:
- !Flag
  optional: true
  synonyms:
  - --in-file
  description: Input SeidrFile
  args: !SimpleFlagArg
    name: arg
- !Flag
  optional: true
  synonyms:
  - -i
  description: '[ --index ] arg (=last score)'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -n
  description: '[ --neighbours ] arg (=10)     Number of top first-degree neighbours
    to'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -r
  description: '[ --rank ]                     Use rank instead of score'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -u
  description: '[ --unique ]                   Print only unique edges'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -O
  description: '[ --threads ] arg (=1)         Number of OpenMP threads for parallel'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -f
  description: '[ --force ]                    Force overwrite output file if it exists'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -s
  description: '[ --strict ]                   Fail on all issues instead of warning'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -I
  description: '[ --case-insensitive ]         Search case insensitive nodes'
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -o
  description: "[ --outfile ] arg (=-)         Output file name ['-' for stdout]"
  args: !EmptyFlagArg {}
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  description: '[ --help ]                     Show this help message'
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "Get the top N first-degree neighbours for each node or a list of nodes:\n\
  \nRequired [can be positional]:\n  --in-file arg                     Input SeidrFile\n\
  \nNeighbours Options:\n  -i [ --index ] arg (=last score)\n  -n [ --neighbours ]\
  \ arg (=10)     Number of top first-degree neighbours to \n                    \
  \                return\n  -g [ --genes ] arg                Gene names to search\n\
  \  -r [ --rank ]                     Use rank instead of score\n  -u [ --unique\
  \ ]                   Print only unique edges\n\nOpenMP Options:\n  -O [ --threads\
  \ ] arg (=1)         Number of OpenMP threads for parallel \n                  \
  \                  sorting\n\nCommon Options:\n  -f [ --force ]                \
  \    Force overwrite output file if it exists\n  -s [ --strict ]               \
  \    Fail on all issues instead of warning\n  -I [ --case-insensitive ]        \
  \ Search case insensitive nodes\n  -h [ --help ]                     Show this help\
  \ message\n  -o [ --outfile ] arg (=-)         Output file name ['-' for stdout]\n\
  \n"
generated_using:
- --help
docker_image: quay.io/biocontainers/seidr:0.14.2--mpi_mpich_h6f92565
