from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, Boolean, File, String, Float

Mbuffer_V0_1_0 = CommandToolBuilder(tool="mbuffer", base_command=["mbuffer"], inputs=[ToolInput(tag="in_use_num_blocks", input_type=Int(optional=True), prefix="-b", doc=InputDocumentation(doc=": use <num> blocks for buffer (default: 49633)")), ToolInput(tag="in_use_blocks_size", input_type=Int(optional=True), prefix="-s", doc=InputDocumentation(doc=": use blocks of <size> bytes for processing (default: 4096)")), ToolInput(tag="in_memory_size_buffer", input_type=Int(optional=True), prefix="-m", doc=InputDocumentation(doc=": memory <size> of buffer in b,k,M,G,% (default: 2% = 193M)")), ToolInput(tag="in_lock_buffer_unusable", input_type=Boolean(optional=True), prefix="-L", doc=InputDocumentation(doc=": lock buffer in memory (unusable with file based buffers)")), ToolInput(tag="in_use_blocksize_device", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc=": use blocksize of device for output")), ToolInput(tag="in_assumed_size_default", input_type=Int(optional=True), prefix="-D", doc=InputDocumentation(doc=": assumed output device size (default: infinite/auto-detect)")), ToolInput(tag="in_start_writing_filled", input_type=Int(optional=True), prefix="-P", doc=InputDocumentation(doc=": start writing after buffer has been filled more than <num>%")), ToolInput(tag="in_start_reading_filled", input_type=Int(optional=True), prefix="-p", doc=InputDocumentation(doc=": start reading after buffer has been filled less than <num>%")), ToolInput(tag="in_use_file_input", input_type=File(optional=True), prefix="-i", doc=InputDocumentation(doc=": use <file> for input")), ToolInput(tag="in_use_file_output", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc=": use <file> for output (this option can be passed MULTIPLE times)")), ToolInput(tag="in_append", input_type=File(optional=True), prefix="--append", doc=InputDocumentation(doc=": append to output file (must be passed before -o)")), ToolInput(tag="in_truncate", input_type=Boolean(optional=True), prefix="--truncate", doc=InputDocumentation(doc=": truncate next file (must be passed before -o)")), ToolInput(tag="in_output_data_host", input_type=String(optional=True), prefix="-O", doc=InputDocumentation(doc=":<p> : output data to host <h> and port <p> (MUTLIPLE outputs supported)")), ToolInput(tag="in_num_volumes_input", input_type=Int(optional=True), prefix="-n", doc=InputDocumentation(doc=": <num> volumes for input, '0' to prompt interactively")), ToolInput(tag="in_use_memory_mapped", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc=": use memory mapped temporary file (for huge buffer)")), ToolInput(tag="in_t_uses_file", input_type=File(optional=True), prefix="-T", doc=InputDocumentation(doc=": as -t but uses <file> as buffer")), ToolInput(tag="in_use_file_logging", input_type=File(optional=True), prefix="-l", doc=InputDocumentation(doc=": use <file> for logging messages")), ToolInput(tag="in_pause_num_milliseconds", input_type=Int(optional=True), prefix="-u", doc=InputDocumentation(doc=": pause <num> milliseconds after each write")), ToolInput(tag="in_limit_read_rate", input_type=String(optional=True), prefix="-r", doc=InputDocumentation(doc=": limit read rate to <rate> B/s, where <rate> can be given in b,k,M,G")), ToolInput(tag="in_same_r_writing", input_type=String(optional=True), prefix="-R", doc=InputDocumentation(doc=": same as -r for writing; use eiter one, if your tape is too fast")), ToolInput(tag="in_overwrite_existing_files", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc=": overwrite existing files")), ToolInput(tag="in_autoloader_needs_seconds", input_type=String(optional=True), prefix="-a", doc=InputDocumentation(doc=": autoloader which needs <time> seconds to reload")), ToolInput(tag="in_issue_command_request", input_type=String(optional=True), prefix="-A", doc=InputDocumentation(doc=": issue command <cmd> to request new volume")), ToolInput(tag="in_set_verbose_level", input_type=Float(optional=True), prefix="-v", doc=InputDocumentation(doc=": set verbose level to <level> (valid values are 0..6)")), ToolInput(tag="in_quiet_display_status", input_type=Boolean(optional=True), prefix="-q", doc=InputDocumentation(doc=": quiet - do not display the status on stderr")), ToolInput(tag="in_quiet_log_status", input_type=Boolean(optional=True), prefix="-Q", doc=InputDocumentation(doc=": quiet - do not log the status")), ToolInput(tag="in_write_synchronous_data", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc=": write with synchronous data integrity support")), ToolInput(tag="in_stop_processing_kind", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc=": stop processing on any kind of error")), ToolInput(tag="in_direct", input_type=Boolean(optional=True), prefix="--direct", doc=InputDocumentation(doc=": open input and output with O_DIRECT")), ToolInput(tag="in_four", input_type=Boolean(optional=True), prefix="-4", doc=InputDocumentation(doc=": force use of IPv4")), ToolInput(tag="in_six", input_type=Boolean(optional=True), prefix="-6", doc=InputDocumentation(doc=": force use of IPv6")), ToolInput(tag="in_use_ipv_ipv", input_type=Boolean(optional=True), prefix="-0", doc=InputDocumentation(doc=": use IPv4 or IPv6")), ToolInput(tag="in_tcp_buffer", input_type=Boolean(optional=True), prefix="--tcpbuffer", doc=InputDocumentation(doc=": size for TCP buffer"))], outputs=[ToolOutput(tag="out_use_file_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_use_file_output", type_hint=File()), doc=OutputDocumentation(doc=": use <file> for output (this option can be passed MULTIPLE times)")), ToolOutput(tag="out_append", output_type=File(optional=True), selector=InputSelector(input_to_select="in_append", type_hint=File()), doc=OutputDocumentation(doc=": append to output file (must be passed before -o)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Mbuffer_V0_1_0().translate("wdl", allow_empty_container=True)

