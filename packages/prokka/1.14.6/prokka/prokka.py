from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Directory, File

Prokka_V0_1_0 = CommandToolBuilder(tool="prokka", base_command=["prokka"], inputs=[ToolInput(tag="in_citation", input_type=Boolean(optional=True), prefix="--citation", doc=InputDocumentation(doc="Print citation for referencing Prokka")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="No screen output (default OFF)")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="Debug mode: keep all temporary files (default OFF)")), ToolInput(tag="in_db_dir", input_type=Boolean(optional=True), prefix="--dbdir", doc=InputDocumentation(doc="[X]        Prokka database root folders (default '/usr/local/db')")), ToolInput(tag="in_list_db", input_type=Boolean(optional=True), prefix="--listdb", doc=InputDocumentation(doc="List all configured databases")), ToolInput(tag="in_setup_db", input_type=Boolean(optional=True), prefix="--setupdb", doc=InputDocumentation(doc="Index all installed databases")), ToolInput(tag="in_clean_db", input_type=Boolean(optional=True), prefix="--cleandb", doc=InputDocumentation(doc="Remove all database indices")), ToolInput(tag="in_depends", input_type=Boolean(optional=True), prefix="--depends", doc=InputDocumentation(doc="List all software dependencies")), ToolInput(tag="in_outdir", input_type=Directory(optional=True), prefix="--outdir", doc=InputDocumentation(doc="[X]       Output folder [auto] (default '')")), ToolInput(tag="in_force", input_type=Directory(optional=True), prefix="--force", doc=InputDocumentation(doc="Force overwriting existing output folder (default OFF)")), ToolInput(tag="in_prefix", input_type=File(optional=True), prefix="--prefix", doc=InputDocumentation(doc="[X]       Filename output prefix [auto] (default '')")), ToolInput(tag="in_add_genes", input_type=Boolean(optional=True), prefix="--addgenes", doc=InputDocumentation(doc="Add 'gene' features for each 'CDS' feature (default OFF)")), ToolInput(tag="in_add_mrna", input_type=Boolean(optional=True), prefix="--addmrna", doc=InputDocumentation(doc="Add 'mRNA' features for each 'CDS' feature (default OFF)")), ToolInput(tag="in_locus_tag", input_type=Boolean(optional=True), prefix="--locustag", doc=InputDocumentation(doc="[X]     Locus tag prefix [auto] (default '')")), ToolInput(tag="in_increment", input_type=Boolean(optional=True), prefix="--increment", doc=InputDocumentation(doc="[N]    Locus tag counter increment (default '1')")), ToolInput(tag="in_gff_ver", input_type=Boolean(optional=True), prefix="--gffver", doc=InputDocumentation(doc="[N]       GFF version (default '3')")), ToolInput(tag="in_compliant", input_type=Boolean(optional=True), prefix="--compliant", doc=InputDocumentation(doc="Force Genbank/ENA/DDJB compliance: --addgenes --mincontiglen 200 --centre XXX (default OFF)")), ToolInput(tag="in_centre", input_type=Boolean(optional=True), prefix="--centre", doc=InputDocumentation(doc="[X]       Sequencing centre ID. (default '')")), ToolInput(tag="in_acc_ver", input_type=Boolean(optional=True), prefix="--accver", doc=InputDocumentation(doc="[N]       Version to put in Genbank file (default '1')")), ToolInput(tag="in_genus", input_type=Boolean(optional=True), prefix="--genus", doc=InputDocumentation(doc="[X]        Genus name (default 'Genus')")), ToolInput(tag="in_species", input_type=Boolean(optional=True), prefix="--species", doc=InputDocumentation(doc="[X]      Species name (default 'species')")), ToolInput(tag="in_strain", input_type=Boolean(optional=True), prefix="--strain", doc=InputDocumentation(doc="[X]       Strain name (default 'strain')")), ToolInput(tag="in_plasmid", input_type=Boolean(optional=True), prefix="--plasmid", doc=InputDocumentation(doc="[X]      Plasmid name or identifier (default '')")), ToolInput(tag="in_kingdom", input_type=Boolean(optional=True), prefix="--kingdom", doc=InputDocumentation(doc="[X]      Annotation mode: Archaea|Bacteria|Mitochondria|Viruses (default 'Bacteria')")), ToolInput(tag="in_g_code", input_type=Boolean(optional=True), prefix="--gcode", doc=InputDocumentation(doc="[N]        Genetic code / Translation table (set if --kingdom is set) (default '0')")), ToolInput(tag="in_prodigal_tf", input_type=Boolean(optional=True), prefix="--prodigaltf", doc=InputDocumentation(doc="[X]   Prodigal training file (default '')")), ToolInput(tag="in_gram", input_type=Boolean(optional=True), prefix="--gram", doc=InputDocumentation(doc="[X]         Gram: -/neg +/pos (default '')")), ToolInput(tag="in_use_genus", input_type=Boolean(optional=True), prefix="--usegenus", doc=InputDocumentation(doc="Use genus-specific BLAST databases (needs --genus) (default OFF)")), ToolInput(tag="in_proteins", input_type=Boolean(optional=True), prefix="--proteins", doc=InputDocumentation(doc="[X]     FASTA or GBK file to use as 1st priority (default '')")), ToolInput(tag="in_hmms", input_type=Boolean(optional=True), prefix="--hmms", doc=InputDocumentation(doc="[X]         Trusted HMM to first annotate from (default '')")), ToolInput(tag="in_meta_genome", input_type=Boolean(optional=True), prefix="--metagenome", doc=InputDocumentation(doc="Improve gene predictions for highly fragmented genomes (default OFF)")), ToolInput(tag="in_raw_product", input_type=Boolean(optional=True), prefix="--rawproduct", doc=InputDocumentation(doc="Do not clean up /product annotation (default OFF)")), ToolInput(tag="in_cds_rna_olap", input_type=Boolean(optional=True), prefix="--cdsrnaolap", doc=InputDocumentation(doc="Allow [tr]RNA to overlap CDS (default OFF)")), ToolInput(tag="in_evalue", input_type=Boolean(optional=True), prefix="--evalue", doc=InputDocumentation(doc="[n.n]     Similarity e-value cut-off (default '1e-09')")), ToolInput(tag="in_coverage", input_type=Boolean(optional=True), prefix="--coverage", doc=InputDocumentation(doc="[n.n]   Minimum coverage on query protein (default '80')")), ToolInput(tag="in_cpus", input_type=Boolean(optional=True), prefix="--cpus", doc=InputDocumentation(doc="[N]         Number of CPUs to use [0=all] (default '8')")), ToolInput(tag="in_fast", input_type=Boolean(optional=True), prefix="--fast", doc=InputDocumentation(doc="Fast mode - only use basic BLASTP databases (default OFF)")), ToolInput(tag="in_no_an_no", input_type=Boolean(optional=True), prefix="--noanno", doc=InputDocumentation(doc="For CDS just set /product='unannotated protein' (default OFF)")), ToolInput(tag="in_min_conti_glen", input_type=Boolean(optional=True), prefix="--mincontiglen", doc=InputDocumentation(doc="[N] Minimum contig size [NCBI needs 200] (default '1')")), ToolInput(tag="in_rf_am", input_type=Boolean(optional=True), prefix="--rfam", doc=InputDocumentation(doc="Enable searching for ncRNAs with Infernal+Rfam (SLOW!) (default '0')")), ToolInput(tag="in_no_rrna", input_type=Boolean(optional=True), prefix="--norrna", doc=InputDocumentation(doc="Don't run rRNA search (default OFF)")), ToolInput(tag="in_not_rna", input_type=Boolean(optional=True), prefix="--notrna", doc=InputDocumentation(doc="Don't run tRNA search (default OFF)")), ToolInput(tag="in_rn_ammer", input_type=Boolean(optional=True), prefix="--rnammer", doc=InputDocumentation(doc="Prefer RNAmmer over Barrnap for rRNA prediction (default OFF)"))], outputs=[ToolOutput(tag="out_outdir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_outdir", type_hint=File()), doc=OutputDocumentation(doc="[X]       Output folder [auto] (default '')")), ToolOutput(tag="out_force", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_force", type_hint=File()), doc=OutputDocumentation(doc="Force overwriting existing output folder (default OFF)")), ToolOutput(tag="out_prefix", output_type=File(optional=True), selector=InputSelector(input_to_select="in_prefix", type_hint=File()), doc=OutputDocumentation(doc="[X]       Filename output prefix [auto] (default '')"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Prokka_V0_1_0().translate("wdl", allow_empty_container=True)

