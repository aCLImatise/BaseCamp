from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Int, File, Boolean

Anvi_Scan_Trnas_V0_1_0 = CommandToolBuilder(tool="anvi_scan_trnas", base_command=["anvi-scan-trnas"], inputs=[ToolInput(tag="in_contigs_db", input_type=String(optional=True), prefix="--contigs-db", doc=InputDocumentation(doc="Anvi'o contigs database generated by 'anvi-gen-\ncontigs'")), ToolInput(tag="in_num_threads", input_type=Int(optional=True), prefix="--num-threads", doc=InputDocumentation(doc="Maximum number of threads to use for multithreading\nwhenever possible. Very conservatively, the default is\n1. It is a good idea to not exceed the number of CPUs\n/ cores on your system. Plus, please be careful with\nthis option if you are running your commands on a SGE\n--if you are clusterizing your runs, and asking for\nmultiple threads to use, you may deplete your\nresources very fast.")), ToolInput(tag="in_log_file", input_type=File(optional=True), prefix="--log-file", doc=InputDocumentation(doc="File path to store debug/output messages.")), ToolInput(tag="in_trna_hits_file", input_type=File(optional=True), prefix="--trna-hits-file", doc=InputDocumentation(doc="File path to store raw hits from tRNA scan.")), ToolInput(tag="in_trna_cut_off_score", input_type=Int(optional=True), prefix="--trna-cutoff-score", doc=InputDocumentation(doc="Minimum score to assume a hit comes from a proper tRNA\ngene (passed to the tRNAScan-SE). The default is 20.\nIt can get any value between 0-100.")), ToolInput(tag="in_just_do_it", input_type=Boolean(optional=True), prefix="--just-do-it", doc=InputDocumentation(doc="Don't bother me with questions or warnings, just do\nit.\n"))], outputs=[ToolOutput(tag="out_log_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_log_file", type_hint=File()), doc=OutputDocumentation(doc="File path to store debug/output messages."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Anvi_Scan_Trnas_V0_1_0().translate("wdl", allow_empty_container=True)

