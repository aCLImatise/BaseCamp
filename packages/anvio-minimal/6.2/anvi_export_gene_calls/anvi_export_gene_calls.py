from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Boolean

Anvi_Export_Gene_Calls_V0_1_0 = CommandToolBuilder(tool="anvi_export_gene_calls", base_command=["anvi-export-gene-calls"], inputs=[ToolInput(tag="in_contigs_db", input_type=String(optional=True), prefix="--contigs-db", doc=InputDocumentation(doc="Anvi'o contigs database generated by 'anvi-gen-\ncontigs'")), ToolInput(tag="in_output_file", input_type=File(optional=True), prefix="--output-file", doc=InputDocumentation(doc="File path to store results.")), ToolInput(tag="in_gene_caller", input_type=String(optional=True), prefix="--gene-caller", doc=InputDocumentation(doc="Which gene caller(s) would you like to export gene\ncalls for? If providing multiple they should be comma-\nseparated (no spaces). If you don't know, use --list-\ngene-callers")), ToolInput(tag="in_list_gene_callers", input_type=Boolean(optional=True), prefix="--list-gene-callers", doc=InputDocumentation(doc="List available gene callers in the contigs database\nand quit.")), ToolInput(tag="in_skip_sequence_reporting", input_type=Boolean(optional=True), prefix="--skip-sequence-reporting", doc=InputDocumentation(doc="By default, exported gene calls have an amino acid\nsequences column in the output. Turn this behavior off\nwith this flag\n"))], outputs=[ToolOutput(tag="out_output_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_file", type_hint=File()), doc=OutputDocumentation(doc="File path to store results."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Anvi_Export_Gene_Calls_V0_1_0().translate("wdl", allow_empty_container=True)

