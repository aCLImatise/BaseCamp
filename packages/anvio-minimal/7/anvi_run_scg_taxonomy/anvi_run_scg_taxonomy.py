from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Int

Anvi_Run_Scg_Taxonomy_V0_1_0 = CommandToolBuilder(tool="anvi_run_scg_taxonomy", base_command=["anvi-run-scg-taxonomy"], inputs=[ToolInput(tag="in_contigs_db", input_type=String(optional=True), prefix="--contigs-db", doc=InputDocumentation(doc="Anvi'o contigs database generated by 'anvi-gen-\ncontigs-database' (default: None)")), ToolInput(tag="in_scgs_taxonomy_data_dir", input_type=File(optional=True), prefix="--scgs-taxonomy-data-dir", doc=InputDocumentation(doc="The directory for SCGs data to be stored (or read\nfrom, depending on the context). If you leave it as is\nwithout specifying anything, anvi'o will set up\neverything in (or try to read things from) a pre-\ndefined default directory. The advantage of using the\ndefault directory at the time of set up is that every\nuser of anvi'o on a computer system will be using a\nsingle data directory, but then you may need to run\nthe setup program with superuser privileges. If you\ndon't have superuser privileges, then you can use this\nparameter to tell anvi'o the location you wish to use\nto setup your databases. If you are using a program\n(such as `anvi-run-scg-taxonomy` or `anvi-estimate-\nscg-taxonomy`) you will have to use this parameter to\ntell those programs where your data are. (default:\nNone)")), ToolInput(tag="in_min_percent_identity", input_type=Int(optional=True), prefix="--min-percent-identity", doc=InputDocumentation(doc="The defualt value for this is 90.0%, and in an ideal\nworld you sholdn't really change it. Lowering this\nvalue will probably give you too many hits from\nneighboring genomes, which may ruin your consensus\ntaxonomy (imagine, at 90% identity you may match to a\nsingle species, but at 70% identity you may match to\nevery species in a genus and your consensus assignment\nmay be influenced by that). But once in a while you\nwill have a genome that doesn't have any close match\nin GTDB, and you will be curious to find out what it\ncould be. So, when you are getting no SCG hits\nwhatsoever, only then you may want to play with this\nvalue. In those cases you can run anvi-estimate-scg-\ntaxonomy with a `--debug` flag to see what is really\ngoing on. We strongly advice you to do this only with\nsingle genomes, and never with metagenomes.")), ToolInput(tag="in_max_num_target_sequences", input_type=Int(optional=True), prefix="--max-num-target-sequences", doc=InputDocumentation(doc="This parameter is used to determine how many hits from\nthe database that has a reasonable match to the query\nsequence should be taken into consideration to make a\nfinal decision about the consensus taxonomy for each\nindividual single-copy core gene sequence. The default\nis 20, which has been quite reasonable in our tests,\nhowever, you may need to increase this number to get\nmore accurate results for your own data. In cases\nwhere you think this is what you need, the best way to\ntest the parameter space for `--max-num-target-\nsequences` is to run the program multiple times on the\nsame database with `--debug` and compare results.")), ToolInput(tag="in_num_parallel_processes", input_type=Int(optional=True), prefix="--num-parallel-processes", doc=InputDocumentation(doc="Maximum number of processes to run in parallel. Please\nnote that this is different than number of threads. If\nyou ask for 4 parallel processes, and 5 threads,\nanvi'o will run four processes in parallel and assign\n5 threads to each. For resource allocation you must\nmultiply the number of processes and threads.\n(default: 1)")), ToolInput(tag="in_num_threads", input_type=Int(optional=True), prefix="--num-threads", doc=InputDocumentation(doc="Maximum number of threads to use for multithreading\nwhenever possible. Very conservatively, the default is\n1. It is a good idea to not exceed the number of CPUs\n/ cores on your system. Plus, please be careful with\nthis option if you are running your commands on a SGE\n--if you are clusterizing your runs, and asking for\nmultiple threads to use, you may deplete your\nresources very fast. (default: 1)")), ToolInput(tag="in_write_buffer_size", input_type=Int(optional=True), prefix="--write-buffer-size", doc=InputDocumentation(doc="How many items should be kept in memory before they\nare written to the disk. The default is 500. The\nlarger the buffer size, the less frequently the\nprogram will access the disk, yet the more memory will\nbe consumed since the processed items will be cleared\noff the memory only after they are written to the\ndisk. The default buffer size will likely work for\nmost cases, but if you feel you need to reduce it, we\ntrust you. Please keep an eye on the memory usage\noutput to make sure the memory use never exceeds the\nsize of the physical memory.")), ToolInput(tag="in_all_hits_output_file", input_type=File(optional=True), prefix="--all-hits-output-file", doc=InputDocumentation(doc="If this flag is declared, anvi'o will store a\ncomprehensive list of hits that led to the\ndetermination of the consensus hit per sequence (which\nis the only piece of information that is stored in the\ncontigs database). (default: None)")), ToolInput(tag="in_scgs_taxonomy", input_type=String(), position=0, doc=InputDocumentation(doc="üç∫ More on `anvi-run-scg-taxonomy`:"))], outputs=[ToolOutput(tag="out_all_hits_output_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_all_hits_output_file", type_hint=File()), doc=OutputDocumentation(doc="If this flag is declared, anvi'o will store a\ncomprehensive list of hits that led to the\ndetermination of the consensus hit per sequence (which\nis the only piece of information that is stored in the\ncontigs database). (default: None)"))], container="quay.io/biocontainers/anvio-minimal:7--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Anvi_Run_Scg_Taxonomy_V0_1_0().translate("wdl")

