!Command
command:
- anvi-estimate-metabolism
positional:
- !Positional
  optional: false
  position: 0
  name: respectively.
  description: "-p PROFILE_DB, --profile-db PROFILE_DB\nAnvi'o profile database (default:\
    \ None)"
- !Positional
  optional: false
  position: 0
  name: kegg-metabolism
  description: 'üç∫ More on `anvi-estimate-metabolism`:'
named:
- !Flag
  optional: true
  synonyms:
  - -c
  - --contigs-db
  description: "Anvi'o contigs database generated by 'anvi-gen-\ncontigs-database'\
    \ (default: None)"
  args: !SimpleFlagArg
    name: CONTIGS_DB
- !Flag
  optional: true
  synonyms:
  - -m
  - --metagenome-mode
  description: "Treat a given contigs database as a metagenome rather\nthan treating\
    \ it as a single genome. (default: False)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --kegg-data-dir
  description: "The directory path for your KEGG setup, which will\ninclude things\
    \ like KOfam profiles and KEGG MODULE\ndata. Anvi'o will try to use the default\
    \ path if you\ndo not specify anything. (default: None)"
  args: !SimpleFlagArg
    name: KEGG_DATA_DIR
- !Flag
  optional: true
  synonyms:
  - -C
  - --collection-name
  description: 'Collection name. (default: None)'
  args: !SimpleFlagArg
    name: COLLECTION_NAME
- !Flag
  optional: true
  synonyms:
  - -b
  - --bin-id
  description: 'Bin name you are interested in. (default: None)'
  args: !SimpleFlagArg
    name: BIN_NAME
- !Flag
  optional: true
  synonyms:
  - -B
  - --bin-ids-file
  description: "Text file for bins (each line should be a unique bin\nid). (default:\
    \ None)"
  args: !SimpleFlagArg
    name: FILE_PATH
- !Flag
  optional: true
  synonyms:
  - -e
  - --external-genomes
  description: "A two-column TAB-delimited flat text file that lists\nanvi'o contigs\
    \ databases. The first item in the header\nline should read 'name', and the second\
    \ should read\n'contigs_db_path'. Each line in the file should\ndescribe a single\
    \ entry, where the first column is the\nname of the genome (or MAG), and the second\
    \ column is\nthe anvi'o contigs database generated for this genome.\n(default:\
    \ None)"
  args: !SimpleFlagArg
    name: FILE_PATH
- !Flag
  optional: true
  synonyms:
  - -i
  - --internal-genomes
  description: "A five-column TAB-delimited flat text file. The header\nline must\
    \ contain these columns: 'name', 'bin_id',\n'collection_id', 'profile_db_path',\
    \ 'contigs_db_path'.\nEach line should list a single entry, where 'name' can\n\
    be any name to describe the anvi'o bin identified as\n'bin_id' that is stored\
    \ in a collection. (default:\nNone)"
  args: !SimpleFlagArg
    name: FILE_PATH
- !Flag
  optional: true
  synonyms:
  - -M
  - --metagenomes
  description: "A two-column TAB-delimited flat text file. The header\nline must contain\
    \ these columns: 'name',\n'contigs_db_path', and 'profile_db_path'. Each line\n\
    should list a single entry, where 'name' can be any\nname to describe the metagenome\
    \ stored in the anvi'o\ncontigs database. In this context, the anvi'o profiles\n\
    associated with contigs database must be SINGLE\nPROFILES, as in generated by\
    \ the program `anvi-\nprofile` and not `anvi-merge`. (default: None)"
  args: !SimpleFlagArg
    name: FILE_PATH
- !Flag
  optional: true
  synonyms:
  - --module-completion-threshold
  description: "This threshold defines the point at which we consider\na KEGG module\
    \ to be 'complete' or 'present' in a given\ngenome or bin. It is the fraction\
    \ of steps that must\nbe complete in in order for the entire module to be\nmarked\
    \ complete. The default is 0.75."
  args: !SimpleFlagArg
    name: NUM
- !Flag
  optional: true
  synonyms:
  - -O
  - --output-file-prefix
  description: "A prefix to be used while naming the output files (no\nfile type extensions\
    \ please; just a prefix). (default:\nNone)"
  args: !SimpleFlagArg
    name: FILENAME_PREFIX
- !Flag
  optional: true
  synonyms:
  - --kegg-output-modes
  description: "Use this flag to indicate what information you want in\nthe kegg metabolism\
    \ output files, by providing a\ncomma-separated list of output modes (each 'mode'\
    \ you\nprovide will result in a different output file, all\nwith the same prefix).\
    \ The default output modes are\n'kofam_hits' and 'complete_modules'. To see a\
    \ list of\navailable output modes, run this script with the flag\n--list-available-modes.\
    \ (default: None)"
  args: !SimpleFlagArg
    name: MODES
- !Flag
  optional: true
  synonyms:
  - --list-available-modes
  description: "Use this flag to see the available output modes and\ntheir descriptions.\
    \ (default: False)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --custom-output-headers
  description: "For use with the 'custom' output mode. Provide a\ncomma-separated\
    \ list of headers to include in the\noutput matrix. To see a list of available\
    \ headers, run\nthis script with the flag --list-available-output-\nheaders. (default:\
    \ None)"
  args: !SimpleFlagArg
    name: HEADERS
- !Flag
  optional: true
  synonyms:
  - --list-available-output-headers
  description: "Use this flag to see the available output headers.\n(default: False)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --matrix-format
  description: "If you want to generate the output in several sparse\nmatrices instead\
    \ of one file, use this flag. In each\nmatrix, contigs DBs will be arranged in\
    \ columns and\nKEGG modules in rows. This output option is especially\nappropriate\
    \ for input option #3. (default: False)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --include-metadata
  description: "When asking for --matrix-format, you can use this flag\nto make sure\
    \ the output matrix files include columns\nwith metadata for each KEGG Module\
    \ or KO (like the\nmodule name and category for example) before the\nsample columns.\
    \ (default: False)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --include-zeros
  description: "If you use this flag, long-format output files will\ninclude modules\
    \ with 0 percent completeness score.\n(default: False)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --only-complete
  description: "Choose this flag if you want only modules over the\nmodule completeness\
    \ threshold to be included in any\noutput files. (default: False)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --get-raw-data-as-json
  description: "If you want the raw metabolism estimation data\ndictionary in JSON-format,\
    \ provide a filename prefix\nto this argument.The program will then output a file\n\
    with the .json extension containing this data.\n(default: None)"
  args: !SimpleFlagArg
    name: FILENAME_PREFIX
- !Flag
  optional: true
  synonyms:
  - --store-json-without-estimation
  description: "This flag is used to control what is stored in the\nJSON-formatted\
    \ metabolism data dictionary. When this\nflag is provided alongside the --get-raw-data-as-json\n\
    flag, the JSON file will be created without running\nmetabolism estimation, and\
    \ that file will consequently\ninclude only information about KOfam hits and gene\n\
    calls. The idea is that you can then modify this file\nas you like and re-run\
    \ this program using the flag\n--estimate-from-json. (default: False)"
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --estimate-from-json
  description: "If you have a JSON file containing KOfam hits and gene\ncall information\
    \ from your contigs database (such as a\nfile produced using the --get-raw-data-as-json\
    \ flag),\nyou can provide that file to this flag and KEGG\nmetabolism estimates\
    \ will be computed from the\ninformation within instead of from a contigs database.\n\
    (default: None)"
  args: !SimpleFlagArg
    name: FILE_PATH
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "usage: anvi-estimate-metabolism [-h] [-c CONTIGS_DB] [-m]\n          \
  \                      [--kegg-data-dir KEGG_DATA_DIR]\n                       \
  \         [-p PROFILE_DB] [-C COLLECTION_NAME]\n                               \
  \ [-b BIN_NAME] [-B FILE_PATH] [-e FILE_PATH]\n                                [-i\
  \ FILE_PATH] [-M FILE_PATH]\n                                [--module-completion-threshold\
  \ NUM]\n                                [-O FILENAME_PREFIX]\n                 \
  \               [--kegg-output-modes MODES]\n                                [--list-available-modes]\n\
  \                                [--custom-output-headers HEADERS]\n           \
  \                     [--list-available-output-headers]\n                      \
  \          [--matrix-format] [--include-metadata]\n                            \
  \    [--include-zeros] [--only-complete]\n                                [--get-raw-data-as-json\
  \ FILENAME_PREFIX]\n                                [--store-json-without-estimation]\n\
  \                                [--estimate-from-json FILE_PATH]\n\noptional arguments:\n\
  \  -h, --help            show this help message and exit\n\nINPUT #1 - ESTIMATION\
  \ ON SINGLE GENOMES OR METAGENOMES:\n  The minimum you must provide this program\
  \ is a contigs database. In which\n  case anvi'o will attempt to estimate metabolism\
  \ for all contigs in it,\n  assuming that the contigs database represents a single\
  \ genome. If the\n  contigs database is actually a metagenome, you should use the\n\
  \  `--metagenome` flag to explicitly declare that.\n\n  -c CONTIGS_DB, --contigs-db\
  \ CONTIGS_DB\n                        Anvi'o contigs database generated by 'anvi-gen-\n\
  \                        contigs-database' (default: None)\n  -m, --metagenome-mode\n\
  \                        Treat a given contigs database as a metagenome rather\n\
  \                        than treating it as a single genome. (default: False)\n\
  \  --kegg-data-dir KEGG_DATA_DIR\n                        The directory path for\
  \ your KEGG setup, which will\n                        include things like KOfam\
  \ profiles and KEGG MODULE\n                        data. Anvi'o will try to use\
  \ the default path if you\n                        do not specify anything. (default:\
  \ None)\n\nINPUT #2 - ESTIMATION ON BINS:\n  If you also provide a profile database\
  \ AND a collection name, anvi'o will\n  estimate metabolism separately for each\
  \ bin in your collection. You can\n  also limit those estimates to a specific bin\
  \ or set of bins in the\n  collection using the parameters `--bin-id` or `--bin-ids-file`,\n\
  \  respectively.\n\n  -p PROFILE_DB, --profile-db PROFILE_DB\n                 \
  \       Anvi'o profile database (default: None)\n  -C COLLECTION_NAME, --collection-name\
  \ COLLECTION_NAME\n                        Collection name. (default: None)\n  -b\
  \ BIN_NAME, --bin-id BIN_NAME\n                        Bin name you are interested\
  \ in. (default: None)\n  -B FILE_PATH, --bin-ids-file FILE_PATH\n              \
  \          Text file for bins (each line should be a unique bin\n              \
  \          id). (default: None)\n\nINPUT #3 - MULTI-MODE:\n  If you have multiple\
  \ contigs databases to work with, you can put them all\n  into a file. Then anvi'o\
  \ will run estimation separately on each database\n  and generate a single output\
  \ file for all. There are 3 types of input\n  files to choose from depending on\
  \ whether you have single genomes\n  (external), genomes in collections (internal),\
  \ or metagenomes in your\n  contigs DBs.\n\n  -e FILE_PATH, --external-genomes FILE_PATH\n\
  \                        A two-column TAB-delimited flat text file that lists\n\
  \                        anvi'o contigs databases. The first item in the header\n\
  \                        line should read 'name', and the second should read\n \
  \                       'contigs_db_path'. Each line in the file should\n      \
  \                  describe a single entry, where the first column is the\n    \
  \                    name of the genome (or MAG), and the second column is\n   \
  \                     the anvi'o contigs database generated for this genome.\n \
  \                       (default: None)\n  -i FILE_PATH, --internal-genomes FILE_PATH\n\
  \                        A five-column TAB-delimited flat text file. The header\n\
  \                        line must contain these columns: 'name', 'bin_id',\n  \
  \                      'collection_id', 'profile_db_path', 'contigs_db_path'.\n\
  \                        Each line should list a single entry, where 'name' can\n\
  \                        be any name to describe the anvi'o bin identified as\n\
  \                        'bin_id' that is stored in a collection. (default:\n  \
  \                      None)\n  -M FILE_PATH, --metagenomes FILE_PATH\n        \
  \                A two-column TAB-delimited flat text file. The header\n       \
  \                 line must contain these columns: 'name',\n                   \
  \     'contigs_db_path', and 'profile_db_path'. Each line\n                    \
  \    should list a single entry, where 'name' can be any\n                     \
  \   name to describe the metagenome stored in the anvi'o\n                     \
  \   contigs database. In this context, the anvi'o profiles\n                   \
  \     associated with contigs database must be SINGLE\n                        PROFILES,\
  \ as in generated by the program `anvi-\n                        profile` and not\
  \ `anvi-merge`. (default: None)\n\nOUTPUT:\n  Parameters for controlling estimation\
  \ output. The output will be TAB-\n  delimited files which by default are prefixed\
  \ with 'kegg-metabolism', but\n  you can of course change that name here.\n\n  --module-completion-threshold\
  \ NUM\n                        This threshold defines the point at which we consider\n\
  \                        a KEGG module to be 'complete' or 'present' in a given\n\
  \                        genome or bin. It is the fraction of steps that must\n\
  \                        be complete in in order for the entire module to be\n \
  \                       marked complete. The default is 0.75.\n  -O FILENAME_PREFIX,\
  \ --output-file-prefix FILENAME_PREFIX\n                        A prefix to be used\
  \ while naming the output files (no\n                        file type extensions\
  \ please; just a prefix). (default:\n                        None)\n  --kegg-output-modes\
  \ MODES\n                        Use this flag to indicate what information you\
  \ want in\n                        the kegg metabolism output files, by providing\
  \ a\n                        comma-separated list of output modes (each 'mode' you\n\
  \                        provide will result in a different output file, all\n \
  \                       with the same prefix). The default output modes are\n  \
  \                      'kofam_hits' and 'complete_modules'. To see a list of\n \
  \                       available output modes, run this script with the flag\n\
  \                        --list-available-modes. (default: None)\n  --list-available-modes\n\
  \                        Use this flag to see the available output modes and\n \
  \                       their descriptions. (default: False)\n  --custom-output-headers\
  \ HEADERS\n                        For use with the 'custom' output mode. Provide\
  \ a\n                        comma-separated list of headers to include in the\n\
  \                        output matrix. To see a list of available headers, run\n\
  \                        this script with the flag --list-available-output-\n  \
  \                      headers. (default: None)\n  --list-available-output-headers\n\
  \                        Use this flag to see the available output headers.\n  \
  \                      (default: False)\n  --matrix-format       If you want to\
  \ generate the output in several sparse\n                        matrices instead\
  \ of one file, use this flag. In each\n                        matrix, contigs DBs\
  \ will be arranged in columns and\n                        KEGG modules in rows.\
  \ This output option is especially\n                        appropriate for input\
  \ option #3. (default: False)\n  --include-metadata    When asking for --matrix-format,\
  \ you can use this flag\n                        to make sure the output matrix\
  \ files include columns\n                        with metadata for each KEGG Module\
  \ or KO (like the\n                        module name and category for example)\
  \ before the\n                        sample columns. (default: False)\n  --include-zeros\
  \       If you use this flag, long-format output files will\n                  \
  \      include modules with 0 percent completeness score.\n                    \
  \    (default: False)\n  --only-complete       Choose this flag if you want only\
  \ modules over the\n                        module completeness threshold to be\
  \ included in any\n                        output files. (default: False)\n\nDEBUG:\n\
  \  Parameters to use if you think something fishy is going on or otherwise\n  want\
  \ to exert more control. Go for it.\n\n  --get-raw-data-as-json FILENAME_PREFIX\n\
  \                        If you want the raw metabolism estimation data\n      \
  \                  dictionary in JSON-format, provide a filename prefix\n      \
  \                  to this argument.The program will then output a file\n      \
  \                  with the .json extension containing this data.\n            \
  \            (default: None)\n  --store-json-without-estimation\n              \
  \          This flag is used to control what is stored in the\n                \
  \        JSON-formatted metabolism data dictionary. When this\n                \
  \        flag is provided alongside the --get-raw-data-as-json\n               \
  \         flag, the JSON file will be created without running\n                \
  \        metabolism estimation, and that file will consequently\n              \
  \          include only information about KOfam hits and gene\n                \
  \        calls. The idea is that you can then modify this file\n               \
  \         as you like and re-run this program using the flag\n                 \
  \       --estimate-from-json. (default: False)\n  --estimate-from-json FILE_PATH\n\
  \                        If you have a JSON file containing KOfam hits and gene\n\
  \                        call information from your contigs database (such as a\n\
  \                        file produced using the --get-raw-data-as-json flag),\n\
  \                        you can provide that file to this flag and KEGG\n     \
  \                   metabolism estimates will be computed from the\n           \
  \             information within instead of from a contigs database.\n         \
  \               (default: None)\n\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n\
  \n\U0001F525 Program description:\n\n   Reconstructs metabolic pathways and estimates\
  \ pathway completeness for a\n   given set of contigs\n\n\U0001F9C0 Can consume:\
  \ \n\n   contigs-db / kegg-data / kegg-functions / profile-db / collection / bin\
  \ / \n   external-genomes / internal-genomes / metagenomes\n   \n\U0001F355 Can\
  \ provide: \n\n   kegg-metabolism\n   \n\U0001F37A More on `anvi-estimate-metabolism`:\n\
  \n   https://merenlab.org/software/anvio/help/7/programs/anvi-estimate-metabolism\n\
  \n\U0001F37B All anvi'o programs and artifacts:\n\n   https://merenlab.org/software/anvio/help/7\n\
  \n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n\
  \n"
generated_using:
- --help
docker_image: quay.io/biocontainers/anvio-minimal:7--py_0
