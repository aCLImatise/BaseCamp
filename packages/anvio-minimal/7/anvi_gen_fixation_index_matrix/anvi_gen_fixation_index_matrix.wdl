version 1.0

task Anvigenfixationindexmatrix {
  input {
    String? profile_db
    String? contigs_db
    String? structure_db
    String? variability_profile
    String? collection_name
    String? bin_id
    File? splits_of_interest
    File? genes_of_interest
    String? gene_caller_ids
    Boolean? only_if_structure
    File? samples_of_interest
    String? engine
    Int? min_coverage_in_each_sample
    File? output_file
    Boolean? keep_negatives
    String splits_txt
    String fixation_index_matrix
  }
  command <<<
    anvi_gen_fixation_index_matrix \
      ~{splits_txt} \
      ~{fixation_index_matrix} \
      ~{if defined(profile_db) then ("--profile-db " +  '"' + profile_db + '"') else ""} \
      ~{if defined(contigs_db) then ("--contigs-db " +  '"' + contigs_db + '"') else ""} \
      ~{if defined(structure_db) then ("--structure-db " +  '"' + structure_db + '"') else ""} \
      ~{if defined(variability_profile) then ("--variability-profile " +  '"' + variability_profile + '"') else ""} \
      ~{if defined(collection_name) then ("--collection-name " +  '"' + collection_name + '"') else ""} \
      ~{if defined(bin_id) then ("--bin-id " +  '"' + bin_id + '"') else ""} \
      ~{if defined(splits_of_interest) then ("--splits-of-interest " +  '"' + splits_of_interest + '"') else ""} \
      ~{if defined(genes_of_interest) then ("--genes-of-interest " +  '"' + genes_of_interest + '"') else ""} \
      ~{if defined(gene_caller_ids) then ("--gene-caller-ids " +  '"' + gene_caller_ids + '"') else ""} \
      ~{if (only_if_structure) then "--only-if-structure" else ""} \
      ~{if defined(samples_of_interest) then ("--samples-of-interest " +  '"' + samples_of_interest + '"') else ""} \
      ~{if defined(engine) then ("--engine " +  '"' + engine + '"') else ""} \
      ~{if defined(min_coverage_in_each_sample) then ("--min-coverage-in-each-sample " +  '"' + min_coverage_in_each_sample + '"') else ""} \
      ~{if defined(output_file) then ("--output-file " +  '"' + output_file + '"') else ""} \
      ~{if (keep_negatives) then "--keep-negatives" else ""}
  >>>
  runtime {
    docker: "quay.io/biocontainers/anvio-minimal:7--py_0"
  }
  parameter_meta {
    profile_db: "Anvi'o profile database (default: None)"
    contigs_db: "Anvi'o contigs database generated by 'anvi-gen-\\ncontigs-database' (default: None)"
    structure_db: "Anvi'o structure database. (default: None)"
    variability_profile: "The output of anvi-gen-variability-profile, or a\\ndifferent variant-calling output that has been\\nconverted to the anvi'o format. (default: None)"
    collection_name: "Collection name. (default: None)"
    bin_id: "Bin name you are interested in. (default: None)"
    splits_of_interest: "A file with split names. There should be only one\\ncolumn in the file, and each line should correspond to\\na unique split name. (default: None)"
    genes_of_interest: "A file with anvi'o gene caller IDs. There should be\\nonly one column in the file, and each line should\\ncorrespond to a unique gene caller id (without a\\ncolumn header). (default: None)"
    gene_caller_ids: "Gene caller ids. Multiple of them can be declared\\nseparated by a delimiter (the default is a comma). In\\nanvi-gen-variability-profile, if you declare nothing\\nyou will get all genes matching your other filtering\\ncriteria. In other programs, you may get everything,\\nnothing, or an error. It really depends on the\\nsituation. Fortunately, mistakes are cheap, so it's\\nworth a try. (default: None)"
    only_if_structure: "If provided, your genes of interest will be further\\nsubset to only include genes with structures in your\\nstructure database, and therefore must be supplied in\\nconjunction with a structure database, i.e. `-s\\n<your_structure_database>`. If you did not specify\\ngenes of interest, ALL genes will be subset to those\\nthat have structures. (default: False)"
    samples_of_interest: "A file with samples names. There should be only one\\ncolumn in the file, and each line should correspond to\\na unique sample name (without a column header).\\n(default: None)"
    engine: "Variability engine. The default is 'NT'."
    min_coverage_in_each_sample: "Minimum coverage of a given variable nucleotide\\nposition in all samples. If a nucleotide position is\\ncovered less than this value even in one sample, it\\nwill be removed from the analysis. Default is 0."
    output_file: "File path to store results. (default:\\nfixation_indices.txt)"
    keep_negatives: "Negative numbers are theoretically possible, and are\\nsometimes interpreted as out-breeding. By default, we\\nset negative numbers to 0 so the results are\\nreflective of a standard distance metric. Provide this\\nflag if you would prefer otherwise. (default: False)"
    splits_txt: "üçï Can provide: "
    fixation_index_matrix: "üç∫ More on `anvi-gen-fixation-index-matrix`:"
  }
  output {
    File out_stdout = stdout()
    File out_output_file = "${in_output_file}"
  }
}