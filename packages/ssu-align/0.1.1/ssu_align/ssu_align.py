from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Int, String

Ssu_Align_V0_1_0 = CommandToolBuilder(tool="ssu_align", base_command=["ssu-align"], inputs=[ToolInput(tag="in_force_dir_named", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc=": force; if dir named <output dir> already exists, empty it first")), ToolInput(tag="in_use_cm_file", input_type=File(optional=True), prefix="-m", doc=InputDocumentation(doc=": use CM file <f> instead of the default CM file")), ToolInput(tag="in_set_bit_score", input_type=Int(optional=True), prefix="-b", doc=InputDocumentation(doc=": set minimum bit score of a surviving subsequence as <x> [default: 50]")), ToolInput(tag="in_set_minimum_length", input_type=Int(optional=True), prefix="-l", doc=InputDocumentation(doc=": set minimum length    of a surviving subsequence as <n> [default: 1]")), ToolInput(tag="in_output_alignments_lineseq", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc=": output alignments in interleaved Stockholm format (not 1 line/seq)")), ToolInput(tag="in_only_search_align", input_type=File(optional=True), prefix="-n", doc=InputDocumentation(doc=": only search with and align to single CM named <s> in CM file\n(default CM file includes 'archaea', 'bacteria', 'eukarya')")), ToolInput(tag="in_dna", input_type=Boolean(optional=True), prefix="--dna", doc=InputDocumentation(doc=": output alignments as DNA, default is RNA (even if input is DNA)")), ToolInput(tag="in_rf_only", input_type=Boolean(optional=True), prefix="--rfonly", doc=InputDocumentation(doc=": discard inserts, only keep consensus (nongap RF) columns in alignments\n(alignments will be fixed width but won't include all target nucleotides)")), ToolInput(tag="in_no_align", input_type=Boolean(optional=True), prefix="--no-align", doc=InputDocumentation(doc=": only search target sequence file for hits, skip alignment step")), ToolInput(tag="in_no_search", input_type=Boolean(optional=True), prefix="--no-search", doc=InputDocumentation(doc=": only align  target sequence file, skip initial search step")), ToolInput(tag="in_top_only", input_type=Boolean(optional=True), prefix="--toponly", doc=InputDocumentation(doc=": only search the top strand [default: search both strands]")), ToolInput(tag="in_forward", input_type=Boolean(optional=True), prefix="--forward", doc=InputDocumentation(doc=": use the HMM forward algorithm for searching, not HMM viterbi")), ToolInput(tag="in_global", input_type=Boolean(optional=True), prefix="--global", doc=InputDocumentation(doc=": search with globally configured HMM [default: local]")), ToolInput(tag="in_keep_int", input_type=Boolean(optional=True), prefix="--keep-int", doc=InputDocumentation(doc=": keep intermediate files which are normally removed")), ToolInput(tag="in_aln_one", input_type=File(optional=True), prefix="--aln-one", doc=InputDocumentation(doc=": only align best-matching sequences to the CM named <s> in CM file")), ToolInput(tag="in_no_trunc", input_type=Boolean(optional=True), prefix="--no-trunc", doc=InputDocumentation(doc=": do not truncate seqs to HMM predicted start/end, align full seqs")), ToolInput(tag="in_no_prob", input_type=Boolean(optional=True), prefix="--no-prob", doc=InputDocumentation(doc=": do not append posterior probabilities to alignments")), ToolInput(tag="in_mx_size", input_type=Int(optional=True), prefix="--mxsize", doc=InputDocumentation(doc=": increase mx size for cmalign to <f> Mb [default: 4096]")), ToolInput(tag="in_options", input_type=Boolean(optional=True), prefix="-options", doc=InputDocumentation(doc="")), ToolInput(tag="in_sequence_file", input_type=File(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_output_dir", input_type=String(), position=1, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Ssu_Align_V0_1_0().translate("wdl", allow_empty_container=True)

