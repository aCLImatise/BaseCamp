from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Int, Boolean

Masscalculator_V0_1_0 = CommandToolBuilder(tool="MassCalculator", base_command=["MassCalculator"], inputs=[ToolInput(tag="in_in", input_type=File(optional=True), prefix="-in", doc=InputDocumentation(doc="Input file with peptide sequences and optionally charge numbers (mutually exclusive to 'in_seq') (valid formats: 'txt')")), ToolInput(tag="in_in_seq", input_type=String(optional=True), prefix="-in_seq", doc=InputDocumentation(doc="List of peptide sequences (mutually exclusive to 'in')")), ToolInput(tag="in_out", input_type=File(optional=True), prefix="-out", doc=InputDocumentation(doc="Output file; if empty, output is written to the screen (valid formats: 'txt')")), ToolInput(tag="in_charge", input_type=Int(optional=True), prefix="-charge", doc=InputDocumentation(doc="List of charge states; required if 'in_seq' is given (default: '[0]')")), ToolInput(tag="in_format", input_type=String(optional=True), prefix="-format", doc=InputDocumentation(doc="Output format ('list': human-readable list, 'table': CSV-like table, 'mass_only': mass values only, 'mz_only': m/z values only)\n(default: 'list' valid: 'list', 'table', 'mass_only', 'mz_only')")), ToolInput(tag="in_average_mass", input_type=Boolean(optional=True), prefix="-average_mass", doc=InputDocumentation(doc="Compute average (instead of monoisotopic) peptide masses")), ToolInput(tag="in_fragment_type", input_type=String(optional=True), prefix="-fragment_type", doc=InputDocumentation(doc="For what type of sequence/fragment the mass should be computed\n(default: 'full' valid: 'full', 'internal', 'N-terminal', 'C-terminal', 'a-ion', 'b-ion', 'c-ion', 'x-ion', 'y-ion', 'z-ion')")), ToolInput(tag="in_separator", input_type=String(optional=True), prefix="-separator", doc=InputDocumentation(doc="Field separator for 'table' output format; by default, the 'tab' character is used")), ToolInput(tag="in_ini", input_type=File(optional=True), prefix="-ini", doc=InputDocumentation(doc="Use the given TOPP INI file")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="-threads", doc=InputDocumentation(doc="Sets the number of threads allowed to be used by the TOPP tool (default: '1')")), ToolInput(tag="in_write_ini", input_type=File(optional=True), prefix="-write_ini", doc=InputDocumentation(doc="Writes the default configuration file")), ToolInput(tag="in_helphelp", input_type=Boolean(optional=True), prefix="--helphelp", doc=InputDocumentation(doc="Shows all options (including advanced)"))], outputs=[ToolOutput(tag="out_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out", type_hint=File()), doc=OutputDocumentation(doc="Output file; if empty, output is written to the screen (valid formats: 'txt')"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Masscalculator_V0_1_0().translate("wdl", allow_empty_container=True)

