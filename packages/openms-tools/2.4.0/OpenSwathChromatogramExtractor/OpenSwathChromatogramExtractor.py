from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Int, Boolean

Openswathchromatogramextractor_V0_1_0 = CommandToolBuilder(tool="OpenSwathChromatogramExtractor", base_command=["OpenSwathChromatogramExtractor"], inputs=[ToolInput(tag="in_in", input_type=String(optional=True), prefix="-in", doc=InputDocumentation(doc="*                   Input files separated by blank (valid formats: 'mzML')")), ToolInput(tag="in_tr", input_type=File(optional=True), prefix="-tr", doc=InputDocumentation(doc="*                    Transition file ('TraML' or 'csv') (valid formats: 'csv', 'traML')")), ToolInput(tag="in_rt_norm", input_type=File(optional=True), prefix="-rt_norm", doc=InputDocumentation(doc="RT normalization file (how to map the RTs of this run to the ones stored in the library) (valid formats: 'trafoXML')")), ToolInput(tag="in_out", input_type=File(optional=True), prefix="-out", doc=InputDocumentation(doc="*                   Output file (valid formats: 'mzML')")), ToolInput(tag="in_min_upper_edge_dist", input_type=Int(optional=True), prefix="-min_upper_edge_dist", doc=InputDocumentation(doc="Minimal distance to the edge to still consider a precursor, in Thomson (default: '0')")), ToolInput(tag="in_rt_window", input_type=Int(optional=True), prefix="-rt_window", doc=InputDocumentation(doc="Extraction window in RT dimension (-1 means extract over the whole range). This is the full window size, e.g. a value of 1000 seconds would extract 500 seconds on either side. (default: '-1')")), ToolInput(tag="in_ion_mobility_window", input_type=Int(optional=True), prefix="-ion_mobility_window", doc=InputDocumentation(doc="Extraction window in ion mobility dimension (in milliseconds). This is the full window size, e.g. a value of 10 milliseconds would extract 5 milliseconds on either side. (default: '-1')")), ToolInput(tag="in_mz_window", input_type=Int(optional=True), prefix="-mz_window", doc=InputDocumentation(doc="Extraction window in m/z dimension (in Thomson, to use ppm see -ppm flag). This is the full window size, e.g. 100 ppm would extract 50 ppm on either side. (default: '0.05' min: '0')")), ToolInput(tag="in_ppm", input_type=Boolean(optional=True), prefix="-ppm", doc=InputDocumentation(doc="M/z extraction_window is in ppm")), ToolInput(tag="in_is_swath", input_type=Boolean(optional=True), prefix="-is_swath", doc=InputDocumentation(doc="Set this flag if the data is SWATH data")), ToolInput(tag="in_extract_ms_one", input_type=Boolean(optional=True), prefix="-extract_MS1", doc=InputDocumentation(doc="Extract the MS1 transitions based on the precursor values in the TraML file (useful for extracting MS1 XIC)")), ToolInput(tag="in_ini", input_type=File(optional=True), prefix="-ini", doc=InputDocumentation(doc="Use the given TOPP INI file")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="-threads", doc=InputDocumentation(doc="Sets the number of threads allowed to be used by the TOPP tool (default: '1')")), ToolInput(tag="in_write_ini", input_type=File(optional=True), prefix="-write_ini", doc=InputDocumentation(doc="Writes the default configuration file")), ToolInput(tag="in_helphelp", input_type=Boolean(optional=True), prefix="--helphelp", doc=InputDocumentation(doc="Shows all options (including advanced)"))], outputs=[ToolOutput(tag="out_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out", type_hint=File()), doc=OutputDocumentation(doc="*                   Output file (valid formats: 'mzML')"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Openswathchromatogramextractor_V0_1_0().translate("wdl", allow_empty_container=True)

