from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Int, Boolean

Xfdr_V0_1_0 = CommandToolBuilder(tool="XFDR", base_command=["XFDR"], inputs=[ToolInput(tag="in_in", input_type=File(optional=True), prefix="-in", doc=InputDocumentation(doc="Crosslink Identifications in either xquest.xml, idXML, or mzIdentML format (as produced by OpenPepXL) (valid formats: 'xml', 'idXML', 'mzid', 'xquest.xml')")), ToolInput(tag="in_in_type", input_type=File(optional=True), prefix="-in_type", doc=InputDocumentation(doc="Type of input file provided with -in (valid: 'xml', 'idXML', 'mzid', 'xquest.xml')")), ToolInput(tag="in_out_idxml", input_type=File(optional=True), prefix="-out_idXML", doc=InputDocumentation(doc="Output as idXML file (valid formats: 'idXML')")), ToolInput(tag="in_out_mz_ident_ml", input_type=File(optional=True), prefix="-out_mzIdentML", doc=InputDocumentation(doc="Output as mzIdentML file (valid formats: 'mzid')")), ToolInput(tag="in_out_x_quest", input_type=File(optional=True), prefix="-out_xquest", doc=InputDocumentation(doc="Output as xquest.xml file (valid formats: 'xquest.xml')")), ToolInput(tag="in_decoy_string", input_type=String(optional=True), prefix="-decoy_string", doc=InputDocumentation(doc="Prefix of decoy protein ids. The correspondig target protein id should be retrievable by deleting this prefix. (default: 'DECOY_')")), ToolInput(tag="in_min_border", input_type=Int(optional=True), prefix="-minborder", doc=InputDocumentation(doc="Filter for minimum precursor mass error (ppm). (default: '-1')")), ToolInput(tag="in_max_border", input_type=Int(optional=True), prefix="-maxborder", doc=InputDocumentation(doc="Filter for maximum precursor mass error (ppm). (default: '-1')")), ToolInput(tag="in_min_deltas", input_type=Int(optional=True), prefix="-mindeltas", doc=InputDocumentation(doc="Filter for delta score, 0 is no filter. Minimum delta score required, hits are rejected if larger or equal. (default: '0' min: '0' max: '1')")), ToolInput(tag="in_minions_matched", input_type=Int(optional=True), prefix="-minionsmatched", doc=InputDocumentation(doc="Filter for minimum matched ions per peptide. (default: '0' min: '0')")), ToolInput(tag="in_unique_xl", input_type=Boolean(optional=True), prefix="-uniquexl", doc=InputDocumentation(doc="Calculate statistics based only on unique IDs.")), ToolInput(tag="in_no_q_values", input_type=Boolean(optional=True), prefix="-no_qvalues", doc=InputDocumentation(doc="Do not transform simple FDR to q-values")), ToolInput(tag="in_min_score", input_type=Int(optional=True), prefix="-minscore", doc=InputDocumentation(doc="Minimum score to be considered for FDR calculation (default: '0')")), ToolInput(tag="in_ini", input_type=File(optional=True), prefix="-ini", doc=InputDocumentation(doc="Use the given TOPP INI file")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="-threads", doc=InputDocumentation(doc="Sets the number of threads allowed to be used by the TOPP tool (default: '1')")), ToolInput(tag="in_write_ini", input_type=File(optional=True), prefix="-write_ini", doc=InputDocumentation(doc="Writes the default configuration file")), ToolInput(tag="in_helphelp", input_type=Boolean(optional=True), prefix="--helphelp", doc=InputDocumentation(doc="Shows all options (including advanced)"))], outputs=[ToolOutput(tag="out_out_idxml", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_idxml", type_hint=File()), doc=OutputDocumentation(doc="Output as idXML file (valid formats: 'idXML')")), ToolOutput(tag="out_out_mz_ident_ml", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_mz_ident_ml", type_hint=File()), doc=OutputDocumentation(doc="Output as mzIdentML file (valid formats: 'mzid')")), ToolOutput(tag="out_out_x_quest", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_x_quest", type_hint=File()), doc=OutputDocumentation(doc="Output as xquest.xml file (valid formats: 'xquest.xml')"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Xfdr_V0_1_0().translate("wdl", allow_empty_container=True)

