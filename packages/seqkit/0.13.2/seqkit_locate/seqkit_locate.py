from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, File, String

Seqkit_Locate_V0_1_0 = CommandToolBuilder(tool="seqkit_locate", base_command=["seqkit", "locate"], inputs=[ToolInput(tag="in_bed", input_type=Boolean(optional=True), prefix="--bed", doc=InputDocumentation(doc="output in BED6 format")), ToolInput(tag="in_degenerate", input_type=Boolean(optional=True), prefix="--degenerate", doc=InputDocumentation(doc="pattern/motif contains degenerate base")), ToolInput(tag="in_gtf", input_type=Boolean(optional=True), prefix="--gtf", doc=InputDocumentation(doc="output in GTF format")), ToolInput(tag="in_hide_matched", input_type=Boolean(optional=True), prefix="--hide-matched", doc=InputDocumentation(doc="do not show matched sequences")), ToolInput(tag="in_ignore_case", input_type=Boolean(optional=True), prefix="--ignore-case", doc=InputDocumentation(doc="ignore case")), ToolInput(tag="in_max_mismatch", input_type=Int(optional=True), prefix="--max-mismatch", doc=InputDocumentation(doc="max mismatch when matching by seq. For large genomes like human genome, using mapping/alignment tools would be faster")), ToolInput(tag="in_non_greedy", input_type=Boolean(optional=True), prefix="--non-greedy", doc=InputDocumentation(doc="non-greedy mode, faster but may miss motifs overlapping with others")), ToolInput(tag="in_only_positive_strand", input_type=Boolean(optional=True), prefix="--only-positive-strand", doc=InputDocumentation(doc="only search on positive strand")), ToolInput(tag="in_pattern", input_type=Int(optional=True), prefix="--pattern", doc=InputDocumentation(doc="pattern/motif (multiple values supported. Attention: use double quotation marks for patterns containing comma, e.g., -p ''A{2,}'')")), ToolInput(tag="in_pattern_file", input_type=File(optional=True), prefix="--pattern-file", doc=InputDocumentation(doc="pattern/motif file (FASTA format)")), ToolInput(tag="in_use_fmi", input_type=Boolean(optional=True), prefix="--use-fmi", doc=InputDocumentation(doc="use FM-index for much faster search of lots of sequence patterns")), ToolInput(tag="in_use_regexp", input_type=Boolean(optional=True), prefix="--use-regexp", doc=InputDocumentation(doc="patterns/motifs are regular expression")), ToolInput(tag="in_validate_seq_length", input_type=Int(optional=True), prefix="--validate-seq-length", doc=InputDocumentation(doc="length of sequence to validate (0 for whole seq) (default 10000)")), ToolInput(tag="in_alphabet_guess_seq_length", input_type=Int(optional=True), prefix="--alphabet-guess-seq-length", doc=InputDocumentation(doc="length of sequence prefix of the first FASTA record based on which seqkit guesses the sequence type (0 for whole seq) (default 10000)")), ToolInput(tag="in_id_ncbi", input_type=Boolean(optional=True), prefix="--id-ncbi", doc=InputDocumentation(doc="FASTA head is NCBI-style, e.g. >gi|110645304|ref|NC_002516.2| Pseud...")), ToolInput(tag="in_id_regexp", input_type=String(optional=True), prefix="--id-regexp", doc=InputDocumentation(doc="regular expression for parsing ID (default '^(\\S+)\\s?')")), ToolInput(tag="in_in_file_list", input_type=File(optional=True), prefix="--infile-list", doc=InputDocumentation(doc="file of input files list (one file per line), if given, they are appended to files from cli arguments")), ToolInput(tag="in_line_width", input_type=Int(optional=True), prefix="--line-width", doc=InputDocumentation(doc="line width when outputing FASTA format (0 for no wrap) (default 60)")), ToolInput(tag="in_out_file", input_type=File(optional=True), prefix="--out-file", doc=InputDocumentation(doc="out file ('-' for stdout, suffix .gz for gzipped out) (default '-')")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="be quiet and do not show extra information")), ToolInput(tag="in_seq_type", input_type=String(optional=True), prefix="--seq-type", doc=InputDocumentation(doc="sequence type (dna|rna|protein|unlimit|auto) (for auto, it automatically detect by the first sequence) (default 'auto')")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="number of CPUs. (default value: 1 for single-CPU PC, 2 for others. can also set with environment variable SEQKIT_THREADS) (default 2)"))], outputs=[ToolOutput(tag="out_out_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_file", type_hint=File()), doc=OutputDocumentation(doc="out file ('-' for stdout, suffix .gz for gzipped out) (default '-')"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Seqkit_Locate_V0_1_0().translate("wdl", allow_empty_container=True)

