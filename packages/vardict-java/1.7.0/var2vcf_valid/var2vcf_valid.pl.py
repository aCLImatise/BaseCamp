from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Boolean

Var2Vcf_Valid_Pl_V0_1_0 = CommandToolBuilder(tool="var2vcf_valid.pl", base_command=["var2vcf_valid.pl"], inputs=[ToolInput(tag="in_var_0", input_type=String(optional=True), prefix="-h", doc=InputDocumentation(doc="this usage.")), ToolInput(tag="in_var_1", input_type=String(optional=True), prefix="-H", doc=InputDocumentation(doc="this usage.")), ToolInput(tag="in_set_variants_pass", input_type=File(optional=True), prefix="-S", doc=InputDocumentation(doc="set, variants that didn't pass filters will not be present in VCF file")), ToolInput(tag="in_amplicon_based_variant", input_type=String(optional=True), prefix="-a", doc=InputDocumentation(doc="amplicon based variant calling.  Variant not supported by all amplicons will be considered false positve, with filter set to 'AMPBIAS'.")), ToolInput(tag="in_output_variants_same", input_type=String(optional=True), prefix="-A", doc=InputDocumentation(doc="to output all variants at the same position.  By default, only the variant with the highest allele frequency is converted to VCF.")), ToolInput(tag="in_two_seemingly_high", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="int\nIf two seemingly high quality SNV variants are within {int} bp, they're both filtered.  Default: 0, or no filtering")), ToolInput(tag="in_intthe_maximum_nonmonomer", input_type=Boolean(optional=True), prefix="-I", doc=InputDocumentation(doc="int\nThe maximum non-monomer MSI allowed for a HT variant with AF < 0.5.  By default, 12, or any variants with AF < 0.5 in a region\nwith >6 non-monomer MSI will be considered false positive.  For monomers, that number is 13.")), ToolInput(tag="in_maximum_mean_mismatches", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="double\nThe maximum mean mismatches allowed.  Default: 5.25, or if a variant is supported by reads with more than 5.25 mean mismathes, it'll be considered\nfalse positive.  Mismatches don't includes indels in the alignment.")), ToolInput(tag="in_minimum_mean_position", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="float\nThe minimum mean position of variants in the read.  Default: 8.")), ToolInput(tag="in_whehter_filter_variants", input_type=Boolean(optional=True), prefix="-P", doc=InputDocumentation(doc="0 or 1\nWhehter to filter variants with pstd = 0.  Default: 1 or yes.  Set it to 0 for targeted PCR based sequencing, where pstd is expected.")), ToolInput(tag="in_minimum_mean_base", input_type=Boolean(optional=True), prefix="-q", doc=InputDocumentation(doc="float\nThe minimum mean base quality.  Default to 22.5 for Illumina sequencing")), ToolInput(tag="in_minimum_mapping_quality", input_type=Boolean(optional=True), prefix="-Q", doc=InputDocumentation(doc="float\nThe minimum mapping quality.  Default to 10.0 for Illumina sequencing.  Variants with lower quality (<10) will be kept only if af >= 0.8")), ToolInput(tag="in_minimum_total_depth", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc="integer\nThe minimum total depth.  Default to 3, might consider lower depth if (high quality variant count)*af >= 0.5")), ToolInput(tag="in_minimum_high_quality", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="integer\nThe minimum high quality variant depth.  Default to 2.  Would consider lower depth (high quality variant count)*af >= 0.5")), ToolInput(tag="in_minimum_allele_frequency_default", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc="float\nThe minimum allele frequency.  Default to 0.02")), ToolInput(tag="in_signalnoisethe_minimum_signal", input_type=Boolean(optional=True), prefix="-o", doc=InputDocumentation(doc="signal/noise\nThe minimum signal to noise, or the ratio of hi/(lo+0.5).  Default to 1.5, that is both 2 variant reads are high quality.")), ToolInput(tag="in_minimum_allele_frequency_consider", input_type=Boolean(optional=True), prefix="-F", doc=InputDocumentation(doc="float\nThe minimum allele frequency to consider to be homozygous.  Default to 0.2.  Thus frequency < 0.2 will\nbe considered homozygous REF, while frequency > 0.2 will be considered homozygous ALT.")), ToolInput(tag="in_stringthe_sample_name", input_type=Boolean(optional=True), prefix="-N", doc=InputDocumentation(doc="string\nThe sample name to be used directly.")), ToolInput(tag="in_set_print_tag", input_type=Boolean(optional=True), prefix="-E", doc=InputDocumentation(doc="If set, do not print END tag")), ToolInput(tag="in_minimum_number_split", input_type=Boolean(optional=True), prefix="-T", doc=InputDocumentation(doc="integer\nThe minimum number of split reads for SV.  Default: 1.  Change to 0 if you want SV called from discordant pairs only.\n-b  Path to the *.bed file which is used to generate contigs in the header"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Var2Vcf_Valid_Pl_V0_1_0().translate("wdl", allow_empty_container=True)

