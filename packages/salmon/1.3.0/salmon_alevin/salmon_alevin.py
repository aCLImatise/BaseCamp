from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Directory, File, Int, String

Salmon_Alevin_V0_1_0 = CommandToolBuilder(tool="salmon_alevin", base_command=["salmon", "alevin"], inputs=[ToolInput(tag="in_arg_format_string", input_type=Boolean(optional=True), prefix="-l", doc=InputDocumentation(doc="[ --libType ] arg                  Format string describing the library")), ToolInput(tag="in_arg_list_files", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="[ --unmatedReads ] arg             List of files containing unmated reads\nof (e.g. single-end reads)")), ToolInput(tag="in_one", input_type=Boolean(optional=True), prefix="-1", doc=InputDocumentation(doc="[ --mates1 ] arg                   File containing the #1 mates")), ToolInput(tag="in_two", input_type=Boolean(optional=True), prefix="-2", doc=InputDocumentation(doc="[ --mates2 ] arg                   File containing the #2 mates")), ToolInput(tag="in_print_version_string", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="[ --version ]                      print version string")), ToolInput(tag="in_arg_output_quantification", input_type=Directory(optional=True), prefix="-o", doc=InputDocumentation(doc="[ --output ] arg                   Output quantification directory.")), ToolInput(tag="in_arg_number_use", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="[ --threads ] arg (=2)             The number of threads to use")), ToolInput(tag="in_hash", input_type=File(optional=True), prefix="--hash", doc=InputDocumentation(doc="Secondary input point for Alevin using\nBig freaking Hash (bfh.txt) file. Works\nOnly with --chromium")), ToolInput(tag="in_drop_seq", input_type=Boolean(optional=True), prefix="--dropseq", doc=InputDocumentation(doc="Use DropSeq Single Cell protocol for\nthe library")), ToolInput(tag="in_chromium_v_three", input_type=Boolean(optional=True), prefix="--chromiumV3", doc=InputDocumentation(doc="Use 10x chromium v3 Single Cell\nprotocol for the library.")), ToolInput(tag="in_chromium", input_type=Boolean(optional=True), prefix="--chromium", doc=InputDocumentation(doc="Use 10x chromium v2 Single Cell\nprotocol for the library.")), ToolInput(tag="in_gem_code", input_type=Boolean(optional=True), prefix="--gemcode", doc=InputDocumentation(doc="Use 10x gemcode v1 Single Cell protocol\nfor the library.")), ToolInput(tag="in_cite_seq", input_type=Boolean(optional=True), prefix="--citeseq", doc=InputDocumentation(doc="Use CITESeq Single Cell protocol for\nthe library, 16 CB, 12 UMI and\nfeatures.")), ToolInput(tag="in_c_else_q", input_type=Boolean(optional=True), prefix="--celseq", doc=InputDocumentation(doc="Use CEL-Seq Single Cell protocol for\nthe library.")), ToolInput(tag="in_c_else_q_two", input_type=Boolean(optional=True), prefix="--celseq2", doc=InputDocumentation(doc="Use CEL-Seq2 Single Cell protocol for\nthe library.")), ToolInput(tag="in_quartz_seq_two", input_type=Boolean(optional=True), prefix="--quartzseq2", doc=InputDocumentation(doc="Use Quartz-Seq2 v3.2 Single Cell\nprotocol for the library assumes 15\nlength barcode and 8 length UMI.")), ToolInput(tag="in_whitelist", input_type=File(optional=True), prefix="--whitelist", doc=InputDocumentation(doc="File containing white-list barcodes")), ToolInput(tag="in_feature_start", input_type=Int(optional=True), prefix="--featureStart", doc=InputDocumentation(doc="This flag should be used with citeseq\nand specifies the starting index of the\nfeature barcode on Read2.")), ToolInput(tag="in_feature_length", input_type=Int(optional=True), prefix="--featureLength", doc=InputDocumentation(doc="This flag should be used with citeseq\nand specifies the length of the feature\nbarcode.")), ToolInput(tag="in_no_quant", input_type=Boolean(optional=True), prefix="--noQuant", doc=InputDocumentation(doc="Don't run downstream barcode-salmon")), ToolInput(tag="in_num_cell_gibbs_samples", input_type=Int(optional=True), prefix="--numCellGibbsSamples", doc=InputDocumentation(doc="(=0)        Generate mean and variance for cell x\ngene matrix quantification by running\ngibbs chain estimates.")), ToolInput(tag="in_force_cells", input_type=Int(optional=True), prefix="--forceCells", doc=InputDocumentation(doc="(=0)                 Explicitly specify the number of cells.")), ToolInput(tag="in_expect_cells", input_type=Int(optional=True), prefix="--expectCells", doc=InputDocumentation(doc="(=0)                define a close upper bound on expected\nnumber of cells")), ToolInput(tag="in_mrna", input_type=File(optional=True), prefix="--mrna", doc=InputDocumentation(doc="path to a file containing mito-RNA\ngene, one per line")), ToolInput(tag="in_rrna", input_type=File(optional=True), prefix="--rrna", doc=InputDocumentation(doc="path to a file containing ribosomal\nRNA, one per line")), ToolInput(tag="in_keep_cb_fraction", input_type=Int(optional=True), prefix="--keepCBFraction", doc=InputDocumentation(doc="(=0)             fraction of CB to keep, value must be\nin range (0,1], use 1 to quantify all\nCB.")), ToolInput(tag="in_end", input_type=Int(optional=True), prefix="--end", doc=InputDocumentation(doc="Cell-Barcodes end (5 or 3) location in\nthe read sequence from where barcode\nhas to be extracted. (end, umiLength,\nbarcodeLength) should all be provided\nif using this option")), ToolInput(tag="in_umi_length", input_type=Int(optional=True), prefix="--umiLength", doc=InputDocumentation(doc="umi length Parameter for unknown\nprotocol. (end, umiLength,\nbarcodeLength) should all be provided\nif using this option")), ToolInput(tag="in_barcode_length", input_type=Int(optional=True), prefix="--barcodeLength", doc=InputDocumentation(doc="barcode length Parameter for unknown\nprotocol. (end, umiLength,\nbarcodeLength) should all be provided\nif using this option")), ToolInput(tag="in_no_em", input_type=Boolean(optional=True), prefix="--noem", doc=InputDocumentation(doc="do not run em")), ToolInput(tag="in_freq_threshold", input_type=Int(optional=True), prefix="--freqThreshold", doc=InputDocumentation(doc="(=10)             threshold for the frequency of the")), ToolInput(tag="in_dump_fq", input_type=Boolean(optional=True), prefix="--dumpfq", doc=InputDocumentation(doc="Dump barcode modified fastq file for\ndownstream analysis by using coin toss\nfor multi-mapping.")), ToolInput(tag="in_dump_bfh", input_type=Boolean(optional=True), prefix="--dumpBfh", doc=InputDocumentation(doc="dump the big hash with all the barcodes\nand the UMI sequence.")), ToolInput(tag="in_dump_arbor_esc_ences", input_type=Boolean(optional=True), prefix="--dumpArborescences", doc=InputDocumentation(doc="dump the gene-v-cell matrix for the\ntotal number of fragments used in the\nUMI deduplicaiton.")), ToolInput(tag="in_dump_umi_graph", input_type=Boolean(optional=True), prefix="--dumpUmiGraph", doc=InputDocumentation(doc="dump the per cell level Umi Graph.")), ToolInput(tag="in_dump_cell_eq", input_type=Boolean(optional=True), prefix="--dumpCellEq", doc=InputDocumentation(doc="dump the per cell level deduplicated\nequivalence classes.")), ToolInput(tag="in_dump_features", input_type=Boolean(optional=True), prefix="--dumpFeatures", doc=InputDocumentation(doc="Dump features for whitelist and\ndownstream analysis.")), ToolInput(tag="in_dump_mtx", input_type=Boolean(optional=True), prefix="--dumpMtx", doc=InputDocumentation(doc="Dump cell v transcripts count matrix in\nsparse mtx format.")), ToolInput(tag="in_low_region_min_num_barcodes", input_type=Int(optional=True), prefix="--lowRegionMinNumBarcodes", doc=InputDocumentation(doc="(=200)  Minimum Number of CB to use for\nlearning Low confidence region\n(Default: 200).")), ToolInput(tag="in_max_num_barcodes", input_type=Int(optional=True), prefix="--maxNumBarcodes", doc=InputDocumentation(doc="(=100000)        Maximum allowable limit to process the\ncell barcodes. (Default: 100000)\n")), ToolInput(tag="in_type", input_type=String(), position=0, doc=InputDocumentation(doc="-i [ --index ] arg                    salmon index")), ToolInput(tag="in_concurrently_dot", input_type=String(), position=0, doc=InputDocumentation(doc="--tgMap arg                           transcript to gene map tsv file")), ToolInput(tag="in_model_dot", input_type=String(), position=1, doc=InputDocumentation(doc="--numCellBootstraps arg (=0)          Generate mean and variance for cell x ")), ToolInput(tag="in_barcodes", input_type=String(), position=0, doc=InputDocumentation(doc="--umiEditDistance arg (=1)            Maximum allowble edit distance to "))], outputs=[ToolOutput(tag="out_arg_output_quantification", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_arg_output_quantification", type_hint=File()), doc=OutputDocumentation(doc="[ --output ] arg                   Output quantification directory."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Salmon_Alevin_V0_1_0().translate("wdl", allow_empty_container=True)

