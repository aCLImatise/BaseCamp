from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Int, String

Fastq_Pre_Barcodes_V0_1_0 = CommandToolBuilder(tool="fastq_pre_barcodes", base_command=["fastq_pre_barcodes"], inputs=[ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc=":increase level of messages printed to stderr")), ToolInput(tag="in_brief", input_type=Boolean(optional=True), prefix="--brief", doc=InputDocumentation(doc=":decrease level of messages printed to stderr")), ToolInput(tag="in_read_one", input_type=File(optional=True), prefix="--read1", doc=InputDocumentation(doc=":fastq (optional gzipped) file name")), ToolInput(tag="in_read_two", input_type=File(optional=True), prefix="--read2", doc=InputDocumentation(doc=":fastq (optional gzipped) file name")), ToolInput(tag="in_index_one", input_type=File(optional=True), prefix="--index1", doc=InputDocumentation(doc=":fastq (optional gzipped) file name")), ToolInput(tag="in_index_two", input_type=File(optional=True), prefix="--index2", doc=InputDocumentation(doc=":fastq (optional gzipped) file name")), ToolInput(tag="in_index_three", input_type=File(optional=True), prefix="--index3", doc=InputDocumentation(doc=":fastq (optional gzipped) file name")), ToolInput(tag="in_phred_encoding", input_type=Boolean(optional=True), prefix="--phred_encoding", doc=InputDocumentation(doc="(33|64) :phred encoding used in the input files")), ToolInput(tag="in_min_qual", input_type=Boolean(optional=True), prefix="--min_qual", doc=InputDocumentation(doc="[0-40]        :defines the minimum quality that all bases in the UMI, CELL or Sample should have (reads that do not pass the criteria are discarded). 0 disables the filter.")), ToolInput(tag="in_outfile_one", input_type=File(optional=True), prefix="--outfile1", doc=InputDocumentation(doc=":file name for ouputing the reads from file1")), ToolInput(tag="in_outfile_two", input_type=File(optional=True), prefix="--outfile2", doc=InputDocumentation(doc=":file name for ouputing the reads from file2")), ToolInput(tag="in_outfile_three", input_type=File(optional=True), prefix="--outfile3", doc=InputDocumentation(doc=":file name for ouputing the reads from file3")), ToolInput(tag="in_interleaved", input_type=Boolean(optional=True), prefix="--interleaved", doc=InputDocumentation(doc="(read1|read2|index1|index2|index3),(read1|read2|index1|index2|index3)    :interleaved data")), ToolInput(tag="in_umi_read", input_type=Boolean(optional=True), prefix="--umi_read", doc=InputDocumentation(doc="(read1|read2|index1|index2|index3)       :in which input file can the UMI be found")), ToolInput(tag="in_umi_offset", input_type=Int(optional=True), prefix="--umi_offset", doc=InputDocumentation(doc=":offset")), ToolInput(tag="in_umi_size", input_type=Boolean(optional=True), prefix="--umi_size", doc=InputDocumentation(doc=":number of bases after the offset")), ToolInput(tag="in_cell_read", input_type=Boolean(optional=True), prefix="--cell_read", doc=InputDocumentation(doc="(read1|read2|index1|index2|index3)      :in which input file can the cell be found")), ToolInput(tag="in_cell_offset", input_type=Int(optional=True), prefix="--cell_offset", doc=InputDocumentation(doc=":offset")), ToolInput(tag="in_cell_size", input_type=Int(optional=True), prefix="--cell_size", doc=InputDocumentation(doc=":number of bases after the offset")), ToolInput(tag="in_sample_read", input_type=Boolean(optional=True), prefix="--sample_read", doc=InputDocumentation(doc="(read1|read2|index1|index2|index3)    :in which input file can the sample barcode be found")), ToolInput(tag="in_sample_offset", input_type=Int(optional=True), prefix="--sample_offset", doc=InputDocumentation(doc=":offset")), ToolInput(tag="in_sample_size", input_type=Int(optional=True), prefix="--sample_size", doc=InputDocumentation(doc=":number of bases after the offset")), ToolInput(tag="in_one_zero_x", input_type=Boolean(optional=True), prefix="--10x", doc=InputDocumentation(doc=": use 10X UMI tags (UB and UY) instead of the default tags defined in the SAM specification")), ToolInput(tag="in_optional", input_type=String(optional=True), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_parameters", input_type=String(optional=True), position=1, doc=InputDocumentation(doc=""))], outputs=[], container="quay.io/biocontainers/fastq_utils:0.24.1--hfb9b9cc_1", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Fastq_Pre_Barcodes_V0_1_0().translate("wdl")

