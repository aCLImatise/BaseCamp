from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Int, Float, Boolean

Wtlay_V0_1_0 = CommandToolBuilder(tool="wtlay", base_command=["wtlay"], inputs=[ToolInput(tag="in_long_reads_files", input_type=File(optional=True), prefix="-i", doc=InputDocumentation(doc="Long reads sequences file(s), + *")), ToolInput(tag="in_long_reads_region", input_type=String(optional=True), prefix="-b", doc=InputDocumentation(doc="Long reads retained region, often from wtobt, +\nFormat: read_name\toffset\tlength\toriginal_len")), ToolInput(tag="in_overlap_files_readsttlentbegtendtreadsttlentbegtendtscore", input_type=File(optional=True), prefix="-j", doc=InputDocumentation(doc="Overlap file(s), + *\nFormat: reads1\t+/-\tlen1\tbeg1\tend1\treads2\t+/-\tlen2\tbeg2\tend2\tscore")), ToolInput(tag="in_minimum_alignment_matched", input_type=Int(optional=True), prefix="-s", doc=InputDocumentation(doc="Minimum alignment matched bases, [500]")), ToolInput(tag="in_minimum_alignment_identity", input_type=Float(optional=True), prefix="-m", doc=InputDocumentation(doc="Minimum alignment identity, [0.6]")), ToolInput(tag="in_maximum_margin_alignment", input_type=Int(optional=True), prefix="-w", doc=InputDocumentation(doc="Maximum margin of alignment, [100]")), ToolInput(tag="in_output_file_layouts", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="Output file of layouts, *")), ToolInput(tag="in_force_overwrite_output", input_type=File(optional=True), prefix="-f", doc=InputDocumentation(doc="Force overwrite output file")), ToolInput(tag="in_minimum_estimated_coverage", input_type=Int(optional=True), prefix="-c", doc=InputDocumentation(doc="Minimum estimated coverage of edge to be trusted, [1]\nedge coverage is calculated by counting overlaps that can replace this edge")), ToolInput(tag="in_use_number_matches", input_type=Boolean(optional=True), prefix="-R", doc=InputDocumentation(doc="Use number of matches as alignment score")), ToolInput(tag="in_best_score_cutoff", input_type=Float(optional=True), prefix="-r", doc=InputDocumentation(doc="Best score cutoff, say best overlap MUST have alignment score >= <-r> * read's best score [0.95]")), ToolInput(tag="in_minimum_coverage_similar", input_type=Float(optional=True), prefix="-q", doc=InputDocumentation(doc="Minimum coverage for similar unitig detection, say the aligned length of unitig A by unitig B, divided by total length of unitig A, [0.4]")), ToolInput(tag="in_min_nodes_be", input_type=Int(optional=True), prefix="-u", doc=InputDocumentation(doc="Min nodes of a layout to be output as independent unitig, [4]")), ToolInput(tag="in_maximum_step_tracing", input_type=Int(optional=True), prefix="-B", doc=InputDocumentation(doc="Maximum step in tracing bubbles, [20]")), ToolInput(tag="in_variance_threshold_alignment", input_type=Float(optional=True), prefix="-S", doc=InputDocumentation(doc="Variance threshold of (alignment score / overlap) between ture and false overlaps, [0.50]\nUsed in better_overlap_strgraph")), ToolInput(tag="in_commands_g_printdotstrgraphg", input_type=String(optional=True), prefix="-Q", doc=InputDocumentation(doc="Commands, [gCwgBgRURg]\nG: print_dot_strgraph\ng: print_simple_dot_strgraph\nw: mask_low_cov_edge_strgraph\nC: mask_contained_reads_strgraph\nB: best_overlap_strgraph\nt: bog_cut_tips_strgraph\nM: bog_merge_bubbles_strgraph\nU: recover_edges_inter_unitigs_strgraph\nR: repair_best_overlap_strgraph\nb: better_overlap_strgraph\nO: mask_self_circle_reads_strgraph\nT: reduce_transitive_strgraph\nL: longest_overlap_strgraph\n.: exit program"))], outputs=[ToolOutput(tag="out_output_file_layouts", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_file_layouts", type_hint=File()), doc=OutputDocumentation(doc="Output file of layouts, *")), ToolOutput(tag="out_force_overwrite_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_force_overwrite_output", type_hint=File()), doc=OutputDocumentation(doc="Force overwrite output file"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Wtlay_V0_1_0().translate("wdl", allow_empty_container=True)

