version 1.0

task Reliabilityprofilepl {
  input {
    Boolean? man
    String? seqname
    Boolean? dont_predict
    String? fit_penalty
    Boolean? position_penalty
    Boolean? fit_once_on
    String? title
    File? out
    String? offset
    String? signals
    Float? structure_weight
    String? position_penalty_weight
    Boolean? show_sw
    String? beta
    Boolean? dont_plot
    File? write_r_script
    Boolean? rev_compl
    Boolean? write_subseq
    String? output_format
    Boolean? show_fit_on_off
    Boolean? use_consistency
  }
  command <<<
    reliability_profile_pl \
      ~{if (man) then "--man" else ""} \
      ~{if defined(seqname) then ("--seqname " +  '"' + seqname + '"') else ""} \
      ~{if (dont_predict) then "--dont-predict" else ""} \
      ~{if defined(fit_penalty) then ("--fit-penalty " +  '"' + fit_penalty + '"') else ""} \
      ~{if (position_penalty) then "--position-penalty" else ""} \
      ~{if (fit_once_on) then "--fit-once-on" else ""} \
      ~{if defined(title) then ("--title " +  '"' + title + '"') else ""} \
      ~{if defined(out) then ("--out " +  '"' + out + '"') else ""} \
      ~{if defined(offset) then ("--offset " +  '"' + offset + '"') else ""} \
      ~{if defined(signals) then ("--signals " +  '"' + signals + '"') else ""} \
      ~{if defined(structure_weight) then ("--structure-weight " +  '"' + structure_weight + '"') else ""} \
      ~{if defined(position_penalty_weight) then ("--position-penalty-weight " +  '"' + position_penalty_weight + '"') else ""} \
      ~{if (show_sw) then "--show-sw" else ""} \
      ~{if defined(beta) then ("--beta " +  '"' + beta + '"') else ""} \
      ~{if (dont_plot) then "--dont-plot" else ""} \
      ~{if defined(write_r_script) then ("--write-R-script " +  '"' + write_r_script + '"') else ""} \
      ~{if (rev_compl) then "--revcompl" else ""} \
      ~{if (write_subseq) then "--write-subseq" else ""} \
      ~{if defined(output_format) then ("--output-format " +  '"' + output_format + '"') else ""} \
      ~{if (show_fit_on_off) then "--show-fitonoff" else ""} \
      ~{if (use_consistency) then "--use-consistency" else ""}
  >>>
  parameter_meta {
    man: "Full documentation"
    seqname: "Project to sequence name"
    dont_predict: "Turn off predicting. (def=on)"
    fit_penalty: "Penalty for on/off switching in fit"
    position_penalty: "Position dependent penalty for calculating fit."
    fit_once_on: "Restrict fitting to being exactly once on"
    title: "Title of plot"
    out: "Output filename"
    offset: "Offset of sequence in genome"
    signals: "List of (from,to,orientation) triples. Show signals in plot and\\ncompared infered signal to them. Give list as string \\\"from0 to0\\norientation0;from1 to1 orientation1 ...\\\" Specify multi-range signals\\nby from0a to0a from0b to0b ..."
    structure_weight: "Weight of structure against sequence (1.0)"
    position_penalty_weight: "Weight of the position penalty"
    show_sw: "Show the influence of structure weight in the plot"
    beta: "Inverse temperature beta"
    dont_plot: "Skip plotting, only output"
    write_r_script: "Write the R script to file"
    rev_compl: "Plot and fit a reverse complement"
    write_subseq: "Write the subsequence of fit"
    output_format: "Output format (f = pdf or png, def=pdf)"
    show_fit_on_off: "Show the on/off values for the fit"
    use_consistency: "Uses the file generated by the --consistency command e.g.\\nresult.bmreliability-cbt"
  }
  output {
    File out_stdout = stdout()
    File out_out = "${in_out}"
  }
}