from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Float, String

Average_Dot_Pl_V0_1_0 = CommandToolBuilder(tool="average_dot.pl", base_command=["average-dot.pl"], inputs=[ToolInput(tag="in_man", input_type=Boolean(optional=True), prefix="--man", doc=InputDocumentation(doc="full documentation")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="be verbose")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="be quiet")), ToolInput(tag="in_alignment", input_type=File(optional=True), prefix="--alignment", doc=InputDocumentation(doc="pp file representing the (Lo)Carna alignment")), ToolInput(tag="in_sequences", input_type=File(optional=True), prefix="--sequences", doc=InputDocumentation(doc="pp files for the input sequences")), ToolInput(tag="in_outfile", input_type=File(optional=True), prefix="--outfile", doc=InputDocumentation(doc="output file (DEFAULT: averagedot)")), ToolInput(tag="in_given_threshold_option", input_type=Float(optional=True), prefix="--threshold", doc=InputDocumentation(doc="for each given threshold (this option can be specified more than once)\na copy of the orginal dotplots is created where the dots are\nhighlighted that have in the average plot a probability above the\nthreshold.\n")), ToolInput(tag="in_a", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_be", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_full", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_highlighted", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_output", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_pp", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_copy", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_each", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_file", input_type=File(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_files", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_that", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_for", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_given", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_have", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_of", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_representing", input_type=String(), position=2, doc=InputDocumentation(doc="")), ToolInput(tag="in_in", input_type=String(), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_the", input_type=String(), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_var_25", input_type=String(), position=3, doc=InputDocumentation(doc="")), ToolInput(tag="in_input", input_type=String(), position=4, doc=InputDocumentation(doc="")), ToolInput(tag="in_orginal", input_type=String(), position=4, doc=InputDocumentation(doc="")), ToolInput(tag="in_average", input_type=String(), position=5, doc=InputDocumentation(doc="")), ToolInput(tag="in_dot_plots", input_type=String(), position=5, doc=InputDocumentation(doc="")), ToolInput(tag="in_is", input_type=String(), position=6, doc=InputDocumentation(doc="")), ToolInput(tag="in_plot", input_type=String(), position=6, doc=InputDocumentation(doc="")), ToolInput(tag="in_created", input_type=String(), position=7, doc=InputDocumentation(doc="")), ToolInput(tag="in_probability", input_type=String(), position=8, doc=InputDocumentation(doc="")), ToolInput(tag="in_where", input_type=String(), position=8, doc=InputDocumentation(doc="")), ToolInput(tag="in_above", input_type=String(), position=9, doc=InputDocumentation(doc="")), ToolInput(tag="in_dots", input_type=String(), position=10, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_outfile", output_type=File(optional=True), selector=InputSelector(input_to_select="in_outfile", type_hint=File()), doc=OutputDocumentation(doc="output file (DEFAULT: averagedot)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Average_Dot_Pl_V0_1_0().translate("wdl", allow_empty_container=True)

