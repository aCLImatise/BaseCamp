from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Ifdata_V0_1_0 = CommandToolBuilder(tool="ifdata", base_command=["ifdata"], inputs=[ToolInput(tag="in_reports_interface_existence", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc="Reports interface existence via return code")), ToolInput(tag="in_print_whole_config", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="Print out the whole config of iface")), ToolInput(tag="in_pe", input_type=Boolean(optional=True), prefix="-pe", doc=InputDocumentation(doc="Print out yes or no according to existence")), ToolInput(tag="in_pa", input_type=Boolean(optional=True), prefix="-pa", doc=InputDocumentation(doc="Print out the address")), ToolInput(tag="in_print_netmask", input_type=Boolean(optional=True), prefix="-pn", doc=InputDocumentation(doc="Print netmask")), ToolInput(tag="in_print_network_address", input_type=Boolean(optional=True), prefix="-pN", doc=InputDocumentation(doc="Print network address")), ToolInput(tag="in_pb", input_type=Boolean(optional=True), prefix="-pb", doc=InputDocumentation(doc="Print broadcast")), ToolInput(tag="in_pm", input_type=Boolean(optional=True), prefix="-pm", doc=InputDocumentation(doc="Print mtu")), ToolInput(tag="in_ph", input_type=Boolean(optional=True), prefix="-ph", doc=InputDocumentation(doc="Print out the hardware address")), ToolInput(tag="in_pf", input_type=Boolean(optional=True), prefix="-pf", doc=InputDocumentation(doc="Print flags")), ToolInput(tag="in_si", input_type=Boolean(optional=True), prefix="-si", doc=InputDocumentation(doc="Print all statistics on input")), ToolInput(tag="in_sip", input_type=Boolean(optional=True), prefix="-sip", doc=InputDocumentation(doc="Print # of in packets")), ToolInput(tag="in_sib", input_type=Boolean(optional=True), prefix="-sib", doc=InputDocumentation(doc="Print # of in bytes")), ToolInput(tag="in_sie", input_type=Boolean(optional=True), prefix="-sie", doc=InputDocumentation(doc="Print # of in errors")), ToolInput(tag="in_sid", input_type=Boolean(optional=True), prefix="-sid", doc=InputDocumentation(doc="Print # of in drops")), ToolInput(tag="in_s_if", input_type=Boolean(optional=True), prefix="-sif", doc=InputDocumentation(doc="Print # of in fifo overruns")), ToolInput(tag="in_sic", input_type=Boolean(optional=True), prefix="-sic", doc=InputDocumentation(doc="Print # of in compress")), ToolInput(tag="in_sim", input_type=Boolean(optional=True), prefix="-sim", doc=InputDocumentation(doc="Print # of in multicast")), ToolInput(tag="in_so", input_type=Boolean(optional=True), prefix="-so", doc=InputDocumentation(doc="Print all statistics on output")), ToolInput(tag="in_sop", input_type=Boolean(optional=True), prefix="-sop", doc=InputDocumentation(doc="Print # of out packets")), ToolInput(tag="in_sob", input_type=Boolean(optional=True), prefix="-sob", doc=InputDocumentation(doc="Print # of out bytes")), ToolInput(tag="in_soe", input_type=Boolean(optional=True), prefix="-soe", doc=InputDocumentation(doc="Print # of out errors")), ToolInput(tag="in_sod", input_type=Boolean(optional=True), prefix="-sod", doc=InputDocumentation(doc="Print # of out drops")), ToolInput(tag="in_s_of", input_type=Boolean(optional=True), prefix="-sof", doc=InputDocumentation(doc="Print # of out fifo overruns")), ToolInput(tag="in_sox", input_type=Boolean(optional=True), prefix="-sox", doc=InputDocumentation(doc="Print # of out collisions")), ToolInput(tag="in_soc", input_type=Boolean(optional=True), prefix="-soc", doc=InputDocumentation(doc="Print # of out carrier loss")), ToolInput(tag="in_som", input_type=Boolean(optional=True), prefix="-som", doc=InputDocumentation(doc="Print # of out multicast")), ToolInput(tag="in_bips", input_type=Boolean(optional=True), prefix="-bips", doc=InputDocumentation(doc="Print # of incoming bytes per second")), ToolInput(tag="in_bops", input_type=Boolean(optional=True), prefix="-bops", doc=InputDocumentation(doc="Print # of outgoing bytes per second")), ToolInput(tag="in_i_face", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Ifdata_V0_1_0().translate("wdl", allow_empty_container=True)

