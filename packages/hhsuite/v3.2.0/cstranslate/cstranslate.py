from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, String, Boolean

Cstranslate_V0_1_0 = CommandToolBuilder(tool="cstranslate", base_command=["cstranslate"], inputs=[ToolInput(tag="in_in_file", input_type=File(optional=True), prefix="--infile", doc=InputDocumentation(doc="Input file with alignment or sequence")), ToolInput(tag="in_outfile", input_type=File(optional=True), prefix="--outfile", doc=InputDocumentation(doc="Output file for generated abstract state sequence (def: <infile>.as)")), ToolInput(tag="in_append", input_type=File(optional=True), prefix="--append", doc=InputDocumentation(doc="Append generated abstract state sequence to this file")), ToolInput(tag="in_in_format", input_type=Int(optional=True), prefix="--informat", doc=InputDocumentation(doc="|seq|fas|... Input format: prf, seq, fas, a2m, a3m or ca3m (def=auto)")), ToolInput(tag="in_out_format", input_type=String(optional=True), prefix="--outformat", doc=InputDocumentation(doc="|prf        Outformat: abstract state sequence or profile (def=seq)")), ToolInput(tag="in_match_assign", input_type=Boolean(optional=True), prefix="--match-assign", doc=InputDocumentation(doc="[0:100]     Make all FASTA columns with less than X% gaps match columns\n(def: make columns with residue in first sequence match columns)")), ToolInput(tag="in_alphabet", input_type=File(optional=True), prefix="--alphabet", doc=InputDocumentation(doc="Abstract state alphabet consisting of exactly 219 states (def=internal)")), ToolInput(tag="in_context_data", input_type=File(optional=True), prefix="--context-data", doc=InputDocumentation(doc="Add context-specific pseudocounts using given context-data (def=internal)")), ToolInput(tag="in_pc_admix", input_type=Boolean(optional=True), prefix="--pc-admix", doc=InputDocumentation(doc="[0,1]           Pseudocount admix for context-specific pseudocounts (def=0.90)")), ToolInput(tag="in_pc_ali", input_type=Boolean(optional=True), prefix="--pc-ali", doc=InputDocumentation(doc="[0,inf[           Constant in pseudocount calculation for alignments (def=12.0)")), ToolInput(tag="in_weight", input_type=Boolean(optional=True), prefix="--weight", doc=InputDocumentation(doc="[0,inf[           Weight of abstract state column in emission calculation (def=1000.00)")), ToolInput(tag="in_ff_index", input_type=Boolean(optional=True), prefix="--ffindex", doc=InputDocumentation(doc="Read from -i <ffindex>, write to -o <ffindex> (do not include _ca3m suffix for ca3m informat); enables openmp if possible (def=off)"))], outputs=[ToolOutput(tag="out_outfile", output_type=File(optional=True), selector=InputSelector(input_to_select="in_outfile", type_hint=File()), doc=OutputDocumentation(doc="Output file for generated abstract state sequence (def: <infile>.as)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Cstranslate_V0_1_0().translate("wdl", allow_empty_container=True)

