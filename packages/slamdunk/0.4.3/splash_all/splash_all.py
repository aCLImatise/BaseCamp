from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, Directory, String, Boolean

Splash_All_V0_1_0 = CommandToolBuilder(tool="splash_all", base_command=["splash", "all"], inputs=[ToolInput(tag="in_reference", input_type=File(optional=True), prefix="--reference", doc=InputDocumentation(doc="Reference fasta file")), ToolInput(tag="in_bed", input_type=File(optional=True), prefix="--bed", doc=InputDocumentation(doc="BED file")), ToolInput(tag="in_read_length", input_type=Int(optional=True), prefix="--read-length", doc=InputDocumentation(doc="All UTRs short than the read length are removed.")), ToolInput(tag="in_output_dir", input_type=Directory(optional=True), prefix="--outputDir", doc=InputDocumentation(doc="Output directory for mapped BAM files.")), ToolInput(tag="in_snp_rate", input_type=String(optional=True), prefix="--snp-rate", doc=InputDocumentation(doc="SNP rate in UTRs")), ToolInput(tag="in_read_coverage", input_type=Int(optional=True), prefix="--read-coverage", doc=InputDocumentation(doc="Read coverage (if read number is not specified)")), ToolInput(tag="in_sequencing_error", input_type=String(optional=True), prefix="--sequencing-error", doc=InputDocumentation(doc="Sequencing error")), ToolInput(tag="in_pulse", input_type=String(optional=True), prefix="--pulse", doc=InputDocumentation(doc="Pulse in minutes")), ToolInput(tag="in_rates", input_type=String(optional=True), prefix="--rates", doc=InputDocumentation(doc="List of rates")), ToolInput(tag="in_chase", input_type=String(optional=True), prefix="--chase", doc=InputDocumentation(doc="Chase in minutes")), ToolInput(tag="in_tc_rate", input_type=String(optional=True), prefix="--tc-rate", doc=InputDocumentation(doc="T->C conversion rate")), ToolInput(tag="in_min_half_life", input_type=Int(optional=True), prefix="--min-halflife", doc=InputDocumentation(doc="Lower bound for the simulated half lifes in minutes")), ToolInput(tag="in_max_half_life", input_type=Int(optional=True), prefix="--max-halflife", doc=InputDocumentation(doc="Upper bound for the simulated half lifes in minutes")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Thread number")), ToolInput(tag="in_replicates", input_type=Int(optional=True), prefix="--replicates", doc=InputDocumentation(doc="Number of replicates")), ToolInput(tag="in_skip_turnover", input_type=Boolean(optional=True), prefix="--skip-turnover", doc=InputDocumentation(doc="Take half-life from score filed of input BED file"))], outputs=[ToolOutput(tag="out_output_dir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output_dir", type_hint=File()), doc=OutputDocumentation(doc="Output directory for mapped BAM files."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Splash_All_V0_1_0().translate("wdl", allow_empty_container=True)

