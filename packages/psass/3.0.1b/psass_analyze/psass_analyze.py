from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String

Psass_Analyze_V0_1_0 = CommandToolBuilder(tool="psass_analyze", base_command=["psass", "analyze"], inputs=[ToolInput(tag="in_pool_one", input_type=Boolean(optional=True), prefix="--pool1", doc=InputDocumentation(doc="TEXT         Name of the first pool (order in the pileup file)                        [females]")), ToolInput(tag="in_pool_two", input_type=Boolean(optional=True), prefix="--pool2", doc=InputDocumentation(doc="TEXT         Name of the second pool (order in the pileup file)                       [males]")), ToolInput(tag="in_gff_file", input_type=File(optional=True), prefix="--gff-file", doc=InputDocumentation(doc="TEXT         Path to a GFF file for gene-specific output")), ToolInput(tag="in_po_pool_ation", input_type=Boolean(optional=True), prefix="--popoolation", doc=InputDocumentation(doc="If set, assumes the input file was generated with popoolation2")), ToolInput(tag="in_snp_file", input_type=File(optional=True), prefix="--snp-file", doc=InputDocumentation(doc="TEXT         Output sex-biased SNPs to this file")), ToolInput(tag="in_fst_file", input_type=File(optional=True), prefix="--fst-file", doc=InputDocumentation(doc="TEXT         Output high FST positions to this file")), ToolInput(tag="in_min_depth", input_type=Boolean(optional=True), prefix="--min-depth", doc=InputDocumentation(doc="UINT         Minimum depth to include a site in the analyses                          [10]")), ToolInput(tag="in_window_size", input_type=Boolean(optional=True), prefix="--window-size", doc=InputDocumentation(doc="UINT         Size of the sliding window (in bp)                                       [100000]")), ToolInput(tag="in_output_resolution", input_type=Boolean(optional=True), prefix="--output-resolution", doc=InputDocumentation(doc="UINT         Output resolution for sliding window metrics (in bp)                     [10000]")), ToolInput(tag="in_freq_het", input_type=Boolean(optional=True), prefix="--freq-het", doc=InputDocumentation(doc="FLOAT        Frequency of a sex-linked SNP in the heterogametic sex                   [0.5]")), ToolInput(tag="in_range_het", input_type=Boolean(optional=True), prefix="--range-het", doc=InputDocumentation(doc="FLOAT        Range of frequency for a sex-linked SNP in the heterogametic sex         [0.15]")), ToolInput(tag="in_freq_hom", input_type=Boolean(optional=True), prefix="--freq-hom", doc=InputDocumentation(doc="FLOAT        Frequency of a sex-linked SNP in the homogametic sex                     [1]")), ToolInput(tag="in_range_hom", input_type=Boolean(optional=True), prefix="--range-hom", doc=InputDocumentation(doc="FLOAT        Range of frequency for a sex-linked SNP in the homogametic sex           [0.05]")), ToolInput(tag="in_min_fst", input_type=Boolean(optional=True), prefix="--min-fst", doc=InputDocumentation(doc="FLOAT        Minimum FST to output a site in the FST positions file                   [0.1]")), ToolInput(tag="in_group_snps", input_type=Boolean(optional=True), prefix="--group-snps", doc=InputDocumentation(doc="If set, group consecutive snps to count them as a single polymorphism")), ToolInput(tag="in_input_file", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_output_file", input_type=String(), position=1, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_gff_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_gff_file", type_hint=File()), doc=OutputDocumentation(doc="TEXT         Path to a GFF file for gene-specific output")), ToolOutput(tag="out_snp_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_snp_file", type_hint=File()), doc=OutputDocumentation(doc="TEXT         Output sex-biased SNPs to this file")), ToolOutput(tag="out_fst_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_fst_file", type_hint=File()), doc=OutputDocumentation(doc="TEXT         Output high FST positions to this file"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Psass_Analyze_V0_1_0().translate("wdl", allow_empty_container=True)

