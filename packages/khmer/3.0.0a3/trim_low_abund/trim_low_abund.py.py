from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Int, String, File, Directory

Trim_Low_Abund_Py_V0_1_0 = CommandToolBuilder(tool="trim_low_abund.py", base_command=["trim-low-abund.py"], inputs=[ToolInput(tag="in_info", input_type=Boolean(optional=True), prefix="--info", doc=InputDocumentation(doc="print citation information")), ToolInput(tag="in_k_size", input_type=Int(optional=True), prefix="--ksize", doc=InputDocumentation(doc="k-mer size to use (default: 32)")), ToolInput(tag="in_unique_km_ers", input_type=Int(optional=True), prefix="--unique-kmers", doc=InputDocumentation(doc="approximate number of unique kmers in the input set\n(default: 0)")), ToolInput(tag="in_fp_rate", input_type=String(optional=True), prefix="--fp-rate", doc=InputDocumentation(doc="Override the automatic FP rate setting for the current\nscript (default: None)")), ToolInput(tag="in_max_memory_usage", input_type=Int(optional=True), prefix="--max-memory-usage", doc=InputDocumentation(doc="maximum amount of memory to use for data structure\n(default: None)")), ToolInput(tag="in_small_count", input_type=Boolean(optional=True), prefix="--small-count", doc=InputDocumentation(doc="Reduce memory usage by using a smaller counter for\nindividual kmers. (default: False)")), ToolInput(tag="in_cut_off", input_type=Int(optional=True), prefix="--cutoff", doc=InputDocumentation(doc="remove k-mers below this abundance (default: 2)")), ToolInput(tag="in_trim_at_coverage", input_type=Int(optional=True), prefix="--trim-at-coverage", doc=InputDocumentation(doc="trim reads when entire read above this coverage\n(default: 20)")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="only output a single file with the specified filename;\nuse a single dash '-' to specify that output should go\nto STDOUT (the terminal) (default: None)")), ToolInput(tag="in_variable_coverage", input_type=Boolean(optional=True), prefix="--variable-coverage", doc=InputDocumentation(doc="Only trim low-abundance k-mers from sequences that\nhave high coverage. (default: False)")), ToolInput(tag="in_load_graph", input_type=File(optional=True), prefix="--loadgraph", doc=InputDocumentation(doc="load a precomputed k-mer graph from disk (default:\nNone)")), ToolInput(tag="in_save_graph", input_type=File(optional=True), prefix="--savegraph", doc=InputDocumentation(doc="save the k-mer countgraph to disk after allreads are\nloaded. (default: )")), ToolInput(tag="in_summary_info", input_type=String(optional=True), prefix="--summary-info", doc=InputDocumentation(doc="What format should the machine readable run summary be\nin? (`json` or `tsv`, disabled by default) (default:\nNone)")), ToolInput(tag="in_ignore_pairs", input_type=Boolean(optional=True), prefix="--ignore-pairs", doc=InputDocumentation(doc="treat all reads as if they were singletons (default:\nFalse)")), ToolInput(tag="in_tempdir", input_type=Directory(optional=True), prefix="--tempdir", doc=InputDocumentation(doc="Set location of temporary directory for second pass\n(default: ./)")), ToolInput(tag="in_gzip", input_type=Boolean(optional=True), prefix="--gzip", doc=InputDocumentation(doc="Compress output using gzip (default: False)")), ToolInput(tag="in_bzip", input_type=Boolean(optional=True), prefix="--bzip", doc=InputDocumentation(doc="Compress output using bzip2 (default: False)")), ToolInput(tag="in_digi_norm", input_type=Boolean(optional=True), prefix="--diginorm", doc=InputDocumentation(doc="Eliminate high-coverage reads altogether (digital\nnormalization). (default: False)")), ToolInput(tag="in_digi_norm_coverage", input_type=Int(optional=True), prefix="--diginorm-coverage", doc=InputDocumentation(doc="Coverage threshold for --diginorm (default: 20)")), ToolInput(tag="in_single_pass", input_type=Boolean(optional=True), prefix="--single-pass", doc=InputDocumentation(doc="Do not do a second pass across the low coverage data\n(default: False)")), ToolInput(tag="in_input_filenames", input_type=String(), position=0, doc=InputDocumentation(doc="optional arguments:"))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="only output a single file with the specified filename;\nuse a single dash '-' to specify that output should go\nto STDOUT (the terminal) (default: None)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Trim_Low_Abund_Py_V0_1_0().translate("wdl", allow_empty_container=True)

