from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Int, String

Samtools_Collate_V0_1_0 = CommandToolBuilder(tool="samtools_collate", base_command=["samtools", "collate"], inputs=[ToolInput(tag="in_output_to_stdout", input_type=Boolean(optional=True), prefix="-O", doc=InputDocumentation(doc="output to stdout")), ToolInput(tag="in_output_file_name", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="output file name (use prefix if not set)")), ToolInput(tag="in_uncompressed_bam_output", input_type=Boolean(optional=True), prefix="-u", doc=InputDocumentation(doc="uncompressed BAM output")), ToolInput(tag="in_fast_only_primary", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc="fast (only primary alignments)")), ToolInput(tag="in_working_reads_stored", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="working reads stored (with -f) [10000]")), ToolInput(tag="in_compression_level", input_type=Int(optional=True), prefix="-l", doc=InputDocumentation(doc="compression level [1]")), ToolInput(tag="in_number_temporary_files", input_type=Int(optional=True), prefix="-n", doc=InputDocumentation(doc="number of temporary files [64]")), ToolInput(tag="in_no_pg", input_type=Boolean(optional=True), prefix="--no-PG", doc=InputDocumentation(doc="do not add a PG line")), ToolInput(tag="in_input_fmt_option", input_type=File(optional=True), prefix="--input-fmt-option", doc=InputDocumentation(doc="[=VAL]\nSpecify a single input file format option in the form\nof OPTION or OPTION=VALUE")), ToolInput(tag="in_output_fmt", input_type=String(optional=True), prefix="--output-fmt", doc=InputDocumentation(doc="[,OPT[=VAL]]...\nSpecify output format (SAM, BAM, CRAM)")), ToolInput(tag="in_output_fmt_option", input_type=File(optional=True), prefix="--output-fmt-option", doc=InputDocumentation(doc="[=VAL]\nSpecify a single output file format option in the form\nof OPTION or OPTION=VALUE")), ToolInput(tag="in_reference", input_type=File(optional=True), prefix="--reference", doc=InputDocumentation(doc="Reference sequence FASTA FILE [null]")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of additional threads to use [0]")), ToolInput(tag="in_verbosity", input_type=Int(optional=True), prefix="--verbosity", doc=InputDocumentation(doc="Set level of verbosity")), ToolInput(tag="in_ou", input_type=Boolean(optional=True), prefix="-Ou", doc=InputDocumentation(doc="")), ToolInput(tag="in_in_dot_bam", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_prefix", input_type=String(optional=True), position=1, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output_file_name", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_file_name", type_hint=File()), doc=OutputDocumentation(doc="output file name (use prefix if not set)")), ToolOutput(tag="out_output_fmt_option", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_fmt_option", type_hint=File()), doc=OutputDocumentation(doc="[=VAL]\nSpecify a single output file format option in the form\nof OPTION or OPTION=VALUE"))], container="quay.io/biocontainers/samtools:1.12--hd5e65b6_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Samtools_Collate_V0_1_0().translate("wdl")

