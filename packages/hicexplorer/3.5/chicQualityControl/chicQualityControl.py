from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Array, String, Int, File

Chicqualitycontrol_V0_1_0 = CommandToolBuilder(tool="chicQualityControl", base_command=["chicQualityControl"], inputs=[ToolInput(tag="in_matrices", input_type=Array(t=String(), optional=True), prefix="--matrices", doc=InputDocumentation(doc="The input matrices to apply the QC on.")), ToolInput(tag="in_reference_points", input_type=Int(optional=True), prefix="--referencePoints", doc=InputDocumentation(doc="Bed file contains all reference points which are\nchecked for a sufficient number of interactions.")), ToolInput(tag="in_sparsity", input_type=String(optional=True), prefix="--sparsity", doc=InputDocumentation(doc="Viewpoints with a sparsity less than the value given\nare considered of bad quality. If multiple matrices\nare given, the viewpoint is removed as soon as it is\nof bad quality in at least one matrix.")), ToolInput(tag="in_out_filename", input_type=File(optional=True), prefix="--outFileName", doc=InputDocumentation(doc="The output file name of the passed reference points.\nUsed as prefix for the plots as well.")), ToolInput(tag="in_out_filename_histogram", input_type=File(optional=True), prefix="--outFileNameHistogram", doc=InputDocumentation(doc="The output file for the histogram plot.")), ToolInput(tag="in_out_filename_sparsity", input_type=File(optional=True), prefix="--outFileNameSparsity", doc=InputDocumentation(doc="The output file for the sparsity distribution plot.")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of threads.")), ToolInput(tag="in_fixate_range", input_type=Int(optional=True), prefix="--fixateRange", doc=InputDocumentation(doc="Fixate score of background model starting at distance\nx. E.g. all values greater than 500kb are set to the\nvalue of the 500kb bin.")), ToolInput(tag="in_dpi", input_type=String(optional=True), prefix="--dpi", doc=InputDocumentation(doc="Optional parameter: Resolution for the image if\ntheoutput is a raster graphics image (e.g png, jpg)"))], outputs=[ToolOutput(tag="out_out_filename", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_filename", type_hint=File()), doc=OutputDocumentation(doc="The output file name of the passed reference points.\nUsed as prefix for the plots as well.")), ToolOutput(tag="out_out_filename_histogram", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_filename_histogram", type_hint=File()), doc=OutputDocumentation(doc="The output file for the histogram plot.")), ToolOutput(tag="out_out_filename_sparsity", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_filename_sparsity", type_hint=File()), doc=OutputDocumentation(doc="The output file for the sparsity distribution plot."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Chicqualitycontrol_V0_1_0().translate("wdl", allow_empty_container=True)

