from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, Array, File, String, Boolean

Hicpca_V0_1_0 = CommandToolBuilder(tool="hicPCA", base_command=["hicPCA"], inputs=[ToolInput(tag="in_matrix", input_type=Int(optional=True), prefix="--matrix", doc=InputDocumentation(doc="HiCExplorer matrix in h5 format. (default: None)")), ToolInput(tag="in_output_file_name", input_type=Array(t=File(), optional=True), prefix="--outputFileName", doc=InputDocumentation(doc="File names for the result of the pca.Number of output\nfiles must match the number of computed eigenvectors.\n(default: ['pca1', 'pca2'])")), ToolInput(tag="in_number_of_eigenvectors", input_type=Int(optional=True), prefix="--numberOfEigenvectors", doc=InputDocumentation(doc="The number of eigenvectors that the PCA should\ncompute. (default: 2)")), ToolInput(tag="in_format", input_type=String(optional=True), prefix="--format", doc=InputDocumentation(doc="Output format. Either bedgraph or bigwig. (default:\nbigwig)")), ToolInput(tag="in_chromosomes", input_type=Array(t=String(), optional=True), prefix="--chromosomes", doc=InputDocumentation(doc="List of chromosomes to be included in the correlation.\n(default: None)")), ToolInput(tag="in_method", input_type=String(optional=True), prefix="--method", doc=InputDocumentation(doc="possible methods which can be used to build the obs-\nexp matrix. (default: dist_norm)")), ToolInput(tag="in_ligation_factor", input_type=Boolean(optional=True), prefix="--ligation_factor", doc=InputDocumentation(doc="Setting this flag multiplies a scaling factor to each\nentry of the expected matrix to take care of the\nproximity ligation as has been explained in Homer\nsoftware. This flag is only affective with dist_norm\nmethod and will be ignored if lieberman method is\nchosen. (default: False)")), ToolInput(tag="in_extra_track", input_type=File(optional=True), prefix="--extraTrack", doc=InputDocumentation(doc="Either a gene track or a histon mark coverage file\n(preferably a broad mark) is needed to decide if the\nvalues of the eigenvector need a sign flip or not.\n(default: None)")), ToolInput(tag="in_hist_on_mark_type", input_type=File(optional=True), prefix="--histonMarkType", doc=InputDocumentation(doc="Set it to active or inactive. This is only necessary\nif a histon mark coverage file is given as an\nextraTrack. (default: active)")), ToolInput(tag="in_pearson_matrix", input_type=File(optional=True), prefix="--pearsonMatrix", doc=InputDocumentation(doc="Internally the input matrix is converted per\nchromosome to obs_exp matrix and consecutively to a\nPearson matrix. Set this parameter to write the\npearson matrix to a file. (default: None)")), ToolInput(tag="in_obs_exp_matrix", input_type=File(optional=True), prefix="--obsexpMatrix", doc=InputDocumentation(doc="Internally the input matrix is converted per\nchromosome to obs_exp matrix and consecutively to a\nPearson matrix. Set this parameter to write the\nobserve/expected matrix to a file. (default: None)")), ToolInput(tag="in_ignore_masked_bins", input_type=Boolean(optional=True), prefix="--ignoreMaskedBins", doc=InputDocumentation(doc="Mask bins are usually set to 0. This option removes\nthe masked bins before the PCA is computed. Attention:\nthis will lead to empty PCA regions. (default: False)"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Hicpca_V0_1_0().translate("wdl", allow_empty_container=True)

