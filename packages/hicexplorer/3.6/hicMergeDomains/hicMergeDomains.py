from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Array, String, File, Int, Float

Hicmergedomains_V0_1_0 = CommandToolBuilder(tool="hicMergeDomains", base_command=["hicMergeDomains"], inputs=[ToolInput(tag="in_domain_files", input_type=Array(t=String(), optional=True), prefix="--domainFiles", doc=InputDocumentation(doc="The domain files of the different resolutions is\nrequired")), ToolInput(tag="in_protein_file", input_type=File(optional=True), prefix="--proteinFile", doc=InputDocumentation(doc="In order to be able to better assess the relationship\nbetween TADs, the associated protein file (e.g. CTCF\nfor mammals) can be included. The protein file is\nrequired in broadpeak format")), ToolInput(tag="in_minimum_number_of_peaks", input_type=Int(optional=True), prefix="--minimumNumberOfPeaks", doc=InputDocumentation(doc="Optional parameter to adjust the number of protein\npeaks when adapting the resolution to the domain\nfiles. At least minimumNumberOfPeaks of unique peaks\nmust be in a bin to considered. Otherwise the bin is\ntreated like it has no peaks (Default: 1).")), ToolInput(tag="in_value", input_type=Int(optional=True), prefix="--value", doc=InputDocumentation(doc="Determine a value by how much the boundaries of two\nTADs must at least differ to consider them as two\nseparate TADs (Default: 5000).")), ToolInput(tag="in_percent", input_type=Float(optional=True), prefix="--percent", doc=InputDocumentation(doc="For the relationship determination, a percentage is\nrequired from which area coverage the TADs are related\nto each other.For example, a relationship should be\nentered from 5 percent area coverage -p 0.05 (Default:\n0.5).")), ToolInput(tag="in_output_merged_list", input_type=File(optional=True), prefix="--outputMergedList", doc=InputDocumentation(doc="File name for the merged domains list (Default:\nmergedDomains.bed).")), ToolInput(tag="in_output_relation_list", input_type=File(optional=True), prefix="--outputRelationList", doc=InputDocumentation(doc="File name for the relationship list of the TADs\n(Default: relationList.txt).")), ToolInput(tag="in_output_tree_plot_prefix", input_type=File(optional=True), prefix="--outputTreePlotPrefix", doc=InputDocumentation(doc="File name prefix for the relationship tree of the TADs\n(Default: relationship_tree_).")), ToolInput(tag="in_output_tree_plot_format", input_type=File(optional=True), prefix="--outputTreePlotFormat", doc=InputDocumentation(doc="File format of the relationship tree. Supported\nformats are listed on:\nhttps://www.graphviz.org/doc/info/output.html\n(Default: pdf)."))], outputs=[ToolOutput(tag="out_output_tree_plot_format", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_tree_plot_format", type_hint=File()), doc=OutputDocumentation(doc="File format of the relationship tree. Supported\nformats are listed on:\nhttps://www.graphviz.org/doc/info/output.html\n(Default: pdf)."))], container="quay.io/biocontainers/hicexplorer:3.6--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Hicmergedomains_V0_1_0().translate("wdl")

