from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Array, File, Int, String, Directory, Boolean, Float

Chicplotviewpoint_V0_1_0 = CommandToolBuilder(tool="chicPlotViewpoint", base_command=["chicPlotViewpoint"], inputs=[ToolInput(tag="in_interaction_file", input_type=Array(t=File(), optional=True), prefix="--interactionFile", doc=InputDocumentation(doc="path to the interaction files which should be used for\nplotting")), ToolInput(tag="in_range", input_type=Int(optional=True), prefix="--range", doc=InputDocumentation(doc="RANGE   Defines the region upstream and downstream of a\nreference point which should be included. Format is\n--region upstream downstream, e.g.: --region 500000\n500000 plots 500kb up- and 500kb downstream. This\nvalue should not exceed the range used in the other\nchic-tools.")), ToolInput(tag="in_background_model_file", input_type=File(optional=True), prefix="--backgroundModelFile", doc=InputDocumentation(doc="path to the background file which should be used for\nplotting")), ToolInput(tag="in_interaction_file_folder", input_type=File(optional=True), prefix="--interactionFileFolder", doc=InputDocumentation(doc="Folder where the interaction files are stored. Applies\nonly for batch mode (Default: .).")), ToolInput(tag="in_differential_test_result", input_type=Array(t=String(), optional=True), prefix="--differentialTestResult", doc=InputDocumentation(doc="Path to the H0 rejected files to highlight the regions\nin the plot.")), ToolInput(tag="in_significant_interaction_file_folder", input_type=File(optional=True), prefix="--significantInteractionFileFolder", doc=InputDocumentation(doc="Folder where the files with detected significant\ninteractions are stored. Applies only for batch mode\n(Default: .).")), ToolInput(tag="in_differential_test_results_folder", input_type=Directory(optional=True), prefix="--differentialTestResultsFolder", doc=InputDocumentation(doc="Folder where the H0 rejected files are stored. Applies\nonly for batch mode (Default: .).")), ToolInput(tag="in_significant_interactions", input_type=Array(t=String(), optional=True), prefix="--significantInteractions", doc=InputDocumentation(doc="Path to the files with detected significant\ninteractions to highlight the regions in the plot.")), ToolInput(tag="in_plot_significant_interactions", input_type=Boolean(optional=True), prefix="--plotSignificantInteractions", doc=InputDocumentation(doc="Highlights the significant interactions in the plot\nitself. If not set, only the p-values are updated")), ToolInput(tag="in_output_folder", input_type=Directory(optional=True), prefix="--outputFolder", doc=InputDocumentation(doc="Output folder of the files (Default: .).")), ToolInput(tag="in_output_format", input_type=String(optional=True), prefix="--outputFormat", doc=InputDocumentation(doc="Output format of the plot (Default: png).")), ToolInput(tag="in_dpi", input_type=Int(optional=True), prefix="--dpi", doc=InputDocumentation(doc="Optional parameter: Resolution for the image, ifoutput\nis a raster graphics image (e.g png, jpg) (Default:\n300).")), ToolInput(tag="in_bin_resolution", input_type=Int(optional=True), prefix="--binResolution", doc=InputDocumentation(doc="Resolution of the bin in genomic units. Values are set\nas number of bases, e.g. 1000 for a 1kb, 5000 for a\n5kb or 10000 for a 10kb resolution (Default: 1000).")), ToolInput(tag="in_colormap_p_value", input_type=String(optional=True), prefix="--colorMapPvalue", doc=InputDocumentation(doc="Color map to use for the p-value. Available values can\nbe seen here: http://matplotlib.org/examples/color/col\normaps_reference.html (Default: RdYlBu).")), ToolInput(tag="in_maxp_value", input_type=Float(optional=True), prefix="--maxPValue", doc=InputDocumentation(doc="Maximal value for p-value. Values above this threshold\nare set to this value (Default: 0.1).")), ToolInput(tag="in_min_p_value", input_type=Int(optional=True), prefix="--minPValue", doc=InputDocumentation(doc="Minimal value for p-value. Values below this threshold\nare set to this value (Default: 0.0).")), ToolInput(tag="in_p_value", input_type=Boolean(optional=True), prefix="--pValue", doc=InputDocumentation(doc="Plot p-values as a colorbar")), ToolInput(tag="in_p_value_significance_levels", input_type=Array(t=String(), optional=True), prefix="--pValueSignificanceLevels", doc=InputDocumentation(doc="Highlight the p-values by the defined significance\nlevels.")), ToolInput(tag="in_x_fold", input_type=String(optional=True), prefix="--xFold", doc=InputDocumentation(doc="Plot x-fold region for the mean background.")), ToolInput(tag="in_truncate_zerop_values", input_type=Boolean(optional=True), prefix="--truncateZeroPvalues", doc=InputDocumentation(doc="Sets all p-values which are equal to zero to one.")), ToolInput(tag="in_out_filename", input_type=File(optional=True), prefix="--outFileName", doc=InputDocumentation(doc="File name to save the image. Not used in batch mode.")), ToolInput(tag="in_batch_mode", input_type=Boolean(optional=True), prefix="--batchMode", doc=InputDocumentation(doc="The given file for --interactionFile and or")), ToolInput(tag="in_target_file", input_type=String(optional=True), prefix="--targetFile", doc=InputDocumentation(doc="a list of the to be processed")), ToolInput(tag="in_color_list", input_type=Array(t=String(), optional=True), prefix="--colorList", doc=InputDocumentation(doc="Colorlist for the viewpoint lines (Default g b c m y\nk).")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of threads (uses the python multiprocessing\nmodule) (Default: 4).")), ToolInput(tag="in_files_dot", input_type=String(), position=0, doc=InputDocumentation(doc="--plotSampleNumber PLOTSAMPLENUMBER, -psn PLOTSAMPLENUMBER"))], outputs=[ToolOutput(tag="out_output_folder", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output_folder", type_hint=File()), doc=OutputDocumentation(doc="Output folder of the files (Default: .).")), ToolOutput(tag="out_out_filename", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_filename", type_hint=File()), doc=OutputDocumentation(doc="File name to save the image. Not used in batch mode."))], container="quay.io/biocontainers/hicexplorer:3.6--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Chicplotviewpoint_V0_1_0().translate("wdl")

