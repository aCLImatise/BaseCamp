from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Boolean, Array, Int, Float

Hicplotmatrix_V0_1_0 = CommandToolBuilder(tool="hicPlotMatrix", base_command=["hicPlotMatrix"], inputs=[ToolInput(tag="in_matrix", input_type=File(optional=True), prefix="--matrix", doc=InputDocumentation(doc="Path of the Hi-C matrix to plot.")), ToolInput(tag="in_out_filename", input_type=File(optional=True), prefix="--outFileName", doc=InputDocumentation(doc="File name to save the image.")), ToolInput(tag="in_title", input_type=String(optional=True), prefix="--title", doc=InputDocumentation(doc="Plot title.")), ToolInput(tag="in_score_name", input_type=String(optional=True), prefix="--scoreName", doc=InputDocumentation(doc="Score name label for the heatmap legend.")), ToolInput(tag="in_per_chromosome", input_type=Boolean(optional=True), prefix="--perChromosome", doc=InputDocumentation(doc="Instead of plotting the whole matrix, each chromosome\nis plotted next to the other. This parameter is not\ncompatible with --region.")), ToolInput(tag="in_clear_masked_bins", input_type=Boolean(optional=True), prefix="--clearMaskedBins", doc=InputDocumentation(doc="If set, masked bins are removed from the matrix and\nthe nearest bins are extended to cover the empty space\ninstead of plotting black lines.")), ToolInput(tag="in_chromosome_order", input_type=Array(t=String(), optional=True), prefix="--chromosomeOrder", doc=InputDocumentation(doc="Chromosomes and order in which the chromosomes should\nbe plotted. This option overrides --region and\n--region2.")), ToolInput(tag="in_region", input_type=Int(optional=True), prefix="--region", doc=InputDocumentation(doc="Plot only this region. The format is chr:start-end The\nplotted region contains the main diagonal and is\nsymmetric unless --region2 is given.")), ToolInput(tag="in_region_one_dot", input_type=Boolean(optional=True), prefix="--region1.", doc=InputDocumentation(doc="Plot the log1p of the matrix values.")), ToolInput(tag="in_log", input_type=Boolean(optional=True), prefix="--log", doc=InputDocumentation(doc="Plot the *MINUS* log of the matrix values.")), ToolInput(tag="in_colormap", input_type=String(optional=True), prefix="--colorMap", doc=InputDocumentation(doc="Color map to use for the heatmap. Available values can\nbe seen here: http://matplotlib.org/examples/color/col\normaps_reference.html (Default: RdYlBu_r).")), ToolInput(tag="in_vmin", input_type=String(optional=True), prefix="--vMin", doc=InputDocumentation(doc="Minimum score value.")), ToolInput(tag="in_vmax", input_type=String(optional=True), prefix="--vMax", doc=InputDocumentation(doc="Maximum score value.")), ToolInput(tag="in_dpi", input_type=Int(optional=True), prefix="--dpi", doc=InputDocumentation(doc="Resolution for the image in case theoutput is a raster\ngraphics image (e.g png, jpg) (Default: 72).")), ToolInput(tag="in_bigwig", input_type=Array(t=String(), optional=True), prefix="--bigwig", doc=InputDocumentation(doc="Bigwig file to plot below the matrix. This can for\nexample be used to visualize A/B compartments or ChIP-\nseq data.")), ToolInput(tag="in_bigwig_additional_vertical_axis", input_type=Boolean(optional=True), prefix="--bigwigAdditionalVerticalAxis", doc=InputDocumentation(doc="Add an additional axis to determine the values of a\nbigwig file in 2D better.")), ToolInput(tag="in_vmin_bigwig", input_type=String(optional=True), prefix="--vMinBigwig", doc=InputDocumentation(doc="Minimum score value for bigwig.")), ToolInput(tag="in_vmax_bigwig", input_type=String(optional=True), prefix="--vMaxBigwig", doc=InputDocumentation(doc="Maximum score value for bigwig")), ToolInput(tag="in_flip_bigwig_sign", input_type=Boolean(optional=True), prefix="--flipBigwigSign", doc=InputDocumentation(doc="The sign of the bigwig values are flipped. Useful if\nhicPCA gives inverted values.")), ToolInput(tag="in_scale_factor_bigwig", input_type=File(optional=True), prefix="--scaleFactorBigwig", doc=InputDocumentation(doc="Scale the values of a bigwig file by the given factor\n(Default: 1.0).")), ToolInput(tag="in_font_size", input_type=Int(optional=True), prefix="--fontsize", doc=InputDocumentation(doc="Fontsize in the plot for x and y axis (Default: 10).")), ToolInput(tag="in_rotation_x", input_type=Int(optional=True), prefix="--rotationX", doc=InputDocumentation(doc="Rotation in degrees for the labels of x axis (Default:\n0).")), ToolInput(tag="in_rotation_y", input_type=Int(optional=True), prefix="--rotationY", doc=InputDocumentation(doc="Rotation in degrees for the labels of y axis (Default:\n0).")), ToolInput(tag="in_increase_figure_width", input_type=Float(optional=True), prefix="--increaseFigureWidth", doc=InputDocumentation(doc="Plotting additional bigwig tracks can cause\ncompression in x or y direction of the heatmap. Set\nthis factor to a value unequal to 0 to correct this\n(Default: 0.5).")), ToolInput(tag="in_increase_figure_height", input_type=Float(optional=True), prefix="--increaseFigureHeight", doc=InputDocumentation(doc="Plotting additional bigwig tracks can cause\ncompression in x or y direction of the heatmap. Set\nthis factor to a value unequal to 0 to correct this\n(Default: 0.5).")), ToolInput(tag="in_loops", input_type=File(optional=True), prefix="--loops", doc=InputDocumentation(doc="Bedgraph file to plot detected long range contacts\nfrom hicDetectLoops."))], outputs=[ToolOutput(tag="out_out_filename", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_filename", type_hint=File()), doc=OutputDocumentation(doc="File name to save the image."))], container="quay.io/biocontainers/hicexplorer:3.6--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Hicplotmatrix_V0_1_0().translate("wdl")

