from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, Boolean, String

Toamos_V0_1_0 = CommandToolBuilder(tool="toAmos", base_command=["toAmos"], inputs=[ToolInput(tag="in_output_filename_standard", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="- output filename ('-' for standard output)")), ToolInput(tag="in_sequence_data_file", input_type=File(optional=True), prefix="-s", doc=InputDocumentation(doc="- sequence data file in FASTA format (reads names ending\nin .1 or /1 are taken as mate pairs)")), ToolInput(tag="in_sequence_quality_score", input_type=File(optional=True), prefix="-q", doc=InputDocumentation(doc="- sequence quality score file in QUAL format")), ToolInput(tag="in_gq", input_type=Int(optional=True), prefix="-gq", doc=InputDocumentation(doc="- minimum quality score for high-quality bases (default: 30)")), ToolInput(tag="in_bq", input_type=Int(optional=True), prefix="-bq", doc=InputDocumentation(doc="- maximum quality score for low-quality bases (default: 10)")), ToolInput(tag="in_provide_tigr_file", input_type=File(optional=True), prefix="-c", doc=InputDocumentation(doc="- provide TIGR .contig file")), ToolInput(tag="in_use_celera_assembler", input_type=File(optional=True), prefix="-a", doc=InputDocumentation(doc="- use Celera Assembler .asm contig file")), ToolInput(tag="in_include_surrogate_unitigs", input_type=Boolean(optional=True), prefix="-S", doc=InputDocumentation(doc="- include the surrogate unitigs in the .asm file as AMOS contigs")), ToolInput(tag="in_utg", input_type=Boolean(optional=True), prefix="-utg", doc=InputDocumentation(doc="- include all UTG unitig messages in the .asm file as AMOS contigs")), ToolInput(tag="in_ta", input_type=File(optional=True), prefix="-ta", doc=InputDocumentation(doc="- contig file in TIGR Assembler format (.tasm)")), ToolInput(tag="in_ace", input_type=File(optional=True), prefix="-ace", doc=InputDocumentation(doc="- contig file in Phred ACE format (can be accompanied by -q)")), ToolInput(tag="in_phd", input_type=Boolean(optional=True), prefix="-phd", doc=InputDocumentation(doc="- read the content of PHD file referenced in ACE files")), ToolInput(tag="in_library_matepair_information", input_type=File(optional=True), prefix="-m", doc=InputDocumentation(doc="- library and mate-pair information file in Bambus format")), ToolInput(tag="in_ancilliary_data_file", input_type=File(optional=True), prefix="-x", doc=InputDocumentation(doc="- ancilliary data file (library, mate-pair, clear range)\nin Trace Archive XML format")), ToolInput(tag="in_library_matepair_sequence", input_type=File(optional=True), prefix="-f", doc=InputDocumentation(doc="- library, mate-pair, sequence, quality, and clear\nrange data file in Celera Assembler format")), ToolInput(tag="in_acc", input_type=Boolean(optional=True), prefix="-acc", doc=InputDocumentation(doc="- use accession numbers in FRG files")), ToolInput(tag="in_arachne", input_type=File(optional=True), prefix="-arachne", doc=InputDocumentation(doc="- scaffold file in Arachne .links format")), ToolInput(tag="in_sc_aff", input_type=File(optional=True), prefix="-scaff", doc=InputDocumentation(doc="- scaffold file in Bambus .scaff format")), ToolInput(tag="in_read_insert_information", input_type=File(optional=True), prefix="-i", doc=InputDocumentation(doc="- read insert information")), ToolInput(tag="in_map", input_type=String(optional=True), prefix="-map", doc=InputDocumentation(doc="- read map information")), ToolInput(tag="in_pos", input_type=File(optional=True), prefix="-pos", doc=InputDocumentation(doc="- TIGR-style .pos position file")), ToolInput(tag="in_id", input_type=Int(optional=True), prefix="-id", doc=InputDocumentation(doc="- start numbering AMOS internal IDs at this number"))], outputs=[ToolOutput(tag="out_output_filename_standard", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_filename_standard", type_hint=File()), doc=OutputDocumentation(doc="- output filename ('-' for standard output)"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Toamos_V0_1_0().translate("wdl", allow_empty_container=True)

