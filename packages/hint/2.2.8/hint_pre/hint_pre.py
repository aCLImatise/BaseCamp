from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Directory, String, Int

Hint_Pre_V0_1_0 = CommandToolBuilder(tool="hint_pre", base_command=["hint", "pre"], inputs=[ToolInput(tag="in_data", input_type=File(optional=True), prefix="--data", doc=InputDocumentation(doc="Hi-C raw data with fastq format, two mates seperate\nwith a comma ',', or bam file after alignment.")), ToolInput(tag="in_ref_dir", input_type=Directory(optional=True), prefix="--refdir", doc=InputDocumentation(doc="the reference directory that downloaded from dropbox\ndropbox. (https://www.dropbox.com/sh/2ufsyu4wvrboxxp/A\nABk5-_Fwy7jdM_t0vIsgYf4a?dl=0.)")), ToolInput(tag="in_sam_tools_path", input_type=File(optional=True), prefix="--samtoolspath", doc=InputDocumentation(doc="Path to samtools,\ne.g./n/app/samtools/1.3.1/bin/samtools")), ToolInput(tag="in_aligner_bwa", input_type=File(optional=True), prefix="--alignerbwa", doc=InputDocumentation(doc="Path to your BWA aligner, required when your input\nfile(s) is in fastq format, ignore when you input a\nbam file.")), ToolInput(tag="in_bwa_index", input_type=File(optional=True), prefix="--bwaIndex", doc=InputDocumentation(doc="Path to BWA Index if your input file is fastq format,\nignore if your input is bam file.")), ToolInput(tag="in_genome", input_type=String(optional=True), prefix="--genome", doc=InputDocumentation(doc="Specify your species, choose from hg38, hg19, and\nmm10. DEFAULT: hg19")), ToolInput(tag="in_in_format", input_type=String(optional=True), prefix="--informat", doc=InputDocumentation(doc="Format for the Hi-C input data, choose from 'fastq'\nand 'bam', DEFAULT: fastq")), ToolInput(tag="in_out_format", input_type=String(optional=True), prefix="--outformat", doc=InputDocumentation(doc="Format for the output contact matrix, choose from\n'cooler' and 'juicer', DEFAULT: cooler")), ToolInput(tag="in_resolution", input_type=Int(optional=True), prefix="--resolution", doc=InputDocumentation(doc="Generate Hi-C contact matrix in user specified\nresolution. If not set, HiNT will only output Hi-C\ncontact matrix in 50kb, 100kb, and 1Mb")), ToolInput(tag="in_cooler_path", input_type=File(optional=True), prefix="--coolerpath", doc=InputDocumentation(doc="Path to cooler tool, required when the format is cool\nvia cooler")), ToolInput(tag="in_juicer_path", input_type=File(optional=True), prefix="--juicerpath", doc=InputDocumentation(doc="Path to juicer tools, required when the format is hic\nvia juicer tools")), ToolInput(tag="in_pair_tools_path", input_type=File(optional=True), prefix="--pairtoolspath", doc=InputDocumentation(doc="Path to pairtools")), ToolInput(tag="in_name", input_type=String(optional=True), prefix="--name", doc=InputDocumentation(doc="Prefix for the result files. If not set, 'NA' will be\nused instead")), ToolInput(tag="in_outdir", input_type=File(optional=True), prefix="--outdir", doc=InputDocumentation(doc="Path to the output directory, where you want to store\nall the output files, if not set, the current\ndirectory will be used")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of threads for running BWA, DEFAULT: 16\n"))], outputs=[ToolOutput(tag="out_outdir", output_type=File(optional=True), selector=InputSelector(input_to_select="in_outdir", type_hint=File()), doc=OutputDocumentation(doc="Path to the output directory, where you want to store\nall the output files, if not set, the current\ndirectory will be used"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Hint_Pre_V0_1_0().translate("wdl", allow_empty_container=True)

