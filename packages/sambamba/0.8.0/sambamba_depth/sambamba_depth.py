from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, File, Boolean, String

Sambamba_Depth_V0_1_0 = CommandToolBuilder(tool="sambamba_depth", base_command=["sambamba", "depth"], inputs=[ToolInput(tag="in_filter", input_type=Int(optional=True), prefix="--filter", doc=InputDocumentation(doc="set custom filter for alignments; the default value is\n'mapping_quality > 0 and not duplicate and not failed_quality_control'")), ToolInput(tag="in_output_file", input_type=File(optional=True), prefix="--output-file", doc=InputDocumentation(doc="output filename (by default /dev/stdout)")), ToolInput(tag="in_n_threads", input_type=Int(optional=True), prefix="--nthreads", doc=InputDocumentation(doc="maximum number of threads to use")), ToolInput(tag="in_min_coverage", input_type=Int(optional=True), prefix="--min-coverage", doc=InputDocumentation(doc="minimum mean coverage for output (default: 0 for region/window, 1 for base)")), ToolInput(tag="in_max_coverage", input_type=Int(optional=True), prefix="--max-coverage", doc=InputDocumentation(doc="maximum mean coverage for output")), ToolInput(tag="in_min_base_quality", input_type=Int(optional=True), prefix="--min-base-quality", doc=InputDocumentation(doc="don't count bases with lower base quality")), ToolInput(tag="in_combined", input_type=Boolean(optional=True), prefix="--combined", doc=InputDocumentation(doc="output combined statistics for all samples")), ToolInput(tag="in_annotate", input_type=Boolean(optional=True), prefix="--annotate", doc=InputDocumentation(doc="add additional column of y/n instead of\nskipping records not satisfying the criteria")), ToolInput(tag="in_fix_mate_overlaps", input_type=Boolean(optional=True), prefix="--fix-mate-overlaps", doc=InputDocumentation(doc="detect overlaps of mate reads and handle them on per-base basis")), ToolInput(tag="in_regions", input_type=File(optional=True), prefix="--regions", doc=InputDocumentation(doc="|REGION\nlist or regions of interest or a single region in form chr:beg-end (optional)")), ToolInput(tag="in_report_zero_coverage", input_type=Boolean(optional=True), prefix="--report-zero-coverage", doc=InputDocumentation(doc="(DEPRECATED, use --min-coverage=0 instead)\ndon't skip zero coverage bases")), ToolInput(tag="in_cov_threshold", input_type=String(optional=True), prefix="--cov-threshold", doc=InputDocumentation(doc="multiple thresholds can be provided,\nfor each one an extra column will be added,\nthe percentage of bases in the region\nwhere coverage is more than this value")), ToolInput(tag="in_window_size", input_type=Int(optional=True), prefix="--window-size", doc=InputDocumentation(doc="breadth of the window, in bp (required)")), ToolInput(tag="in_overlap", input_type=Int(optional=True), prefix="--overlap", doc=InputDocumentation(doc="overlap of successive windows, in bp (default is 0)")), ToolInput(tag="in_samba_mba_depth", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_region_vertical_line_window_vertical_line_base", input_type=String(), position=1, doc=InputDocumentation(doc="")), ToolInput(tag="in_input_dot_bam", input_type=String(), position=2, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_file", type_hint=File()), doc=OutputDocumentation(doc="output filename (by default /dev/stdout)"))], container="quay.io/biocontainers/sambamba:0.8.0--h984e79f_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Sambamba_Depth_V0_1_0().translate("wdl")

