from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, File, Int

Esl_Construct_V0_1_0 = CommandToolBuilder(tool="esl_construct", base_command=["esl-construct"], inputs=[ToolInput(tag="in_print_info_conflicting", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc=": print info on all conflicting bps in individual structures")), ToolInput(tag="in__be_verbose", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc=": be verbose")), ToolInput(tag="in_set_sscons_max", input_type=Boolean(optional=True), prefix="-x", doc=InputDocumentation(doc=": set SS_cons as max set of non-conflicting bps from indi SSs")), ToolInput(tag="in_remove_sscons_basepairs", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc=": remove SS_cons basepairs that conflicts with > 0 indi SS")), ToolInput(tag="in_set_sscons_indi", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc=": set SS_cons as indi SS with max bps consistent with SS_cons")), ToolInput(tag="in_rfc", input_type=Boolean(optional=True), prefix="--rfc", doc=InputDocumentation(doc=": with -c, set RF annotation as seq SS_cons structure comes from")), ToolInput(tag="in_indi", input_type=String(optional=True), prefix="--indi", doc=InputDocumentation(doc=": define SS_cons as individual SS for sequence <x>")), ToolInput(tag="in_r_find_i", input_type=Boolean(optional=True), prefix="--rfindi", doc=InputDocumentation(doc=": with --indi <x>, define RF annotation as <x>")), ToolInput(tag="in_f_freq", input_type=String(optional=True), prefix="--ffreq", doc=InputDocumentation(doc=": aln cols i:j become SS_cons bps if paired in > <x> indi SS")), ToolInput(tag="in_fm_in", input_type=Boolean(optional=True), prefix="--fmin", doc=InputDocumentation(doc=": same as --ffreq but find min <x> that gives consistent SS_cons")), ToolInput(tag="in_output_new_alignment", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc=": output a new alignment to file <f>")), ToolInput(tag="in_pfam", input_type=Boolean(optional=True), prefix="--pfam", doc=InputDocumentation(doc=": output alignment in Pfam (non-interleaved, 1 line/seq) format")), ToolInput(tag="in_list_seqs_indi", input_type=File(optional=True), prefix="-l", doc=InputDocumentation(doc=": list seqs w/> 0 indi bp that conflicts w/a SS_cons bp to file <f>")), ToolInput(tag="in_lmax", input_type=Int(optional=True), prefix="--lmax", doc=InputDocumentation(doc=": with -l, change maximum allowed conflicts of 0 to <x>  [0]  (n>=0)")), ToolInput(tag="in_msa_file", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output_new_alignment", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_new_alignment", type_hint=File()), doc=OutputDocumentation(doc=": output a new alignment to file <f>"))], container="quay.io/biocontainers/easel:0.47--h516909a_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Esl_Construct_V0_1_0().translate("wdl")

