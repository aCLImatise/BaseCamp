from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Boolean, Int

Esl_Alimanip_V0_1_0 = CommandToolBuilder(tool="esl_alimanip", base_command=["esl-alimanip"], inputs=[ToolInput(tag="in_output_alignment_file", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc=": output the alignment to file <f>, not stdout")), ToolInput(tag="in_in_format", input_type=File(optional=True), prefix="--informat", doc=InputDocumentation(doc=": specify that input file is in format <s>")), ToolInput(tag="in_out_format", input_type=String(optional=True), prefix="--outformat", doc=InputDocumentation(doc=": specify that output format be <s>")), ToolInput(tag="in_devhelp", input_type=Boolean(optional=True), prefix="--devhelp", doc=InputDocumentation(doc=": show list of undocumented developer options")), ToolInput(tag="in_ln_fract", input_type=Int(optional=True), prefix="--lnfract", doc=InputDocumentation(doc=": remove sequences w/length < <x> fraction of median length")), ToolInput(tag="in_lx_fract", input_type=Int(optional=True), prefix="--lxfract", doc=InputDocumentation(doc=": remove sequences w/length > <x> fraction of median length")), ToolInput(tag="in_lm_in", input_type=Int(optional=True), prefix="--lmin", doc=InputDocumentation(doc=": remove sequences w/length < <n> residues")), ToolInput(tag="in_lmax", input_type=Int(optional=True), prefix="--lmax", doc=InputDocumentation(doc=": remove sequences w/length > <n> residues")), ToolInput(tag="in_rf_fract", input_type=String(optional=True), prefix="--rffract", doc=InputDocumentation(doc=": remove seqs w/nongap RF len < <x> fraction of aln nongap RF len")), ToolInput(tag="in_de_trunc", input_type=Int(optional=True), prefix="--detrunc", doc=InputDocumentation(doc=": remove seqs w/gaps in >= <n> 5' or 3'-most nongap #=GC RF cols")), ToolInput(tag="in_x_am_big", input_type=String(optional=True), prefix="--xambig", doc=InputDocumentation(doc=": remove sequences with >= <n> ambiguous residues")), ToolInput(tag="in_seq_r", input_type=File(optional=True), prefix="--seq-r", doc=InputDocumentation(doc=": remove sequences with names listed in file <f>")), ToolInput(tag="in_seq_k", input_type=String(optional=True), prefix="--seq-k", doc=InputDocumentation(doc=": remove all seqs *except* those listed in <f>")), ToolInput(tag="in_small", input_type=Boolean(optional=True), prefix="--small", doc=InputDocumentation(doc=": w/--seq-r or --seq-k use minimal RAM (no seq reordering)")), ToolInput(tag="in_k_reorder", input_type=Boolean(optional=True), prefix="--k-reorder", doc=InputDocumentation(doc=": with --seq-k <f>, reorder sequences to order in <f>")), ToolInput(tag="in_seq_ins", input_type=String(optional=True), prefix="--seq-ins", doc=InputDocumentation(doc=": keep only seqs w/an insert after nongap RF col <n>")), ToolInput(tag="in_seq_ni", input_type=Int(optional=True), prefix="--seq-ni", doc=InputDocumentation(doc=": w/--seq-ins require at least <n> residue insertions  [1]")), ToolInput(tag="in_seq_xi", input_type=Int(optional=True), prefix="--seq-xi", doc=InputDocumentation(doc=": w/--seq-ins require at most  <n> residue insertions  [1000000]")), ToolInput(tag="in_trim", input_type=String(optional=True), prefix="--trim", doc=InputDocumentation(doc=": trim aligned seqs in <msafile> to subseqs in <f>")), ToolInput(tag="in_t_keep_rf", input_type=Boolean(optional=True), prefix="--t-keeprf", doc=InputDocumentation(doc=": w/--trim keep GC RF annotation in msa, if it exists")), ToolInput(tag="in_min_pp", input_type=String(optional=True), prefix="--minpp", doc=InputDocumentation(doc=": replace residues with posterior probabilities < <x> with gaps")), ToolInput(tag="in_tree", input_type=String(optional=True), prefix="--tree", doc=InputDocumentation(doc=": reorder MSA to tree order following SLC, save Newick tree to <f>")), ToolInput(tag="in_reorder", input_type=String(optional=True), prefix="--reorder", doc=InputDocumentation(doc=": reorder seqs to the order listed in <f>, all seqs must be listed")), ToolInput(tag="in_mask_two_rf", input_type=Int(optional=True), prefix="--mask2rf", doc=InputDocumentation(doc=": set #=GC RF as x=1, gap=0 from 1/0s in 1-line <f>")), ToolInput(tag="in_m_keep_rf", input_type=Boolean(optional=True), prefix="--m-keeprf", doc=InputDocumentation(doc=": with --mask2rf, do not overwrite nongap RF characters with 'x'")), ToolInput(tag="in_num_all", input_type=Boolean(optional=True), prefix="--num-all", doc=InputDocumentation(doc=": add annotation numbering all columns")), ToolInput(tag="in_num_rf", input_type=Boolean(optional=True), prefix="--num-rf", doc=InputDocumentation(doc=": add annotation numbering the nongap RF columns")), ToolInput(tag="in_rm_gc", input_type=String(optional=True), prefix="--rm-gc", doc=InputDocumentation(doc=": remove GC <s> markup, <s> must be RF|SS_cons|SA_cons|PP_cons")), ToolInput(tag="in_sindi", input_type=Boolean(optional=True), prefix="--sindi", doc=InputDocumentation(doc=": annotate individual secondary structures by imposing consensus")), ToolInput(tag="in_post_two_pp", input_type=Boolean(optional=True), prefix="--post2pp", doc=InputDocumentation(doc=": convert infernal 0.72-1.0.2 POST posterior prob annotation to PP")), ToolInput(tag="in_amino", input_type=Boolean(optional=True), prefix="--amino", doc=InputDocumentation(doc=": <msafile> contains protein alignments")), ToolInput(tag="in_dna", input_type=Boolean(optional=True), prefix="--dna", doc=InputDocumentation(doc=": <msafile> contains DNA alignments")), ToolInput(tag="in_rna", input_type=Boolean(optional=True), prefix="--rna", doc=InputDocumentation(doc=": <msafile> contains RNA alignments")), ToolInput(tag="in_msa_file", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output_alignment_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_alignment_file", type_hint=File()), doc=OutputDocumentation(doc=": output the alignment to file <f>, not stdout"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Esl_Alimanip_V0_1_0().translate("wdl", allow_empty_container=True)

