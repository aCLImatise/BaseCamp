from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, File, Boolean, String

Halbranchmutations_V0_1_0 = CommandToolBuilder(tool="halBranchMutations", base_command=["halBranchMutations"], inputs=[ToolInput(tag="in_cache_bytes", input_type=Int(optional=True), prefix="--cacheBytes", doc=InputDocumentation(doc=":     maximum size in bytes of regular hdf5 cache [default =\n15728640]")), ToolInput(tag="in_cache_mdc", input_type=Int(optional=True), prefix="--cacheMDC", doc=InputDocumentation(doc=":       number of metadata slots in hdf5 cache [default = 113]")), ToolInput(tag="in_cacher_dc", input_type=Int(optional=True), prefix="--cacheRDC", doc=InputDocumentation(doc=":       number of regular slots in hdf5 cache.  should be a prime\nnumber ~= 10 * DefaultCacheRDCBytes / chunk [default =\n599999]")), ToolInput(tag="in_cache_w_zero", input_type=Int(optional=True), prefix="--cacheW0", doc=InputDocumentation(doc=":        w0 parameter fro hdf5 cache [default = 0.75]")), ToolInput(tag="in_del_break_file", input_type=File(optional=True), prefix="--delBreakFile", doc=InputDocumentation(doc=":   bed file write deletion breakpoints to in reference genome\ncoordinates (or stdout) [default = '']")), ToolInput(tag="in_in_memory", input_type=Boolean(optional=True), prefix="--inMemory", doc=InputDocumentation(doc=":               load all data in memory (and disable hdf5 cache) [default =\n0]")), ToolInput(tag="in_length", input_type=Int(optional=True), prefix="--length", doc=InputDocumentation(doc=":         length of the reference genome (or sequence if specified)\nto convert.  If set to 0, the entire thing is converted\n[default = 0]")), ToolInput(tag="in_max_gap", input_type=Int(optional=True), prefix="--maxGap", doc=InputDocumentation(doc=":         maximum indel length to be considered a gap.  Gaps  can be\nnested within other rearrangements. [default = 20]")), ToolInput(tag="in_max_n_fraction", input_type=Int(optional=True), prefix="--maxNFraction", doc=InputDocumentation(doc=":   maximum fraction of Ns in a rearranged segment for it to\nnot be ignored as missing data. [default = 1]")), ToolInput(tag="in_parent_file", input_type=File(optional=True), prefix="--parentFile", doc=InputDocumentation(doc=":     bed file to write rearrangements (deletions and\nduplications) in reference's parent genome coordinates (or\nstdout) [default = '']")), ToolInput(tag="in_ref_file", input_type=File(optional=True), prefix="--refFile", doc=InputDocumentation(doc=":        bed file to write structural rearrangements in reference\ngenome coordinates (or stdout) [default = '']")), ToolInput(tag="in_ref_sequence", input_type=String(optional=True), prefix="--refSequence", doc=InputDocumentation(doc=":    name of reference sequence within reference genome (all\nsequences if empty) [default = '']")), ToolInput(tag="in_ref_targets", input_type=File(optional=True), prefix="--refTargets", doc=InputDocumentation(doc=":     bed file coordinates of intervals in the reference genome\nto analyze [default = '']")), ToolInput(tag="in_snp_file", input_type=File(optional=True), prefix="--snpFile", doc=InputDocumentation(doc=":        bed file write point mutations to in reference genome\ncoordinates (or stdout) [default = '']")), ToolInput(tag="in_start", input_type=Int(optional=True), prefix="--start", doc=InputDocumentation(doc=":          coordinate within reference genome (or sequence if\nspecified) to start at [default = 0]\n")), ToolInput(tag="in_parent_dot", input_type=String(), position=0, doc=InputDocumentation(doc="USAGE:"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Halbranchmutations_V0_1_0().translate("wdl", allow_empty_container=True)

