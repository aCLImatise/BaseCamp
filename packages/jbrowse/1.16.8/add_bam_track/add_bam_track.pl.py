from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Boolean

Add_Bam_Track_Pl_V0_1_0 = CommandToolBuilder(tool="add_bam_track.pl", base_command=["add-bam-track.pl"], inputs=[ToolInput(tag="in_label", input_type=String(optional=True), prefix="--label", doc=InputDocumentation(doc="\")), ToolInput(tag="in_bam_url", input_type=File(optional=True), prefix="--bam_url", doc=InputDocumentation(doc="\")), ToolInput(tag="in_in", input_type=File(optional=True), prefix="--in", doc=InputDocumentation(doc="input trackList.json file. Default: data/trackList.json.")), ToolInput(tag="in_out", input_type=File(optional=True), prefix="--out", doc=InputDocumentation(doc="Output trackList.json file. Default: data/trackList.json.")), ToolInput(tag="in_key", input_type=String(optional=True), prefix="--key", doc=InputDocumentation(doc="key (display name) for track [default: label value]")), ToolInput(tag="in_classname", input_type=String(optional=True), prefix="--classname", doc=InputDocumentation(doc="CSS class for display [default: bam]")), ToolInput(tag="in_bigwig_coverage", input_type=File(optional=True), prefix="--bigwigCoverage", doc=InputDocumentation(doc="URL to BW file correlated to BAM file. Display coverage depth when\nzoomed out.")), ToolInput(tag="in_coverage", input_type=Boolean(optional=True), prefix="--coverage", doc=InputDocumentation(doc="display coverage data instead of alignments")), ToolInput(tag="in_min_score", input_type=String(optional=True), prefix="--min_score", doc=InputDocumentation(doc="optional minimum score to use for generating coverage plot (only\napplicable with --coverage option)")), ToolInput(tag="in_max_score", input_type=String(optional=True), prefix="--max_score", doc=InputDocumentation(doc="optional maximum score to use for generating coverage plot (only\napplicable with --coverage option)")), ToolInput(tag="in_config", input_type=Boolean(optional=True), prefix="--config", doc=InputDocumentation(doc="'{ 'my_key': 'my_value', ... }'\noptional additional data to include in the track configuration. Any\nvalues provided here will override the values generated by the rest\nof the script.\n")), ToolInput(tag="in_add_bam_track_do_tpl", input_type=String(), position=0, doc=InputDocumentation(doc="[ --in <input_trackList.json>  ]       \\n[ --out <output_trackList.json>        \"))], outputs=[ToolOutput(tag="out_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out", type_hint=File()), doc=OutputDocumentation(doc="Output trackList.json file. Default: data/trackList.json.")), ToolOutput(tag="out_bigwig_coverage", output_type=File(optional=True), selector=InputSelector(input_to_select="in_bigwig_coverage", type_hint=File()), doc=OutputDocumentation(doc="URL to BW file correlated to BAM file. Display coverage depth when\nzoomed out."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Add_Bam_Track_Pl_V0_1_0().translate("wdl", allow_empty_container=True)

