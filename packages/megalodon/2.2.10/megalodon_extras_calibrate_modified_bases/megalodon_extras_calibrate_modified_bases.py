from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Int, Float, File, Boolean

Megalodon_Extras_Calibrate_Modified_Bases_V0_1_0 = CommandToolBuilder(tool="megalodon_extras_calibrate_modified_bases", base_command=["megalodon_extras", "calibrate", "modified_bases"], inputs=[ToolInput(tag="in_ground_truth_ll_rs", input_type=String(optional=True), prefix="--ground-truth-llrs", doc=InputDocumentation(doc="Ground truth log-likelihood ratio statistics (produced\nby `megalodon_extras calibrate\ngenerate_modified_base_stats`). Default:\nmod_calibration_statistics.npz")), ToolInput(tag="in_max_input_llr", input_type=Int(optional=True), prefix="--max-input-llr", doc=InputDocumentation(doc="Maximum log-likelihood ratio to compute calibration.\nDefault: 200")), ToolInput(tag="in_num_calibration_values", input_type=Int(optional=True), prefix="--num-calibration-values", doc=InputDocumentation(doc="Number of discrete calibration values to compute.\nDefault: 5001")), ToolInput(tag="in_smooth_bandwidth", input_type=Float(optional=True), prefix="--smooth-bandwidth", doc=InputDocumentation(doc="Smoothing bandwidth. Default: 0.800000")), ToolInput(tag="in_min_density", input_type=Int(optional=True), prefix="--min-density", doc=InputDocumentation(doc="Minimum density value to compute calibration. This\nvalue dynamically adjusts [--max-input-llr] when it is\ntoo large. Default: 0.000000")), ToolInput(tag="in_diff_epsilon", input_type=Float(optional=True), prefix="--diff-epsilon", doc=InputDocumentation(doc="Epsilon to determine when the likelihood ratio has\nplateaued. Default: 0.000001")), ToolInput(tag="in_llr_clip_buffer", input_type=Int(optional=True), prefix="--llr-clip-buffer", doc=InputDocumentation(doc="Clipped buffer when determining range for computed\ncalibration log likelihood ratios. Default: 1")), ToolInput(tag="in_out_filename", input_type=File(optional=True), prefix="--out-filename", doc=InputDocumentation(doc="Filename to output calibration values. Default:\nmegalodon_mod_calibration.npz")), ToolInput(tag="in_out_pdf", input_type=File(optional=True), prefix="--out-pdf", doc=InputDocumentation(doc="Output pdf filename for modified base calibration\nvisualization. Default: Do not produce plot.")), ToolInput(tag="in_pdf_prob_thresholds", input_type=Float(optional=True), prefix="--pdf-prob-thresholds", doc=InputDocumentation(doc="PDF_PROB_THRESHOLDS PDF_PROB_THRESHOLDS\nProbability thresholds to mark on output pdf. Default:\n[0.75, 0.8, 0.85]")), ToolInput(tag="in_plot_without_prob_thresholds", input_type=Boolean(optional=True), prefix="--plot-without-prob-thresholds", doc=InputDocumentation(doc="Do not include probability thresholds in plot(s).")), ToolInput(tag="in_processes", input_type=Int(optional=True), prefix="--processes", doc=InputDocumentation(doc="Number of processing cores to use for density\nsmoothing computation. Default: 1")), ToolInput(tag="in_overwrite", input_type=File(optional=True), prefix="--overwrite", doc=InputDocumentation(doc="Overwrite --out-filename if it exists."))], outputs=[ToolOutput(tag="out_out_filename", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_filename", type_hint=File()), doc=OutputDocumentation(doc="Filename to output calibration values. Default:\nmegalodon_mod_calibration.npz")), ToolOutput(tag="out_out_pdf", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_pdf", type_hint=File()), doc=OutputDocumentation(doc="Output pdf filename for modified base calibration\nvisualization. Default: Do not produce plot.")), ToolOutput(tag="out_overwrite", output_type=File(optional=True), selector=InputSelector(input_to_select="in_overwrite", type_hint=File()), doc=OutputDocumentation(doc="Overwrite --out-filename if it exists."))], container="quay.io/biocontainers/megalodon:2.2.10--py38h0213d0e_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Megalodon_Extras_Calibrate_Modified_Bases_V0_1_0().translate("wdl")

