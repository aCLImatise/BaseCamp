from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, String, Array, File

Megalodon_Extras_Modified_Bases_Per_Site_Thresholds_V0_1_0 = CommandToolBuilder(tool="megalodon_extras_modified_bases_per_site_thresholds", base_command=["megalodon_extras", "modified_bases", "per_site_thresholds"], inputs=[ToolInput(tag="in_ground_truth_cov_min", input_type=Int(optional=True), prefix="--ground-truth-cov-min", doc=InputDocumentation(doc="Minimum coverage (both strands) to include a site from\nground truth data. Default: 15")), ToolInput(tag="in_nano_pore_cov_min", input_type=Int(optional=True), prefix="--nanopore-cov-min", doc=InputDocumentation(doc="Minimum coverage (single strand) to include a site\nfrom nanopore data. Default: 30")), ToolInput(tag="in_mod_bases", input_type=String(optional=True), prefix="--mod-bases", doc=InputDocumentation(doc="Single letter codes for the modified base. For\nmulitple alternative bases supply all single letter\ncodes with no spaces. Default: m")), ToolInput(tag="in_strand_offset", input_type=String(optional=True), prefix="--strand-offset", doc=InputDocumentation(doc="Offset to combine stranded results. Positive value\nindicates reverse strand sites have higher position\nvalues. Default treat strands independently.")), ToolInput(tag="in_valid_sites", input_type=Array(t=String(), optional=True), prefix="--valid-sites", doc=InputDocumentation(doc="BED files containing sites over which to restrict\nmodified base results. Useful when processing full\nresults using a subset of the ground truth (e.g. CG\nand CH processing). Must be sorted in same order as\n[ground_truth_bed] (`sort -k1V -k2n`)")), ToolInput(tag="in_out_low_coverage_sites", input_type=File(optional=True), prefix="--out-low-coverage-sites", doc=InputDocumentation(doc="Output filename for sites with low ground truth or\nnanopore coverage. Default: low_coverage_sites.bed")), ToolInput(tag="in_out_per_site_mod_thresholds", input_type=File(optional=True), prefix="--out-per-site-mod-thresholds", doc=InputDocumentation(doc="Output filename for per-site megalodon mod scoring\nthresholds. Default: site_mod_thresholds.bed")), ToolInput(tag="in_log_filename", input_type=File(optional=True), prefix="--log-filename", doc=InputDocumentation(doc="Output filename for logging. Default:\nper_site_thresholds.log")), ToolInput(tag="in_batch_size", input_type=Int(optional=True), prefix="--batch-size", doc=InputDocumentation(doc="Number of sites to include in each batch for\nprocessing. Default: 100000")), ToolInput(tag="in_processes", input_type=Int(optional=True), prefix="--processes", doc=InputDocumentation(doc="Number of processes. Default: 1\n")), ToolInput(tag="in_output_dot", input_type=String(), position=1, doc=InputDocumentation(doc="ground_truth_bed      BEDmethyl file containing ground truth fraction"))], outputs=[ToolOutput(tag="out_out_low_coverage_sites", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_low_coverage_sites", type_hint=File()), doc=OutputDocumentation(doc="Output filename for sites with low ground truth or\nnanopore coverage. Default: low_coverage_sites.bed")), ToolOutput(tag="out_out_per_site_mod_thresholds", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_per_site_mod_thresholds", type_hint=File()), doc=OutputDocumentation(doc="Output filename for per-site megalodon mod scoring\nthresholds. Default: site_mod_thresholds.bed")), ToolOutput(tag="out_log_filename", output_type=File(optional=True), selector=InputSelector(input_to_select="in_log_filename", type_hint=File()), doc=OutputDocumentation(doc="Output filename for logging. Default:\nper_site_thresholds.log"))], container="quay.io/biocontainers/megalodon:2.3.0--py38h0213d0e_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Megalodon_Extras_Modified_Bases_Per_Site_Thresholds_V0_1_0().translate("wdl")

