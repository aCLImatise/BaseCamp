from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Int, Boolean, File

Hapflk_V0_1_0 = CommandToolBuilder(tool="hapflk", base_command=["hapflk"], inputs=[ToolInput(tag="in_prefix", input_type=String(optional=True), prefix="--prefix", doc=InputDocumentation(doc="prefix for output files (default: hapflk)")), ToolInput(tag="in_n_cpu", input_type=Int(optional=True), prefix="--ncpu", doc=InputDocumentation(doc="Use N processors when possible (default: 1)")), ToolInput(tag="in_eigen", input_type=Boolean(optional=True), prefix="--eigen", doc=InputDocumentation(doc="Perform eigen decomposition of tests (default: False)")), ToolInput(tag="in_ped", input_type=File(optional=True), prefix="--ped", doc=InputDocumentation(doc="PED file (default: None)")), ToolInput(tag="in_map", input_type=File(optional=True), prefix="--map", doc=InputDocumentation(doc="MAP file (default: None)")), ToolInput(tag="in_file", input_type=File(optional=True), prefix="--file", doc=InputDocumentation(doc="PLINK file prefix (ped,map) (default: None)")), ToolInput(tag="in_b_file", input_type=String(optional=True), prefix="--bfile", doc=InputDocumentation(doc="PLINK bfile prefix (bim,fam,bed) (default: None)")), ToolInput(tag="in_miss_geno", input_type=Int(optional=True), prefix="--miss_geno", doc=InputDocumentation(doc="Missing Genotype Code (default: 0)")), ToolInput(tag="in_miss_pheno", input_type=Int(optional=True), prefix="--miss_pheno", doc=InputDocumentation(doc="Missing Phenotype Code (default: -9)")), ToolInput(tag="in_miss_parent", input_type=Int(optional=True), prefix="--miss_parent", doc=InputDocumentation(doc="Missing Parent Code (default: 0)")), ToolInput(tag="in_miss_sex", input_type=Int(optional=True), prefix="--miss_sex", doc=InputDocumentation(doc="Missing Sex Code (default: 0)")), ToolInput(tag="in_chr", input_type=String(optional=True), prefix="--chr", doc=InputDocumentation(doc="Select chromosome C (default: None)")), ToolInput(tag="in_from", input_type=Int(optional=True), prefix="--from", doc=InputDocumentation(doc="Select SNPs with position > x (in bp/cM) Warning :\ndoes not work with BED files (default: 0)")), ToolInput(tag="in_to", input_type=String(optional=True), prefix="--to", doc=InputDocumentation(doc="Select SNPs with position < x (in bp/cM) Warning :\ndoes not work with BED files (default: inf)")), ToolInput(tag="in_other_map", input_type=Boolean(optional=True), prefix="--other_map", doc=InputDocumentation(doc="Use alternative map (genetic/RH) (default: False)")), ToolInput(tag="in_kinship", input_type=File(optional=True), prefix="--kinship", doc=InputDocumentation(doc="Read population kinship from file (if None, kinship is\nestimated) (default: None)")), ToolInput(tag="in_reynolds_snps", input_type=Int(optional=True), prefix="--reynolds-snps", doc=InputDocumentation(doc="Number of SNPs to use to estimate Reynolds distances\n(default: 10000)")), ToolInput(tag="in_out_group", input_type=String(optional=True), prefix="--outgroup", doc=InputDocumentation(doc="Use population POP as outgroup for tree rooting (if\nNone, use midpoint rooting) (default: None)")), ToolInput(tag="in_keep_out_group", input_type=Boolean(optional=True), prefix="--keep-outgroup", doc=InputDocumentation(doc="Keep outgroup in population set (default: False)")), ToolInput(tag="in_set_number_clusters", input_type=Int(optional=True), prefix="-K", doc=InputDocumentation(doc="Set the number of clusters to K. hapFLK calculations\nswitched off if K<0 (default: -1)")), ToolInput(tag="in_n_fit", input_type=Int(optional=True), prefix="--nfit", doc=InputDocumentation(doc="Set the number of model fit to use (default: 20)")), ToolInput(tag="in_phased", input_type=Boolean(optional=True), prefix="--phased", doc=InputDocumentation(doc="Haplotype data provided (default: False)")), ToolInput(tag="in_no_k_frq", input_type=Boolean(optional=True), prefix="--no-kfrq", doc=InputDocumentation(doc="Do not write Cluster frequencies (default: False)"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Hapflk_V0_1_0().translate("wdl", allow_empty_container=True)

