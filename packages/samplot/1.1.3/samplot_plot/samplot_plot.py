from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Array, String, File, Int, Directory, Boolean

Samplot_Plot_V0_1_0 = CommandToolBuilder(tool="samplot_plot", base_command=["samplot", "plot"], inputs=[ToolInput(tag="in_titles", input_type=Array(t=String(), optional=True), prefix="--titles", doc=InputDocumentation(doc="Space-delimited list of plot titles. Use quote marks\nto include spaces (i.e. 'plot 1' 'plot 2')")), ToolInput(tag="in_reference", input_type=File(optional=True), prefix="--reference", doc=InputDocumentation(doc="Reference file for CRAM, required if CRAM files used")), ToolInput(tag="in_number_stdevs_mean", input_type=Int(optional=True), prefix="--z", doc=InputDocumentation(doc="Number of stdevs from the mean (default 4)")), ToolInput(tag="in_bams", input_type=Array(t=String(), optional=True), prefix="--bams", doc=InputDocumentation(doc="Space-delimited list of BAM/CRAM file names")), ToolInput(tag="in_output_file", input_type=File(optional=True), prefix="--output_file", doc=InputDocumentation(doc="Output file name/type. Defaults to\n{type}_{chrom}_{start}_{end}.png")), ToolInput(tag="in_output_dir", input_type=Directory(optional=True), prefix="--output_dir", doc=InputDocumentation(doc="Output directory name. Defaults to working dir.\nIgnored if --output_file is set")), ToolInput(tag="in_start", input_type=String(optional=True), prefix="--start", doc=InputDocumentation(doc="Start position of region/variant (add multiple for\ntranslocation/BND events)")), ToolInput(tag="in_end", input_type=String(optional=True), prefix="--end", doc=InputDocumentation(doc="End position of region/variant (add multiple for\ntranslocation/BND events)")), ToolInput(tag="in_chrom", input_type=String(optional=True), prefix="--chrom", doc=InputDocumentation(doc="Chromosome (add multiple for translocation/BND events)")), ToolInput(tag="in_window", input_type=Int(optional=True), prefix="--window", doc=InputDocumentation(doc="Window size (count of bases to include in view),\ndefault(0.5 * len)")), ToolInput(tag="in_max_depth", input_type=Int(optional=True), prefix="--max_depth", doc=InputDocumentation(doc="Max number of normal pairs to plot")), ToolInput(tag="in_sv_type", input_type=String(optional=True), prefix="--sv_type", doc=InputDocumentation(doc="SV type. If omitted, plot is created without variant\nbar")), ToolInput(tag="in_transcript_file", input_type=File(optional=True), prefix="--transcript_file", doc=InputDocumentation(doc="GFF3 of transcripts")), ToolInput(tag="in_transcript_filename", input_type=File(optional=True), prefix="--transcript_filename", doc=InputDocumentation(doc="Name for transcript track")), ToolInput(tag="in_max_coverage_points", input_type=Int(optional=True), prefix="--max_coverage_points", doc=InputDocumentation(doc="number of points to plot in coverage axis (downsampled\nfrom region size for speed)")), ToolInput(tag="in_annotation_files", input_type=Array(t=String(), optional=True), prefix="--annotation_files", doc=InputDocumentation(doc="Space-delimited list of bed.gz tabixed files of\nannotations (such as repeats, mappability, etc.)")), ToolInput(tag="in_annotation_filenames", input_type=Array(t=String(), optional=True), prefix="--annotation_filenames", doc=InputDocumentation(doc="Space-delimited list of names for the tracks in\n--annotation_files")), ToolInput(tag="in_coverage_track_type", input_type=String(optional=True), prefix="--coverage_tracktype", doc=InputDocumentation(doc="type of track to use for low MAPQ coverage plot.")), ToolInput(tag="in_print_args", input_type=Boolean(optional=True), prefix="--print_args", doc=InputDocumentation(doc="Print commandline arguments")), ToolInput(tag="in_plot_height", input_type=String(optional=True), prefix="--plot_height", doc=InputDocumentation(doc="Plot height")), ToolInput(tag="in_plot_width", input_type=String(optional=True), prefix="--plot_width", doc=InputDocumentation(doc="Plot width")), ToolInput(tag="in_include_m_qual", input_type=Int(optional=True), prefix="--include_mqual", doc=InputDocumentation(doc="Min mapping quality of reads to be included in plot\n(default 1)")), ToolInput(tag="in_separate_m_qual", input_type=String(optional=True), prefix="--separate_mqual", doc=InputDocumentation(doc="coverage from reads with MAPQ <= separate_mqual\nplotted in lighter grey. To disable, pass in negative\nvalue")), ToolInput(tag="in_json_only", input_type=Boolean(optional=True), prefix="--json_only", doc=InputDocumentation(doc="Create only the json file, not the image plot")), ToolInput(tag="in_start_ci", input_type=Int(optional=True), prefix="--start_ci", doc=InputDocumentation(doc="confidence intervals of SV first breakpoint (distance\nfrom the breakpoint). Must be a comma-separated pair\nof ints (i.e. 20,40)")), ToolInput(tag="in_end_ci", input_type=Int(optional=True), prefix="--end_ci", doc=InputDocumentation(doc="confidence intervals of SV end breakpoint (distance\nfrom the breakpoint). Must be a comma-separated pair\nof ints (i.e. 20,40)")), ToolInput(tag="in_long_read", input_type=Int(optional=True), prefix="--long_read", doc=InputDocumentation(doc="Min length of a read to be treated as a long-read\n(default 1000)")), ToolInput(tag="in_ignore_hp", input_type=Boolean(optional=True), prefix="--ignore_hp", doc=InputDocumentation(doc="Choose to ignore HP tag in alignment files")), ToolInput(tag="in_min_event_size", input_type=Int(optional=True), prefix="--min_event_size", doc=InputDocumentation(doc="Min size of an event in long-read CIGAR to include\n(default 20)")), ToolInput(tag="in_x_axis_label_font_size", input_type=Int(optional=True), prefix="--xaxis_label_fontsize", doc=InputDocumentation(doc="Font size for X-axis labels (default 6)")), ToolInput(tag="in_yaxis_label_font_size", input_type=Int(optional=True), prefix="--yaxis_label_fontsize", doc=InputDocumentation(doc="Font size for Y-axis labels (default 6)")), ToolInput(tag="in_legend_font_size", input_type=Int(optional=True), prefix="--legend_fontsize", doc=InputDocumentation(doc="Font size for legend labels (default 6)")), ToolInput(tag="in_annotation_font_size", input_type=Int(optional=True), prefix="--annotation_fontsize", doc=InputDocumentation(doc="Font size for annotation labels (default 6)")), ToolInput(tag="in_common_insert_size", input_type=Boolean(optional=True), prefix="--common_insert_size", doc=InputDocumentation(doc="Set common insert size for all plots")), ToolInput(tag="in_hide_annotation_labels", input_type=Boolean(optional=True), prefix="--hide_annotation_labels", doc=InputDocumentation(doc="Hide the label (fourth column text) from annotation\nfiles, useful for regions with many annotations")), ToolInput(tag="in_coverage_only", input_type=Boolean(optional=True), prefix="--coverage_only", doc=InputDocumentation(doc="Hide all reads and show only coverage")), ToolInput(tag="in_max_coverage", input_type=Int(optional=True), prefix="--max_coverage", doc=InputDocumentation(doc="apply a maximum coverage cutoff. Unlimited by default")), ToolInput(tag="in_same_yaxis_scales", input_type=Boolean(optional=True), prefix="--same_yaxis_scales", doc=InputDocumentation(doc="Set the scales of the Y axes to the max of all")), ToolInput(tag="in_marker_size", input_type=Int(optional=True), prefix="--marker_size", doc=InputDocumentation(doc="Size of marks on pairs and splits (default 3)")), ToolInput(tag="in_dpi", input_type=Int(optional=True), prefix="--dpi", doc=InputDocumentation(doc="Dots per inches (pixel count, default 300)")), ToolInput(tag="in_zoom", input_type=Int(optional=True), prefix="--zoom", doc=InputDocumentation(doc="Only show +- zoom amount around breakpoints, much\nfaster for large regions. Ignored if region smaller\nthan --zoom (default 500000)")), ToolInput(tag="in_debug", input_type=String(optional=True), prefix="--debug", doc=InputDocumentation(doc="Print debug statements"))], outputs=[ToolOutput(tag="out_output_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_file", type_hint=File()), doc=OutputDocumentation(doc="Output file name/type. Defaults to\n{type}_{chrom}_{start}_{end}.png")), ToolOutput(tag="out_output_dir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output_dir", type_hint=File()), doc=OutputDocumentation(doc="Output directory name. Defaults to working dir.\nIgnored if --output_file is set"))], container="quay.io/biocontainers/samplot:1.1.3--pyh3252c3a_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Samplot_Plot_V0_1_0().translate("wdl")

