from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Int, Boolean

Hsp_Py_V0_1_0 = CommandToolBuilder(tool="hsp.py", base_command=["hsp.py"], inputs=[ToolInput(tag="in_tree", input_type=File(optional=True), prefix="--tree", doc=InputDocumentation(doc="The full reference tree in newick format containing\nboth study sequences (i.e. ASVs or OTUs) and reference\nsequences.")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="Output table with predicted abundances per study\nsequence in input tree. If the extension '.gz' is\nadded the table will automatically be gzipped.")), ToolInput(tag="in_in_trait", input_type=String(optional=True), prefix="--in_trait", doc=InputDocumentation(doc="Specifies which default trait table should be used.\nUse the --observed_trait_table option to input a non-\ndefault trait table.")), ToolInput(tag="in_observed_trait_table", input_type=File(optional=True), prefix="--observed_trait_table", doc=InputDocumentation(doc="The input trait table describing directly observed\ntraits (e.g. sequenced genomes) in tab-delimited\nformat. Necessary if you want to use a custom table.")), ToolInput(tag="in_edge_exponent", input_type=Int(optional=True), prefix="--edge_exponent", doc=InputDocumentation(doc="Setting for maximum parisomony hidden-state\nprediction. Specifies weighting transition costs by\nthe inverse length of edge lengths. If 0, then edge\nlengths do not influence predictions. Must be a non-\nnegative real-valued number (default: 0).")), ToolInput(tag="in_chunk_size", input_type=Int(optional=True), prefix="--chunk_size", doc=InputDocumentation(doc="Number of functions to run at a time on one processor.\nNote that you should consider how many processes you\nhave specified before changing this option. E.g. if\nyou specify the chunk_size to be the total number of\nfunctions, 1 processor will be used even if you\nspecified more so the job will be substantially slower\n(default: 500).")), ToolInput(tag="in_hsp_method", input_type=String(optional=True), prefix="--hsp_method", doc=InputDocumentation(doc="HSP method to use.'mp': predict discrete traits using\nmax parsimony. 'emp_prob': predict discrete traits\nbased on empirical state probabilities across tips.\n'subtree_average': predict continuous traits using\nsubtree averaging. 'pic': predict continuous traits\nwith phylogentic independent contrast. 'scp':\nreconstruct continuous traits using squared-change\nparsimony (default: mp).")), ToolInput(tag="in_calculate_nsti", input_type=File(optional=True), prefix="--calculate_NSTI", doc=InputDocumentation(doc="Calculate NSTI and add to output file.")), ToolInput(tag="in_check", input_type=Boolean(optional=True), prefix="--check", doc=InputDocumentation(doc="Check input trait table before HSP.")), ToolInput(tag="in_processes", input_type=Int(optional=True), prefix="--processes", doc=InputDocumentation(doc="Number of processes to run in parallel (default: 1).")), ToolInput(tag="in_seed", input_type=Int(optional=True), prefix="--seed", doc=InputDocumentation(doc="Seed to make output reproducible, which is necessary\nfor the emp_prob method (default: 100).")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="If specified, print out wrapped commands and other\ndetails to screen."))], outputs=[ToolOutput(tag="out_calculate_nsti", output_type=File(optional=True), selector=InputSelector(input_to_select="in_calculate_nsti", type_hint=File()), doc=OutputDocumentation(doc="Calculate NSTI and add to output file."))], container="quay.io/biocontainers/picrust2:2.4.1--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Hsp_Py_V0_1_0().translate("wdl")

