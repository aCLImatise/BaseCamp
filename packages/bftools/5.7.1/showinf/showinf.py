from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean

Showinf_V0_1_0 = CommandToolBuilder(tool="showinf", base_command=["showinf"], inputs=[ToolInput(tag="in_version", input_type=Boolean(optional=True), prefix="-version", doc=InputDocumentation(doc=": print the library version and exit\nfile: the image file to read")), ToolInput(tag="in_no_pix", input_type=Boolean(optional=True), prefix="-nopix", doc=InputDocumentation(doc=": read metadata only, not pixels")), ToolInput(tag="in_no_core", input_type=Boolean(optional=True), prefix="-nocore", doc=InputDocumentation(doc=": do not output core metadata")), ToolInput(tag="in_no_meta", input_type=Boolean(optional=True), prefix="-nometa", doc=InputDocumentation(doc=": do not parse format-specific metadata table")), ToolInput(tag="in_no_filter", input_type=Boolean(optional=True), prefix="-nofilter", doc=InputDocumentation(doc=": do not filter metadata fields")), ToolInput(tag="in_thumbs", input_type=Boolean(optional=True), prefix="-thumbs", doc=InputDocumentation(doc=": read thumbnails instead of normal pixels")), ToolInput(tag="in_minmax", input_type=Boolean(optional=True), prefix="-minmax", doc=InputDocumentation(doc=": compute min/max statistics")), ToolInput(tag="in_merge", input_type=Boolean(optional=True), prefix="-merge", doc=InputDocumentation(doc=": combine separate channels into RGB image")), ToolInput(tag="in_nogroup", input_type=Boolean(optional=True), prefix="-nogroup", doc=InputDocumentation(doc=": force multi-file datasets to be read as individual files")), ToolInput(tag="in_stitch", input_type=Boolean(optional=True), prefix="-stitch", doc=InputDocumentation(doc=": stitch files with similar names")), ToolInput(tag="in_separate", input_type=Boolean(optional=True), prefix="-separate", doc=InputDocumentation(doc=": split RGB image into separate channels")), ToolInput(tag="in_expand", input_type=Boolean(optional=True), prefix="-expand", doc=InputDocumentation(doc=": expand indexed color to RGB")), ToolInput(tag="in_ome_xml", input_type=Boolean(optional=True), prefix="-omexml", doc=InputDocumentation(doc=": populate OME-XML metadata")), ToolInput(tag="in_normalize", input_type=Boolean(optional=True), prefix="-normalize", doc=InputDocumentation(doc=": normalize floating point images (*)")), ToolInput(tag="in_fast", input_type=Boolean(optional=True), prefix="-fast", doc=InputDocumentation(doc=": paint RGB images as quickly as possible (*)")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="-debug", doc=InputDocumentation(doc=": turn on debugging output")), ToolInput(tag="in_range", input_type=Boolean(optional=True), prefix="-range", doc=InputDocumentation(doc=": specify range of planes to read (inclusive)")), ToolInput(tag="in_series", input_type=Boolean(optional=True), prefix="-series", doc=InputDocumentation(doc=": specify which image series to read")), ToolInput(tag="in_no_flat", input_type=Boolean(optional=True), prefix="-noflat", doc=InputDocumentation(doc=": do not flatten subresolutions")), ToolInput(tag="in_resolution", input_type=Boolean(optional=True), prefix="-resolution", doc=InputDocumentation(doc=": used in combination with -noflat to specify which\nsubresolution to read (for images with subresolutions)")), ToolInput(tag="in_swap", input_type=Boolean(optional=True), prefix="-swap", doc=InputDocumentation(doc=": override the default input dimension order")), ToolInput(tag="in_shuffle", input_type=Boolean(optional=True), prefix="-shuffle", doc=InputDocumentation(doc=": override the default output dimension order")), ToolInput(tag="in_map", input_type=Boolean(optional=True), prefix="-map", doc=InputDocumentation(doc=": specify file on disk to which name should be mapped")), ToolInput(tag="in_preload", input_type=Boolean(optional=True), prefix="-preload", doc=InputDocumentation(doc=": pre-read entire file into a buffer; significantly\nreduces the time required to read the images, but\nrequires more memory")), ToolInput(tag="in_crop", input_type=Boolean(optional=True), prefix="-crop", doc=InputDocumentation(doc=": crop images before displaying; argument is 'x,y,w,h'")), ToolInput(tag="in_autoscale", input_type=Boolean(optional=True), prefix="-autoscale", doc=InputDocumentation(doc=": automatically adjust brightness and contrast (*)")), ToolInput(tag="in_no_valid", input_type=Boolean(optional=True), prefix="-novalid", doc=InputDocumentation(doc=": do not perform validation of OME-XML")), ToolInput(tag="in_ome_xml_only", input_type=Boolean(optional=True), prefix="-omexml-only", doc=InputDocumentation(doc=": only output the generated OME-XML\n-no-sas: do not output OME-XML StructuredAnnotation elements")), ToolInput(tag="in_no_upgrade", input_type=Boolean(optional=True), prefix="-no-upgrade", doc=InputDocumentation(doc=": do not perform the upgrade check\n-format: read file with a particular reader (e.g., ZeissZVI)\n-cache: cache the initialized reader")), ToolInput(tag="in_cache_dir", input_type=Boolean(optional=True), prefix="-cache-dir", doc=InputDocumentation(doc=": use the specified directory to store the cached\ninitialized reader. If unspecified, the cached reader\nwill be stored under the same folder as the image file")), ToolInput(tag="in_option", input_type=Boolean(optional=True), prefix="-option", doc=InputDocumentation(doc=": add the specified key/value pair to the reader's options list"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Showinf_V0_1_0().translate("wdl", allow_empty_container=True)

