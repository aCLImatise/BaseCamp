!Command
command:
- galaxy-tool-test
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -u
  - --galaxy-url
  description: Galaxy URL
  args: !SimpleFlagArg
    name: GALAXY_URL
- !Flag
  optional: true
  synonyms:
  - -k
  - --key
  description: Galaxy User API Key
  args: !SimpleFlagArg
    name: KEY
- !Flag
  optional: true
  synonyms:
  - -a
  - --admin-key
  description: Galaxy Admin API Key
  args: !SimpleFlagArg
    name: ADMIN_KEY
- !Flag
  optional: true
  synonyms:
  - --force_path_paste
  description: "This requires Galaxy-side config option\n\"allow_path_paste\" enabled.\
    \ Allows for fetching test\ndata locally. Only for admins."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -t
  - --tool-id
  description: Tool ID
  args: !SimpleFlagArg
    name: TOOL_ID
- !Flag
  optional: true
  synonyms:
  - --tool-version
  description: Tool Version
  args: !SimpleFlagArg
    name: TOOL_VERSION
- !Flag
  optional: true
  synonyms:
  - -i
  - --test-index
  description: "Tool Test Index (starting at 0) - by default all tests\nwill run."
  args: !SimpleFlagArg
    name: TEST_INDEX
- !Flag
  optional: true
  synonyms:
  - -o
  - --output
  description: directory to dump outputs to
  args: !SimpleFlagArg
    name: OUTPUT
- !Flag
  optional: true
  synonyms:
  - --append
  description: "Extend a test record json (created with --output-json)\nwith additional\
    \ tests."
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -j
  - --output-json
  description: output metadata json
  args: !SimpleFlagArg
    name: OUTPUT_JSON
- !Flag
  optional: true
  synonyms:
  - --verbose
  description: Verbose logging.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - -c
  - --client-test-config
  description: "Test config YAML to help with client testing\n"
  args: !SimpleFlagArg
    name: CLIENT_TEST_CONFIG
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "usage: galaxy-tool-test [-h] [-u GALAXY_URL] [-k KEY] [-a ADMIN_KEY]\n\
  \                        [--force_path_paste] [-t TOOL_ID]\n                   \
  \     [--tool-version TOOL_VERSION] [-i TEST_INDEX]\n                        [-o\
  \ OUTPUT] [--append] [-j OUTPUT_JSON] [--verbose]\n                        [-c CLIENT_TEST_CONFIG]\n\
  \nScript to quickly run a tool test against a running Galaxy instance.\n\noptional\
  \ arguments:\n  -h, --help            show this help message and exit\n  -u GALAXY_URL,\
  \ --galaxy-url GALAXY_URL\n                        Galaxy URL\n  -k KEY, --key KEY\
  \     Galaxy User API Key\n  -a ADMIN_KEY, --admin-key ADMIN_KEY\n             \
  \           Galaxy Admin API Key\n  --force_path_paste    This requires Galaxy-side\
  \ config option\n                        \"allow_path_paste\" enabled. Allows for\
  \ fetching test\n                        data locally. Only for admins.\n  -t TOOL_ID,\
  \ --tool-id TOOL_ID\n                        Tool ID\n  --tool-version TOOL_VERSION\n\
  \                        Tool Version\n  -i TEST_INDEX, --test-index TEST_INDEX\n\
  \                        Tool Test Index (starting at 0) - by default all tests\n\
  \                        will run.\n  -o OUTPUT, --output OUTPUT\n             \
  \           directory to dump outputs to\n  --append              Extend a test\
  \ record json (created with --output-json)\n                        with additional\
  \ tests.\n  -j OUTPUT_JSON, --output-json OUTPUT_JSON\n                        output\
  \ metadata json\n  --verbose             Verbose logging.\n  -c CLIENT_TEST_CONFIG,\
  \ --client-test-config CLIENT_TEST_CONFIG\n                        Test config YAML\
  \ to help with client testing\n"
generated_using:
- --help
docker_image: quay.io/biocontainers/galaxy-tool-util:20.9.1--py_0
