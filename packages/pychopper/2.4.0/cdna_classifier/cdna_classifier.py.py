from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Int, Boolean

Cdna_Classifier_Py_V0_1_0 = CommandToolBuilder(tool="cdna_classifier.py", base_command=["cdna_classifier.py"], inputs=[ToolInput(tag="in_primers_fasta", input_type=String(optional=True), prefix="-b", doc=InputDocumentation(doc="Primers fasta.")), ToolInput(tag="in_file_custom_profile", input_type=File(optional=True), prefix="-g", doc=InputDocumentation(doc="File with custom profile HMMs (None).")), ToolInput(tag="in_file_specify_configurations", input_type=File(optional=True), prefix="-c", doc=InputDocumentation(doc="File to specify primer configurations for each\ndirection (None).")), ToolInput(tag="in_cutoff_parameter_autotuned", input_type=String(optional=True), prefix="-q", doc=InputDocumentation(doc="Cutoff parameter (autotuned).")), ToolInput(tag="in_minimum_mean_base", input_type=Int(optional=True), prefix="-Q", doc=InputDocumentation(doc="Minimum mean base quality (7.0).")), ToolInput(tag="in_minimum_segment_length", input_type=Int(optional=True), prefix="-z", doc=InputDocumentation(doc="Minimum segment length (50).")), ToolInput(tag="in_report_pdf_cdnaclassifierreportpdf", input_type=String(optional=True), prefix="-r", doc=InputDocumentation(doc="Report PDF (cdna_classifier_report.pdf).")), ToolInput(tag="in_write_unclassified_reads", input_type=File(optional=True), prefix="-u", doc=InputDocumentation(doc="Write unclassified reads to this file.")), ToolInput(tag="in_write_fragments_failing", input_type=Int(optional=True), prefix="-l", doc=InputDocumentation(doc="Write fragments failing the length filter in this file.")), ToolInput(tag="in_write_rescued_reads", input_type=File(optional=True), prefix="-w", doc=InputDocumentation(doc="Write rescued reads to this file.")), ToolInput(tag="in_write_statistics_file", input_type=File(optional=True), prefix="-S", doc=InputDocumentation(doc="Write statistics to this file.")), ToolInput(tag="in_write_reads_failing", input_type=File(optional=True), prefix="-K", doc=InputDocumentation(doc="Write reads failing mean quality filter to this file.")), ToolInput(tag="in_approximate_number_reads", input_type=Int(optional=True), prefix="-Y", doc=InputDocumentation(doc="Approximate number of reads used for tuning the cutoff\nparameter (10000).")), ToolInput(tag="in_number_samples_taken", input_type=Int(optional=True), prefix="-L", doc=InputDocumentation(doc="Number of samples taken when tuning cutoff parameter\n(30).")), ToolInput(tag="in_write_alignment_scores", input_type=File(optional=True), prefix="-A", doc=InputDocumentation(doc="Write alignment scores to this BED file.")), ToolInput(tag="in_detection_method_phmm", input_type=String(optional=True), prefix="-m", doc=InputDocumentation(doc="Detection method: phmm or edlib (phmm).")), ToolInput(tag="in_read_rescue_none", input_type=Int(optional=True), prefix="-x", doc=InputDocumentation(doc="Protocol-specific read rescue: DCS109 (None).")), ToolInput(tag="in_keep_primers_trim", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="Keep primers, but trim the rest.")), ToolInput(tag="in_number_threads_use", input_type=Int(optional=True), prefix="-t", doc=InputDocumentation(doc="Number of threads to use (8).")), ToolInput(tag="in_maximum_number_reads", input_type=Int(optional=True), prefix="-B", doc=InputDocumentation(doc="Maximum number of reads processed in each batch\n(1000000).")), ToolInput(tag="in_stats_tab_file", input_type=File(optional=True), prefix="-D", doc=InputDocumentation(doc="stats        Tab separated file with per-read stats (None).")), ToolInput(tag="in_input_fast_x", input_type=String(), position=0, doc=InputDocumentation(doc="Input file.")), ToolInput(tag="in_output_fast_x", input_type=String(), position=1, doc=InputDocumentation(doc="Output file."))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Cdna_Classifier_Py_V0_1_0().translate("wdl", allow_empty_container=True)

