from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, Directory, Float, String, Boolean

Panacota_Pangenome_V0_1_0 = CommandToolBuilder(tool="PanACoTA_pangenome", base_command=["PanACoTA", "pangenome"], inputs=[ToolInput(tag="in_file_containing_list", input_type=File(optional=True), prefix="-l", doc=InputDocumentation(doc="File containing the list of all genomes to include in the\npan-genome, 1 genome per line: it can be the\nLSTINFO-<list_file>.lst file of 'PanACoTA annotate'\nmodule.Here, only the first column (genome name without\nextension) will be used. All proteins of all these\ngenomes will be concatenated in a file called\n<dataset_name>.All.prt. The column header must be\n'gembase_name'.")), ToolInput(tag="in_name_dataset_clustered", input_type=Int(optional=True), prefix="-n", doc=InputDocumentation(doc="Name of the dataset which will be clustered (for example,\nSAEN1234 for 1234 Salmonella enterica genomes). This name\nwill be used to name the protein databank, a well as the\npangenome files.")), ToolInput(tag="in_path_folder_filescorresponding", input_type=File(optional=True), prefix="-d", doc=InputDocumentation(doc="Path to the folder containing all protein files\ncorresponding to the genomes of the dataset (output\ndirectory 'Proteins' of 'PanACoTA annotate' module).")), ToolInput(tag="in_output_directory_savedincluding", input_type=Directory(optional=True), prefix="-o", doc=InputDocumentation(doc="Output directory, where all results must be saved\n(including tmp folder)")), ToolInput(tag="in_minimum_sequence_identity", input_type=Float(optional=True), prefix="-i", doc=InputDocumentation(doc="Minimum sequence identity to be considered in the same\ncluster (float between 0 and 1). Default is 0.8.")), ToolInput(tag="in_use_option_you_want_give", input_type=File(optional=True), prefix="-f", doc=InputDocumentation(doc="Use this option if you want to give the name of the\npangenome output file (without path). Otherwise, by\ndefault, it is called PanGenome-mmseq_<given_dataset_name\n>.All.prt_<information_on_parameters>.lst")), ToolInput(tag="in_choose_clustering_mode", input_type=String(optional=True), prefix="-c", doc=InputDocumentation(doc="Choose the clustering mode: 0 for 'set cover', 1 for\n'single-linkage', 2 for 'CD-Hit'. Default is 'single-\nlinkage' (1)")), ToolInput(tag="in_use_option_you_want_save", input_type=Directory(optional=True), prefix="-s", doc=InputDocumentation(doc="use this option if you want to save the concatenated\nprotein databank in another directory than the one\ncontaining all individual protein files ('Proteins'\nfolder).")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="add this option if you want to parallelize on several\nthreads. Indicate on how many threads you want to\nparallelize. By default, it uses 1 thread. Put 0 if you\nwant to use all threads of your computer.")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Increase verbosity in stdout/stderr.")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="Do not display anything to stdout/stderr. log files will\nstill be created."))], outputs=[ToolOutput(tag="out_path_folder_filescorresponding", output_type=File(optional=True), selector=InputSelector(input_to_select="in_path_folder_filescorresponding", type_hint=File()), doc=OutputDocumentation(doc="Path to the folder containing all protein files\ncorresponding to the genomes of the dataset (output\ndirectory 'Proteins' of 'PanACoTA annotate' module).")), ToolOutput(tag="out_output_directory_savedincluding", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output_directory_savedincluding", type_hint=File()), doc=OutputDocumentation(doc="Output directory, where all results must be saved\n(including tmp folder)")), ToolOutput(tag="out_use_option_you_want_give", output_type=File(optional=True), selector=InputSelector(input_to_select="in_use_option_you_want_give", type_hint=File()), doc=OutputDocumentation(doc="Use this option if you want to give the name of the\npangenome output file (without path). Otherwise, by\ndefault, it is called PanGenome-mmseq_<given_dataset_name\n>.All.prt_<information_on_parameters>.lst"))], container="quay.io/biocontainers/panacota:1.2.0--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Panacota_Pangenome_V0_1_0().translate("wdl")

