from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, Directory, File, Boolean, String

Unitigger_V0_1_0 = CommandToolBuilder(tool="unitigger", base_command=["unitigger"], inputs=[ToolInput(tag="in_specifies_target_number", input_type=Int(optional=True), prefix="-B", doc=InputDocumentation(doc="Specifies the target number of fragments per partition.")), ToolInput(tag="in_fragment_store_name", input_type=Directory(optional=True), prefix="-F", doc=InputDocumentation(doc="The fragment store name.")), ToolInput(tag="in_chimeras_file", input_type=File(optional=True), prefix="-H", doc=InputDocumentation(doc="chimeras file.")), ToolInput(tag="in_read_ovl_store", input_type=Directory(optional=True), prefix="-I", doc=InputDocumentation(doc="Read the OVL store.")), ToolInput(tag="in_input_overlapfragmesgs_asmofg", input_type=File(optional=True), prefix="-L", doc=InputDocumentation(doc="The input OverlapFragMesgs; asm.ofg.")), ToolInput(tag="in_spurs_file", input_type=File(optional=True), prefix="-S", doc=InputDocumentation(doc="Spurs file.")), ToolInput(tag="in_find_bubble_smoothing", input_type=Boolean(optional=True), prefix="-U", doc=InputDocumentation(doc="Find bubble smoothing overlaps.")), ToolInput(tag="in_limit_path_walking", input_type=Int(optional=True), prefix="-W", doc=InputDocumentation(doc="Limit in path length for graph walking.")), ToolInput(tag="in_count_chimera_fragments", input_type=Boolean(optional=True), prefix="-Y", doc=InputDocumentation(doc="Do not count chimera fragments.")), ToolInput(tag="in_enabledisable_dechording_fragment", input_type=Int(optional=True), prefix="-d", doc=InputDocumentation(doc="Enable/Disable de-chording of the fragment overlap graph.")), ToolInput(tag="in_overlaps_error_rate", input_type=Int(optional=True), prefix="-e", doc=InputDocumentation(doc="Overlaps with error rate about this are ignored on input.\nAn integer value is in parts per thousand.")), ToolInput(tag="in_unique_unitig_cutoff", input_type=Int(optional=True), prefix="-j", doc=InputDocumentation(doc="Unique unitig cut-off")), ToolInput(tag="in_recalibrate_global_rate", input_type=Boolean(optional=True), prefix="-k", doc=InputDocumentation(doc="Recalibrate the global arrival rate to be the max unique local arrival rate")), ToolInput(tag="in_specify_length_genome", input_type=Int(optional=True), prefix="-l", doc=InputDocumentation(doc="Specify length of the genome.")), ToolInput(tag="in_m", input_type=String(optional=True), prefix="-m", doc=InputDocumentation(doc="Pre-allocate memory")), ToolInput(tag="in_n", input_type=String(optional=True), prefix="-n", doc=InputDocumentation(doc="Pre-allocate memory")), ToolInput(tag="in_output_to_prefix", input_type=String(optional=True), prefix="-o", doc=InputDocumentation(doc="output to this prefix.")), ToolInput(tag="in_disable_early_spur", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="Disable early spur fragment removal.")), ToolInput(tag="in_create_ovl_dump", input_type=File(optional=True), prefix="-u", doc=InputDocumentation(doc="Create a OVL compatible dump of the graph.")), ToolInput(tag="in_work_limit_candidate", input_type=Int(optional=True), prefix="-w", doc=InputDocumentation(doc="The work limit per candidate edge for de-chording.")), ToolInput(tag="in_dovetail_degree_threshold", input_type=Int(optional=True), prefix="-x", doc=InputDocumentation(doc="Dovetail outgoing degree threshold per fragment-end.")), ToolInput(tag="in_ignore_nonblessed_overlap", input_type=Int(optional=True), prefix="-y", doc=InputDocumentation(doc="Ignore non-blessed overlap edges to blessed fragment ends.")), ToolInput(tag="in_containment_degree_threshold", input_type=Int(optional=True), prefix="-z", doc=InputDocumentation(doc="Containment outgoing degree threshold per fragment-end.")), ToolInput(tag="in_option", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Unitigger_V0_1_0().translate("wdl", allow_empty_container=True)

