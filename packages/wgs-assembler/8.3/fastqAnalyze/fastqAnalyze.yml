!Command
command:
- fastqAnalyze
positional:
- !Positional
  description: 'For conversion, you can force the input QV type with:'
  position: 0
  name: output.
  optional: false
named:
- !Flag
  description: input QV is solexa
  synonyms:
  - -solexa
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: input QV is illumina
  synonyms:
  - -illumina
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: input QV is sanger
  synonyms:
  - -sanger
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ''
  synonyms:
  - -o
  args: !SimpleFlagArg
    name: output.fastq
  optional: true
- !Flag
  description: ''
  synonyms:
  - -stats
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "usage: fastqAnalyze [-stats] [-o output.fastq] input.fastq\n  If no options\
  \ are given, input.fastq is analyzed and a best guess for the\n  QV encoding is\
  \ output.  Otherwise, the QV encoding is converted to Sanger-style\n  using this\
  \ guess.\n\n  In some cases, the encoding cannot be determined.  When this occurs,\
  \ no guess is\n  output.  For conversion, you can force the input QV type with:\n\
  \n  -solexa     input QV is solexa\n  -illumina   input QV is illumina\n  -sanger\
  \     input QV is sanger\n\n  -o          sanger-style-output.fastq\n\n  If -stats\
  \ is supplied, no QV analysis or conversion is performed, but some simple\n  statistics\
  \ are computed and output to stdout.\n\n"
generated_using: []
