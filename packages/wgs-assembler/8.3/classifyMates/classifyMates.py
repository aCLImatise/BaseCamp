from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Int, Boolean, File

Classifymates_V0_1_0 = CommandToolBuilder(tool="classifyMates", base_command=["classifyMates"], inputs=[ToolInput(tag="in_read_fragments_here", input_type=String(optional=True), prefix="-G", doc=InputDocumentation(doc="Read fragments from here")), ToolInput(tag="in_read_overlaps_here", input_type=String(optional=True), prefix="-O", doc=InputDocumentation(doc="Read overlaps from here")), ToolInput(tag="in_write_results_here", input_type=String(optional=True), prefix="-o", doc=InputDocumentation(doc="Write results here")), ToolInput(tag="in_use_overlaps_less", input_type=Int(optional=True), prefix="-e", doc=InputDocumentation(doc="Use overlaps with less than 'maxError' fraction error (default 0.045)")), ToolInput(tag="in_use_compute_threads", input_type=String(optional=True), prefix="-t", doc=InputDocumentation(doc="Use 'n' compute threads")), ToolInput(tag="in_use_most_unlimited", input_type=String(optional=True), prefix="-m", doc=InputDocumentation(doc="Use at most 'm' GB memory (default: unlimited)")), ToolInput(tag="in_sl", input_type=String(optional=True), prefix="-sl", doc=InputDocumentation(doc="[-m]        Search for mates in libraries l-m")), ToolInput(tag="in_bl", input_type=String(optional=True), prefix="-bl", doc=InputDocumentation(doc="[-m]        Use libraries l-m for searching")), ToolInput(tag="in_cache", input_type=Boolean(optional=True), prefix="-cache", doc=InputDocumentation(doc="Write loaded data to cache files")), ToolInput(tag="in_cache_only", input_type=Boolean(optional=True), prefix="-cacheonly", doc=InputDocumentation(doc="Write loaded data to cache files, stop after building")), ToolInput(tag="in_do_report_progress", input_type=Boolean(optional=True), prefix="-q", doc=InputDocumentation(doc="Don't report progress.")), ToolInput(tag="in_min", input_type=Int(optional=True), prefix="-min", doc=InputDocumentation(doc="Mates must be at least m bases apart")), ToolInput(tag="in_max", input_type=Int(optional=True), prefix="-max", doc=InputDocumentation(doc="Mates must be at most m bases apart")), ToolInput(tag="in_in_nie", input_type=Boolean(optional=True), prefix="-innie", doc=InputDocumentation(doc="Mates must be innie (NOT SUPPORTED)")), ToolInput(tag="in_out_tie", input_type=Boolean(optional=True), prefix="-outtie", doc=InputDocumentation(doc="Mates must be outtie")), ToolInput(tag="in_bfs", input_type=String(optional=True), prefix="-bfs", doc=InputDocumentation(doc="Use 'breadth-first search'; search at most N fragments")), ToolInput(tag="in_dfs", input_type=String(optional=True), prefix="-dfs", doc=InputDocumentation(doc="Use 'depth-first search'; search to depth N overlaps")), ToolInput(tag="in_rfs", input_type=File(optional=True), prefix="-rfs", doc=InputDocumentation(doc="Use 'random-path search'; search at most N paths")), ToolInput(tag="in_no_suspicious", input_type=Boolean(optional=True), prefix="-nosuspicious", doc=InputDocumentation(doc="Don't search for suspicious pairs."))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Classifymates_V0_1_0().translate("wdl", allow_empty_container=True)

