from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, File, Float, Int

Gatekeeper_V0_1_0 = CommandToolBuilder(tool="gatekeeper", base_command=["gatekeeper"], inputs=[ToolInput(tag="in_append_existing_store", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="append to existing store")), ToolInput(tag="in_append_create_gkpstore", input_type=String(optional=True), prefix="-o", doc=InputDocumentation(doc="append to or create gkpStore")), ToolInput(tag="in_check_minimum_length", input_type=Boolean(optional=True), prefix="-T", doc=InputDocumentation(doc="do not check minimum length (for OBT)")), ToolInput(tag="in_fix_size_estimates", input_type=Boolean(optional=True), prefix="-F", doc=InputDocumentation(doc="fix invalid insert size estimates")), ToolInput(tag="in_load_vector_clear", input_type=String(optional=True), prefix="-v", doc=InputDocumentation(doc="load vector clear ranges into each read.\nMUST be done on an existing, complete store.\nexample: -a -v vectorfile -o that.gkpStore\nformat: 'UID vec-clr-begin vec-clr-end'")), ToolInput(tag="in_list_partition_fragiid", input_type=File(optional=True), prefix="-P", doc=InputDocumentation(doc="a list of (partition fragiid)")), ToolInput(tag="in_dump_starting_read", input_type=String(optional=True), prefix="-b", doc=InputDocumentation(doc="dump starting at this library or read")), ToolInput(tag="in_dump_stopping_iid", input_type=String(optional=True), prefix="-e", doc=InputDocumentation(doc="dump stopping after this iid")), ToolInput(tag="in_uid", input_type=File(optional=True), prefix="-uid", doc=InputDocumentation(doc="dump only objects listed in 'uid-file'")), ToolInput(tag="in_iid", input_type=File(optional=True), prefix="-iid", doc=InputDocumentation(doc="dump only objects listed in 'iid-file'")), ToolInput(tag="in_random_mated", input_type=Boolean(optional=True), prefix="-randommated", doc=InputDocumentation(doc="<lib> <n> pick n mates (2n frags) at random from library lib")), ToolInput(tag="in_random_subset", input_type=Float(optional=True), prefix="-randomsubset", doc=InputDocumentation(doc="<f> dump a random fraction f (0.0-1.0) of library lib")), ToolInput(tag="in_random_length", input_type=Int(optional=True), prefix="-randomlength", doc=InputDocumentation(doc="<l> dump a random fraction of library lib, fraction picked\nso that the untrimmed length is close to l bp")), ToolInput(tag="in_longest_over_min", input_type=String(optional=True), prefix="-longestovermin", doc=InputDocumentation(doc="<n> pick all reads longer than n bp from library lib")), ToolInput(tag="in_longest_length", input_type=Boolean(optional=True), prefix="-longestlength", doc=InputDocumentation(doc="<lib> <n> pick longest reads from library lib to add up to n total bp")), ToolInput(tag="in_deterministic", input_type=Boolean(optional=True), prefix="-deterministic", doc=InputDocumentation(doc="use a constant seed for random subset dumps")), ToolInput(tag="in_tabular", input_type=Boolean(optional=True), prefix="-tabular", doc=InputDocumentation(doc="dump info, libraries or fragments in a tabular\nformat (for -dumpinfo, -dumplibraries,\nand -dumpfragments, ignores -withsequence and -clear)")), ToolInput(tag="in_is_feature_set", input_type=Int(optional=True), prefix="-isfeatureset", doc=InputDocumentation(doc="<X> sets exit value to 0 if feature X is set in library libID, 1 otherwise.\nIf libID == 0, check all libraries.")), ToolInput(tag="in_no_uid", input_type=Boolean(optional=True), prefix="-nouid", doc=InputDocumentation(doc="dump info without including the read UID (for -dumpinfo, -dumplibraries, -dumpfragments)")), ToolInput(tag="in_dump_info", input_type=Boolean(optional=True), prefix="-dumpinfo", doc=InputDocumentation(doc="print information on the store")), ToolInput(tag="in_last_frag_iid", input_type=Boolean(optional=True), prefix="-lastfragiid", doc=InputDocumentation(doc="just print the last IID in the store")), ToolInput(tag="in_dump_libraries", input_type=Boolean(optional=True), prefix="-dumplibraries", doc=InputDocumentation(doc="dump all library records")), ToolInput(tag="in_dump_fragments", input_type=Boolean(optional=True), prefix="-dumpfragments", doc=InputDocumentation(doc="dump fragment info, no sequence")), ToolInput(tag="in_with_sequence", input_type=Boolean(optional=True), prefix="-withsequence", doc=InputDocumentation(doc="...and include sequence")), ToolInput(tag="in_clear", input_type=String(optional=True), prefix="-clear", doc=InputDocumentation(doc="...in clear range <clr>, default=LATEST")), ToolInput(tag="in_invert", input_type=Boolean(optional=True), prefix="-invert", doc=InputDocumentation(doc="...invert")), ToolInput(tag="in_dump_fast_a", input_type=String(optional=True), prefix="-dumpfasta", doc=InputDocumentation(doc="dump fragment sequence and quality into <p.fasta> and <p.fasta.qual>")), ToolInput(tag="in_all_reads", input_type=Boolean(optional=True), prefix="-allreads", doc=InputDocumentation(doc="...all reads, regardless of deletion status (deleted are lowercase)")), ToolInput(tag="in_all_bases", input_type=Boolean(optional=True), prefix="-allbases", doc=InputDocumentation(doc="...all bases (lowercase for non-clear)")), ToolInput(tag="in_decoded", input_type=Boolean(optional=True), prefix="-decoded", doc=InputDocumentation(doc="...quality as integers ('20 21 19')")), ToolInput(tag="in_dump_frg", input_type=Boolean(optional=True), prefix="-dumpfrg", doc=InputDocumentation(doc="extract LIB, FRG and LKG messages")), ToolInput(tag="in_do_not_fix_mates", input_type=Boolean(optional=True), prefix="-donotfixmates", doc=InputDocumentation(doc="...only extract the fragments given, do not add in\nmissing mated reads")), ToolInput(tag="in_legacy_format", input_type=Boolean(optional=True), prefix="-legacyformat", doc=InputDocumentation(doc="...extract using frg format version 1 (legacy format, for compatibility)")), ToolInput(tag="in_dump_new_bler", input_type=String(optional=True), prefix="-dumpnewbler", doc=InputDocumentation(doc="extract LIB, FRG and LKG messages, write in a\nformat appropriate for Newbler.  This will create\nfiles 'prefix.fna' and 'prefix.fna.qual'.  Options\n-donotfixmates and -clear also apply.")), ToolInput(tag="in_dump_fast_q", input_type=File(optional=True), prefix="-dumpfastq", doc=InputDocumentation(doc="extract LIB, FRG and LKG messages, write in FastQ format.  Currently\nthis works only on a store with one library as all the mated reads\nare dumped into a single file. This will create files 'prefix.paired.fastq',\n'prefix.1.fastq', 'prefix.2.fastq' and 'prefix.unmated.fastq' for unmated\nreads. Options -donotfixmates and -clear also apply.")), ToolInput(tag="in_with_libname", input_type=Boolean(optional=True), prefix="-withlibname", doc=InputDocumentation(doc="For -dumpfasta, -dumpnewbler and -dumpfastq, embed the libraryname in the\ncreated files, e.g., prefix.libname.1.fastq for fastq files."))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Gatekeeper_V0_1_0().translate("wdl", allow_empty_container=True)

