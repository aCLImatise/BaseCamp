from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Float, Int, File

Scallop_V0_1_0 = CommandToolBuilder(tool="scallop", base_command=["scallop"], inputs=[ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="<0, 1, 2>                         0: quiet; 1: one line for each graph; 2: with details, default: 1")), ToolInput(tag="in_library_type", input_type=Boolean(optional=True), prefix="--library_type", doc=InputDocumentation(doc="<first, second, unstranded>  library type of the sample, default: unstranded")), ToolInput(tag="in_min_transcript_coverage", input_type=Float(optional=True), prefix="--min_transcript_coverage", doc=InputDocumentation(doc="minimum coverage required for a multi-exon transcript, default: 1.01")), ToolInput(tag="in_min_single_exon_coverage", input_type=Float(optional=True), prefix="--min_single_exon_coverage", doc=InputDocumentation(doc="minimum coverage required for a single-exon transcript, default: 20")), ToolInput(tag="in_min_transcript_length_increase", input_type=Int(optional=True), prefix="--min_transcript_length_increase", doc=InputDocumentation(doc="default: 50")), ToolInput(tag="in_min_mapping_quality", input_type=Int(optional=True), prefix="--min_mapping_quality", doc=InputDocumentation(doc="ignore reads with mapping quality less than this value, default: 1")), ToolInput(tag="in_max_num_cigar", input_type=Int(optional=True), prefix="--max_num_cigar", doc=InputDocumentation(doc="ignore reads with CIGAR size larger than this value, default: 7")), ToolInput(tag="in_min_bundle_gap", input_type=Int(optional=True), prefix="--min_bundle_gap", doc=InputDocumentation(doc="minimum distances required to start a new bundle, default: 50")), ToolInput(tag="in_min_num_hits_in_bundle", input_type=Int(optional=True), prefix="--min_num_hits_in_bundle", doc=InputDocumentation(doc="minimum number of reads required in a bundle, default: 20")), ToolInput(tag="in_min_flank_length", input_type=Int(optional=True), prefix="--min_flank_length", doc=InputDocumentation(doc="minimum match length in each side for a spliced read, default: 3")), ToolInput(tag="in_min_splice_bund_ary_hits", input_type=Int(optional=True), prefix="--min_splice_bundary_hits", doc=InputDocumentation(doc="minimum number of spliced reads required for a junction, default: 1\n___           ___           ___                                       ___           ___\n/  /\         /  /\         /  /\                                     /  /\         /  /\\n/  /:/_       /  /:/        /  /::\                                   /  /::\       /  /::\\n/  /:/ /\     /  /:/        /  /:/\:\    ___     ___   ___     ___    /  /:/\:\     /  /:/\:\\n/  /:/ /::\   /  /:/  ___   /  /:/~/::\  /__/\   /  /\ /__/\   /  /\  /  /:/  \:\   /  /:/~/:/")), ToolInput(tag="in_o", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="")), ToolInput(tag="in_i", input_type=File(optional=True), prefix="-i", doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Scallop_V0_1_0().translate("wdl", allow_empty_container=True)

