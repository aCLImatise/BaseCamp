from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Float, Int, Boolean

Novoradapter_V0_1_0 = CommandToolBuilder(tool="NovorAdapter", base_command=["NovorAdapter"], inputs=[ToolInput(tag="in_executable", input_type=String(optional=True), prefix="-executable", doc=InputDocumentation(doc="Novor.jar")), ToolInput(tag="in_in", input_type=File(optional=True), prefix="-in", doc=InputDocumentation(doc="*                         MzML Input file (valid formats: 'mzml')")), ToolInput(tag="in_out", input_type=File(optional=True), prefix="-out", doc=InputDocumentation(doc="*                        Novor idXML output (valid formats: 'idXML')")), ToolInput(tag="in_enzyme", input_type=String(optional=True), prefix="-enzyme", doc=InputDocumentation(doc="Digestion enzyme - currently only Trypsin is supported  (default: 'Trypsin' valid: 'Trypsin')")), ToolInput(tag="in_fragmentation", input_type=String(optional=True), prefix="-fragmentation", doc=InputDocumentation(doc="Fragmentation method (default: 'CID' valid: 'CID', 'HCD')")), ToolInput(tag="in_mass_analyzer", input_type=String(optional=True), prefix="-massAnalyzer", doc=InputDocumentation(doc="MassAnalyzer e.g. (Oritrap CID-Trap, CID-FT, HCD-FT; QTof CID-TOF) (default: 'Trap' valid: 'Trap', 'TOF', 'FT')")), ToolInput(tag="in_fragment_mass_tolerance", input_type=Float(optional=True), prefix="-fragment_mass_tolerance", doc=InputDocumentation(doc="Fragmentation error tolerance  (Da) (default: '0.5')")), ToolInput(tag="in_precursor_mass_tolerance", input_type=Float(optional=True), prefix="-precursor_mass_tolerance", doc=InputDocumentation(doc="Precursor error tolerance  (ppm or Da) (default: '15.0')")), ToolInput(tag="in_precursor_error_units", input_type=String(optional=True), prefix="-precursor_error_units", doc=InputDocumentation(doc="Unit of precursor mass tolerance (default: 'ppm' valid: 'ppm', 'Da')")), ToolInput(tag="in_variable_modifications", input_type=String(optional=True), prefix="-variable_modifications", doc=InputDocumentation(doc="Variable modifications (valid: 'Acetyl (K)', 'Acetyl (N-term)', 'Amidated (C-term)', 'Ammonia-loss (N-term C)', 'Biotin (K)', 'Biotin (N-term)', 'Carbamidomethyl (C)', 'Carbamyl (K)', 'Carbamyl (N-term)', 'Carboxymethyl (C)', 'Deamidated (NQ)', 'Dehydrated (N-term C)', 'Dioxidation (M)', 'Methyl (C-term)', 'Methyl (DE)', 'Oxidation (M)', 'Oxidation (HW)', 'Phospho (ST)', 'Phospho (Y)', 'Pyro-carbamidomethyl (N-term C)', 'Pyro-Glu (E)', 'Pyro-Glu (Q)', 'Sodium (C-term)', 'Sodium (DE)', 'Sulfo (STY)', 'Trimethyl (RK)')")), ToolInput(tag="in_fixed_modifications", input_type=String(optional=True), prefix="-fixed_modifications", doc=InputDocumentation(doc="Fixed modifications (valid: 'Acetyl (K)', 'Acetyl (N-term)', 'Amidated (C-term)', 'Ammonia-loss (N-term C)', 'Biotin (K)', 'Biotin (N-term)', 'Carbamidomethyl (C)', 'Carbamyl (K)', 'Carbamyl (N-term)', 'Carboxymethyl (C)', 'Deamidated (NQ)', 'Dehydrated (N-term C)', 'Dioxidation (M)', 'Methyl (C-term)', 'Methyl (DE)', 'Oxidation (M)', 'Oxidation (HW)', 'Phospho (ST)', 'Phospho (Y)', 'Pyro-carbamidomethyl (N-term C)', 'Pyro-Glu (E)', 'Pyro-Glu (Q)', 'Sodium (C-term)', 'Sodium (DE)', 'Sulfo (STY)', 'Trimethyl (RK)')")), ToolInput(tag="in_forbidden_residues", input_type=String(optional=True), prefix="-forbiddenResidues", doc=InputDocumentation(doc="Forbidden Resiudes (valid: 'I', 'U')")), ToolInput(tag="in_nov_or_file", input_type=File(optional=True), prefix="-novorFile", doc=InputDocumentation(doc="File to introduce customized algorithm parameters for advanced users (otional .novor file) (valid formats: 'novor')")), ToolInput(tag="in_java_executable", input_type=File(optional=True), prefix="-java_executable", doc=InputDocumentation(doc="The Java executable. Usually Java is on the system PATH. If Java is not found, use this parameter to specify the full path to Java")), ToolInput(tag="in_java_memory", input_type=Int(optional=True), prefix="-java_memory", doc=InputDocumentation(doc="Maximum Java heap size (in MB) (default: '3500')")), ToolInput(tag="in_ini", input_type=File(optional=True), prefix="-ini", doc=InputDocumentation(doc="Use the given TOPP INI file")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="-threads", doc=InputDocumentation(doc="Sets the number of threads allowed to be used by the TOPP tool (default: '1')")), ToolInput(tag="in_write_ini", input_type=File(optional=True), prefix="-write_ini", doc=InputDocumentation(doc="Writes the default configuration file")), ToolInput(tag="in_helphelp", input_type=Boolean(optional=True), prefix="--helphelp", doc=InputDocumentation(doc="Shows all options (including advanced)"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Novoradapter_V0_1_0().translate("wdl", allow_empty_container=True)

