from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Boolean, File, Int, Directory

Assaygeneratormetabo_V0_1_0 = CommandToolBuilder(tool="AssayGeneratorMetabo", base_command=["AssayGeneratorMetabo"], inputs=[ToolInput(tag="in_executable", input_type=String(optional=True), prefix="-executable", doc=InputDocumentation(doc="SIRIUS executable e.g. sirius")), ToolInput(tag="in_in", input_type=Boolean(optional=True), prefix="-in", doc=InputDocumentation(doc="<file(s)>*                                       MzML input file(s) used for assay library generation (valid formats: 'mzML')")), ToolInput(tag="in_in_id", input_type=Boolean(optional=True), prefix="-in_id", doc=InputDocumentation(doc="<file(s)>*                                    FeatureXML input file(s) containing identification information (e.g. AccurateMassSearch) (valid formats: 'featureXML')")), ToolInput(tag="in_out", input_type=File(optional=True), prefix="-out", doc=InputDocumentation(doc="*                                         Assay library output file (valid formats: 'tsv', 'traML', 'pqp')")), ToolInput(tag="in_fragment_annotation", input_type=String(optional=True), prefix="-fragment_annotation", doc=InputDocumentation(doc="Fragment annotation method (default: 'none' valid: 'none', 'sirius')")), ToolInput(tag="in_method", input_type=String(optional=True), prefix="-method", doc=InputDocumentation(doc="Spectrum with the highest precursor intensity or a consensus spectrum ist used for assay library construction (if no fragment annotation is used). (default: 'highest_intensity' valid: 'highest_intensity', 'consensus_spectrum')")), ToolInput(tag="in_use_exact_mass", input_type=Boolean(optional=True), prefix="-use_exact_mass", doc=InputDocumentation(doc="Use exact mass for fragment annotation")), ToolInput(tag="in_exclude_ms_two_precursor", input_type=Boolean(optional=True), prefix="-exclude_ms2_precursor", doc=InputDocumentation(doc="Excludes precursor in ms2 from transition list")), ToolInput(tag="in_precursor_mz_distance", input_type=Int(optional=True), prefix="-precursor_mz_distance", doc=InputDocumentation(doc="Max m/z distance of the precursor entries of two spectra to be merged in [Da]. (default: '1.0e-04')")), ToolInput(tag="in_precursor_rt_tolerance", input_type=Int(optional=True), prefix="-precursor_rt_tolerance", doc=InputDocumentation(doc="Tolerance window (left and right) for precursor selection [seconds] (default: '5.0')")), ToolInput(tag="in_use_known_unknowns", input_type=Boolean(optional=True), prefix="-use_known_unknowns", doc=InputDocumentation(doc="Use features without identification information")), ToolInput(tag="in_min_transitions", input_type=Int(optional=True), prefix="-min_transitions", doc=InputDocumentation(doc="Minimal number of transitions (default: '3')")), ToolInput(tag="in_max_transitions", input_type=Int(optional=True), prefix="-max_transitions", doc=InputDocumentation(doc="Maximal number of transitions (default: '3')")), ToolInput(tag="in_cosine_similarity_threshold", input_type=Int(optional=True), prefix="-cosine_similarity_threshold", doc=InputDocumentation(doc="Threshold for cosine similarity of MS2 spectra from the same precursor used in consensus spectrum creation (default: '0.98')")), ToolInput(tag="in_transition_threshold", input_type=Int(optional=True), prefix="-transition_threshold", doc=InputDocumentation(doc="Further transitions need at least x% of the maximum intensity (default 5%) (default: '5.0')")), ToolInput(tag="in_out_workspace_directory", input_type=Directory(optional=True), prefix="-out_workspace_directory", doc=InputDocumentation(doc="Output directory for SIRIUS workspace")), ToolInput(tag="in_ini", input_type=File(optional=True), prefix="-ini", doc=InputDocumentation(doc="Use the given TOPP INI file")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="-threads", doc=InputDocumentation(doc="Sets the number of threads allowed to be used by the TOPP tool (default: '1')")), ToolInput(tag="in_write_ini", input_type=File(optional=True), prefix="-write_ini", doc=InputDocumentation(doc="Writes the default configuration file")), ToolInput(tag="in_helphelp", input_type=Boolean(optional=True), prefix="--helphelp", doc=InputDocumentation(doc="Shows all options (including advanced)"))], outputs=[ToolOutput(tag="out_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out", type_hint=File()), doc=OutputDocumentation(doc="*                                         Assay library output file (valid formats: 'tsv', 'traML', 'pqp')")), ToolOutput(tag="out_out_workspace_directory", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_out_workspace_directory", type_hint=File()), doc=OutputDocumentation(doc="Output directory for SIRIUS workspace"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Assaygeneratormetabo_V0_1_0().translate("wdl", allow_empty_container=True)

