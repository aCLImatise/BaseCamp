from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean, Int

Proteinresolver_V0_1_0 = CommandToolBuilder(tool="ProteinResolver", base_command=["ProteinResolver"], inputs=[ToolInput(tag="in_fast_a", input_type=File(optional=True), prefix="-fasta", doc=InputDocumentation(doc="*                       Input database file (valid formats: 'fasta')")), ToolInput(tag="in_in", input_type=Boolean(optional=True), prefix="-in", doc=InputDocumentation(doc="<file(s)>                        Input file(s) holding experimental data (valid formats: 'idXML', 'consensusXML')")), ToolInput(tag="in_in_path", input_type=File(optional=True), prefix="-in_path", doc=InputDocumentation(doc="Path to idXMLs or consensusXMLs files. Ignored if 'in' is given.")), ToolInput(tag="in_design", input_type=File(optional=True), prefix="-design", doc=InputDocumentation(doc="Text file containing the experimental design. See documentation for specific format requirements (valid formats: 'txt')")), ToolInput(tag="in_protein_groups", input_type=File(optional=True), prefix="-protein_groups", doc=InputDocumentation(doc="Output file. Contains all protein groups (valid formats: 'csv')")), ToolInput(tag="in_peptide_table", input_type=File(optional=True), prefix="-peptide_table", doc=InputDocumentation(doc="Output file. Contains one peptide per line and all proteins which contain that peptide (valid formats: 'csv')")), ToolInput(tag="in_protein_table", input_type=File(optional=True), prefix="-protein_table", doc=InputDocumentation(doc="Output file. Contains one protein per line (valid formats: 'csv')")), ToolInput(tag="in_ini", input_type=File(optional=True), prefix="-ini", doc=InputDocumentation(doc="Use the given TOPP INI file")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="-threads", doc=InputDocumentation(doc="Sets the number of threads allowed to be used by the TOPP tool (default: '1')")), ToolInput(tag="in_write_ini", input_type=File(optional=True), prefix="-write_ini", doc=InputDocumentation(doc="Writes the default configuration file")), ToolInput(tag="in_helphelp", input_type=Boolean(optional=True), prefix="--helphelp", doc=InputDocumentation(doc="Shows all options (including advanced)"))], outputs=[ToolOutput(tag="out_protein_groups", output_type=File(optional=True), selector=InputSelector(input_to_select="in_protein_groups", type_hint=File()), doc=OutputDocumentation(doc="Output file. Contains all protein groups (valid formats: 'csv')")), ToolOutput(tag="out_peptide_table", output_type=File(optional=True), selector=InputSelector(input_to_select="in_peptide_table", type_hint=File()), doc=OutputDocumentation(doc="Output file. Contains one peptide per line and all proteins which contain that peptide (valid formats: 'csv')")), ToolOutput(tag="out_protein_table", output_type=File(optional=True), selector=InputSelector(input_to_select="in_protein_table", type_hint=File()), doc=OutputDocumentation(doc="Output file. Contains one protein per line (valid formats: 'csv')"))], container="quay.io/biocontainers/openms:2.6.0--h4afb90d_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Proteinresolver_V0_1_0().translate("wdl")

