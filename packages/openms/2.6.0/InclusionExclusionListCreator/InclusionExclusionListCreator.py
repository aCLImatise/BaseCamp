from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, String, Boolean

Inclusionexclusionlistcreator_V0_1_0 = CommandToolBuilder(tool="InclusionExclusionListCreator", base_command=["InclusionExclusionListCreator"], inputs=[ToolInput(tag="in_include", input_type=File(optional=True), prefix="-include", doc=InputDocumentation(doc="Inclusion list input file in FASTA or featureXML format. (valid formats: 'featureXML', 'fasta')")), ToolInput(tag="in_exclude", input_type=File(optional=True), prefix="-exclude", doc=InputDocumentation(doc="Exclusion list input file in featureXML, idXML or FASTA format. (valid formats: 'featureXML', 'idXML', 'fasta')")), ToolInput(tag="in_out", input_type=File(optional=True), prefix="-out", doc=InputDocumentation(doc="*                 Output file (tab delimited csv file). (valid formats: 'csv')")), ToolInput(tag="in_rt_model", input_type=File(optional=True), prefix="-rt_model", doc=InputDocumentation(doc="RTModel file used for the rt prediction of peptides in FASTA files. (valid formats: 'txt')")), ToolInput(tag="in_pt_model", input_type=File(optional=True), prefix="-pt_model", doc=InputDocumentation(doc="PTModel file used for the pt prediction of peptides in FASTA files (only needed for inclusion_strategy PreotinBased_LP). (valid formats: 'txt')")), ToolInput(tag="in_inclusion_charges", input_type=Int(optional=True), prefix="-inclusion_charges", doc=InputDocumentation(doc="List containing the charge states to be considered for the inclusion list compounds, space separated. (min: '1')")), ToolInput(tag="in_inclusion_strategy", input_type=String(optional=True), prefix="-inclusion_strategy", doc=InputDocumentation(doc="Strategy to be used for selection (default: 'ALL' valid: 'FeatureBased_LP', 'ProteinBased_LP', 'ALL')")), ToolInput(tag="in_exclusion_charges", input_type=Int(optional=True), prefix="-exclusion_charges", doc=InputDocumentation(doc="List containing the charge states to be considered for the exclusion list compounds (for idXML and FASTA input), space separated. (min: '1')")), ToolInput(tag="in_raw_data", input_type=File(optional=True), prefix="-raw_data", doc=InputDocumentation(doc="File containing the raw data (only needed for FeatureBased_LP). (valid formats: 'mzML')")), ToolInput(tag="in_ini", input_type=File(optional=True), prefix="-ini", doc=InputDocumentation(doc="Use the given TOPP INI file")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="-threads", doc=InputDocumentation(doc="Sets the number of threads allowed to be used by the TOPP tool (default: '1')")), ToolInput(tag="in_write_ini", input_type=File(optional=True), prefix="-write_ini", doc=InputDocumentation(doc="Writes the default configuration file")), ToolInput(tag="in_helphelp", input_type=Boolean(optional=True), prefix="--helphelp", doc=InputDocumentation(doc="Shows all options (including advanced)"))], outputs=[ToolOutput(tag="out_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out", type_hint=File()), doc=OutputDocumentation(doc="*                 Output file (tab delimited csv file). (valid formats: 'csv')"))], container="quay.io/biocontainers/openms:2.6.0--h4afb90d_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Inclusionexclusionlistcreator_V0_1_0().translate("wdl")

