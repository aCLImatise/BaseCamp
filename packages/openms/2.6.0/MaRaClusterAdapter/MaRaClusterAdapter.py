from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Directory, Int, Boolean

Maraclusteradapter_V0_1_0 = CommandToolBuilder(tool="MaRaClusterAdapter", base_command=["MaRaClusterAdapter"], inputs=[ToolInput(tag="in_in", input_type=File(optional=True), prefix="-in", doc=InputDocumentation(doc="*                           Input file(s) (valid formats: 'mzML', 'mgf')")), ToolInput(tag="in_id_in", input_type=File(optional=True), prefix="-id_in", doc=InputDocumentation(doc="Optional idXML Input file(s) in the same order as mzML files - for Maracluster Cluster annotation (valid formats: 'idXML')")), ToolInput(tag="in_out", input_type=File(optional=True), prefix="-out", doc=InputDocumentation(doc="Output file in idXML format (valid formats: 'idXML')")), ToolInput(tag="in_consensus_out", input_type=File(optional=True), prefix="-consensus_out", doc=InputDocumentation(doc="Consensus spectra in mzML format (valid formats: 'mzML')")), ToolInput(tag="in_output_directory", input_type=Directory(optional=True), prefix="-output_directory", doc=InputDocumentation(doc="Output directory for MaRaCluster original consensus output")), ToolInput(tag="in_p_cut", input_type=Int(optional=True), prefix="-pcut", doc=InputDocumentation(doc="Log(p-value) cutoff, has to be < 0.0. Default: -10.0. (default: '-10.0' max: '0.0')")), ToolInput(tag="in_min_cluster_size", input_type=Int(optional=True), prefix="-min_cluster_size", doc=InputDocumentation(doc="Minimum number of spectra in a cluster for consensus spectra (default: '1' min: '1')")), ToolInput(tag="in_mar_a_cluster_executable", input_type=File(optional=True), prefix="-maracluster_executable", doc=InputDocumentation(doc="*  The maracluster executable. Provide a full or relative path, or make sure it can be found in your PATH environment.")), ToolInput(tag="in_ini", input_type=File(optional=True), prefix="-ini", doc=InputDocumentation(doc="Use the given TOPP INI file")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="-threads", doc=InputDocumentation(doc="Sets the number of threads allowed to be used by the TOPP tool (default: '1')")), ToolInput(tag="in_write_ini", input_type=File(optional=True), prefix="-write_ini", doc=InputDocumentation(doc="Writes the default configuration file")), ToolInput(tag="in_helphelp", input_type=Boolean(optional=True), prefix="--helphelp", doc=InputDocumentation(doc="Shows all options (including advanced)"))], outputs=[ToolOutput(tag="out_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out", type_hint=File()), doc=OutputDocumentation(doc="Output file in idXML format (valid formats: 'idXML')")), ToolOutput(tag="out_output_directory", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output_directory", type_hint=File()), doc=OutputDocumentation(doc="Output directory for MaRaCluster original consensus output"))], container="quay.io/biocontainers/openms:2.6.0--h4afb90d_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Maraclusteradapter_V0_1_0().translate("wdl")

