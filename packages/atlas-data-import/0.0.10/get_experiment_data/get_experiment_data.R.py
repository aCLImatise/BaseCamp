from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Boolean, Directory, Int

Get_Experiment_Data_R_V0_1_0 = CommandToolBuilder(tool="get_experiment_data.R", base_command=["get_experiment_data.R"], inputs=[ToolInput(tag="in_access_sion_code", input_type=String(optional=True), prefix="--accesssion-code", doc=InputDocumentation(doc="Accession code of the data set to be extracted")), ToolInput(tag="in_config_file", input_type=File(optional=True), prefix="--config-file", doc=InputDocumentation(doc="Config file in .yaml format")), ToolInput(tag="in_matrix_type", input_type=String(optional=True), prefix="--matrix-type", doc=InputDocumentation(doc="Type of expression data to download. Must be one of 'raw', 'filtered', 'TPM' or 'CPM'")), ToolInput(tag="in_decorated_rows", input_type=Boolean(optional=True), prefix="--decorated-rows", doc=InputDocumentation(doc="Should the decorated version of row names be downloaded? Deafult: FALSE")), ToolInput(tag="in_output_dir_name", input_type=Directory(optional=True), prefix="--output-dir-name", doc=InputDocumentation(doc="Name of the output directory containing study data. Default directory name is the provided accession code")), ToolInput(tag="in_use_default_expr_names", input_type=Boolean(optional=True), prefix="--use-default-expr-names", doc=InputDocumentation(doc="Should default (non 10x-type) file names be used for expression data? Default: FALSE")), ToolInput(tag="in_exp_data_dir", input_type=Directory(optional=True), prefix="--exp-data-dir", doc=InputDocumentation(doc="Output name for expression data directory")), ToolInput(tag="in_get_sd_rf", input_type=Boolean(optional=True), prefix="--get-sdrf", doc=InputDocumentation(doc="Should SDRF file(s) be downloaded? Default: FALSE")), ToolInput(tag="in_get_condensed_sd_rf", input_type=Boolean(optional=True), prefix="--get-condensed-sdrf", doc=InputDocumentation(doc="Should condensed SDRF file(s) be downloaded? Default: FALSE")), ToolInput(tag="in_get_idf", input_type=Boolean(optional=True), prefix="--get-idf", doc=InputDocumentation(doc="Should IDF file(s) be downloaded? Default: FALSE")), ToolInput(tag="in_get_exp_design", input_type=Boolean(optional=True), prefix="--get-exp-design", doc=InputDocumentation(doc="Should experimental design file be downloaded? Default: FALSE")), ToolInput(tag="in_get_marker_genes", input_type=Boolean(optional=True), prefix="--get-marker-genes", doc=InputDocumentation(doc="Should marker gene file(s) be downloaded? Default: FALSE")), ToolInput(tag="in_number_of_clusters", input_type=Int(optional=True), prefix="--number-of-clusters", doc=InputDocumentation(doc="Number of clusters for marker gene file")), ToolInput(tag="in_use_full_names", input_type=Boolean(optional=True), prefix="--use-full-names", doc=InputDocumentation(doc="Should non-expression data files be named with full file names? Default: FALSE"))], outputs=[ToolOutput(tag="out_output_dir_name", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output_dir_name", type_hint=File()), doc=OutputDocumentation(doc="Name of the output directory containing study data. Default directory name is the provided accession code")), ToolOutput(tag="out_exp_data_dir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_exp_data_dir", type_hint=File()), doc=OutputDocumentation(doc="Output name for expression data directory"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Get_Experiment_Data_R_V0_1_0().translate("wdl", allow_empty_container=True)

