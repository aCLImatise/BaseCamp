from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String, Int

Gdc_Client_Upload_V0_1_0 = CommandToolBuilder(tool="gdc_client_upload", base_command=["gdc-client", "upload"], inputs=[ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="Enable debug logging. If a failure occurs, the program\nwill stop.")), ToolInput(tag="in_log_file", input_type=File(optional=True), prefix="--log-file", doc=InputDocumentation(doc="Save logs to file. Amount logged affected by --debug")), ToolInput(tag="in_color_off", input_type=Boolean(optional=True), prefix="--color_off", doc=InputDocumentation(doc="Disable colored output")), ToolInput(tag="in_token_file", input_type=File(optional=True), prefix="--token-file", doc=InputDocumentation(doc="GDC API auth token file")), ToolInput(tag="in_project_id", input_type=File(optional=True), prefix="--project-id", doc=InputDocumentation(doc="The project ID that owns the file")), ToolInput(tag="in_path", input_type=File(optional=True), prefix="--path", doc=InputDocumentation(doc="directory path to find file")), ToolInput(tag="in_upload_id", input_type=String(optional=True), prefix="--upload-id", doc=InputDocumentation(doc="Multipart upload id")), ToolInput(tag="in_insecure", input_type=Boolean(optional=True), prefix="--insecure", doc=InputDocumentation(doc="Allow connections to server without certs")), ToolInput(tag="in_server", input_type=String(optional=True), prefix="--server", doc=InputDocumentation(doc="GDC API server address")), ToolInput(tag="in_part_size", input_type=Int(optional=True), prefix="--part-size", doc=InputDocumentation(doc="DEPRECATED in favor of [--upload-part-size]")), ToolInput(tag="in_upload_part_size", input_type=Int(optional=True), prefix="--upload-part-size", doc=InputDocumentation(doc="Part size for multipart upload")), ToolInput(tag="in_n_processes", input_type=Int(optional=True), prefix="--n-processes", doc=InputDocumentation(doc="Number of client connections")), ToolInput(tag="in_disable_multipart", input_type=Boolean(optional=True), prefix="--disable-multipart", doc=InputDocumentation(doc="Disable multipart upload")), ToolInput(tag="in_abort", input_type=Boolean(optional=True), prefix="--abort", doc=InputDocumentation(doc="Abort previous multipart upload")), ToolInput(tag="in_resume", input_type=Boolean(optional=True), prefix="--resume", doc=InputDocumentation(doc="Resume previous multipart upload")), ToolInput(tag="in_delete", input_type=Boolean(optional=True), prefix="--delete", doc=InputDocumentation(doc="Delete an uploaded file")), ToolInput(tag="in_manifest", input_type=String(optional=True), prefix="--manifest", doc=InputDocumentation(doc="Manifest which describes files to be uploaded")), ToolInput(tag="in_config", input_type=File(optional=True), prefix="--config", doc=InputDocumentation(doc="Path to INI-type config file")), ToolInput(tag="in_file_id", input_type=String(), position=0, doc=InputDocumentation(doc="The GDC UUID of the file(s) to upload"))], outputs=[], container="quay.io/biocontainers/gdc-client:1.6.0--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Gdc_Client_Upload_V0_1_0().translate("wdl")

