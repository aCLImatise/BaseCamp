from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, Boolean, Array, String, Directory, Float

Panaroo_V0_1_0 = CommandToolBuilder(tool="panaroo", base_command=["panaroo"], inputs=[ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="number of threads to use (default=1)")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="suppress additional output")), ToolInput(tag="in_input", input_type=Array(t=String(), optional=True), prefix="--input", doc=InputDocumentation(doc="input GFF3 files (usually output from running Prokka).\nCan also take a file listing each gff file line by\nline.")), ToolInput(tag="in_out_dir", input_type=Directory(optional=True), prefix="--out_dir", doc=InputDocumentation(doc="location of an output directory")), ToolInput(tag="in_clean_mode", input_type=String(optional=True), prefix="--clean-mode", doc=InputDocumentation(doc="The stringency mode at which to run panaroo. Must be\none of 'strict','moderate' or 'sensitive'. Each of\nthese modes can be fine tuned using the additional\nparameters in the 'Graph correction' section.\nstrict:\nRequires fairly strong evidence (present in  at least\n5% of genomes) to keep likely contaminant genes. Will\nremove genes that are refound more often than they were\ncalled originally.\nmoderate:\nRequires moderate evidence (present in  at least 1% of\ngenomes) to keep likely contaminant genes. Keeps genes\nthat are refound more often than they were called\noriginally.\nsensitive:\nDoes not delete any genes and only performes merge and\nrefinding operations. Useful if rare plasmids are of\ninterest as these are often hard to disguish from\ncontamination. Results will likely include  higher\nnumber of spurious annotations.")), ToolInput(tag="in_remove_invalid_genes", input_type=Boolean(optional=True), prefix="--remove-invalid-genes", doc=InputDocumentation(doc="removes annotations that do not conform to the\nexpected Prokka format such as those including\npremature stop codons.")), ToolInput(tag="in_threshold", input_type=Float(optional=True), prefix="--threshold", doc=InputDocumentation(doc="sequence identity threshold (default=0.98)")), ToolInput(tag="in_family_threshold", input_type=Float(optional=True), prefix="--family_threshold", doc=InputDocumentation(doc="protein family sequence identity threshold\n(default=0.7)")), ToolInput(tag="in_len_dif_percent", input_type=Int(optional=True), prefix="--len_dif_percent", doc=InputDocumentation(doc="length difference cutoff (default=0.98)")), ToolInput(tag="in_merge_paralogs", input_type=Boolean(optional=True), prefix="--merge_paralogs", doc=InputDocumentation(doc="don't split paralogs")), ToolInput(tag="in_search_radius", input_type=String(optional=True), prefix="--search_radius", doc=InputDocumentation(doc="the distance in nucleotides surronding the neighbour\nof an accessory gene in which to search for it")), ToolInput(tag="in_re_find_prop_match", input_type=String(optional=True), prefix="--refind_prop_match", doc=InputDocumentation(doc="the proportion of an accessory gene that must be found\nin order to consider it a match")), ToolInput(tag="in_min_trailing_support", input_type=Int(optional=True), prefix="--min_trailing_support", doc=InputDocumentation(doc="minimum cluster size to keep a gene called at the end\nof a contig")), ToolInput(tag="in_trailing_recursive", input_type=Int(optional=True), prefix="--trailing_recursive", doc=InputDocumentation(doc="number of times to perform recursive trimming of low\nsupport nodes near the end of contigs")), ToolInput(tag="in_edge_support_threshold", input_type=String(optional=True), prefix="--edge_support_threshold", doc=InputDocumentation(doc="minimum support required to keep an edge that has been\nflagged as a possible mis-assembly")), ToolInput(tag="in_length_outlier_support_proportion", input_type=Int(optional=True), prefix="--length_outlier_support_proportion", doc=InputDocumentation(doc="proportion of genomes supporting a gene with a length\nmore than 1.5x outside the interquatile range for\ngenes in the same cluster (default=0.01). Genes\nfailing this test will be re-annotated at the shorter\nlength")), ToolInput(tag="in_remove_by_consensus", input_type=String(optional=True), prefix="--remove_by_consensus", doc=InputDocumentation(doc="if a gene is called in the same region with similar\nsequence a minority of the time, remove it. One of\n'True' or 'False'")), ToolInput(tag="in_high_var_flag", input_type=Int(optional=True), prefix="--high_var_flag", doc=InputDocumentation(doc="minimum number of nested cycles to call a highly\nvariable gene region (default = 5).")), ToolInput(tag="in_min_edge_support_sv", input_type=Int(optional=True), prefix="--min_edge_support_sv", doc=InputDocumentation(doc="minimum edge support required to call structural\nvariants in the presence/absence sv file")), ToolInput(tag="in_all_seq_in_graph", input_type=Boolean(optional=True), prefix="--all_seq_in_graph", doc=InputDocumentation(doc="Retains all DNA sequence for each gene cluster in the\ngraph output. Off by default as it uses a large amount\nof space.")), ToolInput(tag="in_no_clean_edges", input_type=Boolean(optional=True), prefix="--no_clean_edges", doc=InputDocumentation(doc="Turn off edge filtering in the final output graph.")), ToolInput(tag="in_alignment", input_type=String(optional=True), prefix="--alignment", doc=InputDocumentation(doc="Output alignments of core genes or all genes. Options\nare 'core' and 'pan'. Default: 'None'")), ToolInput(tag="in_aligner", input_type=String(optional=True), prefix="--aligner", doc=InputDocumentation(doc="Specify an aligner. Options:'prank', 'clustal', and\ndefault: 'mafft'")), ToolInput(tag="in_core_threshold", input_type=Float(optional=True), prefix="--core_threshold", doc=InputDocumentation(doc="Core-genome sample threshold (default=0.95)\n"))], outputs=[ToolOutput(tag="out_out_dir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_out_dir", type_hint=File()), doc=OutputDocumentation(doc="location of an output directory"))], container="quay.io/biocontainers/panaroo:1.2.7--pyhdfd78af_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Panaroo_V0_1_0().translate("wdl")

