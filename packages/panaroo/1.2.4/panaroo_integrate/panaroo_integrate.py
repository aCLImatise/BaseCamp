from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, Boolean, Directory, File, Float, String

Panaroo_Integrate_V0_1_0 = CommandToolBuilder(tool="panaroo_integrate", base_command=["panaroo-integrate"], inputs=[ToolInput(tag="in_min_edge_support_sv", input_type=Int(optional=True), prefix="--min_edge_support_sv", doc=InputDocumentation(doc="minimum edge support required to call structural\nvariants in the presence/absence csv file\n(default=max(2, 0.01*n_samples))")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="number of threads to use (default=1)")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="suppress additional output")), ToolInput(tag="in_dirty", input_type=Directory(optional=True), prefix="--dirty", doc=InputDocumentation(doc="keep temporary directory containing cluster files and\ncdhit output")), ToolInput(tag="in_input_dir", input_type=Directory(optional=True), prefix="--input_dir", doc=InputDocumentation(doc="input directory for gml of pre-existing panaroo output")), ToolInput(tag="in_input_gff", input_type=File(optional=True), prefix="--input_gff", doc=InputDocumentation(doc="input gff file of new genome to be integrated")), ToolInput(tag="in_out_dir", input_type=Directory(optional=True), prefix="--out_dir", doc=InputDocumentation(doc="location of a new output directory")), ToolInput(tag="in_remove_invalid_genes", input_type=Boolean(optional=True), prefix="--remove-invalid-genes", doc=InputDocumentation(doc="removes annotations that do not conform to the\nexpected Prokka format such as those including\npremature stop codons.")), ToolInput(tag="in_threshold", input_type=Float(optional=True), prefix="--threshold", doc=InputDocumentation(doc="sequence identity threshold (default=0.95)")), ToolInput(tag="in_family_threshold", input_type=Float(optional=True), prefix="--family_threshold", doc=InputDocumentation(doc="protein family sequence identity threshold\n(default=0.7)")), ToolInput(tag="in_len_dif_percent", input_type=Int(optional=True), prefix="--len_dif_percent", doc=InputDocumentation(doc="length difference cutoff (default=0.95)")), ToolInput(tag="in_merge_paralogs", input_type=Boolean(optional=True), prefix="--merge_paralogs", doc=InputDocumentation(doc="don't split paralogs")), ToolInput(tag="in_length_outlier_support_proportion", input_type=Int(optional=True), prefix="--length_outlier_support_proportion", doc=InputDocumentation(doc="proportion of genomes supporting a gene with a length\nmore than 1.5x outside the interquatile range for\ngenes in the same cluster (default=0.01). Genes\nfailing this test will be re-annotated at the shorter\nlength")), ToolInput(tag="in_alignment", input_type=String(optional=True), prefix="--alignment", doc=InputDocumentation(doc="Output alignments of core genes or all genes. Options\nare 'core' and 'pan'. Default: 'None'")), ToolInput(tag="in_aligner", input_type=String(optional=True), prefix="--aligner", doc=InputDocumentation(doc="Specify an aligner. Options:'prank', 'clustal', and\ndefault: 'mafft'")), ToolInput(tag="in_core_threshold", input_type=Float(optional=True), prefix="--core_threshold", doc=InputDocumentation(doc="Core-genome sample threshold (default=0.95)")), ToolInput(tag="in_all_seq_in_graph", input_type=Boolean(optional=True), prefix="--all_seq_in_graph", doc=InputDocumentation(doc="Retains all DNA sequence for each gene cluster in the\ngraph output. Off by default as it uses a large amount\nof space.\n")), ToolInput(tag="in_pana_roo_integrate", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_dirty", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_dirty", type_hint=File()), doc=OutputDocumentation(doc="keep temporary directory containing cluster files and\ncdhit output")), ToolOutput(tag="out_out_dir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_out_dir", type_hint=File()), doc=OutputDocumentation(doc="location of a new output directory"))], container="quay.io/biocontainers/panaroo:1.2.4--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Panaroo_Integrate_V0_1_0().translate("wdl")

