from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, File

Lastdb5_V0_1_0 = CommandToolBuilder(tool="lastdb5", base_command=["lastdb5"], inputs=[ToolInput(tag="in_interpret_sequences_proteins", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc=": interpret the sequences as proteins")), ToolInput(tag="in_softmask_lowercase_letters", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc=": soft-mask lowercase letters (in reference *and* query sequences)")), ToolInput(tag="in_seeding_scheme_default", input_type=Boolean(optional=True), prefix="-u", doc=InputDocumentation(doc=": seeding scheme (default: YASS for DNA, else exact-match seeds)")), ToolInput(tag="in_number_parallel_threads", input_type=Boolean(optional=True), prefix="-P", doc=InputDocumentation(doc=": number of parallel threads (default: 1)")), ToolInput(tag="in_lowercase_simplesequence_options", input_type=Boolean(optional=True), prefix="-R", doc=InputDocumentation(doc=": lowercase & simple-sequence options (default: 03 for -q, else 01)")), ToolInput(tag="in_use_initial_matches", input_type=Boolean(optional=True), prefix="-w", doc=InputDocumentation(doc=": use initial matches starting at every w-th position in each sequence (1)")), ToolInput(tag="in_use_positions_sliding", input_type=Boolean(optional=True), prefix="-W", doc=InputDocumentation(doc=": use 'minimum' positions in sliding windows of W consecutive positions (1)")), ToolInput(tag="in_strand_reverse_forward", input_type=Boolean(optional=True), prefix="-S", doc=InputDocumentation(doc=": strand: 0=reverse, 1=forward, 2=both (1)")), ToolInput(tag="in_volume_size_unlimited", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc=": volume size (unlimited)")), ToolInput(tag="in_input_format_fastx", input_type=Boolean(optional=True), prefix="-Q", doc=InputDocumentation(doc=": input format: fastx, keep, sanger, solexa, illumina (default=fasta)")), ToolInput(tag="in_interpret_sequences_and", input_type=Boolean(optional=True), prefix="-q", doc=InputDocumentation(doc=": interpret the sequences as proteins and append */STOP")), ToolInput(tag="in_seed_patterns_match", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc=": seed patterns (1=match, 0=anything, @=transition)")), ToolInput(tag="in_dna_seed_patterns", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc=": DNA seed patterns (N=match, n=anything, R=purine match, etc.)")), ToolInput(tag="in__userdefined_alphabet", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc=": user-defined alphabet")), ToolInput(tag="in_minimum_limit_initial", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc=": minimum limit on initial matches per query position (0)")), ToolInput(tag="in_maximum_length_buckets", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc=": maximum length for buckets")), ToolInput(tag="in_use_bucket_length", input_type=Boolean(optional=True), prefix="-B", doc=InputDocumentation(doc=": use max bucket length with memory <= (memory for stored positions) / B (4)")), ToolInput(tag="in_child_table_type", input_type=Boolean(optional=True), prefix="-C", doc=InputDocumentation(doc=": child table type: 0=none, 1=byte-size, 2=short-size, 3=full (0)")), ToolInput(tag="in_just_count_sequences", input_type=Boolean(optional=True), prefix="-x", doc=InputDocumentation(doc=": just count sequences and letters")), ToolInput(tag="in_be_verbose_write", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc=": be verbose: write messages about what lastdb is doing")), ToolInput(tag="in_output_name", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_fast_a_sequence_file", input_type=File(), position=1, doc=InputDocumentation(doc=""))], outputs=[], container="quay.io/biocontainers/last:1219--h2e03b76_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Lastdb5_V0_1_0().translate("wdl")

