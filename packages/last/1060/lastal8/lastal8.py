from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, File

Lastal8_V0_1_0 = CommandToolBuilder(tool="lastal8", base_command=["lastal8"], inputs=[ToolInput(tag="in_be_verbose_write", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc=": be verbose: write messages about what lastal is doing")), ToolInput(tag="in_output_format_tab", input_type=Boolean(optional=True), prefix="-f", doc=InputDocumentation(doc=": output format: TAB, MAF, BlastTab, BlastTab+ (default=MAF)")), ToolInput(tag="in_query_letters_e", input_type=Boolean(optional=True), prefix="-D", doc=InputDocumentation(doc=": query letters per random alignment (1e+06)")), ToolInput(tag="in_maximum_expected_alignments", input_type=Boolean(optional=True), prefix="-E", doc=InputDocumentation(doc=": maximum expected alignments per square giga (1e+18/D/refSize/numOfStrands)")), ToolInput(tag="in_match_score_m", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc=": match score   (2 if -M, else  6 if 0<Q<5, else 1 if DNA)")), ToolInput(tag="in_mismatch_cost_m", input_type=Boolean(optional=True), prefix="-q", doc=InputDocumentation(doc=": mismatch cost (3 if -M, else 18 if 0<Q<5, else 1 if DNA)")), ToolInput(tag="in_matchmismatch_score_matrix", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc=": match/mismatch score matrix (protein-protein: BL62, DNA-protein: BL80)")), ToolInput(tag="in_nx_ambiguous_sequence", input_type=Boolean(optional=True), prefix="-X", doc=InputDocumentation(doc=": N/X is ambiguous in: 0=neither sequence, 1=reference, 2=query, 3=both (0)")), ToolInput(tag="in_gap_existence_cost", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc=": gap existence cost (DNA: 7, protein: 11, 0<Q<5: 21)")), ToolInput(tag="in_gap_extension_cost", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc=": gap extension cost (DNA: 1, protein:  2, 0<Q<5:  9)")), ToolInput(tag="in_insertion_existence_cost", input_type=Boolean(optional=True), prefix="-A", doc=InputDocumentation(doc=": insertion existence cost (a)")), ToolInput(tag="in_insertion_extension_cost", input_type=Boolean(optional=True), prefix="-B", doc=InputDocumentation(doc=": insertion extension cost (b)")), ToolInput(tag="in_unaligned_residue_pair", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc=": unaligned residue pair cost (off)")), ToolInput(tag="in__frameshift_cost", input_type=Boolean(optional=True), prefix="-F", doc=InputDocumentation(doc=": frameshift cost (off)")), ToolInput(tag="in_maximum_score_drop_preliminary", input_type=Boolean(optional=True), prefix="-x", doc=InputDocumentation(doc=": maximum score drop for preliminary gapped alignments (z)")), ToolInput(tag="in_maximum_score_drop_gapless", input_type=Boolean(optional=True), prefix="-y", doc=InputDocumentation(doc=": maximum score drop for gapless alignments (min[t*10, x])")), ToolInput(tag="in_maximum_score_drop_final", input_type=Boolean(optional=True), prefix="-z", doc=InputDocumentation(doc=": maximum score drop for final gapped alignments (e-1)")), ToolInput(tag="in_minimum_score_gapless", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc=": minimum score for gapless alignments (min[e, 2500/n query letters per hit])")), ToolInput(tag="in_minimum_score_gapped", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc=": minimum score for gapped alignments")), ToolInput(tag="in_maximum_initial_matches", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc=": maximum initial matches per query position (10)")), ToolInput(tag="in_minimum_length_initial", input_type=Boolean(optional=True), prefix="-l", doc=InputDocumentation(doc=": minimum length for initial matches (1)")), ToolInput(tag="in_maximum_length_initial", input_type=Boolean(optional=True), prefix="-L", doc=InputDocumentation(doc=": maximum length for initial matches (infinity)")), ToolInput(tag="in_use_initial_matches", input_type=Boolean(optional=True), prefix="-k", doc=InputDocumentation(doc=": use initial matches starting at every k-th position in each query (1)")), ToolInput(tag="in_use_positions_sliding", input_type=Boolean(optional=True), prefix="-W", doc=InputDocumentation(doc=": use 'minimum' positions in sliding windows of W consecutive positions")), ToolInput(tag="in_strand_reverse_forward", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc=": strand: 0=reverse, 1=forward, 2=both (2 for DNA, 1 for protein)")), ToolInput(tag="in_score_matrix_applies", input_type=Boolean(optional=True), prefix="-S", doc=InputDocumentation(doc=": score matrix applies to forward strand of: 0=reference, 1=query (0)")), ToolInput(tag="in_omit_alignments_lies", input_type=Boolean(optional=True), prefix="-K", doc=InputDocumentation(doc=": omit alignments whose query range lies in >= K others with > score (off)")), ToolInput(tag="in_omit_gapless_alignments", input_type=Boolean(optional=True), prefix="-C", doc=InputDocumentation(doc=": omit gapless alignments in >= C others with > score-per-length (off)")), ToolInput(tag="in_number_parallel_threads", input_type=Boolean(optional=True), prefix="-P", doc=InputDocumentation(doc=": number of parallel threads (1)")), ToolInput(tag="in_query_batch_size", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc=": query batch size (8 KiB, unless there is > 1 thread or lastdb volume)")), ToolInput(tag="in_find_minimumdifference_alignments", input_type=Boolean(optional=True), prefix="-M", doc=InputDocumentation(doc=": find minimum-difference alignments (faster but cruder)")), ToolInput(tag="in_type_alignment_local", input_type=Boolean(optional=True), prefix="-T", doc=InputDocumentation(doc=": type of alignment: 0=local, 1=overlap (0)")), ToolInput(tag="in_maximum_gapless_alignments", input_type=Boolean(optional=True), prefix="-n", doc=InputDocumentation(doc=": maximum gapless alignments per query position (infinity if m=0, else m)")), ToolInput(tag="in_stop_first_n", input_type=Boolean(optional=True), prefix="-N", doc=InputDocumentation(doc=": stop after the first N alignments per query strand")), ToolInput(tag="in_repeatmarking_options_same", input_type=Boolean(optional=True), prefix="-R", doc=InputDocumentation(doc=": repeat-marking options (the same as was used for lastdb)")), ToolInput(tag="in_mask_lowercase_extensions", input_type=Boolean(optional=True), prefix="-u", doc=InputDocumentation(doc=": mask lowercase during extensions: 0=never, 1=gapless,\n2=gapless+postmask, 3=always (2 if lastdb -c and Q<5, else 0)")), ToolInput(tag="in_suppress_repeats_distance", input_type=Boolean(optional=True), prefix="-w", doc=InputDocumentation(doc=": suppress repeats inside exact matches, offset by <= this distance (1000)")), ToolInput(tag="in__genetic_code", input_type=Boolean(optional=True), prefix="-G", doc=InputDocumentation(doc=": genetic code (1)")), ToolInput(tag="in_calculating_probabilities_lambda", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc=": 'temperature' for calculating probabilities (1/lambda)")), ToolInput(tag="in_parameter_gammacentroid_lama", input_type=Boolean(optional=True), prefix="-g", doc=InputDocumentation(doc=": 'gamma' parameter for gamma-centroid and LAMA (1)")), ToolInput(tag="in_output_type_match", input_type=Boolean(optional=True), prefix="-j", doc=InputDocumentation(doc=": output type: 0=match counts, 1=gapless, 2=redundant gapped, 3=gapped,\n4=column ambiguity estimates, 5=gamma-centroid, 6=LAMA,\n7=expected counts (3)")), ToolInput(tag="in_input_format_fasta", input_type=Boolean(optional=True), prefix="-Q", doc=InputDocumentation(doc=": input format: 0=fasta or fastq-ignore, 1=fastq-sanger, 2=fastq-solexa,\n3=fastq-illumina, 4=prb, 5=PSSM (fasta)")), ToolInput(tag="in_last_db_name", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_fast_a_sequence_file", input_type=File(), position=1, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Lastal8_V0_1_0().translate("wdl", allow_empty_container=True)

