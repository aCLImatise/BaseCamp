version 1.0

task Periodicity {
  input {
    File? input_files_bam
    Directory? an_not_dir
    File? coordinate_file
    String? ot_put_prefix
    Int? left_length
    Int? right_length
    String? select_trans_list
    String? id_type
  }
  command <<<
    Periodicity \
      ~{if defined(input_files_bam) then ("--input " +  '"' + input_files_bam + '"') else ""} \
      ~{if defined(an_not_dir) then ("--annot_dir " +  '"' + an_not_dir + '"') else ""} \
      ~{if defined(coordinate_file) then ("--coordinateFile " +  '"' + coordinate_file + '"') else ""} \
      ~{if defined(ot_put_prefix) then ("--otput_prefix " +  '"' + ot_put_prefix + '"') else ""} \
      ~{if defined(left_length) then ("--left_length " +  '"' + left_length + '"') else ""} \
      ~{if defined(right_length) then ("--right_length " +  '"' + right_length + '"') else ""} \
      ~{if defined(select_trans_list) then ("--select_trans_list " +  '"' + select_trans_list + '"') else ""} \
      ~{if defined(id_type) then ("--id-type " +  '"' + id_type + '"') else ""}
  >>>
  runtime {
    docker: "quay.io/biocontainers/ribominer:0.2.3.1--pyh3252c3a_0"
  }
  parameter_meta {
    input_files_bam: "Input file(s) in bam format."
    an_not_dir: "transcripts annotation directory, generated by\\nprepare_transcripts, a function of RiboCode."
    coordinate_file: "The file should contain the coordinate of start and\\nstop codon. Generated by\\nOutputTranscriptInfo.py.[required]"
    ot_put_prefix: "Prefix of output files.[required]"
    left_length: "The left range of read length we will consider."
    right_length: "The right range of read length we will consider."
    select_trans_list: "Selected transcript list used for metagene\\nanalysis.This files requires the first column must be\\nthe transcript ID  with a column name."
    id_type: "define the id type users input. the default is\\ntranscript id, if not, will be transformed into\\ntranscript id. transcript_id=default\\n"
  }
  output {
    File out_stdout = stdout()
  }
}