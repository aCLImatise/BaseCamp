!Command
command:
- ProcessPausingScore
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -i
  - --input
  description: "The input files are pausing scores generated by\nPausingScore.py.\
    \ All files are separated by comma.  Or\na data_mean_score with three columns:\
    \ col0--control\npausing score;col1--treated pausing score;col2--ratio.\nand its\
    \ index must be motifs"
  args: !SimpleFlagArg
    name: SCORE_FILES
- !Flag
  optional: true
  synonyms:
  - -o
  - --output
  description: Prefix of output files.[required]
  args: !SimpleFlagArg
    name: OUTPUT_PREFIX
- !Flag
  optional: true
  synonyms:
  - -g
  - --group
  description: "Group name of each group separated by comma. e.g. 'si-\ncontrol,si-eIF3e'"
  args: !SimpleFlagArg
    name: GROUP_NAME
- !Flag
  optional: true
  synonyms:
  - -r
  - --replicate
  description: "Replicate name of each group separated by comma. e.g.\n'si_3e_1_80S,si_3e_2_80S__si_cttl_1_80S,si_ctrl_2_80S'"
  args: !SimpleFlagArg
    name: REPLICATE_NAME
- !Flag
  optional: true
  synonyms:
  - --pausing_score_filter
  description: "The filter criteria for pausing score on treat\nsamples.default=10"
  args: !SimpleFlagArg
    name: PAUSING_SCORE_FILTER
- !Flag
  optional: true
  synonyms:
  - --ratio_filter
  description: The filter criteria for ratio values. default=2
  args: !SimpleFlagArg
    name: RATIO_FILTER
- !Flag
  optional: true
  synonyms:
  - --mode
  description: "The input is the raw density generated by\nPausingScore.py or a file\
    \ processed by\nProcessPusingScore.py with three columns---[ctrl0\ntreat1 ratio2].\
    \ You can chose raw or ratio.\ndefault=raw\n"
  args: !SimpleFlagArg
    name: INPUT_MODE
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - --version
  description: show program's version number and exit
  args: !EmptyFlagArg {}
help_text: "Usage: python ProcessPausingScore [options]\n\nprocess the files generated\
  \ by calculate_pausing_score.py. There only exists two groups,\nthe first one is\
  \ the control groups and the secondary group is the treated groups. e.g -g si-ctrl,si-eIF3e\n\
  1) load those files\n2) merge those files\n3) calculate the mean pausing scores\
  \ from different replicates\n4) output a position weight matrix used for motif logo\n\
  input: directory where the puasing score file exist which generated by calculate_pausing_score.py\n\
  .....: a data mean score file requires:\n1) index: motifs\n2) col0: pausing score\
  \ of control groups\n3) col1: pausing score of treat groups\n4) col2: ratio values\
  \ using col1 divided by col0\noutput:\nposition weight matrix\n\n\n\nOptions:\n\
  \  --version             show program's version number and exit\n  -h, --help  \
  \          show this help message and exit\n  -i SCORE_FILES, --input=SCORE_FILES\n\
  \                        The input files are pausing scores generated by\n     \
  \                   PausingScore.py. All files are separated by comma.  Or\n   \
  \                     a data_mean_score with three columns: col0--control\n    \
  \                    pausing score;col1--treated pausing score;col2--ratio.\n  \
  \                      and its index must be motifs\n  -o OUTPUT_PREFIX, --output=OUTPUT_PREFIX\n\
  \                        Prefix of output files.[required]\n  -g GROUP_NAME, --group=GROUP_NAME\n\
  \                        Group name of each group separated by comma. e.g. 'si-\n\
  \                        control,si-eIF3e'\n  -r REPLICATE_NAME, --replicate=REPLICATE_NAME\n\
  \                        Replicate name of each group separated by comma. e.g.\n\
  \                        'si_3e_1_80S,si_3e_2_80S__si_cttl_1_80S,si_ctrl_2_80S'\n\
  \  --pausing_score_filter=PAUSING_SCORE_FILTER\n                        The filter\
  \ criteria for pausing score on treat\n                        samples.default=10\n\
  \  --ratio_filter=RATIO_FILTER\n                        The filter criteria for\
  \ ratio values. default=2\n  --mode=INPUT_MODE     The input is the raw density\
  \ generated by\n                        PausingScore.py or a file processed by\n\
  \                        ProcessPusingScore.py with three columns---[ctrl0\n   \
  \                     treat1 ratio2]. You can chose raw or ratio.\n            \
  \            default=raw\n"
generated_using:
- --help
docker_image: quay.io/biocontainers/ribominer:0.2.3.1--pyh3252c3a_0
