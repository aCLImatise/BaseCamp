from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, String, File

Processpausingscore_V0_1_0 = CommandToolBuilder(tool="ProcessPausingScore", base_command=["ProcessPausingScore"], inputs=[ToolInput(tag="in_input", input_type=Int(optional=True), prefix="--input", doc=InputDocumentation(doc="The input files are pausing scores generated by\nPausingScore.py. All files are separated by comma.  Or\na data_mean_score with three columns: col0--control\npausing score;col1--treated pausing score;col2--ratio.\nand its index must be motifs")), ToolInput(tag="in_output", input_type=String(optional=True), prefix="--output", doc=InputDocumentation(doc="Prefix of output files.[required]")), ToolInput(tag="in_group", input_type=Int(optional=True), prefix="--group", doc=InputDocumentation(doc="Group name of each group separated by comma. e.g. 'si-\ncontrol,si-eIF3e'")), ToolInput(tag="in_replicate", input_type=Int(optional=True), prefix="--replicate", doc=InputDocumentation(doc="Replicate name of each group separated by comma. e.g.\n'si_3e_1_80S,si_3e_2_80S__si_cttl_1_80S,si_ctrl_2_80S'")), ToolInput(tag="in_pausing_score_filter", input_type=Int(optional=True), prefix="--pausing_score_filter", doc=InputDocumentation(doc="The filter criteria for pausing score on treat\nsamples.default=10")), ToolInput(tag="in_ratio_filter", input_type=Int(optional=True), prefix="--ratio_filter", doc=InputDocumentation(doc="The filter criteria for ratio values. default=2")), ToolInput(tag="in_mode", input_type=File(optional=True), prefix="--mode", doc=InputDocumentation(doc="The input is the raw density generated by\nPausingScore.py or a file processed by\nProcessPusingScore.py with three columns---[ctrl0\ntreat1 ratio2]. You can chose raw or ratio.\ndefault=raw\n"))], outputs=[], container="quay.io/biocontainers/ribominer:0.2.3.1--pyh3252c3a_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Processpausingscore_V0_1_0().translate("wdl")

