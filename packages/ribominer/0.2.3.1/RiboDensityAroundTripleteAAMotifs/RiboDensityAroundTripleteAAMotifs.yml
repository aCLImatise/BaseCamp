!Command
command:
- RiboDensityAroundTripleteAAMotifs
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -f
  - --bamListFile
  description: "Bam file list, containing 4 columns.Namely\nbamFiles,readLength, offSet,\
    \ bamLegend. '-f' and '-i,\n-r, -s, -t' parameters are mutually\nexclusive.default=none."
  args: !SimpleFlagArg
    name: BAMLISTFILE
- !Flag
  optional: true
  synonyms:
  - -i
  - --input
  description: "Input file(s) in bam format. All files should be split\nby comma e.g.\
    \ 1.bam,2.bam,3.bam[required]. '-i' and\n'-f' are mutually exclusive. default=none"
  args: !SimpleFlagArg
    name: BAM_FILES
- !Flag
  optional: true
  synonyms:
  - -c
  - --coordinateFile
  description: "The file should contain the coordinate of start and\nstop codon. Generated\
    \ by\nOutputTranscriptInfo.py.[required]"
  args: !SimpleFlagArg
    name: COORFILE
- !Flag
  optional: true
  synonyms:
  - -o
  - --otput_prefix
  description: Prefix of output files.[required]
  args: !SimpleFlagArg
    name: OUTPUT_PREFIX
- !Flag
  optional: true
  synonyms:
  - -r
  - --specific_reads_length
  description: "Specific the lenght to do analysis, comma split. e.g.\n'28,29,30'.If\
    \ use all length set 'All'. Bam files diff\nlength select split by '_' e.g. '28,29,30_ALL_27,28'\n\
    [required]. '-r' and '-f' are mutually exclusive."
  args: !SimpleFlagArg
    name: READ_LENGTH
- !Flag
  optional: true
  synonyms:
  - -s
  - --offset
  description: "Specific the offset corresponding to read length,\ncomma split. e.g.\
    \ '12,13,13'. No offset set 0. Bam\nfiles diff offset select split by '_' e.g.\n\
    '12,13,13_0_12,12' [required]. '-s' and '-f' are\nmutually exclusive."
  args: !SimpleFlagArg
    name: READ_OFFSET
- !Flag
  optional: true
  synonyms:
  - -t
  - --bam_file_legend
  description: "The legend of each bam files, comma split. e.g.\n'condition1,condition2,condition3'\
    \ [required]. '-t'\nand '-f' are mutually exclusive."
  args: !SimpleFlagArg
    name: BAM_FILE_LEGEND
- !Flag
  optional: true
  synonyms:
  - -M
  - --filter_mode
  description: "Mode for filtering transcripts. Either 'counts' or\n'RPKM'. default=counts."
  args: !SimpleFlagArg
    name: MODE
- !Flag
  optional: true
  synonyms:
  - -S
  - --select_trans_list
  description: "Selected transcript list used for metagene\nanalysis.This files requires\
    \ the first column must be\nthe transcript ID  with a column name."
  args: !SimpleFlagArg
    name: IN_SELECTTRANS
- !Flag
  optional: true
  synonyms:
  - --type1
  description: "The first motif you want to find. It must be a string\nwith length\
    \ equal to 2. e.g. PP,DD,KK motifs.\ndefault=none."
  args: !SimpleFlagArg
    name: TYPE1
- !Flag
  optional: true
  synonyms:
  - --type2
  description: "The second motif you want to find. It must be a string\nwith length\
    \ equal to 3. e.g. PPP,DDD,KKK motifs.\ndefault=none."
  args: !SimpleFlagArg
    name: TYPE2
- !Flag
  optional: true
  synonyms:
  - --motifList1
  description: "The first motif list you want to find. Mutually\nexclusive with '--type1'\
    \ '--type2'. default=none"
  args: !SimpleFlagArg
    name: MOTIFLIST1
- !Flag
  optional: true
  synonyms:
  - --motifList2
  description: "The second motif list you want to find. Mutually\nexclusive with '--type1'\
    \ '--type2'. default=none"
  args: !SimpleFlagArg
    name: MOTIFLIST2
- !Flag
  optional: true
  synonyms:
  - -l
  - --minimum_cds_codon
  description: "Minimum CDS codon (codon unit). CDS codons smaller\nthan \"minimum_cds_codon\"\
    \ will be skipped. default=150"
  args: !SimpleFlagArg
    name: MIN_CDS_CODON
- !Flag
  optional: true
  synonyms:
  - -n
  - --minimum_cds_counts
  description: "Minimum CDS counts. CDS counts smaller than\n\"min_cds_counts\" will\
    \ be skipped. default=64"
  args: !SimpleFlagArg
    name: MIN_CDS_COUNTS
- !Flag
  optional: true
  synonyms:
  - -F
  - --transcript_fasta
  description: "Input the transcript fasta file used for motif\ndetection and codon\
    \ density calculation. cds sequences\nrelated with coorFile (longest.trans.info.txt)\n\
    generated by GetProteinSequence.py"
  args: !SimpleFlagArg
    name: TRANSCRIPT_FASTA
- !Flag
  optional: true
  synonyms:
  - --table
  description: "Which genetic code to use. default is the standard\ncode.table = 1,\
    \ is the standard table, ref: https://ww\nw.ncbi.nlm.nih.gov/Taxonomy/Utils/wprintgc.cgi"
  args: !SimpleFlagArg
    name: GENETICCODE
- !Flag
  optional: true
  synonyms:
  - --id-type
  description: "define the id type users input. the default is\ntranscript id, if\
    \ not, will be transformed into\ntranscript id. default=transcript_id\n"
  args: !SimpleFlagArg
    name: ID_TYPE
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - --version
  description: show program's version number and exit
  args: !EmptyFlagArg {}
help_text: "Usage: python RiboDensityAroundTripleteAAMotifs [options]\n\nOptions:\n\
  \  --version             show program's version number and exit\n  -h, --help  \
  \          show this help message and exit\n  -f BAMLISTFILE, --bamListFile=BAMLISTFILE\n\
  \                        Bam file list, containing 4 columns.Namely\n          \
  \              bamFiles,readLength, offSet, bamLegend. '-f' and '-i,\n         \
  \               -r, -s, -t' parameters are mutually\n                        exclusive.default=none.\n\
  \  -i BAM_FILES, --input=BAM_FILES\n                        Input file(s) in bam\
  \ format. All files should be split\n                        by comma e.g. 1.bam,2.bam,3.bam[required].\
  \ '-i' and\n                        '-f' are mutually exclusive. default=none\n\
  \  -c COORFILE, --coordinateFile=COORFILE\n                        The file should\
  \ contain the coordinate of start and\n                        stop codon. Generated\
  \ by\n                        OutputTranscriptInfo.py.[required]\n  -o OUTPUT_PREFIX,\
  \ --otput_prefix=OUTPUT_PREFIX\n                        Prefix of output files.[required]\n\
  \  -r READ_LENGTH, --specific_reads_length=READ_LENGTH\n                       \
  \ Specific the lenght to do analysis, comma split. e.g.\n                      \
  \  '28,29,30'.If use all length set 'All'. Bam files diff\n                    \
  \    length select split by '_' e.g. '28,29,30_ALL_27,28'\n                    \
  \    [required]. '-r' and '-f' are mutually exclusive.\n  -s READ_OFFSET, --offset=READ_OFFSET\n\
  \                        Specific the offset corresponding to read length,\n   \
  \                     comma split. e.g. '12,13,13'. No offset set 0. Bam\n     \
  \                   files diff offset select split by '_' e.g.\n               \
  \         '12,13,13_0_12,12' [required]. '-s' and '-f' are\n                   \
  \     mutually exclusive.\n  -t BAM_FILE_LEGEND, --bam_file_legend=BAM_FILE_LEGEND\n\
  \                        The legend of each bam files, comma split. e.g.\n     \
  \                   'condition1,condition2,condition3' [required]. '-t'\n      \
  \                  and '-f' are mutually exclusive.\n  -M MODE, --filter_mode=MODE\n\
  \                        Mode for filtering transcripts. Either 'counts' or\n  \
  \                      'RPKM'. default=counts.\n  -S IN_SELECTTRANS, --select_trans_list=IN_SELECTTRANS\n\
  \                        Selected transcript list used for metagene\n          \
  \              analysis.This files requires the first column must be\n         \
  \               the transcript ID  with a column name.\n  --type1=TYPE1        \
  \ The first motif you want to find. It must be a string\n                      \
  \  with length equal to 2. e.g. PP,DD,KK motifs.\n                        default=none.\n\
  \  --type2=TYPE2         The second motif you want to find. It must be a string\n\
  \                        with length equal to 3. e.g. PPP,DDD,KKK motifs.\n    \
  \                    default=none.\n  --motifList1=MOTIFLIST1\n                \
  \        The first motif list you want to find. Mutually\n                     \
  \   exclusive with '--type1' '--type2'. default=none\n  --motifList2=MOTIFLIST2\n\
  \                        The second motif list you want to find. Mutually\n    \
  \                    exclusive with '--type1' '--type2'. default=none\n  -l MIN_CDS_CODON,\
  \ --minimum_cds_codon=MIN_CDS_CODON\n                        Minimum CDS codon (codon\
  \ unit). CDS codons smaller\n                        than \"minimum_cds_codon\"\
  \ will be skipped. default=150\n  -n MIN_CDS_COUNTS, --minimum_cds_counts=MIN_CDS_COUNTS\n\
  \                        Minimum CDS counts. CDS counts smaller than\n         \
  \               \"min_cds_counts\" will be skipped. default=64\n  -F TRANSCRIPT_FASTA,\
  \ --transcript_fasta=TRANSCRIPT_FASTA\n                        Input the transcript\
  \ fasta file used for motif\n                        detection and codon density\
  \ calculation. cds sequences\n                        related with coorFile (longest.trans.info.txt)\n\
  \                        generated by GetProteinSequence.py\n  --table=GENETICCODE\
  \   Which genetic code to use. default is the standard\n                       \
  \ code.table = 1, is the standard table, ref: https://ww\n                     \
  \   w.ncbi.nlm.nih.gov/Taxonomy/Utils/wprintgc.cgi\n  --id-type=ID_TYPE     define\
  \ the id type users input. the default is\n                        transcript id,\
  \ if not, will be transformed into\n                        transcript id. default=transcript_id\n"
generated_using:
- --help
docker_image: quay.io/biocontainers/ribominer:0.2.3.1--pyh3252c3a_0
