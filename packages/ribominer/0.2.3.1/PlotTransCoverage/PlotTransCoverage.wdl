version 1.0

task PlotTransCoverage {
  input {
    File? coverage_file_generated
    String? ot_put_prefix
    File? coordinate_file
    File? target_gene
    String? id_type
    String? color
    Int? ymax
    Int? ymin
    String? type
    String? mode
  }
  command <<<
    PlotTransCoverage \
      ~{if defined(coverage_file_generated) then ("--input " +  '"' + coverage_file_generated + '"') else ""} \
      ~{if defined(ot_put_prefix) then ("--otput_prefix " +  '"' + ot_put_prefix + '"') else ""} \
      ~{if defined(coordinate_file) then ("--coordinateFile " +  '"' + coordinate_file + '"') else ""} \
      ~{if defined(target_gene) then ("--target-gene " +  '"' + target_gene + '"') else ""} \
      ~{if defined(id_type) then ("--id-type " +  '"' + id_type + '"') else ""} \
      ~{if defined(color) then ("--color " +  '"' + color + '"') else ""} \
      ~{if defined(ymax) then ("--ymax " +  '"' + ymax + '"') else ""} \
      ~{if defined(ymin) then ("--ymin " +  '"' + ymin + '"') else ""} \
      ~{if defined(type) then ("--type " +  '"' + type + '"') else ""} \
      ~{if defined(mode) then ("--mode " +  '"' + mode + '"') else ""}
  >>>
  runtime {
    docker: "quay.io/biocontainers/ribominer:0.2.3.1--pyh3252c3a_0"
  }
  parameter_meta {
    coverage_file_generated: "Coverage file generated by\\nCoverageOfEachTrans.py.[required]"
    ot_put_prefix: "Prefix of output files.[required]"
    coordinate_file: "The file should contain the coordinate of start and\\nstop codon. Generated by\\nOutputTranscriptInfo.py.[required]"
    target_gene: "Target genes for plot. If '-m single-gene', '-t' is a\\ngene name or gene id or transcript id; elif '-m gene-\\nlist', '-t' is a file containing some gene names or\\ngene ids or transcript ids with a column name."
    id_type: "define the id type users input. the default is\\ntranscript id, if not, will be transformed into\\ntranscript id. default=transcript_id"
    color: "Color for plot. default=lightskyblue"
    ymax: "The max of ylim. default=none"
    ymin: "The min of ylim. default=none"
    type: "Type for input. Either 'single-gene' or 'gene-list'.\\ndefault=single-gene."
    mode: "Mode of calculation. Either coverage or density of a\\ntranscript or transcripts. default=coverage\\n"
  }
  output {
    File out_stdout = stdout()
  }
}