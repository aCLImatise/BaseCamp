from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, Boolean, String, File

Abyss_Map_V0_1_0 = CommandToolBuilder(tool="abyss_map", base_command=["abyss-map"], inputs=[ToolInput(tag="in_min_align", input_type=Int(optional=True), prefix="--min-align", doc=InputDocumentation(doc="find matches at least N bp [1]")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="use N parallel threads [1]")), ToolInput(tag="in_append_comment", input_type=Boolean(optional=True), prefix="--append-comment", doc=InputDocumentation(doc="append the FASTA/FASTQ comment to the SAM tags")), ToolInput(tag="in_sample", input_type=Int(optional=True), prefix="--sample", doc=InputDocumentation(doc="sample the suffix array [1]")), ToolInput(tag="in_dup", input_type=Boolean(optional=True), prefix="--dup", doc=InputDocumentation(doc="identify and print duplicate sequence\nIDs between QUERY and TARGET")), ToolInput(tag="in_order", input_type=Boolean(optional=True), prefix="--order", doc=InputDocumentation(doc="print alignments in the same order as\nread from QUERY")), ToolInput(tag="in_no_order", input_type=Boolean(optional=True), prefix="--no-order", doc=InputDocumentation(doc="print alignments ASAP [default]")), ToolInput(tag="in_multi", input_type=Boolean(optional=True), prefix="--multi", doc=InputDocumentation(doc="Align unaligned segments of primary")), ToolInput(tag="in_ss", input_type=Boolean(optional=True), prefix="--SS", doc=InputDocumentation(doc="expect contigs to be oriented correctly")), ToolInput(tag="in_no_ss", input_type=Boolean(optional=True), prefix="--no-SS", doc=InputDocumentation(doc="no assumption about contig orientation")), ToolInput(tag="in_rc", input_type=Boolean(optional=True), prefix="--rc", doc=InputDocumentation(doc="map the sequence and its reverse complement [default]")), ToolInput(tag="in_no_rc", input_type=Boolean(optional=True), prefix="--no-rc", doc=InputDocumentation(doc="do not map the reverse complement sequence")), ToolInput(tag="in_alphabet", input_type=String(optional=True), prefix="--alphabet", doc=InputDocumentation(doc="use the alphabet STRING [-ACGT]")), ToolInput(tag="in_alpha", input_type=Boolean(optional=True), prefix="--alpha", doc=InputDocumentation(doc="equivalent to --no-rc -a' ABCDEFGHIJKLMNOPQRSTUVWXYZ'")), ToolInput(tag="in_dna", input_type=Boolean(optional=True), prefix="--dna", doc=InputDocumentation(doc="equivalent to --rc    -a'-ACGT'")), ToolInput(tag="in_protein", input_type=Boolean(optional=True), prefix="--protein", doc=InputDocumentation(doc="equivalent to --no-rc -a'#*ACDEFGHIKLMNPQRSTVWY'")), ToolInput(tag="in_chastity", input_type=Boolean(optional=True), prefix="--chastity", doc=InputDocumentation(doc="discard unchaste reads")), ToolInput(tag="in_no_chastity", input_type=Boolean(optional=True), prefix="--no-chastity", doc=InputDocumentation(doc="do not discard unchaste reads [default]")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="display verbose output")), ToolInput(tag="in_db", input_type=File(optional=True), prefix="--db", doc=InputDocumentation(doc="specify path of database repository in FILE")), ToolInput(tag="in_library", input_type=String(optional=True), prefix="--library", doc=InputDocumentation(doc="specify library NAME for database")), ToolInput(tag="in_strain", input_type=String(optional=True), prefix="--strain", doc=InputDocumentation(doc="specify strain NAME for database")), ToolInput(tag="in_species", input_type=String(optional=True), prefix="--species", doc=InputDocumentation(doc="specify species NAME for database")), ToolInput(tag="in_alignment", input_type=String(), position=0, doc=InputDocumentation(doc="--no-multi          don't Align unaligned segments [default]"))], outputs=[], container="quay.io/biocontainers/abyss:2.3.0--ha4ec83a_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Abyss_Map_V0_1_0().translate("wdl")

