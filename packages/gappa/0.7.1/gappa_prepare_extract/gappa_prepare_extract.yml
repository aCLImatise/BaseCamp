!Command
command:
- gappa
- prepare
- extract
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - --jplace-path
  description: ":PATH(existing)=[] ... REQUIRED\nList of jplace files or directories\
    \ to process. For directories, only files with the extension `.jplace[.gz]` are\
    \ processed."
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --clade-list-file
  description: ":FILE REQUIRED\nFile containing a tab-separated list of taxon to clade\
    \ mapping."
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --fasta-path
  description: ":PATH(existing)=[] ...\nList of fasta files or directories to process.\
    \ For directories, only files with the extension `.(fasta|fas|fsa|fna|ffn|faa|frn)[.gz]`\
    \ are processed."
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --threshold
  description: ":FLOAT in [0.5 - 1]=0.95\nThreshold of how much placement mass needs\
    \ to be in a clade for extracting a pquery."
  args: !SimpleFlagArg
    name: FLOAT
- !Flag
  optional: true
  synonyms:
  - --point-mass
  description: Treat every pquery as a point mass concentrated on the highest-weight
    placement.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --color-tree-file
  description: ":PATH(non-existing)\nIf a path is provided, an svg file with a tree\
    \ colored by clades is written."
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --samples-out-dir
  description: "=samples\nDirectory to write samples files to"
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --samples-file-prefix
  description: File prefix for samples files
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --samples-file-suffix
  description: File suffix for samples files
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --sequences-out-dir
  description: "=sequences\nDirectory to write sequences files to"
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --sequences-file-prefix
  description: File prefix for sequences files
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --sequences-file-suffix
  description: File suffix for sequences files
  args: !SimpleFlagArg
    name: TEXT
- !Flag
  optional: true
  synonyms:
  - --allow-file-overwriting
  description: Allow to overwrite existing output files instead of aborting the command.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --verbose
  description: Produce more verbose output.
  args: !EmptyFlagArg {}
- !Flag
  optional: true
  synonyms:
  - --threads
  description: =1            Number of threads to use for calculations.
  args: !SimpleFlagArg
    name: UINT
- !Flag
  optional: true
  synonyms:
  - --log-file
  description: Write all output to a log file, in addition to standard output to the
    terminal.
  args: !SimpleFlagArg
    name: TEXT
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - --help
  description: Print this help message and exit.
  args: !EmptyFlagArg {}
usage_flag:
version_flag:
help_text: "Extract placements from clades of the tree and write per-clade jplace\
  \ files.\nUsage: gappa prepare extract [OPTIONS]\n\nInput:\n  --jplace-path TEXT:PATH(existing)=[]\
  \ ... REQUIRED\n                              List of jplace files or directories\
  \ to process. For directories, only files with the extension `.jplace[.gz]` are\
  \ processed.\n  --clade-list-file TEXT:FILE REQUIRED\n                         \
  \     File containing a tab-separated list of taxon to clade mapping.\n  --fasta-path\
  \ TEXT:PATH(existing)=[] ...\n                              List of fasta files\
  \ or directories to process. For directories, only files with the extension `.(fasta|fas|fsa|fna|ffn|faa|frn)[.gz]`\
  \ are processed.\n\n\nSettings:\n  --threshold FLOAT:FLOAT in [0.5 - 1]=0.95\n \
  \                             Threshold of how much placement mass needs to be in\
  \ a clade for extracting a pquery.\n  --point-mass                Treat every pquery\
  \ as a point mass concentrated on the highest-weight placement.\n\n\nOutput:\n \
  \ --color-tree-file TEXT:PATH(non-existing)\n                              If a\
  \ path is provided, an svg file with a tree colored by clades is written.\n  --samples-out-dir\
  \ TEXT=samples\n                              Directory to write samples files to\n\
  \  --samples-file-prefix TEXT  File prefix for samples files\n  --samples-file-suffix\
  \ TEXT  File suffix for samples files\n  --sequences-out-dir TEXT=sequences\n  \
  \                            Directory to write sequences files to\n  --sequences-file-prefix\
  \ TEXT\n                              File prefix for sequences files\n  --sequences-file-suffix\
  \ TEXT\n                              File suffix for sequences files\n\n\nGlobal\
  \ Options:\n  --allow-file-overwriting    Allow to overwrite existing output files\
  \ instead of aborting the command.\n  --verbose                   Produce more verbose\
  \ output.\n  --threads UINT=1            Number of threads to use for calculations.\n\
  \  --log-file TEXT             Write all output to a log file, in addition to standard\
  \ output to the terminal.\n  --help                      Print this help message\
  \ and exit.\n\ngappa - a toolkit for analyzing and visualizing phylogenetic (placement)\
  \ data\n"
generated_using:
- --help
docker_image: quay.io/biocontainers/gappa:0.7.1--he513fc3_0
