from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Int, Boolean, Directory

Mirabait_V0_1_0 = CommandToolBuilder(tool="mirabait", base_command=["mirabait"], inputs=[ToolInput(tag="in_load_bait_sequences", input_type=File(optional=True), prefix="-b", doc=InputDocumentation(doc="Load bait sequences from file\n(multiple -b allowed)")), ToolInput(tag="in_load_baits_filesonly", input_type=File(optional=True), prefix="-B", doc=InputDocumentation(doc="Load baits from kmer statistics file, not from sequence files.\nOnly one -B allowed, cannot be combined with -b.\n(see -K for creating such a file)")), ToolInput(tag="in_set_options_predefined", input_type=String(optional=True), prefix="-j", doc=InputDocumentation(doc="Set options for predefined job from supplied MIRA library\nCurrently available jobs:\nrrna Bait rRNA sequences")), ToolInput(tag="in_file_load_paired", input_type=File(optional=True), prefix="-p", doc=InputDocumentation(doc="file2  Load paired sequences to search from file1 and file2\nFiles must contain same number of sequences, sequence\nnames must be in same order.\nMultiple -p allowed, but must come before non-paired\nfiles.")), ToolInput(tag="in_load_paired_sequences", input_type=File(optional=True), prefix="-P", doc=InputDocumentation(doc="Load paired sequences from file\nFile must be interleaved: pairs must follow each other,\nnon-pairs are not allowed.\nMultiple -p allowed, but must come before non-paired\nfiles.")), ToolInput(tag="in_kmer_length_default", input_type=Int(optional=True), prefix="-k", doc=InputDocumentation(doc="kmer length of bait in bases (<=256, default=31)")), ToolInput(tag="in_minimum_number_kmer", input_type=Int(optional=True), prefix="-n", doc=InputDocumentation(doc="If >0: minimum number of k-mer baits needed (default=1)\nIf <=0: allowed number of missed kmers over sequence\nlength")), ToolInput(tag="in_use_kmers_see", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc="Do not use kmers with microrepeats (DUST-like, see also -D)")), ToolInput(tag="in_set_length_discard", input_type=Int(optional=True), prefix="-D", doc=InputDocumentation(doc="Set length of microrepeats in kmers to discard from bait.\nint > 0 microrepeat len in percentage of kmer length.\nE.g.: -k 17 -D 67 --> 11.39 bases --> 12 bases.\nint < 0 microrepeat len in bases.\nint != 0 implies -d, int=0 turns DUST filter off.")), ToolInput(tag="in_selects_sequences_hit_bait", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="Selects sequences that do not hit bait")), ToolInput(tag="in_selects_sequences_hit_hit", input_type=Boolean(optional=True), prefix="-I", doc=InputDocumentation(doc="Selects sequences that hit and do not hit bait (to\ndifferent files)")), ToolInput(tag="in_checking_reverse_complement", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="No checking of reverse complement direction")), ToolInput(tag="in_number_use_cpu", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="Number of threads to use (default=0 -> up to 4 CPU cores)")), ToolInput(tag="in_case_change_denote", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="No case change of sequence to denote bait hits")), ToolInput(tag="in_length_line_unlimited", input_type=Int(optional=True), prefix="-l", doc=InputDocumentation(doc="length of a line (FASTA only, default 0=unlimited)")), ToolInput(tag="in_save_kmer_statistics", input_type=File(optional=True), prefix="-K", doc=InputDocumentation(doc="Save kmer statistics to 'file' (see also -B)")), ToolInput(tag="in_change_prefix_used", input_type=String(optional=True), prefix="-N", doc=InputDocumentation(doc="Change the prefix 'bait' to <name>\nHas no effect if -o/-O is used and targets are not\ndirectories")), ToolInput(tag="in_save_sequences_matching", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="Save sequences matching bait to path\nIf path is a directory, write separate files into this\ndirectory. If not, combine all matching sequences from\nthe input file(s) into a single file specified by the\npath.")), ToolInput(tag="in_o_sequences_matching", input_type=File(optional=True), prefix="-O", doc=InputDocumentation(doc="Like -o, but for sequences not matching")), ToolInput(tag="in_use_instead_ofcurrent", input_type=Directory(optional=True), prefix="-T", doc=InputDocumentation(doc="Use 'dir' as directory for temporary files instead of\ncurrent working directory.")), ToolInput(tag="in_memory_use_computing", input_type=Int(optional=True), prefix="-m", doc=InputDocumentation(doc="Memory to use for computing kmer statistics\n0..100 = use percentage of free system memory\n>100 = amount of MiB to use (e.g. 16384 for 16 GiB)\nDefault 75 (75% of free system memory)."))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Mirabait_V0_1_0().translate("wdl", allow_empty_container=True)

