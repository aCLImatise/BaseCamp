from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String, Int, Float

Bcftools_Call_V0_1_0 = CommandToolBuilder(tool="bcftools_call", base_command=["bcftools", "call"], inputs=[ToolInput(tag="in_no_version", input_type=Boolean(optional=True), prefix="--no-version", doc=InputDocumentation(doc="Do not append version and command line to the header")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="Write output to a file [standard output]")), ToolInput(tag="in_output_type", input_type=String(optional=True), prefix="--output-type", doc=InputDocumentation(doc="|u|z|v     Output type: 'b' compressed BCF; 'u' uncompressed BCF; 'z' compressed VCF; 'v' uncompressed VCF [v]")), ToolInput(tag="in_ploidy", input_type=Int(optional=True), prefix="--ploidy", doc=InputDocumentation(doc="[?]      Predefined ploidy, 'list' to print available settings, append '?' for details [2]")), ToolInput(tag="in_ploidy_file", input_type=File(optional=True), prefix="--ploidy-file", doc=InputDocumentation(doc="Space/tab-delimited list of CHROM,FROM,TO,SEX,PLOIDY")), ToolInput(tag="in_regions", input_type=String(optional=True), prefix="--regions", doc=InputDocumentation(doc="Restrict to comma-separated list of regions")), ToolInput(tag="in_regions_file", input_type=File(optional=True), prefix="--regions-file", doc=InputDocumentation(doc="Restrict to regions listed in a file")), ToolInput(tag="in_samples", input_type=String(optional=True), prefix="--samples", doc=InputDocumentation(doc="List of samples to include [all samples]")), ToolInput(tag="in_samples_file", input_type=File(optional=True), prefix="--samples-file", doc=InputDocumentation(doc="PED file or a file with an optional column with sex (see man page for details) [all samples]")), ToolInput(tag="in_targets", input_type=String(optional=True), prefix="--targets", doc=InputDocumentation(doc="Similar to -r but streams rather than index-jumps")), ToolInput(tag="in_targets_file", input_type=File(optional=True), prefix="--targets-file", doc=InputDocumentation(doc="Similar to -R but streams rather than index-jumps")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Use multithreading with INT worker threads [0]")), ToolInput(tag="in_keep_alts", input_type=Boolean(optional=True), prefix="--keep-alts", doc=InputDocumentation(doc="Keep all possible alternate alleles at variant sites")), ToolInput(tag="in_annotate", input_type=String(optional=True), prefix="--annotate", doc=InputDocumentation(doc="Optional tags to output (lowercase allowed); '?' to list available tags")), ToolInput(tag="in_prior_freqs", input_type=String(optional=True), prefix="--prior-freqs", doc=InputDocumentation(doc=",AC       Use prior allele frequencies, determined from these pre-filled tags")), ToolInput(tag="in_group_samples", input_type=File(optional=True), prefix="--group-samples", doc=InputDocumentation(doc="|-    Group samples by population (file with 'sample\tgroup') or '-' for single-sample calling.\nThis requires FORMAT/QS or other Number=R,Type=Integer tag such as FORMAT/AD")), ToolInput(tag="in_group_samples_tag", input_type=String(optional=True), prefix="--group-samples-tag", doc=InputDocumentation(doc="The tag to use with -G, by default FORMAT/QS and FORMAT/AD are checked automatically")), ToolInput(tag="in_gvc_f", input_type=Int(optional=True), prefix="--gvcf", doc=InputDocumentation(doc=",[...]          Group non-variant sites into gVCF blocks by minimum per-sample DP")), ToolInput(tag="in_insert_missed", input_type=Boolean(optional=True), prefix="--insert-missed", doc=InputDocumentation(doc="Output also sites missed by mpileup but present in -T")), ToolInput(tag="in_keep_masked_ref", input_type=Boolean(optional=True), prefix="--keep-masked-ref", doc=InputDocumentation(doc="Keep sites with masked reference allele (REF=N)")), ToolInput(tag="in_skip_variants", input_type=String(optional=True), prefix="--skip-variants", doc=InputDocumentation(doc="Skip indels/snps")), ToolInput(tag="in_variants_only", input_type=Boolean(optional=True), prefix="--variants-only", doc=InputDocumentation(doc="Output variant sites only")), ToolInput(tag="in_consensus_caller", input_type=Boolean(optional=True), prefix="--consensus-caller", doc=InputDocumentation(doc="The original calling method (conflicts with -m)")), ToolInput(tag="in_constrain", input_type=String(optional=True), prefix="--constrain", doc=InputDocumentation(doc="One of: alleles, trio (see manual)")), ToolInput(tag="in_multi_allelic_caller", input_type=Boolean(optional=True), prefix="--multiallelic-caller", doc=InputDocumentation(doc="Alternative model for multiallelic and rare-variant calling (conflicts with -c)")), ToolInput(tag="in_novel_rate", input_type=Float(optional=True), prefix="--novel-rate", doc=InputDocumentation(doc=",[...]  Likelihood of novel mutation for constrained trio calling, see man page for details [1e-8,1e-9,1e-9]")), ToolInput(tag="in_pval_threshold", input_type=Float(optional=True), prefix="--pval-threshold", doc=InputDocumentation(doc="Variant if P(ref|D)<FLOAT with -c [0.5]")), ToolInput(tag="in_prior", input_type=Float(optional=True), prefix="--prior", doc=InputDocumentation(doc="Mutation rate (use bigger for greater sensitivity), use with -m [1.1e-3]")), ToolInput(tag="in_in_dot_vcf_do_tgz", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="Write output to a file [standard output]"))], container="quay.io/biocontainers/bcftools:1.12--h3f113a9_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bcftools_Call_V0_1_0().translate("wdl")

