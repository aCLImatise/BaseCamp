from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Int, String, Float

Bcftools_Mpileup_V0_1_0 = CommandToolBuilder(tool="bcftools_mpileup", base_command=["bcftools", "mpileup"], inputs=[ToolInput(tag="in_illumina_one_dot_three", input_type=Boolean(optional=True), prefix="--illumina1.3", doc=InputDocumentation(doc="+      quality is in the Illumina-1.3+ encoding")), ToolInput(tag="in_count_orphans", input_type=Boolean(optional=True), prefix="--count-orphans", doc=InputDocumentation(doc="do not discard anomalous read pairs")), ToolInput(tag="in_bam_list", input_type=File(optional=True), prefix="--bam-list", doc=InputDocumentation(doc="list of input BAM filenames, one per line")), ToolInput(tag="in_no_baq", input_type=Boolean(optional=True), prefix="--no-BAQ", doc=InputDocumentation(doc="disable BAQ (per-Base Alignment Quality)")), ToolInput(tag="in_adjust_mq", input_type=Int(optional=True), prefix="--adjust-MQ", doc=InputDocumentation(doc="adjust mapping quality; recommended:50, disable:0 [0]")), ToolInput(tag="in_max_depth", input_type=Int(optional=True), prefix="--max-depth", doc=InputDocumentation(doc="max raw per-file depth; avoids excessive memory usage [250]")), ToolInput(tag="in_redo_baq", input_type=Boolean(optional=True), prefix="--redo-BAQ", doc=InputDocumentation(doc="recalculate BAQ on the fly, ignore existing BQs")), ToolInput(tag="in_fast_a_ref", input_type=File(optional=True), prefix="--fasta-ref", doc=InputDocumentation(doc="faidx indexed reference sequence file")), ToolInput(tag="in_no_reference", input_type=Boolean(optional=True), prefix="--no-reference", doc=InputDocumentation(doc="do not require fasta reference file")), ToolInput(tag="in_read_groups", input_type=File(optional=True), prefix="--read-groups", doc=InputDocumentation(doc="select or exclude read groups listed in the file")), ToolInput(tag="in_min_mq", input_type=Int(optional=True), prefix="--min-MQ", doc=InputDocumentation(doc="skip alignments with mapQ smaller than INT [0]")), ToolInput(tag="in_min_bq", input_type=Int(optional=True), prefix="--min-BQ", doc=InputDocumentation(doc="skip bases with baseQ/BAQ smaller than INT [13]")), ToolInput(tag="in_regions", input_type=String(optional=True), prefix="--regions", doc=InputDocumentation(doc="[,...] comma separated list of regions in which pileup is generated")), ToolInput(tag="in_regions_file", input_type=File(optional=True), prefix="--regions-file", doc=InputDocumentation(doc="restrict to regions listed in a file")), ToolInput(tag="in_ignore_rg", input_type=Boolean(optional=True), prefix="--ignore-RG", doc=InputDocumentation(doc="ignore RG tags (one BAM = one sample)")), ToolInput(tag="in_incl_flags", input_type=Int(optional=True), prefix="--incl-flags", doc=InputDocumentation(doc="|INT  required flags: skip reads with mask bits unset []")), ToolInput(tag="in_excl_flags", input_type=Int(optional=True), prefix="--excl-flags", doc=InputDocumentation(doc="|INT  filter flags: skip reads with mask bits set\n[UNMAP,SECONDARY,QCFAIL,DUP]")), ToolInput(tag="in_samples", input_type=String(optional=True), prefix="--samples", doc=InputDocumentation(doc="comma separated list of samples to include")), ToolInput(tag="in_samples_file", input_type=File(optional=True), prefix="--samples-file", doc=InputDocumentation(doc="file of samples to include")), ToolInput(tag="in_targets", input_type=String(optional=True), prefix="--targets", doc=InputDocumentation(doc="[,...] similar to -r but streams rather than index-jumps")), ToolInput(tag="in_targets_file", input_type=File(optional=True), prefix="--targets-file", doc=InputDocumentation(doc="similar to -R but streams rather than index-jumps")), ToolInput(tag="in_ignore_overlaps", input_type=Boolean(optional=True), prefix="--ignore-overlaps", doc=InputDocumentation(doc="disable read-pair overlap detection")), ToolInput(tag="in_annotate", input_type=String(optional=True), prefix="--annotate", doc=InputDocumentation(doc="optional tags to output; '?' to list []")), ToolInput(tag="in_gvc_f", input_type=Int(optional=True), prefix="--gvcf", doc=InputDocumentation(doc="[,...]    group non-variant sites into gVCF blocks according\nto minimum per-sample DP")), ToolInput(tag="in_no_version", input_type=Boolean(optional=True), prefix="--no-version", doc=InputDocumentation(doc="do not append version and command line to the header")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="write output to FILE [standard output]")), ToolInput(tag="in_output_type", input_type=String(optional=True), prefix="--output-type", doc=InputDocumentation(doc="'b' compressed BCF; 'u' uncompressed BCF;\n'z' compressed VCF; 'v' uncompressed VCF [v]")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="use multithreading with INT worker threads [0]")), ToolInput(tag="in_ext_prob", input_type=Int(optional=True), prefix="--ext-prob", doc=InputDocumentation(doc="Phred-scaled gap extension seq error probability [20]")), ToolInput(tag="in_gap_frac", input_type=Float(optional=True), prefix="--gap-frac", doc=InputDocumentation(doc="minimum fraction of gapped reads [0.002]")), ToolInput(tag="in_tandem_qual", input_type=Int(optional=True), prefix="--tandem-qual", doc=InputDocumentation(doc="coefficient for homopolymer errors [100]")), ToolInput(tag="in_skip_indels", input_type=Boolean(optional=True), prefix="--skip-indels", doc=InputDocumentation(doc="do not perform indel calling")), ToolInput(tag="in_max_i_depth", input_type=Int(optional=True), prefix="--max-idepth", doc=InputDocumentation(doc="maximum per-file depth for INDEL calling [250]")), ToolInput(tag="in_min_i_reads", input_type=Int(optional=True), prefix="--min-ireads", doc=InputDocumentation(doc="minimum number gapped reads for indel candidates [1]")), ToolInput(tag="in_open_prob", input_type=Int(optional=True), prefix="--open-prob", doc=InputDocumentation(doc="Phred-scaled gap open seq error probability [40]")), ToolInput(tag="in_per_sample_mf", input_type=Boolean(optional=True), prefix="--per-sample-mF", doc=InputDocumentation(doc="apply -m and -F per-sample for increased sensitivity")), ToolInput(tag="in_platforms", input_type=String(optional=True), prefix="--platforms", doc=InputDocumentation(doc="comma separated list of platforms for indels [all]")), ToolInput(tag="in_in_one_dot_bam", input_type=Int(), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="write output to FILE [standard output]"))], container="quay.io/biocontainers/bcftools:1.11--h7c999a4_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bcftools_Mpileup_V0_1_0().translate("wdl")

