from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Directory, String

Hlaprofiler_Pl_Predict_V0_1_0 = CommandToolBuilder(tool="HLAProfiler.pl_predict", base_command=["HLAProfiler.pl", "predict"], inputs=[ToolInput(tag="in_fast_q_one", input_type=Boolean(optional=True), prefix="-fastq1", doc=InputDocumentation(doc="|fq1             location of read1 fastq (required)")), ToolInput(tag="in_fast_q_two", input_type=Boolean(optional=True), prefix="-fastq2", doc=InputDocumentation(doc="|fq2             location of read2 fastq (required)")), ToolInput(tag="in_database_name", input_type=Boolean(optional=True), prefix="-database_name", doc=InputDocumentation(doc="|db       name of HLA database (required)")), ToolInput(tag="in_directory_dir", input_type=Boolean(optional=True), prefix="-directory_dir", doc=InputDocumentation(doc="|dd       name of parent directory of database (required)")), ToolInput(tag="in_reference", input_type=Boolean(optional=True), prefix="-reference", doc=InputDocumentation(doc="|r    reference fa used to create the database (required)")), ToolInput(tag="in_allele_refinement", input_type=Boolean(optional=True), prefix="-allele_refinement", doc=InputDocumentation(doc="|ar   Specifies the level to which the predicted alleles are to be refined based on the observed reads (default:all)\nPossible values:\nrefine_only     Refines the allelle call by looking predicting the true allele sequence using observed reads and looking for a better match in the reference\npredict_only    Reports if the observe reads support a novel allele sequence not found in the reference\nrefineAndPredict        Refines the allele call (-refine_only) and report novel alleles (-novel_only)\nall             Refines the allele call (-refine_only) and report novel alleles (-novel_only), creates a profile for the refined/novel allele sequence and calculates prediction metrics.\nnone            Turns off refinement and novel allele prediction.")), ToolInput(tag="in_num_reads", input_type=Boolean(optional=True), prefix="-num_reads", doc=InputDocumentation(doc="|nr           number of reads to simulated per reference allele for k-mer profile creations.(default:500000)")), ToolInput(tag="in_read_length", input_type=Boolean(optional=True), prefix="-read_length", doc=InputDocumentation(doc="|rl         length of reads simulated for k-mer profile. Same as the length of the k-mers in the profile.(default:50)")), ToolInput(tag="in_max_insert", input_type=Boolean(optional=True), prefix="-max_insert", doc=InputDocumentation(doc="|m           maximum size of insert (default:1000)")), ToolInput(tag="in_scale", input_type=Boolean(optional=True), prefix="-scale", doc=InputDocumentation(doc="|sc               scale of pareto distribution to determine insert size (default:80)")), ToolInput(tag="in_shape", input_type=Boolean(optional=True), prefix="-shape", doc=InputDocumentation(doc="|sh               shape of pareto distribution to determine insert size (default:0.7)")), ToolInput(tag="in_seed", input_type=Boolean(optional=True), prefix="-seed", doc=InputDocumentation(doc="|sd                seed of random number generator for simulation (default:1234)")), ToolInput(tag="in_intermediate_files", input_type=Boolean(optional=True), prefix="-intermediate_files", doc=InputDocumentation(doc="|if  toggles flag to keep intermediate files (default:off)")), ToolInput(tag="in_minimum_reads", input_type=Boolean(optional=True), prefix="-minimum_reads", doc=InputDocumentation(doc="|min      minimum number of reads from a gene before attempting to call HLA types.(default:100)")), ToolInput(tag="in_threads", input_type=Boolean(optional=True), prefix="-threads", doc=InputDocumentation(doc="|c              number of threads (default:1)")), ToolInput(tag="in_output_dir", input_type=Directory(optional=True), prefix="-output_dir", doc=InputDocumentation(doc="|od          output directory (default:' .')")), ToolInput(tag="in_kraken_path", input_type=Boolean(optional=True), prefix="-kraken_path", doc=InputDocumentation(doc="|kp         base directory of kraken installation. (default:base directory of path returned by `which kraken`)")), ToolInput(tag="in_log", input_type=Boolean(optional=True), prefix="-log", doc=InputDocumentation(doc="|l                  name of the prediction log file")), ToolInput(tag="in_options", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output_dir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output_dir", type_hint=File()), doc=OutputDocumentation(doc="|od          output directory (default:' .')"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Hlaprofiler_Pl_Predict_V0_1_0().translate("wdl", allow_empty_container=True)

