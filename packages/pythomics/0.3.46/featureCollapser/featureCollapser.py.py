from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Int, Boolean

Featurecollapser_Py_V0_1_0 = CommandToolBuilder(tool="featureCollapser.py", base_command=["featureCollapser.py"], inputs=[ToolInput(tag="in_threads_to_run", input_type=String(optional=True), prefix="-p", doc=InputDocumentation(doc="Threads to run")), ToolInput(tag="in_tsv", input_type=File(optional=True), prefix="--tsv", doc=InputDocumentation(doc="The delimited file.")), ToolInput(tag="in_delimiter", input_type=String(optional=True), prefix="--delimiter", doc=InputDocumentation(doc="The delimiter for fields.")), ToolInput(tag="in_group_on", input_type=Int(optional=True), prefix="--group-on", doc=InputDocumentation(doc="The column of interest (default: 1). Can be a column")), ToolInput(tag="in_file_write_results", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="[OUT], --out [OUT]\nThe file to write results to. Leave blank for stdout,")), ToolInput(tag="in_substring", input_type=Boolean(optional=True), prefix="--substring", doc=InputDocumentation(doc="If set, merge features by partial matches (such as\ncollapsing peptides into larger peptides)")), ToolInput(tag="in_summary_col", input_type=String(optional=True), prefix="--summary-col", doc=InputDocumentation(doc="The column to apply a function to (if you want to\ncombine fields, sum fields, etc.).")), ToolInput(tag="in_summary_col_func", input_type=String(optional=True), prefix="--summary-col-func", doc=InputDocumentation(doc="The function to apply to grouped entries in\nmodification columns. Options: concat, mean, median,\nvar, std, sum, count")), ToolInput(tag="in_summary_col_delimiter", input_type=String(optional=True), prefix="--summary-col-delimiter", doc=InputDocumentation(doc="If the summary column has a delimiter, such as a ; for\nmultiple proteins.")), ToolInput(tag="in_strict", input_type=Boolean(optional=True), prefix="--strict", doc=InputDocumentation(doc="For numeric operations, fail if types are incorrect\n(converting NA to a float for instance).")), ToolInput(tag="in_merge", input_type=Boolean(optional=True), prefix="--merge", doc=InputDocumentation(doc="Merge together identical entries.")), ToolInput(tag="in_case_sensitive", input_type=Boolean(optional=True), prefix="--case-sensitive", doc=InputDocumentation(doc="Treat peptides as case-sensitive (ie separate modified\npeptides)\n")), ToolInput(tag="in_name_dot", input_type=String(), position=0, doc=InputDocumentation(doc="--header HEADER       The number of headers lines (default: 1)."))], outputs=[ToolOutput(tag="out_file_write_results", output_type=File(optional=True), selector=InputSelector(input_to_select="in_file_write_results", type_hint=File()), doc=OutputDocumentation(doc="[OUT], --out [OUT]\nThe file to write results to. Leave blank for stdout,"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Featurecollapser_Py_V0_1_0().translate("wdl", allow_empty_container=True)

