from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, String, Float, Boolean

Omssa_Search_Rb_V0_1_0 = CommandToolBuilder(tool="omssa_search.rb", base_command=["omssa_search.rb"], inputs=[ToolInput(tag="in_replace_output", input_type=File(optional=True), prefix="--replace-output", doc=InputDocumentation(doc="Dont skip analyses for which the output file already exists [false]")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="An explicitly named output file.")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of processing threads to use. Set to 0 to autodetect an appropriate value [1]")), ToolInput(tag="in_database", input_type=File(optional=True), prefix="--database", doc=InputDocumentation(doc="Specify the database to use for this search. Can be a named protk database or the path to a fasta file [sphuman]")), ToolInput(tag="in_enzyme", input_type=String(optional=True), prefix="--enzyme", doc=InputDocumentation(doc="Enzyme [Trypsin]")), ToolInput(tag="in_var_mods", input_type=String(optional=True), prefix="--var-mods", doc=InputDocumentation(doc="Variable modifications. These should be provided in a comma separated list")), ToolInput(tag="in_fix_mods", input_type=String(optional=True), prefix="--fix-mods", doc=InputDocumentation(doc="Fixed modifications. These should be provided in a comma separated list")), ToolInput(tag="in_instrument", input_type=String(optional=True), prefix="--instrument", doc=InputDocumentation(doc="Instrument [ESI-QUAD-TOF]")), ToolInput(tag="in_fragment_ion_to_l_units", input_type=String(optional=True), prefix="--fragment-ion-tol-units", doc=InputDocumentation(doc="Fragment ion mass tolerance units (Da or mmu). [Da]")), ToolInput(tag="in_precursor_ion_to_l_units", input_type=String(optional=True), prefix="--precursor-ion-tol-units", doc=InputDocumentation(doc="Precursor ion mass tolerance units (ppm or Da). [ppm]")), ToolInput(tag="in_fragment_ion_to_l", input_type=Float(optional=True), prefix="--fragment-ion-tol", doc=InputDocumentation(doc="Fragment ion mass tolerance (unit dependent). [0.65]")), ToolInput(tag="in_precursor_ion_to_l", input_type=Int(optional=True), prefix="--precursor-ion-tol", doc=InputDocumentation(doc="Precursor ion mass tolerance. [200]")), ToolInput(tag="in_search_type", input_type=String(optional=True), prefix="--search-type", doc=InputDocumentation(doc="Use monoisotopic or average precursor masses. (monoisotopic or average) [monoisotopic]")), ToolInput(tag="in_num_missed_cleavages", input_type=Int(optional=True), prefix="--num-missed-cleavages", doc=InputDocumentation(doc="Number of missed cleavages allowed [2]")), ToolInput(tag="in_respect_charges", input_type=Boolean(optional=True), prefix="--respect-charges", doc=InputDocumentation(doc="Dont respect charges in the input file. Instead impute them by trying various options [false]")), ToolInput(tag="in_searched_ions", input_type=String(optional=True), prefix="--searched-ions", doc=InputDocumentation(doc="Ion series to search")), ToolInput(tag="in_num_peaks_for_multi_isotope_search", input_type=Int(optional=True), prefix="--num-peaks-for-multi-isotope-search", doc=InputDocumentation(doc="Number of peaks to include in multi-isotope search [0]")), ToolInput(tag="in_glyco", input_type=Boolean(optional=True), prefix="--glyco", doc=InputDocumentation(doc="Expect N-Glycosylation modifications as variable mod in a search or as a parameter when building statistical models [false]")), ToolInput(tag="in_methionine_o", input_type=Boolean(optional=True), prefix="--methionineo", doc=InputDocumentation(doc="Expect Oxidised Methionine modifications as variable mod in a search [false]")), ToolInput(tag="in_carb_amido_methyl", input_type=Boolean(optional=True), prefix="--carbamidomethyl", doc=InputDocumentation(doc="Expect Carbamidomethyl C modifications as fixed mod in a search [false]")), ToolInput(tag="in_no_add_retention_times", input_type=Boolean(optional=True), prefix="--no-add-retention-times", doc=InputDocumentation(doc="Don't post process the output to add retention times [true]")), ToolInput(tag="in_max_hit_expect", input_type=Int(optional=True), prefix="--max-hit-expect", doc=InputDocumentation(doc="Expect values less than this are considered to be hits [1]")), ToolInput(tag="in_intensity_cut_off", input_type=Float(optional=True), prefix="--intensity-cut-off", doc=InputDocumentation(doc="Peak intensity cut-off as a fraction of maximum peak intensity [0.0005]")), ToolInput(tag="in_galaxy_index_dir", input_type=File(optional=True), prefix="--galaxy-index-dir", doc=InputDocumentation(doc="Specify galaxy index directory, will search for mods file there.")), ToolInput(tag="in_omx_output", input_type=File(optional=True), prefix="--omx-output", doc=InputDocumentation(doc="Specify path for additional OMX output (optional).")), ToolInput(tag="in_log_file", input_type=File(optional=True), prefix="--logfile", doc=InputDocumentation(doc="Send OMSSA stdout to a logfile")), ToolInput(tag="in_file_two_do_tmgf", input_type=Int(), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_replace_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_replace_output", type_hint=File()), doc=OutputDocumentation(doc="Dont skip analyses for which the output file already exists [false]")), ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="An explicitly named output file.")), ToolOutput(tag="out_omx_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_omx_output", type_hint=File()), doc=OutputDocumentation(doc="Specify path for additional OMX output (optional)."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Omssa_Search_Rb_V0_1_0().translate("wdl", allow_empty_container=True)

