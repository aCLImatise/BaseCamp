from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean, Float, String

Protxml_To_Gff_Rb_V0_1_0 = CommandToolBuilder(tool="protxml_to_gff.rb", base_command=["protxml_to_gff.rb"], inputs=[ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="An explicitly named output file.")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="Run in debug mode [false]")), ToolInput(tag="in_database", input_type=File(optional=True), prefix="--database", doc=InputDocumentation(doc="Database used for ms/ms searches (Fasta Format)")), ToolInput(tag="in_coords_file", input_type=File(optional=True), prefix="--coords-file", doc=InputDocumentation(doc="A file containing genomic coordinates for predicted proteins and/or 6-frame translations")), ToolInput(tag="in_stack_charge_states", input_type=Boolean(optional=True), prefix="--stack-charge-states", doc=InputDocumentation(doc="Different peptide charge states get separate gff entries [false]")), ToolInput(tag="in_threshold", input_type=Float(optional=True), prefix="--threshold", doc=InputDocumentation(doc="Peptide Probability Threshold (Default 0.95) [0.95]")), ToolInput(tag="in_prot_threshold", input_type=Float(optional=True), prefix="--prot-threshold", doc=InputDocumentation(doc="Protein Probability Threshold (Default 0.99) [0.99]")), ToolInput(tag="in_gff_id_regex", input_type=String(optional=True), prefix="--gff-idregex", doc=InputDocumentation(doc="Regex with capture group for parsing gff ids from protein ids")), ToolInput(tag="in_genome_id_regex", input_type=String(optional=True), prefix="--genome-idregex", doc=InputDocumentation(doc="Regex with capture group for parsing genomic ids from protein ids")), ToolInput(tag="in_ignore_regex", input_type=String(optional=True), prefix="--ignore-regex", doc=InputDocumentation(doc="Regex to match protein ids that we should ignore completely")), ToolInput(tag="in_include_mods", input_type=Boolean(optional=True), prefix="--include-mods", doc=InputDocumentation(doc="Output gff entries for peptide modification sites [false]")), ToolInput(tag="in_proteins_dot", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_prot_xml", input_type=String(), position=1, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="An explicitly named output file."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Protxml_To_Gff_Rb_V0_1_0().translate("wdl", allow_empty_container=True)

