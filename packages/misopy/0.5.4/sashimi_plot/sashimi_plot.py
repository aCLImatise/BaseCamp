from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, File, Boolean, String, Directory

Sashimi_Plot_V0_1_0 = CommandToolBuilder(tool="sashimi_plot", base_command=["sashimi_plot"], inputs=[ToolInput(tag="in_plot_insert_len", input_type=Int(optional=True), prefix="--plot-insert-len", doc=InputDocumentation(doc="Plot the insert length distribution from a given\ninsert length (*.insert_len) filename. Second argument\nis a settings file name.")), ToolInput(tag="in_plot_bf_dist", input_type=File(optional=True), prefix="--plot-bf-dist", doc=InputDocumentation(doc="Plot Bayes factor distributon. Takes the arguments:\n(1) Bayes factor filename (*.miso_bf) filename, (2) a\nsettings filename.")), ToolInput(tag="in_plot_event", input_type=File(optional=True), prefix="--plot-event", doc=InputDocumentation(doc="Plot read densities and MISO inferences for a given\nalternative event. Takes the arguments: (1) event name\n(i.e. the ID= of the event based on MISO gff3\nannotation file, (2) directory where indexed GFF\nannotation is (output of index_gff.py), (3) path to\nplotting settings file.")), ToolInput(tag="in_no_posteriors", input_type=Boolean(optional=True), prefix="--no-posteriors", doc=InputDocumentation(doc="If given this argument, MISO posterior estimates are\nnot plotted.")), ToolInput(tag="in_plot_title", input_type=String(optional=True), prefix="--plot-title", doc=InputDocumentation(doc="Title of plot: a string that will be displayed at top\nof plot. Example: --plot-title 'My favorite gene'.")), ToolInput(tag="in_plot_label", input_type=Directory(optional=True), prefix="--plot-label", doc=InputDocumentation(doc="Plot label. If given, plot will be saved in the output\ndirectory as the plot label ending in the relevant\nextension, e.g. <plot_label>.pdf. Example: --plot-\nlabel my_gene")), ToolInput(tag="in_output_dir", input_type=Directory(optional=True), prefix="--output-dir", doc=InputDocumentation(doc="Output directory.\n"))], outputs=[ToolOutput(tag="out_plot_event", output_type=File(optional=True), selector=InputSelector(input_to_select="in_plot_event", type_hint=File()), doc=OutputDocumentation(doc="Plot read densities and MISO inferences for a given\nalternative event. Takes the arguments: (1) event name\n(i.e. the ID= of the event based on MISO gff3\nannotation file, (2) directory where indexed GFF\nannotation is (output of index_gff.py), (3) path to\nplotting settings file.")), ToolOutput(tag="out_plot_label", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_plot_label", type_hint=File()), doc=OutputDocumentation(doc="Plot label. If given, plot will be saved in the output\ndirectory as the plot label ending in the relevant\nextension, e.g. <plot_label>.pdf. Example: --plot-\nlabel my_gene")), ToolOutput(tag="out_output_dir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output_dir", type_hint=File()), doc=OutputDocumentation(doc="Output directory.\n"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Sashimi_Plot_V0_1_0().translate("wdl", allow_empty_container=True)

