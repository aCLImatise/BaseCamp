from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, Directory

Run_Miso_Py_V0_1_0 = CommandToolBuilder(tool="run_miso.py", base_command=["run_miso.py"], inputs=[ToolInput(tag="in_compute_gene_psi", input_type=File(optional=True), prefix="--compute-gene-psi", doc=InputDocumentation(doc="Compute Psi using for a given multi-isoform gene.\nExpects four arguments: the first is a gene ID or set\nof comma-separated (no spaces) gene IDs, the second is\na GFF indexed file with the gene information, the\nthird is a sorted and indexed BAM file with reads\naligned to the gene, and the fourth is an output\ndirectory.")), ToolInput(tag="in_paired_end", input_type=Int(optional=True), prefix="--paired-end", doc=InputDocumentation(doc="Run in paired-end mode.  Takes a mean and standard\ndeviation for the fragment length distribution\n(assumed to have discretized normal form.)")), ToolInput(tag="in_compute_genes_from_file", input_type=File(optional=True), prefix="--compute-genes-from-file", doc=InputDocumentation(doc="Runs on a set of genes from a file. Takes as input:\n(1) a two-column tab-delimited file, where column 1 is\nthe event ID (ID field from GFF) and the second column\nis the path to the indexed GFF file for that event.\nMISO will run on all the events described in the file,\n(2) a sorted, indexed BAM file to run on, and (3) a\ndirectory to output results to.")), ToolInput(tag="in_compare_samples", input_type=Directory(optional=True), prefix="--compare-samples", doc=InputDocumentation(doc="Compute comparison statistics between the two given\nsamples. Expects three directories: the first is\nsample1's MISO output, the second is sample2's MISO\noutput, and the third is the directory where results\nof the sample comparison will be outputted.")), ToolInput(tag="in_comparison_labels", input_type=Int(optional=True), prefix="--comparison-labels", doc=InputDocumentation(doc="Use these labels for the sample comparison made by\n--compare-samples. Takes two arguments: the label for\nsample 1 and the label for sample 2, where sample 1\nand sample 2 correspond to the order of samples given\nto --compare-samples.")), ToolInput(tag="in_summarize_samples", input_type=File(optional=True), prefix="--summarize-samples", doc=InputDocumentation(doc="Compute summary statistics of the given set of\nsamples. Expects a directory with MISO output and a\ndirectory to output summary file to.")), ToolInput(tag="in_summary_label", input_type=File(optional=True), prefix="--summary-label", doc=InputDocumentation(doc="Label for MISO summary file. If not given, uses\nbasename of MISO output directory.")), ToolInput(tag="in_use_cluster", input_type=Int(optional=True), prefix="--use-cluster", doc=InputDocumentation(doc="Size (in number of events) of each job to chunk events\nfile into. Only applies when running on cluster.")), ToolInput(tag="in_settings_filename", input_type=File(optional=True), prefix="--settings-filename", doc=InputDocumentation(doc="Filename specifying MISO settings.")), ToolInput(tag="in_overhang_len", input_type=Int(optional=True), prefix="--overhang-len", doc=InputDocumentation(doc="Event type of two-isoform events (e.g. 'SE', 'RI',\n'A3SS', ...)")), ToolInput(tag="in_use_compressed", input_type=File(optional=True), prefix="--use-compressed", doc=InputDocumentation(doc="Use compressed event IDs. Takes as input a\ngenes_to_filenames.shelve file produced by the\nindex_gff script.")), ToolInput(tag="in_view_gene", input_type=File(optional=True), prefix="--view-gene", doc=InputDocumentation(doc="View the contents of a gene/event that has been\nindexed. Takes as input an indexed (.pickle) filename.\n"))], outputs=[ToolOutput(tag="out_compute_gene_psi", output_type=File(optional=True), selector=InputSelector(input_to_select="in_compute_gene_psi", type_hint=File()), doc=OutputDocumentation(doc="Compute Psi using for a given multi-isoform gene.\nExpects four arguments: the first is a gene ID or set\nof comma-separated (no spaces) gene IDs, the second is\na GFF indexed file with the gene information, the\nthird is a sorted and indexed BAM file with reads\naligned to the gene, and the fourth is an output\ndirectory.")), ToolOutput(tag="out_compare_samples", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_compare_samples", type_hint=File()), doc=OutputDocumentation(doc="Compute comparison statistics between the two given\nsamples. Expects three directories: the first is\nsample1's MISO output, the second is sample2's MISO\noutput, and the third is the directory where results\nof the sample comparison will be outputted.")), ToolOutput(tag="out_summarize_samples", output_type=File(optional=True), selector=InputSelector(input_to_select="in_summarize_samples", type_hint=File()), doc=OutputDocumentation(doc="Compute summary statistics of the given set of\nsamples. Expects a directory with MISO output and a\ndirectory to output summary file to.")), ToolOutput(tag="out_summary_label", output_type=File(optional=True), selector=InputSelector(input_to_select="in_summary_label", type_hint=File()), doc=OutputDocumentation(doc="Label for MISO summary file. If not given, uses\nbasename of MISO output directory."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Run_Miso_Py_V0_1_0().translate("wdl", allow_empty_container=True)

