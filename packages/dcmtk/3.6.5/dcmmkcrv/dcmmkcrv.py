from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Dcmmkcrv_V0_1_0 = CommandToolBuilder(tool="dcmmkcrv", base_command=["dcmmkcrv"], inputs=[ToolInput(tag="in_arguments", input_type=Boolean(optional=True), prefix="--arguments", doc=InputDocumentation(doc="print expanded command line arguments")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="quiet mode, print no warnings and errors")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="verbose mode, print processing details")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="debug mode, print debug information")), ToolInput(tag="in_log_level", input_type=Boolean(optional=True), prefix="--log-level", doc=InputDocumentation(doc="[l]evel: string constant\n(fatal, error, warn, info, debug, trace)\nuse level l for the logger")), ToolInput(tag="in_log_config", input_type=Boolean(optional=True), prefix="--log-config", doc=InputDocumentation(doc="[f]ilename: string\nuse config file f for the logger")), ToolInput(tag="in_poly", input_type=Boolean(optional=True), prefix="--poly", doc=InputDocumentation(doc="create as POLY curve (default)")), ToolInput(tag="in_curve_vr", input_type=Boolean(optional=True), prefix="--curve-vr", doc=InputDocumentation(doc="[n]umber: integer 0..2 (default: 0)\nselect VR with which the Curve Data element is written\n0=VR according to --data-vr, 1=OB, 2=OW")), ToolInput(tag="in_group", input_type=Boolean(optional=True), prefix="--group", doc=InputDocumentation(doc="[n]umber: integer 0..15 (default: 0)\nselect repeating group: 0=0x5000, 1=0x5002 etc.")), ToolInput(tag="in_label", input_type=Boolean(optional=True), prefix="--label", doc=InputDocumentation(doc="s: string\nset Curve Label to s (default: absent)")), ToolInput(tag="in_axis", input_type=Boolean(optional=True), prefix="--axis", doc=InputDocumentation(doc="x: string, y: string\nset Axis Units to x\y (default: absent)\n")), ToolInput(tag="in_dcm_file_in", input_type=String(), position=0, doc=InputDocumentation(doc="DICOM input image file")), ToolInput(tag="in_curve_data_in", input_type=String(), position=1, doc=InputDocumentation(doc="curve data input file (text)")), ToolInput(tag="in_dcm_file_out", input_type=String(), position=2, doc=InputDocumentation(doc="DICOM output filename")), ToolInput(tag="in_string", input_type=String(), position=0, doc=InputDocumentation(doc="set Curve Description to s (default: absent)"))], outputs=[], container="quay.io/biocontainers/dcmtk:3.6.5--h5fca97b_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Dcmmkcrv_V0_1_0().translate("wdl")

