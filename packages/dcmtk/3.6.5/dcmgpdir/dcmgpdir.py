from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Dcmgpdir_V0_1_0 = CommandToolBuilder(tool="dcmgpdir", base_command=["dcmgpdir"], inputs=[ToolInput(tag="in_arguments", input_type=Boolean(optional=True), prefix="--arguments", doc=InputDocumentation(doc="print expanded command line arguments")), ToolInput(tag="in_quiet", input_type=Boolean(optional=True), prefix="--quiet", doc=InputDocumentation(doc="quiet mode, print no warnings and errors")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="verbose mode, print processing details")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="debug mode, print debug information")), ToolInput(tag="in_log_level", input_type=Boolean(optional=True), prefix="--log-level", doc=InputDocumentation(doc="[l]evel: string constant\n(fatal, error, warn, info, debug, trace)\nuse level l for the logger")), ToolInput(tag="in_log_config", input_type=Boolean(optional=True), prefix="--log-config", doc=InputDocumentation(doc="[f]ilename: string\nuse config file f for the logger")), ToolInput(tag="in_keep_filenames", input_type=Boolean(optional=True), prefix="--keep-filenames", doc=InputDocumentation(doc="expect filenames to be in DICOM format (def.)")), ToolInput(tag="in_no_recurse", input_type=Boolean(optional=True), prefix="--no-recurse", doc=InputDocumentation(doc="do not recurse within directories (default)")), ToolInput(tag="in_no_consistency_check", input_type=Boolean(optional=True), prefix="--no-consistency-check", doc=InputDocumentation(doc="do not check files for consistency")), ToolInput(tag="in_abort_in_consist_file", input_type=Boolean(optional=True), prefix="--abort-inconsist-file", doc=InputDocumentation(doc="abort on first inconsistent file")), ToolInput(tag="in_strict", input_type=Boolean(optional=True), prefix="--strict", doc=InputDocumentation(doc="exit with error if DICOMDIR type 1 attributes\nare missing in DICOM file (default)")), ToolInput(tag="in_no_xfer_check", input_type=Boolean(optional=True), prefix="--no-xfer-check", doc=InputDocumentation(doc="do not reject images with non-standard\ntransfer syntax (just warn)")), ToolInput(tag="in_replace", input_type=Boolean(optional=True), prefix="--replace", doc=InputDocumentation(doc="replace existing DICOMDIR (default)")), ToolInput(tag="in_discard", input_type=Boolean(optional=True), prefix="--discard", doc=InputDocumentation(doc="do not write out DICOMDIR")), ToolInput(tag="in_create_backup", input_type=Boolean(optional=True), prefix="--create-backup", doc=InputDocumentation(doc="create a backup of existing DICOMDIR (def.)")), ToolInput(tag="in_no_backup", input_type=Boolean(optional=True), prefix="--no-backup", doc=InputDocumentation(doc="do not create a backup of existing DICOMDIR")), ToolInput(tag="in_disable_new_vr", input_type=Boolean(optional=True), prefix="--disable-new-vr", doc=InputDocumentation(doc="disable support for new VRs, convert to OB")), ToolInput(tag="in_group_length_remove", input_type=Boolean(optional=True), prefix="--group-length-remove", doc=InputDocumentation(doc="write without group length elements (default)")), ToolInput(tag="in_length_undefined", input_type=Boolean(optional=True), prefix="--length-undefined", doc=InputDocumentation(doc="write with undefined lengths")), ToolInput(tag="in_dcm_file_in", input_type=String(), position=0, doc=InputDocumentation(doc="ref. DICOM file (or directory to be scanned)"))], outputs=[], container="quay.io/biocontainers/dcmtk:3.6.5--h5fca97b_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Dcmgpdir_V0_1_0().translate("wdl")

