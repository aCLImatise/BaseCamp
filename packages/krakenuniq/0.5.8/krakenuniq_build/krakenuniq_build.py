from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String, File, Directory, Int

Krakenuniq_Build_V0_1_0 = CommandToolBuilder(tool="krakenuniq_build", base_command=["krakenuniq-build"], inputs=[ToolInput(tag="in_download_taxonomy", input_type=Boolean(optional=True), prefix="--download-taxonomy", doc=InputDocumentation(doc="Download NCBI taxonomic information")), ToolInput(tag="in_download_library", input_type=String(optional=True), prefix="--download-library", doc=InputDocumentation(doc="Download partial library (TYPE = one of 'refseq/bacteria', 'refseq/archaea', 'refseq/viral').\nUse krakenuniq-download for more options.")), ToolInput(tag="in_add_to_library", input_type=File(optional=True), prefix="--add-to-library", doc=InputDocumentation(doc="Add FILE to library")), ToolInput(tag="in_build", input_type=Boolean(optional=True), prefix="--build", doc=InputDocumentation(doc="Create DB from library (requires taxonomy d/l'ed and at\nleast one file in library)")), ToolInput(tag="in_rebuild", input_type=Boolean(optional=True), prefix="--rebuild", doc=InputDocumentation(doc="Create DB from library like --build, but remove\nexisting non-library/taxonomy files before build")), ToolInput(tag="in_clean", input_type=Boolean(optional=True), prefix="--clean", doc=InputDocumentation(doc="Remove unneeded files from a built database")), ToolInput(tag="in_shrink", input_type=String(optional=True), prefix="--shrink", doc=InputDocumentation(doc="Shrink an existing DB to have only NEW_CT k-mers")), ToolInput(tag="in_standard", input_type=Boolean(optional=True), prefix="--standard", doc=InputDocumentation(doc="Download and create default database, which contains complete genomes\nfor archaea, bacteria and viruses from RefSeq, as well as viral strains\nfrom NCBI. Specify --taxids-for-genomes and --taxids-for-sequences\nseparately, if desired.")), ToolInput(tag="in_db", input_type=Directory(optional=True), prefix="--db", doc=InputDocumentation(doc="Kraken DB directory (mandatory except for --help/--version)")), ToolInput(tag="in_threads", input_type=Boolean(optional=True), prefix="--threads", doc=InputDocumentation(doc="#                Number of threads (def: 1)")), ToolInput(tag="in_new_db", input_type=String(optional=True), prefix="--new-db", doc=InputDocumentation(doc="New Kraken DB name (shrink task only; mandatory\nfor shrink task)")), ToolInput(tag="in_km_er_len", input_type=Int(optional=True), prefix="--kmer-len", doc=InputDocumentation(doc="K-mer length in bp (build/shrink tasks only;\ndef: 31)")), ToolInput(tag="in_minimizer_len", input_type=Int(optional=True), prefix="--minimizer-len", doc=InputDocumentation(doc="Minimizer length in bp (build/shrink tasks only;\ndef: 15)")), ToolInput(tag="in_jellyfish_hash_size", input_type=Int(optional=True), prefix="--jellyfish-hash-size", doc=InputDocumentation(doc="Pass a specific hash size argument to jellyfish\nwhen building database (build task only)")), ToolInput(tag="in_jellyfish_bin", input_type=String(optional=True), prefix="--jellyfish-bin", doc=InputDocumentation(doc="Use STR as Jellyfish 1 binary.")), ToolInput(tag="in_max_db_size", input_type=Int(optional=True), prefix="--max-db-size", doc=InputDocumentation(doc="Shrink the DB before full build, making sure\ndatabase and index together use <= SIZE gigabytes\n(build task only)")), ToolInput(tag="in_shrink_block_offset", input_type=Int(optional=True), prefix="--shrink-block-offset", doc=InputDocumentation(doc="When shrinking, select the k-mer that is NUM\npositions from the end of a block of k-mers\n(default: 1)")), ToolInput(tag="in_work_on_disk", input_type=Boolean(optional=True), prefix="--work-on-disk", doc=InputDocumentation(doc="Perform most operations on disk rather than in\nRAM (will slow down build in most cases)")), ToolInput(tag="in_tax_ids_for_genomes", input_type=Boolean(optional=True), prefix="--taxids-for-genomes", doc=InputDocumentation(doc="Add taxonomy IDs (starting with 1 billion) for genomes.\nOnly works with 3-column seqid2taxid map with third\ncolumn being the name")), ToolInput(tag="in_tax_ids_for_sequences", input_type=Boolean(optional=True), prefix="--taxids-for-sequences", doc=InputDocumentation(doc="Add taxonomy IDs for sequences, starting with 1 billion.\nCan be useful to resolve classifications with multiple genomes\nfor one taxonomy ID.")), ToolInput(tag="in_min_contig_size", input_type=Int(optional=True), prefix="--min-contig-size", doc=InputDocumentation(doc="Minimum contig size for inclusion in database.\nUse with draft genomes to reduce contamination, e.g. with values between 1000 and 10000.")), ToolInput(tag="in_library_dir", input_type=String(optional=True), prefix="--library-dir", doc=InputDocumentation(doc="Use DIR for reference sequences instead of DBDIR/library.")), ToolInput(tag="in_taxonomy_dir", input_type=String(optional=True), prefix="--taxonomy-dir", doc=InputDocumentation(doc="Use DIR for taxonomy instead of DBDIR/taxonomy.")), ToolInput(tag="in_uid_database", input_type=Boolean(optional=True), prefix="--uid-database", doc=InputDocumentation(doc="Build a UID database (default no)")), ToolInput(tag="in_lca_database", input_type=Boolean(optional=True), prefix="--lca-database", doc=InputDocumentation(doc="Build a LCA database (default yes)")), ToolInput(tag="in_no_lca_database", input_type=Boolean(optional=True), prefix="--no-lca-database", doc=InputDocumentation(doc="Do not build a LCA database")), ToolInput(tag="in_task", input_type=String(optional=True), position=0, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Krakenuniq_Build_V0_1_0().translate("wdl", allow_empty_container=True)

