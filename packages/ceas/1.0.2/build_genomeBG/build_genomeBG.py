from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, File

Build_Genomebg_V0_1_0 = CommandToolBuilder(tool="build_genomeBG", base_command=["build_genomeBG"], inputs=[ToolInput(tag="in_db", input_type=Int(optional=True), prefix="--db", doc=InputDocumentation(doc="Genome of UCSC (eg hg18). If -d (--db) is not given,\nthis script searches for a local sqlite3 referenced by\n-g (--gt). WARNING: MySQLdb must be installed to use\nthe tables of UCSC.")), ToolInput(tag="in_gt", input_type=File(optional=True), prefix="--gt", doc=InputDocumentation(doc="Name of the gene annotation table (or local sqlite3\nfile) (eg refGene or knownGene). If -d (--db) is\ngiven, build_genomeBG will connect to UCSC and\ndownload the specified gene table. Otherwise,\nbuild_genomeBG search for a local sqlite3 file with\nthe name.")), ToolInput(tag="in_wig", input_type=File(optional=True), prefix="--wig", doc=InputDocumentation(doc="WIG file needed to obtain genome locations in BG\nannotation. VariableStep and fixedWig files are\naccepted.")), ToolInput(tag="in_ot", input_type=File(optional=True), prefix="--ot", doc=InputDocumentation(doc="Output sqlite3 db file name. The gene annotation table\nread from the local sqlite3 file or UCSC DB will be\nsaved in a table named as 'GeneTable' and the computed\ngenome bg annotation will be saved in two tables named\nas 'GenomeBGS' and 'GenomeBGP. If this option is not\ngiven, this script generates a sqlite3 file with the\nsame name as given through -g (--gt). WARNING! When an\nexisting local sqlite3 file is opened and saved as the\nsame name, the tables in the file will be overwritten.")), ToolInput(tag="in_promoter", input_type=Int(optional=True), prefix="--promoter", doc=InputDocumentation(doc="Maximum promoter size to consider for genome bg\nannotation. This must be >= 1000bp. Any value less\nthan 1000bp will be set to 1000bp. DEFAULT: 10000bp")), ToolInput(tag="in_bi_promoter", input_type=Int(optional=True), prefix="--bipromoter", doc=InputDocumentation(doc="Maximum Bidirectional promoter size to consider for\ngenome bg annotation. This must be >= 1000bp. Any\nvalue less than 1000bp will be set to 1000bp. DEFAULT:\n20000bp")), ToolInput(tag="in_downstream", input_type=Int(optional=True), prefix="--downstream", doc=InputDocumentation(doc="Maximum immediate downstream size to consider for\ngenome bg annotation. This must be >= 1000bp. Any\nvalue less than 1000bp will be set to 1000bp. DEFAULT:\n10000bp")), ToolInput(tag="in_binsize", input_type=Int(optional=True), prefix="--binsize", doc=InputDocumentation(doc="Binsize with which to bin promoter, bidirectional\npromoter, and immediate downstream sizes. In each bin,\nthe percentage of genome will be calculated.\nDEFAULT=1000bp\n"))], outputs=[ToolOutput(tag="out_ot", output_type=File(optional=True), selector=InputSelector(input_to_select="in_ot", type_hint=File()), doc=OutputDocumentation(doc="Output sqlite3 db file name. The gene annotation table\nread from the local sqlite3 file or UCSC DB will be\nsaved in a table named as 'GeneTable' and the computed\ngenome bg annotation will be saved in two tables named\nas 'GenomeBGS' and 'GenomeBGP. If this option is not\ngiven, this script generates a sqlite3 file with the\nsame name as given through -g (--gt). WARNING! When an\nexisting local sqlite3 file is opened and saved as the\nsame name, the tables in the file will be overwritten."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Build_Genomebg_V0_1_0().translate("wdl", allow_empty_container=True)

