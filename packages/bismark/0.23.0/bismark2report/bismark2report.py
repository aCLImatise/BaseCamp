from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Directory

Bismark2Report_V0_1_0 = CommandToolBuilder(tool="bismark2report", base_command=["bismark2report"], inputs=[ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="Name of the output file (optional). If not specified explicitly, the output filename will be derived\nfrom the Bismark alignment report file. Specifying an output filename only works if the HTML report is\nto be generated for a single Bismark alignment report (and potentially additional reports).")), ToolInput(tag="in_dir", input_type=Directory(optional=True), prefix="--dir", doc=InputDocumentation(doc="Output directory. Output is written to the current directory if not specified explicitly.")), ToolInput(tag="in_alignment_report", input_type=File(optional=True), prefix="--alignment_report", doc=InputDocumentation(doc="If not specified explicitly, bismark2report attempts to find Bismark report file(s) in the current\ndirectory and produces a separate HTML report for each mapping report file. Based on the basename of\nthe Bismark mapping report, bismark2report will also attempt to find the other Bismark reports (see below)\nfor inclusion into the HTML report. Specifying a Bismark alignment report file is mandatory.")), ToolInput(tag="in_ded_up_report", input_type=File(optional=True), prefix="--dedup_report", doc=InputDocumentation(doc="If not specified explicitly, bismark2report attempts to find a deduplication report file with the same\nbasename as the Bismark mapping report (generated by deduplicate_bismark) in the\ncurrent working directory. Including a deduplication report is optional, and using the FILE 'none'\nwill skip this step entirely.")), ToolInput(tag="in_splitting_report", input_type=File(optional=True), prefix="--splitting_report", doc=InputDocumentation(doc="If not specified explicitly, bismark2report attempts to find a splitting report file with the same\nbasename as the Bismark mapping report (generated by the Bismark methylation extractor) in the current\nworking directory. Including a splitting report is optional, and using the FILE 'none' will skip this\nstep entirely.")), ToolInput(tag="in_m_bias_report", input_type=File(optional=True), prefix="--mbias_report", doc=InputDocumentation(doc="If not specified explicitly, bismark2report attempts to find a single M-bias report file with the same\nbasename as the Bismark mapping report (generated by the Bismark methylation extractor) in the current\nworking directory. Including an M-Bias report is optional, and using the FILE 'none' will skip this step\nentirely.")), ToolInput(tag="in_nucleotide_report", input_type=File(optional=True), prefix="--nucleotide_report", doc=InputDocumentation(doc="If not specified explicitly, bismark2report attempts to find a single nucleotide coverage report file\nwith the same basename as the Bismark mapping report (generated by Bismark with the option\n'--nucleotide_coverage') in the current working directory. Including a nucleotide coverage statistics\nreport is optional, and using the FILE 'none' will skip this report entirely.\nScript last modified: 03 May 2019\n"))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="Name of the output file (optional). If not specified explicitly, the output filename will be derived\nfrom the Bismark alignment report file. Specifying an output filename only works if the HTML report is\nto be generated for a single Bismark alignment report (and potentially additional reports).")), ToolOutput(tag="out_dir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_dir", type_hint=File()), doc=OutputDocumentation(doc="Output directory. Output is written to the current directory if not specified explicitly."))], container="quay.io/biocontainers/bismark:0.23.0--0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bismark2Report_V0_1_0().translate("wdl")

