from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean

Cansnper2_Database_V0_1_0 = CommandToolBuilder(tool="CanSNPer2_database", base_command=["CanSNPer2-database"], inputs=[ToolInput(tag="in_database", input_type=Boolean(optional=True), prefix="--database", doc=InputDocumentation(doc="CanSNPer2 database name")), ToolInput(tag="in_tree", input_type=Boolean(optional=True), prefix="--tree", doc=InputDocumentation(doc="CanSNPer tree source file")), ToolInput(tag="in_annotation", input_type=Boolean(optional=True), prefix="--annotation", doc=InputDocumentation(doc="CanSNPer snp source file")), ToolInput(tag="in_references", input_type=Boolean(optional=True), prefix="--references", doc=InputDocumentation(doc="File containing all reference genomes listed")), ToolInput(tag="in_source_type", input_type=Boolean(optional=True), prefix="--source_type", doc=InputDocumentation(doc="Select source file type")), ToolInput(tag="in_create", input_type=Boolean(optional=True), prefix="--create", doc=InputDocumentation(doc="Create new database!")), ToolInput(tag="in_mod_file", input_type=Boolean(optional=True), prefix="--mod_file", doc=InputDocumentation(doc="File with modifications/update to the tree")), ToolInput(tag="in_parent", input_type=Boolean(optional=True), prefix="--parent", doc=InputDocumentation(doc="Node (or nodes matching tree file) from which to\nupdate/replace/remove")), ToolInput(tag="in_remove", input_type=Boolean(optional=True), prefix="--remove", doc=InputDocumentation(doc="If node is given, instead of replace/update remove branch\nfrom node")), ToolInput(tag="in_replace", input_type=Boolean(optional=True), prefix="--replace", doc=InputDocumentation(doc="replace node")), ToolInput(tag="in_export", input_type=Boolean(optional=True), prefix="--export", doc=InputDocumentation(doc="Export database to text format (exports tree and\nannotation file)")), ToolInput(tag="in_export_format", input_type=Boolean(optional=True), prefix="--export_format", doc=InputDocumentation(doc="Select output format [tab, newick]")), ToolInput(tag="in_outdir", input_type=Boolean(optional=True), prefix="--outdir", doc=InputDocumentation(doc="outdir for database export!")), ToolInput(tag="in_tmpdir", input_type=Boolean(optional=True), prefix="--tmpdir", doc=InputDocumentation(doc="Specify tmp directory default (/tmp)")), ToolInput(tag="in_logs", input_type=Boolean(optional=True), prefix="--logs", doc=InputDocumentation(doc="Specify log directory")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="print process info, default no output")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="print debug info")), ToolInput(tag="in_supress", input_type=Boolean(optional=True), prefix="--supress", doc=InputDocumentation(doc="supress warnings"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Cansnper2_Database_V0_1_0().translate("wdl", allow_empty_container=True)

