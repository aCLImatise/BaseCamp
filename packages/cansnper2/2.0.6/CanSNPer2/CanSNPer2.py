from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Directory, File, Int, String

Cansnper2_V0_1_0 = CommandToolBuilder(tool="CanSNPer2", base_command=["CanSNPer2"], inputs=[ToolInput(tag="in_database", input_type=Boolean(optional=True), prefix="--database", doc=InputDocumentation(doc="CanSNP database")), ToolInput(tag="in_outdir", input_type=Directory(optional=True), prefix="--outdir", doc=InputDocumentation(doc="Output directory")), ToolInput(tag="in_save_tree", input_type=Boolean(optional=True), prefix="--save_tree", doc=InputDocumentation(doc="Save tree as PDF using ETE3 (default False)")), ToolInput(tag="in_no_snp_files", input_type=Boolean(optional=True), prefix="--no_snpfiles", doc=InputDocumentation(doc="DonÂ´t save output files.")), ToolInput(tag="in_summary", input_type=File(optional=True), prefix="--summary", doc=InputDocumentation(doc="Output a summary file and tree with all called SNPs\nnot affected by no_snpfiles")), ToolInput(tag="in_ref_dir", input_type=Boolean(optional=True), prefix="--refdir", doc=InputDocumentation(doc="Specify reference directory")), ToolInput(tag="in_workdir", input_type=Boolean(optional=True), prefix="--workdir", doc=InputDocumentation(doc="Change workdir default (./)")), ToolInput(tag="in_read_input", input_type=Boolean(optional=True), prefix="--read_input", doc=InputDocumentation(doc="Select if input is reads not fasta")), ToolInput(tag="in_min_required_hits", input_type=Int(optional=True), prefix="--min_required_hits", doc=InputDocumentation(doc="Minimum sequential hits to call a SNP!")), ToolInput(tag="in_strictness", input_type=File(optional=True), prefix="--strictness", doc=InputDocumentation(doc="Percent of snps in path reqired for calling SNP\n(default 0.7)")), ToolInput(tag="in_keep_going", input_type=Boolean(optional=True), prefix="--keep_going", doc=InputDocumentation(doc="If Error occurs, continue with the rest of samples")), ToolInput(tag="in_rerun", input_type=Boolean(optional=True), prefix="--rerun", doc=InputDocumentation(doc="Rerun already processed files (else skip if result\nfile exists)")), ToolInput(tag="in_skip_mauve", input_type=Boolean(optional=True), prefix="--skip_mauve", doc=InputDocumentation(doc="If xmfa files already exists skip step")), ToolInput(tag="in_keep_temp", input_type=Boolean(optional=True), prefix="--keep_temp", doc=InputDocumentation(doc="keep temporary files")), ToolInput(tag="in_tmpdir", input_type=Boolean(optional=True), prefix="--tmpdir", doc=InputDocumentation(doc="Specify reference directory")), ToolInput(tag="in_logdir", input_type=Boolean(optional=True), prefix="--logdir", doc=InputDocumentation(doc="Specify log directory")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Verbose output")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="Debug output")), ToolInput(tag="in_supress", input_type=Boolean(optional=True), prefix="--supress", doc=InputDocumentation(doc="Supress warnings")), ToolInput(tag="in_query", input_type=String(), position=0, doc=InputDocumentation(doc="File(s) to align (fasta)"))], outputs=[ToolOutput(tag="out_outdir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_outdir", type_hint=File()), doc=OutputDocumentation(doc="Output directory")), ToolOutput(tag="out_summary", output_type=File(optional=True), selector=InputSelector(input_to_select="in_summary", type_hint=File()), doc=OutputDocumentation(doc="Output a summary file and tree with all called SNPs\nnot affected by no_snpfiles"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Cansnper2_V0_1_0().translate("wdl", allow_empty_container=True)

