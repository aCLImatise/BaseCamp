from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, Boolean, String, File

Modify_Column_Pl_V0_1_0 = CommandToolBuilder(tool="modify_column.pl", base_command=["modify_column.pl"], inputs=[ToolInput(tag="in_column_modify_default", input_type=Int(optional=True), prefix="-c", doc=InputDocumentation(doc="The column to modify (default: 0; specify multiple columns using commas) (zero-based)")), ToolInput(tag="in_rows_modify_default", input_type=Int(optional=True), prefix="-r", doc=InputDocumentation(doc="The rows to modify (default: All except -skipped; specify multiple rows using commas) (zero-based)")), ToolInput(tag="in_apply_transformation_columns", input_type=Boolean(optional=True), prefix="-A", doc=InputDocumentation(doc="Apply transformation to ALL columns")), ToolInput(tag="in_min", input_type=Int(optional=True), prefix="-min", doc=InputDocumentation(doc="Apply transformation only if entry is above (or equal) num")), ToolInput(tag="in_max", input_type=Int(optional=True), prefix="-max", doc=InputDocumentation(doc="Apply transformation only if entry is below (or equal) num")), ToolInput(tag="in_mins", input_type=Int(optional=True), prefix="-mins", doc=InputDocumentation(doc="Apply transformation only if entry is strictly above num")), ToolInput(tag="in_maxs", input_type=Int(optional=True), prefix="-maxs", doc=InputDocumentation(doc="Apply transformation only if entry is strictly below num")), ToolInput(tag="in_rng", input_type=Boolean(optional=True), prefix="-rng", doc=InputDocumentation(doc="<num1,num2> Apply transformation only if num1<=entry<=num2")), ToolInput(tag="in_rngs", input_type=Boolean(optional=True), prefix="-rngs", doc=InputDocumentation(doc="<num1,num2> Apply transformation only if num1<entry<num2")), ToolInput(tag="in_abs", input_type=Int(optional=True), prefix="-abs", doc=InputDocumentation(doc=":    Apply transformation only if entry is above <num> or below -<num>")), ToolInput(tag="in_babs", input_type=Int(optional=True), prefix="-babs", doc=InputDocumentation(doc=":   Apply transformation only if entry is above -<num> and below <num>")), ToolInput(tag="in_str", input_type=String(optional=True), prefix="-str", doc=InputDocumentation(doc=":    Apply transformation only if entry contains <str>")), ToolInput(tag="in_est_r", input_type=String(optional=True), prefix="-estr", doc=InputDocumentation(doc=":   Apply transformation only if entry is equal to <str>")), ToolInput(tag="in_nstr", input_type=String(optional=True), prefix="-nstr", doc=InputDocumentation(doc=":   Apply transformation only if entry is *not* equal to <str>")), ToolInput(tag="in_ne", input_type=Boolean(optional=True), prefix="-ne", doc=InputDocumentation(doc=":           Apply transormation only if entry is not empty")), ToolInput(tag="in_empty", input_type=Boolean(optional=True), prefix="-empty", doc=InputDocumentation(doc=":        Apply transormation only if entry is empty")), ToolInput(tag="in_pairs", input_type=File(optional=True), prefix="-pairs", doc=InputDocumentation(doc=": Apply transformation only if the entry is from a row and column\nthat appear in a line of <file> as <row name> <tab> <column name>")), ToolInput(tag="in_skip", input_type=Int(optional=True), prefix="-skip", doc=InputDocumentation(doc=":   Skip num rows in the file (default: 0)")), ToolInput(tag="in_skip_c", input_type=Int(optional=True), prefix="-skipc", doc=InputDocumentation(doc=":  Skip num columns (when applying to all columns, can skip the first few) (default: 0)")), ToolInput(tag="in_add_num_column", input_type=Int(optional=True), prefix="-a", doc=InputDocumentation(doc="Add <num> to the column (default: 0)")), ToolInput(tag="in_substract_num_column", input_type=Int(optional=True), prefix="-s", doc=InputDocumentation(doc="Substract <num> to the column (default: 0)")), ToolInput(tag="in_multiply_column_num", input_type=Int(optional=True), prefix="-m", doc=InputDocumentation(doc="Multiply column by <num> (default: 1) (write ''-1'' to pass negative numbers)")), ToolInput(tag="in_divide_column_num", input_type=Int(optional=True), prefix="-d", doc=InputDocumentation(doc="Divide column by <num> (default: 1) (write ''-1'' to pass negative numbers)")), ToolInput(tag="in_in_v", input_type=Boolean(optional=True), prefix="-inv", doc=InputDocumentation(doc="Inverse of column")), ToolInput(tag="in_ab", input_type=Boolean(optional=True), prefix="-ab", doc=InputDocumentation(doc="Absolute value of column")), ToolInput(tag="in_neg_two_pos", input_type=Boolean(optional=True), prefix="-neg2pos", doc=InputDocumentation(doc="Convert negative numbers to positive")), ToolInput(tag="in_log", input_type=Boolean(optional=True), prefix="-log", doc=InputDocumentation(doc="Take log (natural base) of the column")), ToolInput(tag="in_log_two", input_type=Boolean(optional=True), prefix="-log2", doc=InputDocumentation(doc="Take log (base 2) of the column")), ToolInput(tag="in_log_one_zero", input_type=Boolean(optional=True), prefix="-log10", doc=InputDocumentation(doc="Take log (base 10) of the column")), ToolInput(tag="in_exp", input_type=Int(optional=True), prefix="-exp", doc=InputDocumentation(doc="Take num ** (value of the column)")), ToolInput(tag="in_take_e_value", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc="Take e=2.1782... ** (value of column)")), ToolInput(tag="in_pow", input_type=Int(optional=True), prefix="-pow", doc=InputDocumentation(doc="Raise vaule to the power of num (value of the column)")), ToolInput(tag="in_substr", input_type=Int(optional=True), prefix="-substr", doc=InputDocumentation(doc="If the column has more than num chars, then substr the first num")), ToolInput(tag="in_set_min", input_type=Int(optional=True), prefix="-set_min", doc=InputDocumentation(doc="If the column has a value less than num, set it to num")), ToolInput(tag="in_set_max", input_type=Int(optional=True), prefix="-set_max", doc=InputDocumentation(doc="If the column has a value greater than num, set it to num")), ToolInput(tag="in_type", input_type=Int(optional=True), prefix="-type", doc=InputDocumentation(doc=":   <Number/String> (default: Number)")), ToolInput(tag="in_len", input_type=Boolean(optional=True), prefix="-len", doc=InputDocumentation(doc="Replace value (treated as a string) by its length in characters")), ToolInput(tag="in_reverse", input_type=Boolean(optional=True), prefix="-reverse", doc=InputDocumentation(doc="Reverse the string (ABC becomes CBA)")), ToolInput(tag="in_dc", input_type=Int(optional=True), prefix="-dc", doc=InputDocumentation(doc="Divide the column by the number in column <col>")), ToolInput(tag="in_mc", input_type=Int(optional=True), prefix="-mc", doc=InputDocumentation(doc="Multiply the column by the number in column <col>")), ToolInput(tag="in_ac", input_type=Int(optional=True), prefix="-ac", doc=InputDocumentation(doc="Add the number in column <col> to the column")), ToolInput(tag="in_sc", input_type=Int(optional=True), prefix="-sc", doc=InputDocumentation(doc="Subtract the number in column <col> from the column")), ToolInput(tag="in_minc", input_type=Int(optional=True), prefix="-minc", doc=InputDocumentation(doc="Take the min of the column and <col>")), ToolInput(tag="in_max_c", input_type=Int(optional=True), prefix="-maxc", doc=InputDocumentation(doc="Take the max of the column and <col>")), ToolInput(tag="in_bins", input_type=Int(optional=True), prefix="-bins", doc=InputDocumentation(doc=":   discretize the column into <num> bins.")), ToolInput(tag="in_rescale", input_type=String(optional=True), prefix="-rescale", doc=InputDocumentation(doc="given as 'bottom,top'. linearly rescales the data in the column so that the smallest value will\nbe <bottom> and the largest will be <top>. If the data is equal in all entries, all entries\nwill be set to <bottom>.")), ToolInput(tag="in_rescale_limits", input_type=Int(optional=True), prefix="-rescale_limits", doc=InputDocumentation(doc=": given as 'min,max'. when used with -rescale assumes that the maximal value of the column is\nmax and the minimal value is min.")), ToolInput(tag="in_pd", input_type=Boolean(optional=True), prefix="-pd", doc=InputDocumentation(doc="makes the column a probability distribution by changing negative values to zero and\nthen dividing by the sum of the column.")), ToolInput(tag="in_precision_take_default", input_type=Int(optional=True), prefix="-p", doc=InputDocumentation(doc="Precision (take only <num> sig. digits. default: don't fix)")), ToolInput(tag="in_res", input_type=Int(optional=True), prefix="-res", doc=InputDocumentation(doc="Convert numbers to a <num> resolution (e.g., 0.05)")), ToolInput(tag="in_astr", input_type=String(optional=True), prefix="-astr", doc=InputDocumentation(doc="Add <str> to the end of the column (default: '')")), ToolInput(tag="in_bstr", input_type=String(optional=True), prefix="-bstr", doc=InputDocumentation(doc="Add <str> to the beginning of the column (default: '')")), ToolInput(tag="in_set", input_type=String(optional=True), prefix="-set", doc=InputDocumentation(doc="Set the entry to <str> (put EMPTY for getting an empty entry)")), ToolInput(tag="in_rm_re", input_type=String(optional=True), prefix="-rmre", doc=InputDocumentation(doc="Remove string that matches the regular expression <regexp> from column")), ToolInput(tag="in_pv", input_type=Boolean(optional=True), prefix="-pv", doc=InputDocumentation(doc="Set numerical values around a given pivot (see -pv_val, -pv_high, -pv_low). Activated when <bool> = 1.\nNon numerical values are not modified.")), ToolInput(tag="in_pv_val", input_type=Boolean(optional=True), prefix="-pv_val", doc=InputDocumentation(doc="<num> The pivot value (default: 0.05)")), ToolInput(tag="in_pv_high", input_type=Int(optional=True), prefix="-pv_high", doc=InputDocumentation(doc="The number to set values greater then the pivot value (default: 0)")), ToolInput(tag="in_pv_low", input_type=Boolean(optional=True), prefix="-pv_low", doc=InputDocumentation(doc="<num> The number to set values smaller equal then the pivot value (default: 1)")), ToolInput(tag="in_splt_d", input_type=String(optional=True), prefix="-splt_d", doc=InputDocumentation(doc="Split the column by the delimiter <del> (default: none).")), ToolInput(tag="in_cumul", input_type=Boolean(optional=True), prefix="-cumul", doc=InputDocumentation(doc="Accumulate (row i = row 1 + .. + row i)")), ToolInput(tag="in_when_dividing_zero", input_type=Int(optional=True), prefix="-zero", doc=InputDocumentation(doc="When dividing by zero, uses <num> instead of giving an error (default: 999999)"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Modify_Column_Pl_V0_1_0().translate("wdl", allow_empty_container=True)

