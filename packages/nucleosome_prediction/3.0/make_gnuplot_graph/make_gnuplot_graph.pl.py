from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, Boolean, String, File, Float

Make_Gnuplot_Graph_Pl_V0_1_0 = CommandToolBuilder(tool="make_gnuplot_graph.pl", base_command=["make_gnuplot_graph.pl"], inputs=[ToolInput(tag="in_x_one", input_type=Int(optional=True), prefix="-x1", doc=InputDocumentation(doc=":       Index of the x column (x-axis). NOTE: 1-based. NOTE: use -x2... to specify more indices to plot")), ToolInput(tag="in_y_one", input_type=Int(optional=True), prefix="-y1", doc=InputDocumentation(doc=":       Index of the y column (y-axis). NOTE: 1-based. NOTE: use -y2... to specify more indices to plot")), ToolInput(tag="in_e_one", input_type=Int(optional=True), prefix="-e1", doc=InputDocumentation(doc=":       Index of the error bar column (y-axis). NOTE: 1-based. NOTE: use -e2... to specify more indices to plot")), ToolInput(tag="in_kone", input_type=Int(optional=True), prefix="-k1", doc=InputDocumentation(doc=":       Key of the plot (default: printed on the upper right-hand side). NOTE: use -k2... to specify more key names to plot; use 'notitle' for no key")), ToolInput(tag="in_ds_one", input_type=Int(optional=True), prefix="-ds1", doc=InputDocumentation(doc=":      Data style for the column. NOTE: 1-based. NOTE: use -ds2... to specify more data styles to plot")), ToolInput(tag="in_fs_one", input_type=Int(optional=True), prefix="-fs1", doc=InputDocumentation(doc=":      Fill style for the column. NOTE: 1-based. NOTE: use -fs2... to specify more fill styles to plot")), ToolInput(tag="in_pos_one", input_type=Int(optional=True), prefix="-pos1", doc=InputDocumentation(doc=":     Position of the first plot (e.g. 'screen 0.35,0.14'). NOTE: Use -org2... to specify more positions (default: screen 0,0)")), ToolInput(tag="in_size_one", input_type=Boolean(optional=True), prefix="-size1", doc=InputDocumentation(doc="<x,y>:    Size of the first plot (e.g. '0.5,0.5'). NOTE: Use -size2... to specify more sizes (default: 1,1).")), ToolInput(tag="in_psone", input_type=Int(optional=True), prefix="-ps1", doc=InputDocumentation(doc=":      Point size of the first plot. NOTE: Use ps2... to specify point sizes of other plots")), ToolInput(tag="in_lt_one", input_type=Int(optional=True), prefix="-lt1", doc=InputDocumentation(doc=":      Line type of the first plot. NOTE: Use lt2... to specify line types of other plots. If none are specified random types will be allocated.")), ToolInput(tag="in_lw_one", input_type=Int(optional=True), prefix="-lw1", doc=InputDocumentation(doc=":      Line width of the first plot. NOTE: Use lw2... to specify line widths of other plots (default: 1).")), ToolInput(tag="in_smooth_one", input_type=Int(optional=True), prefix="-smooth1", doc=InputDocumentation(doc=":  Type of smoothing to apply to plotted data. Options are: 'unique', 'frequency', 'acsplines', 'csplines', 'bezier' or 'sbezier'.")), ToolInput(tag="in_key", input_type=String(optional=True), prefix="-key", doc=InputDocumentation(doc=":      Global key features: <location> [ samplen <len> ] [ [no]box] [off]")), ToolInput(tag="in_key_one", input_type=Int(optional=True), prefix="-key1", doc=InputDocumentation(doc=":     Features of key to the first plot. NOTE: use -key2... for more plots.")), ToolInput(tag="in_ep", input_type=String(optional=True), prefix="-ep", doc=InputDocumentation(doc=":       Extra string to plot (e.g., <str> = 'exp(-x)')")), ToolInput(tag="in_d_two", input_type=Int(optional=True), prefix="-d2", doc=InputDocumentation(doc=":       Name of second data file to plot. NOTE: 1-based. NOTE: use -d3... to specify more data files\nNOTE: if not specified, uses the same file for all plots")), ToolInput(tag="in_name_output_produce", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc=":       The name of the output file to produce")), ToolInput(tag="in_output_format_output", input_type=File(optional=True), prefix="-f", doc=InputDocumentation(doc=":       Output format for the output file (default: png)")), ToolInput(tag="in_ds", input_type=String(optional=True), prefix="-ds", doc=InputDocumentation(doc=":     Data style (boxes/line/point/linespoint/imp default: point)")), ToolInput(tag="in_ps", input_type=Int(optional=True), prefix="-ps", doc=InputDocumentation(doc=":       Point size (default: 0.2)")), ToolInput(tag="in_lsx", input_type=Boolean(optional=True), prefix="-lsx", doc=InputDocumentation(doc="Log scale for x-axis (obsolete, use -logscale)")), ToolInput(tag="in_ls_y", input_type=Boolean(optional=True), prefix="-lsy", doc=InputDocumentation(doc="Log scale for y-axis (obsolete, use -logscale)")), ToolInput(tag="in_xlc", input_type=Int(optional=True), prefix="-xlc", doc=InputDocumentation(doc="Use column <num> as labels for x-axis (one-based)")), ToolInput(tag="in_ylc", input_type=Int(optional=True), prefix="-ylc", doc=InputDocumentation(doc="Use column <num> as labels for y-axis (one-based)")), ToolInput(tag="in_xl", input_type=String(optional=True), prefix="-xl", doc=InputDocumentation(doc="Label for x-axis")), ToolInput(tag="in_yl", input_type=String(optional=True), prefix="-yl", doc=InputDocumentation(doc="Label for y-axis")), ToolInput(tag="in_x_two_l", input_type=Int(optional=True), prefix="-x2l", doc=InputDocumentation(doc="Label for x2-axis")), ToolInput(tag="in_y_two_l", input_type=Int(optional=True), prefix="-y2l", doc=InputDocumentation(doc="Label for y2-axis")), ToolInput(tag="in_xz", input_type=String(optional=True), prefix="-xz", doc=InputDocumentation(doc=":       Draw an x-zero axis. Use <str> to define the line width (default: same as border)")), ToolInput(tag="in_y_z", input_type=String(optional=True), prefix="-yz", doc=InputDocumentation(doc=":       Draw an y-zero axis. Use <str> to define the line width (default: same as border)")), ToolInput(tag="in_xr", input_type=Boolean(optional=True), prefix="-xr", doc=InputDocumentation(doc="<num:num>    global x-axis range (format 'Low:High', e.g., 1:141)")), ToolInput(tag="in_yr", input_type=Boolean(optional=True), prefix="-yr", doc=InputDocumentation(doc="<num:num>    global y-axis range (format 'Low:High')")), ToolInput(tag="in_xr_one", input_type=Boolean(optional=True), prefix="-xr1", doc=InputDocumentation(doc="<num:num>   x-axis range of first plot. NOTE: use -xr2... to specify x-axis of other plots")), ToolInput(tag="in_yr_one", input_type=Boolean(optional=True), prefix="-yr1", doc=InputDocumentation(doc="<num:num>   y-axis range of first plot. NOTE: use -yr2... to specify y-axis of other plots")), ToolInput(tag="in_axone", input_type=Int(optional=True), prefix="-ax1", doc=InputDocumentation(doc="specify which axes to use (x1y1, x1y2, x2y1 or x2y2). use -ax2 ... to specify axes\nfor other plots.")), ToolInput(tag="in_x_two_r", input_type=Boolean(optional=True), prefix="-x2r", doc=InputDocumentation(doc="<num:num>   global x2-axis range (format 'Low:High', e.g., 1:141)")), ToolInput(tag="in_y_two_r", input_type=Boolean(optional=True), prefix="-y2r", doc=InputDocumentation(doc="<num:num>   global y2-axis range (format 'Low:High')")), ToolInput(tag="in_x_two_r_one", input_type=Boolean(optional=True), prefix="-x2r1", doc=InputDocumentation(doc="<num:num>  x2-axis range of first plot. NOTE: use -x2r2... to specify x2-axis of other plots")), ToolInput(tag="in_y_two_r_one", input_type=Boolean(optional=True), prefix="-y2r1", doc=InputDocumentation(doc="<num:num>  y2-axis range of first plot. NOTE: use -y2r2... to specify y2-axis of other plots")), ToolInput(tag="in_x_tics", input_type=Int(optional=True), prefix="-xtics", doc=InputDocumentation(doc="Global tics frequency on the x range (or specify autofreq)")), ToolInput(tag="in_ytics", input_type=Int(optional=True), prefix="-ytics", doc=InputDocumentation(doc="Global tics frequency on the y range (or specify autofreq)")), ToolInput(tag="in_x_tics_one", input_type=Int(optional=True), prefix="-xtics1", doc=InputDocumentation(doc="xtics for the first plot. NOTE: use -xtics2... to specify xtics of more plots")), ToolInput(tag="in_ytics_one", input_type=Int(optional=True), prefix="-ytics1", doc=InputDocumentation(doc="ytics for the first plot. NOTE: use -ytics2... to specify ytics of more plots")), ToolInput(tag="in_x_two_tics", input_type=Int(optional=True), prefix="-x2tics", doc=InputDocumentation(doc="Global tics frequency on the x2 range (or specify autofreq)")), ToolInput(tag="in_y_two_tics", input_type=Int(optional=True), prefix="-y2tics", doc=InputDocumentation(doc="Global tics frequency on the y2 range (or specify autofreq)")), ToolInput(tag="in_x_two_tics_one", input_type=Int(optional=True), prefix="-x2tics1", doc=InputDocumentation(doc="x2tics for the first plot. NOTE: use -x2tics2... to specify x2tics of more plots")), ToolInput(tag="in_y_two_tics_one", input_type=Int(optional=True), prefix="-y2tics1", doc=InputDocumentation(doc="y2tics for the first plot. NOTE: use -y2tics2... to specify y2tics of more plots")), ToolInput(tag="in_log_scale", input_type=Int(optional=True), prefix="-logscale", doc=InputDocumentation(doc="Sets the given axis to logscale. axis can be x, y ,x2 ,y2 or any combination (e.g. xyx2)")), ToolInput(tag="in_additional_commands_gnuplot", input_type=String(optional=True), prefix="-c", doc=InputDocumentation(doc="Additional commands for gnuplot. \n will be made into newline")), ToolInput(tag="in_title_graph_default", input_type=String(optional=True), prefix="-t", doc=InputDocumentation(doc="Title for the graph (default: no title)")), ToolInput(tag="in_multiplot", input_type=String(optional=True), prefix="-multiplot", doc=InputDocumentation(doc="Use multiplot mode (<str> can be left empty or be given layout and title commands).")), ToolInput(tag="in_grid", input_type=Boolean(optional=True), prefix="-grid", doc=InputDocumentation(doc=":           Sets on grid for the plot")), ToolInput(tag="in_grid_x", input_type=Boolean(optional=True), prefix="-gridx", doc=InputDocumentation(doc=":          Sets on grid only for x-axis")), ToolInput(tag="in_grid_y", input_type=Boolean(optional=True), prefix="-gridy", doc=InputDocumentation(doc=":          Sets on grid only for y-axis")), ToolInput(tag="in_no_border", input_type=Boolean(optional=True), prefix="-noborder", doc=InputDocumentation(doc=":       Create plots with no border")), ToolInput(tag="in_half_border", input_type=Boolean(optional=True), prefix="-half_border", doc=InputDocumentation(doc=":    Create plots with only left and bottom borders (and tics)")), ToolInput(tag="in_png", input_type=File(optional=True), prefix="-png", doc=InputDocumentation(doc=":            Create a png as the output file and not plotting commands")), ToolInput(tag="in_postscript", input_type=File(optional=True), prefix="-postscript", doc=InputDocumentation(doc=":     Create a postscript as the output file")), ToolInput(tag="in_colors", input_type=Boolean(optional=True), prefix="-colors", doc=InputDocumentation(doc=":         (only for -png) Colors pallete to use. A list of xrrggbb format where the elements are:\nbackground, border, x/y axis, line type 1, line type 2 ...\nDefault pallete is: 'xffffff x000000 x404040 xff0000 xffa500 x66cdaa xcdb5cd x1ea4ff x0000ff xdda0dd x9500d3'")), ToolInput(tag="in_font_size", input_type=Boolean(optional=True), prefix="-fontsize", doc=InputDocumentation(doc=":       (only for -png) Fontsize for nonscalable font use tiny/small/medium/large/giant (default small).\nFor scalable font specify a pointsize (default 10).")), ToolInput(tag="in_font", input_type=Float(optional=True), prefix="-font", doc=InputDocumentation(doc=":     (only for -png) Use a scalable ttf/pfa font (choose from /storage/appl/gnuplot-4.2.2/share/fonts/ , default Tahoma.ttf when -font is used)")), ToolInput(tag="in_image_size", input_type=Boolean(optional=True), prefix="-image_size", doc=InputDocumentation(doc=":     In png mode -- output png size in pixels (not supported on all machines).\nIn postscript mode -- output size of the figure. Font is not affected. Use -image_size 0.8 to increase font by 20%")), ToolInput(tag="in_ratio", input_type=Int(optional=True), prefix="-ratio", doc=InputDocumentation(doc=":    Set the ratio of the graph (width / height). Default is 1. Use 0.5 to make image wide, 2 to make it tall etc.")), ToolInput(tag="in_skip", input_type=Int(optional=True), prefix="-skip", doc=InputDocumentation(doc=":     amount of header rows to skip")), ToolInput(tag="in_all", input_type=Boolean(optional=True), prefix="-all", doc=InputDocumentation(doc=":            plot all columns: 1st column is x axis, other columns are various y axis data series.\nfirst line is assumed to have keys of the y columns.\nlines (other than first) that start with # will not be plotted. such lines can give\ncolumn-specific commands in -all multiplot mode, e.g. set a different range for each column.\na sample line should look like this: #yrange<tab>[0:3]<tab>[2:4]<tab>[0:2]")), ToolInput(tag="in_e_all", input_type=Boolean(optional=True), prefix="-e_all", doc=InputDocumentation(doc=":          Use with -all to add errorbars to the data series. error value columns should appear\nby respective order after all y value columns, e.g. [x] [y1]...[y5] [e1]...[e5] .")), ToolInput(tag="in_compare_to_last", input_type=File(optional=True), prefix="-compare_to_last", doc=InputDocumentation(doc="with -all and -multiplot in order to add the last column of the data file to every plot in the multiplot\nand NOT as a seperate plot")), ToolInput(tag="in_no_key", input_type=Boolean(optional=True), prefix="-no_key", doc=InputDocumentation(doc="Supress printing of keys in a -all plot")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="-debug", doc=InputDocumentation(doc=":          Print the resulting commands to STDOUT"))], outputs=[ToolOutput(tag="out_name_output_produce", output_type=File(optional=True), selector=InputSelector(input_to_select="in_name_output_produce", type_hint=File()), doc=OutputDocumentation(doc=":       The name of the output file to produce")), ToolOutput(tag="out_output_format_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_format_output", type_hint=File()), doc=OutputDocumentation(doc=":       Output format for the output file (default: png)")), ToolOutput(tag="out_png", output_type=File(optional=True), selector=InputSelector(input_to_select="in_png", type_hint=File()), doc=OutputDocumentation(doc=":            Create a png as the output file and not plotting commands")), ToolOutput(tag="out_postscript", output_type=File(optional=True), selector=InputSelector(input_to_select="in_postscript", type_hint=File()), doc=OutputDocumentation(doc=":     Create a postscript as the output file"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Make_Gnuplot_Graph_Pl_V0_1_0().translate("wdl", allow_empty_container=True)

