from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String, Int

Getrnapred_V0_1_0 = CommandToolBuilder(tool="getRnaPred", base_command=["getRnaPred"], inputs=[ToolInput(tag="in_weird", input_type=Boolean(optional=True), prefix="-weird", doc=InputDocumentation(doc="- only get ones with weird splice sites")), ToolInput(tag="in_cds_upper", input_type=Boolean(optional=True), prefix="-cdsUpper", doc=InputDocumentation(doc="- output CDS in upper case")), ToolInput(tag="in_cds_only", input_type=Boolean(optional=True), prefix="-cdsOnly", doc=InputDocumentation(doc="- only output CDS")), ToolInput(tag="in_cds_out", input_type=File(optional=True), prefix="-cdsOut", doc=InputDocumentation(doc="- write CDS to this tab-separated file, in the form")), ToolInput(tag="in_keep_masking", input_type=Boolean(optional=True), prefix="-keepMasking", doc=InputDocumentation(doc="- un/masked in upper/lower case.")), ToolInput(tag="in_psl_out", input_type=String(optional=True), prefix="-pslOut", doc=InputDocumentation(doc="- output a PSLs for the virtual mRNAs.  Allows virtual\nmRNA to be analyzed by tools that work on PSLs")), ToolInput(tag="in_suffix", input_type=String(optional=True), prefix="-suffix", doc=InputDocumentation(doc="- append suffix to each id to avoid confusion with mRNAs\nuse to define the genes.")), ToolInput(tag="in_peptides", input_type=Boolean(optional=True), prefix="-peptides", doc=InputDocumentation(doc="- out the translation of the CDS to a peptide sequence.\nThe newer program genePredToProt maybe produce better results in cases\nwere there are frame-shifting indels in the CDS.")), ToolInput(tag="in_exon_indices", input_type=Boolean(optional=True), prefix="-exonIndices", doc=InputDocumentation(doc="- output indices of exon boundaries after sequence name,\ne.g., '103 243 290' says positions 1-103 are from the first exon,\npositions 104-243 are from the second exon, etc.")), ToolInput(tag="in_maxsize", input_type=Int(optional=True), prefix="-maxSize", doc=InputDocumentation(doc="- output a maximum of size characters.  Useful when\ntesting gene predictions by RT-PCR.")), ToolInput(tag="in_genome_seqs", input_type=File(optional=True), prefix="-genomeSeqs", doc=InputDocumentation(doc="- get genome sequences from the specified nib directory\nor 2bit file instead of going though the path found in chromInfo.")), ToolInput(tag="in_include_coords", input_type=Boolean(optional=True), prefix="-includeCoords", doc=InputDocumentation(doc="- include the genomic coordinates as a comment in the\nfasta header.  This is necessary when there are multiple genePreds\nwith the same name.")), ToolInput(tag="in_gene_pred_ext", input_type=Boolean(optional=True), prefix="-genePredExt", doc=InputDocumentation(doc="- (for use with -peptides) use extended genePred format,\nand consider frame information when translating (Warning: only\nconsiders offset at 5' end, not frameshifts between blocks)\n")), ToolInput(tag="in_acc", input_type=String(), position=0, doc=InputDocumentation(doc="start  end"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Getrnapred_V0_1_0().translate("wdl", allow_empty_container=True)

