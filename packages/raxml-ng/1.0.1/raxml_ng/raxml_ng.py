from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Int, String

Raxml_Ng_V0_1_0 = CommandToolBuilder(tool="raxml_ng", base_command=["raxml-ng"], inputs=[ToolInput(tag="in_evaluate", input_type=Boolean(optional=True), prefix="--evaluate", doc=InputDocumentation(doc="evaluate the likelihood of a tree (with model+brlen optimization)")), ToolInput(tag="in_search", input_type=Boolean(optional=True), prefix="--search", doc=InputDocumentation(doc="ML tree search (default: 10 parsimony + 10 random starting trees)")), ToolInput(tag="in_bootstrap", input_type=Boolean(optional=True), prefix="--bootstrap", doc=InputDocumentation(doc="bootstrapping (default: use bootstopping to auto-detect #replicates)")), ToolInput(tag="in_all", input_type=Boolean(optional=True), prefix="--all", doc=InputDocumentation(doc="all-in-one (ML search + bootstrapping)")), ToolInput(tag="in_support", input_type=Boolean(optional=True), prefix="--support", doc=InputDocumentation(doc="compute bipartition support for a given reference tree (e.g., best ML tree)\nand a set of replicate trees (e.g., from a bootstrap analysis)")), ToolInput(tag="in_bs_converge", input_type=Boolean(optional=True), prefix="--bsconverge", doc=InputDocumentation(doc="test for bootstrapping convergence using autoMRE criterion")), ToolInput(tag="in_bsms_a", input_type=Boolean(optional=True), prefix="--bsmsa", doc=InputDocumentation(doc="generate bootstrap replicate MSAs")), ToolInput(tag="in_terrace", input_type=Boolean(optional=True), prefix="--terrace", doc=InputDocumentation(doc="check whether a tree lies on a phylogenetic terrace")), ToolInput(tag="in_check", input_type=Boolean(optional=True), prefix="--check", doc=InputDocumentation(doc="check alignment correctness and remove empty columns/rows")), ToolInput(tag="in_parse", input_type=Boolean(optional=True), prefix="--parse", doc=InputDocumentation(doc="parse alignment, compress patterns and create binary MSA file")), ToolInput(tag="in_start", input_type=Boolean(optional=True), prefix="--start", doc=InputDocumentation(doc="generate parsimony/random starting trees and exit")), ToolInput(tag="in_rf_dist", input_type=Boolean(optional=True), prefix="--rfdist", doc=InputDocumentation(doc="compute pair-wise Robinson-Foulds (RF) distances between trees")), ToolInput(tag="in_con_sense", input_type=Boolean(optional=True), prefix="--consense", doc=InputDocumentation(doc="[ STRICT | MR | MR<n> | MRE ]   build strict, majority-rule (MR) or extended MR (MRE) consensus tree (default: MR)\neg: --consense MR75 --tree bsrep.nw")), ToolInput(tag="in_ancestral", input_type=Boolean(optional=True), prefix="--ancestral", doc=InputDocumentation(doc="ancestral state reconstruction at all inner nodes")), ToolInput(tag="in_site_lh", input_type=Boolean(optional=True), prefix="--sitelh", doc=InputDocumentation(doc="print per-site log-likelihood values")), ToolInput(tag="in_search_one", input_type=Boolean(optional=True), prefix="--search1", doc=InputDocumentation(doc="Alias for: --search --tree rand{1}")), ToolInput(tag="in_log_lh", input_type=Boolean(optional=True), prefix="--loglh", doc=InputDocumentation(doc="Alias for: --evaluate --opt-model off --opt-branches off --nofiles --log result")), ToolInput(tag="in_rf", input_type=Boolean(optional=True), prefix="--rf", doc=InputDocumentation(doc="Alias for: --rfdist --nofiles --log result")), ToolInput(tag="in_tree", input_type=Boolean(optional=True), prefix="--tree", doc=InputDocumentation(doc="rand{N} | pars{N} | FILE starting tree: rand(om), pars(imony) or user-specified (newick file)\nN = number of trees (default: rand{10},pars{10})")), ToolInput(tag="in_msa", input_type=Boolean(optional=True), prefix="--msa", doc=InputDocumentation(doc="FILE                     alignment file")), ToolInput(tag="in_msa_format", input_type=Boolean(optional=True), prefix="--msa-format", doc=InputDocumentation(doc="VALUE                    alignment file format: FASTA, PHYLIP, CATG or AUTO-detect (default)")), ToolInput(tag="in_data_type", input_type=Boolean(optional=True), prefix="--data-type", doc=InputDocumentation(doc="VALUE                    data type: DNA, AA, BIN(ary) or AUTO-detect (default)")), ToolInput(tag="in_tree_constraint", input_type=File(optional=True), prefix="--tree-constraint", doc=InputDocumentation(doc="constraint tree")), ToolInput(tag="in_prefix", input_type=File(optional=True), prefix="--prefix", doc=InputDocumentation(doc="STRING                   prefix for output files (default: MSA file name)")), ToolInput(tag="in_log", input_type=Boolean(optional=True), prefix="--log", doc=InputDocumentation(doc="VALUE                    log verbosity: ERROR,WARNING,RESULT,INFO,PROGRESS,DEBUG (default: PROGRESS)")), ToolInput(tag="in_redo", input_type=Boolean(optional=True), prefix="--redo", doc=InputDocumentation(doc="overwrite existing result files and ignore checkpoints (default: OFF)")), ToolInput(tag="in_no_files", input_type=Boolean(optional=True), prefix="--nofiles", doc=InputDocumentation(doc="do not create any output files, print results to the terminal only")), ToolInput(tag="in_precision", input_type=Boolean(optional=True), prefix="--precision", doc=InputDocumentation(doc="VALUE                    number of decimal places to print (default: 6)")), ToolInput(tag="in_out_group", input_type=Boolean(optional=True), prefix="--outgroup", doc=InputDocumentation(doc="o1,o2,..,oN              comma-separated list of outgroup taxon names (it's just a drawing option!)")), ToolInput(tag="in_site_weights", input_type=Boolean(optional=True), prefix="--site-weights", doc=InputDocumentation(doc="FILE                     file with MSA column weights (positive integers only!)")), ToolInput(tag="in_seed", input_type=Boolean(optional=True), prefix="--seed", doc=InputDocumentation(doc="VALUE                       seed for pseudo-random number generator (default: current time)")), ToolInput(tag="in_pat_comp", input_type=Boolean(optional=True), prefix="--pat-comp", doc=InputDocumentation(doc="on | off                    alignment pattern compression (default: ON)")), ToolInput(tag="in_tip_inner", input_type=Boolean(optional=True), prefix="--tip-inner", doc=InputDocumentation(doc="on | off                    tip-inner case optimization (default: OFF)")), ToolInput(tag="in_site_repeats", input_type=Int(optional=True), prefix="--site-repeats", doc=InputDocumentation(doc="| off                    use site repeats optimization, 10%-60% faster than tip-inner (default: ON)")), ToolInput(tag="in_threads", input_type=Boolean(optional=True), prefix="--threads", doc=InputDocumentation(doc="VALUE                       number of parallel threads to use (default: 1)")), ToolInput(tag="in_workers", input_type=Boolean(optional=True), prefix="--workers", doc=InputDocumentation(doc="VALUE                       number of tree searches to run in parallel (default: 1)")), ToolInput(tag="in_simd", input_type=Boolean(optional=True), prefix="--simd", doc=InputDocumentation(doc="none | sse3 | avx | avx2    vector instruction set to use (default: auto-detect).")), ToolInput(tag="in_rate_scalers", input_type=Int(optional=True), prefix="--rate-scalers", doc=InputDocumentation(doc="| off                    use individual CLV scalers for each rate category (default: ON for >2000 taxa)")), ToolInput(tag="in_force", input_type=Boolean(optional=True), prefix="--force", doc=InputDocumentation(doc="[ <CHECKS> ]                disable safety checks (please think twice!)")), ToolInput(tag="in_model", input_type=Boolean(optional=True), prefix="--model", doc=InputDocumentation(doc="<name>+G[n]+<Freqs> | FILE  model specification OR partition file")), ToolInput(tag="in_br_len", input_type=Boolean(optional=True), prefix="--brlen", doc=InputDocumentation(doc="linked | scaled | unlinked  branch length linkage between partitions (default: scaled)")), ToolInput(tag="in_blm_in", input_type=Boolean(optional=True), prefix="--blmin", doc=InputDocumentation(doc="VALUE                       minimum branch length (default: 1e-6)")), ToolInput(tag="in_bl_max", input_type=Boolean(optional=True), prefix="--blmax", doc=InputDocumentation(doc="VALUE                       maximum branch length (default: 100)")), ToolInput(tag="in_bl_opt", input_type=Boolean(optional=True), prefix="--blopt", doc=InputDocumentation(doc="nr_fast    | nr_safe        branch length optimization method (default: nr_fast)\nnr_oldfast | nr_oldsafe")), ToolInput(tag="in_opt_model", input_type=Boolean(optional=True), prefix="--opt-model", doc=InputDocumentation(doc="on | off                    ML optimization of all model parameters (default: ON)")), ToolInput(tag="in_opt_branches", input_type=String(optional=True), prefix="--opt-branches", doc=InputDocumentation(doc="| off                    ML optimization of all branch lengths (default: ON)")), ToolInput(tag="in_prob_msa", input_type=Boolean(optional=True), prefix="--prob-msa", doc=InputDocumentation(doc="on | off                    use probabilistic alignment (works with CATG and VCF)")), ToolInput(tag="in_lh_epsilon", input_type=Boolean(optional=True), prefix="--lh-epsilon", doc=InputDocumentation(doc="VALUE                       log-likelihood epsilon for optimization/tree search (default: 0.1)")), ToolInput(tag="in_spr_radius", input_type=Boolean(optional=True), prefix="--spr-radius", doc=InputDocumentation(doc="VALUE                       SPR re-insertion radius for fast iterations (default: AUTO)")), ToolInput(tag="in_spr_cut_off", input_type=Boolean(optional=True), prefix="--spr-cutoff", doc=InputDocumentation(doc="VALUE | off                 relative LH cutoff for descending into subtrees (default: 1.0)")), ToolInput(tag="in_bs_cut_off", input_type=Boolean(optional=True), prefix="--bs-cutoff", doc=InputDocumentation(doc="VALUE                       cutoff threshold for the MRE-based bootstopping criteria (default: 0.03)")), ToolInput(tag="in_bs_metric", input_type=Boolean(optional=True), prefix="--bs-metric", doc=InputDocumentation(doc="fbp | tbe                   branch support metric: fbp = Felsenstein bootstrap (default), tbe = transfer distance"))], outputs=[ToolOutput(tag="out_prefix", output_type=File(optional=True), selector=InputSelector(input_to_select="in_prefix", type_hint=File()), doc=OutputDocumentation(doc="STRING                   prefix for output files (default: MSA file name)"))], container="quay.io/biocontainers/raxml-ng:1.0.1--h7447c1b_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Raxml_Ng_V0_1_0().translate("wdl")

