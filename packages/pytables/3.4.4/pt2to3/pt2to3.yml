!Command
command:
- pt2to3
positional:
- !Positional
  description: path to input file.
  position: 0
  name: filename
  optional: false
named:
- !Flag
  description: reverts changes, going from 3.x -> 2.x.
  synonyms:
  - -r
  - --reverse
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ignores previous_api() calls.
  synonyms:
  - -p
  - --no-ignore-previous
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: output file to write to.
  synonyms:
  - -o
  args: !SimpleFlagArg
    name: OUTPUT
  optional: true
- !Flag
  description: overwrites the file in-place.
  synonyms:
  - -i
  - --inplace
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: pt2to3 [-h] [-r] [-p] [-o OUTPUT] [-i] filename\n\nPyTables 2.x\
  \ -> 3.x API transition tool This tool displays to standard out, so\nit is common\
  \ to pipe this to another file: $ pt2to3 oldfile.py > newfile.py\n\npositional arguments:\n\
  \  filename              path to input file.\n\noptional arguments:\n  -h, --help\
  \            show this help message and exit\n  -r, --reverse         reverts changes,\
  \ going from 3.x -> 2.x.\n  -p, --no-ignore-previous\n                        ignores\
  \ previous_api() calls.\n  -o OUTPUT             output file to write to.\n  -i,\
  \ --inplace         overwrites the file in-place.\n"
generated_using:
- --help
