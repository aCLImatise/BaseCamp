from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Float, Int, String

Generate_Primers_Denovo_Py_V0_1_0 = CommandToolBuilder(tool="generate_primers_denovo.py", base_command=["generate_primers_denovo.py"], inputs=[ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Print information during execution -- useful for\ndebugging [default: False]")), ToolInput(tag="in_exclude_fast_a", input_type=File(optional=True), prefix="--exclude_fasta", doc=InputDocumentation(doc="Excluded aligned fasta file(s).  To pass multiple\nfiles, separate each file with a colon.  Example: -e\ntest1.fasta:test2.fasta.  If not specified, will skip\nexclusion step [default: none]")), ToolInput(tag="in_percent_match", input_type=Float(optional=True), prefix="--percent_match", doc=InputDocumentation(doc="Percentage of sequence matches to primer that must\nmatch in order to retain prospective sequence in\ndictionary. [default: 0.6]")), ToolInput(tag="in_full_primer_length", input_type=Int(optional=True), prefix="--full_primer_length", doc=InputDocumentation(doc="Overall primer length to retrieve from sequences.\n[default: 20]")), ToolInput(tag="in_x_mer_length", input_type=Int(optional=True), prefix="--xmer_length", doc=InputDocumentation(doc="Xmer length to search for in target fasta sequence(s).\n[default: 5]")), ToolInput(tag="in_specificity_threshold", input_type=Float(optional=True), prefix="--specificity_threshold", doc=InputDocumentation(doc="Sets specificity threshold for excluded fasta\nsequences. [default: 0.01]")), ToolInput(tag="in_log_file", input_type=File(optional=True), prefix="--log_file", doc=InputDocumentation(doc="log filepath. If not specified, no log file will be\nwritten.  [default: none]")), ToolInput(tag="in_standard_index_file", input_type=File(optional=True), prefix="--standard_index_file", doc=InputDocumentation(doc="Aligned sequence file with which to assign prospective\nprimer indices to.  The alignment where a conserved\nsequence is found will be used to determine the\nunaligned index in the supplied file (for instance an\nE. coli sequence) and will be recorded in the output\nfile for the purpose of giving a meaningful name to\nprospective primers.  Only the first sequence in the\nfile will be used for determining an index [default:\nnone]")), ToolInput(tag="in_search_range", input_type=Int(optional=True), prefix="--search_range", doc=InputDocumentation(doc="Range of nucleotides in the supplied aligned target\nsequences to search for primers.  Supply the starting\nindex and end index separated by a colon.  Example -r\n1500:2700  Enable this option to generate primers that\ntarget certain regions. [default: none]")), ToolInput(tag="in_target_seqs", input_type=String(optional=True), prefix="--target_seqs", doc=InputDocumentation(doc="Target aligned fasta sequence files to find conserved\nsites for primer design.  Separate multiple files with\na colon. [REQUIRED]")), ToolInput(tag="in_output_file_path", input_type=File(optional=True), prefix="--output_filepath", doc=InputDocumentation(doc="name of output filepath to write details about\nconserved sequence sites. [REQUIRED]\n"))], outputs=[ToolOutput(tag="out_standard_index_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_standard_index_file", type_hint=File()), doc=OutputDocumentation(doc="Aligned sequence file with which to assign prospective\nprimer indices to.  The alignment where a conserved\nsequence is found will be used to determine the\nunaligned index in the supplied file (for instance an\nE. coli sequence) and will be recorded in the output\nfile for the purpose of giving a meaningful name to\nprospective primers.  Only the first sequence in the\nfile will be used for determining an index [default:\nnone]")), ToolOutput(tag="out_output_file_path", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_file_path", type_hint=File()), doc=OutputDocumentation(doc="name of output filepath to write details about\nconserved sequence sites. [REQUIRED]\n"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Generate_Primers_Denovo_Py_V0_1_0().translate("wdl", allow_empty_container=True)

