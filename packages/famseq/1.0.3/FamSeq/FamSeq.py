from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String

Famseq_V0_1_0 = CommandToolBuilder(tool="FamSeq", base_command=["FamSeq"], inputs=[ToolInput(tag="in_vcf_file", input_type=Boolean(optional=True), prefix="-vcfFile", doc=InputDocumentation(doc="The name of input vcf file.")), ToolInput(tag="in_lk_file", input_type=Boolean(optional=True), prefix="-lkFile", doc=InputDocumentation(doc="The name of input likelihood only format file.")), ToolInput(tag="in_lk_type", input_type=File(optional=True), prefix="-lkType", doc=InputDocumentation(doc="likelihood type stored in the likelihood only format file. n:normal(default); log10: log10 scaled; ln: ln scaled; PS: phred scaled.")), ToolInput(tag="in_ped_file", input_type=Boolean(optional=True), prefix="-pedFile", doc=InputDocumentation(doc="The name of the file storing the pedigree information.")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="-output", doc=InputDocumentation(doc="The name of output file")), ToolInput(tag="in_method", input_type=Boolean(optional=True), prefix="-method", doc=InputDocumentation(doc="Choose the method used in variant calling. 1(default): Bayesian network; 2: Elston-Stewart algorithm; 3: MCMC.")), ToolInput(tag="in_m_rate", input_type=Boolean(optional=True), prefix="-mRate", doc=InputDocumentation(doc="Mutation rate. The default value is 1e-7")), ToolInput(tag="in_only_record_position", input_type=File(optional=True), prefix="-v", doc=InputDocumentation(doc="Only record the position at which the genotype is not RR in the output file. (R: reference allele, A: alternative allele).")), ToolInput(tag="in_record_position_output", input_type=File(optional=True), prefix="-a", doc=InputDocumentation(doc="Record all the position in the output file.")), ToolInput(tag="in_genopro_bn", input_type=Boolean(optional=True), prefix="-genoProbN", doc=InputDocumentation(doc="Genotype probability of three kinds of genotype for autosome in population (Pr(G)) when the variant is not in dbSNP. The default value is:  0.9985, 0.001 and 0.0005. The dbSNP position should be provided in column ID in input vcf file.")), ToolInput(tag="in_genopro_bk", input_type=Boolean(optional=True), prefix="-genoProbK", doc=InputDocumentation(doc="Genotype probability of three kinds of genotype for autosome in population (Pr(G)) when the variant is in dbSNP. The default value is: 0.45, 0.1 and 0.45.")), ToolInput(tag="in_genopro_bxn", input_type=Boolean(optional=True), prefix="-genoProbXN", doc=InputDocumentation(doc="Genotype probability of two kinds of genotype for chromosome X for male in population (Pr(G)) when the variant is not in dbSNP. The default value is: 0.999 and 0.001.")), ToolInput(tag="in_genopro_bx_k", input_type=Boolean(optional=True), prefix="-genoProbXK", doc=InputDocumentation(doc="Genotype probability of two kinds of genotype for chromosome X for male in population (Pr(G)) when the variant is in dbSNP. The default value is: 0.5 and 0.5.")), ToolInput(tag="in_num_burnin", input_type=Boolean(optional=True), prefix="-numBurnIn", doc=InputDocumentation(doc="Number of burn in when the user chooses the MCMC method. The default value is 1,000n, where n is the number of individuals in the pedigree.")), ToolInput(tag="in_num_rep", input_type=Boolean(optional=True), prefix="-numRep", doc=InputDocumentation(doc="Number of iteration times when the user chooses MCMC method. The default value is 20,000n.")), ToolInput(tag="in_input_type", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="The name of output file")), ToolOutput(tag="out_only_record_position", output_type=File(optional=True), selector=InputSelector(input_to_select="in_only_record_position", type_hint=File()), doc=OutputDocumentation(doc="Only record the position at which the genotype is not RR in the output file. (R: reference allele, A: alternative allele).")), ToolOutput(tag="out_record_position_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_record_position_output", type_hint=File()), doc=OutputDocumentation(doc="Record all the position in the output file."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Famseq_V0_1_0().translate("wdl", allow_empty_container=True)

