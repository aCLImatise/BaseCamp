from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Int, Boolean, Float, String, File

Csvtk_Plot_Hist_V0_1_0 = CommandToolBuilder(tool="csvtk_plot_hist", base_command=["csvtk", "plot", "hist"], inputs=[ToolInput(tag="in_bins", input_type=Int(optional=True), prefix="--bins", doc=InputDocumentation(doc="number of bins (default 50)")), ToolInput(tag="in_color_index", input_type=Int(optional=True), prefix="--color-index", doc=InputDocumentation(doc="color index, 1-7 (default 1)")), ToolInput(tag="in_percentiles", input_type=Boolean(optional=True), prefix="--percentiles", doc=InputDocumentation(doc="calculate percentiles")), ToolInput(tag="in_axis_width", input_type=Float(optional=True), prefix="--axis-width", doc=InputDocumentation(doc="axis width (default 1.5)")), ToolInput(tag="in_chunk_size", input_type=Int(optional=True), prefix="--chunk-size", doc=InputDocumentation(doc="chunk size of CSV reader (default 50)")), ToolInput(tag="in_comment_char", input_type=String(optional=True), prefix="--comment-char", doc=InputDocumentation(doc="lines starting with commment-character will be ignored. if your header row starts with '#', please assign '-C' another rare symbol, e.g. '$' (default '#')")), ToolInput(tag="in_data_field", input_type=Int(optional=True), prefix="--data-field", doc=InputDocumentation(doc="column index or column name of data (default '1')")), ToolInput(tag="in_delimiter", input_type=File(optional=True), prefix="--delimiter", doc=InputDocumentation(doc="delimiting character of the input CSV file (default ',')")), ToolInput(tag="in_format", input_type=File(optional=True), prefix="--format", doc=InputDocumentation(doc="image format for stdout when flag -o/--out-file not given. available values: eps, jpg|jpeg, pdf, png, svg, and tif|tiff. (default 'png')")), ToolInput(tag="in_group_field", input_type=String(optional=True), prefix="--group-field", doc=InputDocumentation(doc="column index or column name of group")), ToolInput(tag="in_height", input_type=Float(optional=True), prefix="--height", doc=InputDocumentation(doc="Figure height (default 4.5)")), ToolInput(tag="in_ignore_empty_row", input_type=Boolean(optional=True), prefix="--ignore-empty-row", doc=InputDocumentation(doc="ignore empty rows")), ToolInput(tag="in_ignore_illegal_row", input_type=Boolean(optional=True), prefix="--ignore-illegal-row", doc=InputDocumentation(doc="ignore illegal rows")), ToolInput(tag="in_in_file_list", input_type=File(optional=True), prefix="--infile-list", doc=InputDocumentation(doc="file of input files list (one file per line), if given, they are appended to files from cli arguments")), ToolInput(tag="in_label_size", input_type=Int(optional=True), prefix="--label-size", doc=InputDocumentation(doc="label font size (default 14)")), ToolInput(tag="in_lazy_quotes", input_type=Boolean(optional=True), prefix="--lazy-quotes", doc=InputDocumentation(doc="if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field")), ToolInput(tag="in_no_header_row", input_type=Boolean(optional=True), prefix="--no-header-row", doc=InputDocumentation(doc="specifies that the input CSV file does not have header row")), ToolInput(tag="in_num_cpus", input_type=Int(optional=True), prefix="--num-cpus", doc=InputDocumentation(doc="number of CPUs to use (default value depends on your computer) (default 2)")), ToolInput(tag="in_out_delimiter", input_type=File(optional=True), prefix="--out-delimiter", doc=InputDocumentation(doc="delimiting character of the output CSV file, e.g., -D $'\t' for tab (default ',')")), ToolInput(tag="in_out_file", input_type=File(optional=True), prefix="--out-file", doc=InputDocumentation(doc="out file ('-' for stdout, suffix .gz for gzipped out) (default '-')")), ToolInput(tag="in_out_tabs", input_type=Boolean(optional=True), prefix="--out-tabs", doc=InputDocumentation(doc="specifies that the output is delimited with tabs. Overrides '-D'")), ToolInput(tag="in_tabs", input_type=Boolean(optional=True), prefix="--tabs", doc=InputDocumentation(doc="specifies that the input CSV file is delimited with tabs. Overrides '-d'")), ToolInput(tag="in_tick_width", input_type=Float(optional=True), prefix="--tick-width", doc=InputDocumentation(doc="axis tick width (default 1.5)")), ToolInput(tag="in_title", input_type=String(optional=True), prefix="--title", doc=InputDocumentation(doc="Figure title")), ToolInput(tag="in_title_size", input_type=Int(optional=True), prefix="--title-size", doc=InputDocumentation(doc="title font size (default 16)")), ToolInput(tag="in_width", input_type=Float(optional=True), prefix="--width", doc=InputDocumentation(doc="Figure width (default 6)")), ToolInput(tag="in_x_max", input_type=Int(optional=True), prefix="--x-max", doc=InputDocumentation(doc="maximum value of X axis")), ToolInput(tag="in_x_min", input_type=Int(optional=True), prefix="--x-min", doc=InputDocumentation(doc="minimum value of X axis")), ToolInput(tag="in_xlab", input_type=String(optional=True), prefix="--xlab", doc=InputDocumentation(doc="x label text")), ToolInput(tag="in_y_max", input_type=Int(optional=True), prefix="--y-max", doc=InputDocumentation(doc="maximum value of Y axis")), ToolInput(tag="in_y_min", input_type=Int(optional=True), prefix="--y-min", doc=InputDocumentation(doc="minimum value of Y axis")), ToolInput(tag="in_ylab", input_type=String(optional=True), prefix="--ylab", doc=InputDocumentation(doc="y label text"))], outputs=[ToolOutput(tag="out_format", output_type=File(optional=True), selector=InputSelector(input_to_select="in_format", type_hint=File()), doc=OutputDocumentation(doc="image format for stdout when flag -o/--out-file not given. available values: eps, jpg|jpeg, pdf, png, svg, and tif|tiff. (default 'png')")), ToolOutput(tag="out_out_delimiter", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_delimiter", type_hint=File()), doc=OutputDocumentation(doc="delimiting character of the output CSV file, e.g., -D $'\t' for tab (default ',')")), ToolOutput(tag="out_out_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_out_file", type_hint=File()), doc=OutputDocumentation(doc="out file ('-' for stdout, suffix .gz for gzipped out) (default '-')"))], container="quay.io/biocontainers/csvtk:0.23.0--h9ee0642_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Csvtk_Plot_Hist_V0_1_0().translate("wdl")

