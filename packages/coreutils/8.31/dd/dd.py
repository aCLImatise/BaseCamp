from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Directory

Dd_V0_1_0 = CommandToolBuilder(tool="dd", base_command=["dd"], inputs=[ToolInput(tag="in_ascii", input_type=String(), position=0, doc=InputDocumentation(doc="from EBCDIC to ASCII")), ToolInput(tag="in_ebcdic", input_type=String(), position=1, doc=InputDocumentation(doc="from ASCII to EBCDIC")), ToolInput(tag="in_ibm", input_type=String(), position=2, doc=InputDocumentation(doc="from ASCII to alternate EBCDIC")), ToolInput(tag="in_block", input_type=String(), position=3, doc=InputDocumentation(doc="pad newline-terminated records with spaces to cbs-size")), ToolInput(tag="in_unblock", input_type=String(), position=4, doc=InputDocumentation(doc="replace trailing spaces in cbs-size records with newline")), ToolInput(tag="in_l_case", input_type=String(), position=5, doc=InputDocumentation(doc="change upper case to lower case")), ToolInput(tag="in_u_case", input_type=String(), position=6, doc=InputDocumentation(doc="change lower case to upper case")), ToolInput(tag="in_sparse", input_type=String(), position=7, doc=InputDocumentation(doc="try to seek rather than write the output for NUL input blocks")), ToolInput(tag="in_swab", input_type=String(), position=8, doc=InputDocumentation(doc="swap every pair of input bytes")), ToolInput(tag="in_pad_input_block", input_type=String(), position=9, doc=InputDocumentation(doc="pad every input block with NULs to ibs-size; when used\nwith block or unblock, pad with spaces rather than NULs")), ToolInput(tag="in_excl", input_type=String(), position=10, doc=InputDocumentation(doc="fail if the output file already exists")), ToolInput(tag="in_no_creat", input_type=String(), position=11, doc=InputDocumentation(doc="do not create the output file")), ToolInput(tag="in_not_run_c", input_type=String(), position=12, doc=InputDocumentation(doc="do not truncate the output file")), ToolInput(tag="in_no_error", input_type=String(), position=13, doc=InputDocumentation(doc="continue after read errors")), ToolInput(tag="in_f_data_sync", input_type=String(), position=14, doc=InputDocumentation(doc="physically write output file data before finishing")), ToolInput(tag="in_fsync", input_type=String(), position=15, doc=InputDocumentation(doc="likewise, but also write metadata")), ToolInput(tag="in_append", input_type=String(), position=0, doc=InputDocumentation(doc="append mode (makes sense only for output; conv=notrunc suggested)")), ToolInput(tag="in_direct", input_type=String(), position=1, doc=InputDocumentation(doc="use direct I/O for data")), ToolInput(tag="in_directory", input_type=Directory(), position=2, doc=InputDocumentation(doc="fail unless a directory")), ToolInput(tag="in_d_sync", input_type=String(), position=3, doc=InputDocumentation(doc="use synchronized I/O for data")), ToolInput(tag="in_likewise_also_metadata", input_type=String(), position=4, doc=InputDocumentation(doc="likewise, but also for metadata")), ToolInput(tag="in_full_block", input_type=String(), position=5, doc=InputDocumentation(doc="accumulate full blocks of input (iflag only)")), ToolInput(tag="in_non_block", input_type=String(), position=6, doc=InputDocumentation(doc="use non-blocking I/O")), ToolInput(tag="in_noatime", input_type=String(), position=7, doc=InputDocumentation(doc="do not update access time")), ToolInput(tag="in_nocache", input_type=String(), position=8, doc=InputDocumentation(doc="Request to drop cache.  See also oflag=sync")), ToolInput(tag="in_noc_tty", input_type=String(), position=9, doc=InputDocumentation(doc="do not assign controlling terminal from file")), ToolInput(tag="in_nofollow", input_type=String(), position=10, doc=InputDocumentation(doc="do not follow symlinks")), ToolInput(tag="in_count_bytes", input_type=String(), position=11, doc=InputDocumentation(doc="treat 'count=N' as a byte count (iflag only)")), ToolInput(tag="in_skip_bytes", input_type=String(), position=12, doc=InputDocumentation(doc="treat 'skip=N' as a byte count (iflag only)")), ToolInput(tag="in_seek_bytes", input_type=String(), position=13, doc=InputDocumentation(doc="treat 'seek=N' as a byte count (oflag only)"))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Dd_V0_1_0().translate("wdl", allow_empty_container=True)

