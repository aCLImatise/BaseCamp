from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String

Amptk_Heatmap_V0_1_0 = CommandToolBuilder(tool="amptk_heatmap", base_command=["amptk", "heatmap"], inputs=[ToolInput(tag="in_input", input_type=Boolean(optional=True), prefix="--input", doc=InputDocumentation(doc="Input OTU table (Required)")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="Output file (Required)")), ToolInput(tag="in_method", input_type=Boolean(optional=True), prefix="--method", doc=InputDocumentation(doc="Type of heatmap. Default: clustermap [clustermap,heatmap]")), ToolInput(tag="in_delimiter", input_type=Boolean(optional=True), prefix="--delimiter", doc=InputDocumentation(doc="Delimiter of OTU table. Default: tsv [tsv,csv]")), ToolInput(tag="in_format", input_type=Boolean(optional=True), prefix="--format", doc=InputDocumentation(doc="Figure format. Default: pdf [pdf,jpg,svg,png]")), ToolInput(tag="in_font", input_type=Boolean(optional=True), prefix="--font", doc=InputDocumentation(doc="Font set. Default: arial")), ToolInput(tag="in_color", input_type=Boolean(optional=True), prefix="--color", doc=InputDocumentation(doc="Color Palette. Default: gist_gray_r")), ToolInput(tag="in_fig_size", input_type=Boolean(optional=True), prefix="--figsize", doc=InputDocumentation(doc="Figure size. Default: 2x8")), ToolInput(tag="in_annotate", input_type=Boolean(optional=True), prefix="--annotate", doc=InputDocumentation(doc="Annotate heatmap with values.")), ToolInput(tag="in_distance_metric", input_type=Boolean(optional=True), prefix="--distance_metric", doc=InputDocumentation(doc="Distance metric to use for clustermap. Default: braycurtis")), ToolInput(tag="in_cluster_columns", input_type=Boolean(optional=True), prefix="--cluster_columns", doc=InputDocumentation(doc="Cluster the columns (samples). Default: False [True,False]")), ToolInput(tag="in_cluster_method", input_type=Boolean(optional=True), prefix="--cluster_method", doc=InputDocumentation(doc="Clustering method for clustermap. Default: single [single,complete,average,weighted]")), ToolInput(tag="in_scaling", input_type=Boolean(optional=True), prefix="--scaling", doc=InputDocumentation(doc="Scale the data by row. Default: None [None, z_score, standard]")), ToolInput(tag="in_yaxis_font_size", input_type=Boolean(optional=True), prefix="--yaxis_fontsize", doc=InputDocumentation(doc="Y-Axis Font Size. Default: 6")), ToolInput(tag="in_x_axis_font_size", input_type=Boolean(optional=True), prefix="--xaxis_fontsize", doc=InputDocumentation(doc="X-Axis Font Size. Default: 6")), ToolInput(tag="in_normalize", input_type=Boolean(optional=True), prefix="--normalize", doc=InputDocumentation(doc="Normalize data based total, tsv file ID<tab>count")), ToolInput(tag="in_normalize_counts", input_type=Boolean(optional=True), prefix="--normalize_counts", doc=InputDocumentation(doc="Value to normalize counts to, i.e. 100000")), ToolInput(tag="in_vmax", input_type=Boolean(optional=True), prefix="--vmax", doc=InputDocumentation(doc="Maximum value for heatmap coloration.")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="Print pandas table on import to terminal")), ToolInput(tag="in_arguments", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="Output file (Required)"))], container="quay.io/biocontainers/amptk:1.5.1--py_1", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Amptk_Heatmap_V0_1_0().translate("wdl")

