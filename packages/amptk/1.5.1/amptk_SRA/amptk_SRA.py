from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, Directory, String

Amptk_Sra_V0_1_0 = CommandToolBuilder(tool="amptk_SRA", base_command=["amptk", "SRA"], inputs=[ToolInput(tag="in_fast_q", input_type=Boolean(optional=True), prefix="--fastq", doc=InputDocumentation(doc="Input folder of FASTQ files (Required)")), ToolInput(tag="in_out", input_type=Directory(optional=True), prefix="--out", doc=InputDocumentation(doc="Output folder name. Default: amptk-data")), ToolInput(tag="in_mapping_file", input_type=Boolean(optional=True), prefix="--mapping_file", doc=InputDocumentation(doc="QIIME-like mapping file")), ToolInput(tag="in_fwd_primer", input_type=Boolean(optional=True), prefix="--fwd_primer", doc=InputDocumentation(doc="Forward primer sequence. Default: fITS7")), ToolInput(tag="in_rev_primer", input_type=Boolean(optional=True), prefix="--rev_primer", doc=InputDocumentation(doc="Reverse primer sequence Default: ITS4")), ToolInput(tag="in_trim_len", input_type=Boolean(optional=True), prefix="--trim_len", doc=InputDocumentation(doc="Length to trim/pad reads. Default: 250")), ToolInput(tag="in_pad", input_type=Boolean(optional=True), prefix="--pad", doc=InputDocumentation(doc="Pad reads with Ns if shorter than --trim_len. Default: off [on,off]")), ToolInput(tag="in_min_len", input_type=Boolean(optional=True), prefix="--min_len", doc=InputDocumentation(doc="Minimum length read to keep. Default: 50")), ToolInput(tag="in_full_length", input_type=Boolean(optional=True), prefix="--full_length", doc=InputDocumentation(doc="Keep only full length sequences.")), ToolInput(tag="in_require_primer", input_type=Boolean(optional=True), prefix="--require_primer", doc=InputDocumentation(doc="Require the Forward primer to be present. Default: on [on,off]")), ToolInput(tag="in_primer_mismatch", input_type=Boolean(optional=True), prefix="--primer_mismatch", doc=InputDocumentation(doc="Number of mismatches in primers to allow. Default: 2")), ToolInput(tag="in_cpus", input_type=Boolean(optional=True), prefix="--cpus", doc=InputDocumentation(doc="Number of CPUs to use. Default: all")), ToolInput(tag="in_cleanup", input_type=Boolean(optional=True), prefix="--cleanup", doc=InputDocumentation(doc="Remove intermediate files.")), ToolInput(tag="in_u_search", input_type=Boolean(optional=True), prefix="--usearch", doc=InputDocumentation(doc="USEARCH executable. Default: usearch9")), ToolInput(tag="in_arguments", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_out", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_out", type_hint=File()), doc=OutputDocumentation(doc="Output folder name. Default: amptk-data"))], container="quay.io/biocontainers/amptk:1.5.1--py_1", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Amptk_Sra_V0_1_0().translate("wdl")

