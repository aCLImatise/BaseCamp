from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, String, Int, Boolean, Float

Weblogo_V0_1_0 = CommandToolBuilder(tool="weblogo", base_command=["weblogo"], inputs=[ToolInput(tag="in_fin", input_type=File(optional=True), prefix="--fin", doc=InputDocumentation(doc="Sequence input file (default: stdin)")), ToolInput(tag="in_upload", input_type=File(optional=True), prefix="--upload", doc=InputDocumentation(doc="Upload input file from URL")), ToolInput(tag="in_datatype", input_type=File(optional=True), prefix="--datatype", doc=InputDocumentation(doc="Type of multiple sequence alignment or\nposition weight matrix file: (clustal, fasta,\nmsf, genbank, nbrf, nexus, phylip, stockholm,\nintelligenetics, table, array, transfac)")), ToolInput(tag="in_f_out", input_type=File(optional=True), prefix="--fout", doc=InputDocumentation(doc="Output file (default: stdout)")), ToolInput(tag="in_format", input_type=String(optional=True), prefix="--format", doc=InputDocumentation(doc="Format of output: eps (default), png,\npng_print, pdf, jpeg, svg, logodata")), ToolInput(tag="in_sequence_type", input_type=String(optional=True), prefix="--sequence-type", doc=InputDocumentation(doc="The type of sequence data: 'protein', 'rna' or\n'dna'.")), ToolInput(tag="in_alphabet", input_type=String(optional=True), prefix="--alphabet", doc=InputDocumentation(doc="The set of symbols to count, e.g. 'AGTC'. All\ncharacters not in the alphabet are ignored. If\nneither the alphabet nor sequence-type are\nspecified then weblogo will examine the input\ndata and make an educated guess. See also\n--sequence-type, --ignore-lower-case")), ToolInput(tag="in_units", input_type=String(optional=True), prefix="--units", doc=InputDocumentation(doc="A unit of entropy ('bits' (default), 'nats',\n'digits'), or a unit offree energy ('kT',\n'kJ/mol', 'kcal/mol'), or 'probability' for\nprobabilities")), ToolInput(tag="in_composition", input_type=Int(optional=True), prefix="--composition", doc=InputDocumentation(doc="The expected composition of the sequences:\n'auto' (default), 'equiprobable', 'none' (do\nnot perform any compositional adjustment), a\nCG percentage, a species name (e.g. 'E. coli',\n'H. sapiens'), or an explicit distribution\n(e.g. '{'A':10, 'C':40, 'G':40, 'T':10}'). The\nautomatic option uses a typical distribution\nfor proteins and equiprobable distribution for\neverything else.")), ToolInput(tag="in_weight", input_type=Int(optional=True), prefix="--weight", doc=InputDocumentation(doc="The weight of prior data.  Default depends on\nalphabet length")), ToolInput(tag="in_first_index", input_type=Int(optional=True), prefix="--first-index", doc=InputDocumentation(doc="Index of first position in sequence data\n(default: 1)")), ToolInput(tag="in_lower", input_type=String(optional=True), prefix="--lower", doc=InputDocumentation(doc="Lower bound of sequence to display")), ToolInput(tag="in_upper", input_type=String(optional=True), prefix="--upper", doc=InputDocumentation(doc="Upper bound of sequence to display")), ToolInput(tag="in_ignore_lower_case", input_type=Boolean(optional=True), prefix="--ignore-lower-case", doc=InputDocumentation(doc="Disregard lower case letters and only count\nupper case letters in sequences.")), ToolInput(tag="in_reverse", input_type=Boolean(optional=True), prefix="--reverse", doc=InputDocumentation(doc="reverse sequences")), ToolInput(tag="in_complement", input_type=Boolean(optional=True), prefix="--complement", doc=InputDocumentation(doc="complement nucleic sequences")), ToolInput(tag="in_rev_comp", input_type=Boolean(optional=True), prefix="--revcomp", doc=InputDocumentation(doc="reverse complement nucleic sequences")), ToolInput(tag="in_size", input_type=Int(optional=True), prefix="--size", doc=InputDocumentation(doc="Specify a standard logo size (small, medium\n(default), large)")), ToolInput(tag="in_stacks_per_line", input_type=Int(optional=True), prefix="--stacks-per-line", doc=InputDocumentation(doc="Maximum number of logo stacks per logo line.\n(default: 40)")), ToolInput(tag="in_title", input_type=String(optional=True), prefix="--title", doc=InputDocumentation(doc="Logo title text.")), ToolInput(tag="in_label", input_type=Int(optional=True), prefix="--label", doc=InputDocumentation(doc="A figure label, e.g. '2a'")), ToolInput(tag="in_show_x_axis", input_type=String(optional=True), prefix="--show-xaxis", doc=InputDocumentation(doc="/NO      Display sequence numbers along x-axis?\n(default: True)")), ToolInput(tag="in_xlabel", input_type=String(optional=True), prefix="--xlabel", doc=InputDocumentation(doc="X-axis label")), ToolInput(tag="in_annotate", input_type=Int(optional=True), prefix="--annotate", doc=InputDocumentation(doc="A comma separated list of custom stack\nannotations, e.g. '1,3,4,5,6,7'.  Annotation\nlist must be same length as sequences.")), ToolInput(tag="in_rotate_numbers", input_type=String(optional=True), prefix="--rotate-numbers", doc=InputDocumentation(doc="/NO  Draw X-axis numbers with vertical orientation\n(default: False).")), ToolInput(tag="in_number_interval", input_type=Int(optional=True), prefix="--number-interval", doc=InputDocumentation(doc="Distance between numbers on X-axis (default:\n5)")), ToolInput(tag="in_yaxis", input_type=Int(optional=True), prefix="--yaxis", doc=InputDocumentation(doc="Height of yaxis in units. (Default: Maximum\nvalue with uninformative prior.)")), ToolInput(tag="in_show_yaxis", input_type=String(optional=True), prefix="--show-yaxis", doc=InputDocumentation(doc="/NO      Display entropy scale along y-axis? (default:\nTrue)")), ToolInput(tag="in_ylabel", input_type=String(optional=True), prefix="--ylabel", doc=InputDocumentation(doc="Y-axis label (default depends on plot type and\nunits)")), ToolInput(tag="in_show_ends", input_type=String(optional=True), prefix="--show-ends", doc=InputDocumentation(doc="/NO       Label the ends of the sequence? (default:\nFalse)")), ToolInput(tag="in_fine_print", input_type=String(optional=True), prefix="--fineprint", doc=InputDocumentation(doc="The fine print (default: weblogo version)")), ToolInput(tag="in_tic_marks", input_type=Int(optional=True), prefix="--ticmarks", doc=InputDocumentation(doc="Distance between ticmarks (default: 1.0)")), ToolInput(tag="in_error_bars", input_type=String(optional=True), prefix="--errorbars", doc=InputDocumentation(doc="/NO       Display error bars? (default: True)")), ToolInput(tag="in_reverse_stacks", input_type=String(optional=True), prefix="--reverse-stacks", doc=InputDocumentation(doc="/NO  Draw stacks with largest letters on top?\n(default: True)")), ToolInput(tag="in_color_scheme", input_type=String(optional=True), prefix="--color-scheme", doc=InputDocumentation(doc="Specify a standard color scheme (auto, base\npairing, charge, chemistry, classic,\nhydrophobicity, monochrome)")), ToolInput(tag="in_color", input_type=String(optional=True), prefix="--color", doc=InputDocumentation(doc="SYMBOLS DESCRIPTION\nSpecify symbol colors, e.g. --color black AG\n'Purine' --color red TC 'Pyrimidine'")), ToolInput(tag="in_default_color", input_type=String(optional=True), prefix="--default-color", doc=InputDocumentation(doc="Symbol color if not otherwise specified.")), ToolInput(tag="in_font_size", input_type=Int(optional=True), prefix="--fontsize", doc=InputDocumentation(doc="Regular text font size in points (default: 10)")), ToolInput(tag="in_title_font_size", input_type=Int(optional=True), prefix="--title-fontsize", doc=InputDocumentation(doc="Title text font size in points (default: 12)")), ToolInput(tag="in_small_font_size", input_type=Int(optional=True), prefix="--small-fontsize", doc=InputDocumentation(doc="Small text font size in points (default: 6)")), ToolInput(tag="in_number_font_size", input_type=Int(optional=True), prefix="--number-fontsize", doc=InputDocumentation(doc="Axis numbers font size in points (default: 8)")), ToolInput(tag="in_text_font", input_type=String(optional=True), prefix="--text-font", doc=InputDocumentation(doc="Specify font for labels (default: ArialMT)")), ToolInput(tag="in_logo_font", input_type=String(optional=True), prefix="--logo-font", doc=InputDocumentation(doc="Specify font for logo (default: Arial-BoldMT)")), ToolInput(tag="in_title_font", input_type=String(optional=True), prefix="--title-font", doc=InputDocumentation(doc="Specify font for title (default: ArialMT)")), ToolInput(tag="in_stack_width", input_type=Float(optional=True), prefix="--stack-width", doc=InputDocumentation(doc="Width of a logo stack (default: 10.8)")), ToolInput(tag="in_aspect_ratio", input_type=Int(optional=True), prefix="--aspect-ratio", doc=InputDocumentation(doc="Ratio of stack height to width (default: 5)")), ToolInput(tag="in_box", input_type=String(optional=True), prefix="--box", doc=InputDocumentation(doc="/NO             Draw boxes around symbols? (default: no)")), ToolInput(tag="in_resolution", input_type=Int(optional=True), prefix="--resolution", doc=InputDocumentation(doc="Bitmap resolution in dots per inch (DPI).\n(Default: 96 DPI, except png_print, 600 DPI)\nLow resolution bitmaps (DPI<300) are\nantialiased.")), ToolInput(tag="in_scale_width", input_type=String(optional=True), prefix="--scale-width", doc=InputDocumentation(doc="/NO     Scale the visible stack width by the fraction\nof symbols in the column?  (I.e. columns with\nmany gaps of unknowns are narrow.)  (Default:\nyes)")), ToolInput(tag="in_debug", input_type=String(optional=True), prefix="--debug", doc=InputDocumentation(doc="/NO           Output additional diagnostic information.\n(Default: False)")), ToolInput(tag="in_errorbar_fraction", input_type=Int(optional=True), prefix="--errorbar-fraction", doc=InputDocumentation(doc="Sets error bars display proportion (default:\n0.9)")), ToolInput(tag="in_errorbar_width_fraction", input_type=Int(optional=True), prefix="--errorbar-width-fraction", doc=InputDocumentation(doc="Sets error bars width display proportion\n(default: 0.25)")), ToolInput(tag="in_errorbar_gray", input_type=Int(optional=True), prefix="--errorbar-gray", doc=InputDocumentation(doc="Sets error bars' gray scale percentage\n(default: 0.75)")), ToolInput(tag="in_serve", input_type=Boolean(optional=True), prefix="--serve", doc=InputDocumentation(doc="Start a standalone WebLogo server for creating\nsequence logos.")), ToolInput(tag="in_port", input_type=Int(optional=True), prefix="--port", doc=InputDocumentation(doc="Listen to this local port. (Default: 8080)")), ToolInput(tag="in_sequence_data_dot_fa", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_sequence_logo_dot_eps", input_type=String(), position=1, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_f_out", output_type=File(optional=True), selector=InputSelector(input_to_select="in_f_out", type_hint=File()), doc=OutputDocumentation(doc="Output file (default: stdout)"))], container="quay.io/biocontainers/weblogo:3.7.8--py_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Weblogo_V0_1_0().translate("wdl")

