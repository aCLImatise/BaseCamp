from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Float, Int, Directory, Boolean, String

Ppanggolin_Rarefaction_V0_1_0 = CommandToolBuilder(tool="ppanggolin_rarefaction", base_command=["ppanggolin", "rarefaction"], inputs=[ToolInput(tag="in_pan_genome", input_type=File(optional=True), prefix="--pangenome", doc=InputDocumentation(doc="The pangenome .h5 file (default: None)")), ToolInput(tag="in_beta", input_type=Float(optional=True), prefix="--beta", doc=InputDocumentation(doc="beta is the strength of the smoothing using the graph\ntopology during partitionning. 0 will deactivate\nspatial smoothing. (default: 2.5)")), ToolInput(tag="in_depth", input_type=Int(optional=True), prefix="--depth", doc=InputDocumentation(doc="Number of samplings at each sampling point (default:\n30)")), ToolInput(tag="in_min", input_type=Int(optional=True), prefix="--min", doc=InputDocumentation(doc="Minimum number of organisms in a sample (default: 1)")), ToolInput(tag="in_max", input_type=Int(optional=True), prefix="--max", doc=InputDocumentation(doc="Maximum number of organisms in a sample (if above the\nnumber of provided organisms, the provided organisms\nwill be the maximum) (default: 100)")), ToolInput(tag="in_max_degree_smoothing", input_type=Int(optional=True), prefix="--max_degree_smoothing", doc=InputDocumentation(doc="max. degree of the nodes to be included in the\nsmoothing process. (default: 10)")), ToolInput(tag="in_output", input_type=Directory(optional=True), prefix="--output", doc=InputDocumentation(doc="Output directory (default:\nppanggolin_output_DATE2020-09-09_HOUR23.41.24_PID2017)")), ToolInput(tag="in_free_dispersion", input_type=Boolean(optional=True), prefix="--free_dispersion", doc=InputDocumentation(doc="use if the dispersion around the centroid vector of\neach partition during must be free. It will be the\nsame for all organisms by default. (default: False)")), ToolInput(tag="in_chunk_size", input_type=Int(optional=True), prefix="--chunk_size", doc=InputDocumentation(doc="Size of the chunks when performing partitionning using\nchunks of organisms. Chunk partitionning will be used\nautomatically if the number of genomes is above this\nnumber. (default: 500)")), ToolInput(tag="in_nb_of_partitions", input_type=Int(optional=True), prefix="--nb_of_partitions", doc=InputDocumentation(doc="Number of partitions to use. Must be at least 3. By\ndefault reuse K if it exists else compute it.\n(default: -1)")), ToolInput(tag="in_re_estimate_k", input_type=Boolean(optional=True), prefix="--reestimate_K", doc=InputDocumentation(doc="Will recompute the number of partitions for each\nsample (between the values provided by --krange) (VERY\nintensive. Can take a long time.) (default: False)")), ToolInput(tag="in_kmm", input_type=Int(optional=True), prefix="-Kmm", doc=InputDocumentation(doc="KRANGE, --krange KRANGE KRANGE\nRange of K values to test when detecting K\nautomatically. Default between 3 and the K previously\ncomputed if there is one, or 20 if there are none.\n(default: [3, -1])")), ToolInput(tag="in_soft_core", input_type=Float(optional=True), prefix="--soft_core", doc=InputDocumentation(doc="Soft core threshold (default: 0.95)")), ToolInput(tag="in_seed", input_type=Int(optional=True), prefix="--seed", doc=InputDocumentation(doc="seed used to generate random numbers (default: 42)")), ToolInput(tag="in_tmpdir", input_type=Directory(optional=True), prefix="--tmpdir", doc=InputDocumentation(doc="directory for storing temporary files (default: /tmp)")), ToolInput(tag="in_verbose", input_type=String(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Indicate verbose level (0 for warning and errors only,\n1 for info, 2 for debug) (default: 1)")), ToolInput(tag="in_log", input_type=File(optional=True), prefix="--log", doc=InputDocumentation(doc="log output file (default: stdout)")), ToolInput(tag="in_cpu", input_type=Int(optional=True), prefix="--cpu", doc=InputDocumentation(doc="Number of available cpus (default: 1)")), ToolInput(tag="in_force", input_type=File(optional=True), prefix="--force", doc=InputDocumentation(doc="Force writing in output directory and in pangenome\noutput file. (default: False)\n"))], outputs=[ToolOutput(tag="out_output", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="Output directory (default:\nppanggolin_output_DATE2020-09-09_HOUR23.41.24_PID2017)")), ToolOutput(tag="out_log", output_type=File(optional=True), selector=InputSelector(input_to_select="in_log", type_hint=File()), doc=OutputDocumentation(doc="log output file (default: stdout)")), ToolOutput(tag="out_force", output_type=File(optional=True), selector=InputSelector(input_to_select="in_force", type_hint=File()), doc=OutputDocumentation(doc="Force writing in output directory and in pangenome\noutput file. (default: False)\n"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Ppanggolin_Rarefaction_V0_1_0().translate("wdl", allow_empty_container=True)

