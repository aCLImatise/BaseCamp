from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Directory, Boolean, Float, String, Int

Ppanggolin_Draw_V0_1_0 = CommandToolBuilder(tool="ppanggolin_draw", base_command=["ppanggolin", "draw"], inputs=[ToolInput(tag="in_pan_genome", input_type=File(optional=True), prefix="--pangenome", doc=InputDocumentation(doc="The pangenome .h5 file (default: None)")), ToolInput(tag="in_output", input_type=Directory(optional=True), prefix="--output", doc=InputDocumentation(doc="Output directory (default:\nppanggolin_output_DATE2020-09-09_HOUR23.40.55_PID1558)")), ToolInput(tag="in_tile_plot", input_type=Boolean(optional=True), prefix="--tile_plot", doc=InputDocumentation(doc="draw the tile plot of the pangenome (default: False)")), ToolInput(tag="in_no_cloud", input_type=Boolean(optional=True), prefix="--nocloud", doc=InputDocumentation(doc="Do not draw the cloud in the tile plot (default:\nFalse)")), ToolInput(tag="in_soft_core", input_type=Float(optional=True), prefix="--soft_core", doc=InputDocumentation(doc="Soft core threshold to use (default: 0.95)")), ToolInput(tag="in_u_curve", input_type=Boolean(optional=True), prefix="--ucurve", doc=InputDocumentation(doc="draw the U-curve of the pangenome (default: False)")), ToolInput(tag="in_tmpdir", input_type=Directory(optional=True), prefix="--tmpdir", doc=InputDocumentation(doc="directory for storing temporary files (default: /tmp)")), ToolInput(tag="in_verbose", input_type=String(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Indicate verbose level (0 for warning and errors only,\n1 for info, 2 for debug) (default: 1)")), ToolInput(tag="in_log", input_type=File(optional=True), prefix="--log", doc=InputDocumentation(doc="log output file (default: stdout)")), ToolInput(tag="in_cpu", input_type=Int(optional=True), prefix="--cpu", doc=InputDocumentation(doc="Number of available cpus (default: 1)")), ToolInput(tag="in_force", input_type=File(optional=True), prefix="--force", doc=InputDocumentation(doc="Force writing in output directory and in pangenome\noutput file. (default: False)\n"))], outputs=[ToolOutput(tag="out_output", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="Output directory (default:\nppanggolin_output_DATE2020-09-09_HOUR23.40.55_PID1558)")), ToolOutput(tag="out_log", output_type=File(optional=True), selector=InputSelector(input_to_select="in_log", type_hint=File()), doc=OutputDocumentation(doc="log output file (default: stdout)")), ToolOutput(tag="out_force", output_type=File(optional=True), selector=InputSelector(input_to_select="in_force", type_hint=File()), doc=OutputDocumentation(doc="Force writing in output directory and in pangenome\noutput file. (default: False)\n"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Ppanggolin_Draw_V0_1_0().translate("wdl", allow_empty_container=True)

