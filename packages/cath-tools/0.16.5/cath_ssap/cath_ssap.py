from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, Int, String, Directory

Cath_Ssap_V0_1_0 = CommandToolBuilder(tool="cath_ssap", base_command=["cath-ssap"], inputs=[ToolInput(tag="in_output_version_information", input_type=Boolean(optional=True), prefix="-v", doc=InputDocumentation(doc="[ --version ]                         Output version information")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="Output debugging information")), ToolInput(tag="in_output_scores_file", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="[ --outfile ] <file>                  [DEPRECATED] Output scores to <file> rather than to stdout")), ToolInput(tag="in_clique_file", input_type=File(optional=True), prefix="--clique-file", doc=InputDocumentation(doc="Read clique from <file>")), ToolInput(tag="in_domin_file", input_type=File(optional=True), prefix="--domin-file", doc=InputDocumentation(doc="Read domin from <file>")), ToolInput(tag="in_max_score_to_fast_rerun", input_type=Int(optional=True), prefix="--max-score-to-fast-rerun", doc=InputDocumentation(doc="(=65)  Run a second fast SSAP with looser cutoffs if the first fast SSAP's score falls below <score>")), ToolInput(tag="in_max_score_to_slow_rerun", input_type=Int(optional=True), prefix="--max-score-to-slow-rerun", doc=InputDocumentation(doc="(=75)  Perform a slow SSAP if the (best) fast SSAP score falls below <score>")), ToolInput(tag="in_slow_ssap_only", input_type=Boolean(optional=True), prefix="--slow-ssap-only", doc=InputDocumentation(doc="Don't try any fast SSAPs; only use slow SSAP")), ToolInput(tag="in_local_ssap_score", input_type=Boolean(optional=True), prefix="--local-ssap-score", doc=InputDocumentation(doc="[DEPRECATED] Normalise the SSAP score over the length of the smallest domain rather than the largest")), ToolInput(tag="in_all_scores", input_type=Boolean(optional=True), prefix="--all-scores", doc=InputDocumentation(doc="[DEPRECATED] Output all SSAP scores from fast and slow runs, not just the highest")), ToolInput(tag="in_prot_src_files", input_type=String(optional=True), prefix="--prot-src-files", doc=InputDocumentation(doc="(=PDB)            Read the protein data from the set of files <set>, of available sets:\nPDB, PDB_DSSP, PDB_DSSP_SEC, WOLF_SEC")), ToolInput(tag="in_sup_dir", input_type=Directory(optional=True), prefix="--supdir", doc=InputDocumentation(doc="[DEPRECATED] Output a superposition to directory <dir>")), ToolInput(tag="in_align_dir", input_type=Directory(optional=True), prefix="--aligndir", doc=InputDocumentation(doc="(='.')                  Write alignment to directory <dir>")), ToolInput(tag="in_min_score_for_files", input_type=Int(optional=True), prefix="--min-score-for-files", doc=InputDocumentation(doc="(=0)       Only output alignment/superposition files if the SSAP score exceeds <score>")), ToolInput(tag="in_min_sup_score", input_type=Int(optional=True), prefix="--min-sup-score", doc=InputDocumentation(doc="(=-0.25)         [DEPRECATED] Calculate superposition based on the residue-pairs with scores greater than <score>")), ToolInput(tag="in_rasmol_script", input_type=Boolean(optional=True), prefix="--rasmol-script", doc=InputDocumentation(doc="[DEPRECATED] Write a rasmol superposition script to load and colour the superposed structures")), ToolInput(tag="in_xml_sup", input_type=Boolean(optional=True), prefix="--xmlsup", doc=InputDocumentation(doc="[DEPRECATED] Write a small xml superposition file, from which a larger superposition file can be reconstructed")), ToolInput(tag="in_pdb_path", input_type=File(optional=True), prefix="--pdb-path", doc=InputDocumentation(doc="(=.)                   Search for PDB files using the path <path>")), ToolInput(tag="in_dssp_path", input_type=File(optional=True), prefix="--dssp-path", doc=InputDocumentation(doc="(=.)                  Search for DSSP files using the path <path>")), ToolInput(tag="in_wolf_path", input_type=File(optional=True), prefix="--wolf-path", doc=InputDocumentation(doc="(=.)                  Search for wolf files using the path <path>")), ToolInput(tag="in_sec_path", input_type=File(optional=True), prefix="--sec-path", doc=InputDocumentation(doc="(=.)                   Search for sec files using the path <path>")), ToolInput(tag="in_pdb_prefix", input_type=File(optional=True), prefix="--pdb-prefix", doc=InputDocumentation(doc="Prepend the prefix <pre> to a protein's name to form its PDB filename")), ToolInput(tag="in_dssp_prefix", input_type=File(optional=True), prefix="--dssp-prefix", doc=InputDocumentation(doc="Prepend the prefix <pre> to a protein's name to form its DSSP filename")), ToolInput(tag="in_wolf_prefix", input_type=File(optional=True), prefix="--wolf-prefix", doc=InputDocumentation(doc="Prepend the prefix <pre> to a protein's name to form its wolf filename")), ToolInput(tag="in_sec_prefix", input_type=File(optional=True), prefix="--sec-prefix", doc=InputDocumentation(doc="Prepend the prefix <pre> to a protein's name to form its sec filename")), ToolInput(tag="in_pdb_suffix", input_type=File(optional=True), prefix="--pdb-suffix", doc=InputDocumentation(doc="Append the suffix <suf> to a protein's name to form its PDB filename")), ToolInput(tag="in_dssp_suffix", input_type=File(optional=True), prefix="--dssp-suffix", doc=InputDocumentation(doc="(=.dssp)             Append the suffix <suf> to a protein's name to form its DSSP filename")), ToolInput(tag="in_wolf_suffix", input_type=File(optional=True), prefix="--wolf-suffix", doc=InputDocumentation(doc="(=.wolf)             Append the suffix <suf> to a protein's name to form its wolf filename")), ToolInput(tag="in_sec_suffix", input_type=File(optional=True), prefix="--sec-suffix", doc=InputDocumentation(doc="(=.sec)               Append the suffix <suf> to a protein's name to form its sec filename")), ToolInput(tag="in_align_regions", input_type=Int(optional=True), prefix="--align-regions", doc=InputDocumentation(doc="Handle region(s) <regions> as the alignment part of the structure.\nMay be specified multiple times, in correspondence with the structures.\nFormat is: D[5inwB02]251-348:B,408-416A:B\n(Put <regions> in quotes to prevent the square brackets confusing your shell ('No match'))")), ToolInput(tag="in_alignment_help", input_type=Boolean(optional=True), prefix="--alignment-help", doc=InputDocumentation(doc="Help on alignment format")), ToolInput(tag="in_citation_help", input_type=Boolean(optional=True), prefix="--citation-help", doc=InputDocumentation(doc="Help on SSAP authorship & how to cite it")), ToolInput(tag="in_scores_help", input_type=Boolean(optional=True), prefix="--scores-help", doc=InputDocumentation(doc="Help on scores format")), ToolInput(tag="in_protein_one", input_type=Int(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_protein_two", input_type=Int(), position=1, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_output_scores_file", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_scores_file", type_hint=File()), doc=OutputDocumentation(doc="[ --outfile ] <file>                  [DEPRECATED] Output scores to <file> rather than to stdout")), ToolOutput(tag="out_sup_dir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_sup_dir", type_hint=File()), doc=OutputDocumentation(doc="[DEPRECATED] Output a superposition to directory <dir>"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Cath_Ssap_V0_1_0().translate("wdl", allow_empty_container=True)

