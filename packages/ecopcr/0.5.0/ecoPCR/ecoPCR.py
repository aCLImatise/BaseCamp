from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, String

Ecopcr_V0_1_0 = CommandToolBuilder(tool="ecoPCR", base_command=["ecoPCR"], inputs=[ToolInput(tag="in_salt_concentration_m", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc=": Salt concentration in M for Tm computation (default 0.05 M)")), ToolInput(tag="in_consider_database_sequences", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc=": Consider that the database sequences are [c]ircular")), ToolInput(tag="in_atabase_match_format", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc=": [D]atabase : to match the expected format, the database\nhas to be formated first by the ecoPCRFormat.py program located.\nin the tools directory.\necoPCRFormat.py creates three file types :\n.sdx : contains the sequences\n.tdx : contains information concerning the taxonomy\n.rdx : contains the taxonomy rank\necoPCR needs all the file type. As a result, you have to write the\ndatabase radical without any extension. For example /ecoPCRDB/gbmam")), ToolInput(tag="in_keeps_specified_number", input_type=Boolean(optional=True), prefix="-D", doc=InputDocumentation(doc=": Keeps the specified number of nucleotides on each side of the in silico\namplified sequences (including the amplified DNA fragment plus the two target\nsequences of the primers).")), ToolInput(tag="in_rror_max_errors", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc=": [E]rror : max errors allowed by oligonucleotide (0 by default)")), ToolInput(tag="in_gnore_given_taxonomy", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc=": [I]gnore the given taxonomy id.\nTaxonomy id are available using the ecofind program.\nsee its help typing ecofind -h for more information.")), ToolInput(tag="in_ingdom_mode_set", input_type=Boolean(optional=True), prefix="-k", doc=InputDocumentation(doc=": [K]ingdom mode : set the kingdom mode\nsuper kingdom mode by default.")), ToolInput(tag="in_minimum_ength_define", input_type=Boolean(optional=True), prefix="-l", doc=InputDocumentation(doc=": minimum [L]ength : define the minimum amplication length.")), ToolInput(tag="in_maximum_ength_define", input_type=Boolean(optional=True), prefix="-L", doc=InputDocumentation(doc=": maximum [L]ength : define the maximum amplicationlength.")), ToolInput(tag="in_salt_correction_method", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc=": Salt correction method for Tm computation (SANTALUCIA : 1\nor OWCZARZY:2, default=1)")), ToolInput(tag="in_estricts_search_given", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc=": [R]estricts the search to the given taxonomic id.\nTaxonomy id are available using the ecofind program.\nsee its help typing ecofind -h for more information.")), ToolInput(tag="in_nucleo_tid_ic_patterns", input_type=String(), position=0, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Ecopcr_V0_1_0().translate("wdl", allow_empty_container=True)

