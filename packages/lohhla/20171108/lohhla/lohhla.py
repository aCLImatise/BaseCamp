from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, Directory, File, Int

Lohhla_V0_1_0 = CommandToolBuilder(tool="lohhla", base_command=["lohhla"], inputs=[ToolInput(tag="in_patient_id", input_type=String(optional=True), prefix="--patientId", doc=InputDocumentation(doc="patient ID")), ToolInput(tag="in_output_dir", input_type=Directory(optional=True), prefix="--outputDir", doc=InputDocumentation(doc="location of output directory")), ToolInput(tag="in_normal_bam_file", input_type=File(optional=True), prefix="--normalBAMfile", doc=InputDocumentation(doc="normal BAM file\ncan be FALSE to run without normal sample")), ToolInput(tag="in_bam_dir", input_type=String(optional=True), prefix="--BAMDir", doc=InputDocumentation(doc="location of all BAMs to test")), ToolInput(tag="in_hla_path", input_type=String(optional=True), prefix="--hlaPath", doc=InputDocumentation(doc="location to patient HLA calls")), ToolInput(tag="in_hla_fast_a_loc", input_type=String(optional=True), prefix="--HLAfastaLoc", doc=InputDocumentation(doc="location of HLA FASTA [default= ~/lohhla/data/hla_all.fasta]")), ToolInput(tag="in_copy_num_loc", input_type=String(optional=True), prefix="--CopyNumLoc", doc=InputDocumentation(doc="location to patient purity and ploidy output\ncan be FALSE to only estimate allelic imbalance")), ToolInput(tag="in_override_dir", input_type=String(optional=True), prefix="--overrideDir", doc=InputDocumentation(doc="location of flagstat information if already run [default= FALSE]")), ToolInput(tag="in_min_coverage_filter", input_type=Int(optional=True), prefix="--minCoverageFilter", doc=InputDocumentation(doc="minimum coverage at mismatch site [default= 30]")), ToolInput(tag="in_km_er_size", input_type=Int(optional=True), prefix="--kmerSize", doc=InputDocumentation(doc="size of kmers to fish with [default= 50]")), ToolInput(tag="in_num_mismatch", input_type=Int(optional=True), prefix="--numMisMatch", doc=InputDocumentation(doc="number of mismatches allowed in read to map to HLA allele [default= 1]")), ToolInput(tag="in_mapping_step", input_type=String(optional=True), prefix="--mappingStep", doc=InputDocumentation(doc="does mapping to HLA alleles need to be done [default= TRUE]")), ToolInput(tag="in_fishing_step", input_type=Int(optional=True), prefix="--fishingStep", doc=InputDocumentation(doc="if mapping is performed, also look for fished reads matching kmers of size kmerSize [default= TRUE]")), ToolInput(tag="in_plotting_step", input_type=String(optional=True), prefix="--plottingStep", doc=InputDocumentation(doc="are plots made [default= TRUE]")), ToolInput(tag="in_coverage_step", input_type=String(optional=True), prefix="--coverageStep", doc=InputDocumentation(doc="are coverage differences analyzed [default= TRUE]")), ToolInput(tag="in_cleanup", input_type=String(optional=True), prefix="--cleanUp", doc=InputDocumentation(doc="remove temporary files [default= TRUE]")), ToolInput(tag="in_novo_dir", input_type=File(optional=True), prefix="--novoDir", doc=InputDocumentation(doc="path to novoalign executable [default= ]")), ToolInput(tag="in_g_atk_dir", input_type=File(optional=True), prefix="--gatkDir", doc=InputDocumentation(doc="path to GATK executable [default= ]")), ToolInput(tag="in_hla_exon_loc", input_type=String(optional=True), prefix="--HLAexonLoc", doc=InputDocumentation(doc="HLA exon boundaries for plotting [default= ~/lohhla/data/hla.dat]")), ToolInput(tag="in_ignore_warnings", input_type=String(optional=True), prefix="--ignoreWarnings", doc=InputDocumentation(doc="continue running with warnings [default= TRUE]"))], outputs=[ToolOutput(tag="out_output_dir", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_output_dir", type_hint=File()), doc=OutputDocumentation(doc="location of output directory"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Lohhla_V0_1_0().translate("wdl", allow_empty_container=True)

