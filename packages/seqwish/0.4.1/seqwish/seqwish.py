from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File, String

Seqwish_V0_1_0 = CommandToolBuilder(tool="seqwish", base_command=["seqwish"], inputs=[ToolInput(tag="in_induce_graph_optionally", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="[FILE], --paf-alns=[FILE]       Induce the graph from these PAF\nformatted alignments. Optionally, a list\nof filenames and minimum match lengths:\n[file_1]:[min_match_length_1],... This\nallows the differential filtering of\nshort matches from some but not all\ninputs, in effect allowing `-k` to be\nspecified differently for each input.")), ToolInput(tag="in_sequences_used_generate", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="[FILE], --seqs=[FILE]           The sequences used to generate the\nalignments (FASTA, FASTQ, .seq)")), ToolInput(tag="in_build_graph_using", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc="[BASE], --base=[BASE]           Build graph using this basename")), ToolInput(tag="in_write_graph_gfa", input_type=Boolean(optional=True), prefix="-g", doc=InputDocumentation(doc="[FILE], --gfa=[FILE]            Write the graph in GFA to FILE")), ToolInput(tag="in_use_match_list", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="[FILE], --match-list=[FILE]     Use the sequence match list in FILE to\nsubset the input alignments")), ToolInput(tag="in_write_graph_vgp", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="[BASE], --vgp-out=[BASE]        Write the graph in VGP format with\nbasename FILE")), ToolInput(tag="in_use_many_threads", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="[N], --threads=[N]              Use this many threads during parallel")), ToolInput(tag="in_filter_exact_matches", input_type=Boolean(optional=True), prefix="-k", doc=InputDocumentation(doc="[N], --min-match-len=[N]        Filter exact matches below this length.\nThis can smooth the graph locally and\nprevent the formation of complex local\ngraph topologies from forming due to\ndifferential alignments.")), ToolInput(tag="in_number_bp_use", input_type=Boolean(optional=True), prefix="-B", doc=InputDocumentation(doc="[N], --transclose-batch=[N]     Number of bp to use for transitive\nclosure batch (default 1M)")), ToolInput(tag="in_keep_temp", input_type=Boolean(optional=True), prefix="--keep-temp", doc=InputDocumentation(doc="keep intermediate files generated during\ngraph induction")), ToolInput(tag="in_debug", input_type=Boolean(optional=True), prefix="--debug", doc=InputDocumentation(doc="enable debugging")), ToolInput(tag="in_steps", input_type=String(), position=0, doc=InputDocumentation(doc="-r[N], --repeat-max=[N]           Limit transitive closure to include no"))], outputs=[ToolOutput(tag="out_write_graph_vgp", output_type=File(optional=True), selector=InputSelector(input_to_select="in_write_graph_vgp", type_hint=File()), doc=OutputDocumentation(doc="[BASE], --vgp-out=[BASE]        Write the graph in VGP format with\nbasename FILE"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Seqwish_V0_1_0().translate("wdl", allow_empty_container=True)

