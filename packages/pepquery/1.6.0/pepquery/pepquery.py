from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Directory, Int, File, Boolean, Float, String

Pepquery_V0_1_0 = CommandToolBuilder(tool="pepquery", base_command=["pepquery"], inputs=[ToolInput(tag="in_an_no", input_type=Directory(optional=True), prefix="-anno", doc=InputDocumentation(doc="Annotation files folder for VCF/BED/GTF")), ToolInput(tag="in_max_missed_cleavages", input_type=Int(optional=True), prefix="-c", doc=InputDocumentation(doc="The max missed cleavages, default is 2")), ToolInput(tag="in_cpu", input_type=Int(optional=True), prefix="-cpu", doc=InputDocumentation(doc="The number of cpus used, default is 1")), ToolInput(tag="in_db", input_type=File(optional=True), prefix="-db", doc=InputDocumentation(doc="Fasta format database file")), ToolInput(tag="in_decoy", input_type=Boolean(optional=True), prefix="-decoy", doc=InputDocumentation(doc="In target protein identification mode, try to\nidentity the decoy version of the selected target\nprotein. Default is false.")), ToolInput(tag="in_non_enzyme_trypsin", input_type=Int(optional=True), prefix="-e", doc=InputDocumentation(doc="0:Non enzyme, 1:Trypsin (default), 2:Trypsin (no\nP rule), 3:Arg-C, 4:Arg-C (no P rule), 5:Arg-N,\n6:Glu-C, 7:Lys-C")), ToolInput(tag="in_frame_translate_sequence", input_type=Int(optional=True), prefix="-f", doc=InputDocumentation(doc="The frame to translate DNA sequence to protein.\nThe right format is like this:\n'1,2,3,4,5,6','1,2,3','1'. '0' means to keep the\nlongest frame. In default, for each frame only\nthe longest protein is used.")), ToolInput(tag="in_fix_mod", input_type=Float(optional=True), prefix="-fixMod", doc=InputDocumentation(doc="Fixed modification, the format is like : 1,2,3.\nDefault is 6 (Carbamidomethylation(C)[57.02])")), ToolInput(tag="in_fragment_method", input_type=Int(optional=True), prefix="-fragmentMethod", doc=InputDocumentation(doc="1: CID/HCD (default), 2: ETD")), ToolInput(tag="in_hc", input_type=Boolean(optional=True), prefix="-hc", doc=InputDocumentation(doc="When perform validation with unrestricted\nmodification searching (UMS), whether or not to\nuse more stringent criterion. TRUE:\nscore(UMS)>=score(targetPSM); FALSE:\nscore(UMS)>score(targetPSM), default")), ToolInput(tag="in_take_protein_dna", input_type=String(optional=True), prefix="-i", doc=InputDocumentation(doc="Take protein, DNA or VCF as input")), ToolInput(tag="in_index_type", input_type=File(optional=True), prefix="-indexType", doc=InputDocumentation(doc="1: index (1-based), 2: spectrum title in MGF\nfile. Default is 1.")), ToolInput(tag="in_it_ol", input_type=Float(optional=True), prefix="-itol", doc=InputDocumentation(doc="Fragment ion m/z tolerance, default is 0.6da")), ToolInput(tag="in_scoring_method_hyperscore", input_type=Int(optional=True), prefix="-m", doc=InputDocumentation(doc="Scoring method: 1=HyperScore (default), 2=MVH")), ToolInput(tag="in_max_charge", input_type=Int(optional=True), prefix="-maxCharge", doc=InputDocumentation(doc="The maximum charge to consider if the charge\nstate is not available, default is 3")), ToolInput(tag="in_maxlength", input_type=Int(optional=True), prefix="-maxLength", doc=InputDocumentation(doc="The maximum length of peptide to consider,\ndefault is 45")), ToolInput(tag="in_max_var", input_type=Int(optional=True), prefix="-maxVar", doc=InputDocumentation(doc="Max number of variable modifications, default is\n3")), ToolInput(tag="in_min_charge", input_type=Int(optional=True), prefix="-minCharge", doc=InputDocumentation(doc="The minimum charge to consider if the charge\nstate is not available, default is 2")), ToolInput(tag="in_minlength", input_type=Int(optional=True), prefix="-minLength", doc=InputDocumentation(doc="The minimum length of peptide to consider,\ndefault is 7")), ToolInput(tag="in_min_peaks", input_type=Int(optional=True), prefix="-minPeaks", doc=InputDocumentation(doc="Min peaks in spectrum, default is 10")), ToolInput(tag="in_min_score", input_type=Int(optional=True), prefix="-minScore", doc=InputDocumentation(doc="Minimum score to consider for peptide searching,\ndefault is 12")), ToolInput(tag="in_ms", input_type=File(optional=True), prefix="-ms", doc=InputDocumentation(doc="Spectrum file used for identification, mgf format")), ToolInput(tag="in_number_random_peptides", input_type=Int(optional=True), prefix="-n", doc=InputDocumentation(doc="The number of random peptides, default is 1000")), ToolInput(tag="in_output_dir", input_type=String(optional=True), prefix="-o", doc=InputDocumentation(doc="Output dir")), ToolInput(tag="in_pep", input_type=String(optional=True), prefix="-pep", doc=InputDocumentation(doc="Peptide sequence which you want to search")), ToolInput(tag="in_prefix", input_type=File(optional=True), prefix="-prefix", doc=InputDocumentation(doc="Output file prefix")), ToolInput(tag="in_print_ptm", input_type=Boolean(optional=True), prefix="-printPTM", doc=InputDocumentation(doc="Print PTMs")), ToolInput(tag="in_input_typeproteindnavcfbedgtf", input_type=Int(optional=True), prefix="-t", doc=InputDocumentation(doc="Input type:\n1=>protein,2=>DNA,3=>VCF,4=>BED,5=>GTF")), ToolInput(tag="in_tag", input_type=File(optional=True), prefix="-tag", doc=InputDocumentation(doc="A tag file")), ToolInput(tag="in_to_l", input_type=Int(optional=True), prefix="-tol", doc=InputDocumentation(doc="Precursor ion m/z tolerance, default is 10")), ToolInput(tag="in_to_lu", input_type=String(optional=True), prefix="-tolu", doc=InputDocumentation(doc="The unit of precursor ion m/z tolerance, default\nis ppm")), ToolInput(tag="in_tp", input_type=Boolean(optional=True), prefix="-tp", doc=InputDocumentation(doc="Whether or not to perform target protein\nidentification. If you set this parameter, then\nthe input value for -i is a protein ID from the\ninput reference protein database (-db)")), ToolInput(tag="in_um", input_type=Boolean(optional=True), prefix="-um", doc=InputDocumentation(doc="Validation with unrestricted modification")), ToolInput(tag="in_options", input_type=String(), position=0, doc=InputDocumentation(doc="-aa                     Whether or not to consider aa substitution\nmodifications when perform modification\nfiltering. In default, don't consider.")), ToolInput(tag="in_searching", input_type=String(), position=1, doc=InputDocumentation(doc="-varMod <arg>           Variable modification, the format is like :"))], outputs=[ToolOutput(tag="out_prefix", output_type=File(optional=True), selector=InputSelector(input_to_select="in_prefix", type_hint=File()), doc=OutputDocumentation(doc="Output file prefix"))], container="quay.io/biocontainers/pepquery:1.6.0--0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Pepquery_V0_1_0().translate("wdl")

