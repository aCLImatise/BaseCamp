from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import String, File, Boolean

Java_V0_1_0 = CommandToolBuilder(tool="java", base_command=["java"], inputs=[ToolInput(tag="in_module", input_type=String(optional=True), prefix="--module", doc=InputDocumentation(doc="/<mainclass> are passed as the arguments to")), ToolInput(tag="in_class_path", input_type=File(optional=True), prefix="--class-path", doc=InputDocumentation(doc="A : separated list of directories, JAR archives,\nand ZIP archives to search for class files.")), ToolInput(tag="in_module_path", input_type=File(optional=True), prefix="--module-path", doc=InputDocumentation(doc="...\nA : separated list of directories, each directory\nis a directory of modules.")), ToolInput(tag="in_upgrade_module_path", input_type=File(optional=True), prefix="--upgrade-module-path", doc=InputDocumentation(doc="...\nA : separated list of directories, each directory\nis a directory of modules that replace upgradeable\nmodules in the runtime image")), ToolInput(tag="in_add_modules", input_type=File(optional=True), prefix="--add-modules", doc=InputDocumentation(doc="[,<module name>...]\nroot modules to resolve in addition to the initial module.\n<module name> can also be ALL-DEFAULT, ALL-SYSTEM,\nALL-MODULE-PATH.")), ToolInput(tag="in_list_modules", input_type=Boolean(optional=True), prefix="--list-modules", doc=InputDocumentation(doc="list observable modules and exit")), ToolInput(tag="in_describe_module", input_type=String(optional=True), prefix="--describe-module", doc=InputDocumentation(doc="describe a module and exit")), ToolInput(tag="in_dry_run", input_type=Boolean(optional=True), prefix="--dry-run", doc=InputDocumentation(doc="create VM and load main class but do not execute main method.\nThe --dry-run option may be useful for validating the\ncommand-line options such as the module system configuration.")), ToolInput(tag="in_validate_modules", input_type=Boolean(optional=True), prefix="--validate-modules", doc=InputDocumentation(doc="validate all modules and exit\nThe --validate-modules option may be useful for finding\nconflicts and other errors with modules on the module path.")), ToolInput(tag="in_namevalueset_system_property", input_type=Boolean(optional=True), prefix="-D", doc=InputDocumentation(doc="<name>=<value>\nset a system property")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="-verbose", doc=InputDocumentation(doc=":[class|module|gc|jni]\nenable verbose output")), ToolInput(tag="in_version", input_type=Boolean(optional=True), prefix="-version", doc=InputDocumentation(doc="print product version to the error stream and exit")), ToolInput(tag="in_print_continue_continue", input_type=Boolean(optional=True), prefix="-showversion", doc=InputDocumentation(doc="print product version to the error stream and continue")), ToolInput(tag="in_print_product_version", input_type=Boolean(optional=True), prefix="--show-version", doc=InputDocumentation(doc="print product version to the output stream and continue")), ToolInput(tag="in_show_module_resolution", input_type=Boolean(optional=True), prefix="--show-module-resolution", doc=InputDocumentation(doc="show module resolution output during startup")), ToolInput(tag="in_print_help_error", input_type=Boolean(optional=True), prefix="-X", doc=InputDocumentation(doc="print help on extra options to the error stream")), ToolInput(tag="in_help_extra", input_type=Boolean(optional=True), prefix="--help-extra", doc=InputDocumentation(doc="print help on extra options to the output stream")), ToolInput(tag="in_ea", input_type=Boolean(optional=True), prefix="-ea", doc=InputDocumentation(doc="[:<packagename>...|:<classname>]")), ToolInput(tag="in_enable_assertions", input_type=Boolean(optional=True), prefix="-enableassertions", doc=InputDocumentation(doc="[:<packagename>...|:<classname>]\nenable assertions with specified granularity")), ToolInput(tag="in_da", input_type=Boolean(optional=True), prefix="-da", doc=InputDocumentation(doc="[:<packagename>...|:<classname>]")), ToolInput(tag="in_disable_assertions", input_type=Boolean(optional=True), prefix="-disableassertions", doc=InputDocumentation(doc="[:<packagename>...|:<classname>]\ndisable assertions with specified granularity")), ToolInput(tag="in_enable_system_assertions", input_type=Boolean(optional=True), prefix="-enablesystemassertions", doc=InputDocumentation(doc="enable system assertions")), ToolInput(tag="in_disable_system_assertions", input_type=Boolean(optional=True), prefix="-disablesystemassertions", doc=InputDocumentation(doc="disable system assertions")), ToolInput(tag="in_agent_lib", input_type=Boolean(optional=True), prefix="-agentlib", doc=InputDocumentation(doc=":<libname>[=<options>]\nload native agent library <libname>, e.g. -agentlib:jdwp\nsee also -agentlib:jdwp=help")), ToolInput(tag="in_agent_path", input_type=Boolean(optional=True), prefix="-agentpath", doc=InputDocumentation(doc=":<pathname>[=<options>]\nload native agent library by full pathname")), ToolInput(tag="in_java_agent", input_type=Boolean(optional=True), prefix="-javaagent", doc=InputDocumentation(doc=":<jarpath>[=<options>]\nload Java programming language agent, see java.lang.instrument")), ToolInput(tag="in_splash", input_type=Boolean(optional=True), prefix="-splash", doc=InputDocumentation(doc=":<imagepath>\nshow splash screen with specified image\nHiDPI scaled images are automatically supported and used\nif available. The unscaled image filename, e.g. image.ext,\nshould always be passed as the argument to the -splash option.\nThe most appropriate scaled image provided will be picked up\nautomatically.\nSee the SplashScreen API documentation for more information")), ToolInput(tag="in_disable_at_files", input_type=Boolean(optional=True), prefix="-disable-@files", doc=InputDocumentation(doc="prevent further argument file expansion")), ToolInput(tag="in_enable_preview", input_type=Boolean(optional=True), prefix="--enable-preview", doc=InputDocumentation(doc="allow classes to depend on preview features of this release")), ToolInput(tag="in_main_class", input_type=String(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_args_dot_dot_dot", input_type=String(optional=True), position=1, doc=InputDocumentation(doc=""))], outputs=[], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Java_V0_1_0().translate("wdl", allow_empty_container=True)

