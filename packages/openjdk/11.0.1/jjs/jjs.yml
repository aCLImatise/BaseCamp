!Command
command:
- jjs
positional: []
named:
- !Flag
  description: (-Dname=value. Set a system property. This option can be repeated.)
  synonyms:
  - -D
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: (--add-modules modules. Specify the root user java modules.)
  synonyms:
  - --add-modules
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: (-cp path. Specify where to find user class files.)
  synonyms:
  - -cp
  - -classpath
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "(Dump a stack trace on errors.)\nparam: [true|false]   default: false"
  synonyms:
  - -doe
  - -dump-on-error
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "(Print full version info of Nashorn.)\nparam: [true|false]   default:\
    \ false"
  synonyms:
  - -fv
  - -fullversion
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "(Launch script as an fx application.)\nparam: [true|false]   default:\
    \ false"
  synonyms:
  - -fx
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "(Specify ECMAScript language version.)\nparam: [es5|es6]   default:\
    \ es5"
  synonyms:
  - --language
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: (--module-path path. Specify where to find user java modules.)
  synonyms:
  - --module-path
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "(Do not show nashorn deprecation warning.)\nparam: [true|false]  \
    \ default: false"
  synonyms:
  - --no-deprecation-warning
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "(Use optimistic type assumptions with deoptimizing recompilation.\n\
    This makes the compiler try, for any program symbol whose type cannot\nbe proven\
    \ at compile time, to type it as narrow and primitive as\npossible. If the runtime\
    \ encounters an error because symbol type\nis too narrow, a wider method will\
    \ be generated until steady stage\nis reached. While this produces as optimal\
    \ Java Bytecode as possible,\nerroneous type guesses will lead to longer warmup.\
    \ Optimistic typing\nis currently enabled by default, but can be disabled for\
    \ faster\nstartup performance.)\nparam: [true|false]   default: true"
  synonyms:
  - -ot
  - --optimistic-types
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "(Enable scripting features.)\nparam: [true|false]   default: false"
  synonyms:
  - -scripting
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "(Run scripts in strict mode.)\nparam: [true|false]   default: false"
  synonyms:
  - -strict
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "(Set timezone for script execution.)\nparam: <timezone>   default:\
    \ GMT"
  synonyms:
  - -t
  - -timezone
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "(Print version info of Nashorn.)\nparam: [true|false]   default: false\n"
  synonyms:
  - -v
  - -version
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: "(Print this help message.)\nparam: [true|false]   default: false"
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "jjs [<options>] <files> [-- <arguments>]\n\t-D (-Dname=value. Set a system\
  \ property. This option can be repeated.)\n\n\t--add-modules (--add-modules modules.\
  \ Specify the root user java modules.)\n\n\t-cp, -classpath (-cp path. Specify where\
  \ to find user class files.)\n\n\t-doe, -dump-on-error (Dump a stack trace on errors.)\n\
  \t\tparam: [true|false]   default: false\n\n\t-fv, -fullversion (Print full version\
  \ info of Nashorn.)\n\t\tparam: [true|false]   default: false\n\n\t-fx (Launch script\
  \ as an fx application.)\n\t\tparam: [true|false]   default: false\n\n\t-h, --help\
  \ (Print this help message.)\n\t\tparam: [true|false]   default: false\n\n\t--language\
  \ (Specify ECMAScript language version.)\n\t\tparam: [es5|es6]   default: es5\n\n\
  \t--module-path (--module-path path. Specify where to find user java modules.)\n\
  \n\t--no-deprecation-warning (Do not show nashorn deprecation warning.)\n\t\tparam:\
  \ [true|false]   default: false\n\n\t-ot, --optimistic-types (Use optimistic type\
  \ assumptions with deoptimizing recompilation. \n\t                        This\
  \ makes the compiler try, for any program symbol whose type cannot \n\t        \
  \                be proven at compile time, to type it as narrow and primitive as\
  \ \n\t                        possible. If the runtime encounters an error because\
  \ symbol type \n\t                        is too narrow, a wider method will be\
  \ generated until steady stage \n\t                        is reached. While this\
  \ produces as optimal Java Bytecode as possible, \n\t                        erroneous\
  \ type guesses will lead to longer warmup. Optimistic typing \n\t              \
  \          is currently enabled by default, but can be disabled for faster \n\t\
  \                        startup performance.)\n\t\tparam: [true|false]   default:\
  \ true\n\n\t-scripting (Enable scripting features.)\n\t\tparam: [true|false]   default:\
  \ false\n\n\t-strict (Run scripts in strict mode.)\n\t\tparam: [true|false]   default:\
  \ false\n\n\t-t, -timezone (Set timezone for script execution.)\n\t\tparam: <timezone>\
  \   default: GMT\n\n\t-v, -version (Print version info of Nashorn.)\n\t\tparam:\
  \ [true|false]   default: false\n\n"
generated_using:
- --help
