from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Int, String

Chorusngsfilter_V0_1_0 = CommandToolBuilder(tool="ChorusNGSfilter", base_command=["ChorusNGSfilter"], inputs=[ToolInput(tag="in_jellyfish", input_type=File(optional=True), prefix="--jellyfish", doc=InputDocumentation(doc="The path where Jellyfish software installed")), ToolInput(tag="in_genome", input_type=File(optional=True), prefix="--genome", doc=InputDocumentation(doc="Fasta format genome file, should include all sequences\nfrom genome")), ToolInput(tag="in_input", input_type=Int(optional=True), prefix="--input", doc=InputDocumentation(doc="Fastq format input files contain reads from whole\ngenome shotgun sequencing, files can be gzipped.\nMultiple files separate with ','. For example:\n1.fq.gz,2.fq.gz")), ToolInput(tag="in_jellyfish_file", input_type=File(optional=True), prefix="--jellyfishfile", doc=InputDocumentation(doc="prebuild jellyfish index file, conflict with input\nargument.")), ToolInput(tag="in_gzipped", input_type=String(optional=True), prefix="--gzipped", doc=InputDocumentation(doc="Input fastq file is gzipped(gz) or uncompressed(text).\n(Default: gz)")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of threads or CPUs to use. (Default: 1)")), ToolInput(tag="in_km_er", input_type=Int(optional=True), prefix="--kmer", doc=InputDocumentation(doc="Length of k-mer used for counting k-mers in input\nfastq files. (Default: 17)")), ToolInput(tag="in_probe", input_type=File(optional=True), prefix="--probe", doc=InputDocumentation(doc="The bed format probe file generated by Chorus")), ToolInput(tag="in_output", input_type=File(optional=True), prefix="--output", doc=InputDocumentation(doc="Output bed format probe file with k-mer score.\n(Default: output.bed)"))], outputs=[ToolOutput(tag="out_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output", type_hint=File()), doc=OutputDocumentation(doc="Output bed format probe file with k-mer score.\n(Default: output.bed)"))], container="quay.io/biocontainers/chorus2:2.01--py37hf01694f_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Chorusngsfilter_V0_1_0().translate("wdl")

