!Command
command:
- ChorusNGSfilter
positional: []
named:
- !Flag
  optional: true
  synonyms:
  - -j
  - --jellyfish
  description: The path where Jellyfish software installed
  args: !SimpleFlagArg
    name: JELLYFISH
- !Flag
  optional: true
  synonyms:
  - -g
  - --genome
  description: "Fasta format genome file, should include all sequences\nfrom genome"
  args: !SimpleFlagArg
    name: GENOME
- !Flag
  optional: true
  synonyms:
  - -i
  - --input
  description: "Fastq format input files contain reads from whole\ngenome shotgun\
    \ sequencing, files can be gzipped.\nMultiple files separate with \",\". For example:\n\
    1.fq.gz,2.fq.gz"
  args: !SimpleFlagArg
    name: INPUT
- !Flag
  optional: true
  synonyms:
  - -jfile
  - --jellyfishfile
  description: "prebuild jellyfish index file, conflict with input\nargument."
  args: !SimpleFlagArg
    name: JFILE
- !Flag
  optional: true
  synonyms:
  - -z
  - --gzipped
  description: "Input fastq file is gzipped(gz) or uncompressed(text).\n(Default:\
    \ gz)"
  args: !ChoiceFlagArg
    choices: !!set
      gz:
      text:
- !Flag
  optional: true
  synonyms:
  - -t
  - --threads
  description: 'Number of threads or CPUs to use. (Default: 1)'
  args: !SimpleFlagArg
    name: THREADS
- !Flag
  optional: true
  synonyms:
  - -k
  - --kmer
  description: "Length of k-mer used for counting k-mers in input\nfastq files. (Default:\
    \ 17)"
  args: !SimpleFlagArg
    name: KMER
- !Flag
  optional: true
  synonyms:
  - -p
  - --probe
  description: The bed format probe file generated by Chorus
  args: !SimpleFlagArg
    name: PROBE
- !Flag
  optional: true
  synonyms:
  - -o
  - --output
  description: "Output bed format probe file with k-mer score.\n(Default: output.bed)"
  args: !SimpleFlagArg
    name: OUTPUT
parent:
subcommands: []
usage: []
help_flag: !Flag
  optional: true
  synonyms:
  - -h
  - --help
  description: show this help message and exit
  args: !EmptyFlagArg {}
usage_flag:
version_flag: !Flag
  optional: true
  synonyms:
  - --version
  description: show program's version number and exit
  args: !EmptyFlagArg {}
help_text: "usage: ChorusNGSfilter [-h] [--version] [-j JELLYFISH] -g GENOME [-i INPUT]\n\
  \                       [-jfile JFILE] [-z {gz,text}] [-t THREADS] [-k KMER]\n \
  \                      [-p PROBE] [-o OUTPUT]\n\nChorusNGSfilter for counting Oligo\
  \ FISH probe k-mer score using NGS data\n\noptional arguments:\n  -h, --help   \
  \         show this help message and exit\n  --version             show program's\
  \ version number and exit\n  -j JELLYFISH, --jellyfish JELLYFISH\n             \
  \           The path where Jellyfish software installed\n  -g GENOME, --genome GENOME\n\
  \                        Fasta format genome file, should include all sequences\n\
  \                        from genome\n  -i INPUT, --input INPUT\n              \
  \          Fastq format input files contain reads from whole\n                 \
  \       genome shotgun sequencing, files can be gzipped.\n                     \
  \   Multiple files separate with \",\". For example:\n                        1.fq.gz,2.fq.gz\n\
  \  -jfile JFILE, --jellyfishfile JFILE\n                        prebuild jellyfish\
  \ index file, conflict with input\n                        argument.\n  -z {gz,text},\
  \ --gzipped {gz,text}\n                        Input fastq file is gzipped(gz) or\
  \ uncompressed(text).\n                        (Default: gz)\n  -t THREADS, --threads\
  \ THREADS\n                        Number of threads or CPUs to use. (Default: 1)\n\
  \  -k KMER, --kmer KMER  Length of k-mer used for counting k-mers in input\n   \
  \                     fastq files. (Default: 17)\n  -p PROBE, --probe PROBE\n  \
  \                      The bed format probe file generated by Chorus\n  -o OUTPUT,\
  \ --output OUTPUT\n                        Output bed format probe file with k-mer\
  \ score.\n                        (Default: output.bed)\n\nExample:\n  ChorusNGSfilter\
  \ -i 1.fq.gz,2.fq.gz -z gz -t 4 -g TAIR10_chr_all.fas \\ \n                  -j\
  \ /opt/software/jellyfish/bin/jellyfish -p probe.bed -o output.bed\n"
generated_using:
- --help
docker_image: quay.io/biocontainers/chorus2:2.01--py37hf01694f_0
