from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Directory, Int, String

Chorus2_V0_1_0 = CommandToolBuilder(tool="Chorus2", base_command=["Chorus2"], inputs=[ToolInput(tag="in_jellyfish", input_type=File(optional=True), prefix="--jellyfish", doc=InputDocumentation(doc="The path where Jellyfish software installed")), ToolInput(tag="in_bwa", input_type=File(optional=True), prefix="--bwa", doc=InputDocumentation(doc="The path where BWA software installed")), ToolInput(tag="in_genome", input_type=File(optional=True), prefix="--genome", doc=InputDocumentation(doc="Fasta format genome file, should include all sequences\nfrom genome")), ToolInput(tag="in_input", input_type=File(optional=True), prefix="--input", doc=InputDocumentation(doc="Fasta format input file, can be whole genome, a\nchromosome or one region from genome")), ToolInput(tag="in_save", input_type=Directory(optional=True), prefix="--save", doc=InputDocumentation(doc="The output folder for saving results")), ToolInput(tag="in_primer", input_type=Int(optional=True), prefix="--primer", doc=InputDocumentation(doc="A specific 5' labeled R primer for PCR reaction. For\nexample: CGTGGTCGCGTCTCA. (Default is none)")), ToolInput(tag="in_threads", input_type=Int(optional=True), prefix="--threads", doc=InputDocumentation(doc="Number of threads or CPUs to use. (Default: 1)")), ToolInput(tag="in_length", input_type=Int(optional=True), prefix="--length", doc=InputDocumentation(doc="The probe length. (Default: 45)")), ToolInput(tag="in_homology", input_type=Int(optional=True), prefix="--homology", doc=InputDocumentation(doc="The maximum homology(%) between target sequence and\nprobe, range from 50 to 100. (Default: 75)")), ToolInput(tag="in_dtm", input_type=Int(optional=True), prefix="--dtm", doc=InputDocumentation(doc="The minimum value of dTm (hybrid Tm - hairpin Tm),\nrange from 0 to 37. (Default: 10)")), ToolInput(tag="in_step", input_type=Int(optional=True), prefix="--step", doc=InputDocumentation(doc="The step length for k-mer searching in a sliding\nwindow, step length>=1. (Default: 5)")), ToolInput(tag="in_docker", input_type=String(optional=True), prefix="--docker", doc=InputDocumentation(doc="Only used in Docker version of Chorus")), ToolInput(tag="in_ploidy", input_type=Int(optional=True), prefix="--ploidy", doc=InputDocumentation(doc="The ploidy of the given genome (test version).\n(Default: 2)"))], outputs=[ToolOutput(tag="out_save", output_type=Directory(optional=True), selector=InputSelector(input_to_select="in_save", type_hint=File()), doc=OutputDocumentation(doc="The output folder for saving results"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Chorus2_V0_1_0().translate("wdl", allow_empty_container=True)

