class: CommandLineTool
id: ChorusNGSfilter.cwl
inputs:
- id: in_jellyfish
  doc: The path where Jellyfish software installed
  type: File
  inputBinding:
    prefix: --jellyfish
- id: in_genome
  doc: "Fasta format genome file, should include all sequences\nfrom genome"
  type: File
  inputBinding:
    prefix: --genome
- id: in_input
  doc: "Fastq format input files contain reads from whole\ngenome shotgun sequencing,\
    \ files can be gzipped.\nMultiple files separate with \",\". For example:\n1.fq.gz,2.fq.gz"
  type: long
  inputBinding:
    prefix: --input
- id: in_gzipped
  doc: "Input fastq file is gzipped(gz) or uncompressed(text).\n(Default: gz)"
  type: string
  inputBinding:
    prefix: --gzipped
- id: in_threads
  doc: 'Number of threads or CPUs to use. (Default: 1)'
  type: long
  inputBinding:
    prefix: --threads
- id: in_km_er
  doc: "Length of k-mer used for counting k-mers in input\nfastq files. (Default:\
    \ 17)"
  type: long
  inputBinding:
    prefix: --kmer
- id: in_probe
  doc: The bed format probe file generated by Chorus
  type: File
  inputBinding:
    prefix: --probe
- id: in_output
  doc: "Output bed format probe file with k-mer score.\n(Default: output.bed)"
  type: File
  inputBinding:
    prefix: --output
outputs:
- id: out_stdout
  doc: Standard output stream
  type: stdout
- id: out_output
  doc: "Output bed format probe file with k-mer score.\n(Default: output.bed)"
  type: File
  outputBinding:
    glob: $(inputs.in_output)
cwlVersion: v1.1
baseCommand:
- ChorusNGSfilter
