from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File

Oligowalk_V0_1_0 = CommandToolBuilder(tool="OligoWalk", base_command=["OligoWalk"], inputs=[ToolInput(tag="in_dna", input_type=Boolean(optional=True), prefix="--dna", doc=InputDocumentation(doc="Indicate that the oligomers are DNA (as opposed to RNA).")), ToolInput(tag="in_html", input_type=Boolean(optional=True), prefix="--html", doc=InputDocumentation(doc="Write the report in HTML mode instead of plain text.")), ToolInput(tag="in_no_header", input_type=File(optional=True), prefix="--no-header", doc=InputDocumentation(doc="Do not include a list of the parameters used in the\ncalulation in the output report file.")), ToolInput(tag="in_score", input_type=Boolean(optional=True), prefix="-score", doc=InputDocumentation(doc="Score the siRNA prefilter.")), ToolInput(tag="in_web_server", input_type=Boolean(optional=True), prefix="--webserver", doc=InputDocumentation(doc="Use special output for running OligoWalk as a webserver.\nThis implies HTML=true and it sends the header (which lists the\nparameters that were used in the calulation) to STDOUT instead of\nincluding them in the report. It also turns off progress updates.")), ToolInput(tag="in_write", input_type=Boolean(optional=True), prefix="-write", doc=InputDocumentation(doc="Write sav files to save time in test mode.")), ToolInput(tag="in_conc", input_type=Boolean(optional=True), prefix="--conc", doc=InputDocumentation(doc="Molar concentration of oligos. E.g. '1.5E-6', '1.5uM', or '0.0000015'.\nUnit Abbreviations: mM=10^-3 uM=10^-6, nM=10^-9, pM=10^-12\nThis may be used in conjunction with the '--unit' flag: --conc 1.5 --unit\n-6 (1.5 micromolar).")), ToolInput(tag="in_dist", input_type=Boolean(optional=True), prefix="-dist", doc=InputDocumentation(doc="Limit the maximum distance between nucleotides that can pair.")), ToolInput(tag="in_end", input_type=Boolean(optional=True), prefix="--end", doc=InputDocumentation(doc="End position of folding region of target.")), ToolInput(tag="in_filter", input_type=Boolean(optional=True), prefix="--filter", doc=InputDocumentation(doc="Whether to use the siRNA prefilter to prefill functional siRNA.\n0=No Prefilter; 1=Use Prefilter")), ToolInput(tag="in_fold", input_type=Boolean(optional=True), prefix="-fold", doc=InputDocumentation(doc="Only fold a fragment with the specified size (plus the length of\nthe oligomer), which is centered on the binding region.\nWhen FOLD_SIZE > 1, MODE (-m) and SUBOPTIMAL (-s) must both be 2.")), ToolInput(tag="in_length", input_type=Boolean(optional=True), prefix="--length", doc=InputDocumentation(doc="Length of oligomers for hybridization.")), ToolInput(tag="in_mode", input_type=Boolean(optional=True), prefix="--mode", doc=InputDocumentation(doc="Determines how target structure is used:\n1=Break Local Structure.\n2=Refold target RNA after oligo binding.\n3=No target structure considered.")), ToolInput(tag="in_suboptimal", input_type=Boolean(optional=True), prefix="--suboptimal", doc=InputDocumentation(doc="Determines suboptimal structure options:\n0=Do not consider suboptimal structures.\n1=Use AllSub to generate suboptimal structures.\n2=Use Partition Function to generate all suboptimal structures.\n3=Use a heuristic method for both oligo-free and oligo-bound RNA.\n4=Use stochastic sampling to generate 1000 structures.")), ToolInput(tag="in_to", input_type=Boolean(optional=True), prefix="--to", doc=InputDocumentation(doc="End position of scanning on folded region of target.")), ToolInput(tag="in_shape", input_type=Boolean(optional=True), prefix="--shape", doc=InputDocumentation(doc="Specify a SHAPE data file.")), ToolInput(tag="in_from", input_type=Boolean(optional=True), prefix="--from", doc=InputDocumentation(doc="Start position of scanning on folded region of target.")), ToolInput(tag="in_start", input_type=Boolean(optional=True), prefix="--start", doc=InputDocumentation(doc="Start position of folding region of target.")), ToolInput(tag="in_test", input_type=Boolean(optional=True), prefix="-test", doc=InputDocumentation(doc="Perform self-tests. The parameter should be a list of space-separated test\nnumbers, e.g.: -test '1 2 5'")), ToolInput(tag="in_unit", input_type=Boolean(optional=True), prefix="--unit", doc=InputDocumentation(doc="Specifies a power-of-ten to multiply the concentration by.\nFor example '-co 3 -unit -6' is equal to '-co 3uM' or '-co 3E-6'\n")), ToolInput(tag="in_sequence_file", input_type=File(), position=0, doc=InputDocumentation(doc="")), ToolInput(tag="in_report_file", input_type=File(), position=1, doc=InputDocumentation(doc=""))], outputs=[ToolOutput(tag="out_no_header", output_type=File(optional=True), selector=InputSelector(input_to_select="in_no_header", type_hint=File()), doc=OutputDocumentation(doc="Do not include a list of the parameters used in the\ncalulation in the output report file."))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Oligowalk_V0_1_0().translate("wdl", allow_empty_container=True)

