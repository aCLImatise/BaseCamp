!Command
command:
- iCount
- peaks
positional:
- !Positional
  description: Annotation file in GTF format, obtained from "iCount segment" command
  position: 0
  name: annotation
  optional: false
- !Positional
  description: File with cross-links in BED6 format
  position: 1
  name: sites
  optional: false
- !Positional
  description: "File name for \"peaks\" output. File reports positions with significant\n\
    number of cross-link events. It should have .bed or .bed.gz extension"
  position: 2
  name: peaks
  optional: false
named:
- !Flag
  description: "File name for \"scores\" output. File reports all cross-link events,\n\
    independent from their FDR score It should have .tsv, .csv, .txt or .gz\nextension\
    \ (default: None)"
  synonyms:
  - --scores
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "[ ...]    Features from annotation to consider. If None, ['gene']\
    \ is used.\nSometimes, it is advised to use ['gene', 'intergenic'] (default: None)"
  synonyms:
  - --features
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ', --group_by       Attribute by which cross-link positions are grouped
    (default: gene_id)'
  synonyms:
  - -g
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Treat all features as one when grouping. Has no effect when only one\n\
    feature is given in features parameter (default: False)"
  synonyms:
  - --merge_features
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Half-window size (default: 3)'
  synonyms:
  - --half_window
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'FDR threshold (default: 0.05)'
  synonyms:
  - --fdr
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ', --perms          Number of permutations when calculating random
    distribution (default: 100)'
  synonyms:
  - -p
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ', --rnd_seed     Seed for random generator (default: 42)'
  synonyms:
  - -rnd
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Report analysis progress (default: False)'
  synonyms:
  - -prog
  - --report_progress
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ', --stdout_log     Threshold value (0-50) for logging to stdout. If
    0, logging to stdout if turned OFF.'
  synonyms:
  - -S
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ', --file_log       Threshold value (0-50) for logging to file. If
    0, logging to file if turned OFF.'
  synonyms:
  - -F
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ', --file_logpath   Path to log file.'
  synonyms:
  - -P
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: ', --results_file   File into which to store Metrics.'
  synonyms:
  - -M
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: iCount peaks [-h] [--scores] [--features  [...]] [-g]\n       \
  \             [--merge_features] [--half_window] [--fdr] [-p] [-rnd]\n         \
  \           [-prog] [-S] [-F] [-P] [-M]\n                    annotation sites peaks\n\
  \nFind positions with high density of cross-linked sites.\n\nThere are two typical\
  \ variants of this analysis, depending on the parameters:\n\n* Gene-wise analysis,\
  \ where:\n    * features = gene\n    * group_by = gene_id\n\n* Transcript-wise analysis\
  \ where:\n    * features = CDS, intron, UTR3, UTR5, ncRNA, intergenic\n    * group_by\
  \ = transcript_id\n\nLet's look at the Gene-wise analysis in more detail first.\
  \ Imagine the following\nsituation::\n\n    |-----------gene1----------|\n     \
  \       |-----------------------------gene2------------------------------|\n   \
  \        ab c                d                 e\n\n    a = 60\n    b = 100\n  \
  \  c = 70\n    d = 40\n    e = 100\n    gene1: gene_id = 001\n    gene2: gene_id\
  \ = 002\n\nThere are two genes (partially intersecting) and five positions with\
  \ cross-links\n(noted with a, b, c, d and e). Crosslink position \"a\" has 60 cross-link\
  \ events,\n\"b\" has 100 cross-link events and so on. Also, gene1 has gene_id 001,\
  \ etc.\n\nThe algorithm first finds all intersections between annotation and\ncross-links.\
  \ In this case cross-link position \"a\" intersects only with gene1,\nwhile position\
  \ \"b\" intersects also with gene2... Annotation can include\nvarious other types\
  \ of segments (transcripts, intergenic, ncRNA, etc.), but only\nsegments of type\
  \ ``gene`` are considered for intersection. This behaviour is\ncontrolled by parameter\
  \ ``features``.\n\nNext step is to make groups of cross-links. They are grouped\
  \ by ``group_by``\nparameter (in this case, it equals to ``gene_id``). There will\
  \ be 2 groups.\nFirst group name will be 001 and will contain a, b, c and d. Second\
  \ group name\nwill be 002 and will contain b, c, d and e.\n\nThe question now is:\
  \ has any of positions in each group significantly increased\nnumber of cross-link\
  \ events? And how can one quantify this significance?\n\nThis is done by parmutation\
  \ analysis. It draws a number of random situations\nwith same group size and number\
  \ of cross-link scores. Number of such draws is\ndetermined by ``perm`` parameter.\
  \ This way, a random distribution is calculated.\nWhen comparing the observed distribution\
  \ with the random one, FDR values are\nassigned to each position. A cutoff FRD value\
  \ is chosen and only positions with\nFDR < FDR cutoff are considered as significant.\n\
  \nOne must also know that when considering only scores on single positions\nsignificant\
  \ *clusters* of cross-links can be missed. In the upper example, it is\nobvious,\
  \ that something more significantly is happening on position b than on\nposition\
  \ e, despite having the same score. To account for this, algorithm\nconsiders not\
  \ only the score of single cross-link, but also scores of\ncross-links some nucleotides\
  \ before and after. This behaviour in controlled by\nhalf-window (half_window) parameter.\
  \ In the upper example, score of position b\neqals to 160 if half_window = 1 and\
  \ 2530 if half_window=2. Score of position e\nremains 100.\n\nLet's also look at\
  \ the transcript-wise analysis. In this case, scenario also\nincludes transcripts\
  \ and sub-transcript elements::\n\n    |-----------gene1----------|\n    |--------transcript1-------|\n\
  \    |-ncRNA-||-intron-||-ncRNA-|\n            |-----------------------------gene2------------------------------|\n\
  \            |---------------transcript2--------------|\n            |-CDS-||-intron-||-CDS-||-intron-||-UTR3-|\n\
  \                                    |---------------transcript3--------------|\n\
  \                                    |-UTR5-||-intron-||-CDS-||-intron-||-CDS-|\n\
  \n           ab c                d                 e\n\n    a = 60\n    b = 100\n\
  \    c = 70\n    d = 40\n    e = 100\n    gene1: gene_id = 001\n    gene2: gene_id\
  \ = 002\n    transcript1: transcript_id = 0001\n    transcript2: transcript_id =\
  \ 0002\n    transcript3: transcript_id = 0003\n\nValue of parameter features is:\
  \ CDS, intron, UTR3, UTR5, ncRNA, intergenic.\nValue of parameter group_by is transcript_id.\
  \ Since we have multiple values in\nfeature parameter, another parameter becomes\
  \ important: merge_features. If set\nto false (default) algorithm will make the\
  \ following groups:\n\n    * group name: ncRNA-0001, members: a, b, d\n    * group\
  \ name: intron-0001, members: c\n    * group name: CDS-0002, members: b, c, d\n\
  \    * group name: UTR3-0002, members: e\n    * group name: intron-0003, members:\
  \ e\n\nHowever, if merge_features equals to true, groups are:\n\n    * group name:\
  \ 0001, members: a, b, c, d\n    * group name: 0002, members: b, c, d, e\n    *\
  \ group name: 0003, members: e\n\nThen, for each group, procedure is exactly the\
  \ same as in Gene-wise case.\n\nWhen analysis is done, significant positions are\
  \ reported in file, given by\npeaks parameter. If scores parameter is also given,\
  \ all positions are\nreported in it, no matter the FDR value.\n\npositional arguments:\n\
  \  annotation            Annotation file in GTF format, obtained from \"iCount segment\"\
  \ command\n  sites                 File with cross-links in BED6 format\n  peaks\
  \                 File name for \"peaks\" output. File reports positions with significant\n\
  \                        number of cross-link events. It should have .bed or .bed.gz\
  \ extension\n\noptional arguments:\n  -h, --help            show this help message\
  \ and exit\n  --scores              File name for \"scores\" output. File reports\
  \ all cross-link events,\n                        independent from their FDR score\
  \ It should have .tsv, .csv, .txt or .gz\n                        extension (default:\
  \ None)\n  --features  [ ...]    Features from annotation to consider. If None,\
  \ ['gene'] is used.\n                        Sometimes, it is advised to use ['gene',\
  \ 'intergenic'] (default: None)\n  -g , --group_by       Attribute by which cross-link\
  \ positions are grouped (default: gene_id)\n  --merge_features      Treat all features\
  \ as one when grouping. Has no effect when only one\n                        feature\
  \ is given in features parameter (default: False)\n  --half_window         Half-window\
  \ size (default: 3)\n  --fdr                 FDR threshold (default: 0.05)\n  -p\
  \ , --perms          Number of permutations when calculating random distribution\
  \ (default: 100)\n  -rnd , --rnd_seed     Seed for random generator (default: 42)\n\
  \  -prog, --report_progress\n                        Report analysis progress (default:\
  \ False)\n  -S , --stdout_log     Threshold value (0-50) for logging to stdout.\
  \ If 0, logging to stdout if turned OFF.\n  -F , --file_log       Threshold value\
  \ (0-50) for logging to file. If 0, logging to file if turned OFF.\n  -P , --file_logpath\
  \   Path to log file.\n  -M , --results_file   File into which to store Metrics.\n"
generated_using:
- --help
