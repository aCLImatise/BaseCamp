version 1.0

task NanoStat {
  input {
    Directory? outdir
    File? prefix
    File? name
    Int? threads
    Boolean? tsv
    Boolean? barcoded
    String? read_type
    Boolean? no_supplementary
    Array[File] fast_q
    Array[File] fast_a
    Array[File] summary
    Array[File] bam
    Array[File] ub_am
    Array[File] cram
    Array[File] feather
    Boolean? v
  }
  command <<<
    NanoStat \
      ~{if defined(outdir) then ("--outdir " +  '"' + outdir + '"') else ""} \
      ~{if defined(prefix) then ("--prefix " +  '"' + prefix + '"') else ""} \
      ~{if defined(name) then ("--name " +  '"' + name + '"') else ""} \
      ~{if defined(threads) then ("--threads " +  '"' + threads + '"') else ""} \
      ~{if (tsv) then "--tsv" else ""} \
      ~{if (barcoded) then "--barcoded" else ""} \
      ~{if defined(read_type) then ("--readtype " +  '"' + read_type + '"') else ""} \
      ~{if (no_supplementary) then "--no_supplementary" else ""} \
      ~{if defined(fast_q) then ("--fastq " +  '"' + fast_q + '"') else ""} \
      ~{if defined(fast_a) then ("--fasta " +  '"' + fast_a + '"') else ""} \
      ~{if defined(summary) then ("--summary " +  '"' + summary + '"') else ""} \
      ~{if defined(bam) then ("--bam " +  '"' + bam + '"') else ""} \
      ~{if defined(ub_am) then ("--ubam " +  '"' + ub_am + '"') else ""} \
      ~{if defined(cram) then ("--cram " +  '"' + cram + '"') else ""} \
      ~{if defined(feather) then ("--feather " +  '"' + feather + '"') else ""} \
      ~{if (v) then "-v" else ""}
  >>>
  runtime {
    docker: "quay.io/biocontainers/nanostat:1.5.0--py_0"
  }
  parameter_meta {
    outdir: "Specify directory for output, only in combination with -n."
    prefix: "Specify an optional prefix to be used for the output file."
    name: "Specify a filename/path for the output, stdout is the default."
    threads: "Set the allowed number of threads to be used by the script."
    tsv: "Output the stats as a properly formatted TSV."
    barcoded: "Use if you want to split the summary file by barcode"
    read_type: "Which read type to extract information about from summary. Options are 1D, 2D,\\n1D2"
    no_supplementary: "Use if you want to remove supplementary alignments"
    fast_q: "Data is in one or more (compressed) fastq file(s)."
    fast_a: "Data is in one or more (compressed) fasta file(s)."
    summary: "Data is in one or more (compressed) summary file(s)generated by albacore or\\nguppy."
    bam: "Data is in one or more sorted bam file(s)."
    ub_am: "Data is in one or more unmapped bam file(s)."
    cram: "Data is in one or more sorted cram file(s)."
    feather: "Data is in one or more feather file(s)."
    v: ""
  }
  output {
    File out_stdout = stdout()
    Directory out_outdir = "${in_outdir}"
    File out_prefix = "${in_prefix}"
    File out_name = "${in_name}"
  }
}