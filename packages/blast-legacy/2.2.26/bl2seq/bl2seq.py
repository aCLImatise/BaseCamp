from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File

Bl2Seq_V0_1_0 = CommandToolBuilder(tool="bl2seq", base_command=["bl2seq"], inputs=[ToolInput(tag="in_first_sequence", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="First sequence [File In]")), ToolInput(tag="in_second_sequence", input_type=Boolean(optional=True), prefix="-j", doc=InputDocumentation(doc="Second sequence [File In]")), ToolInput(tag="in_program_name_blastp", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="Program name: blastp, blastn, blastx, tblastn, tblastx. For blastx 1st sequence should be nucleotide, tblastn 2nd sequence nucleotide [String]")), ToolInput(tag="in_gapped_default_t", input_type=Boolean(optional=True), prefix="-g", doc=InputDocumentation(doc="Gapped [T/F]\ndefault = T")), ToolInput(tag="in_alignment_file_default", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="alignment output file [File Out]\ndefault = stdout")), ToolInput(tag="in_theor_size_zero", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc="theor. db size (zero is real size) [Real]\ndefault = 0")), ToolInput(tag="in_text_asn_output", input_type=File(optional=True), prefix="-a", doc=InputDocumentation(doc="Text ASN.1 output file [File Out]  Optional")), ToolInput(tag="in_cost_open_gap", input_type=Boolean(optional=True), prefix="-G", doc=InputDocumentation(doc="Cost to open a gap (-1 invokes default behavior) [Integer]\ndefault = -1")), ToolInput(tag="in_cost_extend_gap", input_type=Boolean(optional=True), prefix="-E", doc=InputDocumentation(doc="Cost to extend a gap (-1 invokes default behavior) [Integer]\ndefault = -1")), ToolInput(tag="in_x_dropoff_value", input_type=Boolean(optional=True), prefix="-X", doc=InputDocumentation(doc="X dropoff value for gapped alignment (in bits) (zero invokes default behavior)\nblastn 30, megablast 20, tblastx 0, all others 15 [Integer]\ndefault = 0")), ToolInput(tag="in_word_size_default", input_type=Boolean(optional=True), prefix="-W", doc=InputDocumentation(doc="Word size, default if zero (blastn 11, megablast 28, all others 3) [Integer]\ndefault = 0")), ToolInput(tag="in_matrix_default_blosum", input_type=Boolean(optional=True), prefix="-M", doc=InputDocumentation(doc="Matrix [String]\ndefault = BLOSUM62")), ToolInput(tag="in_penalty_nucleotide_mismatch", input_type=Boolean(optional=True), prefix="-q", doc=InputDocumentation(doc="Penalty for a nucleotide mismatch (blastn only) [Integer]\ndefault = -3")), ToolInput(tag="in_reward_nucleotide_match", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="Reward for a nucleotide match (blastn only) [Integer]\ndefault = 1")), ToolInput(tag="in_filter_query_sequence", input_type=Boolean(optional=True), prefix="-F", doc=InputDocumentation(doc="Filter query sequence (DUST with blastn, SEG with others) [String]\ndefault = T")), ToolInput(tag="in_expectation_value_e", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc="Expectation value (E) [Real]\ndefault = 10.0")), ToolInput(tag="in_query_strands_search", input_type=Boolean(optional=True), prefix="-S", doc=InputDocumentation(doc="Query strands to search against database (blastn only).  3 is both, 1 is top, 2 is bottom [Integer]\ndefault = 3")), ToolInput(tag="in_produce_html_output", input_type=Boolean(optional=True), prefix="-T", doc=InputDocumentation(doc="Produce HTML output [T/F]\ndefault = F")), ToolInput(tag="in_use_mega_blast", input_type=Boolean(optional=True), prefix="-m", doc=InputDocumentation(doc="Use Mega Blast for search [T/F]  Optional\ndefault = F")), ToolInput(tag="in_effective_length_search", input_type=Boolean(optional=True), prefix="-Y", doc=InputDocumentation(doc="Effective length of the search space (use zero for the real size) [Real]\ndefault = 0")), ToolInput(tag="in_length_largest_intron", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="Length of the largest intron allowed in tblastn for linking HSPs [Integer]\ndefault = 0")), ToolInput(tag="in_location_first_optional", input_type=Boolean(optional=True), prefix="-I", doc=InputDocumentation(doc="Location on first sequence [String]  Optional")), ToolInput(tag="in_location_second_optional", input_type=Boolean(optional=True), prefix="-J", doc=InputDocumentation(doc="Location on second sequence [String]  Optional")), ToolInput(tag="in_output_format_traditional", input_type=Boolean(optional=True), prefix="-D", doc=InputDocumentation(doc="Output format: 0 - traditional, 1 - tabular [Integer]\ndefault = 0")), ToolInput(tag="in_use_case_filtering", input_type=Boolean(optional=True), prefix="-U", doc=InputDocumentation(doc="Use lower case filtering for the query sequence [T/F]  Optional\ndefault = F")), ToolInput(tag="in_input_sequences_form", input_type=Boolean(optional=True), prefix="-A", doc=InputDocumentation(doc="Input sequences in the form of accession.version [T/F]\ndefault = F")), ToolInput(tag="in_force_use_legacy", input_type=Boolean(optional=True), prefix="-V", doc=InputDocumentation(doc="Force use of the legacy BLAST engine [T/F]  Optional\ndefault = F\n"))], outputs=[ToolOutput(tag="out_alignment_file_default", output_type=File(optional=True), selector=InputSelector(input_to_select="in_alignment_file_default", type_hint=File()), doc=OutputDocumentation(doc="alignment output file [File Out]\ndefault = stdout")), ToolOutput(tag="out_text_asn_output", output_type=File(optional=True), selector=InputSelector(input_to_select="in_text_asn_output", type_hint=File()), doc=OutputDocumentation(doc="Text ASN.1 output file [File Out]  Optional"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Bl2Seq_V0_1_0().translate("wdl", allow_empty_container=True)

