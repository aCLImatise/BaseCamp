from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File

Fastacmd_V0_1_0 = CommandToolBuilder(tool="fastacmd", base_command=["fastacmd"], inputs=[ToolInput(tag="in_database__optionaldefault", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc="Database [String]  Optional\ndefault = nr")), ToolInput(tag="in_type_fileg_guess", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="Type of file\nG - guess mode (look for protein, then nucleotide)\nT - protein\nF - nucleotide [String]  Optional\ndefault = G")), ToolInput(tag="in_commadelimited_search_stringsgis", input_type=Boolean(optional=True), prefix="-s", doc=InputDocumentation(doc="Comma-delimited search string(s).\nGIs, accessions, loci, or fullSeq-id strings may be used,\ne.g. 555, AC147927, 'gnl|dbname|tag' [String]  Optional")), ToolInput(tag="in_input_file_optional", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="Input file with GIs/accessions/loci for batch\nretrieval [String]  Optional")), ToolInput(tag="in_retrieve_duplicate_accessions", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="Retrieve duplicate accessions [T/F]  Optional\ndefault = F")), ToolInput(tag="in_line_length_sequence", input_type=Boolean(optional=True), prefix="-l", doc=InputDocumentation(doc="Line length for sequence [Integer]  Optional\ndefault = 80")), ToolInput(tag="in_definition_line_contain", input_type=Boolean(optional=True), prefix="-t", doc=InputDocumentation(doc="Definition line should contain target gi only [T/F]  Optional\ndefault = F")), ToolInput(tag="in_output_file_optionaldefault", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="Output file [File Out]  Optional\ndefault = stdout")), ToolInput(tag="in_use_ctrlas_nonredundant", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="Use Ctrl-A's as non-redundant defline separator [T/F]  Optional\ndefault = F")), ToolInput(tag="in_dump_entire_database", input_type=Boolean(optional=True), prefix="-D", doc=InputDocumentation(doc="Dump the entire database as (default is not to dump anything):\n1 FASTA\n2 Gi list\n3 Accession.version list")), ToolInput(tag="in_range_extract_startstop", input_type=Boolean(optional=True), prefix="-L", doc=InputDocumentation(doc="Range of sequence to extract (Format: start,stop)\n0 in 'start' refers to the beginning of the sequence\n0 in 'stop' refers to the end of the sequence [String]  Optional\ndefault = 0,0")), ToolInput(tag="in_strand_subsequence_nucleotide", input_type=Boolean(optional=True), prefix="-S", doc=InputDocumentation(doc="Strand on subsequence (nucleotide only): 1 is top, 2 is bottom [Integer]\ndefault = 1")), ToolInput(tag="in_print_taxonomic_information", input_type=Boolean(optional=True), prefix="-T", doc=InputDocumentation(doc="Print taxonomic information for requested sequence(s) [T/F]\ndefault = F")), ToolInput(tag="in_print_database_information", input_type=Boolean(optional=True), prefix="-I", doc=InputDocumentation(doc="Print database information only (overrides all other options) [T/F]\ndefault = F")), ToolInput(tag="in_retrieve_sequences_pig", input_type=Boolean(optional=True), prefix="-P", doc=InputDocumentation(doc="Retrieve sequences with this PIG [Integer]  Optional"))], outputs=[ToolOutput(tag="out_output_file_optionaldefault", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_file_optionaldefault", type_hint=File()), doc=OutputDocumentation(doc="Output file [File Out]  Optional\ndefault = stdout"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Fastacmd_V0_1_0().translate("wdl", allow_empty_container=True)

