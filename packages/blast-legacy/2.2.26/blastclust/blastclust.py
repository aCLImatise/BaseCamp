from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import Boolean, File

Blastclust_V0_1_0 = CommandToolBuilder(tool="blastclust", base_command=["blastclust"], inputs=[ToolInput(tag="in_fasta_input_file", input_type=Boolean(optional=True), prefix="-i", doc=InputDocumentation(doc="FASTA input file (program will format the database and remove files in the end) [File In]\ndefault = stdin")), ToolInput(tag="in_number_use_default", input_type=Boolean(optional=True), prefix="-a", doc=InputDocumentation(doc="Number of CPU's to use [Integer]\ndefault = 1")), ToolInput(tag="in_output_file_list", input_type=File(optional=True), prefix="-o", doc=InputDocumentation(doc="Output file for list of clusters [File Out]\ndefault = stdout")), ToolInput(tag="in_length_coverage_threshold", input_type=Boolean(optional=True), prefix="-L", doc=InputDocumentation(doc="Length coverage threshold [Real]\ndefault = 0.9")), ToolInput(tag="in_score_coverage_threshold", input_type=Boolean(optional=True), prefix="-S", doc=InputDocumentation(doc="Score coverage threshold (bit score / length if < 3.0, percentage of identities otherwise) [Real]\ndefault = 1.75")), ToolInput(tag="in_require_coverage_neighbours", input_type=Boolean(optional=True), prefix="-b", doc=InputDocumentation(doc="Require coverage on both neighbours? [T/F]\ndefault = TRUE")), ToolInput(tag="in_file_save_neighbours", input_type=File(optional=True), prefix="-s", doc=InputDocumentation(doc="File to save all neighbours [File Out]  Optional")), ToolInput(tag="in_file_restore_neighbors", input_type=Boolean(optional=True), prefix="-r", doc=InputDocumentation(doc="File to restore neighbors for reclustering [File In]  Optional")), ToolInput(tag="in_input_database_optional", input_type=Boolean(optional=True), prefix="-d", doc=InputDocumentation(doc="Input as a database [File In]  Optional")), ToolInput(tag="in_print_progress_messages", input_type=File(optional=True), prefix="-v", doc=InputDocumentation(doc="Print progress messages (verbose mode) [File Out]\ndefault = stdout")), ToolInput(tag="in_complete_unfinished_clustering", input_type=Boolean(optional=True), prefix="-C", doc=InputDocumentation(doc="Complete unfinished clustering [T/F]\ndefault = FALSE")), ToolInput(tag="in_restrict_reclustering_i", input_type=Boolean(optional=True), prefix="-l", doc=InputDocumentation(doc="Restrict reclustering to id list [File In]  Optional")), ToolInput(tag="in_input_proteins_default", input_type=Boolean(optional=True), prefix="-p", doc=InputDocumentation(doc="Is input proteins? [T/F]\ndefault = TRUE")), ToolInput(tag="in_enable_i_parsing", input_type=Boolean(optional=True), prefix="-e", doc=InputDocumentation(doc="Enable id parsing in database formatting? [T/F]\ndefault = TRUE")), ToolInput(tag="in_configuration_file_optional", input_type=Boolean(optional=True), prefix="-c", doc=InputDocumentation(doc="Configuration file with advanced options [File In]  Optional")), ToolInput(tag="in_word_size_use", input_type=Boolean(optional=True), prefix="-W", doc=InputDocumentation(doc="Word size to use (0 for default: proteins 3, nucleotides 32) [Integer]\ndefault = 0\n"))], outputs=[ToolOutput(tag="out_output_file_list", output_type=File(optional=True), selector=InputSelector(input_to_select="in_output_file_list", type_hint=File()), doc=OutputDocumentation(doc="Output file for list of clusters [File Out]\ndefault = stdout")), ToolOutput(tag="out_file_save_neighbours", output_type=File(optional=True), selector=InputSelector(input_to_select="in_file_save_neighbours", type_hint=File()), doc=OutputDocumentation(doc="File to save all neighbours [File Out]  Optional")), ToolOutput(tag="out_print_progress_messages", output_type=File(optional=True), selector=InputSelector(input_to_select="in_print_progress_messages", type_hint=File()), doc=OutputDocumentation(doc="Print progress messages (verbose mode) [File Out]\ndefault = stdout"))], container=None, version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Blastclust_V0_1_0().translate("wdl", allow_empty_container=True)

