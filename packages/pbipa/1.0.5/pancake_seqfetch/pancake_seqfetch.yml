!Command
command:
- pancake
- seqfetch
positional:
- !Positional
  description: STR   Output file for the fetched sequences.
  position: 0
  name: out_fn
  optional: false
- !Positional
  description: STR   List of sequences to fetch, one per line.
  position: 1
  name: fetch_list
  optional: false
- !Positional
  description: 'Algorithm Options:'
  position: 0
  name: formats.
  optional: false
named:
- !Flag
  description: "STR   Output format. If an input file is FASTA and out format is FASTQ,\
    \ dummy QVs\nwill be added. Valid choices: (fasta, fastq). [fasta]"
  synonyms:
  - --out-fmt
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "STR   Dummy QV to be added to sequences when input format is FASTA\
    \ and output\nFASTQ. [!]"
  synonyms:
  - --dummy-qv
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "STR   SeqDB file path. If provided, the SeqDB will be used to look-up\
    \ the\nprovided sequences by their IDs."
  synonyms:
  - --alias
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Exit non-zero if not all seqs are found.
  synonyms:
  - --fail
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "The output sequence names will be replaced by their IDs in the SeqDB,\
    \ if\nthe SeqDB was provided as input."
  synonyms:
  - --write-ids
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Fetch homopolymer compressed sequences.
  synonyms:
  - --use-hpc
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "Write a run-length-encoded file alongside to the output file. The\
    \ RLE file\ncontains conversion coordinates from the HPC space to the original\
    \ space\ninstead of the run-length-encoding. This option does not write the HPC\n\
    sequence, for that please specify '--user-hpc'."
  synonyms:
  - --use-rle
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'STR   Set log level. Valid choices: (TRACE, DEBUG, INFO, WARN, FATAL).
    [WARN]'
  synonyms:
  - --log-level
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: FILE  Log to a file, instead of stderr.
  synonyms:
  - --log-file
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag: !Flag
  description: Show this help and exit.
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: Show application version and exit.
  synonyms:
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "pancake seqfetch - Fetches a set of sequences in random access from a\
  \ list of specified indexed sequence files.\n\nUsage:\n  pancake seqfetch [options]\
  \ <out_fn> <fetch_list> <<input.fasta/fastq/bam/fofn> [...]>\n\n  out_fn       \
  \                       STR   Output file for the fetched sequences.\n  fetch_list\
  \                          STR   List of sequences to fetch, one per line.\n  <input.fasta/fastq/bam/fofn>\
  \ [...]  STR   One or more input sequence files, in FASTA, FASTQ, BAM, SeqDB or\
  \ FOFN\n                                            formats.\n\nAlgorithm Options:\n\
  \  --out-fmt                           STR   Output format. If an input file is\
  \ FASTA and out format is FASTQ, dummy QVs\n                                   \
  \         will be added. Valid choices: (fasta, fastq). [fasta]\n  --dummy-qv  \
  \                        STR   Dummy QV to be added to sequences when input format\
  \ is FASTA and output\n                                            FASTQ. [!]\n\
  \  --alias                             STR   SeqDB file path. If provided, the SeqDB\
  \ will be used to look-up the\n                                            provided\
  \ sequences by their IDs.\n  --fail                                    Exit non-zero\
  \ if not all seqs are found.\n  --write-ids                               The output\
  \ sequence names will be replaced by their IDs in the SeqDB, if\n              \
  \                              the SeqDB was provided as input.\n  --use-hpc   \
  \                              Fetch homopolymer compressed sequences.\n  --use-rle\
  \                                 Write a run-length-encoded file alongside to the\
  \ output file. The RLE file\n                                            contains\
  \ conversion coordinates from the HPC space to the original space\n            \
  \                                instead of the run-length-encoding. This option\
  \ does not write the HPC\n                                            sequence,\
  \ for that please specify '--user-hpc'.\n\n  -h,--help                         \
  \        Show this help and exit.\n  --version                                 Show\
  \ application version and exit.\n  --log-level                         STR   Set\
  \ log level. Valid choices: (TRACE, DEBUG, INFO, WARN, FATAL). [WARN]\n  --log-file\
  \                          FILE  Log to a file, instead of stderr.\n\n"
generated_using:
- --help
