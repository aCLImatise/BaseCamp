from datetime import datetime
from typing import List, Optional, Dict, Any

from janis_core import *
from janis_core.types.common_data_types import File, Boolean, Int, String, Directory

Ipa_Dist_V0_1_0 = CommandToolBuilder(tool="ipa_dist", base_command=["ipa", "dist"], inputs=[ToolInput(tag="in_input_fn", input_type=File(optional=True), prefix="--input-fn", doc=InputDocumentation(doc="(Required.) Input reads in FASTA, FASTQ, BAM, XML or FOFN formats. Repeat '-i fn1 -i fn2' for multiple inputs, or use a 'file-of-filenames', e.g. '-i foo.fofn'. (default: [])")), ToolInput(tag="in_no_polish", input_type=Boolean(optional=True), prefix="--no-polish", doc=InputDocumentation(doc="Skip polishing. (default: False)")), ToolInput(tag="in_no_phase", input_type=Boolean(optional=True), prefix="--no-phase", doc=InputDocumentation(doc="Skip phasing. (default: False)")), ToolInput(tag="in_no_purge_dups", input_type=Boolean(optional=True), prefix="--no-purge-dups", doc=InputDocumentation(doc="Skip purge_dups. (default: False)")), ToolInput(tag="in_genome_size", input_type=Int(optional=True), prefix="--genome-size", doc=InputDocumentation(doc="Genome size, required only for downsampling. (default: 0)")), ToolInput(tag="in_coverage", input_type=Int(optional=True), prefix="--coverage", doc=InputDocumentation(doc="Downsampled coverage, only if genome_size * coverage > 0. (default: 0)")), ToolInput(tag="in_advanced_opt", input_type=String(optional=True), prefix="--advanced-opt", doc=InputDocumentation(doc="Advanced options (quoted). (default: )")), ToolInput(tag="in_n_threads", input_type=Int(optional=True), prefix="--nthreads", doc=InputDocumentation(doc="(Required) Maximum number of threads to use per job. (Applies to both remote and local tasks.) (default: 0)")), ToolInput(tag="in_n_shards", input_type=Int(optional=True), prefix="--nshards", doc=InputDocumentation(doc="Maximum number of parallel tasks to split work into (though the number of simultaneous jobs could be much lower). (default: 40)")), ToolInput(tag="in_tmp_dir", input_type=Directory(optional=True), prefix="--tmp-dir", doc=InputDocumentation(doc="Temporary directory for some disk based operations like sorting. (default: /tmp)")), ToolInput(tag="in_verbose", input_type=Boolean(optional=True), prefix="--verbose", doc=InputDocumentation(doc="Extra logging for each task. (Show full env, e.g.) (default: False)")), ToolInput(tag="in_n_jobs", input_type=Int(optional=True), prefix="--njobs", doc=InputDocumentation(doc="(Required) Maximum number of simultaneous jobs, each running up to nthreads. (default: 0)")), ToolInput(tag="in_run_dir", input_type=Directory(optional=True), prefix="--run-dir", doc=InputDocumentation(doc="Directory in which to run snakemake. (default: ./RUN)")), ToolInput(tag="in_target", input_type=String(optional=True), prefix="--target", doc=InputDocumentation(doc="'finish' is implied, but you can use this to short-circuit. (default: )")), ToolInput(tag="in_unlock", input_type=Boolean(optional=True), prefix="--unlock", doc=InputDocumentation(doc="Pass '--unlock' to snakemake, in case snakemake crashed earlier. (default: False)")), ToolInput(tag="in_dry_run", input_type=Boolean(optional=True), prefix="--dry-run", doc=InputDocumentation(doc="Print the snakemake command and do a 'dry run' quickly. Very useful! (default: False)")), ToolInput(tag="in_only_print", input_type=Boolean(optional=True), prefix="--only-print", doc=InputDocumentation(doc="Do not actually run snakemake. Simply print the snakemake command and exit. (default: False)")), ToolInput(tag="in_cluster_args", input_type=String(optional=True), prefix="--cluster-args", doc=InputDocumentation(doc="(Required) Pass this along to snakemake, for conveniently running in a compute cluster. (default: )\n"))], outputs=[], container="quay.io/biocontainers/pbipa:1.3.2--hee625c5_0", version="v0.1.0")


if __name__ == "__main__":
    # or "cwl"
    Ipa_Dist_V0_1_0().translate("wdl")

