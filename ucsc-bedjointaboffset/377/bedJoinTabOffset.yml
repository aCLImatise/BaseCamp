!Command
positional:
- !Positional
  description: ''
  position: 0
  name: inTabFile
  optional: false
- !Positional
  description: ''
  position: 1
  name: inBedFile
  optional: false
- !Positional
  description: ''
  position: 2
  name: outBedFile
  optional: false
named:
- !Flag
  description: show debug messages
  synonyms:
  - -d
  - --debug
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: the index of the key field in the tab file that matches the key field
    in the bed file. default 0
  synonyms:
  - -t
  - --tabKeyField
  args: !SimpleFlagArg
    name: TABKEYFIELD
  optional: true
- !Flag
  description: the index of the key field in the bed file that matches the key field
    in the tab file. default 3
  synonyms:
  - -b
  - --bedKeyField
  args: !SimpleFlagArg
    name: BEDKEYFIELD
  optional: true
command:
- bedJoinTabOffset
parent:
subcommands: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "Usage: bedJoinTabOffset [options] inTabFile inBedFile outBedFile - given\
  \ a bed file and tab file where each have a column with matching values: first get\
  \ the value of column0, the offset and line length from inTabFile. Then go over\
  \ the bed file, use the name field and append its offset and length to the bed file\
  \ as two separate fields. Write the new bed file to outBed.\n\nOptions:\n  -h, --help\
  \            show this help message and exit\n  -d, --debug           show debug\
  \ messages\n  -t TABKEYFIELD, --tabKeyField=TABKEYFIELD\n                      \
  \  the index of the key field in the tab file that\n                        matches\
  \ the key field in the bed file. default 0\n  -b BEDKEYFIELD, --bedKeyField=BEDKEYFIELD\n\
  \                        the index of the key field in the bed file that\n     \
  \                   matches the key field in the tab file. default 3\n"
generated_using:
- --help
