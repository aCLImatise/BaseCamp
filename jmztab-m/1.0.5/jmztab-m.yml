!Command
positional: []
named:
- !Flag
  description: 'Example: -c /path/to/file.mztab. Check and validate the provided a
    mzTab file.'
  synonyms:
  - -c
  - --check
  args: !SimpleFlagArg
    name: arg
  optional: true
- !Flag
  description: 'Example: --fromJson. Will parse inFile as JSON and write mzTab representation
    to disk. Requires validation to be successful!'
  synonyms:
  - --fromJson
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Choose validation level (Info, Warn, Error), default level is Info!
  synonyms:
  - -l
  - --level
  args: !SimpleFlagArg
    name: arg
  optional: true
- !Flag
  description: 'Example: -m 1002. Print validation message detail information based
    on error code.'
  synonyms:
  - -m
  - --message
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Example: -o "output.txt". Record validation messages into outfile.
    If not set, print validation messages to stdout/stderr.'
  synonyms:
  - -o
  - --outFile
  args: !SimpleFlagArg
    name: arg
  optional: true
- !Flag
  description: 'Example: -s /path/to/mappingFile.xml. Use the provided mapping file
    for semantic validation. If no mapping file is provided, the default one will
    be used. Requires an active internet connection!'
  synonyms:
  - -s
  - --checkSemantic
  args: !SimpleFlagArg
    name: arg
  optional: true
- !Flag
  description: 'Example: --toJson. Will write a json representation of inFile to disk.
    Requires validation to be successful!'
  synonyms:
  - --toJson
  args: !EmptyFlagArg {}
  optional: true
command:
- jmztab-m
subcommands: []
help_flag: !Flag
  description: Print help message.
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag: !Flag
  description: Print version information.
  synonyms:
  - -v
  - --version
  args: !EmptyFlagArg {}
  optional: true
