!Command
positional:
- !Positional
  description: ''
  position: 0
  name: read1.fq
  optional: false
- !Positional
  description: ''
  position: 1
  name: read2.fq
  optional: false
- !Positional
  description: ''
  position: 2
  name: mate.fq
  optional: true
named:
- !Flag
  description: ''
  synonyms:
  - -o
  args: !SimpleFlagArg
    name: read.0q
  optional: true
command:
- fastq-join
parent:
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "fastq-join: invalid option -- '-'\nUnknown option `--'.\nUsage: fastq-join\
  \ [options] <read1.fq> <read2.fq> [mate.fq] -o <read.0q>\nVersion: 1.3.1\n\nJoins\
  \ two paired-end reads on the overlapping ends.\n\nOptions:\n\n-o FIL     See 'Output'\
  \ below\n-v C       Verifies that the 2 files probe id's match up to char C\n  \
  \          use ' ' (space) for Illumina reads\n-p N       N-percent maximum difference\
  \ (8)\n-m N       N-minimum overlap (6)\n-r FIL     Verbose stitch length report\n\
  -R         No reverse complement\n-x         Allow insert < read length\n\nOutput:\
  \ \n\n  You can supply 3 -o arguments, for un1, un2, join files, or one \nargument\
  \ as a file name template.  The suffix 'un1, un2, or join' is \nappended to the\
  \ file, or they replace a %-character if present.\n\n  If a 'mate' input file is\
  \ present (barcode read), then the files\n'un3' and 'join2' are also created.\n\n"
generated_using:
- --help
