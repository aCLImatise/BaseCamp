&id001 !Command
command:
- crisprtools
positional: []
named: []
parent:
subcommands:
- !Command
  command:
  - crisprtools
  - sanitise
  positional: []
  named:
  - !Flag
    description: 'Output file name, creates a sanitised copy of the input file  [default:
      sanitise input file inplace]'
    synonyms:
    - -o
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: Sanitise all features. Equivelent to -sdfc
    synonyms:
    - -a
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Sanitise the spacers
    synonyms:
    - -s
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Sanitise the direct repeats
    synonyms:
    - -d
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Sanitise the flanking sequences
    synonyms:
    - -f
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Sanitise the contigs
    synonyms:
    - -c
    args: !EmptyFlagArg {}
    optional: true
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    description: Print this handy help message
    synonyms:
    - -h
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "crass sanitise [-ohcsdfa] file.crispr\nOptions:\n-h                \
    \  Print this handy help message\n-o FILE             Output file name, creates\
    \ a sanitised copy of the input file  [default: sanitise input file inplace]\n\
    -a                  Sanitise all features. Equivelent to -sdfc\n-s           \
    \       Sanitise the spacers \n-d                  Sanitise the direct repeats\
    \ \n-f                  Sanitise the flanking sequences \n-c                 \
    \ Sanitise the contigs \n"
  generated_using: &id002
  - --help
- !Command
  command:
  - crisprtools
  - extract
  positional: []
  named:
  - !Flag
    description: 'output file directory  [default: .]'
    synonyms:
    - -o
    args: !SimpleFlagArg
      name: DIR
    optional: true
  - !Flag
    description: 'Give a custom prefix to each of the outputed files [default: ]'
    synonyms:
    - -O
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: "A comma separated list of group IDs that you would like to extract\
      \ data from.\nNote that only the group number is needed, do not use prefixes\
      \ like 'Group' or 'G', which\nare sometimes used in file names or in a .crispr\
      \ file"
    synonyms:
    - -g
    args: !OptionalFlagArg
      names:
      - INT
      - INT
      separator: ','
    optional: true
  - !Flag
    description: "[FILE] --spacer[=FILE]         Extract the spacers of the listed\
      \ group.  By default\nprints to stdout however an output file can also be given\
      \ as an optional arguement"
    synonyms:
    - -s
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "[FILE] --direct-repeat[=FILE]  Extract the direct repeats of the\
      \ listed group. By default\nprints to stdout however an output file can also\
      \ be given as an optional arguement"
    synonyms:
    - -d
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "[FILE] --flanker[=FILE]        Extract the flanking sequences of\
      \ the listed group. By default\nprints to stdout however an output file can\
      \ also be given as an optional arguement"
    synonyms:
    - -f
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Supress coverage information when printing spacers
    synonyms:
    - -C
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: 'Print a prefix to each of the headers [default: ]'
    synonyms:
    - -H
    - --header-prefix
    args: !SimpleFlagArg
      name: STRING
    optional: true
  - !Flag
    description: "Split the results into different files for each group.  File names\n\
      specified with -s -d -f will not be used in this mode but instead\noutput files\
      \ will take the form of PREFIX_GROUP_[type].fa\n"
    synonyms:
    - -x
    - --split-group
    args: !EmptyFlagArg {}
    optional: true
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    description: print this handy help message
    synonyms:
    - -h
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "crass extract [-ghxsdfCoOH] file.crispr\nOptions:\n-h\t\t\t\t\t    \
    \         print this handy help message\n-o DIR                           output\
    \ file directory  [default: .]\n-O STRING                        Give a custom\
    \ prefix to each of the outputed files [default: ]\n-g INT[,INT]             \
    \        A comma separated list of group IDs that you would like to extract data\
    \ from.\n\t\t\t\t\t             Note that only the group number is needed, do\
    \ not use prefixes like 'Group' or 'G', which\n\t\t\t\t\t             are sometimes\
    \ used in file names or in a .crispr file\n-s[FILE] --spacer[=FILE]         Extract\
    \ the spacers of the listed group.  By default\n                             \
    \    prints to stdout however an output file can also be given as an optional\
    \ arguement\n-d[FILE] --direct-repeat[=FILE]\t Extract the direct repeats of the\
    \ listed group. By default\n                                 prints to stdout\
    \ however an output file can also be given as an optional arguement\n-f[FILE]\
    \ --flanker[=FILE]        Extract the flanking sequences of the listed group.\
    \ By default\n                                 prints to stdout however an output\
    \ file can also be given as an optional arguement\n-C                        \
    \       Supress coverage information when printing spacers\n-H STRING --header-prefix\
    \ STRING Print a prefix to each of the headers [default: ]\n-x --split-group \
    \                Split the results into different files for each group.  File\
    \ names\n                                 specified with -s -d -f will not be\
    \ used in this mode but instead\n                                 output files\
    \ will take the form of PREFIX_GROUP_[type].fa\n"
  generated_using: *id002
- !Command
  command:
  - crisprtools
  - filter
  positional: []
  named:
  - !Flag
    description: 'Output file name, creates a filtered copy of the input file  [default:
      modify input file inplace]'
    synonyms:
    - -o
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: Filter based on the number of spacers the spacers
    synonyms:
    - -s
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: Filter based on the direct repeats
    synonyms:
    - -d
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: Filter based on the flanking sequences
    synonyms:
    - -f
    args: !SimpleFlagArg
      name: INT
    optional: true
  - !Flag
    description: Filter based on spacer coverage
    synonyms:
    - -C
    args: !SimpleFlagArg
      name: INT
    optional: true
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    description: Print this handy help message
    synonyms:
    - -h
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "crass filter [-ohsdf] file.crispr\nOptions:\n-h                  Print\
    \ this handy help message\n-o FILE             Output file name, creates a filtered\
    \ copy of the input file  [default: modify input file inplace]\n-s INT       \
    \       Filter based on the number of spacers the spacers \n-d INT           \
    \   Filter based on the direct repeats \n-f INT              Filter based on the\
    \ flanking sequences \n-C INT              Filter based on spacer coverage\n"
  generated_using: *id002
- !Command
  command:
  - crisprtools
  - stat
  positional: []
  named:
  - !Flag
    description: print out aggregate summary, can be combined with -t -p
    synonyms:
    - -a
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: print out column headers in tabular output
    synonyms:
    - -H
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: a comma separated list of group IDs that you would like to see stats
      for.
    synonyms:
    - -g
    args: !OptionalFlagArg
      names:
      - INT
      - n
      separator: ','
    optional: true
  - !Flag
    description: pretty print
    synonyms:
    - -p
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: "separator string for tabular output [default: '     ']"
    synonyms:
    - -s
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: tabular output
    synonyms:
    - -t
    args: !EmptyFlagArg {}
    optional: true
  - !Flag
    description: Create a detailed report on the spacer coverage for each group
    synonyms:
    - --coverage
    args: !EmptyFlagArg {}
    optional: true
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    description: print this handy help message
    synonyms:
    - -h
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "crass stat [-aghpst] [--header] file.crispr\nOptions:\n-a          \
    \        print out aggregate summary, can be combined with -t -p\n-h\t\t\t\t\t\
    print this handy help message\n-H                  print out column headers in\
    \ tabular output\n-g INT[,n]          a comma separated list of group IDs that\
    \ you would like to see stats for.\n-p                  pretty print\n-s     \
    \             separator string for tabular output [default: '\t']\n-t        \
    \          tabular output\n--coverage          Create a detailed report on the\
    \ spacer coverage for each group\n"
  generated_using: *id002
- !Command
  command:
  - crisprtools
  - rm
  positional: []
  named:
  - !Flag
    description: a comma separated list of group IDs that you would like to remove
    synonyms:
    - -g
    args: !OptionalFlagArg
      names:
      - INT
      - n
      separator: ','
    optional: true
  - !Flag
    description: output file name. Default behaviour changes file inplace
    synonyms:
    - -o
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: Remove associated files
    synonyms:
    - -r
    args: !EmptyFlagArg {}
    optional: true
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    description: print this handy help message
    synonyms:
    - -h
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "crass rm [-hor] -g <groups> file.crispr\nOptions:\n-h\t\t\t\t\tprint\
    \ this handy help message\n-g INT[,n]          a comma separated list of group\
    \ IDs that you would like to remove\n-o FILE             output file name. Default\
    \ behaviour changes file inplace\n-r                  Remove associated files\n"
  generated_using: *id002
- !Command
  command:
  - crisprtools
  - merge
  positional: []
  named:
  - !Flag
    description: 'output file  [default: crisprtools_merged.crispr]'
    synonyms:
    - -o
    args: !SimpleFlagArg
      name: FILE
    optional: true
  - !Flag
    description: sanitise the names so that the resulting output file contains completely
      unique group IDs
    synonyms:
    - -s
    args: !EmptyFlagArg {}
    optional: true
  parent: *id001
  subcommands: []
  usage: []
  help_flag: !Flag
    description: print this handy help message
    synonyms:
    - -h
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "crass merge [-hso] file1.crispr file2.crispr [1,n]\nOptions:\n-h\t\t\
    \t\t\tprint this handy help message\n-o FILE             output file  [default:\
    \ crisprtools_merged.crispr]\n-s\t\t\t\t\tsanitise the names so that the resulting\
    \ output file contains completely unique group IDs\n"
  generated_using: *id002
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "crass (1.0.1)\ncrass is a set of smal utilities for manipulating .crispr\
  \ files\nThe .crispr file specification is a standard xml based format for describing\
  \ CRISPRs\nType crass <subcommand> -h for help on each utility\nUsage:\tcrass <subcommand>\
  \ [options]\n\nsubcommand:  merge       combine multiple files\n             help\
  \        display this message and exit\n             extract     extract sequences\
  \ in fasta\n             filter      make new files based on parameters\n      \
  \       sanitise    change the IDs of elements\n             stat        show statistics\
  \ on some or all CRISPRs\n             rm          remove a group from a .crispr\
  \ file\n"
generated_using: *id002
