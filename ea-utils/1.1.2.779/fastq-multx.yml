!Command
positional: []
named: []
command:
- fastq-multx
parent:
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "fastq-multx: invalid option -- '-'\nUnknown option `--'.\nUsage: fastq-multx\
  \ [-g|-l|-B] <barcodes.fil> <read1.fq> -o r1.%.fq [mate.fq -o r2.%.fq] ...\nVersion:\
  \ 1.02.772\n\nOutput files must contain a '%' sign which is replaced with the barcode\
  \ id in the barcodes file.\nOutput file can be n/a to discard the corresponding\
  \ data (use this for the barcode read)\n\nBarcodes file (-B) looks like this:\n\n\
  <id1> <sequence1>\n<id2> <sequence2> ...\n\nDefault is to guess the -bol or -eol\
  \ based on clear stats.\n\nIf -g is used, then it's parameter is an index lane,\
  \ and frequently occuring sequences are used.\n\nIf -l is used then all barcodes\
  \ in the file are tried, and the *group* with the *most* matches is chosen.\n\n\
  Grouped barcodes file (-l or -L) looks like this:\n\n<id1> <sequence1> <group1>\n\
  <id1> <sequence1> <group1>\n<id2> <sequence2> <group2>...\n\nMated reads, if supplied,\
  \ are kept in-sync\n\nOptions:\n\n-o FIL1     Output files (one per input, required)\n\
  -g SEQFIL   Determine barcodes from the indexed read SEQFIL\n-l BCFIL    Determine\
  \ barcodes from any read, using BCFIL as a master list\n-L BCFIL    Determine barcodes\
  \ from <read1.fq>, using BCFIL as a master list\n-B BCFIL    Use barcodes from BCFIL,\
  \ no determination step, codes in <read1.fq>\n-H          Use barcodes from illumina's\
  \ header, instead of a read\n-b          Force beginning of line (5') for barcode\
  \ matching\n-e          Force end of line (3') for batcode matching\n-t NUM    \
  \  Divide threshold for auto-determine by factor NUM (1), > 1 = more sensitive\n\
  -G NAME     Use group(s) matching NAME only\n-x          Don't trim barcodes off\
  \ before writing out destination\n-n          Don't execute, just print likely barcode\
  \ list\n-v C        Verify that mated id's match up to character C (Use ' ' for\
  \ illumina)\n-m N        Allow up to N mismatches, as long as they are unique (1)\n\
  -d N        Require a minimum distance of N between the best and next best (2)\n\
  -q N        Require a minimum phred quality of N to accept a barcode base (0)\n"
generated_using:
- --help
