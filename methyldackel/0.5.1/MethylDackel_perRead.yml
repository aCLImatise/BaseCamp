&id001 !Command
positional:
- !Positional
  description: Reference genome in fasta format. This must be indexed with samtools
    faidx
  position: 0
  name: ref.fa
  optional: false
- !Positional
  description: An input BAM or CRAM file. This MUST be sorted and should be indexed.
  position: 1
  name: input
  optional: false
named: []
command:
- MethylDackel
- perRead
parent: !Command
  positional: []
  named: []
  command:
  - MethylDackel
  parent:
  subcommands:
  - *id001
  help_flag:
  usage_flag:
  version_flag:
  help_text: "MethylDackel: A tool for processing bisulfite sequencing alignments.\n\
    Version: 0.5.1 (using HTSlib version 1.10.2)\nUsage: MethylDackel <command> [options]\n\
    \nCommands:\n    mbias    Determine the position-dependent methylation bias in\
    \ a dataset,\n             producing diagnostic SVG images.\n    extract  Extract\
    \ methylation metrics from an alignment file in BAM/CRAM\n             format.\n\
    \    mergeContext   Combine single Cytosine metrics from 'MethylDackel extract'\
    \ into\n             per-CpG/CHG metrics.\n    perRead  Generate a per-read methylation\
    \ summary.\n"
  generated_using: &id002
  - --help
subcommands: []
help_flag:
usage_flag:
version_flag: !Flag
  description: Print version and quit
  synonyms:
  - --version
  args: !EmptyFlagArg {}
  optional: true
help_text: "\nUsage: MethylDackel perRead [OPTIONS] <ref.fa> <input>\n\nThis program\
  \ will compute the average CpG methylation level of a given read.\nThe output is\
  \ a tab-separated file with the following columns:\n - read name\n - chromosome\n\
  \ - position\n - CpG methylation (%)\n - number of informative bases\n\nArguments:\n\
  \  ref.fa    Reference genome in fasta format. This must be indexed with\n     \
  \       samtools faidx\n  input     An input BAM or CRAM file. This MUST be sorted\
  \ and should be indexed.\n\nOptions:\n -q INT     Minimum MAPQ threshold to include\
  \ an alignment (default 10)\n -p INT     Minimum Phred threshold to include a base\
  \ (default 5). This must             be >0.\n -r STR     Region string in which\
  \ to extract methylation\n -l FILE    A BED file listing regions for inclusion.\n\
  \ --keepStrand  If a BED file is specified, then this option will cause the\n  \
  \          strand column (column 6) to be utilized, if present. Thus, if\n     \
  \       a region has a '+' in this column, then only metrics from the\n        \
  \    top strand will be output. Note that the -r option can be used\n          \
  \  to limit the regions of -l.\n -o STR     Output file name [stdout]\n -F, --ignoreFlags\
  \    By default, all reads are output. If you would like to\n            ignore\
  \ certain classes of reads then simply give a value for their\n            flags\
  \ here. Note that an alignment will be logically anded with this\n            flag,\
  \ so a single bit overlap will lead to exclusion. The default\n            for this\
  \ is 0.\n -R, --requireFlags   Require each alignment to have all bits in this value\n\
  \            present, or else the alignment is ignored. This is equivalent to the\n\
  \            -f option in samtools. The default is 0, which includes all\n     \
  \       alignments.\n -@ INT     The number of threads to use, the default 1\n --chunkSize\
  \ INT  The size of the genome processed by a single thread at a time.\n        \
  \    The default is 1000000 bases. This value MUST be at least 1.\n --version  Print\
  \ version and quit\n\nNote that this program will produce incorrect values for alignments\
  \ spanning\nmore than 10kb.\n"
generated_using: *id002
