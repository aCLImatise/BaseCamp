!Command
positional: []
named: []
command:
- asntool
parent:
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "\nAsnTool 7   arguments:\n\n  -m  ASN.1 Module File [File In]\n  -f  ASN.1\
  \ Module File [File Out]  Optional\n  -X  XML DTD File\n\t(\"m\" to print each module\
  \ to a separate file) [File Out]  Optional\n  -T  ASN.1 Tree Dump File [File Out]\
  \  Optional\n  -v  Print Value File [File In]  Optional\n  -p  Print Value File\
  \ [File Out]  Optional\n  -x  XML Data File [File Out]  Optional\n  -d  Binary Value\
  \ File (type required) [File In]  Optional\n  -t  Binary Value Type [String]  Optional\n\
  \  -e  Binary Value File [File Out]  Optional\n  -o  Header File [File Out]  Optional\n\
  \  -l  Loader File [File Out]  Optional\n  -b  Buffer Size [Integer]  Optional\n\
  \    default = 1024\n    range from 512 to 10000\n  -w  Word length maximum for\
  \ #defines [Integer]  Optional\n    default = 31\n    range from 31 to 128\n  -F\
  \  Fix Non-Printing Characters\n     0 - Replace with #, post ERROR\n     1 - Replace\
  \ with # silently\n     2 - Pass through silently\n     3 - Replace with #, post\
  \ FATAL\n [Integer]  Optional\n    default = 0\n    range from 0 to 3\n  -N  UTF8\
  \ Input Conversion\n     0 - Convert silently\n     1 - Convert, post WARNING first\
  \ time\n     2 - Convert, post WARNING each time\n     3 - Do not convert\n [Integer]\
  \  Optional\n    default = 0\n    range from 0 to 3\n  -U  UTF8 Output Conversion\n\
  \     0 - Convert silently\n     1 - Convert, post WARNING first time\n     2 -\
  \ Convert, post WARNING each time\n     3 - Do not convert\n [Integer]  Optional\n\
  \    default = 0\n    range from 0 to 3\n  -G  Generate object loader .c and .h\
  \ files, \n\tif used, see below parameters: [T/F]  Optional\n    default = F\n \
  \ -M  ASN.1 module filenames, comma separated used for external refs from the 'm',\n\
  \     but no other action taken [File In]  Optional\n  -B  Base for filename, without\
  \ extensions, for generated objects and code [File Out]  Optional\n  -D  During\
  \ code generation, debugging level\n     0 - No debugging\n     1 - Shallow debugging\n\
  \     2 - Deep\n [Integer]  Optional\n    default = 0\n    range from 0 to 9\n \
  \ -S  Debugging filename [File Out]  Optional\n    default = stderr\n  -I  In generated\
  \ .c, add #include to this filename [String]  Optional\n  -Z  Bit twiddle for optional\
  \ zero value base slots [T/F]  Optional\n    default = F\n  -K  In generated .c,\
  \ forces name of #included asn header [String]  Optional\n  -J  Register type with\
  \ object manager [String]  Optional\n  -L  Label for registered type [String]  Optional\n\
  \  -P  XML module prefix for DOCTYPE [String]  Optional\n    default = \n  -V  Force\
  \ choice to use structure instead of ValNodePtr [T/F]  Optional\n    default = F\n\
  \  -Q  Use quoted syntax form for generated include files [T/F]  Optional\n    default\
  \ = F\n\n"
generated_using:
- --help
