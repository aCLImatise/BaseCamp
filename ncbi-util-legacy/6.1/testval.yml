!Command
positional: []
named: []
command:
- testval
parent:
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "\ntestval   arguments:\n\n  -i  Filename for asn.1 input [File In]  Optional\n\
  \    default = stdin\n  -e  Input is a Seq-entry [T/F]  Optional\n    default =\
  \ F\n  -s  Input is a Seq-submit [T/F]  Optional\n    default = F\n  -b  Input asnfile\
  \ in binary mode [T/F]  Optional\n    default = F\n  -x  Filename for error messages\
  \ [File Out]  Optional\n    default = stderr\n  -o  Filename for asn.1 output [File\
  \ Out]  Optional\n  -t  Output asnfile in binary mode [T/F]  Optional\n    default\
  \ = F\n  -r  Severity of error for count in return code [Integer]\n    default =\
  \ 4\n    range from 0 to 4\n  -c  Continue on ASN.1 error? [T/F]  Optional\n   \
  \ default = F\n  -p  Patch invalid sequence residues? [T/F]  Optional\n    default\
  \ = F\n  -q  Lowest severity of error to show [Integer]\n    default = 3\n    range\
  \ from 0 to 4\n  -l  ASN.1 spec level to filter [Integer]\n    default = 0\n   \
  \ range from 0 to 3\n  -d  Use SeqMgr indexing? [T/F]  Optional\n    default = T\n\
  \  -a  Validate alignments? [T/F]  Optional\n    default = F\n  -j  Require ISO-JTA?\
  \ [T/F]  Optional\n    default = F\n\n"
generated_using:
- --help
