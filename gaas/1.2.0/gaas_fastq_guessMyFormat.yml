!Command
positional: []
named:
- !Flag
  description: 'STRING: Input fastq file that will be read.'
  synonyms:
  - -i
  - --fq
  - --fastq
  args: !SimpleFlagArg
    name: or
  optional: true
- !Flag
  description: Advanced mode. Can be used to find exactly which scoring system it
    is.
  synonyms:
  - -a
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Set the max search time in seconds to be used when using -a. Default
    is 60.
  synonyms:
  - -t
  args: !EmptyFlagArg {}
  optional: true
command:
- gaas_fastq_guessMyFormat.pl
parent:
subcommands: []
help_flag: !Flag
  description: Display this helpful text.
  synonyms:
  - --help
  - -h
  args: !SimpleFlagArg
    name: or
  optional: true
usage_flag:
version_flag:
help_text: "at least 1 parameter is mandatory: -i\n    Used to detect the format of\
  \ a fastq file. It has 2 different modes,\n    normal and advanced.\n\n    In the\
  \ normal mode, it can only differentiate between\n    Sanger/Illumina1.8+ and Solexa/Illumina1.3+/Illumina1.5+.\n\
  \n    In the advanced mode, it will try to pinpoint exactly which scoring\n    system\
  \ is used. It will look at all quality scores until either\n\n    * There is only\
  \ one scoring system that matches * It has been running\n    for more than a specified\
  \ time * It reaches the end of the file without\n    either finding a single matching\
  \ scoring syste, or running out of time\n    before reaching the end of the file.\n\
  \n    To run the program in normal mode, give it only the name of the fastq\n  \
  \  file:\n\n    perl scriptname.pl <infile> Ex. perl scriptname.pl myReads.fq\n\n\
  \    To run it in advanced mode with default timout of 60 seconds, specify\n   \
  \ -a:\n\n    perl scriptname.pl <infile> -a Ex. perl scriptname.pl myReads.fq -a\n\
  \n    To run it in advanced mode with a custom timeout, specify -a and -t:\n\n \
  \   perl scriptname.pl <infile> -a -t <max seconds to search> Ex. perl\n    scriptname.pl\
  \ myReads.fq -a -t 600\n\n    The output from the program reports the interval in\
  \ which qualities were\n    observed (raw ascii numbers, not adjusting for any offsets\
  \ or phred\n    etc), and the scoring systems matcing these values.\n\n    Ex.\n\
  \n    Time limit reached, observed qualities in range [37,67]. Possible\n    matches:\
  \ Illumina 1.8+;Sanger\n\n    Can easily be copy/pasted into any other script and\
  \ altered to do other\n    things than die when it has determined the format.\n\n\
  \    Pseudo code\n\n    * Open the fastq file * Look at each quality ASCII char\
  \ and convert it\n    to a number * Depending on if that number is above or below\
  \ certain\n    thresholds, determine the format.\n\nUsage:\n        gaas_fastq_guessMyFormat.pl\
  \ -i <input file> [-a -t <max seconds to search>]\n        gaas_fastq_guessMyFormat.pl\
  \ --help\n\nOptions:\n    -i, --fq or --fastq\n            STRING: Input fastq file\
  \ that will be read.\n\n    -a      Advanced mode. Can be used to find exactly which\
  \ scoring system\n            it is.\n\n    -t      Set the max search time in seconds\
  \ to be used when using -a.\n            Default is 60.\n\n    --help or -h\n  \
  \          Display this helpful text.\n\n"
generated_using: []
