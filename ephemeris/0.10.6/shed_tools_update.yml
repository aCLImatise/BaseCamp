&id002 !Command
positional: []
named:
- !Flag
  description: Tools file to use (see tool_list.yaml.sample)
  synonyms:
  - -t
  - --toolsfile
  args: !SimpleFlagArg
    name: TOOL_LIST_FILE
  optional: true
- !Flag
  description: Install tool represented by yaml string
  synonyms:
  - -y
  - --yaml_tool
  args: !SimpleFlagArg
    name: TOOL_YAML
  optional: true
- !Flag
  description: The name of the tool to install (only applicable if the tools file
    is not provided).
  synonyms:
  - --name
  args: !SimpleFlagArg
    name: NAME
  optional: true
- !Flag
  description: The owner of the tool to install (only applicable if the tools file
    is not provided).
  synonyms:
  - --owner
  args: !SimpleFlagArg
    name: OWNER
  optional: true
- !Flag
  description: '[REVISIONS [REVISIONS ...]] The revisions of the tool repository that
    will be installed. All revisions must be specified after this flag by a space.Example:
    --revisions 0a5c7992b1ac f048033da666(Only applicable if the tools file is not
    provided).'
  synonyms:
  - --revisions
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: The Tool Shed URL where to install the tool from. This is applicable
    only if the tool info is provided as an option vs. in the tools file.
  synonyms:
  - --toolshed
  args: !SimpleFlagArg
    name: TOOL_SHED_URL
  optional: true
- !Flag
  description: Turn on installation of tool dependencies using classic toolshed packages.
    Can be overwritten on a per-tool basis in the tools file.
  synonyms:
  - --install_tool_dependencies
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Skip installing tool dependencies through resolver (e.g. conda). Will
    be ignored on galaxy releases older than 16.07. Can be overwritten on a per-tool
    basis in the tools file
  synonyms:
  - --skip_install_resolver_dependencies
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Skip installing the repository dependencies.
  synonyms:
  - --skip_install_repository_dependencies
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Run tool tests on install tools, requires Galaxy 18.05 or newer.
  synonyms:
  - --test
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: If testing tools during install, also run tool tests on repositories
    already installed (i.e. skipped repositories).
  synonyms:
  - --test_existing
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: If testing tools, record tool test output to specified file. This file
    can be turned into reports with ``planemo test_reports <output.json>``.
  synonyms:
  - --test_json
  args: !SimpleFlagArg
    name: TEST_JSON
  optional: true
- !Flag
  description: If testing tools, a user is needed to execute the tests. This can be
    different the --api_key which is assumed to be an admin key. If --api_key is a
    valid user (e.g. it is not a master API key) this does not need to be specified
    and --api_key will be reused.
  synonyms:
  - --test_user_api_key
  args: !SimpleFlagArg
    name: TEST_USER
  optional: true
- !Flag
  description: If testing tools, a user is needed to execute the tests. If --api_key
    is a master api key (i.e. not tied to a real user) and --test_user_api_key isn't
    specified, this user email will be used. This user will be created if needed.
  synonyms:
  - --test_user
  args: !SimpleFlagArg
    name: TEST_USER
  optional: true
- !Flag
  description: Specify the maximum number of tests that will be run in parallel.
  synonyms:
  - --parallel_tests
  args: !SimpleFlagArg
    name: PARALLEL_TESTS
  optional: true
- !Flag
  description: Increase output verbosity.
  synonyms:
  - -v
  - --verbose
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: Where the log file should be stored. Default is a file in your system's
    temp folder
  synonyms:
  - --log_file
  args: !SimpleFlagArg
    name: LOG_FILE
  optional: true
- !Flag
  description: Target Galaxy instance URL/IP address
  synonyms:
  - -g
  - --galaxy
  args: !SimpleFlagArg
    name: GALAXY
  optional: true
- !Flag
  description: Galaxy user email address
  synonyms:
  - -u
  - --user
  args: !SimpleFlagArg
    name: USER
  optional: true
- !Flag
  description: Password for the Galaxy user
  synonyms:
  - -p
  - --password
  args: !SimpleFlagArg
    name: PASSWORD
  optional: true
- !Flag
  description: Galaxy admin user API key (required if not defined in the tools list
    file)
  synonyms:
  - -a
  - --api_key
  args: !SimpleFlagArg
    name: API_KEY
  optional: true
command:
- shed-tools
- update
parent: &id001 !Command
  positional: []
  named: []
  command:
  - shed-tools
  parent:
  subcommands:
  - !Command
    positional: []
    named:
    - !Flag
      description: Tools file to use (see tool_list.yaml.sample)
      synonyms:
      - -t
      - --toolsfile
      args: !SimpleFlagArg
        name: TOOL_LIST_FILE
      optional: true
    - !Flag
      description: Install tool represented by yaml string
      synonyms:
      - -y
      - --yaml_tool
      args: !SimpleFlagArg
        name: TOOL_YAML
      optional: true
    - !Flag
      description: The name of the tool to install (only applicable if the tools file
        is not provided).
      synonyms:
      - --name
      args: !SimpleFlagArg
        name: NAME
      optional: true
    - !Flag
      description: The owner of the tool to install (only applicable if the tools
        file is not provided).
      synonyms:
      - --owner
      args: !SimpleFlagArg
        name: OWNER
      optional: true
    - !Flag
      description: '[REVISIONS [REVISIONS ...]] The revisions of the tool repository
        that will be installed. All revisions must be specified after this flag by
        a space.Example: --revisions 0a5c7992b1ac f048033da666(Only applicable if
        the tools file is not provided).'
      synonyms:
      - --revisions
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: The Tool Shed URL where to install the tool from. This is applicable
        only if the tool info is provided as an option vs. in the tools file.
      synonyms:
      - --toolshed
      args: !SimpleFlagArg
        name: TOOL_SHED_URL
      optional: true
    - !Flag
      description: Turn on installation of tool dependencies using classic toolshed
        packages. Can be overwritten on a per-tool basis in the tools file.
      synonyms:
      - --install_tool_dependencies
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Skip installing tool dependencies through resolver (e.g. conda).
        Will be ignored on galaxy releases older than 16.07. Can be overwritten on
        a per-tool basis in the tools file
      synonyms:
      - --skip_install_resolver_dependencies
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Skip installing the repository dependencies.
      synonyms:
      - --skip_install_repository_dependencies
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Run tool tests on install tools, requires Galaxy 18.05 or newer.
      synonyms:
      - --test
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: If testing tools during install, also run tool tests on repositories
        already installed (i.e. skipped repositories).
      synonyms:
      - --test_existing
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: If testing tools, record tool test output to specified file. This
        file can be turned into reports with ``planemo test_reports <output.json>``.
      synonyms:
      - --test_json
      args: !SimpleFlagArg
        name: TEST_JSON
      optional: true
    - !Flag
      description: If testing tools, a user is needed to execute the tests. This can
        be different the --api_key which is assumed to be an admin key. If --api_key
        is a valid user (e.g. it is not a master API key) this does not need to be
        specified and --api_key will be reused.
      synonyms:
      - --test_user_api_key
      args: !SimpleFlagArg
        name: TEST_USER
      optional: true
    - !Flag
      description: If testing tools, a user is needed to execute the tests. If --api_key
        is a master api key (i.e. not tied to a real user) and --test_user_api_key
        isn't specified, this user email will be used. This user will be created if
        needed.
      synonyms:
      - --test_user
      args: !SimpleFlagArg
        name: TEST_USER
      optional: true
    - !Flag
      description: Specify the maximum number of tests that will be run in parallel.
      synonyms:
      - --parallel_tests
      args: !SimpleFlagArg
        name: PARALLEL_TESTS
      optional: true
    - !Flag
      description: Galaxy tool panel section ID where the tool will be installed (the
        section must exist in Galaxy; only applicable if the tools file is not provided).
      synonyms:
      - --section
      args: !SimpleFlagArg
        name: TOOL_PANEL_SECTION_ID
      optional: true
    - !Flag
      description: Galaxy tool panel section label where tool will be installed (if
        the section does not exist, it will be created; only applicable if the tools
        file is not provided).
      synonyms:
      - --section_label
      args: !SimpleFlagArg
        name: TOOL_PANEL_SECTION_LABEL
      optional: true
    - !Flag
      description: Will override the revisions in the tools file and always install
        the latest revision.
      synonyms:
      - --latest
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Increase output verbosity.
      synonyms:
      - -v
      - --verbose
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Where the log file should be stored. Default is a file in your
        system's temp folder
      synonyms:
      - --log_file
      args: !SimpleFlagArg
        name: LOG_FILE
      optional: true
    - !Flag
      description: Target Galaxy instance URL/IP address
      synonyms:
      - -g
      - --galaxy
      args: !SimpleFlagArg
        name: GALAXY
      optional: true
    - !Flag
      description: Galaxy user email address
      synonyms:
      - -u
      - --user
      args: !SimpleFlagArg
        name: USER
      optional: true
    - !Flag
      description: Password for the Galaxy user
      synonyms:
      - -p
      - --password
      args: !SimpleFlagArg
        name: PASSWORD
      optional: true
    - !Flag
      description: Galaxy admin user API key (required if not defined in the tools
        list file)
      synonyms:
      - -a
      - --api_key
      args: !SimpleFlagArg
        name: API_KEY
      optional: true
    command:
    - shed-tools
    - install
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: shed-tools install [-h] [-v] [--log_file LOG_FILE] [-g GALAXY]\n\
      \                          [-u USER] [-p PASSWORD] [-a API_KEY]\n          \
      \                [-t TOOL_LIST_FILE] [-y TOOL_YAML] [--name NAME]\n        \
      \                  [--owner OWNER]\n                          [--revisions [REVISIONS\
      \ [REVISIONS ...]]]\n                          [--toolshed TOOL_SHED_URL]\n\
      \                          [--install_tool_dependencies]\n                 \
      \         [--skip_install_resolver_dependencies]\n                         \
      \ [--skip_install_repository_dependencies] [--test]\n                      \
      \    [--test_existing] [--test_json TEST_JSON]\n                          [--test_user_api_key\
      \ TEST_USER]\n                          [--test_user TEST_USER]\n          \
      \                [--parallel_tests PARALLEL_TESTS]\n                       \
      \   [--section TOOL_PANEL_SECTION_ID]\n                          [--section_label\
      \ TOOL_PANEL_SECTION_LABEL]\n                          [--latest]\n\noptional\
      \ arguments:\n  -h, --help            show this help message and exit\n  -t\
      \ TOOL_LIST_FILE, --toolsfile TOOL_LIST_FILE\n                        Tools\
      \ file to use (see tool_list.yaml.sample)\n  -y TOOL_YAML, --yaml_tool TOOL_YAML\n\
      \                        Install tool represented by yaml string\n  --name NAME\
      \           The name of the tool to install (only applicable if\n          \
      \              the tools file is not provided).\n  --owner OWNER         The\
      \ owner of the tool to install (only applicable if\n                       \
      \ the tools file is not provided).\n  --revisions [REVISIONS [REVISIONS ...]]\n\
      \                        The revisions of the tool repository that will be\n\
      \                        installed. All revisions must be specified after this\n\
      \                        flag by a space.Example: --revisions 0a5c7992b1ac\n\
      \                        f048033da666(Only applicable if the tools file is not\n\
      \                        provided).\n  --toolshed TOOL_SHED_URL\n          \
      \              The Tool Shed URL where to install the tool from. This\n    \
      \                    is applicable only if the tool info is provided as an\n\
      \                        option vs. in the tools file.\n  --install_tool_dependencies\n\
      \                        Turn on installation of tool dependencies using\n \
      \                       classic toolshed packages. Can be overwritten on a\n\
      \                        per-tool basis in the tools file.\n  --skip_install_resolver_dependencies\n\
      \                        Skip installing tool dependencies through resolver\n\
      \                        (e.g. conda). Will be ignored on galaxy releases older\n\
      \                        than 16.07. Can be overwritten on a per-tool basis\
      \ in\n                        the tools file\n  --skip_install_repository_dependencies\n\
      \                        Skip installing the repository dependencies.\n  --test\
      \                Run tool tests on install tools, requires Galaxy 18.05\n  \
      \                      or newer.\n  --test_existing       If testing tools during\
      \ install, also run tool tests\n                        on repositories already\
      \ installed (i.e. skipped\n                        repositories).\n  --test_json\
      \ TEST_JSON\n                        If testing tools, record tool test output\
      \ to specified\n                        file. This file can be turned into reports\
      \ with\n                        ``planemo test_reports <output.json>``.\n  --test_user_api_key\
      \ TEST_USER\n                        If testing tools, a user is needed to execute\
      \ the\n                        tests. This can be different the --api_key which\
      \ is\n                        assumed to be an admin key. If --api_key is a\
      \ valid\n                        user (e.g. it is not a master API key) this\
      \ does not\n                        need to be specified and --api_key will\
      \ be reused.\n  --test_user TEST_USER\n                        If testing tools,\
      \ a user is needed to execute the\n                        tests. If --api_key\
      \ is a master api key (i.e. not tied\n                        to a real user)\
      \ and --test_user_api_key isn't\n                        specified, this user\
      \ email will be used. This user\n                        will be created if\
      \ needed.\n  --parallel_tests PARALLEL_TESTS\n                        Specify\
      \ the maximum number of tests that will be run\n                        in parallel.\n\
      \  --section TOOL_PANEL_SECTION_ID\n                        Galaxy tool panel\
      \ section ID where the tool will be\n                        installed (the\
      \ section must exist in Galaxy; only\n                        applicable if\
      \ the tools file is not provided).\n  --section_label TOOL_PANEL_SECTION_LABEL\n\
      \                        Galaxy tool panel section label where tool will be\n\
      \                        installed (if the section does not exist, it will be\n\
      \                        created; only applicable if the tools file is not\n\
      \                        provided).\n  --latest              Will override the\
      \ revisions in the tools file and\n                        always install the\
      \ latest revision.\n\nGeneral options:\n  -v, --verbose         Increase output\
      \ verbosity.\n  --log_file LOG_FILE   Where the log file should be stored. Default\
      \ is a file\n                        in your system's temp folder\n\nGalaxy\
      \ connection:\n  -g GALAXY, --galaxy GALAXY\n                        Target\
      \ Galaxy instance URL/IP address\n  -u USER, --user USER  Galaxy user email\
      \ address\n  -p PASSWORD, --password PASSWORD\n                        Password\
      \ for the Galaxy user\n  -a API_KEY, --api_key API_KEY\n                   \
      \     Galaxy admin user API key (required if not defined in\n              \
      \          the tools list file)\n"
    generated_using: &id003
    - --help
  - *id002
  - !Command
    positional: []
    named:
    - !Flag
      description: Tools file to use (see tool_list.yaml.sample)
      synonyms:
      - -t
      - --toolsfile
      args: !SimpleFlagArg
        name: TOOL_LIST_FILE
      optional: true
    - !Flag
      description: Install tool represented by yaml string
      synonyms:
      - -y
      - --yaml_tool
      args: !SimpleFlagArg
        name: TOOL_YAML
      optional: true
    - !Flag
      description: The name of the tool to install (only applicable if the tools file
        is not provided).
      synonyms:
      - --name
      args: !SimpleFlagArg
        name: NAME
      optional: true
    - !Flag
      description: The owner of the tool to install (only applicable if the tools
        file is not provided).
      synonyms:
      - --owner
      args: !SimpleFlagArg
        name: OWNER
      optional: true
    - !Flag
      description: '[REVISIONS [REVISIONS ...]] The revisions of the tool repository
        that will be installed. All revisions must be specified after this flag by
        a space.Example: --revisions 0a5c7992b1ac f048033da666(Only applicable if
        the tools file is not provided).'
      synonyms:
      - --revisions
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: The Tool Shed URL where to install the tool from. This is applicable
        only if the tool info is provided as an option vs. in the tools file.
      synonyms:
      - --toolshed
      args: !SimpleFlagArg
        name: TOOL_SHED_URL
      optional: true
    - !Flag
      description: Record tool test output to specified file. This file can be turned
        into reports with ``planemo test_reports <output.json>``.
      synonyms:
      - --test_json
      args: !SimpleFlagArg
        name: TEST_JSON
      optional: true
    - !Flag
      description: A user is needed to execute the tests. This can be different the
        --api_key which is assumed to be an admin key. If --api_key is a valid user
        (e.g. it is not a master API key) this does not need to be specified and --api_key
        will be reused.
      synonyms:
      - --test_user_api_key
      args: !SimpleFlagArg
        name: TEST_USER_API_KEY
      optional: true
    - !Flag
      description: A user is needed to execute the tests. If --api_key is a master
        api key (i.e. not tied to a real user) and --test_user_api_key isn't specified,
        this user email will be used. This user will be created if needed.
      synonyms:
      - --test_user
      args: !SimpleFlagArg
        name: TEST_USER
      optional: true
    - !Flag
      description: Specify the maximum number of tests that will be run in parallel.
      synonyms:
      - --parallel_tests
      args: !SimpleFlagArg
        name: PARALLEL_TESTS
      optional: true
    - !Flag
      description: Increase output verbosity.
      synonyms:
      - -v
      - --verbose
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: Where the log file should be stored. Default is a file in your
        system's temp folder
      synonyms:
      - --log_file
      args: !SimpleFlagArg
        name: LOG_FILE
      optional: true
    - !Flag
      description: Target Galaxy instance URL/IP address
      synonyms:
      - -g
      - --galaxy
      args: !SimpleFlagArg
        name: GALAXY
      optional: true
    - !Flag
      description: Galaxy user email address
      synonyms:
      - -u
      - --user
      args: !SimpleFlagArg
        name: USER
      optional: true
    - !Flag
      description: Password for the Galaxy user
      synonyms:
      - -p
      - --password
      args: !SimpleFlagArg
        name: PASSWORD
      optional: true
    - !Flag
      description: Galaxy admin user API key (required if not defined in the tools
        list file)
      synonyms:
      - -a
      - --api_key
      args: !SimpleFlagArg
        name: API_KEY
      optional: true
    command:
    - shed-tools
    - test
    parent: *id001
    subcommands: []
    help_flag: !Flag
      description: show this help message and exit
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "usage: shed-tools test [-h] [-v] [--log_file LOG_FILE] [-g GALAXY]\
      \ [-u USER]\n                       [-p PASSWORD] [-a API_KEY] [-t TOOL_LIST_FILE]\n\
      \                       [-y TOOL_YAML] [--name NAME] [--owner OWNER]\n     \
      \                  [--revisions [REVISIONS [REVISIONS ...]]]\n             \
      \          [--toolshed TOOL_SHED_URL] [--test_json TEST_JSON]\n            \
      \           [--test_user_api_key TEST_USER_API_KEY]\n                      \
      \ [--test_user TEST_USER]\n                       [--parallel_tests PARALLEL_TESTS]\n\
      \noptional arguments:\n  -h, --help            show this help message and exit\n\
      \  -t TOOL_LIST_FILE, --toolsfile TOOL_LIST_FILE\n                        Tools\
      \ file to use (see tool_list.yaml.sample)\n  -y TOOL_YAML, --yaml_tool TOOL_YAML\n\
      \                        Install tool represented by yaml string\n  --name NAME\
      \           The name of the tool to install (only applicable if\n          \
      \              the tools file is not provided).\n  --owner OWNER         The\
      \ owner of the tool to install (only applicable if\n                       \
      \ the tools file is not provided).\n  --revisions [REVISIONS [REVISIONS ...]]\n\
      \                        The revisions of the tool repository that will be\n\
      \                        installed. All revisions must be specified after this\n\
      \                        flag by a space.Example: --revisions 0a5c7992b1ac\n\
      \                        f048033da666(Only applicable if the tools file is not\n\
      \                        provided).\n  --toolshed TOOL_SHED_URL\n          \
      \              The Tool Shed URL where to install the tool from. This\n    \
      \                    is applicable only if the tool info is provided as an\n\
      \                        option vs. in the tools file.\n  --test_json TEST_JSON\n\
      \                        Record tool test output to specified file. This file\n\
      \                        can be turned into reports with ``planemo test_reports\n\
      \                        <output.json>``.\n  --test_user_api_key TEST_USER_API_KEY\n\
      \                        A user is needed to execute the tests. This can be\n\
      \                        different the --api_key which is assumed to be an\n\
      \                        admin key. If --api_key is a valid user (e.g. it is\n\
      \                        not a master API key) this does not need to be\n  \
      \                      specified and --api_key will be reused.\n  --test_user\
      \ TEST_USER\n                        A user is needed to execute the tests.\
      \ If --api_key is\n                        a master api key (i.e. not tied to\
      \ a real user) and\n                        --test_user_api_key isn't specified,\
      \ this user email\n                        will be used. This user will be created\
      \ if needed.\n  --parallel_tests PARALLEL_TESTS\n                        Specify\
      \ the maximum number of tests that will be run\n                        in parallel.\n\
      \nGeneral options:\n  -v, --verbose         Increase output verbosity.\n  --log_file\
      \ LOG_FILE   Where the log file should be stored. Default is a file\n      \
      \                  in your system's temp folder\n\nGalaxy connection:\n  -g\
      \ GALAXY, --galaxy GALAXY\n                        Target Galaxy instance URL/IP\
      \ address\n  -u USER, --user USER  Galaxy user email address\n  -p PASSWORD,\
      \ --password PASSWORD\n                        Password for the Galaxy user\n\
      \  -a API_KEY, --api_key API_KEY\n                        Galaxy admin user\
      \ API key (required if not defined in\n                        the tools list\
      \ file)\n"
    generated_using: *id003
  help_flag: !Flag
    description: show this help message and exit
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "usage: shed-tools [-h] {install,update,test} ...\n\npositional arguments:\n\
    \  {install,update,test}\n    install             This installs tools in Galaxy\
    \ from the Tool Shed.Use\n                        shed-tools install --help for\
    \ more information\n    update              This updates all tools in Galaxy to\
    \ the latest\n                        revision. Use shed-tools update --help for\
    \ more\n                        information\n    test                This tests\
    \ the supplied list of tools in Galaxy. Use\n                        shed-tools\
    \ test --help for more information\n\noptional arguments:\n  -h, --help      \
    \      show this help message and exit\n"
  generated_using: *id003
subcommands: []
help_flag: !Flag
  description: show this help message and exit
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "usage: shed-tools update [-h] [-v] [--log_file LOG_FILE] [-g GALAXY] [-u\
  \ USER]\n                         [-p PASSWORD] [-a API_KEY] [-t TOOL_LIST_FILE]\n\
  \                         [-y TOOL_YAML] [--name NAME] [--owner OWNER]\n       \
  \                  [--revisions [REVISIONS [REVISIONS ...]]]\n                 \
  \        [--toolshed TOOL_SHED_URL]\n                         [--install_tool_dependencies]\n\
  \                         [--skip_install_resolver_dependencies]\n             \
  \            [--skip_install_repository_dependencies] [--test]\n               \
  \          [--test_existing] [--test_json TEST_JSON]\n                         [--test_user_api_key\
  \ TEST_USER]\n                         [--test_user TEST_USER]\n               \
  \          [--parallel_tests PARALLEL_TESTS]\n\noptional arguments:\n  -h, --help\
  \            show this help message and exit\n  -t TOOL_LIST_FILE, --toolsfile TOOL_LIST_FILE\n\
  \                        Tools file to use (see tool_list.yaml.sample)\n  -y TOOL_YAML,\
  \ --yaml_tool TOOL_YAML\n                        Install tool represented by yaml\
  \ string\n  --name NAME           The name of the tool to install (only applicable\
  \ if\n                        the tools file is not provided).\n  --owner OWNER\
  \         The owner of the tool to install (only applicable if\n               \
  \         the tools file is not provided).\n  --revisions [REVISIONS [REVISIONS\
  \ ...]]\n                        The revisions of the tool repository that will\
  \ be\n                        installed. All revisions must be specified after this\n\
  \                        flag by a space.Example: --revisions 0a5c7992b1ac\n   \
  \                     f048033da666(Only applicable if the tools file is not\n  \
  \                      provided).\n  --toolshed TOOL_SHED_URL\n                \
  \        The Tool Shed URL where to install the tool from. This\n              \
  \          is applicable only if the tool info is provided as an\n             \
  \           option vs. in the tools file.\n  --install_tool_dependencies\n     \
  \                   Turn on installation of tool dependencies using\n          \
  \              classic toolshed packages. Can be overwritten on a\n            \
  \            per-tool basis in the tools file.\n  --skip_install_resolver_dependencies\n\
  \                        Skip installing tool dependencies through resolver\n  \
  \                      (e.g. conda). Will be ignored on galaxy releases older\n\
  \                        than 16.07. Can be overwritten on a per-tool basis in\n\
  \                        the tools file\n  --skip_install_repository_dependencies\n\
  \                        Skip installing the repository dependencies.\n  --test\
  \                Run tool tests on install tools, requires Galaxy 18.05\n      \
  \                  or newer.\n  --test_existing       If testing tools during install,\
  \ also run tool tests\n                        on repositories already installed\
  \ (i.e. skipped\n                        repositories).\n  --test_json TEST_JSON\n\
  \                        If testing tools, record tool test output to specified\n\
  \                        file. This file can be turned into reports with\n     \
  \                   ``planemo test_reports <output.json>``.\n  --test_user_api_key\
  \ TEST_USER\n                        If testing tools, a user is needed to execute\
  \ the\n                        tests. This can be different the --api_key which\
  \ is\n                        assumed to be an admin key. If --api_key is a valid\n\
  \                        user (e.g. it is not a master API key) this does not\n\
  \                        need to be specified and --api_key will be reused.\n  --test_user\
  \ TEST_USER\n                        If testing tools, a user is needed to execute\
  \ the\n                        tests. If --api_key is a master api key (i.e. not\
  \ tied\n                        to a real user) and --test_user_api_key isn't\n\
  \                        specified, this user email will be used. This user\n  \
  \                      will be created if needed.\n  --parallel_tests PARALLEL_TESTS\n\
  \                        Specify the maximum number of tests that will be run\n\
  \                        in parallel.\n\nGeneral options:\n  -v, --verbose     \
  \    Increase output verbosity.\n  --log_file LOG_FILE   Where the log file should\
  \ be stored. Default is a file\n                        in your system's temp folder\n\
  \nGalaxy connection:\n  -g GALAXY, --galaxy GALAXY\n                        Target\
  \ Galaxy instance URL/IP address\n  -u USER, --user USER  Galaxy user email address\n\
  \  -p PASSWORD, --password PASSWORD\n                        Password for the Galaxy\
  \ user\n  -a API_KEY, --api_key API_KEY\n                        Galaxy admin user\
  \ API key (required if not defined in\n                        the tools list file)\n"
generated_using: *id003
