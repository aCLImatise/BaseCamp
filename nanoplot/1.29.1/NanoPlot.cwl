#!/usr/bin/env cwl-runner

baseCommand:
- NanoPlot
class: CommandLineTool
cwlVersion: v1.0
id: nanoplot
inputs:
- doc: Set the allowed number of threads to be used by the script
  id: threads
  inputBinding:
    prefix: --threads
  type: string
- doc: Write log messages also to terminal.
  id: verbose
  inputBinding:
    prefix: --verbose
  type: boolean
- doc: Store the extracted data in a pickle file for future plotting.
  id: store
  inputBinding:
    prefix: --store
  type: boolean
- doc: Store the extracted data in tab separated file.
  id: raw
  inputBinding:
    prefix: --raw
  type: boolean
- doc: Input data is one very large file.
  id: huge
  inputBinding:
    prefix: --huge
  type: boolean
- doc: Specify directory in which output has to be created.
  id: outdir
  inputBinding:
    prefix: --outdir
  type: string
- doc: Specify an optional prefix to be used for the output files.
  id: prefix
  inputBinding:
    prefix: --prefix
  type: string
- doc: Hide reads longer than length specified.
  id: maxlength
  inputBinding:
    prefix: --maxlength
  type: string
- doc: Hide reads shorter than length specified.
  id: minlength
  inputBinding:
    prefix: --minlength
  type: string
- doc: Drop outlier reads with extreme long length.
  id: drop_outliers
  inputBinding:
    prefix: --drop_outliers
  type: boolean
- doc: Reduce dataset to N reads by random sampling.
  id: down_sample
  inputBinding:
    prefix: --downsample
  type: string
- doc: Additionally show logarithmic scaling of lengths in plots.
  id: log_length
  inputBinding:
    prefix: --loglength
  type: boolean
- doc: Use qualities as theoretical percent identities.
  id: percent_qual
  inputBinding:
    prefix: --percentqual
  type: boolean
- doc: Use aligned read lengths rather than sequenced length (bam mode)
  id: a_length
  inputBinding:
    prefix: --alength
  type: boolean
- doc: Drop reads with an average quality lower than specified.
  id: min_qual
  inputBinding:
    prefix: --minqual
  type: string
- doc: Only take the N first hours of a run
  id: runtime_until
  inputBinding:
    prefix: --runtime_until
  type: string
- doc: '{1D,2D,1D2} Which read type to extract information about from summary. Options
    are 1D, 2D, 1D2'
  id: read_type
  inputBinding:
    prefix: --readtype
  type: boolean
- doc: Use if you want to split the summary file by barcode
  id: barcoded
  inputBinding:
    prefix: --barcoded
  type: boolean
- doc: Specify a valid matplotlib color for the plots
  id: color
  inputBinding:
    prefix: --color
  type: string
- doc: Specify a valid matplotlib colormap for the heatmap
  id: colormap
  inputBinding:
    prefix: --colormap
  type: string
- doc: Specify the output format of the plots.
  id: format
  inputBinding:
    prefix: --format
  type: string
- doc: '[{kde,hex,dot,pauvre} [{kde,hex,dot,pauvre} ...]] Specify which bivariate
    plots have to be made.'
  id: plots
  inputBinding:
    prefix: --plots
  type: boolean
- doc: List the colors which are available for plotting and exit.
  id: list_colors
  inputBinding:
    prefix: --listcolors
  type: boolean
- doc: List the colors which are available for plotting and exit.
  id: list_colormaps
  inputBinding:
    prefix: --listcolormaps
  type: boolean
- doc: Hide the N50 mark in the read length histogram
  id: no_n50
  inputBinding:
    prefix: --no-N50
  type: boolean
- doc: Show the N50 mark in the read length histogram
  id: n50
  inputBinding:
    prefix: --N50
  type: boolean
- doc: Add a title to all plots, requires quoting if using spaces
  id: title
  inputBinding:
    prefix: --title
  type: string
- doc: Scale the font of the plots by a factor
  id: font_scale
  inputBinding:
    prefix: --font_scale
  type: string
- doc: Set the dpi for saving images
  id: dpi
  inputBinding:
    prefix: --dpi
  type: string
- doc: Not adding Pearson R stats in some bivariate plots
  id: hide_stats
  inputBinding:
    prefix: --hide_stats
  type: boolean
- doc: Data is in one or more default fastq file(s).
  id: fast_q
  inputBinding:
    prefix: --fastq
  type:
    items: File
    type: array
- doc: Data is in one or more fasta file(s).
  id: fast_a
  inputBinding:
    prefix: --fasta
  type:
    items: File
    type: array
- doc: Data is in one or more fastq file(s) generated by albacore, MinKNOW or guppy
    with additional information concerning channel and time.
  id: fast_q_rich
  inputBinding:
    prefix: --fastq_rich
  type:
    items: File
    type: array
- doc: Data is in one or more fastq file(s) generated by albacore, MinKNOW or guppy
    with additional information concerning channel and time. Is extracted swiftly
    without elaborate checks.
  id: fast_q_minimal
  inputBinding:
    prefix: --fastq_minimal
  type:
    items: File
    type: array
- doc: Data is in one or more summary file(s) generated by albacore or guppy.
  id: summary
  inputBinding:
    prefix: --summary
  type:
    items: File
    type: array
- doc: Data is in one or more sorted bam file(s).
  id: bam
  inputBinding:
    prefix: --bam
  type:
    items: File
    type: array
- doc: Data is in one or more unmapped bam file(s).
  id: ub_am
  inputBinding:
    prefix: --ubam
  type:
    items: File
    type: array
- doc: Data is in one or more sorted cram file(s).
  id: cram
  inputBinding:
    prefix: --cram
  type:
    items: File
    type: array
- doc: Data is a pickle file stored earlier.
  id: pickle
  inputBinding:
    prefix: --pickle
  type: string
