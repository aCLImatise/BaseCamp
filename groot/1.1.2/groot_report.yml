&id001 !Command
command:
- groot
- report
positional: []
named:
- !Flag
  description: BAM file generated by groot alignment (will use STDIN if not provided)
  synonyms:
  - --bamFile
  args: !SimpleFlagArg
    name: string
  optional: true
- !Flag
  description: coverage cutoff for reporting ARGs (default 0.97)
  synonyms:
  - -c
  - --covCutoff
  args: !SimpleFlagArg
    name: float
  optional: true
- !Flag
  description: reports ARGs which don't have 5' or 3' coverage (overrides -c option)
  synonyms:
  - --lowCov
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: directory for to write/read the GROOT index files
  synonyms:
  - -i
  - --indexDir
  args: !SimpleFlagArg
    name: string
  optional: true
- !Flag
  description: filename for log file (default "groot.log")
  synonyms:
  - --log
  args: !SimpleFlagArg
    name: string
  optional: true
- !Flag
  description: number of processors to use (default 1)
  synonyms:
  - -p
  - --processors
  args: !SimpleFlagArg
    name: int
  optional: true
- !Flag
  description: create the files needed to profile GROOT using the go tool pprof
  synonyms:
  - --profiling
  args: !EmptyFlagArg {}
  optional: true
parent: &id002 !Command
  command:
  - groot
  positional: []
  named:
  - !Flag
    description: directory for to write/read the GROOT index files
    synonyms:
    - -i
    - --indexDir
    args: !SimpleFlagArg
      name: string
    optional: true
  - !Flag
    description: filename for log file (default "groot.log")
    synonyms:
    - --log
    args: !SimpleFlagArg
      name: string
    optional: true
  - !Flag
    description: number of processors to use (default 1)
    synonyms:
    - -p
    - --processors
    args: !SimpleFlagArg
      name: int
    optional: true
  - !Flag
    description: create the files needed to profile GROOT using the go tool pprof
    synonyms:
    - --profiling
    args: !EmptyFlagArg {}
    optional: true
  parent:
  subcommands:
  - *id001
  - !Command
    command:
    - groot
    - get
    positional: []
    named:
    - !Flag
      description: 'database to download (please choose: arg-annot/resfinder/card/groot-db/groot-core-db)
        (default "arg-annot")'
      synonyms:
      - -d
      - --database
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: the sequence identity used to cluster the database (only 90 available
        atm) (default "90")
      synonyms:
      - --identity
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: directory to save the database to (default ".")
      synonyms:
      - -o
      - --out
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: directory for to write/read the GROOT index files
      synonyms:
      - -i
      - --indexDir
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: filename for log file (default "groot.log")
      synonyms:
      - --log
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: number of processors to use (default 1)
      synonyms:
      - -p
      - --processors
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: create the files needed to profile GROOT using the go tool pprof
      synonyms:
      - --profiling
      args: !EmptyFlagArg {}
      optional: true
    parent: *id002
    subcommands: []
    usage: []
    help_flag: !Flag
      description: help for get
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Download a pre-clustered ARG database\n\nUsage:\n  groot get [flags]\n\
      \nFlags:\n  -d, --database string   database to download (please choose: arg-annot/resfinder/card/groot-db/groot-core-db)\
      \ (default \"arg-annot\")\n  -h, --help              help for get\n      --identity\
      \ string   the sequence identity used to cluster the database (only 90 available\
      \ atm) (default \"90\")\n  -o, --out string        directory to save the database\
      \ to (default \".\")\n\nGlobal Flags:\n  -i, --indexDir string   directory for\
      \ to write/read the GROOT index files\n      --log string        filename for\
      \ log file (default \"groot.log\")\n  -p, --processors int    number of processors\
      \ to use (default 1)\n      --profiling         create the files needed to profile\
      \ GROOT using the go tool pprof\n"
    generated_using: &id003
    - --help
  - !Command
    command:
    - groot
    - align
    positional: []
    named:
    - !Flag
      description: containment threshold for the LSH ensemble (default 0.99)
      synonyms:
      - -t
      - --contThresh
      args: !SimpleFlagArg
        name: float
      optional: true
    - !Flag
      description: if set, the input will be treated as fasta sequence(s) (experimental
        feature)
      synonyms:
      - --fasta
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: FASTQ file(s) to align
      synonyms:
      - -f
      - --fastq
      args: !SimpleFlagArg
        name: strings
      optional: true
    - !Flag
      description: directory to save variation graphs to (default "./groot-graphs-20200909213621")
      synonyms:
      - -g
      - --graphDir
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: minimum number of k-mers covering each base of a graph segment
        (default 1)
      synonyms:
      - -c
      - --minKmerCov
      args: !SimpleFlagArg
        name: float
      optional: true
    - !Flag
      description: if set, no exact alignment will be performed - graphs will be weighted
        using approximate read mappings
      synonyms:
      - --noAlign
      args: !EmptyFlagArg {}
      optional: true
    - !Flag
      description: directory for to write/read the GROOT index files
      synonyms:
      - -i
      - --indexDir
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: filename for log file (default "groot.log")
      synonyms:
      - --log
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: number of processors to use (default 1)
      synonyms:
      - -p
      - --processors
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: create the files needed to profile GROOT using the go tool pprof
      synonyms:
      - --profiling
      args: !EmptyFlagArg {}
      optional: true
    parent: *id002
    subcommands: []
    usage: []
    help_flag: !Flag
      description: help for align
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Sketch sequences, align to references and weight variation graphs\n\
      \nUsage:\n  groot align [flags]\n\nFlags:\n  -t, --contThresh float   containment\
      \ threshold for the LSH ensemble (default 0.99)\n      --fasta             \
      \ if set, the input will be treated as fasta sequence(s) (experimental feature)\n\
      \  -f, --fastq strings      FASTQ file(s) to align\n  -g, --graphDir string\
      \    directory to save variation graphs to (default \"./groot-graphs-20200909213621\"\
      )\n  -h, --help               help for align\n  -c, --minKmerCov float   minimum\
      \ number of k-mers covering each base of a graph segment (default 1)\n     \
      \ --noAlign            if set, no exact alignment will be performed - graphs\
      \ will be weighted using approximate read mappings\n\nGlobal Flags:\n  -i, --indexDir\
      \ string   directory for to write/read the GROOT index files\n      --log string\
      \        filename for log file (default \"groot.log\")\n  -p, --processors int\
      \    number of processors to use (default 1)\n      --profiling         create\
      \ the files needed to profile GROOT using the go tool pprof\n"
    generated_using: *id003
  - !Command
    command:
    - groot
    - index
    positional: []
    named:
    - !Flag
      description: size of k-mer (default 31)
      synonyms:
      - -k
      - --kmerSize
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: maxK in the LSH Ensemble (default 4)
      synonyms:
      - -y
      - --maxK
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: max number of identical neighbouring sketches permitted in any
        graph traversal (default 30)
      synonyms:
      - --maxSketchSpan
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: directory containing the clustered references (MSA files) - required
      synonyms:
      - -m
      - --msaDir
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: number of partitions in the LSH Ensemble (default 8)
      synonyms:
      - -x
      - --numPart
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: size of MinHash sketch (default 21)
      synonyms:
      - -s
      - --sketchSize
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: size of window to sketch graph traversals with (default 100)
      synonyms:
      - -w
      - --windowSize
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: directory for to write/read the GROOT index files
      synonyms:
      - -i
      - --indexDir
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: filename for log file (default "groot.log")
      synonyms:
      - --log
      args: !SimpleFlagArg
        name: string
      optional: true
    - !Flag
      description: number of processors to use (default 1)
      synonyms:
      - -p
      - --processors
      args: !SimpleFlagArg
        name: int
      optional: true
    - !Flag
      description: create the files needed to profile GROOT using the go tool pprof
      synonyms:
      - --profiling
      args: !EmptyFlagArg {}
      optional: true
    parent: *id002
    subcommands: []
    usage: []
    help_flag: !Flag
      description: help for index
      synonyms:
      - -h
      - --help
      args: !EmptyFlagArg {}
      optional: true
    usage_flag:
    version_flag:
    help_text: "Convert a set of clustered reference sequences to variation graphs\
      \ and then index them\n\nUsage:\n  groot index [flags]\n\nFlags:\n  -h, --help\
      \                help for index\n  -k, --kmerSize int        size of k-mer (default\
      \ 31)\n  -y, --maxK int            maxK in the LSH Ensemble (default 4)\n  \
      \    --maxSketchSpan int   max number of identical neighbouring sketches permitted\
      \ in any graph traversal (default 30)\n  -m, --msaDir string       directory\
      \ containing the clustered references (MSA files) - required\n  -x, --numPart\
      \ int         number of partitions in the LSH Ensemble (default 8)\n  -s, --sketchSize\
      \ int      size of MinHash sketch (default 21)\n  -w, --windowSize int     \
      \ size of window to sketch graph traversals with (default 100)\n\nGlobal Flags:\n\
      \  -i, --indexDir string   directory for to write/read the GROOT index files\n\
      \      --log string        filename for log file (default \"groot.log\")\n \
      \ -p, --processors int    number of processors to use (default 1)\n      --profiling\
      \         create the files needed to profile GROOT using the go tool pprof\n"
    generated_using: *id003
  usage: []
  help_flag: !Flag
    description: help for groot
    synonyms:
    - -h
    - --help
    args: !EmptyFlagArg {}
    optional: true
  usage_flag:
  version_flag:
  help_text: "\n#####################################################################################\n\
    \t\tGROOT: Graphing Resistance genes Out Of meTagenomes\n#####################################################################################\n\
    \n GROOT is a tool to type Antibiotic Resistance Genes (ARGs) in metagenomic samples.\n\
    \n It combines variation graph representation of gene sets with an LSH indexing\
    \ scheme\n to allow for fast classification of metagenomic reads. Subsequent hierarchical\
    \ local\n alignment of classified reads against graph traversals facilitates accurate\
    \ reconstruction\n of full-length gene sequences using a simple scoring scheme.\n\
    \n GROOT can output an ARG alignment file, as well as a typing report and the\
    \ variation graphs\n with aligned reads.\n\nUsage:\n  groot [command]\n\nAvailable\
    \ Commands:\n  align       Sketch sequences, align to references and weight variation\
    \ graphs\n  get         Download a pre-clustered ARG database\n  help        Help\
    \ about any command\n  iamgroot    I am groot\n  index       Convert a set of\
    \ clustered reference sequences to variation graphs and then index them\n  report\
    \      Generate a report from the output of groot align\n  version     Prints\
    \ current version number and exits\n\nFlags:\n  -h, --help              help for\
    \ groot\n  -i, --indexDir string   directory for to write/read the GROOT index\
    \ files\n      --log string        filename for log file (default \"groot.log\"\
    )\n  -p, --processors int    number of processors to use (default 1)\n      --profiling\
    \         create the files needed to profile GROOT using the go tool pprof\n\n\
    Use \"groot [command] --help\" for more information about a command.\n"
  generated_using: *id003
subcommands: []
usage: []
help_flag: !Flag
  description: help for report
  synonyms:
  - -h
  - --help
  args: !EmptyFlagArg {}
  optional: true
usage_flag:
version_flag:
help_text: "Generate a report from the output of groot align.\n\n\tThis will report\
  \ gene, read count, gene length, coverage cigar to STDOUT as tab separated values.\n\
  \n\tCoverage cigar is present to help debug and indicates if the reference gene\
  \ is covered (M) or not (D).\n\nUsage:\n  groot report [flags]\n\nFlags:\n     \
  \ --bamFile string    BAM file generated by groot alignment (will use STDIN if not\
  \ provided)\n  -c, --covCutoff float   coverage cutoff for reporting ARGs (default\
  \ 0.97)\n  -h, --help              help for report\n      --lowCov            reports\
  \ ARGs which don't have 5' or 3' coverage (overrides -c option)\n\nGlobal Flags:\n\
  \  -i, --indexDir string   directory for to write/read the GROOT index files\n \
  \     --log string        filename for log file (default \"groot.log\")\n  -p, --processors\
  \ int    number of processors to use (default 1)\n      --profiling         create\
  \ the files needed to profile GROOT using the go tool pprof\n"
generated_using: *id003
