!Command
command:
- bedGraphToBigWig
positional:
- !Positional
  description: ''
  position: 0
  name: in.bedGraph
  optional: false
- !Positional
  description: ''
  position: 1
  name: chrom.sizes
  optional: false
named:
- !Flag
  description: '- Number of items to bundle in r-tree.  Default 256'
  synonyms:
  - -blockSize
  args: !SimpleFlagArg
    name: N
  optional: true
- !Flag
  description: '- Number of data points bundled at lowest level. Default 1024'
  synonyms:
  - -itemsPerSlot
  args: !SimpleFlagArg
    name: N
  optional: true
- !Flag
  description: '- If set, do not use compression.'
  synonyms:
  - -unc
  args: !EmptyFlagArg {}
  optional: true
parent:
subcommands: []
usage: []
help_flag:
usage_flag:
version_flag:
help_text: "bedGraphToBigWig v 4 - Convert a bedGraph file to bigWig format.\nusage:\n\
  \   bedGraphToBigWig in.bedGraph chrom.sizes out.bw\nwhere in.bedGraph is a four\
  \ column file in the format:\n      <chrom> <start> <end> <value>\nand chrom.sizes\
  \ is a two-column file/URL: <chromosome name> <size in bases>\nand out.bw is the\
  \ output indexed big wig file.\nIf the assembly <db> is hosted by UCSC, chrom.sizes\
  \ can be a URL like\n  http://hgdownload.soe.ucsc.edu/goldenPath/<db>/bigZips/<db>.chrom.sizes\n\
  or you may use the script fetchChromSizes to download the chrom.sizes file.\nIf\
  \ not hosted by UCSC, a chrom.sizes file can be generated by running\ntwoBitInfo\
  \ on the assembly .2bit file.\nThe input bedGraph file must be sorted, use the unix\
  \ sort command:\n  sort -k1,1 -k2,2n unsorted.bedGraph > sorted.bedGraph\noptions:\n\
  \   -blockSize=N - Number of items to bundle in r-tree.  Default 256\n   -itemsPerSlot=N\
  \ - Number of data points bundled at lowest level. Default 1024\n   -unc - If set,\
  \ do not use compression.\n"
generated_using: []
