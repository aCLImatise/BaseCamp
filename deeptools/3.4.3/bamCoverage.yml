!Command
positional:
- !Positional
  description: ''
  position: 0
  name: An
  optional: false
- !Positional
  description: ''
  position: 1
  name: example
  optional: false
- !Positional
  description: ''
  position: 2
  name: usage
  optional: false
- !Positional
  description: ''
  position: 3
  name: is
  optional: false
named:
- !Flag
  description: 'file, -b BAM file BAM file to process (default: None)'
  synonyms:
  - --bam
  args: !SimpleFlagArg
    name: BAM
  optional: true
- !Flag
  description: 'Output file name. (default: None)'
  synonyms:
  - --outFileName
  - -o
  args: !SimpleFlagArg
    name: FILENAME
  optional: true
- !Flag
  description: 'Output file type. Either "bigwig" or "bedgraph". (default: bigwig)'
  synonyms:
  - --outFileFormat
  - -of
  args: !ChoiceFlagArg
    choices: !!set
      ? bedgraph
      ? bigwig
  optional: true
- !Flag
  description: 'Number of processors to use. Type "max/2" to use half the maximum
    number of processors or "max" to use all available processors. (Default: 1)'
  synonyms:
  - --numberOfProcessors
  - -p
  args: !SimpleFlagArg
    name: INT
  optional: true
- !Flag
  description: 'Set to see processing messages. (default: False)'
  synonyms:
  - --verbose
  - -v
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'The effective genome size is the portion of the genome that is mappable.
    Large fractions of the genome are stretches of NNNN that should be discarded.
    Also, if repetitive regions were not included in the mapping of reads, the effective
    genome size needs to be adjusted accordingly. A table of values is available here:
    http ://deeptools.readthedocs.io/en/latest/content/feature/ effectiveGenomeSize.html
    . (default: None)'
  synonyms:
  - --effectiveGenomeSize
  args: !SimpleFlagArg
    name: EFFECTIVEGENOMESIZE
  optional: true
- !Flag
  description: 'Use one of the entered methods to normalize the number of reads per
    bin. By default, no normalization is performed. RPKM = Reads Per Kilobase per
    Million mapped reads; CPM = Counts Per Million mapped reads, same as CPM in RNA-seq;
    BPM = Bins Per Million mapped reads, same as TPM in RNA-seq; RPGC = reads per
    genomic content (1x normalization); Mapped reads are considered after blacklist
    filtering (if applied). RPKM (per bin) = number of reads per bin / (number of
    mapped reads (in millions) * bin length (kb)). CPM (per bin) = number of reads
    per bin / number of mapped reads (in millions). BPM (per bin) = number of reads
    per bin / sum of all reads per bin (in millions). RPGC (per bin) = number of reads
    per bin / scaling factor for 1x average coverage. None = the default and equivalent
    to not setting this option at all. This scaling factor, in turn, is determined
    from the sequencing depth: (total number of mapped reads * fragment length) /
    effective genome size. The scaling factor used is the inverse of the sequencing
    depth computed for the sample to match the 1x coverage. This option requires --effectiveGenomeSize.
    Each read is considered independently, if you want to only count one mate from
    a pair in paired-end data, then use the --samFlagInclude/--samFlagExclude options.
    (Default: None)'
  synonyms:
  - --normalizeUsing
  args: !ChoiceFlagArg
    choices: !!set
      ? RPGC
      ? BPM
      ? None
      ? CPM
      ? RPKM
  optional: true
- !Flag
  description: 'Instead of computing scaling factors based on a sampling of the reads,
    process all of the reads to determine the exact number that will be used in the
    output. This requires significantly more time to compute, but will produce more
    accurate scaling factors in cases where alignments that are being filtered are
    rare and lumped together. In other words, this is only needed when region-based
    sampling is expected to produce incorrect results. (default: False)'
  synonyms:
  - --exactScaling
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'A list of space-delimited chromosome names containing those chromosomes
    that should be excluded for computing the normalization. This is useful when considering
    samples with unequal coverage across chromosomes, like male samples. An usage
    examples is --ignoreForNormalization chrX chrM. (default: None)'
  synonyms:
  - --ignoreForNormalization
  - -ignore
  args: !RepeatFlagArg
    name: IGNOREFORNORMALIZATION
  optional: true
- !Flag
  description: 'This parameter determines if non-covered regions (regions without
    overlapping reads) in a BAM file should be skipped. The default is to treat those
    regions as having a value of zero. The decision to skip non-covered regions depends
    on the interpretation of the data. Non-covered regions may represent, for example,
    repetitive regions that should be skipped. (default: False)'
  synonyms:
  - --skipNonCoveredRegions
  - --skipNAs
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'bp The smooth length defines a window, larger than the binSize, to
    average the number of reads. For example, if the --binSize is set to 20 and the
    --smoothLength is set to 60, then, for each bin, the average of the bin and its
    left and right neighbors is considered. Any value smaller than --binSize will
    be ignored and no smoothing will be applied. (default: None)'
  synonyms:
  - --smoothLength
  args: !SimpleFlagArg
    name: INT
  optional: true
- !Flag
  description: '[INT bp], -e [INT bp] This parameter allows the extension of reads
    to fragment size. If set, each read is extended, without exception. *NOTE*: This
    feature is generally NOT recommended for spliced-read data, such as RNA-seq, as
    it would extend reads over skipped regions. *Single- end*: Requires a user specified
    value for the final fragment length. Reads that already exceed this fragment length
    will not be extended. *Paired-end*: Reads with mates are always extended to match
    the fragment size defined by the two read mates. Unmated reads, mate reads that
    map too far apart (>4x fragment length) or even map to different chromosomes are
    treated like single-end reads. The input of a fragment length value is optional.
    If no value is specified, it is estimated from the data (mean of the fragment
    size of all mate reads). (default: False)'
  synonyms:
  - --extendReads
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: "If set, reads that have the same orientation and start position will\
    \ be considered only once. If reads are paired, the mate's position also has to\
    \ coincide to ignore a read. (default: False)"
  synonyms:
  - --ignoreDuplicates
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'If set, only reads that have a mapping quality score of at least this
    are considered. (default: None)'
  synonyms:
  - --minMappingQuality
  args: !SimpleFlagArg
    name: INT
  optional: true
- !Flag
  description: 'By adding this option, reads are centered with respect to the fragment
    length. For paired-end data, the read is centered at the fragment length defined
    by the two ends of the fragment. For single-end data, the given fragment length
    is used. This option is useful to get a sharper signal around enriched regions.
    (default: False)'
  synonyms:
  - --centerReads
  args: !EmptyFlagArg {}
  optional: true
- !Flag
  description: 'Include reads based on the SAM flag. For example, to get only reads
    that are the first mate, use a flag of 64. This is useful to count properly paired
    reads only once, as otherwise the second mate will be also considered for the
    coverage. (Default: None)'
  synonyms:
  - --samFlagInclude
  args: !SimpleFlagArg
    name: INT
  optional: true
- !Flag
  description: 'Exclude reads based on the SAM flag. For example, to get only reads
    that map to the forward strand, use --samFlagExclude 16, where 16 is the SAM flag
    for reads that map to the reverse strand. (Default: None)'
  synonyms:
  - --samFlagExclude
  args: !SimpleFlagArg
    name: INT
  optional: true
- !Flag
  description: 'The minimum fragment length needed for read/pair inclusion. This option
    is primarily useful in ATACseq experiments, for filtering mono- or di-nucleosome
    fragments. (Default: 0)'
  synonyms:
  - --minFragmentLength
  args: !SimpleFlagArg
    name: INT
  optional: true
- !Flag
  description: 'The maximum fragment length needed for read/pair inclusion. (Default:
    0)'
  synonyms:
  - --maxFragmentLength
  args: !SimpleFlagArg
    name: INT
  optional: true
command:
- bamCoverage
parent:
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "usage: An example usage is:$ bamCoverage -b reads.bam -o coverage.bw\n\
  \nThis tool takes an alignment of reads or fragments as input (BAM file) and\ngenerates\
  \ a coverage track (bigWig or bedGraph) as output. The coverage is\ncalculated as\
  \ the number of reads per bin, where bins are short consecutive\ncounting windows\
  \ of a defined size. It is possible to extended the length of\nthe reads to better\
  \ reflect the actual fragment length. *bamCoverage* offers\nnormalization by scaling\
  \ factor, Reads Per Kilobase per Million mapped reads\n(RPKM), counts per million\
  \ (CPM), bins per million mapped reads (BPM) and 1x\ndepth (reads per genome coverage,\
  \ RPGC).\n\nRequired arguments:\n  --bam BAM file, -b BAM file\n               \
  \         BAM file to process (default: None)\n\nOutput:\n  --outFileName FILENAME,\
  \ -o FILENAME\n                        Output file name. (default: None)\n  --outFileFormat\
  \ {bigwig,bedgraph}, -of {bigwig,bedgraph}\n                        Output file\
  \ type. Either \"bigwig\" or \"bedgraph\".\n                        (default: bigwig)\n\
  \nOptional arguments:\n  --help, -h            show this help message and exit\n\
  \  --scaleFactor SCALEFACTOR\n                        The computed scaling factor\
  \ (or 1, if not applicable)\n                        will be multiplied by this.\
  \ (Default: 1.0)\n  --MNase               Determine nucleosome positions from MNase-seq\
  \ data.\n                        Only 3 nucleotides at the center of each fragment\
  \ are\n                        counted. The fragment ends are defined by the two\
  \ mate\n                        reads. Only fragment lengthsbetween 130 - 200 bp\
  \ are\n                        considered to avoid dinucleosomes or other artifacts.\n\
  \                        By default, any fragments smaller or larger than this\n\
  \                        are ignored. To over-ride this, use the\n             \
  \           --minFragmentLength and --maxFragmentLength options,\n             \
  \           which will default to 130 and 200 if not otherwise\n               \
  \         specified in the presence of --MNase. *NOTE*: Requires\n             \
  \           paired-end data. A bin size of 1 is recommended.\n                 \
  \       (default: False)\n  --Offset INT [INT ...]\n                        Uses\
  \ this offset inside of each read as the signal.\n                        This is\
  \ useful in cases like RiboSeq or GROseq, where\n                        the signal\
  \ is 12, 15 or 0 bases past the start of the\n                        read. This\
  \ can be paired with the --filterRNAstrand\n                        option. Note\
  \ that negative values indicate offsets\n                        from the end of\
  \ each read. A value of 1 indicates the\n                        first base of the\
  \ alignment (taking alignment\n                        orientation into account).\
  \ Likewise, a value of -1 is\n                        the last base of the alignment.\
  \ An offset of 0 is not\n                        permitted. If two values are specified,\
  \ then they will\n                        be used to specify a range of positions.\
  \ Note that\n                        specifying something like --Offset 5 -1 will\
  \ result in\n                        the 5th through last position being used, which\
  \ is\n                        equivalent to trimming 4 bases from the 5-prime end\
  \ of\n                        alignments. Note that if you specify --centerReads,\n\
  \                        the centering will be performed before the offset.\n  \
  \                      (default: None)\n  --filterRNAstrand {forward,reverse}\n\
  \                        Selects RNA-seq reads (single-end or paired-end)\n    \
  \                    originating from genes on the given strand. This\n        \
  \                option assumes a standard dUTP-based library\n                \
  \        preparation (that is, --filterRNAstrand=forward keeps\n               \
  \         minus-strand reads, which originally came from genes\n               \
  \         on the forward strand using a dUTP-based method).\n                  \
  \      Consider using --samExcludeFlag instead for filtering\n                 \
  \       by strand in other contexts. (default: None)\n  --version             show\
  \ program's version number and exit\n  --binSize INT bp, -bs INT bp\n          \
  \              Size of the bins, in bases, for the output of the\n             \
  \           bigwig/bedgraph file. (Default: 50)\n  --region CHR:START:END, -r CHR:START:END\n\
  \                        Region of the genome to limit the operation to - this\n\
  \                        is useful when testing parameters to reduce the\n     \
  \                   computing time. The format is chr:start:end, for\n         \
  \               example --region chr10 or --region\n                        chr10:456700:891000.\
  \ (default: None)\n  --blackListFileName BED file [BED file ...], -bl BED file [BED\
  \ file ...]\n                        A BED or GTF file containing regions that should\
  \ be\n                        excluded from all analyses. Currently this works by\n\
  \                        rejecting genomic chunks that happen to overlap an\n  \
  \                      entry. Consequently, for BAM files, if a read\n         \
  \               partially overlaps a blacklisted region or a fragment\n        \
  \                spans over it, then the read/fragment might still be\n        \
  \                considered. Please note that you should adjust the\n          \
  \              effective genome size, if relevant. (default: None)\n  --numberOfProcessors\
  \ INT, -p INT\n                        Number of processors to use. Type \"max/2\"\
  \ to use half\n                        the maximum number of processors or \"max\"\
  \ to use all\n                        available processors. (Default: 1)\n  --verbose,\
  \ -v         Set to see processing messages. (default: False)\n\nRead coverage normalization\
  \ options:\n  --effectiveGenomeSize EFFECTIVEGENOMESIZE\n                      \
  \  The effective genome size is the portion of the genome\n                    \
  \    that is mappable. Large fractions of the genome are\n                     \
  \   stretches of NNNN that should be discarded. Also, if\n                     \
  \   repetitive regions were not included in the mapping of\n                   \
  \     reads, the effective genome size needs to be adjusted\n                  \
  \      accordingly. A table of values is available here: http\n                \
  \        ://deeptools.readthedocs.io/en/latest/content/feature/\n              \
  \          effectiveGenomeSize.html . (default: None)\n  --normalizeUsing {RPKM,CPM,BPM,RPGC,None}\n\
  \                        Use one of the entered methods to normalize the number\n\
  \                        of reads per bin. By default, no normalization is\n   \
  \                     performed. RPKM = Reads Per Kilobase per Million\n       \
  \                 mapped reads; CPM = Counts Per Million mapped reads,\n       \
  \                 same as CPM in RNA-seq; BPM = Bins Per Million mapped\n      \
  \                  reads, same as TPM in RNA-seq; RPGC = reads per\n           \
  \             genomic content (1x normalization); Mapped reads are\n           \
  \             considered after blacklist filtering (if applied).\n             \
  \           RPKM (per bin) = number of reads per bin / (number of\n            \
  \            mapped reads (in millions) * bin length (kb)). CPM\n              \
  \          (per bin) = number of reads per bin / number of mapped\n            \
  \            reads (in millions). BPM (per bin) = number of reads\n            \
  \            per bin / sum of all reads per bin (in millions). RPGC\n          \
  \              (per bin) = number of reads per bin / scaling factor\n          \
  \              for 1x average coverage. None = the default and\n               \
  \         equivalent to not setting this option at all. This\n                 \
  \       scaling factor, in turn, is determined from the\n                      \
  \  sequencing depth: (total number of mapped reads *\n                        fragment\
  \ length) / effective genome size. The scaling\n                        factor used\
  \ is the inverse of the sequencing depth\n                        computed for the\
  \ sample to match the 1x coverage. This\n                        option requires\
  \ --effectiveGenomeSize. Each read is\n                        considered independently,\
  \ if you want to only count\n                        one mate from a pair in paired-end\
  \ data, then use the\n                        --samFlagInclude/--samFlagExclude\
  \ options. (Default:\n                        None)\n  --exactScaling        Instead\
  \ of computing scaling factors based on a\n                        sampling of the\
  \ reads, process all of the reads to\n                        determine the exact\
  \ number that will be used in the\n                        output. This requires\
  \ significantly more time to\n                        compute, but will produce\
  \ more accurate scaling\n                        factors in cases where alignments\
  \ that are being\n                        filtered are rare and lumped together.\
  \ In other words,\n                        this is only needed when region-based\
  \ sampling is\n                        expected to produce incorrect results. (default:\n\
  \                        False)\n  --ignoreForNormalization IGNOREFORNORMALIZATION\
  \ [IGNOREFORNORMALIZATION ...], -ignore IGNOREFORNORMALIZATION [IGNOREFORNORMALIZATION\
  \ ...]\n                        A list of space-delimited chromosome names containing\n\
  \                        those chromosomes that should be excluded for\n       \
  \                 computing the normalization. This is useful when\n           \
  \             considering samples with unequal coverage across\n               \
  \         chromosomes, like male samples. An usage examples is\n               \
  \         --ignoreForNormalization chrX chrM. (default: None)\n  --skipNonCoveredRegions,\
  \ --skipNAs\n                        This parameter determines if non-covered regions\n\
  \                        (regions without overlapping reads) in a BAM file\n   \
  \                     should be skipped. The default is to treat those\n       \
  \                 regions as having a value of zero. The decision to\n         \
  \               skip non-covered regions depends on the interpretation\n       \
  \                 of the data. Non-covered regions may represent, for\n        \
  \                example, repetitive regions that should be skipped.\n         \
  \               (default: False)\n  --smoothLength INT bp\n                    \
  \    The smooth length defines a window, larger than the\n                     \
  \   binSize, to average the number of reads. For example,\n                    \
  \    if the --binSize is set to 20 and the --smoothLength\n                    \
  \    is set to 60, then, for each bin, the average of the\n                    \
  \    bin and its left and right neighbors is considered.\n                     \
  \   Any value smaller than --binSize will be ignored and\n                     \
  \   no smoothing will be applied. (default: None)\n\nRead processing options:\n\
  \  --extendReads [INT bp], -e [INT bp]\n                        This parameter allows\
  \ the extension of reads to\n                        fragment size. If set, each\
  \ read is extended, without\n                        exception. *NOTE*: This feature\
  \ is generally NOT\n                        recommended for spliced-read data, such\
  \ as RNA-seq, as\n                        it would extend reads over skipped regions.\
  \ *Single-\n                        end*: Requires a user specified value for the\
  \ final\n                        fragment length. Reads that already exceed this\n\
  \                        fragment length will not be extended. *Paired-end*:\n \
  \                       Reads with mates are always extended to match the\n    \
  \                    fragment size defined by the two read mates. Unmated\n    \
  \                    reads, mate reads that map too far apart (>4x fragment\n  \
  \                      length) or even map to different chromosomes are\n      \
  \                  treated like single-end reads. The input of a fragment\n    \
  \                    length value is optional. If no value is specified, it\n  \
  \                      is estimated from the data (mean of the fragment size\n \
  \                       of all mate reads). (default: False)\n  --ignoreDuplicates\
  \    If set, reads that have the same orientation and start\n                  \
  \      position will be considered only once. If reads are\n                   \
  \     paired, the mate's position also has to coincide to\n                    \
  \    ignore a read. (default: False)\n  --minMappingQuality INT\n              \
  \          If set, only reads that have a mapping quality score\n              \
  \          of at least this are considered. (default: None)\n  --centerReads   \
  \      By adding this option, reads are centered with respect\n                \
  \        to the fragment length. For paired-end data, the read\n               \
  \         is centered at the fragment length defined by the two\n              \
  \          ends of the fragment. For single-end data, the given\n              \
  \          fragment length is used. This option is useful to get\n             \
  \           a sharper signal around enriched regions. (default:\n              \
  \          False)\n  --samFlagInclude INT  Include reads based on the SAM flag.\
  \ For example, to\n                        get only reads that are the first mate,\
  \ use a flag of\n                        64. This is useful to count properly paired\
  \ reads only\n                        once, as otherwise the second mate will be\
  \ also\n                        considered for the coverage. (Default: None)\n \
  \ --samFlagExclude INT  Exclude reads based on the SAM flag. For example, to\n \
  \                       get only reads that map to the forward strand, use\n   \
  \                     --samFlagExclude 16, where 16 is the SAM flag for\n      \
  \                  reads that map to the reverse strand. (Default: None)\n  --minFragmentLength\
  \ INT\n                        The minimum fragment length needed for read/pair\n\
  \                        inclusion. This option is primarily useful in ATACseq\n\
  \                        experiments, for filtering mono- or di-nucleosome\n   \
  \                     fragments. (Default: 0)\n  --maxFragmentLength INT\n     \
  \                   The maximum fragment length needed for read/pair\n         \
  \               inclusion. (Default: 0)\n"
generated_using:
- --help
