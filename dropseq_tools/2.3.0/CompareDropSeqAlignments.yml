!Command
positional: []
named:
- !Flag
  description: (default 4g)
  synonyms:
  - -m
  args: !SimpleFlagArg
    name: jvm_heap_size
  optional: true
- !Flag
  description: final command line before executing
  synonyms:
  - -v
  args: !SimpleFlagArg
    name: echo
  optional: true
command:
- CompareDropSeqAlignments
parent:
subcommands: []
help_flag:
usage_flag:
version_flag:
help_text: "USAGE: /tmp/tmpq7xcnqce/bin/CompareDropSeqAlignments [-m <jvm_heap_size>]\
  \ [-v] program args...\n       -m <jvm_heap_size> (default 4g)\n       -v echo final\
  \ command line before executing\n\nProgram options:\nUSAGE: CompareDropSeqAlignments\
  \ [options]\n\nCompare two dropseq alignments across different sets of annotations\
  \ or genome builds to see what genes present in the\noriginal set are lost in the\
  \ second set.  The input data should be the same set of data aligned to different\
  \ references,\non either the same genome build or different builds.  If the second\
  \ input is aligned with secondary reads emitted during\nalignment,all contigs for\
  \ a mapping for non-unique contigs will be listed.  This can be helpful to detect\
  \ if additional\ncontigs [such as alternative haplotypes] create mapping problems\
  \ that make some subset of genes invisible to the dropseq\ntoolkit.\nVersion: 2.3.0(34e6572_1555443285)\n\
  \n\nOptions:\n\n--help\n-h                            Displays options specific\
  \ to this tool.\n\n--stdhelp\n-H                            Displays options specific\
  \ to this tool AND options common to all Picard command line\n                 \
  \             tools.\n\n--version                     Displays program version.\n\
  \nINPUT_1=File                  The input SAM or BAM file to analyze.  If coordinate\
  \ sorted this will save time, but is\n                              not required.\
  \  Required. \n\nINPUT_2=File                  The comparison input SAM or BAM file\
  \ to analyze.  If coordinate sorted this will save\n                           \
  \   time, but is not required.  Required. \n\nCONTIG_REPORT=File            Output\
  \ file that maps the contig the read uniquely mapped to in INPUT_1, and the contig\n\
  \                              the read mapped to in INPUT_2, with reads partitioned\
  \ into groups that did/did not\n                              remained uniquely\
  \ mapped.  This supports zipped formats like gz and bz2.  Default value:\n     \
  \                         null. \n\nGENE_REPORT=File              Output file that\
  \ maps the gene the read uniquely mapped to in INPUT_1, and the gene the\n     \
  \                         read mapped to in INPUT_2, with reads partitioned into\
  \ groups that did/did not remained\n                              uniquely mapped.\
  \  This supports zipped formats like gz and bz2.  Default value: null. \n\nGENE_EXON_TAG=String\
  \          Tag to extract  Default value: GE. This option can be set to 'null' to\
  \ clear the default\n                              value. \n\nREAD_QUALITY=Integer\
  \          The map quality for a read to be considered uniquely mapped.  Default\
  \ value: 10. This\n                              option can be set to 'null' to\
  \ clear the default value. \n\nTRIM_CONTIG_STRING=String     Trim this string from\
  \ the contig names of both BAMs to make contig names comparable.  This\n       \
  \                       is useful when one alignment strategy calls the first contig\
  \ 'chr1' and the second\n                              strategy '1'  Default value:\
  \ chr. This option can be set to 'null' to clear the default\n                 \
  \             value. \n\n"
generated_using:
- --help
